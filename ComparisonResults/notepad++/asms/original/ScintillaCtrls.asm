; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\ScitillaComponent\ScintillaCtrls.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG143447 DB	'12 12 56 1', 00H
	ORG $+1
$SG143448 DB	' ', 09H, 'c #FFFFFF', 00H
$SG143449 DB	'.', 09H, 'c #8AB2E9', 00H
$SG143450 DB	'+', 09H, 'c #CCDCF6', 00H
$SG143451 DB	'@', 09H, 'c #80ABEA', 00H
$SG143452 DB	'#', 09H, 'c #7DA9E8', 00H
$SG143453 DB	'$', 09H, 'c #C7DAF3', 00H
$SG143454 DB	'%', 09H, 'c #79A7E6', 00H
$SG143455 DB	'&', 09H, 'c #ADC8EF', 00H
$SG143456 DB	'*', 09H, 'c #87B0E8', 00H
$SG143457 DB	'=', 09H, 'c #BBD2F0', 00H
$SG143458 DB	'-', 09H, 'c #6EA0E2', 00H
$SG143459 DB	';', 09H, 'c #A8C7EE', 00H
$SG143460 DB	'>', 09H, 'c #A3C2ED', 00H
$SG143461 DB	',', 09H, 'c #75A4E3', 00H
$SG143462 DB	'''', 09H, 'c #A7C4EB', 00H
$SG143463 DB	')', 09H, 'c #6297E1', 00H
$SG143464 DB	'!', 09H, 'c #A1C1EC', 00H
$SG143465 DB	'~', 09H, 'c #92B7E8', 00H
$SG143466 DB	'{', 09H, 'c #99BBE9', 00H
$SG143467 DB	']', 09H, 'c #6197DD', 00H
$SG143468 DB	'^', 09H, 'c #96B9E6', 00H
$SG143469 DB	'/', 09H, 'c #538EDB', 00H
$SG143470 DB	'(', 09H, 'c #99BBEA', 00H
$SG143471 DB	'_', 09H, 'c #80AAE3', 00H
$SG143472 DB	':', 09H, 'c #81ABE3', 00H
$SG143473 DB	'<', 09H, 'c #8AB1E4', 00H
$SG143474 DB	'[', 09H, 'c #4B88D6', 00H
$SG143475 DB	'}', 09H, 'c #4882D1', 00H
$SG143476 DB	'|', 09H, 'c #4384D6', 00H
$SG143477 DB	'1', 09H, 'c #90B5E7', 00H
$SG143478 DB	'2', 09H, 'c #74A3E0', 00H
$SG143479 DB	'3', 09H, 'c #77A4E0', 00H
$SG143480 DB	'4', 09H, 'c #81ABE2', 00H
$SG143481 DB	'5', 09H, 'c #437FD3', 00H
$SG143482 DB	'6', 09H, 'c #7FA2DF', 00H
$SG143483 DB	'7', 09H, 'c #3577D2', 00H
$SG143484 DB	'8', 09H, 'c #87AFE4', 00H
$SG143485 DB	'9', 09H, 'c #72A1DF', 00H
$SG143486 DB	'0', 09H, 'c #7CA9E1', 00H
$SG143487 DB	'a', 09H, 'c #3F7AD0', 00H
$SG143488 DB	'b', 09H, 'c #85A4DE', 00H
$SG143489 DB	'c', 09H, 'c #FBFCFE', 00H
$SG143490 DB	'd', 09H, 'c #236ECD', 00H
$SG143491 DB	'e', 09H, 'c #7EA8E1', 00H
$SG143492 DB	'f', 09H, 'c #79A6E0', 00H
$SG143493 DB	'g', 09H, 'c #3D77D0', 00H
$SG143494 DB	'h', 09H, 'c #87A4DC', 00H
$SG143495 DB	'i', 09H, 'c #1A62C9', 00H
$SG143496 DB	'j', 09H, 'c #75A3DF', 00H
$SG143497 DB	'k', 09H, 'c #3C74CF', 00H
$SG143498 DB	'l', 09H, 'c #8DA6DE', 00H
$SG143499 DB	'm', 09H, 'c #1859C4', 00H
$SG143500 DB	'n', 09H, 'c #3B71CC', 00H
$SG143501 DB	'o', 09H, 'c #8EA5DD', 00H
$SG143502 DB	'p', 09H, 'c #164EC0', 00H
$SG143503 DB	'q', 09H, 'c #92A7DD', 00H
$SG143504 DB	'    .+      ', 00H
	ORG $+3
$SG143505 DB	'    @#$     ', 00H
	ORG $+3
$SG143506 DB	'    %&*=    ', 00H
	ORG $+3
$SG143507 DB	'    -;>,''   ', 00H
	ORG $+3
$SG143508 DB	'    )!~{]^  ', 00H
	ORG $+3
$SG143509 DB	'    /(_:<[} ', 00H
	ORG $+3
$SG143510 DB	'    |123456 ', 00H
	ORG $+3
$SG143511 DB	'    7890abc ', 00H
	ORG $+3
$SG143512 DB	'    defgh   ', 00H
	ORG $+3
$SG143513 DB	'    ijkl    ', 00H
	ORG $+3
$SG143514 DB	'    mno     ', 00H
	ORG $+3
$SG143515 DB	'    pq      ', 00H
	ORG $+3
$SG143517 DB	'12 12 54 1', 00H
	ORG $+1
$SG143518 DB	' ', 09H, 'c #FFFFFF', 00H
$SG143519 DB	'.', 09H, 'c #C4D7F3', 00H
$SG143520 DB	'+', 09H, 'c #72A1E3', 00H
$SG143521 DB	'@', 09H, 'c #C1D6F2', 00H
$SG143522 DB	'#', 09H, 'c #6397E1', 00H
$SG143523 DB	'$', 09H, 'c #5990DD', 00H
$SG143524 DB	'%', 09H, 'c #BBD2F0', 00H
$SG143525 DB	'&', 09H, 'c #7AA6E5', 00H
$SG143526 DB	'*', 09H, 'c #9ABDEA', 00H
$SG143527 DB	'=', 09H, 'c #4A87D9', 00H
$SG143528 DB	'-', 09H, 'c #B1CAEE', 00H
$SG143529 DB	';', 09H, 'c #75A4E3', 00H
$SG143530 DB	'>', 09H, 'c #99BBE9', 00H
$SG143531 DB	',', 09H, 'c #95B9E8', 00H
$SG143532 DB	'''', 09H, 'c #3A7CD4', 00H
$SG143533 DB	')', 09H, 'c #A9C6EC', 00H
$SG143534 DB	'!', 09H, 'c #71A0E0', 00H
$SG143535 DB	'~', 09H, 'c #86AFE5', 00H
$SG143536 DB	'{', 09H, 'c #8DB2E6', 00H
$SG143537 DB	']', 09H, 'c #2A72CF', 00H
$SG143538 DB	'^', 09H, 'c #73A0E0', 00H
$SG143539 DB	'/', 09H, 'c #6B9DE0', 00H
$SG143540 DB	'(', 09H, 'c #95B8E8', 00H
$SG143541 DB	'_', 09H, 'c #81ABE3', 00H
$SG143542 DB	':', 09H, 'c #72A1DF', 00H
$SG143543 DB	'<', 09H, 'c #83ADE3', 00H
$SG143544 DB	'[', 09H, 'c #1B65C9', 00H
$SG143545 DB	'}', 09H, 'c #5F95DC', 00H
$SG143546 DB	'|', 09H, 'c #8BB3E5', 00H
$SG143547 DB	'1', 09H, 'c #77A4E0', 00H
$SG143548 DB	'2', 09H, 'c #679ADC', 00H
$SG143549 DB	'3', 09H, 'c #7AA6E1', 00H
$SG143550 DB	'4', 09H, 'c #195CC6', 00H
$SG143551 DB	'5', 09H, 'c #FCFDFE', 00H
$SG143552 DB	'6', 09H, 'c #8DB2E4', 00H
$SG143553 DB	'7', 09H, 'c #4885D6', 00H
$SG143554 DB	'8', 09H, 'c #7CA9E1', 00H
$SG143555 DB	'9', 09H, 'c #6698DB', 00H
$SG143556 DB	'0', 09H, 'c #71A1DE', 00H
$SG143557 DB	'a', 09H, 'c #1752C0', 00H
$SG143558 DB	'b', 09H, 'c #88ABE0', 00H
$SG143559 DB	'c', 09H, 'c #3D77D0', 00H
$SG143560 DB	'd', 09H, 'c #6E9FDD', 00H
$SG143561 DB	'e', 09H, 'c #699BDC', 00H
$SG143562 DB	'f', 09H, 'c #1547BD', 00H
$SG143563 DB	'g', 09H, 'c #8DA6DE', 00H
$SG143564 DB	'h', 09H, 'c #376BC9', 00H
$SG143565 DB	'i', 09H, 'c #6295DA', 00H
$SG143566 DB	'j', 09H, 'c #1440B9', 00H
$SG143567 DB	'k', 09H, 'c #8DA0DB', 00H
$SG143568 DB	'l', 09H, 'c #315FC4', 00H
$SG143569 DB	'm', 09H, 'c #1339B7', 00H
$SG143570 DB	'n', 09H, 'c #909FDA', 00H
$SG143571 DB	'o', 09H, 'c #1233B4', 00H
$SG143572 DB	'         .+ ', 00H
	ORG $+3
$SG143573 DB	'        @#$ ', 00H
	ORG $+3
$SG143574 DB	'       %&*= L', 00H
	ORG $+2
$SG143575 DB	'      -;>,'' ', 00H
	ORG $+3
$SG143576 DB	'     )!>~{] ', 00H
	ORG $+3
$SG143577 DB	'    ^/(_:<[ ', 00H
	ORG $+3
$SG143578 DB	'    (}|1234 ', 00H
	ORG $+3
$SG143579 DB	'    567890a ', 00H
	ORG $+3
$SG143580 DB	'      bcdef ', 00H
	ORG $+3
$SG143581 DB	'       ghij ', 00H
	ORG $+3
$SG143582 DB	'        klm ', 00H
	ORG $+3
$SG143583 DB	'         no ', 00H
	ORG $+3
$SG143585 DB	'13 14 54 1', 00H
	ORG $+1
$SG143586 DB	' ', 09H, 'c None', 00H
	ORG $+3
$SG143587 DB	'.', 09H, 'c #545254', 00H
$SG143588 DB	'+', 09H, 'c #3C3E3C', 00H
$SG143589 DB	'@', 09H, 'c #646464', 00H
$SG143590 DB	'#', 09H, 'c #A4A4A4', 00H
$SG143591 DB	'$', 09H, 'c #B7B8B7', 00H
$SG143592 DB	'%', 09H, 'c #747284', 00H
$SG143593 DB	'&', 09H, 'c #B4B2C4', 00H
$SG143594 DB	'*', 09H, 'c #DCD7E4', 00H
$SG143595 DB	'=', 09H, 'c #1C1A1C', 00H
$SG143596 DB	'-', 09H, 'c #403E58', 00H
$SG143597 DB	';', 09H, 'c #5C5A8C', 00H
$SG143598 DB	'>', 09H, 'c #7C7EAC', 00H
$SG143599 DB	',', 09H, 'c #7C8EBC', 00H
$SG143600 DB	'''', 09H, 'c #242644', 00H
$SG143601 DB	')', 09H, 'c #282668', 00H
$SG143602 DB	'!', 09H, 'c #24367C', 00H
$SG143603 DB	'~', 09H, 'c #244A84', 00H
$SG143604 DB	'{', 09H, 'c #2C5098', 00H
$SG143605 DB	']', 09H, 'c #14162C', 00H
$SG143606 DB	'^', 09H, 'c #142E7C', 00H
$SG143607 DB	'/', 09H, 'c #143789', 00H
$SG143608 DB	'(', 09H, 'c #204990', 00H
$SG143609 DB	'_', 09H, 'c #174091', 00H
$SG143610 DB	':', 09H, 'c #0C0630', 00H
$SG143611 DB	'<', 09H, 'c #24327C', 00H
$SG143612 DB	'[', 09H, 'c #2450A0', 00H
$SG143613 DB	'}', 09H, 'c #345DB4', 00H
$SG143614 DB	'|', 09H, 'c #3C68B8', 00H
$SG143615 DB	'1', 09H, 'c #141244', 00H
$SG143616 DB	'2', 09H, 'c #24428C', 00H
$SG143617 DB	'3', 09H, 'c #3462B9', 00H
$SG143618 DB	'4', 09H, 'c #4470C4', 00H
$SG143619 DB	'5', 09H, 'c #4C7FD6', 00H
$SG143620 DB	'6', 09H, 'c #4472CC', 00H
$SG143621 DB	'7', 09H, 'c #24224C', 00H
$SG143622 DB	'8', 09H, 'c #5C8DEC', 00H
$SG143623 DB	'9', 09H, 'c #5C94F6', 00H
$SG143624 DB	'0', 09H, 'c #5482DF', 00H
$SG143625 DB	'a', 09H, 'c #619DF7', 00H
$SG143626 DB	'b', 09H, 'c #6CA6FC', 00H
$SG143627 DB	'c', 09H, 'c #64A2FC', 00H
$SG143628 DB	'd', 09H, 'c #1C2E5C', 00H
$SG143629 DB	'e', 09H, 'c #6CA2FC', 00H
$SG143630 DB	'f', 09H, 'c #74B2FC', 00H
$SG143631 DB	'g', 09H, 'c #7CB8FC', 00H
$SG143632 DB	'h', 09H, 'c #1C3264', 00H
$SG143633 DB	'i', 09H, 'c #346AD4', 00H
$SG143634 DB	'j', 09H, 'c #7CBEFC', 00H
$SG143635 DB	'k', 09H, 'c #3C72DC', 00H
$SG143636 DB	'l', 09H, 'c #243250', 00H
$SG143637 DB	'm', 09H, 'c #346AB4', 00H
$SG143638 DB	'n', 09H, 'c #3C82DC', 00H
$SG143639 DB	'o', 09H, 'c #6C6A6C', 00H
$SG143640 DB	'     .+.     ', 00H
	ORG $+2
$SG143641 DB	'   @##$##@   ', 00H
	ORG $+2
$SG143642 DB	'  @%&***&%@  ', 00H
	ORG $+2
$SG143643 DB	' =-;>,,,>;-= ', 00H
	ORG $+2
$SG143644 DB	' '')!~{{{~!)'' ', 00H
	ORG $+2
$SG143645 DB	'])^/({{{(_^)]', 00H
	ORG $+2
$SG143646 DB	':<_[}|||}[_<:', 00H
	ORG $+2
$SG143647 DB	'12[3455563[21', 00H
	ORG $+2
$SG143648 DB	'7_365899063_7', 00H
	ORG $+2
$SG143649 DB	' /|09abc904/ ', 00H
	ORG $+2
$SG143650 DB	' d}8efgfb83d ', 00H
	ORG $+2
$SG143651 DB	'  hiafjgakh  ', 00H
	ORG $+2
$SG143652 DB	'   l~mnm~l   ', 00H
	ORG $+2
$SG143653 DB	'     o@o     ', 00H
CONST	ENDS
_DATA	SEGMENT
_acTop_xpm DD	FLAT:$SG143447
	DD	FLAT:$SG143448
	DD	FLAT:$SG143449
	DD	FLAT:$SG143450
	DD	FLAT:$SG143451
	DD	FLAT:$SG143452
	DD	FLAT:$SG143453
	DD	FLAT:$SG143454
	DD	FLAT:$SG143455
	DD	FLAT:$SG143456
	DD	FLAT:$SG143457
	DD	FLAT:$SG143458
	DD	FLAT:$SG143459
	DD	FLAT:$SG143460
	DD	FLAT:$SG143461
	DD	FLAT:$SG143462
	DD	FLAT:$SG143463
	DD	FLAT:$SG143464
	DD	FLAT:$SG143465
	DD	FLAT:$SG143466
	DD	FLAT:$SG143467
	DD	FLAT:$SG143468
	DD	FLAT:$SG143469
	DD	FLAT:$SG143470
	DD	FLAT:$SG143471
	DD	FLAT:$SG143472
	DD	FLAT:$SG143473
	DD	FLAT:$SG143474
	DD	FLAT:$SG143475
	DD	FLAT:$SG143476
	DD	FLAT:$SG143477
	DD	FLAT:$SG143478
	DD	FLAT:$SG143479
	DD	FLAT:$SG143480
	DD	FLAT:$SG143481
	DD	FLAT:$SG143482
	DD	FLAT:$SG143483
	DD	FLAT:$SG143484
	DD	FLAT:$SG143485
	DD	FLAT:$SG143486
	DD	FLAT:$SG143487
	DD	FLAT:$SG143488
	DD	FLAT:$SG143489
	DD	FLAT:$SG143490
	DD	FLAT:$SG143491
	DD	FLAT:$SG143492
	DD	FLAT:$SG143493
	DD	FLAT:$SG143494
	DD	FLAT:$SG143495
	DD	FLAT:$SG143496
	DD	FLAT:$SG143497
	DD	FLAT:$SG143498
	DD	FLAT:$SG143499
	DD	FLAT:$SG143500
	DD	FLAT:$SG143501
	DD	FLAT:$SG143502
	DD	FLAT:$SG143503
	DD	FLAT:$SG143504
	DD	FLAT:$SG143505
	DD	FLAT:$SG143506
	DD	FLAT:$SG143507
	DD	FLAT:$SG143508
	DD	FLAT:$SG143509
	DD	FLAT:$SG143510
	DD	FLAT:$SG143511
	DD	FLAT:$SG143512
	DD	FLAT:$SG143513
	DD	FLAT:$SG143514
	DD	FLAT:$SG143515
	ORG $+4
_acBottom_xpm DD FLAT:$SG143517
	DD	FLAT:$SG143518
	DD	FLAT:$SG143519
	DD	FLAT:$SG143520
	DD	FLAT:$SG143521
	DD	FLAT:$SG143522
	DD	FLAT:$SG143523
	DD	FLAT:$SG143524
	DD	FLAT:$SG143525
	DD	FLAT:$SG143526
	DD	FLAT:$SG143527
	DD	FLAT:$SG143528
	DD	FLAT:$SG143529
	DD	FLAT:$SG143530
	DD	FLAT:$SG143531
	DD	FLAT:$SG143532
	DD	FLAT:$SG143533
	DD	FLAT:$SG143534
	DD	FLAT:$SG143535
	DD	FLAT:$SG143536
	DD	FLAT:$SG143537
	DD	FLAT:$SG143538
	DD	FLAT:$SG143539
	DD	FLAT:$SG143540
	DD	FLAT:$SG143541
	DD	FLAT:$SG143542
	DD	FLAT:$SG143543
	DD	FLAT:$SG143544
	DD	FLAT:$SG143545
	DD	FLAT:$SG143546
	DD	FLAT:$SG143547
	DD	FLAT:$SG143548
	DD	FLAT:$SG143549
	DD	FLAT:$SG143550
	DD	FLAT:$SG143551
	DD	FLAT:$SG143552
	DD	FLAT:$SG143553
	DD	FLAT:$SG143554
	DD	FLAT:$SG143555
	DD	FLAT:$SG143556
	DD	FLAT:$SG143557
	DD	FLAT:$SG143558
	DD	FLAT:$SG143559
	DD	FLAT:$SG143560
	DD	FLAT:$SG143561
	DD	FLAT:$SG143562
	DD	FLAT:$SG143563
	DD	FLAT:$SG143564
	DD	FLAT:$SG143565
	DD	FLAT:$SG143566
	DD	FLAT:$SG143567
	DD	FLAT:$SG143568
	DD	FLAT:$SG143569
	DD	FLAT:$SG143570
	DD	FLAT:$SG143571
	DD	FLAT:$SG143572
	DD	FLAT:$SG143573
	DD	FLAT:$SG143574
	DD	FLAT:$SG143575
	DD	FLAT:$SG143576
	DD	FLAT:$SG143577
	DD	FLAT:$SG143578
	DD	FLAT:$SG143579
	DD	FLAT:$SG143580
	DD	FLAT:$SG143581
	DD	FLAT:$SG143582
	DD	FLAT:$SG143583
	ORG $+4
_bookmark_xpm DD FLAT:$SG143585
	DD	FLAT:$SG143586
	DD	FLAT:$SG143587
	DD	FLAT:$SG143588
	DD	FLAT:$SG143589
	DD	FLAT:$SG143590
	DD	FLAT:$SG143591
	DD	FLAT:$SG143592
	DD	FLAT:$SG143593
	DD	FLAT:$SG143594
	DD	FLAT:$SG143595
	DD	FLAT:$SG143596
	DD	FLAT:$SG143597
	DD	FLAT:$SG143598
	DD	FLAT:$SG143599
	DD	FLAT:$SG143600
	DD	FLAT:$SG143601
	DD	FLAT:$SG143602
	DD	FLAT:$SG143603
	DD	FLAT:$SG143604
	DD	FLAT:$SG143605
	DD	FLAT:$SG143606
	DD	FLAT:$SG143607
	DD	FLAT:$SG143608
	DD	FLAT:$SG143609
	DD	FLAT:$SG143610
	DD	FLAT:$SG143611
	DD	FLAT:$SG143612
	DD	FLAT:$SG143613
	DD	FLAT:$SG143614
	DD	FLAT:$SG143615
	DD	FLAT:$SG143616
	DD	FLAT:$SG143617
	DD	FLAT:$SG143618
	DD	FLAT:$SG143619
	DD	FLAT:$SG143620
	DD	FLAT:$SG143621
	DD	FLAT:$SG143622
	DD	FLAT:$SG143623
	DD	FLAT:$SG143624
	DD	FLAT:$SG143625
	DD	FLAT:$SG143626
	DD	FLAT:$SG143627
	DD	FLAT:$SG143628
	DD	FLAT:$SG143629
	DD	FLAT:$SG143630
	DD	FLAT:$SG143631
	DD	FLAT:$SG143632
	DD	FLAT:$SG143633
	DD	FLAT:$SG143634
	DD	FLAT:$SG143635
	DD	FLAT:$SG143636
	DD	FLAT:$SG143637
	DD	FLAT:$SG143638
	DD	FLAT:$SG143639
	DD	FLAT:$SG143640
	DD	FLAT:$SG143641
	DD	FLAT:$SG143642
	DD	FLAT:$SG143643
	DD	FLAT:$SG143644
	DD	FLAT:$SG143645
	DD	FLAT:$SG143646
	DD	FLAT:$SG143647
	DD	FLAT:$SG143648
	DD	FLAT:$SG143649
	DD	FLAT:$SG143650
	DD	FLAT:$SG143651
	DD	FLAT:$SG143652
	DD	FLAT:$SG143653
_DATA	ENDS
PUBLIC	_hypot
PUBLIC	_wmemcpy
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::copy
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?createSintilla@ScintillaCtrls@@QAEPAUHWND__@@PAU2@@Z ; ScintillaCtrls::createSintilla
PUBLIC	?getScintillaEditViewFrom@ScintillaCtrls@@QAEPAVScintillaEditView@@PAUHWND__@@@Z ; ScintillaCtrls::getScintillaEditViewFrom
PUBLIC	?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z ; ScintillaCtrls::destroyScintilla
PUBLIC	?destroy@ScintillaCtrls@@QAEXXZ			; ScintillaCtrls::destroy
PUBLIC	??0?$allocator@PAVScintillaEditView@@@std@@QAE@XZ ; std::allocator<ScintillaEditView *>::allocator<ScintillaEditView *>
PUBLIC	?deallocate@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@I@Z ; std::allocator<ScintillaEditView *>::deallocate
PUBLIC	?allocate@?$allocator@PAVScintillaEditView@@@std@@QAEPAPAVScintillaEditView@@I@Z ; std::allocator<ScintillaEditView *>::allocate
PUBLIC	?construct@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@ABQAV3@@Z ; std::allocator<ScintillaEditView *>::construct
PUBLIC	?max_size@?$allocator@PAVScintillaEditView@@@std@@QBEIXZ ; std::allocator<ScintillaEditView *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAIABV?$allocator@PAVScintillaEditView@@@2@@Z ; std::allocator_traits<std::allocator<ScintillaEditView *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::_Wrap_alloc<std::allocator<ScintillaEditView *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEPAPAVScintillaEditView@@I@Z ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@I@Z ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::max_size
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<ScintillaEditView *,std::allocator<ScintillaEditView *> > >::_Getal
PUBLIC	?capacity@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::begin
PUBLIC	?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Make_iter
PUBLIC	?size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::size
PUBLIC	?max_size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::max_size
PUBLIC	??A?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEAAPAVScintillaEditView@@I@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::operator[]
PUBLIC	?push_back@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXABQAVScintillaEditView@@@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::push_back
PUBLIC	?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::erase
PUBLIC	?_Destroy@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXPAPAVScintillaEditView@@0@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEII@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBE_NPBQAVScintillaEditView@@@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Reserve
PUBLIC	?_Xlen@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Orphan_range
PUBLIC	?getIndexFrom@ScintillaCtrls@@AAEHPAUHWND__@@@Z	; ScintillaCtrls::getIndexFrom
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPAXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	??0Window@@QAE@XZ				; Window::Window
PUBLIC	??1Window@@UAE@XZ				; Window::~Window
PUBLIC	?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z	; Window::init
PUBLIC	?display@Window@@UBEX_N@Z			; Window::display
PUBLIC	?reSizeTo@Window@@UAEXAAUtagRECT@@@Z		; Window::reSizeTo
PUBLIC	?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z		; Window::reSizeToWH
PUBLIC	?redraw@Window@@UBEX_N@Z			; Window::redraw
PUBLIC	?getClientRect@Window@@UBEXAAUtagRECT@@@Z	; Window::getClientRect
PUBLIC	?getWindowRect@Window@@UBEXAAUtagRECT@@@Z	; Window::getWindowRect
PUBLIC	?getWidth@Window@@UBEHXZ			; Window::getWidth
PUBLIC	?getHeight@Window@@UBEHXZ			; Window::getHeight
PUBLIC	?isVisible@Window@@UBE_NXZ			; Window::isVisible
PUBLIC	?getHSelf@Window@@QBEPAUHWND__@@XZ		; Window::getHSelf
PUBLIC	??_GWindow@@UAEPAXI@Z				; Window::`scalar deleting destructor'
PUBLIC	??1Style@@QAE@XZ				; Style::~Style
PUBLIC	??0_Ignore@std@@QAE@XZ				; std::_Ignore::_Ignore
PUBLIC	??0ScintillaEditView@@QAE@XZ			; ScintillaEditView::ScintillaEditView
PUBLIC	??1ScintillaEditView@@UAE@XZ			; ScintillaEditView::~ScintillaEditView
PUBLIC	?destroy@ScintillaEditView@@UAEXXZ		; ScintillaEditView::destroy
PUBLIC	??0?$_Hash_oper1@$0A@U?$hash@PAVBuffer@@@std@@@std@@QAE@U?$hash@PAVBuffer@@@1@@Z ; std::_Hash_oper1<0,std::hash<Buffer *> >::_Hash_oper1<0,std::hash<Buffer *> >
PUBLIC	??0?$_Hash_oper2@$0A@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@2@@std@@QAE@U?$hash@PAVBuffer@@@1@U?$equal_to@PAVBuffer@@@1@@Z ; std::_Hash_oper2<0,std::hash<Buffer *>,std::equal_to<Buffer *> >::_Hash_oper2<0,std::hash<Buffer *>,std::equal_to<Buffer *> >
PUBLIC	??0?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@std@@QAE@U?$hash@PAVBuffer@@@1@U?$equal_to@PAVBuffer@@@1@@Z ; std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >
PUBLIC	??0?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@@Z ; std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0>::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0>
PUBLIC	??0?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
PUBLIC	??0?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::allocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::deallocate
PUBLIC	??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Prevnode
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Myval
PUBLIC	??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
PUBLIC	??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
PUBLIC	??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
PUBLIC	?_Alloc_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Free_proxy
PUBLIC	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Freeheadnode
PUBLIC	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Buynode0
PUBLIC	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
PUBLIC	??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
PUBLIC	?_Freenode@?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ; std::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Freenode
PUBLIC	??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ ; std::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
PUBLIC	??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
PUBLIC	??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
PUBLIC	?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::begin
PUBLIC	?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::end
PUBLIC	?_Unchecked_end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Unchecked_end
PUBLIC	?clear@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::clear
PUBLIC	?_Tidy@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Tidy
PUBLIC	?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Orphan_ptr
PUBLIC	??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >
PUBLIC	??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::~_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >
PUBLIC	?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::begin
PUBLIC	?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::end
PUBLIC	?_Unchecked_end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Unchecked_end
PUBLIC	?_Init@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Init
PUBLIC	??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::deallocate
PUBLIC	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocate
PUBLIC	?construct@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@ABV32@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::construct
PUBLIC	?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::max_size
PUBLIC	?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size
PUBLIC	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
PUBLIC	?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::~_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Getal
PUBLIC	??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
PUBLIC	??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
PUBLIC	?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::capacity
PUBLIC	?_Unused_capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Unused_capacity
PUBLIC	?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::begin
PUBLIC	?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::size
PUBLIC	?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size
PUBLIC	?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::assign
PUBLIC	?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::insert
PUBLIC	?clear@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::clear
PUBLIC	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Destroy
PUBLIC	?_Grow_to@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Grow_to
PUBLIC	?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Tidy
PUBLIC	?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Insert_n
PUBLIC	?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@PAV32@IPBV32@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Ufill
PUBLIC	?_Xlen@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Xlen
PUBLIC	?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Orphan_range
PUBLIC	??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ ; std::unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
PUBLIC	??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ ; std::unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
PUBLIC	??_GScintillaEditView@@UAEPAXI@Z		; ScintillaEditView::`scalar deleting destructor'
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>
PUBLIC	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator++
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator==
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator!=
PUBLIC	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator*
PUBLIC	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator->
PUBLIC	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator++
PUBLIC	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
PUBLIC	??0?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::allocator<std::_List_node<std::pair<int const ,Style>,void *> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::deallocate
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Prevnode
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAU?$pair@$$CBHUStyle@@@2@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Myval
PUBLIC	??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::~_List_val<std::_List_simple_types<std::pair<int const ,Style> > >
PUBLIC	??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::~_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >
PUBLIC	?_Free_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAEXXZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Free_proxy
PUBLIC	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Freeheadnode
PUBLIC	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Getal
PUBLIC	?_Freenode@?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ; std::_List_buy<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Freenode
PUBLIC	??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ ; std::_List_buy<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::~_List_buy<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >
PUBLIC	??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::~list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >
PUBLIC	?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::begin
PUBLIC	?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::end
PUBLIC	?clear@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::clear
PUBLIC	?_Tidy@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Tidy
PUBLIC	?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Orphan_ptr
PUBLIC	??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::~_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >
PUBLIC	?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::begin
PUBLIC	?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::end
PUBLIC	??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::deallocate
PUBLIC	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >
PUBLIC	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::deallocate
PUBLIC	??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::~_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::_Getal
PUBLIC	??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >
PUBLIC	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Destroy
PUBLIC	?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Tidy
PUBLIC	??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ ; std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > >::~unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > >
PUBLIC	??_G?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAEPAXI@Z ; std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > >::`scalar deleting destructor'
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>
PUBLIC	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBHUStyle@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator++
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator==
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator!=
PUBLIC	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUStyle@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator*
PUBLIC	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUStyle@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator->
PUBLIC	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator++
PUBLIC	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >
PUBLIC	??1?$pair@$$CBHUStyle@@@std@@QAE@XZ		; std::pair<int const ,Style>::~pair<int const ,Style>
PUBLIC	??_G?$pair@$$CBHUStyle@@@std@@QAEPAXI@Z		; std::pair<int const ,Style>::`scalar deleting destructor'
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+=
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
PUBLIC	??$addressof@QAVScintillaEditView@@@std@@YAPBQAVScintillaEditView@@ABQAV1@@Z ; std::addressof<ScintillaEditView * const>
PUBLIC	??$construct@PAVScintillaEditView@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * &>
PUBLIC	??$construct@PAVScintillaEditView@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * const &>
PUBLIC	??$_Move@PAPAVScintillaEditView@@PAPAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00@Z ; std::_Move<ScintillaEditView * *,ScintillaEditView * *>
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@SAPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@AAU32@@Z ; std::pointer_traits<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> *>::pointer_to
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@$$CBHUStyle@@@std@@@std@@SAPAU?$pair@$$CBHUStyle@@@2@AAU32@@Z ; std::pointer_traits<std::pair<int const ,Style> *>::pointer_to
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAXPAPAVScintillaEditView@@0AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
PUBLIC	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$addressof@_W@std@@YAPA_WAA_W@Z		; std::addressof<wchar_t>
PUBLIC	??$?0V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > ><std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
PUBLIC	??$addressof@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@YAPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@0@AAU10@@Z ; std::addressof<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
PUBLIC	??$addressof@U?$pair@$$CBHUStyle@@@std@@@std@@YAPAU?$pair@$$CBHUStyle@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,Style> >
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$_Umove@PAPAVScintillaEditView@@@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEPAPAVScintillaEditView@@PAPAV2@00@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Umove<ScintillaEditView * *>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base0>
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
PUBLIC	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >
PUBLIC	?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::deallocate
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::destroy<std::_Container_proxy>
PUBLIC	??$addressof@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+=
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
PUBLIC	??$addressof@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<int const ,Style>,void *> *>
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$_Allocate@PAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@IPAPAV1@@Z ; std::_Allocate<ScintillaEditView *>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
PUBLIC	??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHUStyle@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::pair<int const ,Style> >
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$addressof@$$CBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const >
PUBLIC	??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
PUBLIC	??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00@Z ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
PUBLIC	??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
PUBLIC	??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
PUBLIC	??$_Allocate@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >
PUBLIC	??$_Allocate@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPAV10@@Z ; std::_Allocate<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
PUBLIC	??$forward@AAPAVScintillaEditView@@@std@@YAAAPAVScintillaEditView@@AAPAV1@@Z ; std::forward<ScintillaEditView * &>
PUBLIC	??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAXAAV?$allocator@PAVScintillaEditView@@@1@PAPAVScintillaEditView@@AAPAV3@@Z ; std::allocator_traits<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * &>
PUBLIC	??$forward@ABQAVScintillaEditView@@@std@@YAABQAVScintillaEditView@@ABQAV1@@Z ; std::forward<ScintillaEditView * const &>
PUBLIC	??$construct@PAVScintillaEditView@@ABQAV1@@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAXAAV?$allocator@PAVScintillaEditView@@@1@PAPAVScintillaEditView@@ABQAV3@@Z ; std::allocator_traits<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * const &>
PUBLIC	??$_Ptr_cat@PAVScintillaEditView@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVScintillaEditView@@0@Z ; std::_Ptr_cat<ScintillaEditView *,ScintillaEditView *>
PUBLIC	??$_Move@PAPAVScintillaEditView@@PAPAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ScintillaEditView * *,ScintillaEditView * *>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAXPAPAVScintillaEditView@@0AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
PUBLIC	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$?0U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > ><std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$_Uninitialized_move@PAPAVScintillaEditView@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z ; std::_Uninitialized_move<ScintillaEditView * *,ScintillaEditView * *,std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::destroy<std::_Container_proxy>
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
PUBLIC	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
PUBLIC	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
PUBLIC	??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@1@PAU?$pair@$$CBHUStyle@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::pair<int const ,Style> >
PUBLIC	??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
PUBLIC	??$_Debug_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
PUBLIC	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
PUBLIC	??$_Fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::_Fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
PUBLIC	??$forward@AAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
PUBLIC	??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z ; std::_Val_type<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
PUBLIC	??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z ; std::allocator<ScintillaEditView *>::construct<ScintillaEditView *,ScintillaEditView * &>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
PUBLIC	??$_Unchecked@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z ; std::_Unchecked<ScintillaEditView * *>
PUBLIC	??$_Uninit_move@PAPAVScintillaEditView@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z ; std::_Uninit_move<ScintillaEditView * *,ScintillaEditView * *,std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
PUBLIC	??$_Rechecked@PAPAVScintillaEditView@@PAPAV1@@std@@YAAAPAPAVScintillaEditView@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<ScintillaEditView * *,ScintillaEditView * *>
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@U_Container_proxy@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@@Z ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_Container_proxy> >,std::_Container_proxy>
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@U_Container_proxy@2@U32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_Container_proxy> >,std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
PUBLIC	??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHUStyle@@@1@@Z ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::destroy<std::pair<int const ,Style> >
PUBLIC	??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
PUBLIC	??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
PUBLIC	??$_Iter_cat@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
PUBLIC	??$_Debug_range2@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
PUBLIC	??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
PUBLIC	??$_Val_type@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z ; std::_Val_type<ScintillaEditView * *>
PUBLIC	??$_Uninit_move@PAVScintillaEditView@@PAV1@PAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ScintillaEditView *,ScintillaEditView *,ScintillaEditView *>
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
PUBLIC	??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$_Debug_pointer@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
PUBLIC	??$_Debug_range@PAPAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@0PB_WI@Z ; std::_Debug_range<ScintillaEditView * *>
PUBLIC	??$_Debug_pointer@PAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@PB_WI@Z ; std::_Debug_pointer<ScintillaEditView *>
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
PUBLIC	??$_Iter_cat@PAPAVScintillaEditView@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVScintillaEditView@@@Z ; std::_Iter_cat<ScintillaEditView * *>
PUBLIC	??$_Debug_range2@PAPAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<ScintillaEditView * *>
PUBLIC	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
PUBLIC	??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_7Window@@6B@					; Window::`vftable'
PUBLIC	??_7ScintillaEditView@@6B@			; ScintillaEditView::`vftable'
PUBLIC	??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	??_C@_1MK@HJPEJHDM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAS?$AAc?$AAi?$AAn?$AAt?$AAi?$AAl?$AAl?$AAa?$AAE?$AAd?$AAi?$AAt?$AAV@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CEO@JJNDPOME@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1CEO@DJCOBHAB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BBG@GEKGEJHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BBG@MEFLKALA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ ; `string'
PUBLIC	??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CEM@BAKEJGH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BBE@PIHPBAPJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1PC@LBPAGKOJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EK@EEHFMKDC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ ; `string'
PUBLIC	??_C@_1DAI@BKGFFCGA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_R4ScintillaEditView@@6B@			; ScintillaEditView::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVScintillaEditView@@@8			; ScintillaEditView `RTTI Type Descriptor'
PUBLIC	??_R3ScintillaEditView@@8			; ScintillaEditView::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ScintillaEditView@@8			; ScintillaEditView::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ScintillaEditView@@8		; ScintillaEditView::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Window@@8				; Window::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVWindow@@@8				; Window `RTTI Type Descriptor'
PUBLIC	??_R3Window@@8					; Window::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Window@@8					; Window::`RTTI Base Class Array'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Window@@6B@				; Window::`RTTI Complete Object Locator'
PUBLIC	__real@3f800000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter:PROC
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	__hypot:PROC
EXTRN	_memmove:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__CrtDbgReportW:PROC
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	__imp__FreeLibrary@4:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__MoveWindow@24:PROC
EXTRN	__imp__IsWindowVisible@4:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	??_EWindow@@UAEPAXI@Z:PROC			; Window::`vector deleting destructor'
EXTRN	?init@ScintillaEditView@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z:PROC ; ScintillaEditView::init
EXTRN	??_EScintillaEditView@@UAEPAXI@Z:PROC		; ScintillaEditView::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?_hLib@ScintillaEditView@@1PAUHINSTANCE__@@A:DWORD ; ScintillaEditView::_hLib
EXTRN	?_refCount@ScintillaEditView@@1HA:DWORD		; ScintillaEditView::_refCount
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
_ignore	DB	01H DUP (?)
__Tuple_alloc DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_R4Window@@6B@
rdata$r	SEGMENT
??_R4Window@@6B@ DD 00H					; Window::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVWindow@@@8
	DD	FLAT:??_R3Window@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2Window@@8
rdata$r	SEGMENT
??_R2Window@@8 DD FLAT:??_R1A@?0A@EA@Window@@8		; Window::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Window@@8
rdata$r	SEGMENT
??_R3Window@@8 DD 00H					; Window::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Window@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVWindow@@@8
data$r	SEGMENT
??_R0?AVWindow@@@8 DD FLAT:??_7type_info@@6B@		; Window `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVWindow@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Window@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Window@@8 DD FLAT:??_R0?AVWindow@@@8	; Window::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Window@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ScintillaEditView@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ScintillaEditView@@8 DD FLAT:??_R0?AVScintillaEditView@@@8 ; ScintillaEditView::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ScintillaEditView@@8
rdata$r	ENDS
;	COMDAT ??_R2ScintillaEditView@@8
rdata$r	SEGMENT
??_R2ScintillaEditView@@8 DD FLAT:??_R1A@?0A@EA@ScintillaEditView@@8 ; ScintillaEditView::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Window@@8
rdata$r	ENDS
;	COMDAT ??_R3ScintillaEditView@@8
rdata$r	SEGMENT
??_R3ScintillaEditView@@8 DD 00H			; ScintillaEditView::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ScintillaEditView@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVScintillaEditView@@@8
data$r	SEGMENT
??_R0?AVScintillaEditView@@@8 DD FLAT:??_7type_info@@6B@ ; ScintillaEditView `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVScintillaEditView@@', 00H
data$r	ENDS
;	COMDAT ??_R4ScintillaEditView@@6B@
rdata$r	SEGMENT
??_R4ScintillaEditView@@6B@ DD 00H			; ScintillaEditView::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVScintillaEditView@@@8
	DD	FLAT:??_R3ScintillaEditView@@8
rdata$r	ENDS
;	COMDAT ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DAI@BKGFFCGA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1DAI@BKGFFCGA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, '_', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 'd', 00H, '_', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, '_', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, 'e', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	's', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '*'
	DB	00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H
	DB	',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'u', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '<', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, ',', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'S', 00H, 't', 00H
	DB	'y', 00H, 'l', 00H, 'e', 00H, ',', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'h', 00H, 'a', 00H, 's', 00H, 'h'
	DB	00H, '<', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ',', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'e', 00H
	DB	'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '_', 00H, 't', 00H, 'o'
	DB	00H, '<', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ',', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, ' ', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'y'
	DB	00H, 'l', 00H, 'e', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '+', 00H, '=', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@EEHFMKDC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
CONST	SEGMENT
??_C@_1EK@EEHFMKDC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 's', 00H, 'e', 00H, 'r', 00H, 't', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1PC@LBPAGKOJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PC@LBPAGKOJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'S', 00H, 'c', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, 'i', 00H, 'l', 00H, 'l', 00H, 'a'
	DB	00H, 'E', 00H, 'd', 00H, 'i', 00H, 't', 00H, 'V', 00H, 'i', 00H
	DB	'e', 00H, 'w', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '+', 00H, '=', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BBE@PIHPBAPJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BBE@PIHPBAPJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' '
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CEM@BAKEJGH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1CEM@BAKEJGH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, '*', 00H, ' ', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'u', 00H, 'n', 00H, 'o', 00H, 'r'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '_', 00H
	DB	'm', 00H, 'a', 00H, 'p', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'h', 00H, 'a', 00H, 's', 00H, 'h', 00H, '<', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, '>', 00H, ',', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'a'
	DB	00H, 'l', 00H, '_', 00H, 't', 00H, 'o', 00H, '<', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H
	DB	'i', 00H, 'r', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@
CONST	SEGMENT
??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n'
	DB	00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
CONST	SEGMENT
??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BBG@MEFLKALA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BBG@MEFLKALA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' '
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BBG@GEKGEJHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BBG@GEKGEJHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' '
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H
	DB	'+', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CEO@DJCOBHAB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1CEO@DJCOBHAB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, '*', 00H, ' ', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'u', 00H, 'n', 00H, 'o', 00H, 'r'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '_', 00H
	DB	'm', 00H, 'a', 00H, 'p', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'h', 00H, 'a', 00H, 's', 00H, 'h', 00H, '<', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, '>', 00H, ',', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'a'
	DB	00H, 'l', 00H, '_', 00H, 't', 00H, 'o', 00H, '<', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H
	DB	'i', 00H, 'r', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CEO@JJNDPOME@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1CEO@JJNDPOME@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, '*', 00H, ' ', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'u', 00H, 'n', 00H, 'o', 00H, 'r'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '_', 00H
	DB	'm', 00H, 'a', 00H, 'p', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'h', 00H, 'a', 00H, 's', 00H, 'h', 00H, '<', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, '>', 00H, ',', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'a'
	DB	00H, 'l', 00H, '_', 00H, 't', 00H, 'o', 00H, '<', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H
	DB	'i', 00H, 'r', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H
	DB	'+', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, 's'
	DB	00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
CONST	SEGMENT
??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i'
	DB	00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MK@HJPEJHDM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAS?$AAc?$AAi?$AAn?$AAt?$AAi?$AAl?$AAl?$AAa?$AAE?$AAd?$AAi?$AAt?$AAV@
CONST	SEGMENT
??_C@_1MK@HJPEJHDM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAS?$AAc?$AAi?$AAn?$AAt?$AAi?$AAl?$AAl?$AAa?$AAE?$AAd?$AAi?$AAt?$AAV@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'S', 00H, 'c', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, 'i', 00H, 'l', 00H, 'l', 00H, 'a'
	DB	00H, 'E', 00H, 'd', 00H, 'i', 00H, 't', 00H, 'V', 00H, 'i', 00H
	DB	'e', 00H, 'w', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'S'
	DB	00H, 'c', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'i', 00H, 'l', 00H
	DB	'l', 00H, 'a', 00H, 'E', 00H, 'd', 00H, 'i', 00H, 't', 00H, 'V'
	DB	00H, 'i', 00H, 'e', 00H, 'w', 00H, ' ', 00H, '*', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'[', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7ScintillaEditView@@6B@
CONST	SEGMENT
??_7ScintillaEditView@@6B@ DD FLAT:??_R4ScintillaEditView@@6B@ ; ScintillaEditView::`vftable'
	DD	FLAT:??_EScintillaEditView@@UAEPAXI@Z
	DD	FLAT:?init@ScintillaEditView@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
	DD	FLAT:?destroy@ScintillaEditView@@UAEXXZ
	DD	FLAT:?display@Window@@UBEX_N@Z
	DD	FLAT:?reSizeTo@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?redraw@Window@@UBEX_N@Z
	DD	FLAT:?getClientRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWindowRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWidth@Window@@UBEHXZ
	DD	FLAT:?getHeight@Window@@UBEHXZ
	DD	FLAT:?isVisible@Window@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7Window@@6B@
CONST	SEGMENT
??_7Window@@6B@ DD FLAT:??_R4Window@@6B@		; Window::`vftable'
	DD	FLAT:??_EWindow@@UAEPAXI@Z
	DD	FLAT:?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?display@Window@@UBEX_N@Z
	DD	FLAT:?reSizeTo@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?redraw@Window@@UBEX_N@Z
	DD	FLAT:?getClientRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWindowRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWidth@Window@@UBEHXZ
	DD	FLAT:?getHeight@Window@@UBEHXZ
	DD	FLAT:?isVisible@Window@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z$0
__ehfuncinfo$??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z$0
__ehfuncinfo$??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z$0
__ehfuncinfo$??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$pair@$$CBHUStyle@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$pair@$$CBHUStyle@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$pair@$$CBHUStyle@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$pair@$$CBHUStyle@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ$0
__ehfuncinfo$??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ$1
__ehfuncinfo$??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ$0
__ehfuncinfo$??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ$0
__ehfuncinfo$??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$8 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$2
__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$7 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__tryblocktable$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$7
	DD	04H
	DD	04H
	DD	05H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$8
__unwindtable$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$4
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$1
__ehfuncinfo$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$1
__ehfuncinfo$?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ$1
__ehfuncinfo$??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z$0
__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z$2
__ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$3 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$0
__tryblocktable$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$3
__unwindtable$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ScintillaEditView@@UAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??1ScintillaEditView@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??1ScintillaEditView@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ScintillaEditView@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ScintillaEditView@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1ScintillaEditView@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1ScintillaEditView@@UAE@XZ$3
	DD	02H
	DD	FLAT:__unwindfunclet$??1ScintillaEditView@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1ScintillaEditView@@UAE@XZ$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ScintillaEditView@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ScintillaEditView@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ScintillaEditView@@QAE@XZ$1
__ehfuncinfo$??0ScintillaEditView@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ScintillaEditView@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_System_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_System_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_System_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_System_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_System_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_System_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iostream_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iostream_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Iostream_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Iostream_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Generic_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Generic_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Generic_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Generic_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z$1
__ehfuncinfo$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?createSintilla@ScintillaCtrls@@QAEPAUHWND__@@PAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createSintilla@ScintillaCtrls@@QAEPAUHWND__@@PAU2@@Z$0
__unwindtable$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z$2
__ehfuncinfo$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?createSintilla@ScintillaCtrls@@QAEPAUHWND__@@PAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createSintilla@ScintillaCtrls@@QAEPAUHWND__@@PAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iterator_base12@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iterator_base12@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0
__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
; Line 724
	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@ABV32@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::construct
; Line 724
	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z PROC ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 337
	push	ebp
	mov	ebp, esp
; Line 338
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
; Line 339
	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ENDP ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
; Line 731
	pop	ebp
	ret	0
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
; Line 731
	pop	ebp
	ret	0
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 465
	push	ebp
	mov	ebp, esp
; Line 469
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 16					; 00000010H
; Line 470
	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAPAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<ScintillaEditView * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@PAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@PB_WI@Z ; std::_Debug_pointer<ScintillaEditView *>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@PAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@PB_WI@Z ; std::_Debug_pointer<ScintillaEditView *>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAPAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<ScintillaEditView * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAPAVScintillaEditView@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVScintillaEditView@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVScintillaEditView@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVScintillaEditView@@@Z PROC ; std::_Iter_cat<ScintillaEditView * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAPAVScintillaEditView@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVScintillaEditView@@@Z ENDP ; std::_Iter_cat<ScintillaEditView * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z PROC ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 337
	push	ebp
	mov	ebp, esp
; Line 338
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
; Line 339
	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z ENDP ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z PROC ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
; Line 363
	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
; Line 363
	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@PAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@PB_WI@Z PROC ; std::_Debug_pointer<ScintillaEditView *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@PAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@PB_WI@Z ENDP ; std::_Debug_pointer<ScintillaEditView *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAPAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@0PB_WI@Z PROC ; std::_Debug_range<ScintillaEditView * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAPAVScintillaEditView@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVScintillaEditView@@@Z ; std::_Iter_cat<ScintillaEditView * *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAPAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<ScintillaEditView * *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAPAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@0PB_WI@Z ENDP ; std::_Debug_range<ScintillaEditView * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 465
	push	ebp
	mov	ebp, esp
; Line 469
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
	add	esp, 16					; 00000010H
; Line 470
	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PB_WI@Z PROC ; std::_Debug_pointer<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 4
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 474
	push	ebp
	mov	ebp, esp
; Line 476
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
	add	esp, 12					; 0000000cH
; Line 477
	pop	ebp
	ret	0
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 474
	push	ebp
	mov	ebp, esp
; Line 476
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 12					; 0000000cH
; Line 477
	pop	ebp
	ret	0
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAVScintillaEditView@@PAV1@PAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVScintillaEditView@@PAV1@PAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ScintillaEditView *,ScintillaEditView *,ScintillaEditView *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 470
	push	470					; 000001d6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAPAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@0PB_WI@Z ; std::_Debug_range<ScintillaEditView * *>
	add	esp, 16					; 00000010H
; Line 471
	push	471					; 000001d7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@PAVScintillaEditView@@@std@@YAXPAPAVScintillaEditView@@PB_WI@Z ; std::_Debug_pointer<ScintillaEditView *>
	add	esp, 12					; 0000000cH
; Line 472
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 474
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 475
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAVScintillaEditView@@PAV1@PAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ScintillaEditView *,ScintillaEditView *,ScintillaEditView *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z PROC ; std::_Val_type<ScintillaEditView * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z ENDP ; std::_Val_type<ScintillaEditView * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z ; std::_Val_type<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHUStyle@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHUStyle@@@1@@Z PROC ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::destroy<std::pair<int const ,Style> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$pair@$$CBHUStyle@@@std@@QAEPAXI@Z
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHUStyle@@@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::destroy<std::pair<int const ,Style> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z PROC ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@U_Container_proxy@2@U32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@U_Container_proxy@2@U32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_Container_proxy> >,std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 337
	push	ebp
	mov	ebp, esp
; Line 338
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 339
	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@U_Container_proxy@2@U32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_Container_proxy> >,std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z PROC ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z PROC ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@U_Container_proxy@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@U_Container_proxy@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_Container_proxy> >,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 363
	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@U_Container_proxy@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_Container_proxy> >,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAPAVScintillaEditView@@PAPAV1@@std@@YAAAPAPAVScintillaEditView@@AAPAPAV1@PAPAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAVScintillaEditView@@PAPAV1@@std@@YAAAPAPAVScintillaEditView@@AAPAPAV1@PAPAV1@@Z PROC ; std::_Rechecked<ScintillaEditView * *,ScintillaEditView * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAPAVScintillaEditView@@PAPAV1@@std@@YAAAPAPAVScintillaEditView@@AAPAPAV1@PAPAV1@@Z ENDP ; std::_Rechecked<ScintillaEditView * *,ScintillaEditView * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAPAVScintillaEditView@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAVScintillaEditView@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z PROC ; std::_Uninit_move<ScintillaEditView * *,ScintillaEditView * *,std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVScintillaEditView@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVScintillaEditView@@0@Z ; std::_Ptr_cat<ScintillaEditView *,ScintillaEditView *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z ; std::_Val_type<ScintillaEditView * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAVScintillaEditView@@PAV1@PAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ScintillaEditView *,ScintillaEditView *,ScintillaEditView *>
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAPAVScintillaEditView@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z ENDP ; std::_Uninit_move<ScintillaEditView * *,ScintillaEditView * *,std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z PROC ; std::_Unchecked<ScintillaEditView * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z ENDP ; std::_Unchecked<ScintillaEditView * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z PROC	; std::allocator<wchar_t>::destroy<wchar_t *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ENDP	; std::allocator<wchar_t>::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z PROC ; std::allocator<ScintillaEditView *>::construct<ScintillaEditView *,ScintillaEditView * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAVScintillaEditView@@@std@@YAAAPAVScintillaEditView@@AAPAV1@@Z ; std::forward<ScintillaEditView * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z ENDP ; std::allocator<ScintillaEditView *>::construct<ScintillaEditView *,ScintillaEditView * &>
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Pval$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 585
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 591
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 593
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 594
	jmp	SHORT $LN6@Uninit_fil
$LN5@Uninit_fil:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_fil:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Uninit_fil
; Line 595
	mov	eax, DWORD PTR __Pval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &>
	jmp	SHORT $LN5@Uninit_fil
$LN4@Uninit_fil:
	jmp	SHORT $LN10@Uninit_fil
__catch$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 597
	jmp	SHORT $LN3@Uninit_fil
$LN2@Uninit_fil:
	mov	edx, DWORD PTR __Next$[ebp]
	add	edx, 4
	mov	DWORD PTR __Next$[ebp], edx
$LN3@Uninit_fil:
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Uninit_fil
; Line 598
	mov	ecx, DWORD PTR __Next$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	jmp	SHORT $LN2@Uninit_fil
$LN1@Uninit_fil:
; Line 599
	push	0
	push	0
	call	__CxxThrowException@8
; Line 600
	mov	eax, $LN13@Uninit_fil
	ret	0
$LN10@Uninit_fil:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN9@Uninit_fil
$LN13@Uninit_fil:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Uninit_fil:
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z PROC ; std::_Val_type<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z ENDP ; std::_Val_type<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2344
	push	ebp
	mov	ebp, esp
$LN2@Copy_backw:
; Line 2345
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Copy_backw
; Line 2346
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 4
	mov	DWORD PTR __Last$[ebp], ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	sub	edx, 4
	mov	DWORD PTR __Dest$[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN2@Copy_backw
$LN1@Copy_backw:
; Line 2347
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2348
	pop	ebp
	ret	0
??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0ABV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0ABV10@@Z PROC ; std::_Fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2598
	push	ebp
	mov	ebp, esp
; Line 2599
	jmp	SHORT $LN3@Fill
$LN2@Fill:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN3@Fill:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Fill
; Line 2600
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN2@Fill
$LN4@Fill:
; Line 2601
	pop	ebp
	ret	0
??$_Fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0ABV10@@Z ENDP ; std::_Fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z PROC ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z ENDP ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0PB_WI@Z PROC ; std::_Debug_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0PB_WI@Z ENDP ; std::_Debug_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@1@PAU?$pair@$$CBHUStyle@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@1@PAU?$pair@$$CBHUStyle@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::pair<int const ,Style> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHUStyle@@@1@@Z ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::destroy<std::pair<int const ,Style> >
; Line 731
	pop	ebp
	ret	0
??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@1@PAU?$pair@$$CBHUStyle@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::pair<int const ,Style> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
; Line 731
	pop	ebp
	ret	0
??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 465
	push	ebp
	mov	ebp, esp
; Line 469
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@U_Container_proxy@2@U32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_Container_proxy> >,std::_Container_proxy,std::_Container_proxy>
	add	esp, 16					; 00000010H
; Line 470
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
; Line 731
	pop	ebp
	ret	0
??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
; Line 731
	pop	ebp
	ret	0
??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 474
	push	ebp
	mov	ebp, esp
; Line 476
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@U_Container_proxy@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@@Z ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_Container_proxy> >,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 477
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAPAVScintillaEditView@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVScintillaEditView@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z PROC ; std::_Uninitialized_move<ScintillaEditView * *,ScintillaEditView * *,std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z ; std::_Unchecked<ScintillaEditView * *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z ; std::_Unchecked<ScintillaEditView * *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAPAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@PAPAV1@@Z ; std::_Unchecked<ScintillaEditView * *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAPAVScintillaEditView@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z ; std::_Uninit_move<ScintillaEditView * *,ScintillaEditView * *,std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAPAVScintillaEditView@@PAPAV1@@std@@YAAAPAPAVScintillaEditView@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<ScintillaEditView * *,ScintillaEditView * *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPAVScintillaEditView@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<ScintillaEditView * *,ScintillaEditView * *,std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$?0U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > ><std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 561
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 563
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > ><std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
; Line 731
	pop	ebp
	ret	0
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAXPAPAVScintillaEditView@@0AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAXPAPAVScintillaEditView@@0AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
	push	ebp
	mov	ebp, esp
; Line 90
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAXPAPAVScintillaEditView@@0AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Move@PAPAVScintillaEditView@@PAPAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAVScintillaEditView@@PAPAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ScintillaEditView * *,ScintillaEditView * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2428
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2429
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 2431
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 2432
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
; Line 2433
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAPAVScintillaEditView@@PAPAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ScintillaEditView * *,ScintillaEditView * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@PAVScintillaEditView@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVScintillaEditView@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVScintillaEditView@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVScintillaEditView@@0@Z PROC ; std::_Ptr_cat<ScintillaEditView *,ScintillaEditView *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAVScintillaEditView@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVScintillaEditView@@0@Z ENDP ; std::_Ptr_cat<ScintillaEditView *,ScintillaEditView *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVScintillaEditView@@ABQAV1@@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAXAAV?$allocator@PAVScintillaEditView@@@1@PAPAVScintillaEditView@@ABQAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVScintillaEditView@@ABQAV1@@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAXAAV?$allocator@PAVScintillaEditView@@@1@PAPAVScintillaEditView@@ABQAV3@@Z PROC ; std::allocator_traits<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQAVScintillaEditView@@@std@@YAABQAVScintillaEditView@@ABQAV1@@Z ; std::forward<ScintillaEditView * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@ABQAV3@@Z ; std::allocator<ScintillaEditView *>::construct
; Line 724
	pop	ebp
	ret	0
??$construct@PAVScintillaEditView@@ABQAV1@@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAXAAV?$allocator@PAVScintillaEditView@@@1@PAPAVScintillaEditView@@ABQAV3@@Z ENDP ; std::allocator_traits<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@ABQAVScintillaEditView@@@std@@YAABQAVScintillaEditView@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVScintillaEditView@@@std@@YAABQAVScintillaEditView@@ABQAV1@@Z PROC ; std::forward<ScintillaEditView * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABQAVScintillaEditView@@@std@@YAABQAVScintillaEditView@@ABQAV1@@Z ENDP ; std::forward<ScintillaEditView * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAXAAV?$allocator@PAVScintillaEditView@@@1@PAPAVScintillaEditView@@AAPAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAXAAV?$allocator@PAVScintillaEditView@@@1@PAPAVScintillaEditView@@AAPAV3@@Z PROC ; std::allocator_traits<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAVScintillaEditView@@@std@@YAAAPAVScintillaEditView@@AAPAV1@@Z ; std::forward<ScintillaEditView * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z ; std::allocator<ScintillaEditView *>::construct<ScintillaEditView *,ScintillaEditView * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAXAAV?$allocator@PAVScintillaEditView@@@1@PAPAVScintillaEditView@@AAPAV3@@Z ENDP ; std::allocator_traits<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAVScintillaEditView@@@std@@YAAAPAVScintillaEditView@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVScintillaEditView@@@std@@YAAAPAVScintillaEditView@@AAPAV1@@Z PROC ; std::forward<ScintillaEditView * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAVScintillaEditView@@@std@@YAAAPAVScintillaEditView@@AAPAV1@@Z ENDP ; std::forward<ScintillaEditView * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 380
	push	ebp
	mov	ebp, esp
; Line 381
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::max_size
; Line 382
	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPAV10@@Z PROC ; std::_Allocate<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@IPAU10@@Z PROC ; std::_Allocate<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 268435455	; 0fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@IPAU10@@Z ENDP ; std::_Allocate<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Pval$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 633
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 635
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z ; std::_Val_type<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 24					; 00000018H
; Line 636
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00@Z PROC ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2365
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2367
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 16					; 00000010H
; Line 2368
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00@Z ENDP ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0ABV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0ABV10@@Z PROC ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2621
	push	ebp
	mov	ebp, esp
; Line 2622
	push	2622					; 00000a3eH
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 16					; 00000010H
; Line 2623
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 4
	push	eax
	call	??$_Fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::_Fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 12					; 0000000cH
; Line 2624
	pop	ebp
	ret	0
??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0ABV10@@Z ENDP ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PAV21@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PAV21@00@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PAV21@00@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@$$CBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@$$CBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHUStyle@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHUStyle@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::pair<int const ,Style> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@1@PAU?$pair@$$CBHUStyle@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::pair<int const ,Style> >
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHUStyle@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::pair<int const ,Style> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@PAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@IPAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@IPAPAV1@@Z PROC ; std::_Allocate<ScintillaEditView *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@IPAPAV1@@Z ENDP ; std::_Allocate<ScintillaEditView *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<std::pair<int const ,Style>,void *> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<std::pair<int const ,Style>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
; Function compile flags: /Odtp
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -32						; size = 12
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 365
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 366
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 367
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+=
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 368
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@operator
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN5@operator:
	ret	0
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+
; Function compile flags: /Odtp
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 359
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+=
; Line 361
	mov	eax, DWORD PTR _this$[ebp]
; Line 362
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 307
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
; Function compile flags: /Odtp
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 153
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 157
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	esi, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [edx+ecx*4]
	cmp	DWORD PTR [eax+8], edx
	jae	SHORT $LN2@operator
$LN1@operator:
; Line 159
	push	159					; 0000009fH
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 160
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DAI@BKGFFCGA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
; Line 172
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::destroy<std::_Container_proxy>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 124
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base0>
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 45
	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAPAVScintillaEditView@@@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEPAPAVScintillaEditView@@PAPAV2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVScintillaEditView@@@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEPAPAVScintillaEditView@@PAPAV2@00@Z PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Umove<ScintillaEditView * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<ScintillaEditView *,std::allocator<ScintillaEditView *> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAPAVScintillaEditView@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAPAPAVScintillaEditView@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z ; std::_Uninitialized_move<ScintillaEditView * *,ScintillaEditView * *,std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAVScintillaEditView@@@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEPAPAVScintillaEditView@@PAPAV2@00@Z ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Umove<ScintillaEditView * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@U?$pair@$$CBHUStyle@@@std@@@std@@YAPAU?$pair@$$CBHUStyle@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBHUStyle@@@std@@@std@@YAPAU?$pair@$$CBHUStyle@@@0@AAU10@@Z PROC ; std::addressof<std::pair<int const ,Style> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBHUStyle@@@std@@@std@@YAPAU?$pair@$$CBHUStyle@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<int const ,Style> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@YAPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@YAPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@0@AAU10@@Z PROC ; std::addressof<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@YAPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$?0V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > ><std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 817
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > ><std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
; Line 818
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > ><std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@_W@std@@YAPA_WAA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@_W@std@@YAPA_WAA_W@Z PROC			; std::addressof<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@_W@std@@YAPA_WAA_W@Z ENDP			; std::addressof<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAXPAPAVScintillaEditView@@0AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAXPAPAVScintillaEditView@@0AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVScintillaEditView@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVScintillaEditView@@0@Z ; std::_Ptr_cat<ScintillaEditView *,ScintillaEditView *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAXPAPAVScintillaEditView@@0AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAXPAPAVScintillaEditView@@0AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@$$CBHUStyle@@@std@@@std@@SAPAU?$pair@$$CBHUStyle@@@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@$$CBHUStyle@@@std@@@std@@SAPAU?$pair@$$CBHUStyle@@@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<int const ,Style> *>::pointer_to, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 233
	push	ebp
	mov	ebp, esp
; Line 234
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@$$CBHUStyle@@@std@@@std@@YAPAU?$pair@$$CBHUStyle@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,Style> >
	add	esp, 4
; Line 235
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@$$CBHUStyle@@@std@@@std@@SAPAU?$pair@$$CBHUStyle@@@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<int const ,Style> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@SAPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@SAPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> *>::pointer_to, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 233
	push	ebp
	mov	ebp, esp
; Line 234
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@YAPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@0@AAU10@@Z ; std::addressof<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
	add	esp, 4
; Line 235
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@SAPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Move@PAPAVScintillaEditView@@PAPAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAVScintillaEditView@@PAPAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00@Z PROC ; std::_Move<ScintillaEditView * *,ScintillaEditView * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2439
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2441
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVScintillaEditView@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVScintillaEditView@@0@Z ; std::_Ptr_cat<ScintillaEditView *,ScintillaEditView *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move@PAPAVScintillaEditView@@PAPAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ScintillaEditView * *,ScintillaEditView * *>
	add	esp, 16					; 00000010H
; Line 2442
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAPAVScintillaEditView@@PAPAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00@Z ENDP ; std::_Move<ScintillaEditView * *,ScintillaEditView * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVScintillaEditView@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@ABQAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVScintillaEditView@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@ABQAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQAVScintillaEditView@@@std@@YAABQAVScintillaEditView@@ABQAV1@@Z ; std::forward<ScintillaEditView * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAVScintillaEditView@@ABQAV1@@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAXAAV?$allocator@PAVScintillaEditView@@@1@PAPAVScintillaEditView@@ABQAV3@@Z ; std::allocator_traits<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * const &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAVScintillaEditView@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@ABQAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVScintillaEditView@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVScintillaEditView@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAVScintillaEditView@@@std@@YAAAPAVScintillaEditView@@AAPAV1@@Z ; std::forward<ScintillaEditView * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAVScintillaEditView@@AAPAV1@@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAXAAV?$allocator@PAVScintillaEditView@@@1@PAPAVScintillaEditView@@AAPAV3@@Z ; std::allocator_traits<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAVScintillaEditView@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@QAVScintillaEditView@@@std@@YAPBQAVScintillaEditView@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVScintillaEditView@@@std@@YAPBQAVScintillaEditView@@ABQAV1@@Z PROC ; std::addressof<ScintillaEditView * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@QAVScintillaEditView@@@std@@YAPBQAVScintillaEditView@@ABQAV1@@Z ENDP ; std::addressof<ScintillaEditView * const>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
; Function compile flags: /Odtp
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -32						; size = 12
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 365
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 366
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 367
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+=
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 368
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@operator
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
$LN5@operator:
	ret	0
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+
; Function compile flags: /Odtp
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 359
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+=
; Line 361
	mov	eax, DWORD PTR _this$[ebp]
; Line 362
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 307
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
; Function compile flags: /Odtp
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 153
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 157
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	esi, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [edx+ecx*4]
	cmp	DWORD PTR [eax+8], edx
	jae	SHORT $LN2@operator
$LN1@operator:
; Line 159
	push	159					; 0000009fH
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 160
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1PC@LBPAGKOJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
; Line 172
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVScintillaEditView@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,ScintillaEditView *,int,ScintillaEditView * const *,ScintillaEditView * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??_G?$pair@$$CBHUStyle@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$pair@$$CBHUStyle@@@std@@QAEPAXI@Z PROC		; std::pair<int const ,Style>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$pair@$$CBHUStyle@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$pair@$$CBHUStyle@@@std@@QAEPAXI@Z ENDP		; std::pair<int const ,Style>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$pair@$$CBHUStyle@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$pair@$$CBHUStyle@@@std@@QAE@XZ PROC		; std::pair<int const ,Style>::~pair<int const ,Style>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$pair@$$CBHUStyle@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1Style@@QAE@XZ			; Style::~Style
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$pair@$$CBHUStyle@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1Style@@QAE@XZ			; Style::~Style
__ehhandler$??1?$pair@$$CBHUStyle@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$pair@$$CBHUStyle@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$pair@$$CBHUStyle@@@std@@QAE@XZ ENDP		; std::pair<int const ,Style>::~pair<int const ,Style>
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >
; Function compile flags: /Odtp
;	COMDAT ??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 372
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 373
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator++
; Line 374
	mov	eax, DWORD PTR _this$[ebp]
; Line 375
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUStyle@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUStyle@@@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 367
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 368
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUStyle@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@$$CBHUStyle@@@std@@@std@@SAPAU?$pair@$$CBHUStyle@@@2@AAU32@@Z ; std::pointer_traits<std::pair<int const ,Style> *>::pointer_to
	add	esp, 4
; Line 369
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUStyle@@@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUStyle@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUStyle@@@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 362
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBHUStyle@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator*
; Line 364
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUStyle@@@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 345
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 346
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >
; Function compile flags: /Odtp
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 302
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 304
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv146 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 284
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 287
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN2@operator
$LN1@operator:
; Line 289
	push	289					; 00000121H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 290
	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	290					; 00000122H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	290					; 00000122H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BBG@MEFLKALA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 298
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN7@operator
	mov	DWORD PTR tv146[ebp], 1
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	DWORD PTR tv146[ebp], 0
$LN8@operator:
	mov	al, BYTE PTR tv146[ebp]
; Line 299
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 224
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN2@operator
$LN1@operator:
; Line 230
	push	230					; 000000e6H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 231
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	231					; 000000e7H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	231					; 000000e7H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BBG@GEKGEJHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], eax
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
; Line 242
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBHUStyle@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBHUStyle@@@1@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 204
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN2@operator
$LN1@operator:
; Line 210
	push	210					; 000000d2H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 211
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	211					; 000000d3H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	211					; 000000d3H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BBE@PIHPBAPJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAU?$pair@$$CBHUStyle@@@2@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Myval
	add	esp, 4
; Line 221
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBHUStyle@@@1@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 187
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 188
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 44
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 45
	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 46
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHUStyle@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<int const ,Style>,int,std::pair<int const ,Style> const *,std::pair<int const ,Style> const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??_G?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAEPAXI@Z PROC ; std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAEPAXI@Z ENDP ; std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ PROC ; std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > >::~unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::~_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::~_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >
__ehhandler$??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAE@XZ ENDP ; std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > >::~unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > >
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@0@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@0@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Tidy
; Line 946
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >
__ehhandler$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >
; Line 633
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::_Free_proxy
; Line 609
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::~_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::~_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 429
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 430
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::end
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 431
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@end
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
$LN4@end:
	ret	0
__ehhandler$?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::end
; Function compile flags: /Odtp
;	COMDAT ?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 419
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 420
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 421
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::begin
; Function compile flags: /Odtp
;	COMDAT ??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::~_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 407
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 409
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::~list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::~list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > > > > >
__ehhandler$??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::~_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Cont$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z PROC ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Orphan_ptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1913
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1914
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1915
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1916
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:
; Line 1917
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ptr
; Line 1919
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN2@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN3@Orphan_ptr
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN3@Orphan_ptr
$LN2@Orphan_ptr:
; Line 1920
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1921
	jmp	SHORT $LN1@Orphan_ptr
$LN3@Orphan_ptr:
; Line 1923
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1924
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
$LN1@Orphan_ptr:
; Line 1925
	jmp	SHORT $LN5@Orphan_ptr
$LN6@Orphan_ptr:
; Line 1926
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ENDP ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Orphan_ptr
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1882
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1883
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::clear
; Line 1884
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?clear@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1491
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1493
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Orphan_ptr
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1497
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 1498
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx
; Line 1499
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 1501
	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN3@clear:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN4@clear
; Line 1503
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$1[ebp], ecx
; Line 1504
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ; std::_List_buy<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Freenode
; Line 1505
	jmp	SHORT $LN2@clear
$LN4@clear:
; Line 1506
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1125
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1126
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1127
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@end
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
$LN4@end:
	ret	0
__ehhandler$?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::end
; Function compile flags: /Odtp
;	COMDAT ?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1115
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1116
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1117
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::begin
; Function compile flags: /Odtp
;	COMDAT ??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::~list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1094
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1095
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Tidy
; Line 1096
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::~list<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_buy<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::~_List_buy<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::~_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::~_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >
__ehhandler$??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_buy<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::~_List_buy<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >
; Function compile flags: /Odtp
;	COMDAT ?_Freenode@?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z PROC ; std::_List_buy<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Freenode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 846
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 848
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<int const ,Style>,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
; Line 850
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<int const ,Style>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
; Line 852
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAU?$pair@$$CBHUStyle@@@2@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBHUStyle@@@std@@@std@@YAPAU?$pair@$$CBHUStyle@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,Style> >
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@$$CBHUStyle@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHUStyle@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::pair<int const ,Style> >
; Line 853
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::deallocate
; Line 854
	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode@?$_List_buy@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ENDP ; std::_List_buy<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > >::_Freenode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 803
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 804
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 805
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -3						; size = 1
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Freeheadnode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 771
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 773
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<int const ,Style>,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
; Line 775
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<int const ,Style>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::destroy<std::_List_node<std::pair<int const ,Style>,void *> *>
; Line 776
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::deallocate
; Line 777
	mov	esp, ebp
	pop	ebp
	ret	4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 755
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 757
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 758
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 759
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 760
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 761
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 762
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::~_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 731
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 732
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Freeheadnode
; Line 733
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAEXXZ ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::_Free_proxy
; Line 734
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBHUStyle@@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >::~_List_alloc<0,std::_List_base_types<std::pair<int const ,Style>,std::allocator<std::pair<int const ,Style> > > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::~_List_val<std::_List_simple_types<std::pair<int const ,Style> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::~_List_val<std::_List_simple_types<std::pair<int const ,Style> > >
; Function compile flags: /Odtp
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAU?$pair@$$CBHUStyle@@@2@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAU?$pair@$$CBHUStyle@@@2@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 542
	push	ebp
	mov	ebp, esp
; Line 543
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 544
	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAU?$pair@$$CBHUStyle@@@2@PAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Prevnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 537
	push	ebp
	mov	ebp, esp
; Line 538
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 539
	pop	ebp
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 532
	push	ebp
	mov	ebp, esp
; Line 533
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 534
	pop	ebp
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::allocator<std::_List_node<std::pair<int const ,Style>,void *> >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<int const ,Style>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::allocator<std::_List_node<std::pair<int const ,Style>,void *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_List_node@U?$pair@$$CBHUStyle@@@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_node<std::pair<int const ,Style>,void *> >::allocator<std::_List_node<std::pair<int const ,Style>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
; Function compile flags: /Odtp
;	COMDAT ??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 372
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 373
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator++
; Line 374
	mov	eax, DWORD PTR _this$[ebp]
; Line 375
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 367
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 368
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@SAPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@AAU32@@Z ; std::pointer_traits<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> *>::pointer_to
	add	esp, 4
; Line 369
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 362
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator*
; Line 364
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 345
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 346
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
; Function compile flags: /Odtp
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 302
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 304
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv146 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 284
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 287
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN2@operator
$LN1@operator:
; Line 289
	push	289					; 00000121H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 290
	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	290					; 00000122H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	290					; 00000122H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CEO@DJCOBHAB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 298
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN7@operator
	mov	DWORD PTR tv146[ebp], 1
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	DWORD PTR tv146[ebp], 0
$LN8@operator:
	mov	al, BYTE PTR tv146[ebp]
; Line 299
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 224
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN2@operator
$LN1@operator:
; Line 230
	push	230					; 000000e6H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 231
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	231					; 000000e7H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	231					; 000000e7H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CEO@JJNDPOME@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], eax
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
; Line 242
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 204
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN2@operator
$LN1@operator:
; Line 210
	push	210					; 000000d2H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 211
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	211					; 000000d3H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	211					; 000000d3H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CEM@BAKEJGH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Myval
	add	esp, 4
; Line 221
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 187
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 188
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 44
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 45
	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 46
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,int,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const *,std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??_GScintillaEditView@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GScintillaEditView@@UAEPAXI@Z PROC			; ScintillaEditView::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScintillaEditView@@UAE@XZ		; ScintillaEditView::~ScintillaEditView
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GScintillaEditView@@UAEPAXI@Z ENDP			; ScintillaEditView::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ PROC ; std::unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::~_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::~_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >
__ehhandler$??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ ENDP ; std::unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 1
$T3 = -15						; size = 1
$T4 = -14						; size = 1
$T5 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ PROC ; std::unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\unordered_map
; Line 114
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
	push	eax
	movzx	eax, BYTE PTR $T4[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T3[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@std@@QAE@U?$hash@PAVBuffer@@@1@U?$equal_to@PAVBuffer@@@1@@Z ; std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 115
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::~_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >
__ehhandler$??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ ENDP ; std::unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@PAV32@IPBV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Pval$ = 16						; size = 4
?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@PAV32@IPBV32@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Ufill, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1746
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1747
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Getal
; Line 1748
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
	add	esp, 16					; 00000010H
; Line 1749
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [eax+edx*4]
; Line 1750
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@PAV32@IPBV32@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Ufill
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T2 = -80						; size = 12
tv430 = -68						; size = 4
tv436 = -64						; size = 4
__Off$ = -60						; size = 4
__Tmp$3 = -56						; size = 4
$T4 = -52						; size = 4
__Tmp$5 = -48						; size = 4
__Capacity$6 = -44					; size = 4
__Oldend$7 = -40					; size = 4
__Whereoff$8 = -36					; size = 4
__Ncopied$9 = -32					; size = 4
__Newvec$10 = -28					; size = 4
_this$ = -24						; size = 4
$T11 = -19						; size = 1
$T12 = -18						; size = 1
$T13 = -17						; size = 1
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Count$ = 24						; size = 4
__Val$ = 28						; size = 4
?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Insert_n, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1653
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 1657
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN13@Insert_n
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+8]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN13@Insert_n
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __Where$[ebp+8]
	jae	SHORT $LN14@Insert_n
$LN13@Insert_n:
; Line 1658
	push	1658					; 0000067aH
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EK@EEHFMKDC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN14@Insert_n:
; Line 1661
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Where$[ebp+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR __Off$[ebp], edx
; Line 1662
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN12@Insert_n
	jmp	$LN11@Insert_n
$LN12@Insert_n:
; Line 1664
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN10@Insert_n
; Line 1666
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN9@Insert_n
; Line 1667
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Xlen
$LN9@Insert_n:
; Line 1669
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Grow_to
	mov	DWORD PTR __Capacity$6[ebp], eax
; Line 1670
	mov	eax, DWORD PTR __Capacity$6[ebp]
	push	eax
	lea	ecx, DWORD PTR $T13[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::allocate
	mov	DWORD PTR __Newvec$10[ebp], eax
; Line 1671
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Where$[ebp+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR __Whereoff$8[ebp], eax
; Line 1672
	mov	DWORD PTR __Ncopied$9[ebp], 0
; Line 1674
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 1676
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$addressof@$$CBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > const >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Whereoff$8[ebp]
	mov	ecx, DWORD PTR __Newvec$10[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@PAV32@IPBV32@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Ufill
; Line 1677
	mov	eax, DWORD PTR __Ncopied$9[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$9[ebp], eax
; Line 1679
	mov	ecx, DWORD PTR __Newvec$10[ebp]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
; Line 1680
	mov	edx, DWORD PTR __Ncopied$9[ebp]
	add	edx, 1
	mov	DWORD PTR __Ncopied$9[ebp], edx
; Line 1682
	mov	eax, DWORD PTR __Whereoff$8[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Newvec$10[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	jmp	SHORT $LN17@Insert_n
__catch$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$0:
; Line 1684
	cmp	DWORD PTR __Ncopied$9[ebp], 1
	jle	SHORT $LN7@Insert_n
; Line 1685
	mov	eax, DWORD PTR __Whereoff$8[ebp]
	mov	ecx, DWORD PTR __Newvec$10[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR __Newvec$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Destroy
$LN7@Insert_n:
; Line 1686
	cmp	DWORD PTR __Ncopied$9[ebp], 0
	jle	SHORT $LN6@Insert_n
; Line 1687
	mov	ecx, DWORD PTR __Whereoff$8[ebp]
	mov	edx, DWORD PTR __Newvec$10[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	eax, DWORD PTR __Whereoff$8[ebp]
	mov	ecx, DWORD PTR __Newvec$10[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Destroy
$LN6@Insert_n:
; Line 1688
	mov	eax, DWORD PTR __Capacity$6[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newvec$10[ebp]
	push	ecx
	lea	edx, DWORD PTR $T12[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::deallocate
; Line 1689
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1690
	mov	eax, $LN26@Insert_n
	ret	0
$LN17@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$1
$LN26@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$1:
; Line 1692
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
; Line 1693
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN5@Insert_n
; Line 1695
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Destroy
; Line 1697
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::deallocate
$LN5@Insert_n:
; Line 1700
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1701
	mov	edx, DWORD PTR __Capacity$6[ebp]
	mov	eax, DWORD PTR __Newvec$10[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 1702
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Newvec$10[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1703
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newvec$10[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 1705
	jmp	$LN11@Insert_n
$LN10@Insert_n:
; Line 1706
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR __Where$[ebp+8]
	sar	ecx, 2
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n
; Line 1708
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$5[ebp], eax
; Line 1711
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Where$[ebp+8]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
; Line 1713
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 1716
	lea	ecx, DWORD PTR __Tmp$5[ebp]
	push	ecx
	call	??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR __Where$[ebp+8]
	sar	eax, 2
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@PAV32@IPBV32@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Ufill
	jmp	SHORT $LN19@Insert_n
__catch$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$2:
; Line 1719
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp+8]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Destroy
; Line 1720
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1721
	mov	eax, $LN28@Insert_n
	ret	0
$LN19@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$3
$LN28@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$3:
; Line 1723
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1724
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Orphan_range
; Line 1726
	lea	ecx, DWORD PTR __Tmp$5[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, edx
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	call	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 12					; 0000000cH
; Line 1728
	jmp	SHORT $LN11@Insert_n
$LN3@Insert_n:
; Line 1730
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$3[ebp], ecx
; Line 1732
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Oldend$7[ebp], eax
; Line 1734
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Oldend$7[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR __Oldend$7[ebp]
	sub	edx, ecx
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1736
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Orphan_range
; Line 1738
	mov	edx, DWORD PTR __Oldend$7[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR __Oldend$7[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	call	??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@PAV10@00@Z ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *>
	add	esp, 12					; 0000000cH
; Line 1740
	lea	eax, DWORD PTR __Tmp$3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Where$[ebp+8]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	call	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 12					; 0000000cH
$LN11@Insert_n:
; Line 1742
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::begin
	mov	DWORD PTR tv436[ebp], eax
	mov	edx, DWORD PTR tv436[ebp]
	mov	DWORD PTR tv430[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	mov	ecx, DWORD PTR tv430[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::operator+
	mov	eax, DWORD PTR $T4[ebp]
	or	eax, 1
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN16@Insert_n:
; Line 1743
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$4:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$5:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$6:
	mov	eax, DWORD PTR $T4[ebp]
	and	eax, 1
	je	$LN24@Insert_n
	and	DWORD PTR $T4[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN24@Insert_n:
	ret	0
__ehhandler$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Insert_n
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?clear@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1508
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1509
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Destroy
; Line 1510
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+8], eax
; Line 1511
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv66 = -36						; size = 4
tv89 = -32						; size = 4
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv95 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Count$ = 24						; size = 4
__Val$ = 28						; size = 4
?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::insert, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1333
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1334
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv95[ebp], eax
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR tv89[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Insert_n
	mov	DWORD PTR tv66[ebp], eax
	mov	edx, DWORD PTR $T3[ebp]
	or	edx, 1
	mov	DWORD PTR $T3[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1335
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$1:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$2:
	mov	eax, DWORD PTR $T3[ebp]
	and	eax, 1
	je	$LN6@insert
	and	DWORD PTR $T3[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN6@insert:
	ret	0
__ehhandler$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::insert
; Function compile flags: /Odtp
;	COMDAT ?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T2 = -64						; size = 12
$T3 = -52						; size = 12
tv66 = -40						; size = 4
tv131 = -36						; size = 4
$T4 = -32						; size = 4
tv134 = -28						; size = 4
tv95 = -24						; size = 4
tv133 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1321
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1322
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::clear
; Line 1323
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::begin
	mov	DWORD PTR tv133[ebp], eax
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv95[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	mov	edx, DWORD PTR tv95[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv134[ebp], eax
	mov	eax, DWORD PTR tv134[ebp]
	mov	DWORD PTR tv131[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::insert
	mov	DWORD PTR tv66[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
; Line 1324
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z$1:
	mov	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::assign
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::begin
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 2
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Tidy
; Line 946
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
__ehhandler$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 685
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 686
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
__ehhandler$??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >
; Line 633
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_Container_proxy> > >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Free_proxy
; Line 609
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::~_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::~_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 480
	push	ebp
	mov	ebp, esp
; Line 481
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
	add	esp, 8
; Line 482
	pop	ebp
	ret	0
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 1073741823				; 3fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@ABV32@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv69 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@ABV32@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv69[ebp], 0
$LN1@construct:
; Line 594
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@ABV32@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::construct
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@0@IPAV10@@Z ; std::_Allocate<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Init@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@IAEXI@Z PROC ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 1005
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1006
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Unchecked_end
	push	eax
	mov	ecx, DWORD PTR __Buckets$[ebp]
	shl	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::assign
; Line 1007
	mov	edx, DWORD PTR __Buckets$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], edx
; Line 1008
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Buckets$[ebp]
	mov	DWORD PTR [ecx+32], edx
; Line 1009
	mov	esp, ebp
	pop	ebp
	ret	4
?_Init@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@IAEXI@Z ENDP ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unchecked_end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Unchecked_end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 449
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Unchecked_end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 451
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 429
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 430
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::end
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 431
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@end
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN4@end:
	ret	0
__ehhandler$?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::end
; Function compile flags: /Odtp
;	COMDAT ?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 419
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 420
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 421
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::begin
; Function compile flags: /Odtp
;	COMDAT ??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::~_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 407
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 409
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
__ehhandler$??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::~_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 311
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Parg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@@Z ; std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0>::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0>
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > ><std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+36], xmm0
; Line 312
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Init
; Line 313
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > > > > >
__ehhandler$??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Cont$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z PROC ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Orphan_ptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1913
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1914
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1915
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1916
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:
; Line 1917
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ptr
; Line 1919
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN2@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN3@Orphan_ptr
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN3@Orphan_ptr
$LN2@Orphan_ptr:
; Line 1920
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1921
	jmp	SHORT $LN1@Orphan_ptr
$LN3@Orphan_ptr:
; Line 1923
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1924
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
$LN1@Orphan_ptr:
; Line 1925
	jmp	SHORT $LN5@Orphan_ptr
$LN6@Orphan_ptr:
; Line 1926
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ENDP ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Orphan_ptr
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1882
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1883
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::clear
; Line 1884
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?clear@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1491
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1493
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QBEXAAV12@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Orphan_ptr
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1497
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 1498
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx
; Line 1499
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 1501
	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN3@clear:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN4@clear
; Line 1503
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$1[ebp], ecx
; Line 1504
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ; std::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Freenode
; Line 1505
	jmp	SHORT $LN2@clear
$LN4@clear:
; Line 1506
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unchecked_end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Unchecked_end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1125
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1126
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1127
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@end
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN4@end:
	ret	0
__ehhandler$?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::end
; Function compile flags: /Odtp
;	COMDAT ?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1115
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1116
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1117
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::begin
; Function compile flags: /Odtp
;	COMDAT ??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1094
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1095
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Tidy
; Line 1096
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z PROC ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 896
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 897
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ENDP ; std::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::list<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
__ehhandler$??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
; Function compile flags: /Odtp
;	COMDAT ?_Freenode@?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z PROC ; std::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Freenode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 846
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 848
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
; Line 850
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
; Line 852
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@YAPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@0@AAU10@@Z ; std::addressof<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
; Line 853
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::deallocate
; Line 854
	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode@?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ENDP ; std::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Freenode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z PROC ; std::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 823
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 824
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
__ehhandler$??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_buy@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ENDP ; std::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_List_buy<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 803
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 804
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 805
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
$T2 = -20						; size = 1
$T3 = -19						; size = 1
$T4 = -18						; size = 1
$T5 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Buynode0, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 781
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	push	1
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 784
	cmp	DWORD PTR __Next$[ebp], 0
	jne	SHORT $LN2@Buynode0
; Line 786
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Next$[ebp], ecx
; Line 787
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Prev$[ebp], edx
$LN2@Buynode0:
; Line 789
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 791
	lea	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
; Line 793
	lea	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::construct<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *,std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> * &>
	jmp	SHORT $LN5@Buynode0
__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z$0:
; Line 795
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::deallocate
; Line 796
	push	0
	push	0
	call	__CxxThrowException@8
; Line 797
	mov	eax, $LN8@Buynode0
	ret	0
$LN5@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z$1
$LN8@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z$1:
; Line 799
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode0:
; Line 800
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Buynode0
; Function compile flags: /Odtp
;	COMDAT ?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -3						; size = 1
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Freeheadnode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 771
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 773
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
; Line 775
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::destroy<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> *>
; Line 776
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::deallocate
; Line 777
	mov	esp, ebp
	pop	ebp
	ret	4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Buyheadnode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 766
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 767
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Buynode0
; Line 768
	mov	esp, ebp
	pop	ebp
	ret	0
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 755
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 757
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 758
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 759
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 760
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 761
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 762
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 746
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 748
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 749
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 750
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 751
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 752
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 731
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 732
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Freeheadnode
; Line 733
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Free_proxy
; Line 734
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::~_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
___formal$ = 8						; size = 4
??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 719
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 721
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Buyheadnode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 722
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 723
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Alloc_proxy
	jmp	SHORT $LN4@List_alloc
__catch$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$0:
; Line 725
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_Freeheadnode
; Line 726
	push	0
	push	0
	call	__CxxThrowException@8
; Line 727
	mov	eax, $LN8@List_alloc
	ret	0
$LN4@List_alloc:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN2@List_alloc
$LN8@List_alloc:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN2@List_alloc:
; Line 728
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN3@List_alloc:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@1@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::_List_alloc<0,std::_List_base_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::~_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
; Function compile flags: /Odtp
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 542
	push	ebp
	mov	ebp, esp
; Line 543
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 544
	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@2@PAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Prevnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 537
	push	ebp
	mov	ebp, esp
; Line 538
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 539
	pop	ebp
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 532
	push	ebp
	mov	ebp, esp
; Line 533
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 534
	pop	ebp
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 525
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 527
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 528
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 529
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_List_node@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >::allocator<std::_List_node<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Traits$ = 8						; size = 4
??0?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@@Z PROC ; std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0>::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\unordered_map
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@1@@Z ENDP ; std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0>::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@std@@QAE@U?$hash@PAVBuffer@@@1@U?$equal_to@PAVBuffer@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Hasharg$ = 8						; size = 1
__Keyeqarg$ = 12					; size = 1
??0?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@std@@QAE@U?$hash@PAVBuffer@@@1@U?$equal_to@PAVBuffer@@@1@@Z PROC ; std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 232
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR __Keyeqarg$[ebp]
	push	eax
	movzx	ecx, BYTE PTR __Hasharg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Hash_oper2@$0A@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@2@@std@@QAE@U?$hash@PAVBuffer@@@1@U?$equal_to@PAVBuffer@@@1@@Z ; std::_Hash_oper2<0,std::hash<Buffer *>,std::equal_to<Buffer *> >::_Hash_oper2<0,std::hash<Buffer *>,std::equal_to<Buffer *> >
; Line 233
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@std@@QAE@U?$hash@PAVBuffer@@@1@U?$equal_to@PAVBuffer@@@1@@Z ENDP ; std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Hash_oper2@$0A@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@2@@std@@QAE@U?$hash@PAVBuffer@@@1@U?$equal_to@PAVBuffer@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Hasharg$ = 8						; size = 1
___formal$ = 12						; size = 1
??0?$_Hash_oper2@$0A@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@2@@std@@QAE@U?$hash@PAVBuffer@@@1@U?$equal_to@PAVBuffer@@@1@@Z PROC ; std::_Hash_oper2<0,std::hash<Buffer *>,std::equal_to<Buffer *> >::_Hash_oper2<0,std::hash<Buffer *>,std::equal_to<Buffer *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 204
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR __Hasharg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Hash_oper1@$0A@U?$hash@PAVBuffer@@@std@@@std@@QAE@U?$hash@PAVBuffer@@@1@@Z ; std::_Hash_oper1<0,std::hash<Buffer *> >::_Hash_oper1<0,std::hash<Buffer *> >
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Hash_oper2@$0A@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@2@@std@@QAE@U?$hash@PAVBuffer@@@1@U?$equal_to@PAVBuffer@@@1@@Z ENDP ; std::_Hash_oper2<0,std::hash<Buffer *>,std::equal_to<Buffer *> >::_Hash_oper2<0,std::hash<Buffer *>,std::equal_to<Buffer *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Hash_oper1@$0A@U?$hash@PAVBuffer@@@std@@@std@@QAE@U?$hash@PAVBuffer@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??0?$_Hash_oper1@$0A@U?$hash@PAVBuffer@@@std@@@std@@QAE@U?$hash@PAVBuffer@@@1@@Z PROC ; std::_Hash_oper1<0,std::hash<Buffer *> >::_Hash_oper1<0,std::hash<Buffer *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Hash_oper1@$0A@U?$hash@PAVBuffer@@@std@@@std@@QAE@U?$hash@PAVBuffer@@@1@@Z ENDP ; std::_Hash_oper1<0,std::hash<Buffer *> >::_Hash_oper1<0,std::hash<Buffer *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?destroy@ScintillaEditView@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?destroy@ScintillaEditView@@UAEXXZ PROC			; ScintillaEditView::destroy, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\scintillaeditview.h
; Line 233
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
; Line 235
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 236
	mov	esp, ebp
	pop	ebp
	ret	0
?destroy@ScintillaEditView@@UAEXXZ ENDP			; ScintillaEditView::destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1ScintillaEditView@@UAE@XZ
_TEXT	SEGMENT
$T2 = -100						; size = 12
$T3 = -88						; size = 12
_it2$4 = -76						; size = 12
_it$5 = -64						; size = 12
tv199 = -52						; size = 4
$T6 = -48						; size = 4
$T7 = -44						; size = 4
tv208 = -40						; size = 4
tv153 = -36						; size = 4
tv205 = -32						; size = 4
tv86 = -28						; size = 4
$T8 = -24						; size = 4
_this$ = -20						; size = 4
$T9 = -14						; size = 1
$T10 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??1ScintillaEditView@@UAE@XZ PROC			; ScintillaEditView::~ScintillaEditView, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\scintillaeditview.h
; Line 214
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ScintillaEditView@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScintillaEditView@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 215
	mov	ecx, DWORD PTR ?_refCount@ScintillaEditView@@1HA ; ScintillaEditView::_refCount
	sub	ecx, 1
	mov	DWORD PTR ?_refCount@ScintillaEditView@@1HA, ecx ; ScintillaEditView::_refCount
; Line 217
	jne	$LN9@ScintillaE
	cmp	DWORD PTR ?_hLib@ScintillaEditView@@1PAUHINSTANCE__@@A, 0 ; ScintillaEditView::_hLib
	je	$LN9@ScintillaE
; Line 219
	mov	edx, DWORD PTR ?_hLib@ScintillaEditView@@1PAUHINSTANCE__@@A ; ScintillaEditView::_hLib
	push	edx
	call	DWORD PTR __imp__FreeLibrary@4
; Line 221
	lea	eax, DWORD PTR _it$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?begin@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	jmp	SHORT $LN7@ScintillaE
$LN6@ScintillaE:
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator++
$LN7@ScintillaE:
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?end@?$_Hash@V?$_Umap_traits@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@V?$_Uhash_compare@PAVBuffer@@U?$hash@PAVBuffer@@@std@@U?$equal_to@PAVBuffer@@@3@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::_Uhash_compare<Buffer *,std::hash<Buffer *>,std::equal_to<Buffer *> >,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> >,0> >::end
	mov	DWORD PTR tv86[ebp], eax
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv205[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv205[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator!=
	mov	BYTE PTR $T10[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T10[ebp]
	test	ecx, ecx
	je	$LN5@ScintillaE
; Line 223
	lea	edx, DWORD PTR _it2$4[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator->
	mov	ecx, DWORD PTR [eax+4]
	call	?begin@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	jmp	SHORT $LN4@ScintillaE
$LN3@ScintillaE:
	lea	ecx, DWORD PTR _it2$4[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator++
$LN4@ScintillaE:
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator->
	mov	ecx, DWORD PTR [eax+4]
	call	?end@?$_Hash@V?$_Umap_traits@HUStyle@@V?$_Uhash_compare@HU?$hash@H@std@@U?$equal_to@H@2@@std@@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<int,Style,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,Style> >,0> >::end
	mov	DWORD PTR tv153[ebp], eax
	mov	ecx, DWORD PTR tv153[ebp]
	mov	DWORD PTR tv208[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv208[ebp]
	push	edx
	lea	ecx, DWORD PTR _it2$4[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator!=
	mov	BYTE PTR $T9[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T9[ebp]
	test	eax, eax
	je	SHORT $LN2@ScintillaE
; Line 225
	lea	ecx, DWORD PTR _it2$4[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUStyle@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator->
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN1@ScintillaE
; Line 226
	lea	ecx, DWORD PTR _it2$4[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUStyle@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,Style> > > >::operator->
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR $T7[ebp], ecx
	mov	edx, DWORD PTR $T7[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN1@ScintillaE:
; Line 227
	jmp	SHORT $LN3@ScintillaE
$LN2@ScintillaE:
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _it2$4[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
; Line 228
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > > >::operator->
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR $T6[ebp], eax
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN11@ScintillaE
	push	1
	mov	ecx, DWORD PTR $T8[ebp]
	call	??_G?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@QAEPAXI@Z
	mov	DWORD PTR tv199[ebp], eax
	jmp	SHORT $LN12@ScintillaE
$LN11@ScintillaE:
	mov	DWORD PTR tv199[ebp], 0
$LN12@ScintillaE:
; Line 229
	jmp	$LN6@ScintillaE
$LN5@ScintillaE:
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN9@ScintillaE:
; Line 231
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Window@@UAE@XZ			; Window::~Window
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ScintillaEditView@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Window@@UAE@XZ			; Window::~Window
__unwindfunclet$??1ScintillaEditView@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??1ScintillaEditView@@UAE@XZ$2:
	lea	ecx, DWORD PTR _it$5[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??1ScintillaEditView@@UAE@XZ$3:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??1ScintillaEditView@@UAE@XZ$4:
	lea	ecx, DWORD PTR _it2$4[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??1ScintillaEditView@@UAE@XZ$5:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBHUStyle@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1ScintillaEditView@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ScintillaEditView@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ScintillaEditView@@UAE@XZ ENDP			; ScintillaEditView::~ScintillaEditView
; Function compile flags: /Odtp
;	COMDAT ??0ScintillaEditView@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ScintillaEditView@@QAE@XZ PROC			; ScintillaEditView::ScintillaEditView, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\scintillaeditview.h
; Line 209
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ScintillaEditView@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Window@@QAE@XZ			; Window::Window
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScintillaEditView@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+44], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+45], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ ; std::unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >::unordered_map<Buffer *,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *,std::hash<Buffer *>,std::equal_to<Buffer *>,std::allocator<std::pair<Buffer * const,std::unordered_map<int,Style,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,Style> > > *> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+88], -1
; Line 210
	mov	eax, DWORD PTR ?_refCount@ScintillaEditView@@1HA ; ScintillaEditView::_refCount
	add	eax, 1
	mov	DWORD PTR ?_refCount@ScintillaEditView@@1HA, eax ; ScintillaEditView::_refCount
; Line 211
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ScintillaEditView@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Window@@UAE@XZ			; Window::~Window
__unwindfunclet$??0ScintillaEditView@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1?$unordered_map@PAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@U?$hash@PAVBuffer@@@3@U?$equal_to@PAVBuffer@@@3@V?$allocator@U?$pair@QAVBuffer@@PAV?$unordered_map@HUStyle@@U?$hash@H@std@@U?$equal_to@H@3@V?$allocator@U?$pair@$$CBHUStyle@@@std@@@3@@std@@@std@@@3@@std@@QAE@XZ
__ehhandler$??0ScintillaEditView@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ScintillaEditView@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ScintillaEditView@@QAE@XZ ENDP			; ScintillaEditView::ScintillaEditView
; Function compile flags: /Odtp
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 59
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Ignore@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Ignore@std@@QAE@XZ PROC				; std::_Ignore::_Ignore, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Ignore@std@@QAE@XZ ENDP				; std::_Ignore::_Ignore
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Style@@QAE@XZ
_TEXT	SEGMENT
tv71 = -16						; size = 4
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
??1Style@@QAE@XZ PROC					; Style::~Style, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 310
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN2@Style
; Line 311
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@Style
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@Style
$LN4@Style:
	mov	DWORD PTR tv71[ebp], 0
$LN2@Style:
; Line 312
	mov	esp, ebp
	pop	ebp
	ret	0
??1Style@@QAE@XZ ENDP					; Style::~Style
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GWindow@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GWindow@@UAEPAXI@Z PROC				; Window::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Window@@UAE@XZ			; Window::~Window
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GWindow@@UAEPAXI@Z ENDP				; Window::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getHSelf@Window@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getHSelf@Window@@QBEPAUHWND__@@XZ PROC			; Window::getHSelf, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 96
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 99
	mov	esp, ebp
	pop	ebp
	ret	0
?getHSelf@Window@@QBEPAUHWND__@@XZ ENDP			; Window::getHSelf
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?isVisible@Window@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -1						; size = 1
?isVisible@Window@@UBE_NXZ PROC				; Window::isVisible, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__IsWindowVisible@4
	test	eax, eax
	je	SHORT $LN3@isVisible
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN4@isVisible
$LN3@isVisible:
	mov	BYTE PTR tv68[ebp], 0
$LN4@isVisible:
	mov	al, BYTE PTR tv68[ebp]
; Line 94
	mov	esp, ebp
	pop	ebp
	ret	0
?isVisible@Window@@UBE_NXZ ENDP				; Window::isVisible
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getHeight@Window@@UBEHXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_rc$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?getHeight@Window@@UBEHXZ PROC				; Window::getHeight, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 86
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__IsWindowVisible@4
	cmp	eax, 1
	jne	SHORT $LN1@getHeight
; Line 88
	mov	eax, DWORD PTR _rc$[ebp+12]
	sub	eax, DWORD PTR _rc$[ebp+4]
	jmp	SHORT $LN2@getHeight
$LN1@getHeight:
; Line 89
	xor	eax, eax
$LN2@getHeight:
; Line 90
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?getHeight@Window@@UBEHXZ ENDP				; Window::getHeight
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getWidth@Window@@UBEHXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_rc$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?getWidth@Window@@UBEHXZ PROC				; Window::getWidth, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 81
	mov	eax, DWORD PTR _rc$[ebp+8]
	sub	eax, DWORD PTR _rc$[ebp]
; Line 82
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?getWidth@Window@@UBEHXZ ENDP				; Window::getWidth
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getWindowRect@Window@@UBEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?getWindowRect@Window@@UBEXAAUtagRECT@@@Z PROC		; Window::getWindowRect, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetWindowRect@8
; Line 76
	mov	esp, ebp
	pop	ebp
	ret	4
?getWindowRect@Window@@UBEXAAUtagRECT@@@Z ENDP		; Window::getWindowRect
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getClientRect@Window@@UBEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?getClientRect@Window@@UBEXAAUtagRECT@@@Z PROC		; Window::getClientRect, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 72
	mov	esp, ebp
	pop	ebp
	ret	4
?getClientRect@Window@@UBEXAAUtagRECT@@@Z ENDP		; Window::getClientRect
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?redraw@Window@@UBEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_forceUpdate$ = 8					; size = 1
?redraw@Window@@UBEX_N@Z PROC				; Window::redraw, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	push	1
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 66
	movzx	edx, BYTE PTR _forceUpdate$[ebp]
	test	edx, edx
	je	SHORT $LN2@redraw
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__UpdateWindow@4
$LN2@redraw:
; Line 68
	mov	esp, ebp
	pop	ebp
	ret	4
?redraw@Window@@UBEX_N@Z ENDP				; Window::redraw
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z PROC		; Window::reSizeToWH, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 59
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	push	1
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__MoveWindow@24
; Line 61
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
; Line 62
	mov	esp, ebp
	pop	ebp
	ret	4
?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z ENDP		; Window::reSizeToWH
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?reSizeTo@Window@@UAEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?reSizeTo@Window@@UAEXAAUtagRECT@@@Z PROC		; Window::reSizeTo, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 53
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 54
	push	1
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__MoveWindow@24
; Line 55
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
; Line 56
	mov	esp, ebp
	pop	ebp
	ret	4
?reSizeTo@Window@@UAEXAAUtagRECT@@@Z ENDP		; Window::reSizeTo
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?display@Window@@UBEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_toShow$ = 8						; size = 1
?display@Window@@UBEX_N@Z PROC				; Window::display, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	movzx	eax, BYTE PTR _toShow$[ebp]
	test	eax, eax
	je	SHORT $LN3@display
	mov	DWORD PTR tv67[ebp], 5
	jmp	SHORT $LN4@display
$LN3@display:
	mov	DWORD PTR tv67[ebp], 0
$LN4@display:
	mov	ecx, DWORD PTR tv67[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 50
	mov	esp, ebp
	pop	ebp
	ret	4
?display@Window@@UBEX_N@Z ENDP				; Window::display
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hInst$ = 8						; size = 4
_parent$ = 12						; size = 4
?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z PROC	; Window::init, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hInst$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 43
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _parent$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	8
?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z ENDP	; Window::init
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Window@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Window@@UAE@XZ PROC					; Window::~Window, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Window@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1Window@@UAE@XZ ENDP					; Window::~Window
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Window@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Window@@QAE@XZ PROC					; Window::Window, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Window@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Window@@QAE@XZ ENDP					; Window::Window
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPAXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 8
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$1[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@_W@std@@YAPA_WAA_W@Z	; std::addressof<wchar_t>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 7
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Line 2286
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 2
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	xor	eax, eax
	mov	WORD PTR $T1[ebp], ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+20], edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Newsize$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ; std::char_traits<wchar_t>::assign
	add	esp, 8
; Line 2238
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 991
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 992
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
; Line 651
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@_W@std@@YAPA_WAA_W@Z	; std::addressof<wchar_t>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ; std::allocator<wchar_t>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_System_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_System_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 615
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er
; Line 616
	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er
; Line 617
	jmp	SHORT $LN3@default_er
$LN2@default_er:
; Line 618
	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 608
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 609
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_System_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_System_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_System_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 585
	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message
; Line 586
	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message
; Line 587
	jmp	SHORT $LN3@message
$LN2@message:
; Line 588
	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 580
	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Iostream_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??1_Generic_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 564
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 565
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 559
	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Generic_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??0_Generic_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]
; Line 355
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 339
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 248
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 243
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]
; Line 393
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 385
	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==
; Line 386
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
	push	ebp
	mov	ebp, esp
; Line 653
	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 548
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$1 = -12						; size = 4
_this$ = -8						; size = 4
_i$2 = -4						; size = 4
_handle2Find$ = 8					; size = 4
?getIndexFrom@ScintillaCtrls@@AAEHPAUHWND__@@@Z PROC	; ScintillaCtrls::getIndexFrom
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\scintillactrls.cpp
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 43
	mov	DWORD PTR _i$2[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::size
	mov	DWORD PTR _len$1[ebp], eax
	jmp	SHORT $LN4@getIndexFr
$LN3@getIndexFr:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN4@getIndexFr:
	mov	ecx, DWORD PTR _i$2[ebp]
	cmp	ecx, DWORD PTR _len$1[ebp]
	jae	SHORT $LN2@getIndexFr
; Line 45
	mov	edx, DWORD PTR _i$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEAAPAVScintillaEditView@@I@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	cmp	eax, DWORD PTR _handle2Find$[ebp]
	jne	SHORT $LN1@getIndexFr
; Line 47
	mov	eax, DWORD PTR _i$2[ebp]
	jmp	SHORT $LN5@getIndexFr
$LN1@getIndexFr:
; Line 49
	jmp	SHORT $LN3@getIndexFr
$LN2@getIndexFr:
; Line 50
	or	eax, -1
$LN5@getIndexFr:
; Line 51
	mov	esp, ebp
	pop	ebp
	ret	4
?getIndexFrom@ScintillaCtrls@@AAEHPAUHWND__@@@Z ENDP	; ScintillaCtrls::getIndexFrom
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXXZ PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXXZ ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEII@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<ScintillaEditView *,std::allocator<ScintillaEditView *> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEPAPAVScintillaEditView@@I@Z ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAVScintillaEditView@@@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEPAPAVScintillaEditView@@PAPAV2@00@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Umove<ScintillaEditView * *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<ScintillaEditView *,std::allocator<ScintillaEditView *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@I@Z ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXPAPAVScintillaEditView@@0@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<ScintillaEditView *,std::allocator<ScintillaEditView *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@I@Z ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1608
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBE_NPBQAVScintillaEditView@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBE_NPBQAVScintillaEditView@@@Z PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBE_NPBQAVScintillaEditView@@@Z ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEII@Z PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEII@Z ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXPAPAVScintillaEditView@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXPAPAVScintillaEditView@@0@Z PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<ScintillaEditView *,std::allocator<ScintillaEditView *> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@YAXPAPAVScintillaEditView@@0AAU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<ScintillaEditView *> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXPAPAVScintillaEditView@@0@Z ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv182 = -36						; size = 4
tv181 = -32						; size = 4
$T2 = -28						; size = 4
tv188 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1438
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1441
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN1@erase
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+8]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@erase
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __Where$[ebp+8]
	ja	SHORT $LN2@erase
$LN1@erase:
; Line 1442
	push	1442					; 000005a2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@erase:
; Line 1443
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	add	ecx, 4
	push	ecx
	call	??$_Move@PAPAVScintillaEditView@@PAPAV1@@std@@YAPAPAVScintillaEditView@@PAPAV1@00@Z ; std::_Move<ScintillaEditView * *,ScintillaEditView * *>
	add	esp, 12					; 0000000cH
; Line 1444
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, 4
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXPAPAVScintillaEditView@@0@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Destroy
; Line 1445
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Orphan_range
; Line 1446
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1447
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv188[ebp], eax
	mov	ecx, DWORD PTR tv188[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Make_iter
	mov	DWORD PTR tv182[ebp], eax
	mov	eax, DWORD PTR $T3[ebp]
	or	eax, 1
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1448
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z$1:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z$2:
	mov	eax, DWORD PTR $T3[ebp]
	and	eax, 1
	je	$LN8@erase
	and	DWORD PTR $T3[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
$LN8@erase:
	ret	0
__ehhandler$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::erase
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXABQAVScintillaEditView@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXABQAVScintillaEditView@@@Z PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1244
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@QAVScintillaEditView@@@std@@YAPBQAVScintillaEditView@@ABQAV1@@Z ; std::addressof<ScintillaEditView * const>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBE_NPBQAVScintillaEditView@@@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back
; Line 1246
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@QAVScintillaEditView@@@std@@YAPBQAVScintillaEditView@@ABQAV1@@Z ; std::addressof<ScintillaEditView * const>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 1247
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 1248
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Reserve
$LN3@push_back:
; Line 1249
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Orphan_range
; Line 1251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Idx$1[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<ScintillaEditView *,std::allocator<ScintillaEditView *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAVScintillaEditView@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * &>
; Line 1252
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1254
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+12]
	jne	SHORT $LN1@push_back
; Line 1257
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IAEXI@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Reserve
$LN1@push_back:
; Line 1258
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@IBEXPAPAVScintillaEditView@@0@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Orphan_range
; Line 1260
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<ScintillaEditView *,std::allocator<ScintillaEditView *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAVScintillaEditView@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::construct<ScintillaEditView *,ScintillaEditView * const &>
; Line 1261
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXABQAVScintillaEditView@@@Z ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEAAPAVScintillaEditView@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEAAPAVScintillaEditView@@I@Z PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MK@HJPEJHDM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAS?$AAc?$AAi?$AAn?$AAt?$AAi?$AAl?$AAl?$AAa?$AAE?$AAd?$AAi?$AAt?$AAV@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEAAPAVScintillaEditView@@I@Z ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<ScintillaEditView *,std::allocator<ScintillaEditView *> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1044
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1045
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1046
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@Make_iter
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
$LN5@Make_iter:
	ret	0
__ehhandler$?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Make_iter
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@PAPAVScintillaEditView@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::begin
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 2
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ PROC ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ENDP ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<ScintillaEditView *,std::allocator<ScintillaEditView *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::_Wrap_alloc<std::allocator<ScintillaEditView *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<ScintillaEditView *,std::allocator<ScintillaEditView *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAIABV?$allocator@PAVScintillaEditView@@@2@@Z ; std::allocator_traits<std::allocator<ScintillaEditView *> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@I@Z PROC ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@I@Z ; std::allocator<ScintillaEditView *>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXPAPAVScintillaEditView@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEPAPAVScintillaEditView@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEPAPAVScintillaEditView@@I@Z PROC ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@PAVScintillaEditView@@@std@@QAEPAPAVScintillaEditView@@I@Z ; std::allocator<ScintillaEditView *>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEPAPAVScintillaEditView@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::_Wrap_alloc<std::allocator<ScintillaEditView *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAVScintillaEditView@@@std@@QAE@XZ ; std::allocator<ScintillaEditView *>::allocator<ScintillaEditView *>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<ScintillaEditView *> >::_Wrap_alloc<std::allocator<ScintillaEditView *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAIABV?$allocator@PAVScintillaEditView@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAIABV?$allocator@PAVScintillaEditView@@@2@@Z PROC ; std::allocator_traits<std::allocator<ScintillaEditView *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@PAVScintillaEditView@@@std@@QBEIXZ ; std::allocator<ScintillaEditView *>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@PAVScintillaEditView@@@std@@@std@@SAIABV?$allocator@PAVScintillaEditView@@@2@@Z ENDP ; std::allocator_traits<std::allocator<ScintillaEditView *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@PAVScintillaEditView@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAVScintillaEditView@@@std@@QBEIXZ PROC ; std::allocator<ScintillaEditView *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 1073741823				; 3fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVScintillaEditView@@@std@@QBEIXZ ENDP ; std::allocator<ScintillaEditView *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv68 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@ABQAV3@@Z PROC ; std::allocator<ScintillaEditView *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@ABQAV3@@Z ENDP ; std::allocator<ScintillaEditView *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@PAVScintillaEditView@@@std@@QAEPAPAVScintillaEditView@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVScintillaEditView@@@std@@QAEPAPAVScintillaEditView@@I@Z PROC ; std::allocator<ScintillaEditView *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAVScintillaEditView@@@std@@YAPAPAVScintillaEditView@@IPAPAV1@@Z ; std::_Allocate<ScintillaEditView *>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAVScintillaEditView@@@std@@QAEPAPAVScintillaEditView@@I@Z ENDP ; std::allocator<ScintillaEditView *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@I@Z PROC ; std::allocator<ScintillaEditView *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVScintillaEditView@@@std@@QAEXPAPAVScintillaEditView@@I@Z ENDP ; std::allocator<ScintillaEditView *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PAVScintillaEditView@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVScintillaEditView@@@std@@QAE@XZ PROC	; std::allocator<ScintillaEditView *>::allocator<ScintillaEditView *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVScintillaEditView@@@std@@QAE@XZ ENDP	; std::allocator<ScintillaEditView *>::allocator<ScintillaEditView *>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv128 = -28						; size = 4
$T1 = -24						; size = 4
_len$2 = -20						; size = 4
tv79 = -16						; size = 4
$T3 = -12						; size = 4
_this$ = -8						; size = 4
_i$4 = -4						; size = 4
?destroy@ScintillaCtrls@@QAEXXZ PROC			; ScintillaCtrls::destroy
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\scintillactrls.cpp
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	mov	DWORD PTR _i$4[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::size
	mov	DWORD PTR _len$2[ebp], eax
	jmp	SHORT $LN3@destroy
$LN2@destroy:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN3@destroy:
	mov	ecx, DWORD PTR _i$4[ebp]
	cmp	ecx, DWORD PTR _len$2[ebp]
	jae	SHORT $LN4@destroy
; Line 79
	mov	edx, DWORD PTR _i$4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEAAPAVScintillaEditView@@I@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR tv79[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv79[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
; Line 80
	mov	ecx, DWORD PTR _i$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEAAPAVScintillaEditView@@I@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T3[ebp], eax
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN6@destroy
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN7@destroy
$LN6@destroy:
	mov	DWORD PTR tv128[ebp], 0
$LN7@destroy:
; Line 81
	jmp	SHORT $LN2@destroy
$LN4@destroy:
; Line 82
	mov	esp, ebp
	pop	ebp
	ret	0
?destroy@ScintillaCtrls@@QAEXXZ ENDP			; ScintillaCtrls::destroy
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -100						; size = 12
$T3 = -88						; size = 12
_it2delete$ = -76					; size = 12
tv167 = -64						; size = 4
tv166 = -60						; size = 4
$T4 = -56						; size = 4
tv135 = -52						; size = 4
tv163 = -48						; size = 4
tv170 = -44						; size = 4
tv95 = -40						; size = 4
$T5 = -36						; size = 4
tv78 = -32						; size = 4
$T6 = -28						; size = 4
_i$ = -24						; size = 4
_this$ = -20						; size = 4
$T7 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_handle2Destroy$ = 8					; size = 4
?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z PROC ; ScintillaCtrls::destroyScintilla
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\scintillactrls.cpp
; Line 62
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 63
	mov	eax, DWORD PTR _handle2Destroy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getIndexFrom@ScintillaCtrls@@AAEHPAUHWND__@@@Z ; ScintillaCtrls::getIndexFrom
	mov	DWORD PTR _i$[ebp], eax
; Line 64
	cmp	DWORD PTR _i$[ebp], -1
	jne	SHORT $LN1@destroySci
; Line 65
	xor	al, al
	jmp	$LN2@destroySci
$LN1@destroySci:
; Line 67
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEAAPAVScintillaEditView@@I@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
; Line 68
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEAAPAVScintillaEditView@@I@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], edx
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR $T6[ebp], eax
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN4@destroySci
	push	1
	mov	ecx, DWORD PTR $T6[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T6[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN5@destroySci
$LN4@destroySci:
	mov	DWORD PTR tv95[ebp], 0
$LN5@destroySci:
; Line 70
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	lea	edx, DWORD PTR _it2delete$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@XZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::begin
	mov	DWORD PTR tv170[ebp], eax
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR tv163[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv163[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ScintillaEditView *> > >::operator+
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
; Line 71
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	edx, DWORD PTR _it2delete$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR tv166[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	?erase@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@2@@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::erase
	mov	DWORD PTR tv167[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
; Line 72
	mov	BYTE PTR $T7[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it2delete$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
	mov	al, BYTE PTR $T7[ebp]
$LN2@destroySci:
; Line 73
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z$0:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z$1:
	lea	ecx, DWORD PTR _it2delete$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z$2:
	mov	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVScintillaEditView@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?destroyScintilla@ScintillaCtrls@@QAE_NPAUHWND__@@@Z ENDP ; ScintillaCtrls::destroyScintilla
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = -4						; size = 4
_handle2Find$ = 8					; size = 4
?getScintillaEditViewFrom@ScintillaCtrls@@QAEPAVScintillaEditView@@PAUHWND__@@@Z PROC ; ScintillaCtrls::getScintillaEditViewFrom
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\scintillactrls.cpp
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _handle2Find$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getIndexFrom@ScintillaCtrls@@AAEHPAUHWND__@@@Z ; ScintillaCtrls::getIndexFrom
	mov	DWORD PTR _i$[ebp], eax
; Line 56
	cmp	DWORD PTR _i$[ebp], -1
	je	SHORT $LN1@getScintil
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QBEIXZ ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::size
	cmp	DWORD PTR _i$[ebp], eax
	jb	SHORT $LN2@getScintil
$LN1@getScintil:
; Line 57
	xor	eax, eax
	jmp	SHORT $LN3@getScintil
$LN2@getScintil:
; Line 58
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEAAPAVScintillaEditView@@I@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::operator[]
	mov	eax, DWORD PTR [eax]
$LN3@getScintil:
; Line 59
	mov	esp, ebp
	pop	ebp
	ret	4
?getScintillaEditViewFrom@ScintillaCtrls@@QAEPAVScintillaEditView@@PAUHWND__@@@Z ENDP ; ScintillaCtrls::getScintillaEditViewFrom
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -32						; size = 4
tv72 = -28						; size = 4
$T3 = -24						; size = 4
_scint$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hParent$ = 8						; size = 4
?createSintilla@ScintillaCtrls@@QAEPAUHWND__@@PAU2@@Z PROC ; ScintillaCtrls::createSintilla
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\scintillactrls.cpp
; Line 33
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createSintilla@ScintillaCtrls@@QAEPAUHWND__@@PAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hParent$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 35
	push	92					; 0000005cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@createSint
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0ScintillaEditView@@QAE@XZ		; ScintillaEditView::ScintillaEditView
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@createSint
$LN3@createSint:
	mov	DWORD PTR tv72[ebp], 0
$LN4@createSint:
	mov	edx, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _scint$[ebp], eax
; Line 36
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _scint$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _scint$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 37
	lea	eax, DWORD PTR _scint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$vector@PAVScintillaEditView@@V?$allocator@PAVScintillaEditView@@@std@@@std@@QAEXABQAVScintillaEditView@@@Z ; std::vector<ScintillaEditView *,std::allocator<ScintillaEditView *> >::push_back
; Line 38
	mov	ecx, DWORD PTR _scint$[ebp]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
; Line 39
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?createSintilla@ScintillaCtrls@@QAEPAUHWND__@@PAU2@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?createSintilla@ScintillaCtrls@@QAEPAUHWND__@@PAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createSintilla@ScintillaCtrls@@QAEPAUHWND__@@PAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createSintilla@ScintillaCtrls@@QAEPAUHWND__@@PAU2@@Z ENDP ; ScintillaCtrls::createSintilla
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 2296
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 2291
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$1[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 2238
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	esi, 3
	div	esi
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	sub	eax, ecx
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	edx, DWORD PTR __Oldlen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 2232
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax
; Line 1351
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 1169
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 991
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 992
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	or	eax, -1
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnext$1 = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$1[ebp], edx
$LN3@Orphan_me:
; Line 197
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me
; Line 198
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 200
	mov	edx, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me
; Line 201
	push	201					; 000000c9H
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Orphan_me:
; Line 202
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 206
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 187
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 189
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]
; Line 184
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 177
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 179
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -28						; size = 4
__Lock$3 = -24						; size = 4
__Parent_proxy$4 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt
; Line 152
	push	3
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 155
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 156
	jmp	SHORT $LN4@Adopt
$LN3@Adopt:
; Line 158
	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$4[ebp], ecx
; Line 161
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$4[ebp]
	je	SHORT $LN4@Adopt
; Line 163
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 164
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 166
	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	DWORD PTR [eax], ecx
; Line 168
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN4@Adopt:
; Line 174
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$3[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 140
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 145
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 124
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator
	jmp	SHORT $LN3@operator
$LN4@operator:
; Line 127
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator
; Line 128
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 129
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 132
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 135
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN3@operator:
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
; Line 137
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 120
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Lock$2 = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 214
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all
; Line 218
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 220
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$3[ebp], edx
; Line 221
	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$3[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Orphan_all
; Line 222
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:
; Line 223
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0
; Line 224
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv68[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv68[ebp]
; Line 101
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 96
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
	push	ebp
	mov	ebp, esp
; Line 564
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 565
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 553
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 554
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 523
	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]
; Line 524
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 346
	push	ebp
	mov	ebp, esp
; Line 347
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
; Line 348
	pop	ebp
	ret	0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 311
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 313
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_wmemcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 314
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
	push	ebp
	mov	ebp, esp
; Line 65
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
	push	ebp
	mov	ebp, esp
; Line 60
	mov	eax, DWORD PTR __Where$[ebp]
; Line 61
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 1271
	push	ebp
	mov	ebp, esp
; Line 1274
	mov	eax, DWORD PTR __N$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR __S2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __S1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1276
	pop	ebp
	ret	0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
	push	ebp
	mov	ebp, esp
; Line 557
	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	__hypot
	add	esp, 16					; 00000010H
; Line 558
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
END

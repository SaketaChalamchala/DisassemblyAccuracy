; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\WinControls\WindowsDlg\WinRect.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG63886 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c', 00H
	DB	'\', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'C', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's'
	DB	00H, 'D', 00H, 'l', 00H, 'g', 00H, '\', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG63887 DB	'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'-', 00H, '>', 00H, 'I', 00H, 's', 00H, 'G', 00H, 'r', 00H, 'o'
	DB	00H, 'u', 00H, 'p', 00H, '(', 00H, ')', 00H, 00H, 00H
$SG63905 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c', 00H
	DB	'\', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'C', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's'
	DB	00H, 'D', 00H, 'l', 00H, 'g', 00H, '\', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG63906 DB	'p', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'a', 00H
	DB	'p', 00H, 00H, 00H
$SG63922 DB	'p', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG63915 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c', 00H
	DB	'\', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'C', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's'
	DB	00H, 'D', 00H, 'l', 00H, 'g', 00H, '\', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG63916 DB	'p', 00H, 'w', 00H, 'r', 00H, 'c', 00H, '-', 00H, '>', 00H
	DB	'I', 00H, 's', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'G', 00H, 'r'
	DB	00H, 'o', 00H, 'u', 00H, 'p', 00H, '(', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG63918 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c', 00H
	DB	'\', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'C', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's'
	DB	00H, 'D', 00H, 'l', 00H, 'g', 00H, '\', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG63919 DB	'p', 00H, 'w', 00H, 'r', 00H, 'c', 00H, '-', 00H, '>', 00H
	DB	'I', 00H, 's', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'G', 00H, 'r'
	DB	00H, 'o', 00H, 'u', 00H, 'p', 00H, '(', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG63921 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c', 00H
	DB	'\', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'C', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's'
	DB	00H, 'D', 00H, 'l', 00H, 'g', 00H, '\', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG63924 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c', 00H
	DB	'\', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'C', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's'
	DB	00H, 'D', 00H, 'l', 00H, 'g', 00H, '\', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG63925 DB	'p', 00H, 'r', 00H, 'e', 00H, 'v', 00H, '-', 00H, '>', 00H
	DB	'n', 00H, 'e', 00H, 'x', 00H, 't', 00H, '=', 00H, '=', 00H, 'N'
	DB	00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??0WINRECT@@QAE@GHJ@Z				; WINRECT::WINRECT
PUBLIC	?InitMap@WINRECT@@SAPAV1@PAV1@0@Z		; WINRECT::InitMap
PUBLIC	?Prev@WINRECT@@QAEPAV1@XZ			; WINRECT::Prev
PUBLIC	?Parent@WINRECT@@QAEPAV1@XZ			; WINRECT::Parent
PUBLIC	?GroupType@WINRECT@@QBEGXZ			; WINRECT::GroupType
PUBLIC	?IsGroup@WINRECT@@QBEHXZ			; WINRECT::IsGroup
PUBLIC	?IsEndGroup@WINRECT@@QBEHXZ			; WINRECT::IsEndGroup
PUBLIC	?GetMargins@WINRECT@@QAEHAAH0@Z			; WINRECT::GetMargins
EXTRN	__wassert:PROC
EXTRN	_memset:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_w$ = 8							; size = 4
_h$ = 12						; size = 4
?GetMargins@WINRECT@@QAEHAAH0@Z PROC			; WINRECT::GetMargins
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\windowsdlg\winrect.cpp
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 45
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsGroup@WINRECT@@QBEHXZ		; WINRECT::IsGroup
	test	eax, eax
	je	SHORT $LN1@GetMargins
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 65535				; 0000ffffH
	movsx	edx, cx
	mov	eax, DWORD PTR _w$[ebp]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	movsx	eax, dx
	mov	ecx, DWORD PTR _h$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 48
	mov	eax, 1
	jmp	SHORT $LN2@GetMargins
$LN1@GetMargins:
; Line 50
	mov	edx, DWORD PTR _h$[ebp]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR _w$[ebp]
	mov	DWORD PTR [eax], 0
; Line 51
	xor	eax, eax
$LN2@GetMargins:
; Line 52
	mov	esp, ebp
	pop	ebp
	ret	8
?GetMargins@WINRECT@@QAEHAAH0@Z ENDP			; WINRECT::GetMargins
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?IsEndGroup@WINRECT@@QBEHXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?IsEndGroup@WINRECT@@QBEHXZ PROC			; WINRECT::IsEndGroup, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\windowsdlg\winmgr.h
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN3@IsEndGroup
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+24]
	cmp	eax, 240				; 000000f0H
	je	SHORT $LN3@IsEndGroup
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN4@IsEndGroup
$LN3@IsEndGroup:
	mov	DWORD PTR tv70[ebp], 1
$LN4@IsEndGroup:
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEndGroup@WINRECT@@QBEHXZ ENDP			; WINRECT::IsEndGroup
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?IsGroup@WINRECT@@QBEHXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?IsGroup@WINRECT@@QBEHXZ PROC				; WINRECT::IsGroup, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\windowsdlg\winmgr.h
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GroupType@WINRECT@@QBEGXZ		; WINRECT::GroupType
	movzx	eax, ax
	test	eax, eax
	je	SHORT $LN3@IsGroup
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GroupType@WINRECT@@QBEGXZ		; WINRECT::GroupType
	movzx	ecx, ax
	cmp	ecx, 240				; 000000f0H
	je	SHORT $LN3@IsGroup
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@IsGroup
$LN3@IsGroup:
	mov	DWORD PTR tv72[ebp], 0
$LN4@IsGroup:
	mov	eax, DWORD PTR tv72[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsGroup@WINRECT@@QBEHXZ ENDP				; WINRECT::IsGroup
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GroupType@WINRECT@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GroupType@WINRECT@@QBEGXZ PROC				; WINRECT::GroupType, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\windowsdlg\winmgr.h
; Line 127
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+24]
	and	eax, 240				; 000000f0H
	mov	esp, ebp
	pop	ebp
	ret	0
?GroupType@WINRECT@@QBEGXZ ENDP				; WINRECT::GroupType
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -12						; size = 4
_parent$ = -8						; size = 4
_pEntry$ = -4						; size = 4
?Parent@WINRECT@@QAEPAV1@XZ PROC			; WINRECT::Parent
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\windowsdlg\winrect.cpp
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	DWORD PTR _pEntry$[ebp], 0
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _pEntry$[ebp], eax
	jmp	SHORT $LN3@Parent
$LN2@Parent:
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?Prev@WINRECT@@QAEPAV1@XZ		; WINRECT::Prev
	mov	DWORD PTR _pEntry$[ebp], eax
$LN3@Parent:
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?Prev@WINRECT@@QAEPAV1@XZ		; WINRECT::Prev
	test	eax, eax
	je	SHORT $LN1@Parent
; Line 33
	jmp	SHORT $LN2@Parent
$LN1@Parent:
; Line 35
	mov	ecx, DWORD PTR _pEntry$[ebp]
	sub	ecx, 36					; 00000024H
	mov	DWORD PTR _parent$[ebp], ecx
; Line 36
	mov	ecx, DWORD PTR _parent$[ebp]
	call	?IsGroup@WINRECT@@QBEHXZ		; WINRECT::IsGroup
	test	eax, eax
	jne	SHORT $LN6@Parent
	push	36					; 00000024H
	push	OFFSET $SG63886
	push	OFFSET $SG63887
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Parent:
; Line 37
	mov	eax, DWORD PTR _parent$[ebp]
; Line 38
	mov	esp, ebp
	pop	ebp
	ret	0
?Parent@WINRECT@@QAEPAV1@XZ ENDP			; WINRECT::Parent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Prev@WINRECT@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Prev@WINRECT@@QAEPAV1@XZ PROC				; WINRECT::Prev, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\windowsdlg\winmgr.h
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Prev@WINRECT@@QAEPAV1@XZ ENDP				; WINRECT::Prev
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv142 = -12						; size = 4
_prev$ = -8						; size = 4
_pwrc$ = -4						; size = 4
_pWinMap$ = 8						; size = 4
_parent$ = 12						; size = 4
?InitMap@WINRECT@@SAPAV1@PAV1@0@Z PROC			; WINRECT::InitMap
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\windowsdlg\winrect.cpp
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 60
	cmp	DWORD PTR _pWinMap$[ebp], 0
	jne	SHORT $LN7@InitMap
	push	60					; 0000003cH
	push	OFFSET $SG63905
	push	OFFSET $SG63906
	call	__wassert
	add	esp, 12					; 0000000cH
$LN7@InitMap:
; Line 62
	mov	ecx, DWORD PTR _pWinMap$[ebp]
	mov	DWORD PTR _pwrc$[ebp], ecx
; Line 63
	mov	DWORD PTR _prev$[ebp], 0
$LN4@InitMap:
; Line 65
	mov	ecx, DWORD PTR _pwrc$[ebp]
	call	?IsEndGroup@WINRECT@@QBEHXZ		; WINRECT::IsEndGroup
	test	eax, eax
	jne	SHORT $LN3@InitMap
; Line 66
	mov	edx, DWORD PTR _pwrc$[ebp]
	mov	eax, DWORD PTR _prev$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 67
	mov	ecx, DWORD PTR _pwrc$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 68
	cmp	DWORD PTR _prev$[ebp], 0
	je	SHORT $LN2@InitMap
; Line 69
	mov	edx, DWORD PTR _prev$[ebp]
	mov	eax, DWORD PTR _pwrc$[ebp]
	mov	DWORD PTR [edx], eax
$LN2@InitMap:
; Line 70
	mov	ecx, DWORD PTR _pwrc$[ebp]
	mov	DWORD PTR _prev$[ebp], ecx
; Line 71
	mov	ecx, DWORD PTR _pwrc$[ebp]
	call	?IsGroup@WINRECT@@QBEHXZ		; WINRECT::IsGroup
	test	eax, eax
	je	SHORT $LN1@InitMap
; Line 72
	mov	edx, DWORD PTR _pwrc$[ebp]
	push	edx
	mov	eax, DWORD PTR _pwrc$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	call	?InitMap@WINRECT@@SAPAV1@PAV1@0@Z	; WINRECT::InitMap
	add	esp, 8
	mov	DWORD PTR _pwrc$[ebp], eax
; Line 73
	mov	ecx, DWORD PTR _pwrc$[ebp]
	call	?IsEndGroup@WINRECT@@QBEHXZ		; WINRECT::IsEndGroup
	test	eax, eax
	jne	SHORT $LN1@InitMap
	push	73					; 00000049H
	push	OFFSET $SG63915
	push	OFFSET $SG63916
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@InitMap:
; Line 75
	mov	edx, DWORD PTR _pwrc$[ebp]
	add	edx, 36					; 00000024H
	mov	DWORD PTR _pwrc$[ebp], edx
; Line 76
	jmp	SHORT $LN4@InitMap
$LN3@InitMap:
; Line 78
	mov	ecx, DWORD PTR _pwrc$[ebp]
	call	?IsEndGroup@WINRECT@@QBEHXZ		; WINRECT::IsEndGroup
	test	eax, eax
	jne	SHORT $LN9@InitMap
	push	78					; 0000004eH
	push	OFFSET $SG63918
	push	OFFSET $SG63919
	call	__wassert
	add	esp, 12					; 0000000cH
$LN9@InitMap:
; Line 79
	cmp	DWORD PTR _prev$[ebp], 0
	jne	SHORT $LN10@InitMap
	push	79					; 0000004fH
	push	OFFSET $SG63921
	push	OFFSET $SG63922
	call	__wassert
	add	esp, 12					; 0000000cH
$LN10@InitMap:
; Line 80
	mov	edx, DWORD PTR _prev$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN11@InitMap
	push	80					; 00000050H
	push	OFFSET $SG63924
	push	OFFSET $SG63925
	call	__wassert
	add	esp, 12					; 0000000cH
$LN11@InitMap:
; Line 81
	cmp	DWORD PTR _parent$[ebp], 0
	je	SHORT $LN12@InitMap
	mov	ecx, DWORD PTR _pwrc$[ebp]
	mov	DWORD PTR tv142[ebp], ecx
	jmp	SHORT $LN13@InitMap
$LN12@InitMap:
	mov	DWORD PTR tv142[ebp], 0
$LN13@InitMap:
	mov	eax, DWORD PTR tv142[ebp]
; Line 82
	mov	esp, ebp
	pop	ebp
	ret	0
?InitMap@WINRECT@@SAPAV1@PAV1@0@Z ENDP			; WINRECT::InitMap
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_f$ = 8							; size = 2
_id$ = 12						; size = 4
_p$ = 16						; size = 4
??0WINRECT@@QAE@GHJ@Z PROC				; WINRECT::WINRECT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\windowsdlg\winrect.cpp
; Line 16
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 17
	push	36					; 00000024H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 18
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _f$[ebp]
	mov	WORD PTR [ecx+24], dx
; Line 19
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 20
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+32], eax
; Line 21
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0WINRECT@@QAE@GHJ@Z ENDP				; WINRECT::WINRECT
_TEXT	ENDS
END

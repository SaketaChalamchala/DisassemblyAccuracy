; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\uchardet\nsMBCSGroupProber.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??1nsCharSetProber@@UAE@XZ			; nsCharSetProber::~nsCharSetProber
PUBLIC	??0nsCharSetProber@@QAE@XZ			; nsCharSetProber::nsCharSetProber
PUBLIC	??_GnsCharSetProber@@UAEPAXI@Z			; nsCharSetProber::`scalar deleting destructor'
PUBLIC	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z	; nsCodingStateMachine::nsCodingStateMachine
PUBLIC	??0JapaneseContextAnalysis@@QAE@XZ		; JapaneseContextAnalysis::JapaneseContextAnalysis
PUBLIC	?GetOrder@SJISContextAnalysis@@MAEHPBD@Z	; SJISContextAnalysis::GetOrder
PUBLIC	??0SJISContextAnalysis@@QAE@XZ			; SJISContextAnalysis::SJISContextAnalysis
PUBLIC	?GetOrder@EUCJPContextAnalysis@@MAEHPBD@Z	; EUCJPContextAnalysis::GetOrder
PUBLIC	??0EUCJPContextAnalysis@@QAE@XZ			; EUCJPContextAnalysis::EUCJPContextAnalysis
PUBLIC	??0nsSJISProber@@QAE@_N@Z			; nsSJISProber::nsSJISProber
PUBLIC	??1nsSJISProber@@UAE@XZ				; nsSJISProber::~nsSJISProber
PUBLIC	?GetCharSetName@nsSJISProber@@UAEPBDXZ		; nsSJISProber::GetCharSetName
PUBLIC	?GetState@nsSJISProber@@UAE?AW4nsProbingState@@XZ ; nsSJISProber::GetState
PUBLIC	?SetOpion@nsSJISProber@@UAEXXZ			; nsSJISProber::SetOpion
PUBLIC	??_GnsSJISProber@@UAEPAXI@Z			; nsSJISProber::`scalar deleting destructor'
PUBLIC	??0nsUTF8Prober@@QAE@XZ				; nsUTF8Prober::nsUTF8Prober
PUBLIC	??1nsUTF8Prober@@UAE@XZ				; nsUTF8Prober::~nsUTF8Prober
PUBLIC	?GetCharSetName@nsUTF8Prober@@UAEPBDXZ		; nsUTF8Prober::GetCharSetName
PUBLIC	?GetState@nsUTF8Prober@@UAE?AW4nsProbingState@@XZ ; nsUTF8Prober::GetState
PUBLIC	?SetOpion@nsUTF8Prober@@UAEXXZ			; nsUTF8Prober::SetOpion
PUBLIC	??_GnsUTF8Prober@@UAEPAXI@Z			; nsUTF8Prober::`scalar deleting destructor'
PUBLIC	??0nsEUCJPProber@@QAE@_N@Z			; nsEUCJPProber::nsEUCJPProber
PUBLIC	??1nsEUCJPProber@@UAE@XZ			; nsEUCJPProber::~nsEUCJPProber
PUBLIC	?GetCharSetName@nsEUCJPProber@@UAEPBDXZ		; nsEUCJPProber::GetCharSetName
PUBLIC	?GetState@nsEUCJPProber@@UAE?AW4nsProbingState@@XZ ; nsEUCJPProber::GetState
PUBLIC	?SetOpion@nsEUCJPProber@@UAEXXZ			; nsEUCJPProber::SetOpion
PUBLIC	??_GnsEUCJPProber@@UAEPAXI@Z			; nsEUCJPProber::`scalar deleting destructor'
PUBLIC	??0nsGB18030Prober@@QAE@_N@Z			; nsGB18030Prober::nsGB18030Prober
PUBLIC	??1nsGB18030Prober@@UAE@XZ			; nsGB18030Prober::~nsGB18030Prober
PUBLIC	?GetCharSetName@nsGB18030Prober@@UAEPBDXZ	; nsGB18030Prober::GetCharSetName
PUBLIC	?GetState@nsGB18030Prober@@UAE?AW4nsProbingState@@XZ ; nsGB18030Prober::GetState
PUBLIC	?SetOpion@nsGB18030Prober@@UAEXXZ		; nsGB18030Prober::SetOpion
PUBLIC	??_GnsGB18030Prober@@UAEPAXI@Z			; nsGB18030Prober::`scalar deleting destructor'
PUBLIC	??0nsEUCKRProber@@QAE@_N@Z			; nsEUCKRProber::nsEUCKRProber
PUBLIC	??1nsEUCKRProber@@UAE@XZ			; nsEUCKRProber::~nsEUCKRProber
PUBLIC	?GetCharSetName@nsEUCKRProber@@UAEPBDXZ		; nsEUCKRProber::GetCharSetName
PUBLIC	?GetState@nsEUCKRProber@@UAE?AW4nsProbingState@@XZ ; nsEUCKRProber::GetState
PUBLIC	?SetOpion@nsEUCKRProber@@UAEXXZ			; nsEUCKRProber::SetOpion
PUBLIC	??_GnsEUCKRProber@@UAEPAXI@Z			; nsEUCKRProber::`scalar deleting destructor'
PUBLIC	??0nsBig5Prober@@QAE@_N@Z			; nsBig5Prober::nsBig5Prober
PUBLIC	??1nsBig5Prober@@UAE@XZ				; nsBig5Prober::~nsBig5Prober
PUBLIC	?GetCharSetName@nsBig5Prober@@UAEPBDXZ		; nsBig5Prober::GetCharSetName
PUBLIC	?GetState@nsBig5Prober@@UAE?AW4nsProbingState@@XZ ; nsBig5Prober::GetState
PUBLIC	?SetOpion@nsBig5Prober@@UAEXXZ			; nsBig5Prober::SetOpion
PUBLIC	??_GnsBig5Prober@@UAEPAXI@Z			; nsBig5Prober::`scalar deleting destructor'
PUBLIC	??0nsEUCTWProber@@QAE@_N@Z			; nsEUCTWProber::nsEUCTWProber
PUBLIC	??1nsEUCTWProber@@UAE@XZ			; nsEUCTWProber::~nsEUCTWProber
PUBLIC	?GetCharSetName@nsEUCTWProber@@UAEPBDXZ		; nsEUCTWProber::GetCharSetName
PUBLIC	?GetState@nsEUCTWProber@@UAE?AW4nsProbingState@@XZ ; nsEUCTWProber::GetState
PUBLIC	?SetOpion@nsEUCTWProber@@UAEXXZ			; nsEUCTWProber::SetOpion
PUBLIC	??_GnsEUCTWProber@@UAEPAXI@Z			; nsEUCTWProber::`scalar deleting destructor'
PUBLIC	??0nsMBCSGroupProber@@QAE@I@Z			; nsMBCSGroupProber::nsMBCSGroupProber
PUBLIC	??1nsMBCSGroupProber@@UAE@XZ			; nsMBCSGroupProber::~nsMBCSGroupProber
PUBLIC	?HandleData@nsMBCSGroupProber@@UAE?AW4nsProbingState@@PBDI@Z ; nsMBCSGroupProber::HandleData
PUBLIC	?GetCharSetName@nsMBCSGroupProber@@UAEPBDXZ	; nsMBCSGroupProber::GetCharSetName
PUBLIC	?GetState@nsMBCSGroupProber@@UAE?AW4nsProbingState@@XZ ; nsMBCSGroupProber::GetState
PUBLIC	?Reset@nsMBCSGroupProber@@UAEXXZ		; nsMBCSGroupProber::Reset
PUBLIC	?GetConfidence@nsMBCSGroupProber@@UAEMXZ	; nsMBCSGroupProber::GetConfidence
PUBLIC	?SetOpion@nsMBCSGroupProber@@UAEXXZ		; nsMBCSGroupProber::SetOpion
PUBLIC	??_GnsMBCSGroupProber@@UAEPAXI@Z		; nsMBCSGroupProber::`scalar deleting destructor'
PUBLIC	??_7nsCharSetProber@@6B@			; nsCharSetProber::`vftable'
PUBLIC	??_7JapaneseContextAnalysis@@6B@		; JapaneseContextAnalysis::`vftable'
PUBLIC	??_7SJISContextAnalysis@@6B@			; SJISContextAnalysis::`vftable'
PUBLIC	??_7EUCJPContextAnalysis@@6B@			; EUCJPContextAnalysis::`vftable'
PUBLIC	??_7nsSJISProber@@6B@				; nsSJISProber::`vftable'
PUBLIC	??_C@_09LOKLFMHN@Shift_JIS?$AA@			; `string'
PUBLIC	??_7nsUTF8Prober@@6B@				; nsUTF8Prober::`vftable'
PUBLIC	??_C@_05EGJIMALK@UTF?98?$AA@			; `string'
PUBLIC	??_7nsEUCJPProber@@6B@				; nsEUCJPProber::`vftable'
PUBLIC	??_C@_06KCFOODCD@EUC?9JP?$AA@			; `string'
PUBLIC	??_7nsGB18030Prober@@6B@			; nsGB18030Prober::`vftable'
PUBLIC	??_C@_07LONGGCM@gb18030?$AA@			; `string'
PUBLIC	??_7nsEUCKRProber@@6B@				; nsEUCKRProber::`vftable'
PUBLIC	??_C@_06JBKKOLJG@EUC?9KR?$AA@			; `string'
PUBLIC	??_7nsBig5Prober@@6B@				; nsBig5Prober::`vftable'
PUBLIC	??_C@_04LCGJKEFB@Big5?$AA@			; `string'
PUBLIC	??_7nsEUCTWProber@@6B@				; nsEUCTWProber::`vftable'
PUBLIC	??_C@_08NNDFHOI@x?9euc?9tw?$AA@			; `string'
PUBLIC	??_7nsMBCSGroupProber@@6B@			; nsMBCSGroupProber::`vftable'
PUBLIC	??_R4nsCharSetProber@@6B@			; nsCharSetProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsCharSetProber@@@8			; nsCharSetProber `RTTI Type Descriptor'
PUBLIC	??_R3nsCharSetProber@@8				; nsCharSetProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsCharSetProber@@8				; nsCharSetProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsCharSetProber@@8		; nsCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JapaneseContextAnalysis@@6B@		; JapaneseContextAnalysis::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJapaneseContextAnalysis@@@8		; JapaneseContextAnalysis `RTTI Type Descriptor'
PUBLIC	??_R3JapaneseContextAnalysis@@8			; JapaneseContextAnalysis::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JapaneseContextAnalysis@@8			; JapaneseContextAnalysis::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JapaneseContextAnalysis@@8	; JapaneseContextAnalysis::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SJISContextAnalysis@@6B@			; SJISContextAnalysis::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSJISContextAnalysis@@@8			; SJISContextAnalysis `RTTI Type Descriptor'
PUBLIC	??_R3SJISContextAnalysis@@8			; SJISContextAnalysis::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SJISContextAnalysis@@8			; SJISContextAnalysis::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SJISContextAnalysis@@8		; SJISContextAnalysis::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4EUCJPContextAnalysis@@6B@			; EUCJPContextAnalysis::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVEUCJPContextAnalysis@@@8		; EUCJPContextAnalysis `RTTI Type Descriptor'
PUBLIC	??_R3EUCJPContextAnalysis@@8			; EUCJPContextAnalysis::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2EUCJPContextAnalysis@@8			; EUCJPContextAnalysis::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@EUCJPContextAnalysis@@8		; EUCJPContextAnalysis::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsSJISProber@@6B@				; nsSJISProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsSJISProber@@@8			; nsSJISProber `RTTI Type Descriptor'
PUBLIC	??_R3nsSJISProber@@8				; nsSJISProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsSJISProber@@8				; nsSJISProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsSJISProber@@8			; nsSJISProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsUTF8Prober@@6B@				; nsUTF8Prober::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsUTF8Prober@@@8			; nsUTF8Prober `RTTI Type Descriptor'
PUBLIC	??_R3nsUTF8Prober@@8				; nsUTF8Prober::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsUTF8Prober@@8				; nsUTF8Prober::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsUTF8Prober@@8			; nsUTF8Prober::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsEUCJPProber@@6B@				; nsEUCJPProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsEUCJPProber@@@8			; nsEUCJPProber `RTTI Type Descriptor'
PUBLIC	??_R3nsEUCJPProber@@8				; nsEUCJPProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsEUCJPProber@@8				; nsEUCJPProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsEUCJPProber@@8			; nsEUCJPProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsGB18030Prober@@6B@			; nsGB18030Prober::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsGB18030Prober@@@8			; nsGB18030Prober `RTTI Type Descriptor'
PUBLIC	??_R3nsGB18030Prober@@8				; nsGB18030Prober::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsGB18030Prober@@8				; nsGB18030Prober::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsGB18030Prober@@8		; nsGB18030Prober::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsEUCKRProber@@6B@				; nsEUCKRProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsEUCKRProber@@@8			; nsEUCKRProber `RTTI Type Descriptor'
PUBLIC	??_R3nsEUCKRProber@@8				; nsEUCKRProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsEUCKRProber@@8				; nsEUCKRProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsEUCKRProber@@8			; nsEUCKRProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsBig5Prober@@6B@				; nsBig5Prober::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsBig5Prober@@@8			; nsBig5Prober `RTTI Type Descriptor'
PUBLIC	??_R3nsBig5Prober@@8				; nsBig5Prober::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsBig5Prober@@8				; nsBig5Prober::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsBig5Prober@@8			; nsBig5Prober::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsEUCTWProber@@6B@				; nsEUCTWProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsEUCTWProber@@@8			; nsEUCTWProber `RTTI Type Descriptor'
PUBLIC	??_R3nsEUCTWProber@@8				; nsEUCTWProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsEUCTWProber@@8				; nsEUCTWProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsEUCTWProber@@8			; nsEUCTWProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsMBCSGroupProber@@6B@			; nsMBCSGroupProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsMBCSGroupProber@@@8			; nsMBCSGroupProber `RTTI Type Descriptor'
PUBLIC	??_R3nsMBCSGroupProber@@8			; nsMBCSGroupProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsMBCSGroupProber@@8			; nsMBCSGroupProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsMBCSGroupProber@@8		; nsMBCSGroupProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3c23d70a
PUBLIC	__real@3f7d70a4
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??_EnsCharSetProber@@UAEPAXI@Z:PROC		; nsCharSetProber::`vector deleting destructor'
EXTRN	?Reset@JapaneseContextAnalysis@@QAEX_N@Z:PROC	; JapaneseContextAnalysis::Reset
EXTRN	?GetOrder@SJISContextAnalysis@@MAEHPBDPAI@Z:PROC ; SJISContextAnalysis::GetOrder
EXTRN	?GetOrder@EUCJPContextAnalysis@@MAEHPBDPAI@Z:PROC ; EUCJPContextAnalysis::GetOrder
EXTRN	??0EUCTWDistributionAnalysis@@QAE@XZ:PROC	; EUCTWDistributionAnalysis::EUCTWDistributionAnalysis
EXTRN	??0EUCKRDistributionAnalysis@@QAE@XZ:PROC	; EUCKRDistributionAnalysis::EUCKRDistributionAnalysis
EXTRN	??0GB2312DistributionAnalysis@@QAE@XZ:PROC	; GB2312DistributionAnalysis::GB2312DistributionAnalysis
EXTRN	??0Big5DistributionAnalysis@@QAE@XZ:PROC	; Big5DistributionAnalysis::Big5DistributionAnalysis
EXTRN	??0SJISDistributionAnalysis@@QAE@XZ:PROC	; SJISDistributionAnalysis::SJISDistributionAnalysis
EXTRN	??0EUCJPDistributionAnalysis@@QAE@XZ:PROC	; EUCJPDistributionAnalysis::EUCJPDistributionAnalysis
EXTRN	?HandleData@nsSJISProber@@UAE?AW4nsProbingState@@PBDI@Z:PROC ; nsSJISProber::HandleData
EXTRN	?Reset@nsSJISProber@@UAEXXZ:PROC		; nsSJISProber::Reset
EXTRN	?GetConfidence@nsSJISProber@@UAEMXZ:PROC	; nsSJISProber::GetConfidence
EXTRN	??_EnsSJISProber@@UAEPAXI@Z:PROC		; nsSJISProber::`vector deleting destructor'
EXTRN	?HandleData@nsUTF8Prober@@UAE?AW4nsProbingState@@PBDI@Z:PROC ; nsUTF8Prober::HandleData
EXTRN	?Reset@nsUTF8Prober@@UAEXXZ:PROC		; nsUTF8Prober::Reset
EXTRN	?GetConfidence@nsUTF8Prober@@UAEMXZ:PROC	; nsUTF8Prober::GetConfidence
EXTRN	??_EnsUTF8Prober@@UAEPAXI@Z:PROC		; nsUTF8Prober::`vector deleting destructor'
EXTRN	?HandleData@nsEUCJPProber@@UAE?AW4nsProbingState@@PBDI@Z:PROC ; nsEUCJPProber::HandleData
EXTRN	?Reset@nsEUCJPProber@@UAEXXZ:PROC		; nsEUCJPProber::Reset
EXTRN	?GetConfidence@nsEUCJPProber@@UAEMXZ:PROC	; nsEUCJPProber::GetConfidence
EXTRN	??_EnsEUCJPProber@@UAEPAXI@Z:PROC		; nsEUCJPProber::`vector deleting destructor'
EXTRN	?HandleData@nsGB18030Prober@@UAE?AW4nsProbingState@@PBDI@Z:PROC ; nsGB18030Prober::HandleData
EXTRN	?Reset@nsGB18030Prober@@UAEXXZ:PROC		; nsGB18030Prober::Reset
EXTRN	?GetConfidence@nsGB18030Prober@@UAEMXZ:PROC	; nsGB18030Prober::GetConfidence
EXTRN	??_EnsGB18030Prober@@UAEPAXI@Z:PROC		; nsGB18030Prober::`vector deleting destructor'
EXTRN	?HandleData@nsEUCKRProber@@UAE?AW4nsProbingState@@PBDI@Z:PROC ; nsEUCKRProber::HandleData
EXTRN	?Reset@nsEUCKRProber@@UAEXXZ:PROC		; nsEUCKRProber::Reset
EXTRN	?GetConfidence@nsEUCKRProber@@UAEMXZ:PROC	; nsEUCKRProber::GetConfidence
EXTRN	??_EnsEUCKRProber@@UAEPAXI@Z:PROC		; nsEUCKRProber::`vector deleting destructor'
EXTRN	?HandleData@nsBig5Prober@@UAE?AW4nsProbingState@@PBDI@Z:PROC ; nsBig5Prober::HandleData
EXTRN	?Reset@nsBig5Prober@@UAEXXZ:PROC		; nsBig5Prober::Reset
EXTRN	?GetConfidence@nsBig5Prober@@UAEMXZ:PROC	; nsBig5Prober::GetConfidence
EXTRN	??_EnsBig5Prober@@UAEPAXI@Z:PROC		; nsBig5Prober::`vector deleting destructor'
EXTRN	?HandleData@nsEUCTWProber@@UAE?AW4nsProbingState@@PBDI@Z:PROC ; nsEUCTWProber::HandleData
EXTRN	?Reset@nsEUCTWProber@@UAEXXZ:PROC		; nsEUCTWProber::Reset
EXTRN	?GetConfidence@nsEUCTWProber@@UAEMXZ:PROC	; nsEUCTWProber::GetConfidence
EXTRN	??_EnsEUCTWProber@@UAEPAXI@Z:PROC		; nsEUCTWProber::`vector deleting destructor'
EXTRN	??_EnsMBCSGroupProber@@UAEPAXI@Z:PROC		; nsMBCSGroupProber::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?UTF8SMModel@@3USMModel@@B:BYTE			; UTF8SMModel
EXTRN	?Big5SMModel@@3USMModel@@B:BYTE			; Big5SMModel
EXTRN	?EUCJPSMModel@@3USMModel@@B:BYTE		; EUCJPSMModel
EXTRN	?EUCKRSMModel@@3USMModel@@B:BYTE		; EUCKRSMModel
EXTRN	?EUCTWSMModel@@3USMModel@@B:BYTE		; EUCTWSMModel
EXTRN	?GB18030SMModel@@3USMModel@@B:BYTE		; GB18030SMModel
EXTRN	?SJISSMModel@@3USMModel@@B:BYTE			; SJISSMModel
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@3f7d70a4
CONST	SEGMENT
__real@3f7d70a4 DD 03f7d70a4r			; 0.99
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@nsMBCSGroupProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsMBCSGroupProber@@8 DD FLAT:??_R0?AVnsMBCSGroupProber@@@8 ; nsMBCSGroupProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsMBCSGroupProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsMBCSGroupProber@@8
rdata$r	SEGMENT
??_R2nsMBCSGroupProber@@8 DD FLAT:??_R1A@?0A@EA@nsMBCSGroupProber@@8 ; nsMBCSGroupProber::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsMBCSGroupProber@@8
rdata$r	SEGMENT
??_R3nsMBCSGroupProber@@8 DD 00H			; nsMBCSGroupProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsMBCSGroupProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsMBCSGroupProber@@@8
data$r	SEGMENT
??_R0?AVnsMBCSGroupProber@@@8 DD FLAT:??_7type_info@@6B@ ; nsMBCSGroupProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsMBCSGroupProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsMBCSGroupProber@@6B@
rdata$r	SEGMENT
??_R4nsMBCSGroupProber@@6B@ DD 00H			; nsMBCSGroupProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsMBCSGroupProber@@@8
	DD	FLAT:??_R3nsMBCSGroupProber@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsEUCTWProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsEUCTWProber@@8 DD FLAT:??_R0?AVnsEUCTWProber@@@8 ; nsEUCTWProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsEUCTWProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsEUCTWProber@@8
rdata$r	SEGMENT
??_R2nsEUCTWProber@@8 DD FLAT:??_R1A@?0A@EA@nsEUCTWProber@@8 ; nsEUCTWProber::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsEUCTWProber@@8
rdata$r	SEGMENT
??_R3nsEUCTWProber@@8 DD 00H				; nsEUCTWProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsEUCTWProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsEUCTWProber@@@8
data$r	SEGMENT
??_R0?AVnsEUCTWProber@@@8 DD FLAT:??_7type_info@@6B@	; nsEUCTWProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsEUCTWProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsEUCTWProber@@6B@
rdata$r	SEGMENT
??_R4nsEUCTWProber@@6B@ DD 00H				; nsEUCTWProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsEUCTWProber@@@8
	DD	FLAT:??_R3nsEUCTWProber@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsBig5Prober@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsBig5Prober@@8 DD FLAT:??_R0?AVnsBig5Prober@@@8 ; nsBig5Prober::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsBig5Prober@@8
rdata$r	ENDS
;	COMDAT ??_R2nsBig5Prober@@8
rdata$r	SEGMENT
??_R2nsBig5Prober@@8 DD FLAT:??_R1A@?0A@EA@nsBig5Prober@@8 ; nsBig5Prober::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsBig5Prober@@8
rdata$r	SEGMENT
??_R3nsBig5Prober@@8 DD 00H				; nsBig5Prober::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsBig5Prober@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsBig5Prober@@@8
data$r	SEGMENT
??_R0?AVnsBig5Prober@@@8 DD FLAT:??_7type_info@@6B@	; nsBig5Prober `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsBig5Prober@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsBig5Prober@@6B@
rdata$r	SEGMENT
??_R4nsBig5Prober@@6B@ DD 00H				; nsBig5Prober::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsBig5Prober@@@8
	DD	FLAT:??_R3nsBig5Prober@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsEUCKRProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsEUCKRProber@@8 DD FLAT:??_R0?AVnsEUCKRProber@@@8 ; nsEUCKRProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsEUCKRProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsEUCKRProber@@8
rdata$r	SEGMENT
??_R2nsEUCKRProber@@8 DD FLAT:??_R1A@?0A@EA@nsEUCKRProber@@8 ; nsEUCKRProber::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsEUCKRProber@@8
rdata$r	SEGMENT
??_R3nsEUCKRProber@@8 DD 00H				; nsEUCKRProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsEUCKRProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsEUCKRProber@@@8
data$r	SEGMENT
??_R0?AVnsEUCKRProber@@@8 DD FLAT:??_7type_info@@6B@	; nsEUCKRProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsEUCKRProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsEUCKRProber@@6B@
rdata$r	SEGMENT
??_R4nsEUCKRProber@@6B@ DD 00H				; nsEUCKRProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsEUCKRProber@@@8
	DD	FLAT:??_R3nsEUCKRProber@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsGB18030Prober@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsGB18030Prober@@8 DD FLAT:??_R0?AVnsGB18030Prober@@@8 ; nsGB18030Prober::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsGB18030Prober@@8
rdata$r	ENDS
;	COMDAT ??_R2nsGB18030Prober@@8
rdata$r	SEGMENT
??_R2nsGB18030Prober@@8 DD FLAT:??_R1A@?0A@EA@nsGB18030Prober@@8 ; nsGB18030Prober::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsGB18030Prober@@8
rdata$r	SEGMENT
??_R3nsGB18030Prober@@8 DD 00H				; nsGB18030Prober::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsGB18030Prober@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsGB18030Prober@@@8
data$r	SEGMENT
??_R0?AVnsGB18030Prober@@@8 DD FLAT:??_7type_info@@6B@	; nsGB18030Prober `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsGB18030Prober@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsGB18030Prober@@6B@
rdata$r	SEGMENT
??_R4nsGB18030Prober@@6B@ DD 00H			; nsGB18030Prober::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsGB18030Prober@@@8
	DD	FLAT:??_R3nsGB18030Prober@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsEUCJPProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsEUCJPProber@@8 DD FLAT:??_R0?AVnsEUCJPProber@@@8 ; nsEUCJPProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsEUCJPProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsEUCJPProber@@8
rdata$r	SEGMENT
??_R2nsEUCJPProber@@8 DD FLAT:??_R1A@?0A@EA@nsEUCJPProber@@8 ; nsEUCJPProber::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsEUCJPProber@@8
rdata$r	SEGMENT
??_R3nsEUCJPProber@@8 DD 00H				; nsEUCJPProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsEUCJPProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsEUCJPProber@@@8
data$r	SEGMENT
??_R0?AVnsEUCJPProber@@@8 DD FLAT:??_7type_info@@6B@	; nsEUCJPProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsEUCJPProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsEUCJPProber@@6B@
rdata$r	SEGMENT
??_R4nsEUCJPProber@@6B@ DD 00H				; nsEUCJPProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsEUCJPProber@@@8
	DD	FLAT:??_R3nsEUCJPProber@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsUTF8Prober@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsUTF8Prober@@8 DD FLAT:??_R0?AVnsUTF8Prober@@@8 ; nsUTF8Prober::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsUTF8Prober@@8
rdata$r	ENDS
;	COMDAT ??_R2nsUTF8Prober@@8
rdata$r	SEGMENT
??_R2nsUTF8Prober@@8 DD FLAT:??_R1A@?0A@EA@nsUTF8Prober@@8 ; nsUTF8Prober::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsUTF8Prober@@8
rdata$r	SEGMENT
??_R3nsUTF8Prober@@8 DD 00H				; nsUTF8Prober::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsUTF8Prober@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsUTF8Prober@@@8
data$r	SEGMENT
??_R0?AVnsUTF8Prober@@@8 DD FLAT:??_7type_info@@6B@	; nsUTF8Prober `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsUTF8Prober@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsUTF8Prober@@6B@
rdata$r	SEGMENT
??_R4nsUTF8Prober@@6B@ DD 00H				; nsUTF8Prober::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsUTF8Prober@@@8
	DD	FLAT:??_R3nsUTF8Prober@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsSJISProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsSJISProber@@8 DD FLAT:??_R0?AVnsSJISProber@@@8 ; nsSJISProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsSJISProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsSJISProber@@8
rdata$r	SEGMENT
??_R2nsSJISProber@@8 DD FLAT:??_R1A@?0A@EA@nsSJISProber@@8 ; nsSJISProber::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsSJISProber@@8
rdata$r	SEGMENT
??_R3nsSJISProber@@8 DD 00H				; nsSJISProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsSJISProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsSJISProber@@@8
data$r	SEGMENT
??_R0?AVnsSJISProber@@@8 DD FLAT:??_7type_info@@6B@	; nsSJISProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsSJISProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsSJISProber@@6B@
rdata$r	SEGMENT
??_R4nsSJISProber@@6B@ DD 00H				; nsSJISProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsSJISProber@@@8
	DD	FLAT:??_R3nsSJISProber@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@EUCJPContextAnalysis@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@EUCJPContextAnalysis@@8 DD FLAT:??_R0?AVEUCJPContextAnalysis@@@8 ; EUCJPContextAnalysis::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3EUCJPContextAnalysis@@8
rdata$r	ENDS
;	COMDAT ??_R2EUCJPContextAnalysis@@8
rdata$r	SEGMENT
??_R2EUCJPContextAnalysis@@8 DD FLAT:??_R1A@?0A@EA@EUCJPContextAnalysis@@8 ; EUCJPContextAnalysis::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@JapaneseContextAnalysis@@8
rdata$r	ENDS
;	COMDAT ??_R3EUCJPContextAnalysis@@8
rdata$r	SEGMENT
??_R3EUCJPContextAnalysis@@8 DD 00H			; EUCJPContextAnalysis::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2EUCJPContextAnalysis@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVEUCJPContextAnalysis@@@8
data$r	SEGMENT
??_R0?AVEUCJPContextAnalysis@@@8 DD FLAT:??_7type_info@@6B@ ; EUCJPContextAnalysis `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEUCJPContextAnalysis@@', 00H
data$r	ENDS
;	COMDAT ??_R4EUCJPContextAnalysis@@6B@
rdata$r	SEGMENT
??_R4EUCJPContextAnalysis@@6B@ DD 00H			; EUCJPContextAnalysis::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVEUCJPContextAnalysis@@@8
	DD	FLAT:??_R3EUCJPContextAnalysis@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SJISContextAnalysis@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SJISContextAnalysis@@8 DD FLAT:??_R0?AVSJISContextAnalysis@@@8 ; SJISContextAnalysis::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SJISContextAnalysis@@8
rdata$r	ENDS
;	COMDAT ??_R2SJISContextAnalysis@@8
rdata$r	SEGMENT
??_R2SJISContextAnalysis@@8 DD FLAT:??_R1A@?0A@EA@SJISContextAnalysis@@8 ; SJISContextAnalysis::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@JapaneseContextAnalysis@@8
rdata$r	ENDS
;	COMDAT ??_R3SJISContextAnalysis@@8
rdata$r	SEGMENT
??_R3SJISContextAnalysis@@8 DD 00H			; SJISContextAnalysis::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SJISContextAnalysis@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSJISContextAnalysis@@@8
data$r	SEGMENT
??_R0?AVSJISContextAnalysis@@@8 DD FLAT:??_7type_info@@6B@ ; SJISContextAnalysis `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSJISContextAnalysis@@', 00H
data$r	ENDS
;	COMDAT ??_R4SJISContextAnalysis@@6B@
rdata$r	SEGMENT
??_R4SJISContextAnalysis@@6B@ DD 00H			; SJISContextAnalysis::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSJISContextAnalysis@@@8
	DD	FLAT:??_R3SJISContextAnalysis@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JapaneseContextAnalysis@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JapaneseContextAnalysis@@8 DD FLAT:??_R0?AVJapaneseContextAnalysis@@@8 ; JapaneseContextAnalysis::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JapaneseContextAnalysis@@8
rdata$r	ENDS
;	COMDAT ??_R2JapaneseContextAnalysis@@8
rdata$r	SEGMENT
??_R2JapaneseContextAnalysis@@8 DD FLAT:??_R1A@?0A@EA@JapaneseContextAnalysis@@8 ; JapaneseContextAnalysis::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3JapaneseContextAnalysis@@8
rdata$r	SEGMENT
??_R3JapaneseContextAnalysis@@8 DD 00H			; JapaneseContextAnalysis::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2JapaneseContextAnalysis@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJapaneseContextAnalysis@@@8
data$r	SEGMENT
??_R0?AVJapaneseContextAnalysis@@@8 DD FLAT:??_7type_info@@6B@ ; JapaneseContextAnalysis `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJapaneseContextAnalysis@@', 00H
data$r	ENDS
;	COMDAT ??_R4JapaneseContextAnalysis@@6B@
rdata$r	SEGMENT
??_R4JapaneseContextAnalysis@@6B@ DD 00H		; JapaneseContextAnalysis::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJapaneseContextAnalysis@@@8
	DD	FLAT:??_R3JapaneseContextAnalysis@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsCharSetProber@@8 DD FLAT:??_R0?AVnsCharSetProber@@@8 ; nsCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsCharSetProber@@8
rdata$r	SEGMENT
??_R2nsCharSetProber@@8 DD FLAT:??_R1A@?0A@EA@nsCharSetProber@@8 ; nsCharSetProber::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3nsCharSetProber@@8
rdata$r	SEGMENT
??_R3nsCharSetProber@@8 DD 00H				; nsCharSetProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsCharSetProber@@@8
data$r	SEGMENT
??_R0?AVnsCharSetProber@@@8 DD FLAT:??_7type_info@@6B@	; nsCharSetProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsCharSetProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsCharSetProber@@6B@
rdata$r	SEGMENT
??_R4nsCharSetProber@@6B@ DD 00H			; nsCharSetProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsCharSetProber@@@8
	DD	FLAT:??_R3nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_7nsMBCSGroupProber@@6B@
CONST	SEGMENT
??_7nsMBCSGroupProber@@6B@ DD FLAT:??_R4nsMBCSGroupProber@@6B@ ; nsMBCSGroupProber::`vftable'
	DD	FLAT:??_EnsMBCSGroupProber@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsMBCSGroupProber@@UAEPBDXZ
	DD	FLAT:?HandleData@nsMBCSGroupProber@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsMBCSGroupProber@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsMBCSGroupProber@@UAEXXZ
	DD	FLAT:?GetConfidence@nsMBCSGroupProber@@UAEMXZ
	DD	FLAT:?SetOpion@nsMBCSGroupProber@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_08NNDFHOI@x?9euc?9tw?$AA@
CONST	SEGMENT
??_C@_08NNDFHOI@x?9euc?9tw?$AA@ DB 'x-euc-tw', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7nsEUCTWProber@@6B@
CONST	SEGMENT
??_7nsEUCTWProber@@6B@ DD FLAT:??_R4nsEUCTWProber@@6B@	; nsEUCTWProber::`vftable'
	DD	FLAT:??_EnsEUCTWProber@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsEUCTWProber@@UAEPBDXZ
	DD	FLAT:?HandleData@nsEUCTWProber@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsEUCTWProber@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsEUCTWProber@@UAEXXZ
	DD	FLAT:?GetConfidence@nsEUCTWProber@@UAEMXZ
	DD	FLAT:?SetOpion@nsEUCTWProber@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_04LCGJKEFB@Big5?$AA@
CONST	SEGMENT
??_C@_04LCGJKEFB@Big5?$AA@ DB 'Big5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7nsBig5Prober@@6B@
CONST	SEGMENT
??_7nsBig5Prober@@6B@ DD FLAT:??_R4nsBig5Prober@@6B@	; nsBig5Prober::`vftable'
	DD	FLAT:??_EnsBig5Prober@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsBig5Prober@@UAEPBDXZ
	DD	FLAT:?HandleData@nsBig5Prober@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsBig5Prober@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsBig5Prober@@UAEXXZ
	DD	FLAT:?GetConfidence@nsBig5Prober@@UAEMXZ
	DD	FLAT:?SetOpion@nsBig5Prober@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_06JBKKOLJG@EUC?9KR?$AA@
CONST	SEGMENT
??_C@_06JBKKOLJG@EUC?9KR?$AA@ DB 'EUC-KR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7nsEUCKRProber@@6B@
CONST	SEGMENT
??_7nsEUCKRProber@@6B@ DD FLAT:??_R4nsEUCKRProber@@6B@	; nsEUCKRProber::`vftable'
	DD	FLAT:??_EnsEUCKRProber@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsEUCKRProber@@UAEPBDXZ
	DD	FLAT:?HandleData@nsEUCKRProber@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsEUCKRProber@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsEUCKRProber@@UAEXXZ
	DD	FLAT:?GetConfidence@nsEUCKRProber@@UAEMXZ
	DD	FLAT:?SetOpion@nsEUCKRProber@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_07LONGGCM@gb18030?$AA@
CONST	SEGMENT
??_C@_07LONGGCM@gb18030?$AA@ DB 'gb18030', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7nsGB18030Prober@@6B@
CONST	SEGMENT
??_7nsGB18030Prober@@6B@ DD FLAT:??_R4nsGB18030Prober@@6B@ ; nsGB18030Prober::`vftable'
	DD	FLAT:??_EnsGB18030Prober@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsGB18030Prober@@UAEPBDXZ
	DD	FLAT:?HandleData@nsGB18030Prober@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsGB18030Prober@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsGB18030Prober@@UAEXXZ
	DD	FLAT:?GetConfidence@nsGB18030Prober@@UAEMXZ
	DD	FLAT:?SetOpion@nsGB18030Prober@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_06KCFOODCD@EUC?9JP?$AA@
CONST	SEGMENT
??_C@_06KCFOODCD@EUC?9JP?$AA@ DB 'EUC-JP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7nsEUCJPProber@@6B@
CONST	SEGMENT
??_7nsEUCJPProber@@6B@ DD FLAT:??_R4nsEUCJPProber@@6B@	; nsEUCJPProber::`vftable'
	DD	FLAT:??_EnsEUCJPProber@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsEUCJPProber@@UAEPBDXZ
	DD	FLAT:?HandleData@nsEUCJPProber@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsEUCJPProber@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsEUCJPProber@@UAEXXZ
	DD	FLAT:?GetConfidence@nsEUCJPProber@@UAEMXZ
	DD	FLAT:?SetOpion@nsEUCJPProber@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_05EGJIMALK@UTF?98?$AA@
CONST	SEGMENT
??_C@_05EGJIMALK@UTF?98?$AA@ DB 'UTF-8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7nsUTF8Prober@@6B@
CONST	SEGMENT
??_7nsUTF8Prober@@6B@ DD FLAT:??_R4nsUTF8Prober@@6B@	; nsUTF8Prober::`vftable'
	DD	FLAT:??_EnsUTF8Prober@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsUTF8Prober@@UAEPBDXZ
	DD	FLAT:?HandleData@nsUTF8Prober@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsUTF8Prober@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsUTF8Prober@@UAEXXZ
	DD	FLAT:?GetConfidence@nsUTF8Prober@@UAEMXZ
	DD	FLAT:?SetOpion@nsUTF8Prober@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_09LOKLFMHN@Shift_JIS?$AA@
CONST	SEGMENT
??_C@_09LOKLFMHN@Shift_JIS?$AA@ DB 'Shift_JIS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7nsSJISProber@@6B@
CONST	SEGMENT
??_7nsSJISProber@@6B@ DD FLAT:??_R4nsSJISProber@@6B@	; nsSJISProber::`vftable'
	DD	FLAT:??_EnsSJISProber@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsSJISProber@@UAEPBDXZ
	DD	FLAT:?HandleData@nsSJISProber@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsSJISProber@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsSJISProber@@UAEXXZ
	DD	FLAT:?GetConfidence@nsSJISProber@@UAEMXZ
	DD	FLAT:?SetOpion@nsSJISProber@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7EUCJPContextAnalysis@@6B@
CONST	SEGMENT
??_7EUCJPContextAnalysis@@6B@ DD FLAT:??_R4EUCJPContextAnalysis@@6B@ ; EUCJPContextAnalysis::`vftable'
	DD	FLAT:?GetOrder@EUCJPContextAnalysis@@MAEHPBD@Z
	DD	FLAT:?GetOrder@EUCJPContextAnalysis@@MAEHPBDPAI@Z
CONST	ENDS
;	COMDAT ??_7SJISContextAnalysis@@6B@
CONST	SEGMENT
??_7SJISContextAnalysis@@6B@ DD FLAT:??_R4SJISContextAnalysis@@6B@ ; SJISContextAnalysis::`vftable'
	DD	FLAT:?GetOrder@SJISContextAnalysis@@MAEHPBD@Z
	DD	FLAT:?GetOrder@SJISContextAnalysis@@MAEHPBDPAI@Z
CONST	ENDS
;	COMDAT ??_7JapaneseContextAnalysis@@6B@
CONST	SEGMENT
??_7JapaneseContextAnalysis@@6B@ DD FLAT:??_R4JapaneseContextAnalysis@@6B@ ; JapaneseContextAnalysis::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7nsCharSetProber@@6B@
CONST	SEGMENT
??_7nsCharSetProber@@6B@ DD FLAT:??_R4nsCharSetProber@@6B@ ; nsCharSetProber::`vftable'
	DD	FLAT:??_EnsCharSetProber@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??1nsMBCSGroupProber@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsMBCSGroupProber@@UAE@XZ$0
__ehfuncinfo$??1nsMBCSGroupProber@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsMBCSGroupProber@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??0nsMBCSGroupProber@@QAE@I@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??0nsMBCSGroupProber@@QAE@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??0nsMBCSGroupProber@@QAE@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1nsEUCTWProber@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsEUCTWProber@@UAE@XZ$0
__ehfuncinfo$??1nsEUCTWProber@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsEUCTWProber@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0nsEUCTWProber@@QAE@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsEUCTWProber@@QAE@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsEUCTWProber@@QAE@_N@Z$1
__ehfuncinfo$??0nsEUCTWProber@@QAE@_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0nsEUCTWProber@@QAE@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1nsBig5Prober@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsBig5Prober@@UAE@XZ$0
__ehfuncinfo$??1nsBig5Prober@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsBig5Prober@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0nsBig5Prober@@QAE@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsBig5Prober@@QAE@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsBig5Prober@@QAE@_N@Z$1
__ehfuncinfo$??0nsBig5Prober@@QAE@_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0nsBig5Prober@@QAE@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1nsEUCKRProber@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsEUCKRProber@@UAE@XZ$0
__ehfuncinfo$??1nsEUCKRProber@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsEUCKRProber@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0nsEUCKRProber@@QAE@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsEUCKRProber@@QAE@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsEUCKRProber@@QAE@_N@Z$1
__ehfuncinfo$??0nsEUCKRProber@@QAE@_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0nsEUCKRProber@@QAE@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1nsGB18030Prober@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsGB18030Prober@@UAE@XZ$0
__ehfuncinfo$??1nsGB18030Prober@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsGB18030Prober@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0nsGB18030Prober@@QAE@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsGB18030Prober@@QAE@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsGB18030Prober@@QAE@_N@Z$1
__ehfuncinfo$??0nsGB18030Prober@@QAE@_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0nsGB18030Prober@@QAE@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1nsEUCJPProber@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsEUCJPProber@@UAE@XZ$0
__ehfuncinfo$??1nsEUCJPProber@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsEUCJPProber@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0nsEUCJPProber@@QAE@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsEUCJPProber@@QAE@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsEUCJPProber@@QAE@_N@Z$1
__ehfuncinfo$??0nsEUCJPProber@@QAE@_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0nsEUCJPProber@@QAE@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1nsUTF8Prober@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsUTF8Prober@@UAE@XZ$0
__ehfuncinfo$??1nsUTF8Prober@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsUTF8Prober@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0nsUTF8Prober@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsUTF8Prober@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsUTF8Prober@@QAE@XZ$1
__ehfuncinfo$??0nsUTF8Prober@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0nsUTF8Prober@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1nsSJISProber@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsSJISProber@@UAE@XZ$0
__ehfuncinfo$??1nsSJISProber@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsSJISProber@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0nsSJISProber@@QAE@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsSJISProber@@QAE@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSJISProber@@QAE@_N@Z$1
__ehfuncinfo$??0nsSJISProber@@QAE@_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0nsSJISProber@@QAE@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GnsMBCSGroupProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsMBCSGroupProber@@UAEPAXI@Z PROC			; nsMBCSGroupProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsMBCSGroupProber@@UAE@XZ		; nsMBCSGroupProber::~nsMBCSGroupProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsMBCSGroupProber@@UAEPAXI@Z ENDP			; nsMBCSGroupProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsMBCSGroupProber@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsMBCSGroupProber@@UAEXXZ PROC		; nsMBCSGroupProber::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsmbcsgroupprober.h
; Line 61
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsMBCSGroupProber@@UAEXXZ ENDP		; nsMBCSGroupProber::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_cf$ = -20						; size = 4
tv65 = -16						; size = 4
_bestConf$ = -12					; size = 4
_this$ = -8						; size = 4
_i$ = -4						; size = 4
?GetConfidence@nsMBCSGroupProber@@UAEMXZ PROC		; nsMBCSGroupProber::GetConfidence
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsmbcsgroupprober.cpp
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _bestConf$[ebp], xmm0
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 1
	je	SHORT $LN8@GetConfide
	cmp	DWORD PTR tv65[ebp], 2
	je	SHORT $LN7@GetConfide
	jmp	SHORT $LN6@GetConfide
$LN8@GetConfide:
; Line 182
	fld	DWORD PTR __real@3f7d70a4
	jmp	SHORT $LN11@GetConfide
$LN7@GetConfide:
; Line 184
	fld	DWORD PTR __real@3c23d70a
	jmp	SHORT $LN11@GetConfide
$LN6@GetConfide:
; Line 186
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@GetConfide
$LN4@GetConfide:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN5@GetConfide:
	cmp	DWORD PTR _i$[ebp], 7
	jae	SHORT $LN3@GetConfide
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	test	ecx, ecx
	jne	SHORT $LN2@GetConfide
; Line 189
	jmp	SHORT $LN4@GetConfide
$LN2@GetConfide:
; Line 190
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	mov	edx, DWORD PTR [esi+20]
	call	edx
	fstp	DWORD PTR _cf$[ebp]
; Line 191
	movss	xmm0, DWORD PTR _cf$[ebp]
	comiss	xmm0, DWORD PTR _bestConf$[ebp]
	jbe	SHORT $LN1@GetConfide
; Line 193
	movss	xmm0, DWORD PTR _cf$[ebp]
	movss	DWORD PTR _bestConf$[ebp], xmm0
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax+44], ecx
$LN1@GetConfide:
; Line 196
	jmp	SHORT $LN4@GetConfide
$LN3@GetConfide:
; Line 198
	fld	DWORD PTR _bestConf$[ebp]
$LN11@GetConfide:
; Line 199
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetConfidence@nsMBCSGroupProber@@UAEMXZ ENDP		; nsMBCSGroupProber::GetConfidence
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?Reset@nsMBCSGroupProber@@UAEXXZ PROC			; nsMBCSGroupProber::Reset
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsmbcsgroupprober.cpp
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 104
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN5@Reset
$LN4@Reset:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN5@Reset:
	cmp	DWORD PTR _i$1[ebp], 7
	jae	SHORT $LN3@Reset
; Line 106
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx*4+8], 0
	je	SHORT $LN2@Reset
; Line 108
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+8]
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+ecx*4+8]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$1[ebp]
	mov	BYTE PTR [eax+36], 1
; Line 110
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], edx
; Line 112
	jmp	SHORT $LN1@Reset
$LN2@Reset:
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$1[ebp]
	mov	BYTE PTR [ecx+36], 0
$LN1@Reset:
; Line 114
	jmp	SHORT $LN4@Reset
$LN3@Reset:
; Line 115
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], -1
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 117
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], 0
; Line 118
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@nsMBCSGroupProber@@UAEXXZ ENDP			; nsMBCSGroupProber::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsMBCSGroupProber@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsMBCSGroupProber@@UAE?AW4nsProbingState@@XZ PROC ; nsMBCSGroupProber::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsmbcsgroupprober.h
; Line 58
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsMBCSGroupProber@@UAE?AW4nsProbingState@@XZ ENDP ; nsMBCSGroupProber::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCharSetName@nsMBCSGroupProber@@UAEPBDXZ PROC	; nsMBCSGroupProber::GetCharSetName
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsmbcsgroupprober.cpp
; Line 91
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], -1
	jne	SHORT $LN1@GetCharSet
; Line 94
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	fstp	ST(0)
; Line 95
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+44], -1
	jne	SHORT $LN1@GetCharSet
; Line 96
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], 0
$LN1@GetCharSet:
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+edx*4+8]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 99
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsMBCSGroupProber@@UAEPBDXZ ENDP	; nsMBCSGroupProber::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_st$ = -28						; size = 4
_start$ = -24						; size = 4
_pos$1 = -20						; size = 4
_i$2 = -16						; size = 4
_i$3 = -12						; size = 4
_keepNext$ = -8						; size = 4
_this$ = -4						; size = 4
_aBuf$ = 8						; size = 4
_aLen$ = 12						; size = 4
?HandleData@nsMBCSGroupProber@@UAE?AW4nsProbingState@@PBDI@Z PROC ; nsMBCSGroupProber::HandleData
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsmbcsgroupprober.cpp
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	mov	DWORD PTR _start$[ebp], 0
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR _keepNext$[ebp], ecx
; Line 127
	mov	DWORD PTR _pos$1[ebp], 0
	jmp	SHORT $LN19@HandleData
$LN18@HandleData:
	mov	edx, DWORD PTR _pos$1[ebp]
	add	edx, 1
	mov	DWORD PTR _pos$1[ebp], edx
$LN19@HandleData:
	mov	eax, DWORD PTR _pos$1[ebp]
	cmp	eax, DWORD PTR _aLen$[ebp]
	jae	$LN17@HandleData
; Line 129
	mov	ecx, DWORD PTR _aBuf$[ebp]
	add	ecx, DWORD PTR _pos$1[ebp]
	movsx	edx, BYTE PTR [ecx]
	and	edx, 128				; 00000080H
	je	SHORT $LN16@HandleData
; Line 131
	cmp	DWORD PTR _keepNext$[ebp], 0
	jne	SHORT $LN15@HandleData
; Line 132
	mov	eax, DWORD PTR _pos$1[ebp]
	mov	DWORD PTR _start$[ebp], eax
$LN15@HandleData:
; Line 133
	mov	DWORD PTR _keepNext$[ebp], 2
	jmp	$LN14@HandleData
$LN16@HandleData:
; Line 135
	cmp	DWORD PTR _keepNext$[ebp], 0
	je	$LN14@HandleData
; Line 137
	mov	ecx, DWORD PTR _keepNext$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _keepNext$[ebp], ecx
	jne	SHORT $LN14@HandleData
; Line 139
	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN11@HandleData
$LN10@HandleData:
	mov	edx, DWORD PTR _i$3[ebp]
	add	edx, 1
	mov	DWORD PTR _i$3[ebp], edx
$LN11@HandleData:
	cmp	DWORD PTR _i$3[ebp], 7
	jae	SHORT $LN14@HandleData
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$3[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	test	ecx, ecx
	jne	SHORT $LN8@HandleData
; Line 142
	jmp	SHORT $LN10@HandleData
$LN8@HandleData:
; Line 143
	mov	edx, DWORD PTR _pos$1[ebp]
	add	edx, 1
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _aBuf$[ebp]
	add	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$3[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+8]
	mov	ecx, DWORD PTR _i$3[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+ecx*4+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	mov	DWORD PTR _st$[ebp], eax
; Line 144
	cmp	DWORD PTR _st$[ebp], 1
	jne	SHORT $LN7@HandleData
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$3[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 147
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 1
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	jmp	$LN20@HandleData
$LN7@HandleData:
; Line 150
	jmp	SHORT $LN10@HandleData
$LN14@HandleData:
; Line 153
	jmp	$LN18@HandleData
$LN17@HandleData:
; Line 155
	cmp	DWORD PTR _keepNext$[ebp], 0
	je	SHORT $LN6@HandleData
; Line 156
	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN5@HandleData
$LN4@HandleData:
	mov	ecx, DWORD PTR _i$2[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$2[ebp], ecx
$LN5@HandleData:
	cmp	DWORD PTR _i$2[ebp], 7
	jae	SHORT $LN6@HandleData
; Line 158
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$2[ebp]
	movzx	eax, BYTE PTR [edx+36]
	test	eax, eax
	jne	SHORT $LN2@HandleData
; Line 159
	jmp	SHORT $LN4@HandleData
$LN2@HandleData:
; Line 160
	mov	ecx, DWORD PTR _aLen$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aBuf$[ebp]
	add	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+8]
	mov	eax, DWORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4+8]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	DWORD PTR _st$[ebp], eax
; Line 161
	cmp	DWORD PTR _st$[ebp], 1
	jne	SHORT $LN1@HandleData
; Line 163
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$2[ebp]
	mov	DWORD PTR [ecx+44], edx
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN20@HandleData
$LN1@HandleData:
; Line 167
	jmp	SHORT $LN4@HandleData
$LN6@HandleData:
; Line 169
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _keepNext$[ebp]
	mov	DWORD PTR [edx+52], eax
; Line 171
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
$LN20@HandleData:
; Line 172
	mov	esp, ebp
	pop	ebp
	ret	8
?HandleData@nsMBCSGroupProber@@UAE?AW4nsProbingState@@PBDI@Z ENDP ; nsMBCSGroupProber::HandleData
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv85 = -32						; size = 4
$T2 = -28						; size = 4
_this$ = -24						; size = 4
$T3 = -20						; size = 4
_i$4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsMBCSGroupProber@@UAE@XZ PROC			; nsMBCSGroupProber::~nsMBCSGroupProber
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsmbcsgroupprober.cpp
; Line 83
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsMBCSGroupProber@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsMBCSGroupProber@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 84
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN3@nsMBCSGrou
$LN2@nsMBCSGrou:
	mov	ecx, DWORD PTR _i$4[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$4[ebp], ecx
$LN3@nsMBCSGrou:
	cmp	DWORD PTR _i$4[ebp], 7
	jae	SHORT $LN4@nsMBCSGrou
; Line 86
	mov	edx, DWORD PTR _i$4[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], edx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN6@nsMBCSGrou
	push	1
	mov	eax, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN7@nsMBCSGrou
$LN6@nsMBCSGrou:
	mov	DWORD PTR tv85[ebp], 0
$LN7@nsMBCSGrou:
; Line 87
	jmp	SHORT $LN2@nsMBCSGrou
$LN4@nsMBCSGrou:
; Line 88
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1nsMBCSGroupProber@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsMBCSGroupProber@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsMBCSGroupProber@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsMBCSGroupProber@@UAE@XZ ENDP			; nsMBCSGroupProber::~nsMBCSGroupProber
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -112						; size = 4
$T3 = -108						; size = 4
$T4 = -104						; size = 4
$T5 = -100						; size = 4
$T6 = -96						; size = 4
$T7 = -92						; size = 4
$T8 = -88						; size = 4
tv240 = -84						; size = 4
$T9 = -80						; size = 4
tv223 = -76						; size = 4
$T10 = -72						; size = 4
tv204 = -68						; size = 4
$T11 = -64						; size = 4
tv185 = -60						; size = 4
$T12 = -56						; size = 4
tv166 = -52						; size = 4
$T13 = -48						; size = 4
tv149 = -44						; size = 4
$T14 = -40						; size = 4
tv130 = -36						; size = 4
$T15 = -32						; size = 4
_i$16 = -28						; size = 4
_this$ = -24						; size = 4
tv238 = -18						; size = 1
tv221 = -17						; size = 1
tv202 = -16						; size = 1
tv183 = -15						; size = 1
tv164 = -14						; size = 1
tv147 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_aLanguageFilter$ = 8					; size = 4
??0nsMBCSGroupProber@@QAE@I@Z PROC			; nsMBCSGroupProber::nsMBCSGroupProber
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsmbcsgroupprober.cpp
; Line 60
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsMBCSGroupProber@@QAE@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsMBCSGroupProber@@6B@
; Line 61
	mov	DWORD PTR _i$16[ebp], 0
	jmp	SHORT $LN7@nsMBCSGrou
$LN6@nsMBCSGrou:
	mov	ecx, DWORD PTR _i$16[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$16[ebp], ecx
$LN7@nsMBCSGrou:
	cmp	DWORD PTR _i$16[ebp], 7
	jae	SHORT $LN5@nsMBCSGrou
; Line 62
	mov	edx, DWORD PTR _i$16[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+8], 0
	jmp	SHORT $LN6@nsMBCSGrou
$LN5@nsMBCSGrou:
; Line 64
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T15[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T15[ebp], 0
	je	SHORT $LN10@nsMBCSGrou
	mov	ecx, DWORD PTR $T15[ebp]
	call	??0nsUTF8Prober@@QAE@XZ			; nsUTF8Prober::nsUTF8Prober
	mov	DWORD PTR tv130[ebp], eax
	jmp	SHORT $LN11@nsMBCSGrou
$LN10@nsMBCSGrou:
	mov	DWORD PTR tv130[ebp], 0
$LN11@nsMBCSGrou:
	mov	ecx, DWORD PTR tv130[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T8[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
; Line 65
	mov	eax, DWORD PTR _aLanguageFilter$[ebp]
	and	eax, 4
	je	$LN4@nsMBCSGrou
; Line 67
	push	96					; 00000060H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T14[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T14[ebp], 0
	je	SHORT $LN14@nsMBCSGrou
	cmp	DWORD PTR _aLanguageFilter$[ebp], 4
	jne	SHORT $LN12@nsMBCSGrou
	mov	BYTE PTR tv147[ebp], 1
	jmp	SHORT $LN13@nsMBCSGrou
$LN12@nsMBCSGrou:
	mov	BYTE PTR tv147[ebp], 0
$LN13@nsMBCSGrou:
	movzx	ecx, BYTE PTR tv147[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T14[ebp]
	call	??0nsSJISProber@@QAE@_N@Z		; nsSJISProber::nsSJISProber
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN15@nsMBCSGrou
$LN14@nsMBCSGrou:
	mov	DWORD PTR tv149[ebp], 0
$LN15@nsMBCSGrou:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T7[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T7[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
; Line 68
	push	96					; 00000060H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T13[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN18@nsMBCSGrou
	cmp	DWORD PTR _aLanguageFilter$[ebp], 4
	jne	SHORT $LN16@nsMBCSGrou
	mov	BYTE PTR tv164[ebp], 1
	jmp	SHORT $LN17@nsMBCSGrou
$LN16@nsMBCSGrou:
	mov	BYTE PTR tv164[ebp], 0
$LN17@nsMBCSGrou:
	movzx	eax, BYTE PTR tv164[ebp]
	push	eax
	mov	ecx, DWORD PTR $T13[ebp]
	call	??0nsEUCJPProber@@QAE@_N@Z		; nsEUCJPProber::nsEUCJPProber
	mov	DWORD PTR tv166[ebp], eax
	jmp	SHORT $LN19@nsMBCSGrou
$LN18@nsMBCSGrou:
	mov	DWORD PTR tv166[ebp], 0
$LN19@nsMBCSGrou:
	mov	ecx, DWORD PTR tv166[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR [eax+edx+8], ecx
$LN4@nsMBCSGrou:
; Line 70
	mov	edx, DWORD PTR _aLanguageFilter$[ebp]
	and	edx, 1
	je	SHORT $LN3@nsMBCSGrou
; Line 71
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T12[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T12[ebp], 0
	je	SHORT $LN22@nsMBCSGrou
	cmp	DWORD PTR _aLanguageFilter$[ebp], 1
	jne	SHORT $LN20@nsMBCSGrou
	mov	BYTE PTR tv183[ebp], 1
	jmp	SHORT $LN21@nsMBCSGrou
$LN20@nsMBCSGrou:
	mov	BYTE PTR tv183[ebp], 0
$LN21@nsMBCSGrou:
	movzx	eax, BYTE PTR tv183[ebp]
	push	eax
	mov	ecx, DWORD PTR $T12[ebp]
	call	??0nsGB18030Prober@@QAE@_N@Z		; nsGB18030Prober::nsGB18030Prober
	mov	DWORD PTR tv185[ebp], eax
	jmp	SHORT $LN23@nsMBCSGrou
$LN22@nsMBCSGrou:
	mov	DWORD PTR tv185[ebp], 0
$LN23@nsMBCSGrou:
	mov	ecx, DWORD PTR tv185[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, 4
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
$LN3@nsMBCSGrou:
; Line 72
	mov	eax, DWORD PTR _aLanguageFilter$[ebp]
	and	eax, 8
	je	SHORT $LN2@nsMBCSGrou
; Line 73
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN26@nsMBCSGrou
	cmp	DWORD PTR _aLanguageFilter$[ebp], 8
	jne	SHORT $LN24@nsMBCSGrou
	mov	BYTE PTR tv202[ebp], 1
	jmp	SHORT $LN25@nsMBCSGrou
$LN24@nsMBCSGrou:
	mov	BYTE PTR tv202[ebp], 0
$LN25@nsMBCSGrou:
	movzx	ecx, BYTE PTR tv202[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T11[ebp]
	call	??0nsEUCKRProber@@QAE@_N@Z		; nsEUCKRProber::nsEUCKRProber
	mov	DWORD PTR tv204[ebp], eax
	jmp	SHORT $LN27@nsMBCSGrou
$LN26@nsMBCSGrou:
	mov	DWORD PTR tv204[ebp], 0
$LN27@nsMBCSGrou:
	mov	edx, DWORD PTR tv204[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
$LN2@nsMBCSGrou:
; Line 74
	mov	eax, DWORD PTR _aLanguageFilter$[ebp]
	and	eax, 2
	je	$LN1@nsMBCSGrou
; Line 76
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN30@nsMBCSGrou
	cmp	DWORD PTR _aLanguageFilter$[ebp], 2
	jne	SHORT $LN28@nsMBCSGrou
	mov	BYTE PTR tv221[ebp], 1
	jmp	SHORT $LN29@nsMBCSGrou
$LN28@nsMBCSGrou:
	mov	BYTE PTR tv221[ebp], 0
$LN29@nsMBCSGrou:
	movzx	ecx, BYTE PTR tv221[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0nsBig5Prober@@QAE@_N@Z		; nsBig5Prober::nsBig5Prober
	mov	DWORD PTR tv223[ebp], eax
	jmp	SHORT $LN31@nsMBCSGrou
$LN30@nsMBCSGrou:
	mov	DWORD PTR tv223[ebp], 0
$LN31@nsMBCSGrou:
	mov	edx, DWORD PTR tv223[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [edx+ecx+8], eax
; Line 77
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN34@nsMBCSGrou
	cmp	DWORD PTR _aLanguageFilter$[ebp], 2
	jne	SHORT $LN32@nsMBCSGrou
	mov	BYTE PTR tv238[ebp], 1
	jmp	SHORT $LN33@nsMBCSGrou
$LN32@nsMBCSGrou:
	mov	BYTE PTR tv238[ebp], 0
$LN33@nsMBCSGrou:
	movzx	ecx, BYTE PTR tv238[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0nsEUCTWProber@@QAE@_N@Z		; nsEUCTWProber::nsEUCTWProber
	mov	DWORD PTR tv240[ebp], eax
	jmp	SHORT $LN35@nsMBCSGrou
$LN34@nsMBCSGrou:
	mov	DWORD PTR tv240[ebp], 0
$LN35@nsMBCSGrou:
	mov	edx, DWORD PTR tv240[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+ecx+8], eax
$LN1@nsMBCSGrou:
; Line 79
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsMBCSGroupProber@@UAEXXZ	; nsMBCSGroupProber::Reset
; Line 80
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$1:
	mov	eax, DWORD PTR $T15[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$2:
	mov	eax, DWORD PTR $T14[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$3:
	mov	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$4:
	mov	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$5:
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$6:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsMBCSGroupProber@@QAE@I@Z$7:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0nsMBCSGroupProber@@QAE@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsMBCSGroupProber@@QAE@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsMBCSGroupProber@@QAE@I@Z ENDP			; nsMBCSGroupProber::nsMBCSGroupProber
; Function compile flags: /Odtp
;	COMDAT ??_GnsEUCTWProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsEUCTWProber@@UAEPAXI@Z PROC			; nsEUCTWProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsEUCTWProber@@UAE@XZ		; nsEUCTWProber::~nsEUCTWProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsEUCTWProber@@UAEPAXI@Z ENDP			; nsEUCTWProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsEUCTWProber@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsEUCTWProber@@UAEXXZ PROC			; nsEUCTWProber::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseuctwprober.h
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsEUCTWProber@@UAEXXZ ENDP			; nsEUCTWProber::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsEUCTWProber@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsEUCTWProber@@UAE?AW4nsProbingState@@XZ PROC	; nsEUCTWProber::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseuctwprober.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsEUCTWProber@@UAE?AW4nsProbingState@@XZ ENDP	; nsEUCTWProber::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetCharSetName@nsEUCTWProber@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCharSetName@nsEUCTWProber@@UAEPBDXZ PROC		; nsEUCTWProber::GetCharSetName, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseuctwprober.h
; Line 53
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ??_C@_08NNDFHOI@x?9euc?9tw?$AA@
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsEUCTWProber@@UAEPBDXZ ENDP		; nsEUCTWProber::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsEUCTWProber@@UAE@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsEUCTWProber@@UAE@XZ PROC				; nsEUCTWProber::~nsEUCTWProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseuctwprober.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsEUCTWProber@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsEUCTWProber@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1nsEUCTWProber@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsEUCTWProber@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsEUCTWProber@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsEUCTWProber@@UAE@XZ ENDP				; nsEUCTWProber::~nsEUCTWProber
; Function compile flags: /Odtp
;	COMDAT ??0nsEUCTWProber@@QAE@_N@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv92 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aIsPreferredLanguage$ = 8				; size = 1
??0nsEUCTWProber@@QAE@_N@Z PROC				; nsEUCTWProber::nsEUCTWProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseuctwprober.h
; Line 49
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsEUCTWProber@@QAE@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsEUCTWProber@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0EUCTWDistributionAnalysis@@QAE@XZ	; EUCTWDistributionAnalysis::EUCTWDistributionAnalysis
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _aIsPreferredLanguage$[ebp]
	mov	BYTE PTR [ecx+46], dl
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@nsEUCTWPro
	push	OFFSET ?EUCTWSMModel@@3USMModel@@B	; EUCTWSMModel
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ; nsCodingStateMachine::nsCodingStateMachine
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN4@nsEUCTWPro
$LN3@nsEUCTWPro:
	mov	DWORD PTR tv92[ebp], 0
$LN4@nsEUCTWPro:
	mov	eax, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 50
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsEUCTWProber@@UAEXXZ		; nsEUCTWProber::Reset
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0nsEUCTWProber@@QAE@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__unwindfunclet$??0nsEUCTWProber@@QAE@_N@Z$1:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0nsEUCTWProber@@QAE@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsEUCTWProber@@QAE@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsEUCTWProber@@QAE@_N@Z ENDP				; nsEUCTWProber::nsEUCTWProber
; Function compile flags: /Odtp
;	COMDAT ??_GnsBig5Prober@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsBig5Prober@@UAEPAXI@Z PROC			; nsBig5Prober::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsBig5Prober@@UAE@XZ			; nsBig5Prober::~nsBig5Prober
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsBig5Prober@@UAEPAXI@Z ENDP			; nsBig5Prober::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsBig5Prober@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsBig5Prober@@UAEXXZ PROC			; nsBig5Prober::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsbig5prober.h
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsBig5Prober@@UAEXXZ ENDP			; nsBig5Prober::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsBig5Prober@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsBig5Prober@@UAE?AW4nsProbingState@@XZ PROC	; nsBig5Prober::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsbig5prober.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsBig5Prober@@UAE?AW4nsProbingState@@XZ ENDP	; nsBig5Prober::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetCharSetName@nsBig5Prober@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCharSetName@nsBig5Prober@@UAEPBDXZ PROC		; nsBig5Prober::GetCharSetName, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsbig5prober.h
; Line 53
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ??_C@_04LCGJKEFB@Big5?$AA@
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsBig5Prober@@UAEPBDXZ ENDP		; nsBig5Prober::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsBig5Prober@@UAE@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsBig5Prober@@UAE@XZ PROC				; nsBig5Prober::~nsBig5Prober, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsbig5prober.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsBig5Prober@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsBig5Prober@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1nsBig5Prober@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsBig5Prober@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsBig5Prober@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsBig5Prober@@UAE@XZ ENDP				; nsBig5Prober::~nsBig5Prober
; Function compile flags: /Odtp
;	COMDAT ??0nsBig5Prober@@QAE@_N@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv92 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aIsPreferredLanguage$ = 8				; size = 1
??0nsBig5Prober@@QAE@_N@Z PROC				; nsBig5Prober::nsBig5Prober, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsbig5prober.h
; Line 49
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsBig5Prober@@QAE@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsBig5Prober@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Big5DistributionAnalysis@@QAE@XZ	; Big5DistributionAnalysis::Big5DistributionAnalysis
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _aIsPreferredLanguage$[ebp]
	mov	BYTE PTR [ecx+46], dl
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@nsBig5Prob
	push	OFFSET ?Big5SMModel@@3USMModel@@B	; Big5SMModel
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ; nsCodingStateMachine::nsCodingStateMachine
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN4@nsBig5Prob
$LN3@nsBig5Prob:
	mov	DWORD PTR tv92[ebp], 0
$LN4@nsBig5Prob:
	mov	eax, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 50
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsBig5Prober@@UAEXXZ		; nsBig5Prober::Reset
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0nsBig5Prober@@QAE@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__unwindfunclet$??0nsBig5Prober@@QAE@_N@Z$1:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0nsBig5Prober@@QAE@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsBig5Prober@@QAE@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsBig5Prober@@QAE@_N@Z ENDP				; nsBig5Prober::nsBig5Prober
; Function compile flags: /Odtp
;	COMDAT ??_GnsEUCKRProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsEUCKRProber@@UAEPAXI@Z PROC			; nsEUCKRProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsEUCKRProber@@UAE@XZ		; nsEUCKRProber::~nsEUCKRProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsEUCKRProber@@UAEPAXI@Z ENDP			; nsEUCKRProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsEUCKRProber@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsEUCKRProber@@UAEXXZ PROC			; nsEUCKRProber::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseuckrprober.h
; Line 58
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsEUCKRProber@@UAEXXZ ENDP			; nsEUCKRProber::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsEUCKRProber@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsEUCKRProber@@UAE?AW4nsProbingState@@XZ PROC	; nsEUCKRProber::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseuckrprober.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsEUCKRProber@@UAE?AW4nsProbingState@@XZ ENDP	; nsEUCKRProber::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetCharSetName@nsEUCKRProber@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCharSetName@nsEUCKRProber@@UAEPBDXZ PROC		; nsEUCKRProber::GetCharSetName, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseuckrprober.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ??_C@_06JBKKOLJG@EUC?9KR?$AA@
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsEUCKRProber@@UAEPBDXZ ENDP		; nsEUCKRProber::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsEUCKRProber@@UAE@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsEUCKRProber@@UAE@XZ PROC				; nsEUCKRProber::~nsEUCKRProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseuckrprober.h
; Line 52
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsEUCKRProber@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsEUCKRProber@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1nsEUCKRProber@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsEUCKRProber@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsEUCKRProber@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsEUCKRProber@@UAE@XZ ENDP				; nsEUCKRProber::~nsEUCKRProber
; Function compile flags: /Odtp
;	COMDAT ??0nsEUCKRProber@@QAE@_N@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv92 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aIsPreferredLanguage$ = 8				; size = 1
??0nsEUCKRProber@@QAE@_N@Z PROC				; nsEUCKRProber::nsEUCKRProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseuckrprober.h
; Line 49
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsEUCKRProber@@QAE@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsEUCKRProber@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0EUCKRDistributionAnalysis@@QAE@XZ	; EUCKRDistributionAnalysis::EUCKRDistributionAnalysis
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _aIsPreferredLanguage$[ebp]
	mov	BYTE PTR [ecx+46], dl
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@nsEUCKRPro
	push	OFFSET ?EUCKRSMModel@@3USMModel@@B	; EUCKRSMModel
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ; nsCodingStateMachine::nsCodingStateMachine
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN4@nsEUCKRPro
$LN3@nsEUCKRPro:
	mov	DWORD PTR tv92[ebp], 0
$LN4@nsEUCKRPro:
	mov	eax, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 50
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsEUCKRProber@@UAEXXZ		; nsEUCKRProber::Reset
; Line 51
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0nsEUCKRProber@@QAE@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__unwindfunclet$??0nsEUCKRProber@@QAE@_N@Z$1:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0nsEUCKRProber@@QAE@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsEUCKRProber@@QAE@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsEUCKRProber@@QAE@_N@Z ENDP				; nsEUCKRProber::nsEUCKRProber
; Function compile flags: /Odtp
;	COMDAT ??_GnsGB18030Prober@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsGB18030Prober@@UAEPAXI@Z PROC			; nsGB18030Prober::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsGB18030Prober@@UAE@XZ		; nsGB18030Prober::~nsGB18030Prober
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsGB18030Prober@@UAEPAXI@Z ENDP			; nsGB18030Prober::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsGB18030Prober@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsGB18030Prober@@UAEXXZ PROC			; nsGB18030Prober::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsgb2312prober.h
; Line 59
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsGB18030Prober@@UAEXXZ ENDP			; nsGB18030Prober::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsGB18030Prober@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsGB18030Prober@@UAE?AW4nsProbingState@@XZ PROC ; nsGB18030Prober::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsgb2312prober.h
; Line 56
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsGB18030Prober@@UAE?AW4nsProbingState@@XZ ENDP ; nsGB18030Prober::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetCharSetName@nsGB18030Prober@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCharSetName@nsGB18030Prober@@UAEPBDXZ PROC		; nsGB18030Prober::GetCharSetName, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsgb2312prober.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ??_C@_07LONGGCM@gb18030?$AA@
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsGB18030Prober@@UAEPBDXZ ENDP		; nsGB18030Prober::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsGB18030Prober@@UAE@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsGB18030Prober@@UAE@XZ PROC				; nsGB18030Prober::~nsGB18030Prober, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsgb2312prober.h
; Line 53
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsGB18030Prober@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsGB18030Prober@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1nsGB18030Prober@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsGB18030Prober@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsGB18030Prober@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsGB18030Prober@@UAE@XZ ENDP				; nsGB18030Prober::~nsGB18030Prober
; Function compile flags: /Odtp
;	COMDAT ??0nsGB18030Prober@@QAE@_N@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv92 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aIsPreferredLanguage$ = 8				; size = 1
??0nsGB18030Prober@@QAE@_N@Z PROC			; nsGB18030Prober::nsGB18030Prober, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsgb2312prober.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsGB18030Prober@@QAE@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsGB18030Prober@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0GB2312DistributionAnalysis@@QAE@XZ	; GB2312DistributionAnalysis::GB2312DistributionAnalysis
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _aIsPreferredLanguage$[ebp]
	mov	BYTE PTR [ecx+46], dl
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@nsGB18030P
	push	OFFSET ?GB18030SMModel@@3USMModel@@B	; GB18030SMModel
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ; nsCodingStateMachine::nsCodingStateMachine
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN4@nsGB18030P
$LN3@nsGB18030P:
	mov	DWORD PTR tv92[ebp], 0
$LN4@nsGB18030P:
	mov	eax, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsGB18030Prober@@UAEXXZ		; nsGB18030Prober::Reset
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0nsGB18030Prober@@QAE@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__unwindfunclet$??0nsGB18030Prober@@QAE@_N@Z$1:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0nsGB18030Prober@@QAE@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsGB18030Prober@@QAE@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsGB18030Prober@@QAE@_N@Z ENDP			; nsGB18030Prober::nsGB18030Prober
; Function compile flags: /Odtp
;	COMDAT ??_GnsEUCJPProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsEUCJPProber@@UAEPAXI@Z PROC			; nsEUCJPProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsEUCJPProber@@UAE@XZ		; nsEUCJPProber::~nsEUCJPProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsEUCJPProber@@UAEPAXI@Z ENDP			; nsEUCJPProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsEUCJPProber@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsEUCJPProber@@UAEXXZ PROC			; nsEUCJPProber::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseucjpprober.h
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsEUCJPProber@@UAEXXZ ENDP			; nsEUCJPProber::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsEUCJPProber@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsEUCJPProber@@UAE?AW4nsProbingState@@XZ PROC	; nsEUCJPProber::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseucjpprober.h
; Line 60
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsEUCJPProber@@UAE?AW4nsProbingState@@XZ ENDP	; nsEUCJPProber::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetCharSetName@nsEUCJPProber@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCharSetName@nsEUCJPProber@@UAEPBDXZ PROC		; nsEUCJPProber::GetCharSetName, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseucjpprober.h
; Line 59
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ??_C@_06KCFOODCD@EUC?9JP?$AA@
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsEUCJPProber@@UAEPBDXZ ENDP		; nsEUCJPProber::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsEUCJPProber@@UAE@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsEUCJPProber@@UAE@XZ PROC				; nsEUCJPProber::~nsEUCJPProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseucjpprober.h
; Line 57
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsEUCJPProber@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsEUCJPProber@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1nsEUCJPProber@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsEUCJPProber@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsEUCJPProber@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsEUCJPProber@@UAE@XZ ENDP				; nsEUCJPProber::~nsEUCJPProber
; Function compile flags: /Odtp
;	COMDAT ??0nsEUCJPProber@@QAE@_N@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv94 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aIsPreferredLanguage$ = 8				; size = 1
??0nsEUCJPProber@@QAE@_N@Z PROC				; nsEUCJPProber::nsEUCJPProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nseucjpprober.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsEUCJPProber@@QAE@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsEUCJPProber@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0EUCJPContextAnalysis@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0EUCJPDistributionAnalysis@@QAE@XZ	; EUCJPDistributionAnalysis::EUCJPDistributionAnalysis
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _aIsPreferredLanguage$[ebp]
	mov	BYTE PTR [ecx+94], dl
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@nsEUCJPPro
	push	OFFSET ?EUCJPSMModel@@3USMModel@@B	; EUCJPSMModel
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ; nsCodingStateMachine::nsCodingStateMachine
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN4@nsEUCJPPro
$LN3@nsEUCJPPro:
	mov	DWORD PTR tv94[ebp], 0
$LN4@nsEUCJPPro:
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsEUCJPProber@@UAEXXZ		; nsEUCJPProber::Reset
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0nsEUCJPProber@@QAE@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__unwindfunclet$??0nsEUCJPProber@@QAE@_N@Z$1:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0nsEUCJPProber@@QAE@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsEUCJPProber@@QAE@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsEUCJPProber@@QAE@_N@Z ENDP				; nsEUCJPProber::nsEUCJPProber
; Function compile flags: /Odtp
;	COMDAT ??_GnsUTF8Prober@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsUTF8Prober@@UAEPAXI@Z PROC			; nsUTF8Prober::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsUTF8Prober@@UAE@XZ			; nsUTF8Prober::~nsUTF8Prober
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsUTF8Prober@@UAEPAXI@Z ENDP			; nsUTF8Prober::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsUTF8Prober@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsUTF8Prober@@UAEXXZ PROC			; nsUTF8Prober::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsutf8prober.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsUTF8Prober@@UAEXXZ ENDP			; nsUTF8Prober::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsUTF8Prober@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsUTF8Prober@@UAE?AW4nsProbingState@@XZ PROC	; nsUTF8Prober::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsutf8prober.h
; Line 52
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsUTF8Prober@@UAE?AW4nsProbingState@@XZ ENDP	; nsUTF8Prober::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetCharSetName@nsUTF8Prober@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCharSetName@nsUTF8Prober@@UAEPBDXZ PROC		; nsUTF8Prober::GetCharSetName, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsutf8prober.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ??_C@_05EGJIMALK@UTF?98?$AA@
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsUTF8Prober@@UAEPBDXZ ENDP		; nsUTF8Prober::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsUTF8Prober@@UAE@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsUTF8Prober@@UAE@XZ PROC				; nsUTF8Prober::~nsUTF8Prober, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsutf8prober.h
; Line 49
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsUTF8Prober@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsUTF8Prober@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1nsUTF8Prober@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsUTF8Prober@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsUTF8Prober@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsUTF8Prober@@UAE@XZ ENDP				; nsUTF8Prober::~nsUTF8Prober
; Function compile flags: /Odtp
;	COMDAT ??0nsUTF8Prober@@QAE@XZ
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv90 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0nsUTF8Prober@@QAE@XZ PROC				; nsUTF8Prober::nsUTF8Prober, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsutf8prober.h
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsUTF8Prober@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsUTF8Prober@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
; Line 47
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@nsUTF8Prob
	push	OFFSET ?UTF8SMModel@@3USMModel@@B	; UTF8SMModel
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ; nsCodingStateMachine::nsCodingStateMachine
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN4@nsUTF8Prob
$LN3@nsUTF8Prob:
	mov	DWORD PTR tv90[ebp], 0
$LN4@nsUTF8Prob:
	mov	edx, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 48
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsUTF8Prober@@UAEXXZ		; nsUTF8Prober::Reset
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0nsUTF8Prober@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__unwindfunclet$??0nsUTF8Prober@@QAE@XZ$1:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0nsUTF8Prober@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsUTF8Prober@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsUTF8Prober@@QAE@XZ ENDP				; nsUTF8Prober::nsUTF8Prober
; Function compile flags: /Odtp
;	COMDAT ??_GnsSJISProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsSJISProber@@UAEPAXI@Z PROC			; nsSJISProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsSJISProber@@UAE@XZ			; nsSJISProber::~nsSJISProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsSJISProber@@UAEPAXI@Z ENDP			; nsSJISProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsSJISProber@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsSJISProber@@UAEXXZ PROC			; nsSJISProber::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssjisprober.h
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsSJISProber@@UAEXXZ ENDP			; nsSJISProber::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsSJISProber@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsSJISProber@@UAE?AW4nsProbingState@@XZ PROC	; nsSJISProber::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssjisprober.h
; Line 61
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsSJISProber@@UAE?AW4nsProbingState@@XZ ENDP	; nsSJISProber::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetCharSetName@nsSJISProber@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCharSetName@nsSJISProber@@UAEPBDXZ PROC		; nsSJISProber::GetCharSetName, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssjisprober.h
; Line 60
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ??_C@_09LOKLFMHN@Shift_JIS?$AA@
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsSJISProber@@UAEPBDXZ ENDP		; nsSJISProber::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsSJISProber@@UAE@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsSJISProber@@UAE@XZ PROC				; nsSJISProber::~nsSJISProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssjisprober.h
; Line 58
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsSJISProber@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsSJISProber@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1nsSJISProber@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsSJISProber@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsSJISProber@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsSJISProber@@UAE@XZ ENDP				; nsSJISProber::~nsSJISProber
; Function compile flags: /Odtp
;	COMDAT ??0nsSJISProber@@QAE@_N@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv94 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aIsPreferredLanguage$ = 8				; size = 1
??0nsSJISProber@@QAE@_N@Z PROC				; nsSJISProber::nsSJISProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssjisprober.h
; Line 56
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsSJISProber@@QAE@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsSJISProber@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0SJISContextAnalysis@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0SJISDistributionAnalysis@@QAE@XZ	; SJISDistributionAnalysis::SJISDistributionAnalysis
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _aIsPreferredLanguage$[ebp]
	mov	BYTE PTR [ecx+94], dl
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@nsSJISProb
	push	OFFSET ?SJISSMModel@@3USMModel@@B	; SJISSMModel
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ; nsCodingStateMachine::nsCodingStateMachine
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN4@nsSJISProb
$LN3@nsSJISProb:
	mov	DWORD PTR tv94[ebp], 0
$LN4@nsSJISProb:
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 57
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsSJISProber@@UAEXXZ		; nsSJISProber::Reset
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0nsSJISProber@@QAE@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__unwindfunclet$??0nsSJISProber@@QAE@_N@Z$1:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0nsSJISProber@@QAE@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsSJISProber@@QAE@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsSJISProber@@QAE@_N@Z ENDP				; nsSJISProber::nsSJISProber
; Function compile flags: /Odtp
;	COMDAT ??0EUCJPContextAnalysis@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0EUCJPContextAnalysis@@QAE@XZ PROC			; EUCJPContextAnalysis::EUCJPContextAnalysis, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0JapaneseContextAnalysis@@QAE@XZ	; JapaneseContextAnalysis::JapaneseContextAnalysis
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7EUCJPContextAnalysis@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0EUCJPContextAnalysis@@QAE@XZ ENDP			; EUCJPContextAnalysis::EUCJPContextAnalysis
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetOrder@EUCJPContextAnalysis@@MAEHPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_str$ = 8						; size = 4
?GetOrder@EUCJPContextAnalysis@@MAEHPBD@Z PROC		; EUCJPContextAnalysis::GetOrder, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\jpcntx.h
; Line 130
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 133
	mov	eax, DWORD PTR _str$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, -92				; ffffffa4H
	jne	SHORT $LN1@GetOrder
	mov	edx, DWORD PTR _str$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	cmp	eax, 161				; 000000a1H
	jl	SHORT $LN1@GetOrder
	mov	ecx, DWORD PTR _str$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	cmp	edx, 243				; 000000f3H
	jg	SHORT $LN1@GetOrder
; Line 134
	mov	eax, DWORD PTR _str$[ebp]
	movzx	eax, BYTE PTR [eax+1]
	sub	eax, 161				; 000000a1H
	jmp	SHORT $LN2@GetOrder
$LN1@GetOrder:
; Line 135
	or	eax, -1
$LN2@GetOrder:
; Line 136
	mov	esp, ebp
	pop	ebp
	ret	4
?GetOrder@EUCJPContextAnalysis@@MAEHPBD@Z ENDP		; EUCJPContextAnalysis::GetOrder
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0SJISContextAnalysis@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SJISContextAnalysis@@QAE@XZ PROC			; SJISContextAnalysis::SJISContextAnalysis, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0JapaneseContextAnalysis@@QAE@XZ	; JapaneseContextAnalysis::JapaneseContextAnalysis
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SJISContextAnalysis@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0SJISContextAnalysis@@QAE@XZ ENDP			; SJISContextAnalysis::SJISContextAnalysis
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetOrder@SJISContextAnalysis@@MAEHPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_str$ = 8						; size = 4
?GetOrder@SJISContextAnalysis@@MAEHPBD@Z PROC		; SJISContextAnalysis::GetOrder, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\jpcntx.h
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 118
	mov	eax, DWORD PTR _str$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, -126				; ffffff82H
	jne	SHORT $LN1@GetOrder
	mov	edx, DWORD PTR _str$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	cmp	eax, 159				; 0000009fH
	jl	SHORT $LN1@GetOrder
	mov	ecx, DWORD PTR _str$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	cmp	edx, 241				; 000000f1H
	jg	SHORT $LN1@GetOrder
; Line 119
	mov	eax, DWORD PTR _str$[ebp]
	movzx	eax, BYTE PTR [eax+1]
	sub	eax, 159				; 0000009fH
	jmp	SHORT $LN2@GetOrder
$LN1@GetOrder:
; Line 120
	or	eax, -1
$LN2@GetOrder:
; Line 121
	mov	esp, ebp
	pop	ebp
	ret	4
?GetOrder@SJISContextAnalysis@@MAEHPBD@Z ENDP		; SJISContextAnalysis::GetOrder
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0JapaneseContextAnalysis@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JapaneseContextAnalysis@@QAE@XZ PROC			; JapaneseContextAnalysis::JapaneseContextAnalysis, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\jpcntx.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JapaneseContextAnalysis@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@JapaneseContextAnalysis@@QAEX_N@Z ; JapaneseContextAnalysis::Reset
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0JapaneseContextAnalysis@@QAE@XZ ENDP			; JapaneseContextAnalysis::JapaneseContextAnalysis
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sm$ = 8						; size = 4
??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z PROC	; nsCodingStateMachine::nsCodingStateMachine, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nscodingstatemachine.h
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sm$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ENDP	; nsCodingStateMachine::nsCodingStateMachine
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GnsCharSetProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsCharSetProber@@UAEPAXI@Z PROC			; nsCharSetProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsCharSetProber@@UAEPAXI@Z ENDP			; nsCharSetProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0nsCharSetProber@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0nsCharSetProber@@QAE@XZ PROC				; nsCharSetProber::nsCharSetProber, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsCharSetProber@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0nsCharSetProber@@QAE@XZ ENDP				; nsCharSetProber::nsCharSetProber
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsCharSetProber@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1nsCharSetProber@@UAE@XZ PROC				; nsCharSetProber::~nsCharSetProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nscharsetprober.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsCharSetProber@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1nsCharSetProber@@UAE@XZ ENDP				; nsCharSetProber::~nsCharSetProber
_TEXT	ENDS
END

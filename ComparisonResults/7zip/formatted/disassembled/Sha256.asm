_Sha256_Init@4  proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '6A09E667h']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '0BB67AE85h']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '3C6EF372h']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '0A54FF53Ah']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+10h],', '510E527Fh']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+14h],', '9B05688Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', '1F83D9ABh']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+1Ch],', '5BE0CD19h']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['dword', 'ptr', '[edx+24h],', '0']
pop ['ebp']
retn ['4']
endp
_Sha256_Update@12 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_18F']
jmp ['loc_269']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
and ['ecx,', '3Fh']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+Size]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+20h]']
adc ['eax,', '[ecx+24h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'edx']
mov ['[ecx+24h],', 'eax']
mov ['edx,', '40h']
sub ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+Size]']
jbe ['short', 'loc_1E5']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+28h]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['loc_269']
mov ['eax,', '[ebp+Size]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+28h]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+Src],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_Sha256_WriteByteBlock@4']
cmp ['[ebp+Size],', '40h']
jnb ['short', 'loc_223']
jmp ['short', 'loc_24C']
mov ['edx,', '[ebp+Size]']
sub ['edx,', '40h']
mov ['[ebp+Size],', 'edx']
push ['40h']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '28h']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Src]']
add ['edx,', '40h']
mov ['[ebp+Src],', 'edx']
jmp ['short', 'loc_212']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_269']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '28h']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
_Sha256_WriteByteBlock@4 proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0B4h']
push ['edi']
lea ['edi,', '[ebp+var_B4]']
mov ['ecx,', '2Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_54]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_58],', 'edx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_5C],', 'ecx']
mov ['edx,', '[ebp+var_54]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_54]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_64],', 'edx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_54]']
mov ['eax,', '[edx+14h]']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_54]']
mov ['edx,', '[ecx+18h]']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_74],', 'ecx']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_305']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '2']
mov ['[ebp+var_50],', 'edx']
cmp ['[ebp+var_50],', '10h']
jnb ['short', 'loc_333']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4+28h]']
bswap ['edx']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+eax*4+var_48],', 'edx']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4+2Ch]']
bswap ['eax']
mov ['ecx,', '[ebp+var_50]']
mov ['[ebp+ecx*4+var_44],', 'eax']
jmp ['short', 'loc_2FC']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_345']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '10h']
mov ['[ebp+var_50],', 'edx']
cmp ['[ebp+var_50],', '40h']
jnb ['loc_F69']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_394']
mov ['eax,', '[ebp+var_10]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_10]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_10]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_44]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_44]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_44]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_48]']
add ['ecx,', 'eax']
mov ['[ebp+var_48],', 'ecx']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_78],', 'eax']
jmp ['short', 'loc_39A']
mov ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_78],', 'ecx']
mov ['edx,', '[ebp+var_68]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_68]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_68]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_6C]']
xor ['eax,', '[ebp+var_70]']
and ['eax,', '[ebp+var_68]']
xor ['eax,', '[ebp+var_70]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', '_K[ecx*4]']
add ['edx,', '[ebp+var_78]']
add ['edx,', '[ebp+var_74]']
mov ['[ebp+var_74],', 'edx']
mov ['edx,', '[ebp+var_64]']
add ['edx,', '[ebp+var_74]']
mov ['[ebp+var_64],', 'edx']
mov ['eax,', '[ebp+var_58]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_58]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_58]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_58]']
and ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_58]']
or ['edx,', '[ebp+var_5C]']
and ['edx,', '[ebp+var_60]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_74]']
add ['ecx,', 'eax']
mov ['[ebp+var_74],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_44E']
mov ['eax,', '[ebp+var_C]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_C]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_40]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_40]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_40]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_44]']
add ['ecx,', 'eax']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_7C],', 'eax']
jmp ['short', 'loc_454']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_7C],', 'ecx']
mov ['edx,', '[ebp+var_64]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_64]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_64]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_68]']
xor ['eax,', '[ebp+var_6C]']
and ['eax,', '[ebp+var_64]']
xor ['eax,', '[ebp+var_6C]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_4[ecx*4]']
add ['edx,', '[ebp+var_7C]']
add ['edx,', '[ebp+var_70]']
mov ['[ebp+var_70],', 'edx']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '[ebp+var_70]']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_74]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_74]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_74]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_74]']
and ['ecx,', '[ebp+var_58]']
mov ['edx,', '[ebp+var_74]']
or ['edx,', '[ebp+var_58]']
and ['edx,', '[ebp+var_5C]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_70]']
add ['ecx,', 'eax']
mov ['[ebp+var_70],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_508']
mov ['eax,', '[ebp+var_48]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_48]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_48]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_3C]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_3C]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_3C]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_40]']
add ['ecx,', 'eax']
mov ['[ebp+var_40],', 'ecx']
mov ['eax,', '[ebp+var_40]']
mov ['[ebp+var_80],', 'eax']
jmp ['short', 'loc_50E']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+var_60]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_60]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_60]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_64]']
xor ['eax,', '[ebp+var_68]']
and ['eax,', '[ebp+var_60]']
xor ['eax,', '[ebp+var_68]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_8[ecx*4]']
add ['edx,', '[ebp+var_80]']
add ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_6C],', 'edx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_70]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_70]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_70]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_70]']
and ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_70]']
or ['edx,', '[ebp+var_74]']
and ['edx,', '[ebp+var_58]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_6C]']
add ['ecx,', 'eax']
mov ['[ebp+var_6C],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_5C5']
mov ['eax,', '[ebp+var_44]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_44]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_44]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_38]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_38]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_38]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_3C]']
add ['ecx,', 'eax']
mov ['[ebp+var_3C],', 'ecx']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_84],', 'eax']
jmp ['short', 'loc_5CE']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_84],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_5C]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_5C]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_60]']
xor ['eax,', '[ebp+var_64]']
and ['eax,', '[ebp+var_5C]']
xor ['eax,', '[ebp+var_64]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_C[ecx*4]']
add ['edx,', '[ebp+var_84]']
add ['edx,', '[ebp+var_68]']
mov ['[ebp+var_68],', 'edx']
mov ['edx,', '[ebp+var_58]']
add ['edx,', '[ebp+var_68]']
mov ['[ebp+var_58],', 'edx']
mov ['eax,', '[ebp+var_6C]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_6C]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_6C]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_6C]']
and ['ecx,', '[ebp+var_70]']
mov ['edx,', '[ebp+var_6C]']
or ['edx,', '[ebp+var_70]']
and ['edx,', '[ebp+var_74]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_68]']
add ['ecx,', 'eax']
mov ['[ebp+var_68],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_688']
mov ['eax,', '[ebp+var_40]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_40]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_40]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_34]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_34]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_34]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_38]']
add ['ecx,', 'eax']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_88],', 'eax']
jmp ['short', 'loc_691']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_88],', 'ecx']
mov ['edx,', '[ebp+var_58]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_58]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_58]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_5C]']
xor ['eax,', '[ebp+var_60]']
and ['eax,', '[ebp+var_58]']
xor ['eax,', '[ebp+var_60]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_10[ecx*4]']
add ['edx,', '[ebp+var_88]']
add ['edx,', '[ebp+var_64]']
mov ['[ebp+var_64],', 'edx']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '[ebp+var_64]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_68]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_68]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_68]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_68]']
and ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ebp+var_68]']
or ['edx,', '[ebp+var_6C]']
and ['edx,', '[ebp+var_70]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_64]']
add ['ecx,', 'eax']
mov ['[ebp+var_64],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_74B']
mov ['eax,', '[ebp+var_3C]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_3C]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_3C]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_30]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_30]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_30]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_34]']
add ['ecx,', 'eax']
mov ['[ebp+var_34],', 'ecx']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_8C],', 'eax']
jmp ['short', 'loc_754']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_8C],', 'ecx']
mov ['edx,', '[ebp+var_74]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_74]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_74]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_58]']
xor ['eax,', '[ebp+var_5C]']
and ['eax,', '[ebp+var_74]']
xor ['eax,', '[ebp+var_5C]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_14[ecx*4]']
add ['edx,', '[ebp+var_8C]']
add ['edx,', '[ebp+var_60]']
mov ['[ebp+var_60],', 'edx']
mov ['edx,', '[ebp+var_70]']
add ['edx,', '[ebp+var_60]']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+var_64]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_64]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_64]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_64]']
and ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_64]']
or ['edx,', '[ebp+var_68]']
and ['edx,', '[ebp+var_6C]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_60]']
add ['ecx,', 'eax']
mov ['[ebp+var_60],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_80E']
mov ['eax,', '[ebp+var_38]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_38]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_38]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_2C]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_2C]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_2C]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_30]']
add ['ecx,', 'eax']
mov ['[ebp+var_30],', 'ecx']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_90],', 'eax']
jmp ['short', 'loc_817']
mov ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_90],', 'ecx']
mov ['edx,', '[ebp+var_70]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_70]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_70]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_74]']
xor ['eax,', '[ebp+var_58]']
and ['eax,', '[ebp+var_70]']
xor ['eax,', '[ebp+var_58]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_18[ecx*4]']
add ['edx,', '[ebp+var_90]']
add ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_5C],', 'edx']
mov ['edx,', '[ebp+var_6C]']
add ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_6C],', 'edx']
mov ['eax,', '[ebp+var_60]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_60]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_60]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_60]']
and ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ebp+var_60]']
or ['edx,', '[ebp+var_64]']
and ['edx,', '[ebp+var_68]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_5C]']
add ['ecx,', 'eax']
mov ['[ebp+var_5C],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_8D1']
mov ['eax,', '[ebp+var_34]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_34]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_34]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_48]']
mov ['ecx,', '[ebp+var_28]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_28]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_28]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_2C]']
add ['ecx,', 'eax']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_94],', 'eax']
jmp ['short', 'loc_8DA']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_94],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_6C]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_6C]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_70]']
xor ['eax,', '[ebp+var_74]']
and ['eax,', '[ebp+var_6C]']
xor ['eax,', '[ebp+var_74]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_1C[ecx*4]']
add ['edx,', '[ebp+var_94]']
add ['edx,', '[ebp+var_58]']
mov ['[ebp+var_58],', 'edx']
mov ['edx,', '[ebp+var_68]']
add ['edx,', '[ebp+var_58]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_5C]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_5C]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_5C]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_5C]']
and ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ebp+var_5C]']
or ['edx,', '[ebp+var_60]']
and ['edx,', '[ebp+var_64]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_58]']
add ['ecx,', 'eax']
mov ['[ebp+var_58],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_994']
mov ['eax,', '[ebp+var_30]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_30]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_30]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_24]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_24]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_24]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_28]']
add ['ecx,', 'eax']
mov ['[ebp+var_28],', 'ecx']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_98],', 'eax']
jmp ['short', 'loc_99D']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_98],', 'ecx']
mov ['edx,', '[ebp+var_68]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_68]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_68]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_6C]']
xor ['eax,', '[ebp+var_70]']
and ['eax,', '[ebp+var_68]']
xor ['eax,', '[ebp+var_70]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_20[ecx*4]']
add ['edx,', '[ebp+var_98]']
add ['edx,', '[ebp+var_74]']
mov ['[ebp+var_74],', 'edx']
mov ['edx,', '[ebp+var_64]']
add ['edx,', '[ebp+var_74]']
mov ['[ebp+var_64],', 'edx']
mov ['eax,', '[ebp+var_58]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_58]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_58]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_58]']
and ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_58]']
or ['edx,', '[ebp+var_5C]']
and ['edx,', '[ebp+var_60]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_74]']
add ['ecx,', 'eax']
mov ['[ebp+var_74],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_A57']
mov ['eax,', '[ebp+var_2C]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_2C]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_2C]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_40]']
mov ['ecx,', '[ebp+var_20]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_20]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_20]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_24]']
add ['ecx,', 'eax']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_9C],', 'eax']
jmp ['short', 'loc_A60']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_9C],', 'ecx']
mov ['edx,', '[ebp+var_64]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_64]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_64]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_68]']
xor ['eax,', '[ebp+var_6C]']
and ['eax,', '[ebp+var_64]']
xor ['eax,', '[ebp+var_6C]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_24[ecx*4]']
add ['edx,', '[ebp+var_9C]']
add ['edx,', '[ebp+var_70]']
mov ['[ebp+var_70],', 'edx']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '[ebp+var_70]']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_74]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_74]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_74]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_74]']
and ['ecx,', '[ebp+var_58]']
mov ['edx,', '[ebp+var_74]']
or ['edx,', '[ebp+var_58]']
and ['edx,', '[ebp+var_5C]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_70]']
add ['ecx,', 'eax']
mov ['[ebp+var_70],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_B1A']
mov ['eax,', '[ebp+var_28]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_28]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_28]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_1C]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_1C]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_1C]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_20]']
add ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_A0],', 'eax']
jmp ['short', 'loc_B23']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_A0],', 'ecx']
mov ['edx,', '[ebp+var_60]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_60]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_60]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_64]']
xor ['eax,', '[ebp+var_68]']
and ['eax,', '[ebp+var_60]']
xor ['eax,', '[ebp+var_68]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_28[ecx*4]']
add ['edx,', '[ebp+var_A0]']
add ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_6C],', 'edx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_70]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_70]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_70]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_70]']
and ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_70]']
or ['edx,', '[ebp+var_74]']
and ['edx,', '[ebp+var_58]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_6C]']
add ['ecx,', 'eax']
mov ['[ebp+var_6C],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_BDD']
mov ['eax,', '[ebp+var_24]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_24]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_24]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_18]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_18]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_18]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_1C]']
add ['ecx,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_BE6']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_A4],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_5C]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_5C]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_60]']
xor ['eax,', '[ebp+var_64]']
and ['eax,', '[ebp+var_5C]']
xor ['eax,', '[ebp+var_64]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_2C[ecx*4]']
add ['edx,', '[ebp+var_A4]']
add ['edx,', '[ebp+var_68]']
mov ['[ebp+var_68],', 'edx']
mov ['edx,', '[ebp+var_58]']
add ['edx,', '[ebp+var_68]']
mov ['[ebp+var_58],', 'edx']
mov ['eax,', '[ebp+var_6C]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_6C]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_6C]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_6C]']
and ['ecx,', '[ebp+var_70]']
mov ['edx,', '[ebp+var_6C]']
or ['edx,', '[ebp+var_70]']
and ['edx,', '[ebp+var_74]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_68]']
add ['ecx,', 'eax']
mov ['[ebp+var_68],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_CA0']
mov ['eax,', '[ebp+var_20]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_20]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_20]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+var_14]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_14]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_14]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_18]']
add ['ecx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_A8],', 'eax']
jmp ['short', 'loc_CA9']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_A8],', 'ecx']
mov ['edx,', '[ebp+var_58]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_58]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_58]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_5C]']
xor ['eax,', '[ebp+var_60]']
and ['eax,', '[ebp+var_58]']
xor ['eax,', '[ebp+var_60]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_30[ecx*4]']
add ['edx,', '[ebp+var_A8]']
add ['edx,', '[ebp+var_64]']
mov ['[ebp+var_64],', 'edx']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '[ebp+var_64]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_68]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_68]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_68]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_68]']
and ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ebp+var_68]']
or ['edx,', '[ebp+var_6C]']
and ['edx,', '[ebp+var_70]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_64]']
add ['ecx,', 'eax']
mov ['[ebp+var_64],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_D63']
mov ['eax,', '[ebp+var_1C]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_1C]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_1C]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_10]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_10]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_10]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_14]']
add ['ecx,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_AC],', 'eax']
jmp ['short', 'loc_D6C']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_AC],', 'ecx']
mov ['edx,', '[ebp+var_74]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_74]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_74]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_58]']
xor ['eax,', '[ebp+var_5C]']
and ['eax,', '[ebp+var_74]']
xor ['eax,', '[ebp+var_5C]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_34[ecx*4]']
add ['edx,', '[ebp+var_AC]']
add ['edx,', '[ebp+var_60]']
mov ['[ebp+var_60],', 'edx']
mov ['edx,', '[ebp+var_70]']
add ['edx,', '[ebp+var_60]']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+var_64]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_64]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_64]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_64]']
and ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_64]']
or ['edx,', '[ebp+var_68]']
and ['edx,', '[ebp+var_6C]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_60]']
add ['ecx,', 'eax']
mov ['[ebp+var_60],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_E26']
mov ['eax,', '[ebp+var_18]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_18]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_18]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_C]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_C]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_10]']
add ['ecx,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_B0],', 'eax']
jmp ['short', 'loc_E2F']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_70]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_70]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_70]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_74]']
xor ['eax,', '[ebp+var_58]']
and ['eax,', '[ebp+var_70]']
xor ['eax,', '[ebp+var_58]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_38[ecx*4]']
add ['edx,', '[ebp+var_B0]']
add ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_5C],', 'edx']
mov ['edx,', '[ebp+var_6C]']
add ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_6C],', 'edx']
mov ['eax,', '[ebp+var_60]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_60]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_60]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_60]']
and ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ebp+var_60]']
or ['edx,', '[ebp+var_64]']
and ['edx,', '[ebp+var_68]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_5C]']
add ['ecx,', 'eax']
mov ['[ebp+var_5C],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_EE9']
mov ['eax,', '[ebp+var_14]']
ror ['eax,', '11h']
mov ['ecx,', '[ebp+var_14]']
ror ['ecx,', '13h']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_14]']
shr ['edx,', '0Ah']
xor ['eax,', 'edx']
add ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_48]']
ror ['ecx,', '7']
mov ['edx,', '[ebp+var_48]']
ror ['edx,', '12h']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_48]']
shr ['edx,', '3']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_C]']
add ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_B4],', 'eax']
jmp ['short', 'loc_EF2']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_B4],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
ror ['edx,', '6']
mov ['eax,', '[ebp+var_6C]']
ror ['eax,', '0Bh']
xor ['edx,', 'eax']
mov ['ecx,', '[ebp+var_6C]']
ror ['ecx,', '19h']
xor ['edx,', 'ecx']
mov ['eax,', '[ebp+var_70]']
xor ['eax,', '[ebp+var_74]']
and ['eax,', '[ebp+var_6C]']
xor ['eax,', '[ebp+var_74]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['edx,', 'dword_3C[ecx*4]']
add ['edx,', '[ebp+var_B4]']
add ['edx,', '[ebp+var_58]']
mov ['[ebp+var_58],', 'edx']
mov ['edx,', '[ebp+var_68]']
add ['edx,', '[ebp+var_58]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_5C]']
ror ['eax,', '2']
mov ['ecx,', '[ebp+var_5C]']
ror ['ecx,', '0Dh']
xor ['eax,', 'ecx']
mov ['edx,', '[ebp+var_5C]']
ror ['edx,', '16h']
xor ['eax,', 'edx']
mov ['ecx,', '[ebp+var_5C]']
and ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ebp+var_5C]']
or ['edx,', '[ebp+var_60]']
and ['edx,', '[ebp+var_64]']
or ['ecx,', 'edx']
add ['ecx,', '[ebp+var_58]']
add ['ecx,', 'eax']
mov ['[ebp+var_58],', 'ecx']
jmp ['loc_33C']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_58]']
mov ['edx,', '[ebp+var_54]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_54]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ebp+var_54]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ebp+var_54]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_54]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ebp+var_54]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '[ebp+var_70]']
mov ['edx,', '[ebp+var_54]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax+1Ch]']
add ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_54]']
mov ['[edx+1Ch],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN43']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_Sha256_Final@8 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
and ['ecx,', '3Fh']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+28h],', '80h']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '38h']
jz ['short', 'loc_1088']
mov ['ecx,', '[ebp+var_4]']
and ['ecx,', '3Fh']
mov ['[ebp+var_4],', 'ecx']
jnz ['short', 'loc_1073']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_Sha256_WriteByteBlock@4']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+28h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_1059']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
mov ['edx,', '[edx+24h]']
mov ['cl,', '3']
call ['__allshl']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['cl,', '20h']
call ['__aullshr']
bswap ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+60h],', 'eax']
mov ['edx,', '[ebp+var_10]']
bswap ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+64h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_Sha256_WriteByteBlock@4']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_10D9']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '8']
jnb ['short', 'loc_1100']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
bswap ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '4']
mov ['[ebp+arg_4],', 'edx']
jmp ['short', 'loc_10D0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Sha256_Init@4']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx],', '0']
cmp ['[ebp+var_4],', '0']
jz ['loc_C2']
cmp ['[ebp+var_4],', '80000000h']
jnb ['short', 'loc_50']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_57']
mov ['[ebp+var_20],', '80000000h']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_10]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_B3']
mov ['eax,', '[ebp+var_1C]']
jmp ['short', 'loc_C4']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_BD']
xor ['eax,', 'eax']
jmp ['short', 'loc_C4']
jmp ['loc_35']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_14C']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_157']
mov ['ecx,', '[ebp+arg_8]']
xor ['eax,', 'eax']
cmp ['ecx,', '[ebp+var_8]']
setnz ['al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ReadStream_FAIL@@YGJPAUISequentialInStream@@PAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1DC']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_1EB']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_8]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '80004005h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2CD']
cmp ['[ebp+arg_8],', '80000000h']
jnb ['short', 'loc_268']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_26F']
mov ['[ebp+var_1C],', '80000000h']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_C]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_2BE']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_2CF']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_2CB']
mov ['eax,', '80004005h']
jmp ['short', 'loc_2CF']
jmp ['short', 'loc_251']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp

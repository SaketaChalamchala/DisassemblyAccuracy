??0CDecoder@NLzma@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0ICompressSetDecoderProperties2@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0ICompressSetFinishMode@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??0ICompressSetBufSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0ICompressSetInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['??0ICompressSetOutStreamSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressSetDecoderProperties2@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressSetFinishMode@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressSetBufSize@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressSetInStream@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressSetOutStreamSize@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BISequentialInStream@@@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+24h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0A0h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0A1h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0C4h],', '100000h']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0C8h],', '400000h']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0D0h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0D1h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0B0h],', '0']
mov ['dword', 'ptr', '[edx+0B4h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+44h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+40h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CDecoder@NLzma@NCompress@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressSetDecoderProperties2@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressSetFinishMode@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressSetBufSize@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressSetInStream@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BICompressSetOutStreamSize@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '??_7CDecoder@NLzma@NCompress@@6BISequentialInStream@@@']
push ['offset', '_g_Alloc']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
push ['ecx']
call ['_LzmaDec_Free@8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+24h]']
push ['eax']
call ['_MyFree@4']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetInBufSize@CDecoder@NLzma@NCompress@@UAGJII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+0B8h],', 'ecx']
xor ['eax,', 'eax']
pop ['ebp']
retn ['0Ch']
endp
?SetOutBufSize@CDecoder@NLzma@NCompress@@UAGJII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+0BCh],', 'ecx']
xor ['eax,', 'eax']
pop ['ebp']
retn ['0Ch']
endp
?CreateInputBuffer@CDecoder@NLzma@NCompress@@AAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['short', 'loc_24B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+0C4h]']
cmp ['eax,', '[edx+0C0h]']
jz ['short', 'loc_28E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
push ['edx']
call ['_MyFree@4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0C4h]']
push ['ecx']
call ['_MyAlloc@4']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+24h],', 'eax']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jnz ['short', 'loc_27C']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_290']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0C4h]']
mov ['[ecx+0C0h],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetDecoderProperties2@CDecoder@NLzma@NCompress@@UAGJPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['offset', '_g_Alloc']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
add ['edx,', '2Ch']
push ['edx']
call ['_LzmaDec_Allocate@16']
push ['eax']
call ['?SResToHRESULT@@YGJH@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2D8']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_2ED']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+9Ch],', '1']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '4']
call ['?CreateInputBuffer@CDecoder@NLzma@NCompress@@AAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SResToHRESULT@@YGJH@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '5']
ja ['short', '$LN6']
mov ['ecx,', '[ebp+var_4]']
jmp ['ds:$LN10[ecx*4]']
xor ['eax,', 'eax']
jmp ['short', 'loc_346']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_346']
mov ['eax,', '80070057h']
jmp ['short', 'loc_346']
mov ['eax,', '80004001h']
jmp ['short', 'loc_346']
mov ['eax,', '1']
jmp ['short', 'loc_346']
mov ['eax,', '80004005h']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetOutStreamSizeResume@CDecoder@NLzma@NCompress@@AAEXPB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0']
setnz ['al']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0A1h],', 'al']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+0A1h]']
test ['eax,', 'eax']
jz ['short', 'loc_3B5']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ecx+0A8h],', 'eax']
mov ['edx,', '[edx+4]']
mov ['[ecx+0ACh],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0B8h],', '0']
mov ['dword', 'ptr', '[eax+0BCh],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0CCh],', '0']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '30h']
push ['edx']
call ['_LzmaDec_Init@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetOutStreamSize@CDecoder@NLzma@NCompress@@UAGJPB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+9Ch],', '0']
mov ['dword', 'ptr', '[eax+0A0h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+0BDh],', '0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '14h']
call ['?SetOutStreamSizeResume@CDecoder@NLzma@NCompress@@AAEXPB_K@Z']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?SetFinishMode@CDecoder@NLzma@NCompress@@UAGJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_4],', '0']
setnz ['al']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+0C8h],', 'al']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?CodeSpec@CDecoder@NLzma@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '88h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_88]']
mov ['ecx,', '22h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['short', 'loc_4B9']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0A0h]']
test ['edx,', 'edx']
jnz ['short', 'loc_4C3']
mov ['eax,', '1']
jmp ['loc_8C3']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0B0h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[eax+0B4h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+58h]']
sub ['edx,', '[ecx+54h]']
mov ['eax,', '[ebp+var_4]']
cmp ['edx,', '[eax+0C8h]']
jnb ['short', 'loc_4FA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+58h]']
mov ['[ebp+var_6C],', 'edx']
jmp ['short', 'loc_50C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+54h]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+0C8h]']
mov ['[ebp+var_6C],', 'ecx']
mov ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+28h]']
cmp ['eax,', '[edx+2Ch]']
jnz ['short', 'loc_574']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+2Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '2Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0C0h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_574']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_8C3']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+54h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0A1h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5F7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+0A8h]']
sub ['ecx,', '[eax+0B8h]']
mov ['edx,', '[edx+0ACh]']
sbb ['edx,', '[eax+0BCh]']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_1C]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_70],', 'ecx']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+var_70]']
ja ['short', 'loc_5F7']
jb ['short', 'loc_5DC']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_74]']
ja ['short', 'loc_5F7']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+0D0h]']
test ['eax,', 'eax']
jz ['short', 'loc_5F7']
mov ['[ebp+var_20],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+2Ch]']
sub ['eax,', '[edx+28h]']
mov ['[ebp+var_30],', 'eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
lea ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+28h]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '30h']
push ['edx']
call ['_LzmaDec_DecodeToDic@24']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+var_30]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+0B0h]']
adc ['ecx,', '[edx+0B4h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0B0h],', 'eax']
mov ['[edx+0B4h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+54h]']
sub ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_48]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['edx,', '[ecx+0B8h]']
adc ['eax,', '[ecx+0BCh]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0B8h],', 'edx']
mov ['[ecx+0BCh],', 'eax']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_6AB']
cmp ['[ebp+var_48],', '0']
jnz ['short', 'loc_6AB']
mov ['[ebp+var_78],', '1']
jmp ['short', 'loc_6B2']
mov ['[ebp+var_78],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_78]']
mov ['[ebp+var_49],', 'dl']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0A1h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_708']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_7C],', 'edx']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+var_80]']
mov ['eax,', '[ecx+0BCh]']
cmp ['eax,', '[edx+0ACh]']
jb ['short', 'loc_708']
ja ['short', 'loc_6FC']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+var_80]']
mov ['eax,', '[ecx+0B8h]']
cmp ['eax,', '[edx+0A8h]']
jb ['short', 'loc_708']
mov ['[ebp+var_84],', '1']
jmp ['short', 'loc_712']
mov ['[ebp+var_84],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_84]']
mov ['[ebp+var_4A],', 'cl']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_740']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+54h]']
cmp ['eax,', '[ebp+var_10]']
jz ['short', 'loc_740']
movzx ['ecx,', '[ebp+var_49]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_740']
movzx ['edx,', '[ebp+var_4A]']
test ['edx,', 'edx']
jz ['loc_86A']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+54h]']
sub ['edx,', '[ecx+0CCh]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+44h]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+0CCh]']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+54h]']
mov ['[ecx+0CCh],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+54h]']
cmp ['eax,', '[edx+58h]']
jnz ['short', 'loc_7A0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+54h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0CCh],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+58h]']
sub ['edx,', '[ecx+54h]']
mov ['eax,', '[ebp+var_4]']
cmp ['edx,', '[eax+0C8h]']
jnb ['short', 'loc_7C5']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+58h]']
mov ['[ebp+var_88],', 'edx']
jmp ['short', 'loc_7DA']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+54h]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+0C8h]']
mov ['[ebp+var_88],', 'ecx']
mov ['eax,', '[ebp+var_88]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_7F3']
mov ['eax,', '1']
jmp ['loc_8C3']
mov ['ecx,', '[ebp+var_50]']
mov ['[ebp+var_54],', 'ecx']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_807']
mov ['eax,', '[ebp+var_54]']
jmp ['loc_8C3']
movzx ['edx,', '[ebp+var_4A]']
test ['edx,', 'edx']
jz ['short', 'loc_847']
cmp ['[ebp+var_3C],', '3']
jnz ['short', 'loc_81F']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0D1h],', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0D0h]']
test ['edx,', 'edx']
jz ['short', 'loc_843']
cmp ['[ebp+var_3C],', '1']
jz ['short', 'loc_843']
cmp ['[ebp+var_3C],', '4']
jz ['short', 'loc_843']
mov ['eax,', '1']
jmp ['loc_8C3']
xor ['eax,', 'eax']
jmp ['short', 'loc_8C3']
movzx ['eax,', '[ebp+var_49]']
test ['eax,', 'eax']
jz ['short', 'loc_86A']
cmp ['[ebp+var_3C],', '3']
jnz ['short', 'loc_85F']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0D1h],', '1']
xor ['eax,', 'eax']
cmp ['[ebp+var_3C],', '1']
setnz ['al']
jmp ['short', 'loc_8C3']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_8BE']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0B0h]']
sub ['eax,', '[ebp+var_C]']
mov ['ecx,', '[edx+0B4h]']
sbb ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_60],', 'eax']
mov ['[ebp+var_5C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0B8h']
mov ['esi,', 'esp']
push ['edx']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_8BE']
mov ['eax,', '[ebp+var_68]']
jmp ['short', 'loc_8C3']
jmp ['loc_512']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN38']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '88h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Code@CDecoder@NLzma@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jnz ['short', 'loc_954']
mov ['eax,', '80070057h']
jmp ['short', 'loc_987']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+this]']
add ['edx,', '14h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
push ['edx']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?CodeSpec@CDecoder@NLzma@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['18h']
endp
?SetInStream@CDecoder@NLzma@NCompress@@UAGJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?ReleaseInStream@CDecoder@NLzma@NCompress@@UAGJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?Read@CDecoder@NLzma@NCompress@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A06']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+10h]']
cmp ['eax,', '[edx+14h]']
jnz ['short', 'loc_A76']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+this]']
add ['eax,', '14h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0A8h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_A76']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_BBB']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+89h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_ADA']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+90h]']
sub ['ecx,', '[eax+0A0h]']
mov ['edx,', '[edx+94h]']
sbb ['edx,', '[eax+0A4h]']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_40]']
ja ['short', 'loc_ADA']
jb ['short', 'loc_AD4']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_44]']
jnb ['short', 'loc_ADA']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_20],', 'edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+this]']
add ['eax,', '[ecx+10h]']
push ['eax']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
push ['ecx']
call ['_LzmaDec_DecodeToBuf@28']
mov ['[ebp+var_34],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+var_C]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+98h]']
adc ['eax,', '[ecx+9Ch]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+98h],', 'edx']
mov ['[ecx+9Ch],', 'eax']
mov ['edx,', '[ebp+var_20]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+0A0h]']
adc ['eax,', '[ecx+0A4h]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+0A0h],', 'edx']
mov ['[ecx+0A4h],', 'eax']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_20]']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_B88']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['?SResToHRESULT@@YGJH@Z']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_B9F']
mov ['eax,', '[ebp+var_38]']
jmp ['short', 'loc_BBB']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_BAF']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_BAF']
xor ['eax,', 'eax']
jmp ['short', 'loc_BBB']
cmp ['[ebp+arg_8],', '0']
jnz ['loc_A06']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?CodeResume@CDecoder@NLzma@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetOutStreamSizeResume@CDecoder@NLzma@NCompress@@AAEXPB_K@Z']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?CodeSpec@CDecoder@NLzma@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ReadFromInputStream@CDecoder@NLzma@NCompress@@QAEJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+Size],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?CreateInputBuffer@CDecoder@NLzma@NCompress@@AAEJXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_CB7']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_DE6']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_CC6']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_4],', '0']
jbe ['loc_DE4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+28h]']
cmp ['eax,', '[edx+2Ch]']
jnz ['short', 'loc_D4E']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+2Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '2Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0C0h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D40']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_DE6']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jnz ['short', 'loc_D4E']
jmp ['loc_DE4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+2Ch]']
sub ['eax,', '[edx+28h]']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+Size]']
cmp ['ecx,', '[ebp+arg_4]']
jbe ['short', 'loc_D6B']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+28h]']
push ['edx']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
add ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+28h],', 'eax']
mov ['edx,', '[ebp+Size]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['edx,', '[ecx+0B0h]']
adc ['eax,', '[ecx+0B4h]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0B0h],', 'edx']
mov ['[ecx+0B4h],', 'eax']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+Size]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_DDF']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+Size]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'edx']
jmp ['loc_CC6']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CDecoder@NLzma@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_14D9']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_1640']
push ['offset', '_IID_ICompressCoder']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_14F8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_1640']
push ['offset', '_IID_ICompressSetDecoderProperties2']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_152F']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_151B']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_1522']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['loc_1640']
push ['offset', '_IID_ICompressSetFinishMode']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1566']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1552']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1559']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['loc_1640']
push ['offset', '_IID_ICompressSetBufSize']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_159D']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1589']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_1590']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['loc_1640']
push ['offset', '_IID_ICompressSetInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_15D1']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_15C0']
mov ['edx,', '[ebp+this]']
add ['edx,', '10h']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_15C7']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_1640']
push ['offset', '_IID_ICompressSetOutStreamSize']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1605']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_15F4']
mov ['eax,', '[ebp+this]']
add ['eax,', '14h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_15FB']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_1640']
push ['offset', '_IID_ISequentialInStream']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1639']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1628']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_162F']
mov ['[ebp+var_18],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_1640']
mov ['eax,', '80004002h']
jmp ['short', 'loc_1651']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+1Ch]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+1Ch],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CDecoder@NLzma@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+1Ch]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+1Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@NLzma@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+1Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+1Ch],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_16CB']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+1Ch]']
jmp ['short', 'loc_1703']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_16FA']
mov ['esi,', 'esp']
push ['1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_1701']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
??_GCDecoder@NLzma@NCompress@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDecoder@NLzma@NCompress@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1782']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetDecoderProperties2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetDecoderProperties2@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetFinishMode@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetFinishMode@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetBufSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetBufSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetOutStreamSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetOutStreamSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_1A72']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_1ABF']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1B2C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_1B4F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@NLzma@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?Release@CDecoder@NLzma@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NLzma@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CDecoder@NLzma@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CDecoder@NLzma@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NLzma@NCompress@@WBE@AGKXZ proc near
sub ['[esp+arg_0],', '14h']
jmp ['?Release@CDecoder@NLzma@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NLzma@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CDecoder@NLzma@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CDecoder@NLzma@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NLzma@NCompress@@WBI@AGKXZ proc near
sub ['[esp+arg_0],', '18h']
jmp ['?Release@CDecoder@NLzma@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NLzma@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?AddRef@CDecoder@NLzma@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma@NCompress@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CDecoder@NLzma@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CDecoder@NLzma@NCompress@@WBE@AGKXZ proc near
sub ['[esp+arg_0],', '14h']
jmp ['?AddRef@CDecoder@NLzma@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '10h']
jmp ['?QueryInterface@CDecoder@NLzma@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CDecoder@NLzma@NCompress@@WBI@AGKXZ proc near
sub ['[esp+arg_0],', '18h']
jmp ['?AddRef@CDecoder@NLzma@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma@NCompress@@WBE@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '14h']
jmp ['?QueryInterface@CDecoder@NLzma@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NLzma@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CDecoder@NLzma@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma@NCompress@@WBI@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '18h']
jmp ['?QueryInterface@CDecoder@NLzma@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NLzma@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CDecoder@NLzma@NCompress@@UAGKXZ']
endp
?Release@CDecoder@NLzma@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CDecoder@NLzma@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NLzma@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CDecoder@NLzma@NCompress@@UAGKXZ']
endp

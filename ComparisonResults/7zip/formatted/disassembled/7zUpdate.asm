?GetFilterGroup@CAnalysis@N7z@NArchive@@QAEJIABUCUpdateItem@23@AAUCFilterMode@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetFilterGroup@CAnalysis@N7z@NArchive@@QAEJIABUCUpdateItem@23@AAUCFilterMode@23@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '58h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_64]']
mov ['ecx,', '16h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[edx+4]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['?ReverseFind_PathSepar@UString@@QBEHXZ']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['?ReverseFind_Dot@UString@@QBEHXZ']
mov ['[ebp+var_28],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['al,', '[edx+0Eh]']
mov ['[ebp+var_29],', 'al']
mov ['[ebp+var_2A],', '0']
movzx ['ecx,', '[ebp+var_29]']
test ['ecx,', 'ecx']
jz ['short', 'loc_520']
mov ['ecx,', '[ebp+var_10]']
call ['??7?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_5D0']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_24]']
jle ['short', 'loc_53F']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['?Ptr@UString@@QBEPB_WI@Z']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_54F']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['?RightPtr@UString@@QBEPB_WI@Z']
mov ['[ebp+var_30],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+34h]']
and ['eax,', '8000h']
jz ['short', 'loc_58F']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+34h]']
shr ['edx,', '10h']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
and ['eax,', '49h']
jz ['short', 'loc_58F']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[ebp+var_58]']
cmp ['dword', 'ptr', '[edx+24h],', '0']
ja ['short', 'loc_58B']
mov ['eax,', '[ebp+var_58]']
cmp ['dword', 'ptr', '[eax+20h],', '800h']
jb ['short', 'loc_58F']
mov ['[ebp+var_29],', '1']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['?IsExeExt@N7z@NArchive@@YG_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5B2']
mov ['[ebp+var_29],', '1']
mov ['[ebp+var_2A],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', '[eax+0Dh]']
mov ['[ebp+var_29],', 'cl']
jmp ['short', 'loc_5D0']
push ['offset', '$SG75951']
mov ['edx,', '[ebp+var_30]']
push ['edx']
call ['?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5D0']
mov ['ecx,', '[ebp+var_10]']
mov ['dl,', '[ecx+0Ch]']
mov ['[ebp+var_29],', 'dl']
movzx ['eax,', '[ebp+var_29]']
test ['eax,', 'eax']
jz ['loc_72E']
mov ['ecx,', '[ebp+var_10]']
call ['??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
test ['eax,', 'eax']
jz ['loc_72E']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['?Size@?$CBuffer@E@@QBEIXZ']
cmp ['eax,', '4000h']
jz ['short', 'loc_60E']
push ['4000h']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
lea ['ecx,', '[ebp+var_3C]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_5C],', 'eax']
mov ['esi,', 'esp']
push ['2']
lea ['ecx,', '[ebp+var_3C]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jnz ['loc_71D']
lea ['ecx,', '[ebp+var_3C]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
test ['eax,', 'eax']
jz ['loc_71D']
mov ['[ebp+var_4C],', '4000h']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
call ['?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z']
mov ['[ebp+var_44],', 'eax']
lea ['ecx,', '[ebp+var_3C]']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_71D']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
call ['?ParseFile@N7z@NArchive@@YGHPBEIPAUCFilterMode@12@@Z']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_709']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_709']
lea ['ecx,', '[ebp+var_1C]']
call ['?SetDelta@CFilterMode@N7z@NArchive@@QAEXXZ']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_709']
cmp ['[ebp+var_1C],', '3']
jz ['short', 'loc_709']
mov ['eax,', '[ebp+var_18]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['ecx']
push ['eax']
mov ['eax,', '[edx+24h]']
push ['eax']
mov ['ecx,', '[edx+20h]']
push ['ecx']
call ['__aullrem']
mov ['[ebp+var_64],', 'eax']
mov ['[ebp+var_60],', 'edx']
mov ['edx,', '[ebp+var_64]']
or ['edx,', '[ebp+var_60]']
jz ['short', 'loc_709']
mov ['[ebp+var_54],', '0']
cmp ['[ebp+var_54],', '0']
jnz ['short', 'loc_71D']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
jmp ['short', 'loc_75C']
movzx ['eax,', '[ebp+var_29]']
test ['eax,', 'eax']
jz ['short', 'loc_745']
mov ['ecx,', '[ebp+var_10]']
call ['??7?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_74D']
movzx ['edx,', '[ebp+var_2A]']
test ['edx,', 'edx']
jz ['short', 'loc_75C']
movzx ['eax,', '[ebp+var_2A]']
test ['eax,', 'eax']
jz ['short', 'loc_75C']
mov ['[ebp+var_1C],', '3030103h']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['[ecx+4],', 'eax']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN32']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '64h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ParseFile@N7z@NArchive@@YGHPBEIPAUCFilterMode@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?Parse_EXE@N7z@NArchive@@YGHPBEIPAUCFilterMode@12@@Z']
test ['eax,', 'eax']
jz ['short', 'loc_822']
mov ['eax,', '1']
jmp ['short', 'loc_86B']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?Parse_ELF@N7z@NArchive@@YGHPBEIPAUCFilterMode@12@@Z']
test ['eax,', 'eax']
jz ['short', 'loc_83E']
mov ['eax,', '1']
jmp ['short', 'loc_86B']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?Parse_MACH@N7z@NArchive@@YGIPBEIPAUCFilterMode@12@@Z']
test ['eax,', 'eax']
jz ['short', 'loc_85A']
mov ['eax,', '1']
jmp ['short', 'loc_86B']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?Parse_WAV@N7z@NArchive@@YGHPBEIPAUCFilterMode@12@@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?Parse_EXE@N7z@NArchive@@YGHPBEIPAUCFilterMode@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '200h']
jb ['short', 'loc_8B4']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '5A4Dh']
jz ['short', 'loc_8BB']
xor ['eax,', 'eax']
jmp ['loc_9D2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3Ch]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1000h']
jnb ['short', 'loc_8E3']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '200h']
cmp ['ecx,', '[ebp+arg_4]']
ja ['short', 'loc_8E3']
mov ['edx,', '[ebp+var_8]']
and ['edx,', '7']
jz ['short', 'loc_8EA']
xor ['eax,', 'eax']
jmp ['loc_9D2']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '4550h']
jz ['short', 'loc_905']
xor ['eax,', 'eax']
jmp ['loc_9D2']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '1C4h']
jg ['short', 'loc_946']
cmp ['[ebp+var_14],', '1C4h']
jz ['short', 'loc_96C']
cmp ['[ebp+var_14],', '14Ch']
jz ['short', 'loc_95A']
cmp ['[ebp+var_14],', '1C0h']
jz ['short', 'loc_963']
cmp ['[ebp+var_14],', '1C2h']
jz ['short', 'loc_963']
jmp ['short', 'loc_97E']
cmp ['[ebp+var_14],', '200h']
jz ['short', 'loc_975']
cmp ['[ebp+var_14],', '8664h']
jz ['short', 'loc_95A']
jmp ['short', 'loc_97E']
mov ['[ebp+var_10],', '3030103h']
jmp ['short', 'loc_982']
mov ['[ebp+var_10],', '3030501h']
jmp ['short', 'loc_982']
mov ['[ebp+var_10],', '3030701h']
jmp ['short', 'loc_982']
mov ['[ebp+var_10],', '3030401h']
jmp ['short', 'loc_982']
xor ['eax,', 'eax']
jmp ['short', 'loc_9D2']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx+10h]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '400h']
jbe ['short', 'loc_999']
xor ['eax,', 'eax']
jmp ['short', 'loc_9D2']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '10Bh']
jz ['short', 'loc_9BF']
cmp ['[ebp+var_18],', '20Bh']
jz ['short', 'loc_9BF']
jmp ['short', 'loc_9C1']
jmp ['short', 'loc_9C5']
xor ['eax,', 'eax']
jmp ['short', 'loc_9D2']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Parse_ELF@N7z@NArchive@@YGHPBEIPAUCFilterMode@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '200h']
jb ['short', 'loc_A0F']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+6]']
cmp ['ecx,', '1']
jz ['short', 'loc_A16']
xor ['eax,', 'eax']
jmp ['loc_AF6']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx],', '464C457Fh']
jz ['short', 'loc_A28']
xor ['eax,', 'eax']
jmp ['loc_AF6']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+4]']
mov ['byte', 'ptr', '[ebp+var_C],', 'cl']
cmp ['byte', 'ptr', '[ebp+var_C],', '1']
jz ['short', 'loc_A3F']
cmp ['byte', 'ptr', '[ebp+var_C],', '2']
jz ['short', 'loc_A41']
jmp ['short', 'loc_A43']
jmp ['short', 'loc_A4A']
jmp ['short', 'loc_A4A']
xor ['eax,', 'eax']
jmp ['loc_AF6']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+5]']
mov ['byte', 'ptr', '[ebp+var_10],', 'al']
cmp ['byte', 'ptr', '[ebp+var_10],', '1']
jz ['short', 'loc_A61']
cmp ['byte', 'ptr', '[ebp+var_10],', '2']
jz ['short', 'loc_A6A']
jmp ['short', 'loc_A73']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_A77']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_A77']
xor ['eax,', 'eax']
jmp ['short', 'loc_AF6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '12h']
push ['edx']
call ['?Get16@N7z@NArchive@@YGGPBEH@Z']
movzx ['eax,', 'ax']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '3Ch']
ja ['short', '$LN1']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'ds:$LN25[edx]']
jmp ['ds:$LN26[eax*4]']
mov ['[ebp+var_8],', '3030103h']
jmp ['short', 'loc_AE9']
mov ['[ebp+var_8],', '3030805h']
jmp ['short', 'loc_AE9']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_AC9']
xor ['eax,', 'eax']
jmp ['short', 'loc_AF6']
mov ['[ebp+var_8],', '3030205h']
jmp ['short', 'loc_AE9']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_ADC']
xor ['eax,', 'eax']
jmp ['short', 'loc_AF6']
mov ['[ebp+var_8],', '3030501h']
jmp ['short', 'loc_AE9']
xor ['eax,', 'eax']
jmp ['short', 'loc_AF6']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '1']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Get16@N7z@NArchive@@YGGPBEH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_B7D']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
or ['eax,', 'edx']
jmp ['short', 'loc_B83']
mov ['eax,', '[ebp+arg_0]']
mov ['ax,', '[eax]']
pop ['ebp']
retn ['8']
endp
?Parse_MACH@N7z@NArchive@@YGIPBEIPAUCFilterMode@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '200h']
jnb ['short', 'loc_BBD']
xor ['eax,', 'eax']
jmp ['loc_CF7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0FEEDFACEh']
ja ['short', 'loc_BEB']
cmp ['[ebp+var_14],', '0FEEDFACEh']
jz ['short', 'loc_C08']
cmp ['[ebp+var_14],', '0CEFAEDFEh']
jz ['short', 'loc_BF6']
cmp ['[ebp+var_14],', '0CFFAEDFEh']
jz ['short', 'loc_BFF']
jmp ['short', 'loc_C1A']
cmp ['[ebp+var_14],', '0FEEDFACFh']
jz ['short', 'loc_C11']
jmp ['short', 'loc_C1A']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_C21']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_C21']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_C21']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_C21']
xor ['eax,', 'eax']
jmp ['loc_CF7']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
call ['?Get32@N7z@NArchive@@YGIPBEH@Z']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '12h']
ja ['short', 'loc_C54']
cmp ['[ebp+var_18],', '12h']
jz ['short', 'loc_C97']
cmp ['[ebp+var_18],', '7']
jz ['short', 'loc_C68']
cmp ['[ebp+var_18],', '0Ch']
jz ['short', 'loc_C71']
cmp ['[ebp+var_18],', '0Eh']
jz ['short', 'loc_C84']
jmp ['short', 'loc_CAA']
cmp ['[ebp+var_18],', '1000007h']
jz ['short', 'loc_C68']
cmp ['[ebp+var_18],', '1000012h']
jz ['short', 'loc_C97']
jmp ['short', 'loc_CAA']
mov ['[ebp+var_4],', '3030103h']
jmp ['short', 'loc_CAE']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_C7B']
xor ['eax,', 'eax']
jmp ['short', 'loc_CF7']
mov ['[ebp+var_4],', '3030501h']
jmp ['short', 'loc_CAE']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_C8E']
xor ['eax,', 'eax']
jmp ['short', 'loc_CF7']
mov ['[ebp+var_4],', '3030805h']
jmp ['short', 'loc_CAE']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_CA1']
xor ['eax,', 'eax']
jmp ['short', 'loc_CF7']
mov ['[ebp+var_4],', '3030205h']
jmp ['short', 'loc_CAE']
xor ['eax,', 'eax']
jmp ['short', 'loc_CF7']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '10h']
push ['edx']
call ['?Get32@N7z@NArchive@@YGIPBEH@Z']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '14h']
push ['ecx']
call ['?Get32@N7z@NArchive@@YGIPBEH@Z']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '1000000h']
ja ['short', 'loc_CE6']
cmp ['[ebp+var_8],', '40000h']
jbe ['short', 'loc_CEA']
xor ['eax,', 'eax']
jmp ['short', 'loc_CF7']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['eax,', '1']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Get32@N7z@NArchive@@YGIPBEH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_D22']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax]']
bswap ['eax']
jmp ['short', 'loc_D27']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
pop ['ebp']
retn ['8']
endp
?Parse_WAV@N7z@NArchive@@YGHPBEIPAUCFilterMode@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '2Ch']
jnb ['short', 'loc_D5D']
xor ['eax,', 'eax']
jmp ['loc_E89']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '46464952h']
jnz ['short', 'loc_D80']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+8],', '45564157h']
jnz ['short', 'loc_D80']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0Ch],', '20746D66h']
jz ['short', 'loc_D87']
xor ['eax,', 'eax']
jmp ['loc_E89']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '10h']
jb ['short', 'loc_DA8']
cmp ['[ebp+var_4],', '12h']
ja ['short', 'loc_DA8']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+14h]']
cmp ['eax,', '1']
jz ['short', 'loc_DAF']
xor ['eax,', 'eax']
jmp ['loc_E89']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+16h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+22h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
and ['edx,', '7']
jnz ['short', 'loc_DDD']
cmp ['[ebp+var_10],', '100h']
jnb ['short', 'loc_DDD']
cmp ['[ebp+var_C],', '100h']
jb ['short', 'loc_DE4']
xor ['eax,', 'eax']
jmp ['loc_E89']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '14h']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0Ah']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_E06']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '0Ah']
jge ['short', 'loc_E87']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '8']
cmp ['edx,', '[ebp+arg_4]']
jbe ['short', 'loc_E1B']
xor ['eax,', 'eax']
jmp ['short', 'loc_E89']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx],', '61746164h']
jnz ['short', 'loc_E68']
mov ['eax,', '[ebp+var_10]']
shr ['eax,', '3']
imul ['eax,', '[ebp+var_C]']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '100h']
jb ['short', 'loc_E4F']
xor ['eax,', 'eax']
jmp ['short', 'loc_E89']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '3']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+4],', 'eax']
mov ['eax,', '1']
jmp ['short', 'loc_E89']
cmp ['[ebp+var_4],', '10000h']
jbe ['short', 'loc_E75']
xor ['eax,', 'eax']
jmp ['short', 'loc_E89']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx+8]']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_DFD']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?IsExeExt@N7z@NArchive@@YG_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_EAD']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '5']
jnb ['short', 'loc_ED4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', 'ds:_g_ExeExts[ecx*4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_ED2']
mov ['al,', '1']
jmp ['short', 'loc_ED6']
jmp ['short', 'loc_EA4']
xor ['al,', 'al']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Read@CRepackInStreamWithSizes@N7z@NArchive@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?GetSubStreamSize@CRepackInStreamWithSizes@N7z@NArchive@@UAGJ_KPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+0Ch]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
xor ['edx,', 'edx']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
cmp ['eax,', '[ebp+var_C]']
jb ['short', 'loc_F93']
ja ['short', 'loc_F8C']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_10]']
jb ['short', 'loc_F93']
mov ['eax,', '1']
jmp ['short', 'loc_FE7']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+0Ch]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['short', 'loc_FE5']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+14h]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+10h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FE5']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[edx],', 'ecx']
mov ['eax,', '[eax+4]']
mov ['[edx+4],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Init@CRepackStreamBase@N7z@NArchive@@QAEJIPBV?$CRecordVector@_N@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+1],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?ProcessEmptyFiles@CRepackStreamBase@N7z@NArchive@@IAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?OpenFile@CRepackStreamBase@N7z@NArchive@@IAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+1Ch]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+10h]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
mov ['edx,', '[ebp+var_4]']
mov ['al,', '[eax]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_1104']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '5']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1104']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_1157']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+12h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_112D']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+11h]']
test ['eax,', 'eax']
jnz ['short', 'loc_112D']
mov ['[ebp+var_18],', '1']
jmp ['short', 'loc_1134']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_18]']
mov ['[ecx+2],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+1],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[edx+4]']
mov ['[ecx+0Ch],', 'edx']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CloseFile@CRepackStreamBase@N7z@NArchive@@IAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+1Ch]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+1],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_11E4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
xor ['eax,', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
cmp ['[ecx+0Ch],', 'eax']
jnz ['short', 'loc_11E8']
xor ['eax,', 'eax']
jmp ['short', 'loc_1237']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['??B?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_1232']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['??C?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
push ['3']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1232']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_1237']
mov ['eax,', '20000002h']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ProcessEmptyFiles@CRepackStreamBase@N7z@NArchive@@IAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
mov ['ecx,', '[ebp+var_4]']
cmp ['[ecx+18h],', 'eax']
jnb ['short', 'loc_12D6']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+18h]']
push ['eax']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+1Ch]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax]']
or ['edx,', '[ecx+4]']
jnz ['short', 'loc_12D6']
mov ['ecx,', '[ebp+var_4]']
call ['?OpenFile@CRepackStreamBase@N7z@NArchive@@IAEJXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_12BE']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_12D8']
mov ['ecx,', '[ebp+var_4]']
call ['?CloseFile@CRepackStreamBase@N7z@NArchive@@IAEJXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_12D4']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_12D8']
jmp ['short', 'loc_126A']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Write@CFolderOutStream2@N7z@NArchive@@UAGJPBXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1316']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['loc_14D0']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9]']
test ['edx,', 'edx']
jz ['loc_147F']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[eax+14h]']
ja ['short', 'loc_1360']
jb ['short', 'loc_1358']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[edx+10h]']
jnb ['short', 'loc_1360']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_34],', 'ecx']
jmp ['short', 'loc_1369']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
test ['eax,', 'eax']
jz ['short', 'loc_13B5']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '34h']
call ['??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_38],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ah]']
test ['eax,', 'eax']
jz ['short', 'loc_13D8']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
call ['@CrcUpdate@12']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_13EB']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
mov ['esi,', '[eax+10h]']
sub ['esi,', 'ecx']
mov ['ecx,', '[eax+14h]']
sbb ['ecx,', 'edx']
mov ['edx,', '[ebp+this]']
mov ['[edx+10h],', 'esi']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+this]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ecx+10h]']
or ['eax,', '[edx+14h]']
jnz ['short', 'loc_1461']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?CloseFile@CRepackStreamBase@N7z@NArchive@@IAEJXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1448']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_14D2']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?ProcessEmptyFiles@CRepackStreamBase@N7z@NArchive@@IAEJXZ']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_1461']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_14D2']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1472']
mov ['eax,', '[ebp+var_1C]']
jmp ['short', 'loc_14D2']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_147A']
jmp ['short', 'loc_14D0']
jmp ['loc_1316']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?ProcessEmptyFiles@CRepackStreamBase@N7z@NArchive@@IAEJXZ']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1498']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_14D2']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+18h]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
mov ['ecx,', '[ebp+this]']
cmp ['[ecx+20h],', 'eax']
jnz ['short', 'loc_14B2']
mov ['eax,', '80004005h']
jmp ['short', 'loc_14D2']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?OpenFile@CRepackStreamBase@N7z@NArchive@@IAEJXZ']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_14CB']
mov ['eax,', '[ebp+var_24]']
jmp ['short', 'loc_14D2']
jmp ['loc_1316']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Read@CFolderInStream2@N7z@NArchive@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1536']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['loc_171B']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9]']
test ['edx,', 'edx']
jz ['loc_16CD']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+14h]']
ja ['short', 'loc_1580']
jb ['short', 'loc_1578']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[edx+10h]']
jnb ['short', 'loc_1580']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_1589']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
test ['eax,', 'eax']
jz ['short', 'loc_15A2']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_15BB']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+34h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_8],', '10000h']
jbe ['short', 'loc_15BB']
mov ['[ebp+var_8],', '10000h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '38h']
call ['??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_3C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
call ['@CrcUpdate@12']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_8]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['esi,', '[ecx+10h]']
sub ['esi,', 'edx']
mov ['edx,', '[ecx+14h]']
sbb ['edx,', 'eax']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'esi']
mov ['[eax+14h],', 'edx']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
test ['edx,', 'edx']
jz ['short', 'loc_1652']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_8]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1652']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1661']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+3Ch],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[edx+10h]']
or ['ecx,', '[eax+14h]']
jnz ['short', 'loc_16AA']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?CloseFile@CRepackStreamBase@N7z@NArchive@@IAEJXZ']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_1691']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_171D']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?ProcessEmptyFiles@CRepackStreamBase@N7z@NArchive@@IAEJXZ']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_16AA']
mov ['eax,', '[ebp+var_1C]']
jmp ['short', 'loc_171D']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_16BB']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_171D']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_16C8']
mov ['eax,', '80004005h']
jmp ['short', 'loc_171D']
jmp ['loc_1536']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?ProcessEmptyFiles@CRepackStreamBase@N7z@NArchive@@IAEJXZ']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_16E6']
mov ['eax,', '[ebp+var_24]']
jmp ['short', 'loc_171D']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+18h]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
mov ['ecx,', '[ebp+this]']
cmp ['[ecx+20h],', 'eax']
jnz ['short', 'loc_16FD']
xor ['eax,', 'eax']
jmp ['short', 'loc_171D']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?OpenFile@CRepackStreamBase@N7z@NArchive@@IAEJXZ']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_1716']
mov ['eax,', '[ebp+var_28]']
jmp ['short', 'loc_171D']
jmp ['loc_1536']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Execute@CThreadDecoder@N7z@NArchive@@UAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Execute@CThreadDecoder@N7z@NArchive@@UAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '44h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_19],', '0']
mov ['[ebp+var_25],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_44],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '98h']
call ['??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '84h']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '7Ch']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0A0h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+9Ch]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
lea ['edx,', '[ebp+var_25]']
push ['edx']
lea ['eax,', '[ebp+var_19]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_4C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+94h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+90h]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8Ch]']
push ['edx']
mov ['eax,', '[ecx+88h]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
call ['?Decode@CDecoder@N7z@NArchive@@QAEJPAUIInStream@@_KABUCFolders@23@IPB_KPAUISequentialOutStream@@PAUICompressProgressInfo@@PAPAUISequentialInStream@@PAUICryptoGetTextPassword@@AA_N8AAVUString@@_NI@Z']
mov ['[ebp+var_54],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_54]']
mov ['[edx+78h],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_1882']
endp
__catch$?Execute@CThreadDecoder@N7z@NArchive@@UAEXXZ$0 proc near
mov ['ecx,', '[ebp-14h]']
mov ['dword', 'ptr', '[ecx+78h],', '80004005h']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?Execute@CThreadDecoder@N7z@NArchive@@UAEXXZ$1']
retn
endp
?CryptoGetTextPassword@CCryptoGetTextPassword@N7z@NArchive@@UAGJPAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?StringToBstr@@YGJPB_WPAPA_W@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '7C0h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_7CC]']
mov ['ecx,', '1F0h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[eax+1Ch]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_19B4']
mov ['[ebp+var_18],', '1']
mov ['[ebp+var_14],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_IArchiveUpdateCallbackFile']
mov ['ecx,', '[ebp+arg_18]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[edx]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2C]']
call ['??I?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAEPAPAUIArchiveExtractCallbackMessage@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_IArchiveExtractCallbackMessage']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1A3A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0E8h]']
mov ['[ebp+var_77C],', 'ecx']
mov ['edx,', '[eax+0ECh]']
mov ['[ebp+var_778],', 'edx']
jmp ['short', 'loc_1A4E']
mov ['[ebp+var_77C],', '0']
mov ['[ebp+var_778],', '0']
mov ['eax,', '[ebp+var_77C]']
mov ['dword', 'ptr', '[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_778]']
mov ['dword', 'ptr', '[ebp+var_38+4],', 'ecx']
cmp ['dword', 'ptr', '[ebp+var_38+4],', '0']
ja ['short', 'loc_1A6C']
cmp ['dword', 'ptr', '[ebp+var_38],', '0']
jbe ['short', 'loc_1ACA']
mov ['edx,', '[ebp+arg_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+29h]']
test ['eax,', 'eax']
jnz ['short', 'loc_1ACA']
push ['0']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_38+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_38]']
push ['edx']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?WriteRange@N7z@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@_K2PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_1ACA']
mov ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_6B0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6B0]']
jmp ['loc_57C7']
lea ['ecx,', '[ebp+var_44]']
call ['??0?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['[ebp+var_50],', '0']
mov ['[ebp+var_4C],', '0']
mov ['[ebp+var_58],', '0']
mov ['[ebp+var_54],', '0']
mov ['[ebp+var_59],', '0']
lea ['ecx,', '[ebp+var_6C]']
call ['??0?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??0?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['[ebp+var_85],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['loc_1E78']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '58h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['?Alloc@?$CObjArray@H@@QAEXI@Z']
mov ['[ebp+var_8C],', '0']
jmp ['short', 'loc_1B4E']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '58h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8C],', 'eax']
jnb ['short', 'loc_1B78']
lea ['ecx,', '[ebp+var_44]']
call ['??B?$CObjArray@H@@QAEPAHXZ']
mov ['ecx,', '[ebp+var_8C]']
mov ['dword', 'ptr', '[eax+ecx*4],', '0FFFFFFFFh']
jmp ['short', 'loc_1B3F']
mov ['[ebp+var_8C],', '0']
jmp ['short', 'loc_1B93']
mov ['edx,', '[ebp+var_8C]']
add ['edx,', '1']
mov ['[ebp+var_8C],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?Size@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8C],', 'eax']
jnb ['short', 'loc_1BDC']
mov ['eax,', '[ebp+var_8C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_90],', 'ecx']
cmp ['[ebp+var_90],', '0FFFFFFFFh']
jz ['short', 'loc_1BDA']
lea ['ecx,', '[ebp+var_44]']
call ['??B?$CObjArray@H@@QAEPAHXZ']
mov ['edx,', '[ebp+var_90]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_1B84']
mov ['[ebp+var_8C],', '0']
jmp ['short', 'loc_1BF7']
mov ['edx,', '[ebp+var_8C]']
add ['edx,', '1']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8C]']
cmp ['ecx,', '[eax+4]']
jnb ['loc_1E78']
mov ['[ebp+var_94],', '0']
mov ['[ebp+var_98],', '0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['edx,', '[ebp+var_8C]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_9C],', 'eax']
mov ['[ebp+var_A4],', '0']
mov ['[ebp+var_A0],', '0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '118h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+var_8C]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_A8],', 'edx']
jmp ['short', 'loc_1C79']
mov ['eax,', '[ebp+var_A8]']
add ['eax,', '1']
mov ['[ebp+var_A8],', 'eax']
mov ['ecx,', '[ebp+var_94]']
cmp ['ecx,', '[ebp+var_9C]']
jnb ['loc_1D2E']
mov ['edx,', '[ebp+var_A8]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_AC],', 'eax']
mov ['eax,', '[ebp+var_AC]']
movzx ['ecx,', 'byte', 'ptr', '[eax+10h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1D29']
mov ['edx,', '[ebp+var_94]']
add ['edx,', '1']
mov ['[ebp+var_94],', 'edx']
lea ['ecx,', '[ebp+var_44]']
call ['??B?$CObjArray@H@@QAEPAHXZ']
mov ['ecx,', '[ebp+var_A8]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_B0],', 'edx']
cmp ['[ebp+var_B0],', '0']
jl ['short', 'loc_1D29']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax+38h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1D29']
mov ['edx,', '[ebp+var_98]']
add ['edx,', '1']
mov ['[ebp+var_98],', 'edx']
mov ['eax,', '[ebp+var_AC]']
mov ['ecx,', '[ebp+var_A4]']
add ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_A0]']
adc ['edx,', '[eax+4]']
mov ['[ebp+var_A4],', 'ecx']
mov ['[ebp+var_A0],', 'edx']
jmp ['loc_1C6A']
cmp ['[ebp+var_98],', '0']
jnz ['short', 'loc_1D3C']
jmp ['loc_1BE8']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_BC],', 'eax']
mov ['ecx,', '[ebp+var_98]']
mov ['[ebp+var_B8],', 'ecx']
lea ['ecx,', '[ebp+var_E0]']
call ['??0CFolderEx@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['edx,', '[ebp+var_E0]']
push ['edx']
mov ['eax,', '[ebp+var_8C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?ParseFolderEx@CFolders@N7z@NArchive@@QBEXIAAUCFolderEx@23@@Z']
lea ['ecx,', '[ebp+var_E0]']
call ['?IsEncrypted@CFolder@N7z@NArchive@@QBE_NXZ']
mov ['[ebp+var_E5],', 'al']
lea ['ecx,', '[ebp+var_E0]']
push ['ecx']
lea ['edx,', '[ebp+var_6C]']
push ['edx']
call ['?Get_FilterGroup_for_Folder@N7z@NArchive@@YGIAAV?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@ABUCFolderEx@12@@Z']
mov ['[ebp+var_EC],', 'eax']
lea ['ecx,', '[ebp+var_80]']
call ['?Size@?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_EC],', 'eax']
jb ['short', 'loc_1DBA']
lea ['ecx,', '[ebp+var_80]']
call ['?AddNew@?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAEAAUCSolidGroup@N7z@NArchive@@XZ']
jmp ['short', 'loc_1DA0']
mov ['eax,', '[ebp+var_B8]']
push ['eax']
mov ['ecx,', '[ebp+var_BC]']
push ['ecx']
mov ['edx,', '[ebp+var_EC]']
push ['edx']
lea ['ecx,', '[ebp+var_80]']
call ['??A?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAEAAUCSolidGroup@N7z@NArchive@@I@Z']
add ['eax,', '0Ch']
mov ['ecx,', 'eax']
call ['?Add@?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@QAEIUCFolderRepack@N7z@NArchive@@@Z']
mov ['eax,', '[ebp+var_98]']
cmp ['eax,', '[ebp+var_9C]']
jnz ['short', 'loc_1E0C']
mov ['ecx,', '[ebp+var_8C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z']
add ['eax,', '[ebp+var_50]']
adc ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_4C],', 'edx']
jmp ['short', 'loc_1E64']
mov ['[ebp+var_85],', '1']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_4C]']
adc ['eax,', '[ebp+var_A0]']
mov ['[ebp+var_50],', 'edx']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_54]']
cmp ['ecx,', '[ebp+var_A0]']
ja ['short', 'loc_1E55']
jb ['short', 'loc_1E43']
mov ['edx,', '[ebp+var_58]']
cmp ['edx,', '[ebp+var_A4]']
jnb ['short', 'loc_1E55']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+var_A0]']
mov ['[ebp+var_54],', 'ecx']
movzx ['edx,', '[ebp+var_E5]']
test ['edx,', 'edx']
jz ['short', 'loc_1E64']
mov ['[ebp+var_59],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??1CFolderEx@N7z@NArchive@@QAE@XZ']
jmp ['loc_1BE8']
mov ['[ebp+var_F8],', '0']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_100],', '0']
jmp ['short', 'loc_1EA7']
mov ['eax,', '[ebp+var_100]']
add ['eax,', '1']
mov ['[ebp+var_100],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?Size@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_100],', 'eax']
jnb ['loc_1F79']
mov ['ecx,', '[ebp+var_100]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_104],', 'eax']
mov ['edx,', '[ebp+var_104]']
movzx ['eax,', 'byte', 'ptr', '[edx+38h]']
test ['eax,', 'eax']
jz ['loc_1F74']
mov ['ecx,', '[ebp+var_104]']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '[ecx+20h]']
mov ['eax,', '[ebp+var_4C]']
adc ['eax,', '[ecx+24h]']
mov ['[ebp+var_50],', 'edx']
mov ['[ebp+var_4C],', 'eax']
cmp ['[ebp+var_18],', '1']
jnz ['short', 'loc_1F06']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1F2C']
mov ['ecx,', '[ebp+var_104]']
mov ['edx,', '[ebp+var_F8]']
add ['edx,', '[ecx+20h]']
mov ['eax,', '[ebp+var_F4]']
adc ['eax,', '[ecx+24h]']
mov ['[ebp+var_F8],', 'edx']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_1F74']
mov ['ecx,', '[ebp+var_104]']
mov ['[ebp+var_780],', 'ecx']
mov ['edx,', '[ebp+var_780]']
mov ['eax,', '[ebp+var_F4]']
cmp ['eax,', '[edx+24h]']
ja ['short', 'loc_1F74']
jb ['short', 'loc_1F5C']
mov ['ecx,', '[ebp+var_780]']
mov ['edx,', '[ebp+var_F8]']
cmp ['edx,', '[ecx+20h]']
jnb ['short', 'loc_1F74']
mov ['eax,', '[ebp+var_104]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_F8],', 'ecx']
mov ['edx,', '[eax+24h]']
mov ['[ebp+var_F4],', 'edx']
jmp ['loc_1E98']
mov ['eax,', '[ebp+var_F4]']
cmp ['eax,', '[ebp+var_54]']
ja ['short', 'loc_1FA3']
jb ['short', 'loc_1F91']
mov ['ecx,', '[ebp+var_F8]']
cmp ['ecx,', '[ebp+var_58]']
jnb ['short', 'loc_1FA3']
mov ['edx,', '[ebp+var_58]']
mov ['[ebp+var_F8],', 'edx']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_F4],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ecx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_108],', 'eax']
cmp ['[ebp+var_108],', '0']
jz ['short', 'loc_2027']
mov ['ecx,', '[ebp+var_108]']
mov ['[ebp+var_6B4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6B4]']
jmp ['loc_57C7']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_6BC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
cmp ['[ebp+var_6BC],', '0']
jz ['short', 'loc_2057']
mov ['ecx,', '[ebp+var_6BC]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_784],', 'eax']
jmp ['short', 'loc_2061']
mov ['[ebp+var_784],', '0']
mov ['edx,', '[ebp+var_784]']
mov ['[ebp+var_6B8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_6B8]']
mov ['[ebp+var_10C],', 'eax']
mov ['ecx,', '[ebp+var_10C]']
push ['ecx']
lea ['ecx,', '[ebp+var_114]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
push ['1']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['ecx,', '[ebp+var_10C]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
lea ['ecx,', '[ebp+var_13C]']
call ['??0CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['eax,', '[ebp+arg_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2Ah]']
test ['ecx,', 'ecx']
jz ['loc_2150']
lea ['ecx,', '[ebp+var_13C]']
call ['?CreateEvents@CStreamBinder@@QAEIXZ']
mov ['[ebp+var_144],', 'eax']
cmp ['[ebp+var_144],', '0']
jz ['short', 'loc_2150']
mov ['edx,', '[ebp+var_144]']
mov ['[ebp+var_6C0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6C0]']
jmp ['loc_57C7']
mov ['eax,', '[ebp+arg_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2Ah]']
push ['ecx']
lea ['ecx,', '[ebp+var_1F0]']
call ['??0CThreadDecoder@N7z@NArchive@@QAE@_N@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['edx,', '[ebp+arg_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+2Ah]']
test ['eax,', 'eax']
jz ['loc_2226']
movzx ['ecx,', '[ebp+var_85]']
test ['ecx,', 'ecx']
jz ['loc_2226']
lea ['ecx,', '[ebp+var_1F0]']
call ['?Create@CVirtThread@@QAEIXZ']
mov ['[ebp+var_1F8],', 'eax']
cmp ['[ebp+var_1F8],', '0']
jz ['loc_2226']
mov ['edx,', '[ebp+var_1F8]']
mov ['[ebp+var_6C4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6C4]']
jmp ['loc_57C7']
lea ['ecx,', '[ebp+var_20C]']
call ['??0CAnalysis@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['eax,', '[ebp+arg_1C]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_2255']
mov ['[ebp+var_200],', '0']
mov ['[ebp+var_1FF],', '0']
mov ['[ebp+var_1FE],', '0']
jmp ['short', 'loc_2294']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['ecx,', '[ebp+var_20C]']
call ['??4?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAUIArchiveUpdateCallbackFile@@ABV0@@Z']
mov ['edx,', '[ebp+arg_1C]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jle ['short', 'loc_2294']
mov ['[ebp+var_200],', '1']
mov ['eax,', '[ebp+arg_1C]']
cmp ['dword', 'ptr', '[eax+0Ch],', '7']
jl ['short', 'loc_2294']
mov ['[ebp+var_1FF],', '1']
mov ['ecx,', '[ebp+arg_1C]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '9']
jl ['short', 'loc_2294']
mov ['[ebp+var_1FE],', '1']
mov ['edx,', '[ebp+arg_1C]']
mov ['al,', '[edx+8]']
mov ['[ebp+var_211],', 'al']
mov ['ecx,', '[ebp+arg_1C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_218],', 'edx']
movzx ['eax,', '[ebp+var_211]']
test ['eax,', 'eax']
jz ['short', 'loc_2315']
mov ['[ebp+var_100],', '0']
jmp ['short', 'loc_22D1']
mov ['ecx,', '[ebp+var_100]']
add ['ecx,', '1']
mov ['[ebp+var_100],', 'ecx']
mov ['ecx,', '[ebp+var_218]']
call ['?Size@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_100],', 'eax']
jnb ['short', 'loc_2315']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_218]']
call ['??A?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBEABUCMethodFull@N7z@NArchive@@I@Z']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
call ['?IsFilterMethod@N7z@NArchive@@YG_N_K@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2313']
mov ['[ebp+var_211],', '0']
jmp ['short', 'loc_2315']
jmp ['short', 'loc_22C2']
mov ['[ebp+var_100],', '0']
jmp ['short', 'loc_2330']
mov ['ecx,', '[ebp+var_100]']
add ['ecx,', '1']
mov ['[ebp+var_100],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?Size@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_100],', 'eax']
jnb ['loc_24BB']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_21C],', 'eax']
mov ['eax,', '[ebp+var_21C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+38h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2379']
mov ['ecx,', '[ebp+var_21C]']
call ['?HasStream@CUpdateItem@N7z@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_237B']
jmp ['short', 'loc_2321']
lea ['ecx,', '[ebp+var_230]']
call ['??0CFilterMode2@N7z@NArchive@@QAE@XZ']
movzx ['eax,', '[ebp+var_211]']
test ['eax,', 'eax']
jz ['loc_245A']
lea ['ecx,', '[ebp+var_230]']
push ['ecx']
mov ['edx,', '[ebp+var_21C]']
push ['edx']
mov ['eax,', '[ebp+var_100]']
push ['eax']
lea ['ecx,', '[ebp+var_20C]']
call ['?GetFilterGroup@CAnalysis@N7z@NArchive@@QAEJIABUCUpdateItem@23@AAUCFilterMode@23@@Z']
mov ['[ebp+var_238],', 'eax']
cmp ['[ebp+var_238],', '0']
jz ['loc_245A']
mov ['ecx,', '[ebp+var_238]']
mov ['[ebp+var_6C8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_20C]']
call ['??1CAnalysis@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6C8]']
jmp ['loc_57C7']
mov ['edx,', '[ebp+var_218]']
mov ['al,', '[edx+21h]']
mov ['[ebp+var_228],', 'al']
lea ['ecx,', '[ebp+var_230]']
push ['ecx']
lea ['edx,', '[ebp+var_6C]']
push ['edx']
call ['?GetGroup@N7z@NArchive@@YGIAAV?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@ABUCFilterMode2@12@@Z']
mov ['[ebp+var_23C],', 'eax']
lea ['ecx,', '[ebp+var_80]']
call ['?Size@?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_23C],', 'eax']
jb ['short', 'loc_2499']
lea ['ecx,', '[ebp+var_80]']
call ['?AddNew@?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAEAAUCSolidGroup@N7z@NArchive@@XZ']
jmp ['short', 'loc_247F']
mov ['eax,', '[ebp+var_100]']
push ['eax']
mov ['ecx,', '[ebp+var_23C]']
push ['ecx']
lea ['ecx,', '[ebp+var_80]']
call ['??A?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAEAAUCSolidGroup@N7z@NArchive@@I@Z']
mov ['ecx,', 'eax']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
jmp ['loc_2321']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_20C]']
call ['??1CAnalysis@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_240],', '0']
lea ['ecx,', '[ebp+var_248]']
call ['??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
movzx ['edx,', '[ebp+var_59]']
test ['edx,', 'edx']
jz ['loc_274A']
push ['14h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_6D0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
cmp ['[ebp+var_6D0],', '0']
jz ['short', 'loc_251F']
mov ['ecx,', '[ebp+var_6D0]']
call ['??0CCryptoGetTextPassword@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_788],', 'eax']
jmp ['short', 'loc_2529']
mov ['[ebp+var_788],', '0']
mov ['eax,', '[ebp+var_788]']
mov ['[ebp+var_6CC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
mov ['ecx,', '[ebp+var_6CC]']
mov ['[ebp+var_240],', 'ecx']
mov ['edx,', '[ebp+var_240]']
push ['edx']
lea ['ecx,', '[ebp+var_248]']
call ['??4?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAUICryptoGetTextPassword@@PAU1@@Z']
mov ['eax,', '[ebp+var_240]']
push ['eax']
lea ['ecx,', '[ebp+var_158]']
call ['??4?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAUICryptoGetTextPassword@@PAU1@@Z']
mov ['ecx,', '[ebp+arg_1C]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'byte', 'ptr', '[edx+21h]']
test ['eax,', 'eax']
jz ['short', 'loc_2592']
mov ['ecx,', '[ebp+arg_1C]']
mov ['edx,', '[ecx]']
add ['edx,', '24h']
push ['edx']
mov ['ecx,', '[ebp+var_240]']
add ['ecx,', '8']
call ['??4UString@@QAEAAV0@ABV0@@Z']
jmp ['loc_274A']
cmp ['[ebp+arg_20],', '0']
jnz ['loc_262C']
mov ['[ebp+var_6D4],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6D4]']
jmp ['loc_57C7']
lea ['ecx,', '[ebp+var_254]']
call ['??0CMyComBSTR@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
lea ['ecx,', '[ebp+var_254]']
call ['??ICMyComBSTR@@QAEPAPA_WXZ']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+arg_20]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_20]']
push ['edx']
mov ['eax,', '[ecx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_25C],', 'eax']
cmp ['[ebp+var_25C],', '0']
jz ['loc_2712']
mov ['ecx,', '[ebp+var_25C]']
mov ['[ebp+var_6D8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_254]']
call ['??1CMyComBSTR@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6D8]']
jmp ['loc_57C7']
lea ['ecx,', '[ebp+var_254]']
call ['??BCMyComBSTR@@QBEPB_WXZ']
test ['eax,', 'eax']
jz ['short', 'loc_273B']
lea ['ecx,', '[ebp+var_254]']
call ['??BCMyComBSTR@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_240]']
add ['ecx,', '8']
call ['??4UString@@QAEAAV0@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_254]']
call ['??1CMyComBSTR@@QAE@XZ']
push ['0']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['?Create@COutArchive@N7z@NArchive@@QAEJPAUISequentialOutStream@@_N@Z']
mov ['[ebp+var_260],', 'eax']
cmp ['[ebp+var_260],', '0']
jz ['loc_27FD']
mov ['eax,', '[ebp+var_260]']
mov ['[ebp+var_6DC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6DC]']
jmp ['loc_57C7']
mov ['ecx,', '[ebp+arg_C]']
call ['?SkipPrefixArchiveHeader@COutArchive@N7z@NArchive@@QAEJXZ']
mov ['[ebp+var_264],', 'eax']
cmp ['[ebp+var_264],', '0']
jz ['loc_28AA']
mov ['ecx,', '[ebp+var_264]']
mov ['[ebp+var_6E0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6E0]']
jmp ['loc_57C7']
lea ['ecx,', '[ebp+var_274]']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
mov ['[ebp+var_100],', '0']
jmp ['short', 'loc_28D4']
mov ['edx,', '[ebp+var_100]']
add ['edx,', '1']
mov ['[ebp+var_100],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?Size@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_100],', 'eax']
jnb ['short', 'loc_2960']
mov ['eax,', '[ebp+var_100]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_27C],', 'eax']
mov ['ecx,', '[ebp+var_27C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+38h]']
test ['edx,', 'edx']
jz ['short', 'loc_291D']
mov ['ecx,', '[ebp+var_27C]']
call ['?HasStream@CUpdateItem@N7z@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_291B']
jmp ['short', 'loc_28C5']
jmp ['short', 'loc_2949']
mov ['ecx,', '[ebp+var_27C]']
cmp ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
jz ['short', 'loc_2949']
mov ['edx,', '[ebp+var_27C]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax+10h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2949']
jmp ['loc_28C5']
mov ['edx,', '[ebp+var_100]']
push ['edx']
lea ['ecx,', '[ebp+var_274]']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
jmp ['loc_28C5']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '?CompareEmptyItems@N7z@NArchive@@YGHPBI0PAX@Z']
lea ['ecx,', '[ebp+var_274]']
call ['?Sort@?$CRecordVector@I@@QAEXP6GHPBI0PAX@Z1@Z']
mov ['[ebp+var_100],', '0']
jmp ['short', 'loc_298F']
mov ['ecx,', '[ebp+var_100]']
add ['ecx,', '1']
mov ['[ebp+var_100],', 'ecx']
lea ['ecx,', '[ebp+var_274]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_100],', 'eax']
jnb ['loc_2A8B']
mov ['edx,', '[ebp+var_100]']
push ['edx']
lea ['ecx,', '[ebp+var_274]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_280],', 'eax']
lea ['ecx,', '[ebp+var_29C]']
call ['??0CFileItem@N7z@NArchive@@QAE@XZ']
lea ['ecx,', '[ebp+var_2E0]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
mov ['ecx,', '[ebp+var_280]']
movzx ['edx,', 'byte', 'ptr', '[ecx+39h]']
test ['edx,', 'edx']
jz ['short', 'loc_2A22']
lea ['eax,', '[ebp+var_2CC]']
push ['eax']
lea ['ecx,', '[ebp+var_29C]']
push ['ecx']
mov ['edx,', '[ebp+var_280]']
push ['edx']
call ['?FromUpdateItemToFileItem@N7z@NArchive@@YGXABUCUpdateItem@12@AAUCFileItem@12@AAUCFileItem2@12@@Z']
mov ['eax,', '[ebp+var_280]']
add ['eax,', '28h']
push ['eax']
lea ['ecx,', '[ebp+var_2E0]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
jmp ['short', 'loc_2A5A']
lea ['ecx,', '[ebp+var_2CC]']
push ['ecx']
lea ['edx,', '[ebp+var_29C]']
push ['edx']
mov ['eax,', '[ebp+var_280]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?GetFile@N7z@NArchive@@YGXABUCDatabase@12@IAAUCFileItem@12@AAUCFileItem2@12@@Z']
lea ['eax,', '[ebp+var_2E0]']
push ['eax']
mov ['ecx,', '[ebp+var_280]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetPath@CDatabase@N7z@NArchive@@QBEXIAAVUString@@@Z']
lea ['eax,', '[ebp+var_2E0]']
push ['eax']
lea ['ecx,', '[ebp+var_2CC]']
push ['ecx']
lea ['edx,', '[ebp+var_29C]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?AddFile@CArchiveDatabaseOut@N7z@NArchive@@QAEXABUCFileItem@23@ABUCFileItem2@23@ABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
lea ['ecx,', '[ebp+var_2E0]']
call ['??1UString@@QAE@XZ']
jmp ['loc_2980']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_274]']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['eax,', '[ebp+var_10C]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['[ebp+var_2E8],', '0']
jmp ['short', 'loc_2AC9']
mov ['ecx,', '[ebp+var_2E8]']
add ['ecx,', '1']
mov ['[ebp+var_2E8],', 'ecx']
lea ['ecx,', '[ebp+var_6C]']
call ['?Size@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_2E8],', 'eax']
jnb ['short', 'loc_2AF3']
mov ['edx,', '[ebp+var_2E8]']
push ['edx']
lea ['ecx,', '[ebp+var_6C]']
call ['??A?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAEAAUCFilterMode2@N7z@NArchive@@I@Z']
mov ['ecx,', '[ebp+var_2E8]']
mov ['[eax+0Ch],', 'ecx']
jmp ['short', 'loc_2ABA']
lea ['ecx,', '[ebp+var_6C]']
call ['?Sort2@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAEXXZ']
mov ['[ebp+var_2EC],', '0']
jmp ['short', 'loc_2B16']
mov ['edx,', '[ebp+var_2EC]']
add ['edx,', '1']
mov ['[ebp+var_2EC],', 'edx']
lea ['ecx,', '[ebp+var_6C]']
call ['?Size@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_2EC],', 'eax']
jnb ['loc_559E']
mov ['eax,', '[ebp+var_2EC]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['??A?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAEAAUCFilterMode2@N7z@NArchive@@I@Z']
mov ['[ebp+var_2F0],', 'eax']
mov ['ecx,', '[ebp+arg_1C]']
mov ['edx,', '[ecx]']
push ['edx']
lea ['ecx,', '[ebp+var_324]']
call ['??0CCompressionMethodMode@N7z@NArchive@@QAE@ABU012@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
mov ['eax,', '[ebp+arg_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2B73']
mov ['edx,', '[ebp+arg_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+2Ah]']
test ['eax,', 'eax']
jz ['short', 'loc_2B73']
mov ['[ebp+var_789],', '1']
jmp ['short', 'loc_2B7A']
mov ['[ebp+var_789],', '0']
movzx ['ecx,', '[ebp+var_789]']
push ['ecx']
mov ['edx,', '[ebp+var_2F0]']
push ['edx']
lea ['eax,', '[ebp+var_324]']
push ['eax']
call ['?MakeExeMethod@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@ABUCFilterMode@12@_N@Z']
mov ['[ebp+var_32C],', 'eax']
mov ['ecx,', '[ebp+var_32C]']
mov ['[ebp+var_330],', 'ecx']
cmp ['[ebp+var_330],', '0']
jz ['loc_2C55']
mov ['edx,', '[ebp+var_330]']
mov ['[ebp+var_6E4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6E4]']
jmp ['loc_57C7']
mov ['eax,', '[ebp+var_2F0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C95']
movzx ['edx,', '[ebp+var_303]']
test ['edx,', 'edx']
jnz ['short', 'loc_2C93']
cmp ['[ebp+var_240],', '0']
jz ['short', 'loc_2C8C']
mov ['eax,', '[ebp+var_240]']
add ['eax,', '8']
push ['eax']
lea ['ecx,', '[ebp+var_300]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['[ebp+var_303],', '1']
jmp ['short', 'loc_2CA7']
mov ['[ebp+var_303],', '0']
lea ['ecx,', '[ebp+var_300]']
call ['?Empty@UString@@QAEXXZ']
lea ['ecx,', '[ebp+var_324]']
push ['ecx']
lea ['ecx,', '[ebp+var_3E8]']
call ['??0CEncoder@N7z@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
mov ['edx,', '[ebp+var_2F0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
lea ['ecx,', '[ebp+var_80]']
call ['??A?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAEAAUCSolidGroup@N7z@NArchive@@I@Z']
mov ['[ebp+var_3F0],', 'eax']
mov ['[ebp+var_3F4],', '0']
jmp ['short', 'loc_2CF0']
mov ['ecx,', '[ebp+var_3F4]']
add ['ecx,', '1']
mov ['[ebp+var_3F4],', 'ecx']
mov ['ecx,', '[ebp+var_3F0]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_3F4],', 'eax']
jnb ['loc_48C2']
mov ['edx,', '[ebp+var_3F4]']
push ['edx']
mov ['ecx,', '[ebp+var_3F0]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@QBEABUCFolderRepack@N7z@NArchive@@I@Z']
mov ['[ebp+var_3F8],', 'eax']
mov ['eax,', '[ebp+var_3F8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_3FC],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['edx,', '[ebp+var_3FC]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_400],', 'eax']
mov ['ecx,', '[ebp+var_3F8]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+var_400]']
jnz ['loc_323A']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
test ['eax,', 'eax']
jz ['loc_2FE0']
lea ['ecx,', '[ebp+var_20]']
call ['??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_790],', 'eax']
mov ['esi,', 'esp']
push ['3']
mov ['eax,', '[ebp+var_3FC]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_790]']
push ['ecx']
mov ['edx,', '[ebp+var_790]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_404],', 'eax']
cmp ['[ebp+var_404],', '0']
jz ['loc_2E6B']
mov ['edx,', '[ebp+var_404]']
mov ['[ebp+var_6E8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6E8]']
jmp ['loc_57C7']
mov ['[ebp+var_408],', '0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '118h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+var_3FC]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_40C],', 'edx']
jmp ['short', 'loc_2EA3']
mov ['eax,', '[ebp+var_40C]']
add ['eax,', '1']
mov ['[ebp+var_40C],', 'eax']
mov ['ecx,', '[ebp+var_408]']
cmp ['ecx,', '[ebp+var_400]']
jnb ['loc_2FE0']
mov ['edx,', '[ebp+var_40C]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax+10h]']
test ['eax,', 'eax']
jz ['loc_2FDB']
mov ['ecx,', '[ebp+var_408]']
add ['ecx,', '1']
mov ['[ebp+var_408],', 'ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_794],', 'eax']
mov ['esi,', 'esp']
push ['3']
mov ['edx,', '[ebp+var_40C]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_794]']
push ['eax']
mov ['ecx,', '[ebp+var_794]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_410],', 'eax']
cmp ['[ebp+var_410],', '0']
jz ['loc_2FDB']
mov ['ecx,', '[ebp+var_410]']
mov ['[ebp+var_6EC],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6EC]']
jmp ['loc_57C7']
jmp ['loc_2E94']
mov ['edx,', '[ebp+var_3FC]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z']
mov ['dword', 'ptr', '[ebp+var_418],', 'eax']
mov ['dword', 'ptr', '[ebp+var_418+4],', 'edx']
lea ['ecx,', '[ebp+var_114]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
push ['eax']
mov ['eax,', 'dword', 'ptr', '[ebp+var_418+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_418]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_3FC]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetFolderStreamPos@CDbEx@N7z@NArchive@@QBE_KII@Z']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '54h']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?WriteRange@N7z@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@_K2PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_41C],', 'eax']
cmp ['[ebp+var_41C],', '0']
jz ['loc_3100']
mov ['ecx,', '[ebp+var_41C]']
mov ['[ebp+var_6F0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6F0]']
jmp ['loc_57C7']
mov ['edx,', '[ebp+var_10C]']
mov ['eax,', '[edx+18h]']
add ['eax,', 'dword', 'ptr', '[ebp+var_418]']
mov ['ecx,', '[edx+1Ch]']
adc ['ecx,', 'dword', 'ptr', '[ebp+var_418+4]']
mov ['edx,', '[ebp+var_10C]']
mov ['[edx+18h],', 'eax']
mov ['[edx+1Ch],', 'ecx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '54h']
call ['?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ']
mov ['[ebp+var_420],', 'eax']
mov ['eax,', '[ebp+var_420]']
push ['eax']
mov ['ecx,', '[ebp+var_3FC]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?ParseFolderInfo@CFolders@N7z@NArchive@@QBEXIAAUCFolder@23@@Z']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '30h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['edx,', '[ebp+var_3FC]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_424],', 'eax']
mov ['[ebp+var_428],', '0']
jmp ['short', 'loc_3180']
mov ['ecx,', '[ebp+var_428]']
add ['ecx,', '1']
mov ['[ebp+var_428],', 'ecx']
mov ['ecx,', '[ebp+var_420]']
add ['ecx,', '10h']
call ['?Size@?$CObjArray2@I@@QBEIXZ']
cmp ['[ebp+var_428],', 'eax']
jnb ['short', 'loc_31BA']
mov ['edx,', '[ebp+var_424]']
add ['edx,', '[ebp+var_428]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetStreamPackSize@CFolders@N7z@NArchive@@QBE_KI@Z']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '30h']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
jmp ['short', 'loc_3171']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '2Ch']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+var_3FC]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_42C],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '2Ch']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+var_3FC]']
mov ['edx,', '[eax+ecx*4+4]']
mov ['[ebp+var_430],', 'edx']
jmp ['short', 'loc_3200']
mov ['eax,', '[ebp+var_42C]']
add ['eax,', '1']
mov ['[ebp+var_42C],', 'eax']
mov ['ecx,', '[ebp+var_42C]']
cmp ['ecx,', '[ebp+var_430]']
jnb ['short', 'loc_3235']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['??B?$CObjArray@_K@@QBEPB_KXZ']
mov ['edx,', '[ebp+var_42C]']
mov ['ecx,', '[eax+edx*8+4]']
push ['ecx']
mov ['edx,', '[eax+edx*8]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '24h']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
jmp ['short', 'loc_31F1']
jmp ['loc_4696']
lea ['ecx,', '[ebp+var_440]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
mov ['[ebp+var_448],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
test ['eax,', 'eax']
jz ['loc_336B']
lea ['ecx,', '[ebp+var_20]']
call ['??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_798],', 'eax']
mov ['esi,', 'esp']
push ['4']
mov ['eax,', '[ebp+var_3FC]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_798]']
push ['ecx']
mov ['edx,', '[ebp+var_798]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44C],', 'eax']
cmp ['[ebp+var_44C],', '0']
jz ['loc_336B']
mov ['edx,', '[ebp+var_44C]']
mov ['[ebp+var_6F4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6F4]']
jmp ['loc_57C7']
mov ['[ebp+var_454],', '0']
mov ['[ebp+var_450],', '0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '118h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+var_3FC]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_458],', 'edx']
jmp ['short', 'loc_33AD']
mov ['eax,', '[ebp+var_458]']
add ['eax,', '1']
mov ['[ebp+var_458],', 'eax']
mov ['ecx,', '[ebp+var_448]']
cmp ['ecx,', '[ebp+var_400]']
jnb ['loc_347F']
mov ['[ebp+var_459],', '0']
mov ['edx,', '[ebp+var_458]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_460],', 'eax']
mov ['eax,', '[ebp+var_460]']
movzx ['ecx,', 'byte', 'ptr', '[eax+10h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3439']
mov ['edx,', '[ebp+var_448]']
add ['edx,', '1']
mov ['[ebp+var_448],', 'edx']
lea ['ecx,', '[ebp+var_44]']
call ['??B?$CObjArray@H@@QAEPAHXZ']
mov ['ecx,', '[ebp+var_458]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_464],', 'edx']
cmp ['[ebp+var_464],', '0']
jl ['short', 'loc_3439']
mov ['eax,', '[ebp+var_464]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax+38h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3439']
mov ['[ebp+var_459],', '1']
movzx ['edx,', '[ebp+var_459]']
push ['edx']
lea ['ecx,', '[ebp+var_440]']
call ['?Add@?$CRecordVector@_N@@QAEI_N@Z']
movzx ['eax,', '[ebp+var_459]']
test ['eax,', 'eax']
jz ['short', 'loc_347A']
mov ['ecx,', '[ebp+var_460]']
mov ['edx,', '[ebp+var_454]']
add ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_450]']
adc ['eax,', '[ecx+4]']
mov ['[ebp+var_454],', 'edx']
mov ['[ebp+var_450],', 'eax']
jmp ['loc_339E']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '30h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
mov ['[ebp+var_468],', 'eax']
lea ['ecx,', '[ebp+var_480]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
mov ['[ebp+var_48C],', '0']
push ['1Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_6FC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
cmp ['[ebp+var_6FC],', '0']
jz ['short', 'loc_34D9']
mov ['ecx,', '[ebp+var_6FC]']
call ['??0CRepackInStreamWithSizes@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_79C],', 'eax']
jmp ['short', 'loc_34E3']
mov ['[ebp+var_79C],', '0']
mov ['ecx,', '[ebp+var_79C]']
mov ['[ebp+var_6F8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
mov ['edx,', '[ebp+var_6F8]']
mov ['[ebp+var_490],', 'edx']
mov ['eax,', '[ebp+var_490]']
push ['eax']
lea ['ecx,', '[ebp+var_498]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
mov ['ecx,', '[ebp+arg_1C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2Ah]']
test ['edx,', 'edx']
jz ['loc_35F9']
cmp ['[ebp+var_170],', '0']
jz ['short', 'loc_353E']
mov ['eax,', '[ebp+var_170]']
add ['eax,', '8']
mov ['[ebp+var_7A0],', 'eax']
jmp ['short', 'loc_3548']
mov ['[ebp+var_7A0],', '0']
mov ['ecx,', '[ebp+var_7A0]']
mov ['[ebp+var_488],', 'ecx']
lea ['ecx,', '[ebp+var_4A4]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
lea ['ecx,', '[ebp+var_4A4]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_480]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_13C]']
call ['?CreateStreams@CStreamBinder@@QAEXPAPAUISequentialInStream@@PAPAUISequentialOutStream@@@Z']
lea ['ecx,', '[ebp+var_13C]']
call ['?ReInit@CStreamBinder@@QAEXXZ']
lea ['edx,', '[ebp+var_4A4]']
push ['edx']
mov ['ecx,', '[ebp+var_170]']
add ['ecx,', '34h']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@ABV0@@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_174]']
call ['??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0F8h]']
mov ['[ebp+var_168],', 'edx']
mov ['eax,', '[ecx+0FCh]']
mov ['[ebp+var_164],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_160],', 'ecx']
mov ['edx,', '[ebp+var_3FC]']
mov ['[ebp+var_15C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_4A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_3986']
push ['40h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_704],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '17h']
cmp ['[ebp+var_704],', '0']
jz ['short', 'loc_3629']
mov ['ecx,', '[ebp+var_704]']
call ['??0CFolderInStream2@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_7A4],', 'eax']
jmp ['short', 'loc_3633']
mov ['[ebp+var_7A4],', '0']
mov ['eax,', '[ebp+var_7A4]']
mov ['[ebp+var_700],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
mov ['ecx,', '[ebp+var_700]']
mov ['[ebp+var_48C],', 'ecx']
mov ['ecx,', '[ebp+var_48C]']
call ['?Init@CFolderInStream2@N7z@NArchive@@QAEXXZ']
mov ['edx,', '[ebp+var_48C]']
push ['edx']
lea ['ecx,', '[ebp+var_480]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
cmp ['[ebp+var_48C],', '0']
jz ['short', 'loc_3686']
mov ['eax,', '[ebp+var_48C]']
add ['eax,', '8']
mov ['[ebp+var_7A8],', 'eax']
jmp ['short', 'loc_3690']
mov ['[ebp+var_7A8],', '0']
mov ['ecx,', '[ebp+var_7A8]']
mov ['[ebp+var_488],', 'ecx']
mov ['[ebp+var_4AD],', '0']
mov ['[ebp+var_4B9],', '0']
lea ['ecx,', '[ebp+var_4D0]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
lea ['ecx,', '[ebp+var_4DC]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '19h']
push ['1']
push ['0']
lea ['edx,', '[ebp+var_4D0]']
push ['edx']
lea ['eax,', '[ebp+var_4B9]']
push ['eax']
lea ['ecx,', '[ebp+var_4AD]']
push ['ecx']
lea ['ecx,', '[ebp+var_248]']
call ['??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_4DC]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
push ['eax']
push ['0']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_3FC]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0FCh]']
push ['edx']
mov ['eax,', '[ecx+0F8h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_1DC]']
call ['?Decode@CDecoder@N7z@NArchive@@QAEJPAUIInStream@@_KABUCFolders@23@IPB_KPAUISequentialOutStream@@PAUICompressProgressInfo@@PAPAUISequentialInStream@@PAUICryptoGetTextPassword@@AA_N8AAVUString@@_NI@Z']
mov ['[ebp+var_4E4],', 'eax']
mov ['edx,', '[ebp+var_4E4]']
mov ['[ebp+var_4E8],', 'edx']
cmp ['[ebp+var_4E8],', '0']
jz ['loc_3844']
mov ['eax,', '[ebp+var_4E8]']
mov ['[ebp+var_708],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
lea ['ecx,', '[ebp+var_4DC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_4D0]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_708]']
jmp ['loc_57C7']
lea ['ecx,', '[ebp+var_4DC]']
call ['??7?$CMyComPtr@UISequentialInStream@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_3953']
mov ['[ebp+var_70C],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
lea ['ecx,', '[ebp+var_4DC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_4D0]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_70C]']
jmp ['loc_57C7']
lea ['edx,', '[ebp+var_4DC]']
push ['edx']
mov ['ecx,', '[ebp+var_48C]']
add ['ecx,', '38h']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
lea ['ecx,', '[ebp+var_4DC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_4D0]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_488]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+1Ch],', 'ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+var_488]']
add ['ecx,', '20h']
call ['??4?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAUIArchiveUpdateCallbackFile@@ABV0@@Z']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_488]']
add ['ecx,', '24h']
call ['??4?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAEPAUIArchiveExtractCallbackMessage@@ABV0@@Z']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '118h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+var_3FC]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_4EC],', 'edx']
lea ['eax,', '[ebp+var_440]']
push ['eax']
mov ['ecx,', '[ebp+var_4EC]']
push ['ecx']
mov ['ecx,', '[ebp+var_488]']
call ['?Init@CRepackStreamBase@N7z@NArchive@@QAEJIPBV?$CRecordVector@_N@@@Z']
mov ['[ebp+var_4F0],', 'eax']
cmp ['[ebp+var_4F0],', '0']
jz ['loc_3ADC']
mov ['edx,', '[ebp+var_4F0]']
mov ['[ebp+var_710],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_710]']
jmp ['loc_57C7']
mov ['eax,', '[ebp+var_490]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+18h],', 'ecx']
lea ['edx,', '[ebp+var_440]']
push ['edx']
mov ['eax,', '[ebp+var_4EC]']
push ['eax']
lea ['ecx,', '[ebp+var_480]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_490]']
call ['?Init@CRepackInStreamWithSizes@N7z@NArchive@@QAEXPAUISequentialInStream@@IPBV?$CRecordVector@_N@@@Z']
mov ['ecx,', '[ebp+arg_1C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2Ah]']
test ['edx,', 'edx']
jz ['short', 'loc_3B23']
lea ['ecx,', '[ebp+var_1F0]']
call ['?Start@CVirtThread@@QAEXXZ']
lea ['ecx,', '[ebp+var_114]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
push ['eax']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '30h']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '54h']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_474]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
add ['edx,', '24h']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '54h']
call ['?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ']
push ['eax']
lea ['eax,', '[ebp+var_F8]']
push ['eax']
lea ['ecx,', '[ebp+var_498]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_3E8]']
call ['?Encode@CEncoder@N7z@NArchive@@QAEJPAUISequentialInStream@@PB_KAAUCFolder@23@AAV?$CRecordVector@_K@@AA_KPAUISequentialOutStream@@3PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_4F4],', 'eax']
cmp ['[ebp+var_4F4],', '20000002h']
jnz ['loc_3C6B']
mov ['[ebp+var_714],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_714]']
jmp ['loc_57C7']
mov ['ecx,', '[ebp+arg_1C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2Ah]']
test ['edx,', 'edx']
jz ['loc_3FEA']
lea ['ecx,', '[ebp+var_1F0]']
call ['?WaitExecuteFinish@CVirtThread@@QAEXXZ']
mov ['eax,', '[ebp+var_178]']
mov ['[ebp+var_4F8],', 'eax']
cmp ['[ebp+var_4F8],', '1']
jnz ['loc_3EC0']
lea ['ecx,', '[ebp+var_2C]']
call ['??B?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ']
test ['eax,', 'eax']
jz ['loc_3DE5']
lea ['ecx,', '[ebp+var_2C]']
call ['??C?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ']
mov ['[ebp+var_7AC],', 'eax']
mov ['esi,', 'esp']
push ['2']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '118h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+var_3FC]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_7AC]']
push ['eax']
mov ['ecx,', '[ebp+var_7AC]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4FC],', 'eax']
cmp ['[ebp+var_4FC],', '0']
jz ['loc_3DE5']
mov ['ecx,', '[ebp+var_4FC]']
mov ['[ebp+var_718],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_718]']
jmp ['loc_57C7']
mov ['[ebp+var_71C],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_71C]']
jmp ['loc_57C7']
mov ['edx,', '[ebp+var_4F8]']
mov ['[ebp+var_500],', 'edx']
cmp ['[ebp+var_500],', '0']
jz ['loc_3FB6']
mov ['eax,', '[ebp+var_500]']
mov ['[ebp+var_720],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_720]']
jmp ['loc_57C7']
cmp ['[ebp+var_4F4],', '0']
jnz ['short', 'loc_3FE5']
mov ['ecx,', '[ebp+var_124]']
cmp ['ecx,', '[ebp+var_454]']
jnz ['short', 'loc_3FDB']
mov ['edx,', '[ebp+var_120]']
cmp ['edx,', '[ebp+var_450]']
jz ['short', 'loc_3FE5']
mov ['[ebp+var_4F4],', '80004005h']
jmp ['loc_4304']
mov ['eax,', '[ebp+var_48C]']
cmp ['dword', 'ptr', '[eax+3Ch],', '1']
jnz ['loc_420B']
lea ['ecx,', '[ebp+var_2C]']
call ['??B?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ']
test ['eax,', 'eax']
jz ['loc_4130']
lea ['ecx,', '[ebp+var_2C]']
call ['??C?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ']
mov ['[ebp+var_7B0],', 'eax']
mov ['esi,', 'esp']
push ['2']
mov ['ecx,', '[ebp+var_3FC]']
push ['ecx']
push ['2']
mov ['edx,', '[ebp+var_7B0]']
push ['edx']
mov ['eax,', '[ebp+var_7B0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+14h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_504],', 'eax']
cmp ['[ebp+var_504],', '0']
jz ['loc_4130']
mov ['eax,', '[ebp+var_504]']
mov ['[ebp+var_724],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_724]']
jmp ['loc_57C7']
mov ['[ebp+var_728],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_728]']
jmp ['loc_57C7']
mov ['ecx,', '[ebp+var_48C]']
mov ['edx,', '[ecx+3Ch]']
mov ['[ebp+var_508],', 'edx']
cmp ['[ebp+var_508],', '0']
jz ['loc_4304']
mov ['eax,', '[ebp+var_508]']
mov ['[ebp+var_72C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_72C]']
jmp ['loc_57C7']
mov ['ecx,', '[ebp+var_4F4]']
mov ['[ebp+var_50C],', 'ecx']
cmp ['[ebp+var_50C],', '0']
jz ['loc_43FA']
mov ['edx,', '[ebp+var_50C]']
mov ['[ebp+var_730],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_730]']
jmp ['loc_57C7']
mov ['ecx,', '[ebp+var_488]']
call ['?CheckFinishedState@CRepackStreamBase@N7z@NArchive@@QBEJXZ']
mov ['[ebp+var_510],', 'eax']
cmp ['[ebp+var_510],', '0']
jz ['loc_44F5']
mov ['eax,', '[ebp+var_510]']
mov ['[ebp+var_734],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_734]']
jmp ['loc_57C7']
mov ['ecx,', '[ebp+var_474]']
cmp ['ecx,', '[ebp+var_454]']
jnz ['short', 'loc_4515']
mov ['edx,', '[ebp+var_470]']
cmp ['edx,', '[ebp+var_450]']
jz ['loc_45F0']
mov ['[ebp+var_738],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_738]']
jmp ['loc_57C7']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_498]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_480]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
jmp ['short', 'loc_461F']
mov ['eax,', '[ebp+var_468]']
add ['eax,', '1']
mov ['[ebp+var_468],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '30h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+var_468],', 'eax']
jnb ['short', 'loc_4663']
mov ['ecx,', '[ebp+var_468]']
push ['ecx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '30h']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['edx,', '[ebp+var_10C]']
mov ['ecx,', '[edx+28h]']
add ['ecx,', '[eax]']
mov ['edx,', '[edx+2Ch]']
adc ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_10C]']
mov ['[eax+28h],', 'ecx']
mov ['[eax+2Ch],', 'edx']
jmp ['short', 'loc_4610']
mov ['ecx,', '[ebp+var_10C]']
mov ['edx,', '[ecx+20h]']
add ['edx,', '[ebp+var_474]']
mov ['eax,', '[ecx+24h]']
adc ['eax,', '[ebp+var_470]']
mov ['ecx,', '[ebp+var_10C]']
mov ['[ecx+20h],', 'edx']
mov ['[ecx+24h],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_440]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['edx,', '[ebp+var_3F8]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '18h']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
mov ['[ebp+var_514],', '0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '118h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+var_3FC]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_518],', 'edx']
jmp ['short', 'loc_46E3']
mov ['eax,', '[ebp+var_518]']
add ['eax,', '1']
mov ['[ebp+var_518],', 'eax']
mov ['ecx,', '[ebp+var_514]']
cmp ['ecx,', '[ebp+var_400]']
jnb ['loc_48BD']
lea ['ecx,', '[ebp+var_534]']
call ['??0CFileItem@N7z@NArchive@@QAE@XZ']
lea ['edx,', '[ebp+var_564]']
push ['edx']
lea ['eax,', '[ebp+var_534]']
push ['eax']
mov ['ecx,', '[ebp+var_518]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?GetFile@N7z@NArchive@@YGXABUCDatabase@12@IAAUCFileItem@12@AAUCFileItem2@12@@Z']
lea ['ecx,', '[ebp+var_578]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1Ah']
lea ['eax,', '[ebp+var_578]']
push ['eax']
mov ['ecx,', '[ebp+var_518]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetPath@CDatabase@N7z@NArchive@@QBEXIAAVUString@@@Z']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_524]']
test ['edx,', 'edx']
jz ['loc_48A9']
mov ['eax,', '[ebp+var_514]']
add ['eax,', '1']
mov ['[ebp+var_514],', 'eax']
lea ['ecx,', '[ebp+var_44]']
call ['??B?$CObjArray@H@@QAEPAHXZ']
mov ['ecx,', '[ebp+var_518]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_580],', 'edx']
cmp ['[ebp+var_580],', '0']
jl ['loc_48A9']
mov ['eax,', '[ebp+var_580]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_584],', 'eax']
mov ['ecx,', '[ebp+var_584]']
movzx ['edx,', 'byte', 'ptr', '[ecx+38h]']
test ['edx,', 'edx']
jz ['short', 'loc_47BC']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_578]']
call ['??1UString@@QAE@XZ']
jmp ['loc_46D4']
mov ['eax,', '[ebp+var_584]']
movzx ['ecx,', 'byte', 'ptr', '[eax+39h]']
test ['ecx,', 'ecx']
jz ['loc_488C']
lea ['ecx,', '[ebp+var_5A0]']
call ['??0CFileItem@N7z@NArchive@@QAE@XZ']
lea ['edx,', '[ebp+var_564]']
push ['edx']
lea ['eax,', '[ebp+var_5A0]']
push ['eax']
mov ['ecx,', '[ebp+var_584]']
push ['ecx']
call ['?FromUpdateItemToFileItem@N7z@NArchive@@YGXABUCUpdateItem@12@AAUCFileItem@12@AAUCFileItem2@12@@Z']
mov ['edx,', '[ebp+var_534]']
mov ['[ebp+var_5A0],', 'edx']
mov ['eax,', '[ebp+var_530]']
mov ['[ebp+var_59C],', 'eax']
mov ['ecx,', '[ebp+var_528]']
mov ['[ebp+var_594],', 'ecx']
mov ['dl,', 'byte', 'ptr', '[ebp+var_524+2]']
mov ['byte', 'ptr', '[ebp+var_590+2],', 'dl']
mov ['al,', 'byte', 'ptr', '[ebp+var_524]']
mov ['byte', 'ptr', '[ebp+var_590],', 'al']
mov ['ecx,', '[ebp+var_5A0]']
mov ['[ebp+var_534],', 'ecx']
mov ['edx,', '[ebp+var_59C]']
mov ['[ebp+var_530],', 'edx']
mov ['eax,', '[ebp+var_598]']
mov ['[ebp+var_52C],', 'eax']
mov ['ecx,', '[ebp+var_594]']
mov ['[ebp+var_528],', 'ecx']
mov ['edx,', '[ebp+var_590]']
mov ['[ebp+var_524],', 'edx']
mov ['eax,', '[ebp+var_58C]']
mov ['[ebp+var_520],', 'eax']
mov ['ecx,', '[ebp+var_584]']
add ['ecx,', '28h']
push ['ecx']
lea ['ecx,', '[ebp+var_578]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
lea ['edx,', '[ebp+var_578]']
push ['edx']
lea ['eax,', '[ebp+var_564]']
push ['eax']
lea ['ecx,', '[ebp+var_534]']
push ['ecx']
mov ['ecx,', '[ebp+arg_10]']
call ['?AddFile@CArchiveDatabaseOut@N7z@NArchive@@QAEXABUCFileItem@23@ABUCFileItem2@23@ABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_578]']
call ['??1UString@@QAE@XZ']
jmp ['loc_46D4']
jmp ['loc_2CE1']
mov ['ecx,', '[ebp+var_3F0]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
mov ['[ebp+var_5A8],', 'eax']
cmp ['[ebp+var_5A8],', '0']
jnz ['short', 'loc_48FF']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
jmp ['loc_2B07']
lea ['ecx,', '[ebp+var_5B8]']
call ['??0?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1Bh']
mov ['edx,', '[ebp+var_5A8]']
push ['edx']
lea ['ecx,', '[ebp+var_5B8]']
call ['?ClearAndSetSize@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXI@Z']
cmp ['[ebp+var_14],', '0']
ja ['short', 'loc_492C']
cmp ['[ebp+var_18],', '1']
jbe ['short', 'loc_4938']
mov ['[ebp+var_7B4],', '1']
jmp ['short', 'loc_4942']
mov ['[ebp+var_7B4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_7B4]']
mov ['[ebp+var_5BD],', 'al']
mov ['[ebp+var_100],', '0']
jmp ['short', 'loc_4969']
mov ['ecx,', '[ebp+var_100]']
add ['ecx,', '1']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_100]']
cmp ['edx,', '[ebp+var_5A8]']
jnb ['short', 'loc_49F2']
movzx ['eax,', '[ebp+var_5BD]']
push ['eax']
mov ['ecx,', '[ebp+var_100]']
push ['ecx']
mov ['ecx,', '[ebp+var_3F0]']
call ['??A?$CRecordVector@I@@QBEABII@Z']
mov ['edx,', '[eax]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
push ['eax']
mov ['eax,', '[ebp+var_100]']
push ['eax']
mov ['ecx,', '[ebp+var_3F0]']
call ['??A?$CRecordVector@I@@QBEABII@Z']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_74C]']
call ['??0CRefItem@N7z@NArchive@@QAE@IABUCUpdateItem@12@_N@Z']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
lea ['ecx,', '[ebp+var_5B8]']
call ['??A?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEAAUCRefItem@N7z@NArchive@@I@Z']
mov ['ecx,', '[esi]']
mov ['[eax],', 'ecx']
mov ['edx,', '[esi+4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[esi+8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[esi+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[esi+10h]']
mov ['[eax+10h],', 'ecx']
jmp ['loc_495A']
mov ['dl,', '[ebp+var_5BD]']
mov ['[ebp+var_5C5],', 'dl']
lea ['eax,', '[ebp+var_5C5]']
push ['eax']
push ['offset', '?CompareUpdateItems@N7z@NArchive@@YGHPBUCRefItem@12@0PAX@Z']
lea ['ecx,', '[ebp+var_5B8]']
call ['?Sort@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXP6GHPBUCRefItem@N7z@NArchive@@0PAX@Z1@Z']
mov ['ecx,', '[ebp+var_5A8]']
push ['ecx']
lea ['ecx,', '[ebp+var_5D4]']
call ['??0?$CObjArray@I@@QAE@I@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1Ch']
mov ['[ebp+var_100],', '0']
jmp ['short', 'loc_4A46']
mov ['edx,', '[ebp+var_100]']
add ['edx,', '1']
mov ['[ebp+var_100],', 'edx']
mov ['eax,', '[ebp+var_100]']
cmp ['eax,', '[ebp+var_5A8]']
jnb ['short', 'loc_4A8B']
mov ['ecx,', '[ebp+var_100]']
push ['ecx']
lea ['ecx,', '[ebp+var_5B8]']
call ['??A?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEAAUCRefItem@N7z@NArchive@@I@Z']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_5DC],', 'edx']
lea ['ecx,', '[ebp+var_5D4]']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_100]']
mov ['edx,', '[ebp+var_5DC]']
mov ['[eax+ecx*4],', 'edx']
jmp ['short', 'loc_4A37']
mov ['[ebp+var_100],', '0']
mov ['eax,', '[ebp+var_100]']
cmp ['eax,', '[ebp+var_5A8]']
jnb ['loc_555D']
mov ['[ebp+var_5E4],', '0']
mov ['[ebp+var_5E0],', '0']
mov ['[ebp+var_5EC],', '0']
mov ['[ebp+var_5E8],', '0']
jmp ['short', 'loc_4AE0']
mov ['ecx,', '[ebp+var_5E8]']
add ['ecx,', '1']
mov ['[ebp+var_5E8],', 'ecx']
mov ['edx,', '[ebp+var_100]']
add ['edx,', '[ebp+var_5E8]']
cmp ['edx,', '[ebp+var_5A8]']
jnb ['loc_4C68']
mov ['eax,', '[ebp+var_5E8]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_7BC],', 'eax']
mov ['[ebp+var_7B8],', 'ecx']
mov ['edx,', '[ebp+var_7B8]']
cmp ['edx,', '[ebp+var_14]']
ja ['loc_4C68']
jb ['short', 'loc_4B2C']
mov ['eax,', '[ebp+var_7BC]']
cmp ['eax,', '[ebp+var_18]']
jnb ['loc_4C68']
lea ['ecx,', '[ebp+var_5D4]']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_100]']
add ['ecx,', '[ebp+var_5E8]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_5F0],', 'eax']
mov ['eax,', '[ebp+var_5F0]']
mov ['ecx,', '[ebp+var_5E4]']
add ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_5E0]']
adc ['edx,', '[eax+24h]']
mov ['[ebp+var_5E4],', 'ecx']
mov ['[ebp+var_5E0],', 'edx']
mov ['eax,', '[ebp+arg_1C]']
mov ['[ebp+var_7C0],', 'eax']
mov ['ecx,', '[ebp+var_7C0]']
mov ['edx,', '[ebp+var_5E0]']
cmp ['edx,', '[ecx+24h]']
jb ['short', 'loc_4BAB']
ja ['short', 'loc_4BA6']
mov ['eax,', '[ebp+var_7C0]']
mov ['ecx,', '[ebp+var_5E4]']
cmp ['ecx,', '[eax+20h]']
jbe ['short', 'loc_4BAB']
jmp ['loc_4C68']
mov ['edx,', '[ebp+arg_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+28h]']
test ['eax,', 'eax']
jz ['loc_4C63']
mov ['ecx,', '[ebp+var_5F0]']
add ['ecx,', '28h']
call ['?ReverseFind_PathSepar@UString@@QBEHXZ']
mov ['[ebp+var_5F4],', 'eax']
mov ['ecx,', '[ebp+var_5F0]']
add ['ecx,', '28h']
call ['?ReverseFind_Dot@UString@@QBEHXZ']
mov ['[ebp+var_5F8],', 'eax']
mov ['ecx,', '[ebp+var_5F8]']
cmp ['ecx,', '[ebp+var_5F4]']
jg ['short', 'loc_4C06']
mov ['ecx,', '[ebp+var_5F0]']
add ['ecx,', '28h']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_7C4],', 'eax']
jmp ['short', 'loc_4C15']
mov ['edx,', '[ebp+var_5F8]']
add ['edx,', '1']
mov ['[ebp+var_7C4],', 'edx']
mov ['eax,', '[ebp+var_7C4]']
push ['eax']
mov ['ecx,', '[ebp+var_5F0]']
add ['ecx,', '28h']
call ['?Ptr@UString@@QBEPB_WI@Z']
mov ['[ebp+var_5FC],', 'eax']
cmp ['[ebp+var_5E8],', '0']
jnz ['short', 'loc_4C47']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_5EC],', 'ecx']
jmp ['short', 'loc_4C63']
mov ['edx,', '[ebp+var_5EC]']
push ['edx']
mov ['eax,', '[ebp+var_5FC]']
push ['eax']
call ['?StringsAreEqualNoCase@@YG_NPB_W0@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4C63']
jmp ['short', 'loc_4C68']
jmp ['loc_4AD1']
cmp ['[ebp+var_5E8],', '1']
jnb ['short', 'loc_4C7B']
mov ['[ebp+var_5E8],', '1']
mov ['ecx,', '[ebp+var_10C]']
call ['?SetCur@CLocalProgress@@QAEJXZ']
mov ['[ebp+var_600],', 'eax']
cmp ['[ebp+var_600],', '0']
jz ['loc_4D67']
mov ['edx,', '[ebp+var_600]']
mov ['[ebp+var_750],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1Bh']
lea ['ecx,', '[ebp+var_5D4]']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_5B8]']
call ['??1?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_750]']
jmp ['loc_57C7']
push ['60h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_758],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1Dh']
cmp ['[ebp+var_758],', '0']
jz ['short', 'loc_4D97']
mov ['ecx,', '[ebp+var_758]']
call ['??0CFolderInStream@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_7C8],', 'eax']
jmp ['short', 'loc_4DA1']
mov ['[ebp+var_7C8],', '0']
mov ['eax,', '[ebp+var_7C8]']
mov ['[ebp+var_754],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1Ch']
mov ['ecx,', '[ebp+var_754]']
mov ['[ebp+var_604],', 'ecx']
mov ['edx,', '[ebp+var_604]']
push ['edx']
lea ['ecx,', '[ebp+var_60C]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1Eh']
mov ['eax,', '[ebp+var_5E8]']
push ['eax']
lea ['ecx,', '[ebp+var_5D4]']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_100]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_604]']
call ['?Init@CFolderInStream@N7z@NArchive@@QAEXPAUIArchiveUpdateCallback@@PBII@Z']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '30h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
mov ['[ebp+var_614],', 'eax']
lea ['ecx,', '[ebp+var_114]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '30h']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '54h']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
lea ['edx,', '[ebp+var_620]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '24h']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '54h']
call ['?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_F8]']
push ['ecx']
lea ['ecx,', '[ebp+var_60C]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_3E8]']
call ['?Encode@CEncoder@N7z@NArchive@@QAEJPAUISequentialInStream@@PB_KAAUCFolder@23@AAV?$CRecordVector@_K@@AA_KPAUISequentialOutStream@@3PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_628],', 'eax']
cmp ['[ebp+var_628],', '0']
jz ['loc_4F56']
mov ['edx,', '[ebp+var_628]']
mov ['[ebp+var_75C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1Ch']
lea ['ecx,', '[ebp+var_60C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1Bh']
lea ['ecx,', '[ebp+var_5D4]']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_5B8]']
call ['??1?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_75C]']
jmp ['loc_57C7']
mov ['ecx,', '[ebp+var_604]']
call ['?WasFinished@CFolderInStream@N7z@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['loc_5047']
mov ['[ebp+var_760],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '1Ch']
lea ['ecx,', '[ebp+var_60C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1Bh']
lea ['ecx,', '[ebp+var_5D4]']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_5B8]']
call ['??1?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_760]']
jmp ['loc_57C7']
jmp ['short', 'loc_5058']
mov ['ecx,', '[ebp+var_614]']
add ['ecx,', '1']
mov ['[ebp+var_614],', 'ecx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '30h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+var_614],', 'eax']
jnb ['short', 'loc_509C']
mov ['edx,', '[ebp+var_614]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '30h']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['ecx,', '[ebp+var_10C]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '[eax]']
mov ['ecx,', '[ecx+2Ch]']
adc ['ecx,', '[eax+4]']
mov ['eax,', '[ebp+var_10C]']
mov ['[eax+28h],', 'edx']
mov ['[eax+2Ch],', 'ecx']
jmp ['short', 'loc_5049']
mov ['ecx,', '[ebp+var_10C]']
mov ['edx,', '[ecx+20h]']
add ['edx,', '[ebp+var_620]']
mov ['eax,', '[ecx+24h]']
adc ['eax,', '[ebp+var_61C]']
mov ['ecx,', '[ebp+var_10C]']
mov ['[ecx+20h],', 'edx']
mov ['[ecx+24h],', 'eax']
mov ['[ebp+var_62C],', '0']
mov ['[ebp+var_634],', '0']
mov ['[ebp+var_630],', '0']
mov ['[ebp+var_638],', '0']
jmp ['short', 'loc_50F9']
mov ['edx,', '[ebp+var_638]']
add ['edx,', '1']
mov ['[ebp+var_638],', 'edx']
mov ['eax,', '[ebp+var_638]']
cmp ['eax,', '[ebp+var_5E8]']
jnb ['loc_53CC']
lea ['ecx,', '[ebp+var_5D4]']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_100]']
add ['ecx,', '[ebp+var_638]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_63C],', 'eax']
lea ['ecx,', '[ebp+var_658]']
call ['??0CFileItem@N7z@NArchive@@QAE@XZ']
lea ['ecx,', '[ebp+var_69C]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1Fh']
mov ['eax,', '[ebp+var_63C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+39h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_518D']
lea ['edx,', '[ebp+var_688]']
push ['edx']
lea ['eax,', '[ebp+var_658]']
push ['eax']
mov ['ecx,', '[ebp+var_63C]']
push ['ecx']
call ['?FromUpdateItemToFileItem@N7z@NArchive@@YGXABUCUpdateItem@12@AAUCFileItem@12@AAUCFileItem2@12@@Z']
mov ['edx,', '[ebp+var_63C]']
add ['edx,', '28h']
push ['edx']
lea ['ecx,', '[ebp+var_69C]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
jmp ['short', 'loc_51C5']
lea ['eax,', '[ebp+var_688]']
push ['eax']
lea ['ecx,', '[ebp+var_658]']
push ['ecx']
mov ['edx,', '[ebp+var_63C]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?GetFile@N7z@NArchive@@YGXABUCDatabase@12@IAAUCFileItem@12@AAUCFileItem2@12@@Z']
lea ['edx,', '[ebp+var_69C]']
push ['edx']
mov ['eax,', '[ebp+var_63C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetPath@CDatabase@N7z@NArchive@@QBEXIAAVUString@@@Z']
movzx ['edx,', '[ebp+var_664]']
test ['edx,', 'edx']
jnz ['short', 'loc_51DF']
movzx ['eax,', '[ebp+var_647]']
test ['eax,', 'eax']
jz ['loc_52C9']
mov ['[ebp+var_764],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '1Eh']
lea ['ecx,', '[ebp+var_69C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1Ch']
lea ['ecx,', '[ebp+var_60C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1Bh']
lea ['ecx,', '[ebp+var_5D4]']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_5B8]']
call ['??1?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_764]']
jmp ['loc_57C7']
mov ['ecx,', '[ebp+var_638]']
push ['ecx']
mov ['ecx,', '[ebp+var_604]']
add ['ecx,', '38h']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jnz ['short', 'loc_531D']
mov ['eax,', '[ebp+var_63C]']
mov ['ecx,', '[ebp+var_634]']
add ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_630]']
adc ['edx,', '[eax+24h]']
mov ['[ebp+var_634],', 'ecx']
mov ['[ebp+var_630],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1Eh']
lea ['ecx,', '[ebp+var_69C]']
call ['??1UString@@QAE@XZ']
jmp ['loc_50EA']
mov ['eax,', '[ebp+var_638]']
push ['eax']
mov ['ecx,', '[ebp+var_604]']
add ['ecx,', '44h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_64C],', 'ecx']
mov ['edx,', '[ebp+var_638]']
push ['edx']
mov ['ecx,', '[ebp+var_604]']
add ['ecx,', '50h']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_658],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_654],', 'edx']
mov ['eax,', '[ebp+var_658]']
or ['eax,', '[ebp+var_654]']
jz ['short', 'loc_538D']
mov ['[ebp+var_646],', '1']
mov ['[ebp+var_648],', '1']
mov ['ecx,', '[ebp+var_62C]']
add ['ecx,', '1']
mov ['[ebp+var_62C],', 'ecx']
jmp ['short', 'loc_539B']
mov ['[ebp+var_646],', '0']
mov ['[ebp+var_648],', '0']
lea ['edx,', '[ebp+var_69C]']
push ['edx']
lea ['eax,', '[ebp+var_688]']
push ['eax']
lea ['ecx,', '[ebp+var_658]']
push ['ecx']
mov ['ecx,', '[ebp+arg_10]']
call ['?AddFile@CArchiveDatabaseOut@N7z@NArchive@@QAEXABUCFileItem@23@ABUCFileItem2@23@ABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1Eh']
lea ['ecx,', '[ebp+var_69C]']
call ['??1UString@@QAE@XZ']
jmp ['loc_50EA']
mov ['edx,', '[ebp+var_62C]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '18h']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
mov ['eax,', '[ebp+var_100]']
add ['eax,', '[ebp+var_5E8]']
mov ['[ebp+var_100],', 'eax']
mov ['ecx,', '[ebp+var_634]']
or ['ecx,', '[ebp+var_630]']
jz ['loc_5549']
mov ['edx,', '[ebp+var_4C]']
cmp ['edx,', '[ebp+var_630]']
jb ['loc_5549']
ja ['short', 'loc_5422']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_634]']
jb ['loc_5549']
mov ['ecx,', '[ebp+var_50]']
sub ['ecx,', '[ebp+var_634]']
mov ['edx,', '[ebp+var_4C]']
sbb ['edx,', '[ebp+var_630]']
mov ['[ebp+var_50],', 'ecx']
mov ['[ebp+var_4C],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_6A4],', 'eax']
cmp ['[ebp+var_6A4],', '0']
jz ['loc_5549']
mov ['eax,', '[ebp+var_6A4]']
mov ['[ebp+var_768],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1Ch']
lea ['ecx,', '[ebp+var_60C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1Bh']
lea ['ecx,', '[ebp+var_5D4]']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_5B8]']
call ['??1?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_768]']
jmp ['loc_57C7']
mov ['byte', 'ptr', '[ebp+var_4],', '1Ch']
lea ['ecx,', '[ebp+var_60C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
jmp ['loc_4A95']
mov ['byte', 'ptr', '[ebp+var_4],', '1Bh']
lea ['ecx,', '[ebp+var_5D4]']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_5B8]']
call ['??1?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_324]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
jmp ['loc_2B07']
mov ['ecx,', '[ebp+var_10C]']
call ['?SetCur@CLocalProgress@@QAEJXZ']
mov ['[ebp+var_6A8],', 'eax']
cmp ['[ebp+var_6A8],', '0']
jz ['loc_564E']
mov ['ecx,', '[ebp+var_6A8]']
mov ['[ebp+var_76C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_76C]']
jmp ['loc_57C7']
mov ['ecx,', '[ebp+arg_10]']
call ['?ReserveDown@CArchiveDatabaseOut@N7z@NArchive@@QAEXXZ']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
test ['eax,', 'eax']
jz ['loc_573C']
lea ['ecx,', '[ebp+var_20]']
call ['??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_7CC],', 'eax']
mov ['esi,', 'esp']
push ['7']
push ['0FFFFFFFFh']
push ['0']
mov ['edx,', '[ebp+var_7CC]']
push ['edx']
mov ['eax,', '[ebp+var_7CC]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_6AC],', 'eax']
cmp ['[ebp+var_6AC],', '0']
jz ['loc_573C']
mov ['eax,', '[ebp+var_6AC]']
mov ['[ebp+var_770],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_770]']
jmp ['loc_57C7']
mov ['[ebp+var_774],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_248]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_774]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN299']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '7CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['24h']
endp
?IsFilterMethod@N7z@NArchive@@YG_N_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_4],', '0']
ja ['short', 'loc_5BC7']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jbe ['short', 'loc_5BCE']
xor ['al,', 'al']
jmp ['loc_5C54']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '3030205h']
ja ['short', 'loc_5C1D']
cmp ['[ebp+var_4],', '3030205h']
jz ['short', 'loc_5C4E']
cmp ['[ebp+var_4],', '20304h']
ja ['short', 'loc_5C09']
cmp ['[ebp+var_4],', '20304h']
jz ['short', 'loc_5C4E']
cmp ['[ebp+var_4],', '3']
jz ['short', 'loc_5C4E']
cmp ['[ebp+var_4],', '20302h']
jz ['short', 'loc_5C4E']
jmp ['short', 'loc_5C52']
cmp ['[ebp+var_4],', '3030103h']
jz ['short', 'loc_5C4E']
cmp ['[ebp+var_4],', '303011Bh']
jz ['short', 'loc_5C4E']
jmp ['short', 'loc_5C52']
cmp ['[ebp+var_4],', '3030701h']
ja ['short', 'loc_5C43']
cmp ['[ebp+var_4],', '3030701h']
jz ['short', 'loc_5C4E']
cmp ['[ebp+var_4],', '3030401h']
jz ['short', 'loc_5C4E']
cmp ['[ebp+var_4],', '3030501h']
jz ['short', 'loc_5C4E']
jmp ['short', 'loc_5C52']
cmp ['[ebp+var_4],', '3030805h']
jz ['short', 'loc_5C4E']
jmp ['short', 'loc_5C52']
mov ['al,', '1']
jmp ['short', 'loc_5C54']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetGroup@N7z@NArchive@@YGIAAV?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@ABUCFilterMode2@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_5C86']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jnb ['short', 'loc_5CBC']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAEAAUCFilterMode2@N7z@NArchive@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['??8CFilterMode2@N7z@NArchive@@QBE_NABU012@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5CBA']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_5CE2']
jmp ['short', 'loc_5C7D']
mov ['ecx,', '[ebp+arg_4]']
sub ['esp,', '10h']
mov ['edx,', 'esp']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Add@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAEIUCFilterMode2@N7z@NArchive@@@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Get_FilterGroup_for_Folder@N7z@NArchive@@YGIAAV?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@ABUCFolderEx@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['ecx,', '[ebp+var_14]']
call ['??0CFilterMode2@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+arg_4]']
call ['?IsEncrypted@CFolder@N7z@NArchive@@QBE_NXZ']
mov ['byte', 'ptr', '[ebp+var_C],', 'al']
mov ['ecx,', '[ebp+arg_4]']
call ['??B?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QBEPBUCCoderInfo@N7z@NArchive@@XZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+18h]']
imul ['edx,', '18h']
add ['eax,', 'edx']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[ecx],', '3']
jnz ['short', 'loc_5D9E']
mov ['edx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_5D9E']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '8']
call ['?Size@?$CBuffer@E@@QBEIXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_5D9C']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '8']
call ['??B?$CBuffer@E@@QBEPBEXZ']
movzx ['eax,', 'byte', 'ptr', '[eax]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_14],', '3']
jmp ['short', 'loc_5DD4']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ecx]']
push ['eax']
call ['?IsExeFilter@N7z@NArchive@@YG_N_K@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_5DD4']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '303011Bh']
jnz ['short', 'loc_5DCC']
mov ['[ebp+var_14],', '3030103h']
lea ['ecx,', '[ebp+var_14]']
call ['?SetDelta@CFilterMode@N7z@NArchive@@QAEXXZ']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?GetGroup@N7z@NArchive@@YGIAAV?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@ABUCFilterMode2@12@@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsExeFilter@N7z@NArchive@@YG_N_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
ja ['short', 'loc_5EAA']
jb ['short', 'loc_5E54']
cmp ['[ebp+var_8],', '3030805h']
ja ['short', 'loc_5EAA']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '3030401h']
ja ['short', 'loc_5E89']
cmp ['[ebp+var_10],', '3030401h']
jz ['short', 'loc_5EA6']
cmp ['[ebp+var_10],', '3030103h']
jz ['short', 'loc_5EA6']
cmp ['[ebp+var_10],', '303011Bh']
jz ['short', 'loc_5EA6']
cmp ['[ebp+var_10],', '3030205h']
jz ['short', 'loc_5EA6']
jmp ['short', 'loc_5EAA']
cmp ['[ebp+var_10],', '3030501h']
jz ['short', 'loc_5EA6']
cmp ['[ebp+var_10],', '3030701h']
jz ['short', 'loc_5EA6']
cmp ['[ebp+var_10],', '3030805h']
jz ['short', 'loc_5EA6']
jmp ['short', 'loc_5EAA']
mov ['al,', '1']
jmp ['short', 'loc_5EAC']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteRange@N7z@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?WriteRange@N7z@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@_K2PAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '54h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_5F2A']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_609B']
push ['28h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_5F51']
mov ['ecx,', '[ebp+var_3C]']
call ['??0CLimitedSequentialInStream@@QAE@XZ']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_5F58']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['??0?$CMyComPtr@VCLimitedSequentialInStream@@@@QAE@PAVCLimitedSequentialInStream@@@Z']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_10+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_10]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?Init@CLimitedSequentialInStream@@QAEX_K@Z']
push ['28h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_44],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_5FBE']
mov ['ecx,', '[ebp+var_44]']
call ['??0CCopyCoder@NCompress@@QAE@XZ']
mov ['[ebp+var_54],', 'eax']
jmp ['short', 'loc_5FC5']
mov ['[ebp+var_54],', '0']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_40],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_2C]']
call ['??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
mov ['[ebp+var_58],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['??B?$CMyComPtr@VCLimitedSequentialInStream@@@@QBEPAVCLimitedSequentialInStream@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_58]']
push ['edx']
mov ['eax,', '[ebp+var_58]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_604B']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_48],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@VCLimitedSequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_48]']
jmp ['short', 'loc_609B']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_5C],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[edx+20h]']
cmp ['eax,', 'dword', 'ptr', '[ebp+arg_10]']
jnz ['short', 'loc_6070']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+24h]']
cmp ['edx,', 'dword', 'ptr', '[ebp+arg_10+4]']
jnz ['short', 'loc_6070']
mov ['[ebp+var_60],', '0']
jmp ['short', 'loc_6077']
mov ['[ebp+var_60],', '80004005h']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+var_4C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@VCLimitedSequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
?CompareEmptyItems@N7z@NArchive@@YGHPBI0PAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Ah]']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3Ah]']
cmp ['eax,', 'edx']
jz ['short', 'loc_617A']
mov ['eax,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[eax+3Ah]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '2']
add ['eax,', '0FFFFFFFFh']
jmp ['loc_6206']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3Bh]']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Bh]']
cmp ['edx,', 'ecx']
jz ['short', 'loc_61BD']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Bh]']
test ['eax,', 'eax']
jz ['short', 'loc_61AA']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+3Ah]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '2']
add ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_6206']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Ah]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '0FFFFFFFEh']
add ['eax,', '1']
jmp ['short', 'loc_6206']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '28h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '28h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Bh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_61FD']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Ah]']
test ['eax,', 'eax']
jz ['short', 'loc_61FD']
mov ['ecx,', '[ebp+var_10]']
neg ['ecx']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_6203']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetExtIndex@N7z@NArchive@@YGIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '1']
mov ['eax,', 'ds:_g_Exts']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
movsx ['ecx,', 'byte', 'ptr', '[ebp+var_C+3]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_626A']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_6308']
movsx ['edx,', 'byte', 'ptr', '[ebp+var_C+3]']
cmp ['edx,', '20h']
jnz ['short', 'loc_6275']
jmp ['short', 'loc_6249']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_10]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_14+3],', 'cl']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_14+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_62AE']
movsx ['ecx,', 'byte', 'ptr', '[ebp+var_C+3]']
test ['ecx,', 'ecx']
jz ['short', 'loc_62A9']
movsx ['edx,', 'byte', 'ptr', '[ebp+var_C+3]']
cmp ['edx,', '20h']
jnz ['short', 'loc_62AE']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_6308']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_C+3]']
movsx ['ecx,', 'byte', 'ptr', '[ebp+var_14+3]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_62BC']
jmp ['short', 'loc_62CF']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[edx]']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'al']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_627C']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_C+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_62E5']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_6308']
movsx ['ecx,', 'byte', 'ptr', '[ebp+var_C+3]']
cmp ['ecx,', '20h']
jnz ['short', 'loc_62F0']
jmp ['short', 'loc_6303']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[edx]']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'al']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_62D8']
jmp ['loc_6249']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CompareUpdateItems@N7z@NArchive@@YGHPBUCRefItem@12@0PAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Bh]']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Bh]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_636A']
mov ['ecx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[ecx+3Bh]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '2']
add ['eax,', '0FFFFFFFFh']
jmp ['loc_659B']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Bh]']
test ['eax,', 'eax']
jz ['short', 'loc_63C7']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3Ah]']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Ah]']
cmp ['edx,', 'ecx']
jz ['short', 'loc_639D']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Ah]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '2']
add ['eax,', '0FFFFFFFFh']
jmp ['loc_659B']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '28h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
neg ['eax']
jmp ['loc_659B']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_19],', 'dl']
movzx ['eax,', '[ebp+var_19]']
test ['eax,', 'eax']
jz ['loc_6526']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['??$MyCompare@I@@YGHII@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6405']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_659B']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '28h']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_6441']
mov ['eax,', '[ebp+var_24]']
jmp ['loc_659B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '28h']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_647D']
mov ['eax,', '[ebp+var_28]']
jmp ['loc_659B']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3Fh]']
test ['edx,', 'edx']
jnz ['short', 'loc_649D']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Fh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_649D']
mov ['eax,', '1']
jmp ['loc_659B']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Fh]']
test ['eax,', 'eax']
jz ['short', 'loc_64BB']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3Fh]']
test ['edx,', 'edx']
jnz ['short', 'loc_64BB']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_659B']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Fh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_64FD']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Fh]']
test ['eax,', 'eax']
jz ['short', 'loc_64FD']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ecx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ecx+18h]']
push ['eax']
call ['??$MyCompare@_K@@YGH_K0@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_64FD']
mov ['eax,', '[ebp+var_2C]']
jmp ['loc_659B']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+24h]']
push ['edx']
mov ['eax,', '[ecx+20h]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+24h]']
push ['edx']
mov ['eax,', '[ecx+20h]']
push ['eax']
call ['??$MyCompare@_K@@YGH_K0@Z']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_6526']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_659B']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '28h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_6551']
mov ['eax,', '[ebp+var_34]']
jmp ['short', 'loc_659B']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['??$MyCompare@H@@YGHHH@Z']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_6576']
mov ['eax,', '[ebp+var_38]']
jmp ['short', 'loc_659B']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
call ['??$MyCompare@H@@YGHHH@Z']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_6599']
mov ['eax,', '[ebp+var_3C]']
jmp ['short', 'loc_659B']
xor ['eax,', 'eax']
pop ['edi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?MakeExeMethod@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@ABUCFilterMode@12@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+19h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6631']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@I@Z']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[edx+14h]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_C],', '303011Bh']
jnz ['short', 'loc_660A']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_660A']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?AddBcj2Methods@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z']
jmp ['loc_6881']
mov ['ecx,', '[ebp+var_4]']
call ['?IsSimpleCoder@CMethodFull@N7z@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_6623']
mov ['eax,', '80004001h']
jmp ['loc_6881']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?AddFilterBond@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z']
jmp ['loc_6881']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_6640']
xor ['eax,', 'eax']
jmp ['loc_6881']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?InsertNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@I@Z']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_665F']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_669F']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEAAUCBond2@N7z@NArchive@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_6656']
movzx ['edx,', '[ebp+arg_8]']
test ['edx,', 'edx']
jz ['short', 'loc_66DF']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
xor ['edx,', 'edx']
push ['edx']
push ['ecx']
call ['?Is86Filter@N7z@NArchive@@YG_N_K@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_66DF']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['4']
push ['0']
push ['303011Bh']
call ['?GetMethodFull@N7z@NArchive@@YGX_KIAAUCMethodFull@12@@Z']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?AddBcj2Methods@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['loc_687E']
mov ['eax,', '[ebp+var_10]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
push ['eax']
push ['edx']
call ['?GetMethodFull@N7z@NArchive@@YGX_KIAAUCMethodFull@12@@Z']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx],', '3']
jnz ['short', 'loc_670C']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['?AddProp32@CProps@@QAEXKI@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?AddFilterBond@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_20],', '0FFFFFFFFh']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx],', '3']
jz ['short', 'loc_6730']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_6788']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+4],', '1']
jnz ['short', 'loc_6742']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_6788']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+4],', '2']
jnz ['short', 'loc_6754']
mov ['[ebp+var_20],', '1']
jmp ['short', 'loc_6788']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '4']
jnz ['short', 'loc_6766']
mov ['[ebp+var_20],', '2']
jmp ['short', 'loc_6788']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+4],', '8']
jnz ['short', 'loc_6778']
mov ['[ebp+var_20],', '3']
jmp ['short', 'loc_6788']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+4],', '10h']
jnz ['short', 'loc_6788']
mov ['[ebp+var_20],', '4']
cmp ['[ebp+var_1C],', '0']
jnz ['loc_687E']
cmp ['[ebp+var_20],', '0']
jl ['loc_687E']
mov ['[ebp+var_24],', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?IsEmpty@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_67C6']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?Back@?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEAAUCBond2@N7z@NArchive@@XZ']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_24],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_24],', 'eax']
jnb ['loc_687E']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@I@Z']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[ecx+10h],', '30101h']
jnz ['short', 'loc_6801']
mov ['edx,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[edx+14h],', '0']
jz ['short', 'loc_6819']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[ecx+10h],', '21h']
jnz ['short', 'loc_687E']
mov ['edx,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[edx+14h],', '0']
jnz ['short', 'loc_687E']
mov ['ecx,', '[ebp+var_28]']
call ['?Are_Lzma_Model_Props_Defined@CMethodProps@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_687E']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_687E']
cmp ['[ebp+var_20],', '2']
jg ['short', 'loc_683C']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx],', '3']
jnz ['short', 'loc_684A']
mov ['edx,', '[ebp+var_20]']
push ['edx']
push ['5']
mov ['ecx,', '[ebp+var_28]']
call ['?AddProp32@CProps@@QAEXKI@Z']
mov ['[ebp+var_2C],', '0']
cmp ['[ebp+var_20],', '3']
jge ['short', 'loc_6862']
mov ['eax,', '3']
sub ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
push ['6']
mov ['ecx,', '[ebp+var_28]']
call ['?AddProp32@CProps@@QAEXKI@Z']
mov ['edx,', '[ebp+var_20]']
push ['edx']
push ['7']
mov ['ecx,', '[ebp+var_28]']
call ['?AddProp32@CProps@@QAEXKI@Z']
mov ['eax,', '[ebp+var_1C]']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Is86Filter@N7z@NArchive@@YG_N_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '3030103h']
jnz ['short', 'loc_68BA']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_68D2']
cmp ['[ebp+arg_0],', '303011Bh']
jnz ['short', 'loc_68C9']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_68D2']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_68D9']
mov ['[ebp+var_4],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetMethodFull@N7z@NArchive@@YGX_KIAAUCMethodFull@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+18h],', 'ecx']
pop ['ebp']
retn ['10h']
endp
?AddFilterBond@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?IsEmpty@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_6930']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?AddBondForFilter@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z']
jmp ['short', 'loc_6932']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?AddBondForFilter@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_697C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_69D7']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsThereBond_to_Coder@CCompressionMethodMode@N7z@NArchive@@QBE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_69D5']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'eax']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?Add@?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEIUCBond2@N7z@NArchive@@@Z']
xor ['eax,', 'eax']
jmp ['short', 'loc_69DC']
jmp ['short', 'loc_6973']
mov ['eax,', '80070057h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddBcj2Methods@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddBcj2Methods@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '68h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_74]']
mov ['ecx,', '1Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_34]']
call ['??0CMethodFull@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_34]']
push ['eax']
push ['1']
push ['0']
push ['30101h']
call ['?GetMethodFull@N7z@NArchive@@YGX_KIAAUCMethodFull@12@@Z']
push ['100000h']
push ['1']
lea ['ecx,', '[ebp+var_34]']
call ['?AddProp32@CProps@@QAEXKI@Z']
push ['80h']
push ['8']
lea ['ecx,', '[ebp+var_34]']
call ['?AddProp32@CProps@@QAEXKI@Z']
push ['1']
push ['0Dh']
lea ['ecx,', '[ebp+var_34]']
call ['?AddProp32@CProps@@QAEXKI@Z']
push ['2']
push ['7']
lea ['ecx,', '[ebp+var_34]']
call ['?AddProp32@CProps@@QAEXKI@Z']
push ['0']
push ['6']
lea ['ecx,', '[ebp+var_34]']
call ['?AddProp32@CProps@@QAEXKI@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBEIXZ']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?IsEmpty@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6B46']
mov ['[ebp+var_40],', '1']
jmp ['short', 'loc_6AFB']
mov ['edx,', '[ebp+var_40]']
add ['edx,', '1']
mov ['[ebp+var_40],', 'edx']
mov ['esi,', '[ebp+var_40]']
add ['esi,', '1']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBEIXZ']
cmp ['esi,', 'eax']
jnb ['short', 'loc_6B46']
mov ['eax,', '[ebp+var_40]']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_4C],', '0']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '1']
mov ['[ebp+var_48],', 'ecx']
sub ['esp,', '0Ch']
mov ['edx,', 'esp']
mov ['eax,', '[ebp+var_50]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_48]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?Add@?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEIUCBond2@N7z@NArchive@@@Z']
jmp ['short', 'loc_6AF2']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Add@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEIABUCMethodFull@N7z@NArchive@@@Z']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Add@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEIABUCMethodFull@N7z@NArchive@@@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?AddBondForFilter@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0']
jz ['short', 'loc_6B8A']
mov ['ecx,', '[ebp+var_58]']
mov ['[ebp+var_70],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CMethodFull@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_70]']
jmp ['short', 'loc_6C09']
mov ['[ebp+var_68],', '0']
mov ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_60],', 'edx']
mov ['[ebp+var_64],', '1']
sub ['esp,', '0Ch']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+var_68]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_64]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_60]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?Add@?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEIUCBond2@N7z@NArchive@@@Z']
mov ['edx,', '[ebp+var_3C]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
mov ['[ebp+var_64],', '2']
sub ['esp,', '0Ch']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+var_68]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_64]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_60]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?Add@?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEIUCBond2@N7z@NArchive@@@Z']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CMethodFull@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_74]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '74h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?FromUpdateItemToFileItem@N7z@NArchive@@YGXABUCUpdateItem@12@AAUCFileItem@12@AAUCFileItem2@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6C9D']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?SetAttrib@CFileItem@N7z@NArchive@@QAEXI@Z']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[edx+0Ch]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+3Dh]']
mov ['[eax+20h],', 'dl']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ecx+14h]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+3Eh]']
mov ['[edx+21h],', 'cl']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[eax+1Ch]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+3Fh]']
mov ['[ecx+22h],', 'al']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+3Ah]']
mov ['[ecx+24h],', 'al']
mov ['ecx,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[ecx+23h],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['[edx],', 'ecx']
mov ['eax,', '[eax+24h]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+3Bh]']
mov ['[ecx+11h],', 'al']
mov ['ecx,', '[ebp+arg_0]']
call ['?HasStream@CUpdateItem@N7z@NArchive@@QBE_NXZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+10h],', 'al']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?GetFile@N7z@NArchive@@YGXABUCDatabase@12@IAAUCFileItem@12@AAUCFileItem2@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['edx,', '[eax+10h]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[eax+14h]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '64h']
call ['?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx+20h],', 'al']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '7Ch']
call ['?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx+21h],', 'al']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '10h']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '94h']
call ['?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx+22h],', 'al']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '18h']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0ACh']
call ['?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx+23h],', 'al']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx+24h],', 'al']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
__unwindfunclet$?GetFilterGroup@CAnalysis@N7z@NArchive@@QAEJIABUCUpdateItem@23@AAUCFilterMode@23@@Z$0 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$?GetFilterGroup@CAnalysis@N7z@NArchive@@QAEJIABUCUpdateItem@23@AAUCFilterMode@23@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-64h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetFilterGroup@CAnalysis@N7z@NArchive@@QAEJIABUCUpdateItem@23@AAUCFilterMode@23@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Execute@CThreadDecoder@N7z@NArchive@@UAEXXZ$2 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?Execute@CThreadDecoder@N7z@NArchive@@UAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-58h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Execute@CThreadDecoder@N7z@NArchive@@UAEXXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$1 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$2 proc near
lea ['ecx,', '[ebp-44h]']
jmp ['??1?$CObjArray@H@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$3 proc near
lea ['ecx,', '[ebp-6Ch]']
jmp ['??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$4 proc near
lea ['ecx,', '[ebp-80h]']
jmp ['??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$5 proc near
lea ['ecx,', '[ebp-0E0h]']
jmp ['??1CFolderEx@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$6 proc near
mov ['eax,', '[ebp-6BCh]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$7 proc near
lea ['ecx,', '[ebp-114h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$8 proc near
lea ['ecx,', '[ebp-13Ch]']
jmp ['??1CStreamBinder@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$9 proc near
lea ['ecx,', '[ebp-1F0h]']
jmp ['??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$10 proc near
lea ['ecx,', '[ebp-20Ch]']
jmp ['??1CAnalysis@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$11 proc near
lea ['ecx,', '[ebp-248h]']
jmp ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$12 proc near
mov ['eax,', '[ebp-6D0h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$13 proc near
lea ['ecx,', '[ebp-254h]']
jmp ['??1CMyComBSTR@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$14 proc near
lea ['ecx,', '[ebp-274h]']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$15 proc near
lea ['ecx,', '[ebp-2E0h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$16 proc near
lea ['ecx,', '[ebp-324h]']
jmp ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$17 proc near
lea ['ecx,', '[ebp-3E8h]']
jmp ['??1CEncoder@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$18 proc near
lea ['ecx,', '[ebp-440h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$19 proc near
lea ['ecx,', '[ebp-480h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$20 proc near
mov ['eax,', '[ebp-6FCh]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$21 proc near
lea ['ecx,', '[ebp-498h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$22 proc near
lea ['ecx,', '[ebp-4A4h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$23 proc near
mov ['eax,', '[ebp-704h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$24 proc near
lea ['ecx,', '[ebp-4D0h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$25 proc near
lea ['ecx,', '[ebp-4DCh]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$26 proc near
lea ['ecx,', '[ebp-578h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$27 proc near
lea ['ecx,', '[ebp-5B8h]']
jmp ['??1?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$28 proc near
lea ['ecx,', '[ebp-5D4h]']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$29 proc near
mov ['eax,', '[ebp-758h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$30 proc near
lea ['ecx,', '[ebp-60Ch]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z$31 proc near
lea ['ecx,', '[ebp-69Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-7CCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?WriteRange@N7z@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@_K2PAUICompressProgressInfo@@@Z$0 proc near
mov ['eax,', '[ebp-3Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?WriteRange@N7z@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@_K2PAUICompressProgressInfo@@@Z$1 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1?$CMyComPtr@VCLimitedSequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?WriteRange@N7z@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@_K2PAUICompressProgressInfo@@@Z$2 proc near
mov ['eax,', '[ebp-44h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?WriteRange@N7z@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@_K2PAUICompressProgressInfo@@@Z$3 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
endp
__ehhandler$?WriteRange@N7z@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@_K2PAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-60h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?WriteRange@N7z@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@_K2PAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?AddBcj2Methods@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z$0 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1CMethodFull@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$?AddBcj2Methods@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-74h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddBcj2Methods@N7z@NArchive@@YGJAAUCCompressionMethodMode@12@@Z']
jmp ['___CxxFrameHandler3']
endp
?Ptr@UString@@QBEPB_WI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?RightPtr@UString@@QBEPB_WI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
lea ['eax,', '[eax+ecx*2]']
mov ['ecx,', '[ebp+arg_0]']
shl ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReverseFind_Dot@UString@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['2Eh']
mov ['ecx,', '[ebp+var_4]']
call ['?ReverseFind@UString@@QBEH_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetDelta@CFilterMode@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '3030401h']
jnz ['short', 'loc_7305']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '10h']
jmp ['short', 'loc_7353']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '3030501h']
jz ['short', 'loc_7326']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '3030205h']
jz ['short', 'loc_7326']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '3030205h']
jnz ['short', 'loc_7332']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '4']
jmp ['short', 'loc_7353']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '3030701h']
jnz ['short', 'loc_7349']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '2']
jmp ['short', 'loc_7353']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?StringToBstr@@YGJPB_WPAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+psz]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SysAllocString@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '7FF8FFF2h']
add ['eax,', '8007000Eh']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyComBSTR@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMyComBSTR@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SysFreeString@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??ICMyComBSTR@@QAEPAPA_WXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BCMyComBSTR@@QBEPB_WXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WaitExecuteFinish@CVirtThread@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_Handle_WaitObject@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEncrypted@CFolder@N7z@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_7528']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_756B']
mov ['ecx,', '[ebp+var_4]']
call ['??B?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QBEPBUCCoderInfo@N7z@NArchive@@XZ']
mov ['ecx,', '[ebp+var_8]']
imul ['ecx,', '18h']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+edx],', '6F10701h']
jnz ['short', 'loc_7569']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[edx+ecx+4],', '0']
jnz ['short', 'loc_7569']
mov ['al,', '1']
jmp ['short', 'loc_756D']
jmp ['short', 'loc_751F']
xor ['al,', 'al']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFileItem@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+10h],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+11h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+12h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+13h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ParseFolderEx@CFolders@N7z@NArchive@@QBEXIAAUCFolderEx@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ParseFolderInfo@CFolders@N7z@NArchive@@QBEXIAAUCFolder@23@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['??B?$CObjArray@E@@QBEPBEXZ']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[eax+edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+18h],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetStreamPackSize@CFolders@N7z@NArchive@@QBE_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QBEPB_KXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QBEPB_KXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['edi,', '[esi+ecx*8+8]']
sub ['edi,', '[eax+edx*8]']
mov ['ecx,', '[esi+ecx*8+0Ch]']
sbb ['ecx,', '[eax+edx*8+4]']
mov ['eax,', 'edi']
mov ['edx,', 'ecx']
pop ['edi']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetFolderStreamPos@CDbEx@N7z@NArchive@@QBE_KII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QBEPB_KXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4]']
add ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0F8h]']
add ['ecx,', '[esi+edx*8]']
mov ['edi,', '[eax+0FCh]']
adc ['edi,', '[esi+edx*8+4]']
mov ['eax,', 'ecx']
mov ['edx,', 'edi']
pop ['edi']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QBEPB_KXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edi,', '[eax+ecx*4+4]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QBEPB_KXZ']
mov ['ebx,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[eax+edx*4]']
mov ['ecx,', '[esi+edi*8]']
sub ['ecx,', '[ebx+eax*8]']
mov ['edx,', '[esi+edi*8+4]']
sbb ['edx,', '[ebx+eax*8+4]']
mov ['eax,', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WasFinished@CFolderInStream@N7z@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+30h]']
xor ['eax,', 'eax']
cmp ['edx,', '[ecx+2Ch]']
setz ['al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveDown@CArchiveDatabaseOut@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?OutFoldersReserveDown@COutFolders@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['?ReserveDown@?$CRecordVector@_K@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '3Ch']
call ['?ReserveDown@CUInt32DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '54h']
call ['?ReserveDown@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '60h']
call ['?ReserveDown@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['?ReserveDown@?$CObjectVector@VUString@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '78h']
call ['?ReserveDown@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '90h']
call ['?ReserveDown@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0A8h']
call ['?ReserveDown@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C0h']
call ['?ReserveDown@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['?ReserveDown@?$CRecordVector@_N@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveDown@CUInt32DefVector@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveDown@?$CRecordVector@_N@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?ReserveDown@?$CRecordVector@I@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveDown@CUInt64DefVector@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveDown@?$CRecordVector@_N@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?ReserveDown@?$CRecordVector@_K@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?OutFoldersReserveDown@COutFolders@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveDown@CUInt32DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?ReserveDown@?$CRecordVector@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['?ReserveDown@?$CRecordVector@_K@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?HasStream@CUpdateItem@N7z@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Bh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_78D1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Ah]']
test ['eax,', 'eax']
jnz ['short', 'loc_78D1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+20h]']
or ['ecx,', '[eax+24h]']
jz ['short', 'loc_78D1']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_78D8']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFilterMode2@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFilterMode@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFilterMode@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??8CFilterMode2@N7z@NArchive@@QBE_NABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jnz ['short', 'loc_7984']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_7984']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_7984']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_798B']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CLimitedSequentialInStream@@QAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+20h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CCopyCoder@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0ICompressSetInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??0ICompressGetInStreamProcessedSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCopyCoder@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CCopyCoder@NCompress@@6BICompressSetInStream@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CCopyCoder@NCompress@@6BISequentialInStream@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CCopyCoder@NCompress@@6BICompressGetInStreamProcessedSize@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_7F17']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_7FD9']
push ['offset', '_IID_ICompressCoder']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_7F36']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_7FD9']
push ['offset', '_IID_ICompressSetInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_7F6A']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_7F59']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_7F60']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_7FD9']
push ['offset', '_IID_ISequentialInStream']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_7F9E']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_7F8D']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_7F94']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_7FD9']
push ['offset', '_IID_ICompressGetInStreamProcessedSize']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_7FD2']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_7FC1']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_7FC8']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_7FD9']
mov ['eax,', '80004002h']
jmp ['short', 'loc_7FEA']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CCopyCoder@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCopyCoder@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+10h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_80A6']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+10h]']
jmp ['short', 'loc_80D0']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_80C7']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCCopyCoder@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_80CE']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressGetInStreamProcessedSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressGetInStreamProcessedSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCCopyCoder@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCopyCoder@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_826E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CLimitedSequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CLimitedSequentialInStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CLimitedSequentialInStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_83BC']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_83DF']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_83D8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_83DF']
mov ['eax,', '80004002h']
jmp ['short', 'loc_83F0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CLimitedSequentialInStream@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CLimitedSequentialInStream@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_8462']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_848C']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_8483']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCLimitedSequentialInStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_848A']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCLimitedSequentialInStream@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CLimitedSequentialInStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_84C6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CLimitedSequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CRefItem@N7z@NArchive@@QAE@IABUCUpdateItem@12@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CRefItem@N7z@NArchive@@QAE@IABUCUpdateItem@12@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+10h],', '0']
movzx ['ecx,', '[ebp+arg_8]']
test ['ecx,', 'ecx']
jz ['loc_866D']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['?ReverseFind_PathSepar@UString@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['?ReverseFind_Dot@UString@@QBEHXZ']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_14]']
jg ['short', 'loc_85BF']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['?Len@UString@@QBEIXZ']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+8],', 'eax']
jmp ['loc_866D']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['?Len@UString@@QBEIXZ']
mov ['edx,', '[ebp+var_10]']
cmp ['[edx+8],', 'eax']
jz ['loc_866D']
lea ['ecx,', '[ebp+var_28]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_30],', 'ecx']
jmp ['short', 'loc_8605']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_30]']
mov ['dx,', '[eax+ecx*2]']
mov ['[ebp+var_34],', 'dx']
movzx ['eax,', '[ebp+var_34]']
cmp ['eax,', '80h']
jl ['short', 'loc_8628']
jmp ['short', 'loc_865E']
movzx ['ecx,', '[ebp+var_34]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8646']
lea ['ecx,', '[ebp+var_28]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
call ['?GetExtIndex@N7z@NArchive@@YGIPBD@Z']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+10h],', 'eax']
jmp ['short', 'loc_865E']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_34]']
push ['eax']
call ['?MyCharLower_Ascii@@YGDD@Z']
movzx ['ecx,', 'al']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??YAString@@QAEAAV0@D@Z']
jmp ['short', 'loc_85FC']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$??0CRefItem@N7z@NArchive@@QAE@IABUCUpdateItem@12@_N@Z$0 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0CRefItem@N7z@NArchive@@QAE@IABUCUpdateItem@12@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CRefItem@N7z@NArchive@@QAE@IABUCUpdateItem@12@_N@Z']
jmp ['___CxxFrameHandler3']
endp
?MyCharLower_Ascii@@YGDD@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
movsx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '41h']
jl ['short', 'loc_8726']
movsx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '5Ah']
jg ['short', 'loc_8726']
movzx ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
jmp ['short', 'loc_8729']
mov ['al,', '[ebp+arg_0]']
pop ['ebp']
retn ['4']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YAString@@QAEAAV0@D@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_87B8']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@AString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CAnalysis@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CAnalysis@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0Ch],', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0Dh],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+0Eh],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CAnalysis@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
endp
__ehhandler$??0CAnalysis@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CAnalysis@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Are_Lzma_Model_Props_Defined@CMethodProps@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['5']
mov ['ecx,', '[ebp+var_4]']
call ['?FindProp@CMethodProps@@QBEHK@Z']
test ['eax,', 'eax']
jl ['short', 'loc_88F4']
mov ['al,', '1']
jmp ['short', 'loc_891A']
push ['6']
mov ['ecx,', '[ebp+var_4]']
call ['?FindProp@CMethodProps@@QBEHK@Z']
test ['eax,', 'eax']
jl ['short', 'loc_8906']
mov ['al,', '1']
jmp ['short', 'loc_891A']
push ['7']
mov ['ecx,', '[ebp+var_4]']
call ['?FindProp@CMethodProps@@QBEHK@Z']
test ['eax,', 'eax']
jl ['short', 'loc_8918']
mov ['al,', '1']
jmp ['short', 'loc_891A']
xor ['al,', 'al']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsSimpleCoder@CMethodFull@N7z@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+18h],', '1']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsThereBond_to_Coder@CCompressionMethodMode@N7z@NArchive@@QBE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_8971']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_899E']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEABUCBond2@N7z@NArchive@@I@Z']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_899C']
mov ['al,', '1']
jmp ['short', 'loc_89A0']
jmp ['short', 'loc_8968']
xor ['al,', 'al']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMethodFull@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CMethodProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodFull@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMethodProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCProp@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetAttrib@CFileItem@N7z@NArchive@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+13h],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CRepackInStreamWithSizes@N7z@NArchive@@QAEXPAUISequentialInStream@@IPBV?$CRecordVector@_N@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?CheckFinishedState@CRepackStreamBase@N7z@NArchive@@QBEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
sub ['edx,', 'eax']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '80004005h']
mov ['eax,', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFolderInStream2@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CFolderInStream2@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CRepackStreamBase@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CFolderInStream2@N7z@NArchive@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+3Ch],', '0']
push ['10000h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+34h],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CFolderInStream2@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CRepackStreamBase@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CFolderInStream2@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$??0CFolderInStream2@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CFolderInStream2@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CRepackStreamBase@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CRepackStreamBase@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CRepackStreamBase@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
endp
__ehhandler$??1CRepackStreamBase@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CRepackStreamBase@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?QueryInterface@CFolderInStream2@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_8E74']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_8E7B']
mov ['eax,', '80004002h']
jmp ['short', 'loc_8E8C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+30h]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+30h],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CFolderInStream2@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+30h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+30h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CFolderInStream2@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+30h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+30h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_8EFE']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+30h]']
jmp ['short', 'loc_8F28']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_8F1F']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCFolderInStream2@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_8F26']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CFolderInStream2@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCFolderInStream2@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFolderInStream2@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_8F7E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CFolderInStream2@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CFolderInStream2@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CFolderInStream2@N7z@NArchive@@6B@']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CRepackStreamBase@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CFolderInStream2@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CRepackStreamBase@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$??1CFolderInStream2@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CFolderInStream2@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CRepackStreamBase@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CRepackStreamBase@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CRepackStreamBase@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
endp
__ehhandler$??0CRepackStreamBase@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CRepackStreamBase@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CThreadDecoder@N7z@NArchive@@QAE@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CThreadDecoder@N7z@NArchive@@QAE@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CVirtThread@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CThreadDecoder@N7z@NArchive@@6B@']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0CDecoder@N7z@NArchive@@QAE@_N@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??0?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '84h']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '98h']
call ['??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
movzx ['edx,', '[ebp+arg_0]']
test ['edx,', 'edx']
jz ['short', 'loc_925A']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+9Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+0A0h],', '1']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_921B']
mov ['ecx,', '[ebp+var_18]']
call ['??0CFolderOutStream2@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_9222']
mov ['[ebp+var_1C],', '0']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+80h],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+80h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '84h']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+78h],', '80004005h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CThreadDecoder@N7z@NArchive@@QAE@_N@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CVirtThread@@QAE@XZ']
endp
__unwindfunclet$??0CThreadDecoder@N7z@NArchive@@QAE@_N@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1CDecoder@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CThreadDecoder@N7z@NArchive@@QAE@_N@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CThreadDecoder@N7z@NArchive@@QAE@_N@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '84h']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CThreadDecoder@N7z@NArchive@@QAE@_N@Z$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '98h']
jmp ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
endp
__unwindfunclet$??0CThreadDecoder@N7z@NArchive@@QAE@_N@Z$5 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0CThreadDecoder@N7z@NArchive@@QAE@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CThreadDecoder@N7z@NArchive@@QAE@_N@Z']
jmp ['___CxxFrameHandler3']
endp
??1CVirtThread@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CVirtThread@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CVirtThread@@6B@']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
call ['?WaitThreadFinish@CVirtThread@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1CThread@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CVirtThread@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CVirtThread@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CVirtThread@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CThread@NWindows@@QAE@XZ']
endp
__ehhandler$??1CVirtThread@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CVirtThread@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CThread@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CThread@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CThread@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CVirtThread@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CVirtThread@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CVirtThread@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CThread@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CVirtThread@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CVirtThread@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??0CVirtThread@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CVirtThread@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CThread@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CThreadDecoder@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CThreadDecoder@N7z@NArchive@@6B@']
mov ['[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
call ['?WaitThreadFinish@CVirtThread@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '98h']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '84h']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CVirtThread@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CThreadDecoder@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CVirtThread@@QAE@XZ']
endp
__unwindfunclet$??1CThreadDecoder@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1CDecoder@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CThreadDecoder@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CThreadDecoder@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '84h']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CThreadDecoder@N7z@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '98h']
jmp ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
endp
__ehhandler$??1CThreadDecoder@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CThreadDecoder@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CDecoder@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CDecoder@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$??1CDecoder@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDecoder@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CFolderOutStream2@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CFolderOutStream2@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CRepackStreamBase@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CFolderOutStream2@N7z@NArchive@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CFolderOutStream2@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CRepackStreamBase@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$??0CFolderOutStream2@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CFolderOutStream2@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?QueryInterface@CFolderOutStream2@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_9B50']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_9B57']
mov ['eax,', '80004002h']
jmp ['short', 'loc_9B68']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+30h]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+30h],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CFolderOutStream2@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+30h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+30h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CFolderOutStream2@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+30h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+30h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_9BDA']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+30h]']
jmp ['short', 'loc_9C04']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_9BFB']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCFolderOutStream2@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_9C02']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCFolderOutStream2@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFolderOutStream2@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_9C3E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CFolderOutStream2@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CFolderOutStream2@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CRepackStreamBase@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CFolderOutStream2@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CRepackStreamBase@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$??1CFolderOutStream2@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CFolderOutStream2@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CBindInfoEx@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CBindInfo@NCoderMixer2@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CBindInfoEx@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CBindInfo@NCoderMixer2@@QAE@XZ']
endp
__ehhandler$??1CBindInfoEx@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CBindInfo@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CBindInfo@NCoderMixer2@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??1CBindInfo@NCoderMixer2@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CBindInfo@NCoderMixer2@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_9F8E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_9F8E']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@_K@@QBEAB_KI@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['eax,', '[eax+4]']
mov ['[ecx+4],', 'eax']
mov ['al,', '1']
jmp ['short', 'loc_9FA0']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['dword', 'ptr', '[ecx+4],', '0']
xor ['al,', 'al']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C4h']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_9FFC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C4h']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_9FFC']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_A003']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CFolderEx@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFolder@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFolder@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CFolder@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0?$CObjArray2@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CFolder@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??0CFolder@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??0CFolder@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CFolder@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CFolderEx@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFolder@N7z@NArchive@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CStreamBinder@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CStreamBinder@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CStreamBinder@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CStreamBinder@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??0CStreamBinder@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CStreamBinder@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CStreamBinder@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CStreamBinder@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CStreamBinder@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CStreamBinder@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??1CStreamBinder@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CStreamBinder@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CAnalysis@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CAnalysis@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CAnalysis@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
endp
__ehhandler$??1CAnalysis@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CAnalysis@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CCryptoGetTextPassword@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICryptoGetTextPassword@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCryptoGetTextPassword@N7z@NArchive@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CCryptoGetTextPassword@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_A524']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_A52B']
mov ['eax,', '80004002h']
jmp ['short', 'loc_A53C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CCryptoGetTextPassword@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCryptoGetTextPassword@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_A5AE']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_A5D8']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_A5CF']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCCryptoGetTextPassword@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_A5D6']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCCryptoGetTextPassword@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCryptoGetTextPassword@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_A612']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCryptoGetTextPassword@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCompressionMethodMode@N7z@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCompressionMethodMode@N7z@NArchive@@QAE@ABU012@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+18h]']
mov ['[edx+18h],', 'cl']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+19h]']
mov ['[edx+19h],', 'cl']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[edx+1Ch],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+20h]']
mov ['[edx+20h],', 'cl']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+21h]']
mov ['[edx+21h],', 'cl']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '24h']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CCompressionMethodMode@N7z@NArchive@@QAE@ABU012@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??0CCompressionMethodMode@N7z@NArchive@@QAE@ABU012@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??0CCompressionMethodMode@N7z@NArchive@@QAE@ABU012@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCompressionMethodMode@N7z@NArchive@@QAE@ABU012@@Z']
jmp ['___CxxFrameHandler3']
endp
??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CRepackInStreamWithSizes@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0ICompressGetSubStreamSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CRepackInStreamWithSizes@N7z@NArchive@@6BISequentialInStream@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CRepackInStreamWithSizes@N7z@NArchive@@6BICompressGetSubStreamSize@@@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CRepackInStreamWithSizes@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_AA4C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_AAA3']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_AA68']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_AAA3']
push ['offset', '_IID_ICompressGetSubStreamSize']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_AA9C']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_AA8B']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_AA92']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_AAA3']
mov ['eax,', '80004002h']
jmp ['short', 'loc_AAB4']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+8],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CRepackInStreamWithSizes@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CRepackInStreamWithSizes@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_AB2A']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
jmp ['short', 'loc_AB54']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_AB4B']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCRepackInStreamWithSizes@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_AB52']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCRepackInStreamWithSizes@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CRepackInStreamWithSizes@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_AB8E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CRepackInStreamWithSizes@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFolderInStream@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CFolderInStream@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0ICompressGetSubStreamSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CFolderInStream@N7z@NArchive@@6BISequentialInStream@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CFolderInStream@N7z@NArchive@@6BICompressGetSubStreamSize@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??0?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CFolderInStream@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CFolderInStream@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '34h']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
endp
__unwindfunclet$??0CFolderInStream@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$??0CFolderInStream@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??0CFolderInStream@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CFolderInStream@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?QueryInterface@CFolderInStream@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_AE18']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_AE6F']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_AE34']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_AE6F']
push ['offset', '_IID_ICompressGetSubStreamSize']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_AE68']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_AE57']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_AE5E']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_AE6F']
mov ['eax,', '80004002h']
jmp ['short', 'loc_AE80']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+8],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CFolderInStream@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CFolderInStream@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_AEF6']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
jmp ['short', 'loc_AF20']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_AF17']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCFolderInStream@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_AF1E']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCFolderInStream@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFolderInStream@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_AF5A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CFolderInStream@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CFolderInStream@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CFolderInStream@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CFolderInStream@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '34h']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
endp
__unwindfunclet$??1CFolderInStream@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$??1CFolderInStream@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??1CFolderInStream@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CFolderInStream@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CFolder@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CFolder@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1?$CObjArray2@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CFolder@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CFolder@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??1CFolder@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CFolder@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICryptoGetTextPassword@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICryptoGetTextPassword@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressGetSubStreamSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressGetSubStreamSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveDown@?$CObjectVector@VUString@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveDown@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B2C4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B30A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B388']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B3CE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B41B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B4A0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_B4C3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UISequentialInStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B57E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B5D4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_B5F7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@I@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveDown@?$CRecordVector@I@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_B68A']
jmp ['short', 'loc_B706']
mov ['[ebp+Dst],', '0']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_B6DE']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[edx+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@I@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@I@@QBEABII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@I@@QAEAAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Sort@?$CRecordVector@I@@QAEXP6GHPBI0PAX@Z1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_B81D']
jmp ['loc_B8A1']
mov ['ecx,', '[ebp+var_4]']
call ['?Front@?$CRecordVector@I@@QAEAAIXZ']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['?SortRefDown@?$CRecordVector@I@@SGXPAIIIP6GHPBI1PAX@Z2@Z']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
jnz ['short', 'loc_B833']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_C]']
mov ['edx,', '[edx+4]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['?SortRefDown@?$CRecordVector@I@@SGXPAIIIP6GHPBI1PAX@Z2@Z']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_B857']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B906']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B953']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B9D8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_B9FB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QAEPAEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QBEPBEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@?$CBuffer@E@@QAEXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_BB40']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@?$CBuffer@E@@QAEXXZ']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_BB40']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Free@?$CBuffer@E@@QAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_BB8C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_BBD8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_BC1E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_K@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveDown@?$CRecordVector@_K@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_BD36']
jmp ['short', 'loc_BDB2']
mov ['[ebp+Dst],', '0']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_BD8A']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
shl ['edx,', '3']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[edx+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@_K@@QAEI_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??A?$CRecordVector@_K@@QBEAB_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@_K@@QAEAA_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_N@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveDown@?$CRecordVector@_N@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_BF16']
jmp ['short', 'loc_BF7F']
mov ['[ebp+Dst],', '0']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_BF57']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[edx+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@_N@@QAEI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@_N@@QBEAB_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@_N@@QAEAA_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_C092']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_C109']
push ['3']
mov ['ecx,', '[ebp+var_8]']
call ['??_ECCoderInfo@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_C110']
mov ['[ebp+var_10],', '0']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QBEPBUCCoderInfo@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray2@I@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray2@I@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjArray2@I@@QBEIXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@_K@@QBEPB_KXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray@I@@QAE@I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_C295']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjArray@I@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@I@@QAEPAIXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@I@@QBEPBIXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@E@@QBEPBEXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveDown@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReserveDown@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_C399']
jmp ['loc_C45C']
mov ['[ebp+Dst],', '0']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['loc_C434']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_18],', 'edx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '18h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_C3FE']
push ['offset', '??0CFileItem@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_18]']
push ['eax']
push ['18h']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['??_H@YGXPAXIHP6EPAX0@Z@Z']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_28],', 'edx']
jmp ['short', 'loc_C405']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+Dst],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
imul ['eax,', '18h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+4]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?ReserveDown@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?ReserveDown@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReserveDown@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_C5A6']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_C59D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_C5A4']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_C562']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_C6BB']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_C713']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_C6F4']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBEABUCMethodFull@N7z@NArchive@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CMethodFull@N7z@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_C6FB']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_C6B2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@ABV0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__unwindfunclet$??0?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@ABV0@@Z$1 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??A?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBEABUCMethodFull@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEIABUCMethodFull@N7z@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEIABUCMethodFull@N7z@NArchive@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_C858']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CMethodFull@N7z@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_C85F']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEIABUCMethodFull@N7z@NArchive@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEIABUCMethodFull@N7z@NArchive@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEIABUCMethodFull@N7z@NArchive@@@Z']
jmp ['___CxxFrameHandler3']
endp
?InsertNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?InsertNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_C94B']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CMethodFull@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_C952']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?InsertNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@I@Z$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?InsertNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?InsertNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@I@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_CA7A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_CA71']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCMethodFull@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_CA78']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_CA36']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_CB94']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '0Ch']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
imul ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEIUCBond2@N7z@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@UCBond2@N7z@NArchive@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??A?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEABUCBond2@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEAAUCBond2@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Back@?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEAAUCBond2@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
sub ['eax,', '1']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_CD76']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveDown@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveDown@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_CE0F']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CFolder@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_CE16']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAEIUCFilterMode2@N7z@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??A?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAEAAUCFilterMode2@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Sort2@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_CFF3']
jmp ['loc_D0A5']
mov ['ecx,', '[ebp+var_4]']
call ['?Front@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAEAAUCFilterMode2@N7z@NArchive@@XZ']
sub ['eax,', '10h']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['?SortRefDown2@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@SGXPAUCFilterMode2@N7z@NArchive@@II@Z']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
jnz ['short', 'loc_D009']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '4']
add ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ecx+4]']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ecx+0Ch]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '10h']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '4']
add ['edx,', '[ebp+var_C]']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['?SortRefDown2@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@SGXPAUCFilterMode2@N7z@NArchive@@II@Z']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_D025']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@VCLimitedSequentialInStream@@@@QAE@PAVCLimitedSequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D118']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@VCLimitedSequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_D15E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@VCLimitedSequentialInStream@@@@QBEPAVCLimitedSequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QBEABUCUpdateItem@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@QAEIUCFolderRepack@N7z@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??A?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@QBEABUCFolderRepack@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_D2C6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAUIArchiveUpdateCallbackFile@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAUIArchiveUpdateCallbackFile@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_D3BE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAEPAPAUIArchiveExtractCallbackMessage@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAEPAUIArchiveExtractCallbackMessage@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAEPAUIArchiveExtractCallbackMessage@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_D496']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAUICryptoGetTextPassword@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D4EC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_D50F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjArray@H@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray@H@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@H@@QAEPAHXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@?$CObjArray@H@@QAEXI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAEAAUCSolidGroup@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNew@?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAEAAUCSolidGroup@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAEAAUCSolidGroup@N7z@NArchive@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_D6EF']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CSolidGroup@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_D6F6']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAEAAUCSolidGroup@N7z@NArchive@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAEAAUCSolidGroup@N7z@NArchive@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAEAAUCSolidGroup@N7z@NArchive@@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_D81A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_D811']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCSolidGroup@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_D818']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_D7D6']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCSolidGroup@N7z@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndSetSize@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEAAUCRefItem@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '14h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Sort@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXP6GHPBUCRefItem@N7z@NArchive@@0PAX@Z1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_D987']
jmp ['loc_DA5F']
mov ['ecx,', '[ebp+var_4]']
call ['?Front@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEAAUCRefItem@N7z@NArchive@@XZ']
sub ['eax,', '14h']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['?SortRefDown@?$CRecordVector@UCRefItem@N7z@NArchive@@@@SGXPAUCRefItem@N7z@NArchive@@IIP6GHPBU234@1PAX@Z2@Z']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
jnz ['short', 'loc_D99D']
mov ['eax,', '[ebp+var_8]']
imul ['eax,', '14h']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_24],', 'edx']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[eax+0Ch]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '14h']
mov ['edx,', '[ebp+var_8]']
imul ['edx,', '14h']
add ['edx,', '[ebp+var_C]']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ecx+10h]']
mov ['[edx+10h],', 'ecx']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '14h']
mov ['ecx,', '[ebp+var_28]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['?SortRefDown@?$CRecordVector@UCRefItem@N7z@NArchive@@@@SGXPAUCRefItem@N7z@NArchive@@IIP6GHPBU234@1PAX@Z2@Z']
cmp ['[ebp+var_8],', '1']
ja ['loc_D9C1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??_ECCoderInfo@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_DAEC']
push ['offset', '??1CCoderInfo@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx-4]']
push ['edx']
push ['18h']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1']
jz ['short', 'loc_DAE4']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '4']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '4']
jmp ['short', 'loc_DB0B']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCoderInfo@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_DB08']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_H@YGXPAXIHP6EPAX0@Z@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
js ['short', 'loc_DB45']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_DB20']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
??_GCProp@@QAEPAXI@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_DB7E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMethodFull@N7z@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CMethodProps@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[edx+14h]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCMethodFull@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMethodFull@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_DC0A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CSolidGroup@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CSolidGroup@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CSolidGroup@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??0CSolidGroup@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CSolidGroup@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??_GCSolidGroup@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CSolidGroup@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_DD06']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCoderInfo@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CBuffer@E@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMethodProps@@QAE@ABV0@@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@ABU0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CSolidGroup@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CSolidGroup@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CSolidGroup@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??1CSolidGroup@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CSolidGroup@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CProps@@QAE@ABU0@@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_DF41']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveDown@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_DF7E']
jmp ['short', 'loc_DFFA']
mov ['[ebp+Dst],', '0']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_DFD2']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[edx+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@PAX@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_E220']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_E1FB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Front@?$CRecordVector@I@@QAEAAIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SortRefDown@?$CRecordVector@I@@SGXPAIIIP6GHPBI1PAX@Z2@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+arg_8]']
jbe ['short', 'loc_E27E']
jmp ['short', 'loc_E2F9']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['short', 'loc_E2B8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*4+4]']
push ['eax']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['short', 'loc_E2B8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jl ['short', 'loc_E2DC']
jmp ['short', 'loc_E2F9']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
mov ['esi,', '[ebp+arg_0]']
mov ['eax,', '[esi+eax*4]']
mov ['[edx+ecx*4],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+arg_4],', 'ecx']
jmp ['loc_E26C']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+edx*4],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_E3F8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_E3D3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_E4A5']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_E480']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCProp@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_E52B']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_E583']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_E564']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CProp@@QAE@ABU0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_E56B']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_E522']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__unwindfunclet$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z$1 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCProp@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@UCBond2@N7z@NArchive@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_E710']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '0Ch']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_E6EB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
imul ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveOnePosition@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReserveOnePosition@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@AAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_E83F']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_1C]']
mov ['edx,', '10h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_E7DB']
push ['offset', '??0CFilterMode2@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
push ['10h']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['??_H@YGXPAXIHP6EPAX0@Z@Z']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_E7E2']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+Dst],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jz ['short', 'loc_E81A']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+Dst]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+8],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?ReserveOnePosition@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@AAEXXZ$0 proc near
mov ['eax,', '[ebp-24h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?ReserveOnePosition@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@AAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReserveOnePosition@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@AAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?Front@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@QAEAAUCFilterMode2@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SortRefDown2@?$CRecordVector@UCFilterMode2@N7z@NArchive@@@@SGXPAUCFilterMode2@N7z@NArchive@@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '4']
add ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_10],', 'edx']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[eax+0Ch]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+arg_8]']
jbe ['short', 'loc_E916']
jmp ['short', 'loc_E991']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['short', 'loc_E946']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '4']
add ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
shl ['ecx,', '4']
add ['ecx,', '[ebp+arg_0]']
call ['?Compare@CFilterMode2@N7z@NArchive@@QBEHABU123@@Z']
test ['eax,', 'eax']
jle ['short', 'loc_E946']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
shl ['edx,', '4']
add ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+var_14]']
call ['?Compare@CFilterMode2@N7z@NArchive@@QBEHABU123@@Z']
test ['eax,', 'eax']
jl ['short', 'loc_E95E']
jmp ['short', 'loc_E991']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '4']
add ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '4']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+arg_4],', 'ecx']
jmp ['loc_E904']
mov ['edx,', '[ebp+arg_4]']
shl ['edx,', '4']
add ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Compare@CFilterMode2@N7z@NArchive@@QBEHABU123@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_EA1B']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
test ['eax,', 'eax']
jz ['short', 'loc_EA19']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_EA7B']
jmp ['short', 'loc_EA2D']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
test ['edx,', 'edx']
jnz ['short', 'loc_EA2D']
mov ['eax,', '1']
jmp ['short', 'loc_EA7B']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jnb ['short', 'loc_EA3E']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_EA7B']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jbe ['short', 'loc_EA51']
mov ['eax,', '1']
jmp ['short', 'loc_EA7B']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jnb ['short', 'loc_EA64']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_EA7B']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jbe ['short', 'loc_EA79']
mov ['eax,', '1']
jmp ['short', 'loc_EA7B']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_EB38']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_EB13']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCFolderRepack@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAUIArchiveUpdateCallbackFile@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_EBE4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_EC07']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAEPAUIArchiveExtractCallbackMessage@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_EC50']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_EC73']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ClearAndReserve@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ClearAndReserve@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Clear@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXXZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['loc_ED80']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_18],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '14h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_ED5B']
push ['offset', '??0CRefItem@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_18]']
push ['eax']
push ['14h']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['??_H@YGXPAXIHP6EPAX0@Z@Z']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_ED62']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?ClearAndReserve@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXI@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?ClearAndReserve@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ClearAndReserve@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXI@Z']
jmp ['___CxxFrameHandler3']
endp
??0CRefItem@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Front@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEAAUCRefItem@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SortRefDown@?$CRecordVector@UCRefItem@N7z@NArchive@@@@SGXPAUCRefItem@N7z@NArchive@@IIP6GHPBU234@1PAX@Z2@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
imul ['eax,', '14h']
add ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[eax+0Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+arg_8]']
jbe ['short', 'loc_EE7F']
jmp ['loc_EF19']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_8]']
jnb ['short', 'loc_EEBC']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
imul ['edx,', '14h']
add ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '14h']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+14h]']
push ['edx']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['short', 'loc_EEBC']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
imul ['edx,', '14h']
add ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+var_18]']
push ['eax']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jl ['short', 'loc_EEE0']
jmp ['short', 'loc_EF19']
mov ['ecx,', '[ebp+var_20]']
imul ['ecx,', '14h']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
imul ['edx,', '14h']
add ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ecx+10h]']
mov ['[edx+10h],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+arg_4],', 'edx']
jmp ['loc_EE6A']
mov ['eax,', '[ebp+arg_4]']
imul ['eax,', '14h']
add ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+10h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
??0CProp@@QAE@ABU0@@Z proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+4]']
mov ['[eax+4],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CPropVariant@NCOM@NWindows@@QAE@ABV012@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_F0D8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_F0B3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@UCRefItem@N7z@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$MyCompare@I@@YGHII@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_F120']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_F12E']
mov ['ecx,', '[ebp+arg_0]']
xor ['edx,', 'edx']
cmp ['ecx,', '[ebp+arg_4]']
setnz ['dl']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$MyCompare@_K@@YGH_K0@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
ja ['short', 'loc_F167']
jb ['short', 'loc_F15E']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_F167']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_F18D']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ebp+arg_8]']
jnz ['short', 'loc_F180']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_F180']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_F187']
mov ['[ebp+var_8],', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??$MyCompare@H@@YGHHH@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_F1B4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_F1C2']
mov ['ecx,', '[ebp+arg_0]']
xor ['edx,', 'edx']
cmp ['ecx,', '[ebp+arg_4]']
setnz ['dl']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Release@CCopyCoder@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CCopyCoder@NCompress@@UAGKXZ']
endp
?QueryInterface@CRepackInStreamWithSizes@N7z@NArchive@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CRepackInStreamWithSizes@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CCopyCoder@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CCopyCoder@NCompress@@UAGKXZ']
endp
?AddRef@CFolderInStream@N7z@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CFolderInStream@N7z@NArchive@@UAGKXZ']
endp
?Release@CCopyCoder@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CCopyCoder@NCompress@@UAGKXZ']
endp
?AddRef@CCopyCoder@NCompress@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CCopyCoder@NCompress@@UAGKXZ']
endp
?AddRef@CCopyCoder@NCompress@@W7AGKXZ proc near 
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CCopyCoder@NCompress@@UAGKXZ']
endp
?QueryInterface@CCopyCoder@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CCopyCoder@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CCopyCoder@NCompress@@UAGKXZ']
endp
?QueryInterface@CFolderInStream@N7z@NArchive@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CFolderInStream@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CRepackInStreamWithSizes@N7z@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CRepackInStreamWithSizes@N7z@NArchive@@UAGKXZ']
endp
?QueryInterface@CCopyCoder@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CCopyCoder@NCompress@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CRepackInStreamWithSizes@N7z@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CRepackInStreamWithSizes@N7z@NArchive@@UAGKXZ']
endp
?Release@CFolderInStream@N7z@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CFolderInStream@N7z@NArchive@@UAGKXZ']
endp

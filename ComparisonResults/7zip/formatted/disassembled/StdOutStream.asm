?Open@CStdOutStream@@QAE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CStdOutStream@@QAE_NXZ']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_kFileOpenMode']
push ['eax']
mov ['ecx,', '[ebp+Filename]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__fopen']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setnz ['cl']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax+4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Close@CStdOutStream@@QAE_NXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_86']
mov ['al,', '1']
jmp ['short', 'loc_B8']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fclose']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_A6']
xor ['al,', 'al']
jmp ['short', 'loc_B8']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+4],', '0']
mov ['al,', '1']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Flush@CStdOutStream@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__fflush']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?endl@@YGAAVCStdOutStream@@AAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0Ah']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
??6CStdOutStream@@QAEAAV0@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??6CStdOutStream@@QAEAAV0@PB_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '38h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', 'dword', 'ptr', 'ds:?g_CodePage@@3HA']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0FFFFFFFFh']
jnz ['short', 'loc_177']
mov ['[ebp+var_14],', '1']
lea ['ecx,', '[ebp+var_24]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0FDE9h']
jnz ['short', 'loc_1BA']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_34]']
call ['??0UString@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['edx,', '[ebp+var_24]']
push ['edx']
lea ['eax,', '[ebp+var_34]']
push ['eax']
call ['?ConvertUnicodeToUTF8@@YGXABVUString@@AAVAString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_1E7']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_40]']
call ['??0UString@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edx,', '[ebp+var_14]']
push ['edx']
lea ['eax,', '[ebp+var_40]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@I@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_24]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?StdOut_Convert_UString_to_AString@@YGXABVUString@@AAVAString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:?g_CodePage@@3HA']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0FFFFFFFFh']
jnz ['short', 'loc_278']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+var_4],', '0FDE9h']
jnz ['short', 'loc_290']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?ConvertUnicodeToUTF8@@YGXABVUString@@AAVAString@@@Z']
jmp ['short', 'loc_2A1']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?StdOut_Convert_UString_to_AString@@YGXABVUString@@AAVAString@@@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??6CStdOutStream@@QAEAAV0@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+Str]']
push ['eax']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
cdq
push ['edx']
push ['eax']
call ['?ConvertInt64ToString@@YGX_JPAD@Z']
lea ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??6CStdOutStream@@QAEAAV0@_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['edx']
call ['?ConvertInt64ToString@@YGX_JPAD@Z']
lea ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??6CStdOutStream@@QAEAAV0@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['dword', 'ptr', '[ebp+Str],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
lea ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??6CStdOutStream@@QAEAAV0@_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['edx']
call ['?ConvertUInt64ToString@@YGX_KPAD@Z']
lea ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??6CStdOutStream@@QAEAAV0@D@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__fputc']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??6CStdOutStream@@QAEAAV0@PB_W@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??6CStdOutStream@@QAEAAV0@PB_W@Z$1 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??6CStdOutStream@@QAEAAV0@PB_W@Z$2 proc near
lea ['ecx,', '[ebp-40h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??6CStdOutStream@@QAEAAV0@PB_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-40h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??6CStdOutStream@@QAEAAV0@PB_W@Z']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??6CStdOutStream@@QAEAAV0@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??__Eg_StdOut@@YAXXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
mov ['ecx,', 'offset', '?g_StdOut@@3VCStdOutStream@@A']
call ['??0CStdOutStream@@QAE@PAU_iobuf@@@Z']
push ['offset', '??__Fg_StdOut@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CStdOutStream@@QAE@PAU_iobuf@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??__Eg_StdErr@@YAXXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['ecx,', 'offset', '?g_StdErr@@3VCStdOutStream@@A']
call ['??0CStdOutStream@@QAE@PAU_iobuf@@@Z']
push ['offset', '??__Fg_StdErr@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??__Fg_StdOut@@YAXXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?g_StdOut@@3VCStdOutStream@@A']
call ['??1CStdOutStream@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??1CStdOutStream@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CStdOutStream@@QAE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Fg_StdErr@@YAXXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?g_StdErr@@3VCStdOutStream@@A']
call ['??1CStdOutStream@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp

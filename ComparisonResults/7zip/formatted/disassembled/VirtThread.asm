?Create@CVirtThread@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_37']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_97']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_50']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_97']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?IsCreated@CThread@NWindows@@QAE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_83']
xor ['eax,', 'eax']
jmp ['short', 'loc_97']
mov ['edx,', '[ebp+var_4]']
push ['edx']
push ['offset', '?CoderThread@@YGIPAX@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CoderThread@@YGIPAX@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+10h]']
test ['edx,', 'edx']
jz ['short', 'loc_DC']
xor ['eax,', 'eax']
jmp ['short', 'loc_FE']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
jmp ['short', 'loc_BC']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Start@CVirtThread@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WaitThreadFinish@CVirtThread@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+10h],', '1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_172']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?IsCreated@CThread@NWindows@@QAE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_19A']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Wait@CThread@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Close@CThread@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Event_Reset@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1F9']
xor ['eax,', 'eax']
jmp ['short', 'loc_202']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_AutoResetEvent_CreateNotSignaled@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setnz ['cl']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsCreated@CThread@NWindows@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setnz ['cl']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_Thread_Create@12']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Event_Set@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_Handle_WaitObject@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CThread@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Wait@CThread@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_Handle_WaitObject@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

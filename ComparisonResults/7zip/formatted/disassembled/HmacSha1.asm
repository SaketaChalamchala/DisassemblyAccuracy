?SetKey@CHmac@NSha1@NCrypto@@QAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '54h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_37']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '40h']
jnb ['short', 'loc_47']
mov ['ecx,', '[ebp+var_54]']
mov ['[ebp+ecx+var_4C],', '0']
jmp ['short', 'loc_2E']
cmp ['[ebp+arg_4],', '40h']
jbe ['short', 'loc_73']
mov ['ecx,', '[ebp+var_8]']
call ['?Init@CContextBase@NSha1@NCrypto@@QAEXXZ']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z']
jmp ['short', 'loc_9E']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_85']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_9E']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_54]']
mov ['edx,', '[ebp+var_54]']
mov ['al,', '[ecx]']
mov ['[ebp+edx+var_4C],', 'al']
jmp ['short', 'loc_7C']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_B0']
mov ['ecx,', '[ebp+var_54]']
add ['ecx,', '1']
mov ['[ebp+var_54],', 'ecx']
cmp ['[ebp+var_54],', '40h']
jnb ['short', 'loc_CA']
mov ['edx,', '[ebp+var_54]']
movzx ['eax,', '[ebp+edx+var_4C]']
xor ['eax,', '36h']
mov ['ecx,', '[ebp+var_54]']
mov ['[ebp+ecx+var_4C],', 'al']
jmp ['short', 'loc_A7']
mov ['ecx,', '[ebp+var_8]']
call ['?Init@CContextBase@NSha1@NCrypto@@QAEXXZ']
push ['40h']
lea ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_F2']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '40h']
jnb ['short', 'loc_10C']
mov ['ecx,', '[ebp+var_54]']
movzx ['edx,', '[ebp+ecx+var_4C]']
xor ['edx,', '6Ah']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+eax+var_4C],', 'dl']
jmp ['short', 'loc_E9']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '60h']
call ['?Init@CContextBase@NSha1@NCrypto@@QAEXXZ']
push ['40h']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '60h']
call ['?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '54h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Final@CHmac@NSha1@NCrypto@@QAEXPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z']
push ['14h']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '60h']
call ['?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '60h']
call ['?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_1D3']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_1EC']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_28]']
mov ['cl,', '[ebp+eax+var_20]']
mov ['[edx],', 'cl']
jmp ['short', 'loc_1CA']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetKey@CHmac32@NSha1@NCrypto@@QAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_27E']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '10h']
jnb ['short', 'loc_291']
mov ['ecx,', '[ebp+var_54]']
mov ['[ebp+ecx*4+var_4C],', '0']
jmp ['short', 'loc_275']
cmp ['[ebp+arg_4],', '40h']
jbe ['short', 'loc_2F6']
lea ['ecx,', '[ebp+var_B8]']
call ['?Init@CContextBase@NSha1@NCrypto@@QAEXXZ']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_B8]']
call ['?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z']
lea ['ecx,', '[ebp+var_D4]']
push ['ecx']
lea ['ecx,', '[ebp+var_B8]']
call ['?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_2D9']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
cmp ['[ebp+var_54],', '5']
jnb ['short', 'loc_2F4']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', 'dword', 'ptr', '[ebp+eax*4+var_D4]']
bswap ['ecx']
mov ['edx,', '[ebp+var_54]']
mov ['[ebp+edx*4+var_4C],', 'ecx']
jmp ['short', 'loc_2D0']
jmp ['short', 'loc_343']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_308']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_54]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_343']
mov ['edx,', '[ebp+var_54]']
shr ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_54]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_54]']
and ['ecx,', '3']
shl ['ecx,', '3']
mov ['esi,', '18h']
sub ['esi,', 'ecx']
mov ['ecx,', 'esi']
shl ['eax,', 'cl']
or ['eax,', '[ebp+edx*4+var_4C]']
mov ['edx,', '[ebp+var_54]']
shr ['edx,', '2']
mov ['[ebp+edx*4+var_4C],', 'eax']
jmp ['short', 'loc_2FF']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_355']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '10h']
jnb ['short', 'loc_371']
mov ['ecx,', '[ebp+var_54]']
mov ['edx,', '[ebp+ecx*4+var_4C]']
xor ['edx,', '36363636h']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+eax*4+var_4C],', 'edx']
jmp ['short', 'loc_34C']
mov ['ecx,', '[ebp+var_8]']
call ['?Init@CContextBase@NSha1@NCrypto@@QAEXXZ']
push ['10h']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_399']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
cmp ['[ebp+var_54],', '10h']
jnb ['short', 'loc_3B5']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[ebp+eax*4+var_4C]']
xor ['ecx,', '6A6A6A6Ah']
mov ['edx,', '[ebp+var_54]']
mov ['[ebp+edx*4+var_4C],', 'ecx']
jmp ['short', 'loc_390']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '60h']
call ['?Init@CContextBase@NSha1@NCrypto@@QAEXXZ']
push ['10h']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '60h']
call ['?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Final@CHmac32@NSha1@NCrypto@@QAEXPAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?Final@CContext32@NSha1@NCrypto@@QAEXPAI@Z']
push ['5']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '60h']
call ['?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '60h']
call ['?Final@CContext32@NSha1@NCrypto@@QAEXPAI@Z']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_4B3']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_4CD']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_28]']
mov ['ecx,', '[ebp+ecx*4+var_20]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_4AA']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetLoopXorDigest@CHmac32@NSha1@NCrypto@@QAEXPAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0A4h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_A4]']
mov ['ecx,', '29h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
push ['5']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?PrepareBlock@CContext32@NSha1@NCrypto@@QBEXPAII@Z']
push ['5']
lea ['ecx,', '[ebp+var_94]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '60h']
call ['?PrepareBlock@CContext32@NSha1@NCrypto@@QBEXPAII@Z']
mov ['[ebp+var_9C],', '0']
jmp ['short', 'loc_588']
mov ['edx,', '[ebp+var_9C]']
add ['edx,', '1']
mov ['[ebp+var_9C],', 'edx']
cmp ['[ebp+var_9C],', '5']
jnb ['short', 'loc_5A9']
mov ['eax,', '[ebp+var_9C]']
mov ['ecx,', '[ebp+var_9C]']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx*4]']
mov ['[ebp+eax*4+var_4C],', 'ecx']
jmp ['short', 'loc_579']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_5C4']
mov ['edx,', '[ebp+var_A0]']
add ['edx,', '1']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '[ebp+var_A0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_645']
lea ['ecx,', '[ebp+var_94]']
push ['ecx']
lea ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?GetBlockDigest@CContextBase@NSha1@NCrypto@@QAEXPBIPAI@Z']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
lea ['ecx,', '[ebp+var_94]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '60h']
call ['?GetBlockDigest@CContextBase@NSha1@NCrypto@@QAEXPBIPAI@Z']
mov ['[ebp+var_A4],', '0']
jmp ['short', 'loc_613']
mov ['edx,', '[ebp+var_A4]']
add ['edx,', '1']
mov ['[ebp+var_A4],', 'edx']
cmp ['[ebp+var_A4],', '5']
jnb ['short', 'loc_640']
mov ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ecx+eax*4]']
xor ['eax,', '[ebp+edx*4+var_4C]']
mov ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_604']
jmp ['loc_5B5']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0A4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Init@CContextBase@NSha1@NCrypto@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Sha1_Init@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_Sha1_Update@12']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_Sha1_Final@8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_Sha1_32_Update@12']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Final@CContext32@NSha1@NCrypto@@QAEXPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_Sha1_32_Final@8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetBlockDigest@CContextBase@NSha1@NCrypto@@QAEXPBIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_Sha1_GetBlockDigest@12']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?PrepareBlock@CContext32@NSha1@NCrypto@@QBEXPAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_Sha1_32_PrepareBlock@12']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

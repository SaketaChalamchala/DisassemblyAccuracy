_x86_Convert@20 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
and ['ecx,', '7']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '5']
jnb ['short', 'loc_45']
xor ['eax,', 'eax']
jmp ['loc_24F']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '4']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '5']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_74']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_10]']
jnb ['short', 'loc_92']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
and ['eax,', '0FEh']
cmp ['eax,', '0E8h']
jnz ['short', 'loc_90']
jmp ['short', 'loc_92']
jmp ['short', 'loc_6B']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_10]']
jb ['short', 'loc_D9']
cmp ['[ebp+var_14],', '2']
jbe ['short', 'loc_BE']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_C9']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
shr ['edx,', 'cl']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_24F']
cmp ['[ebp+var_14],', '2']
jbe ['short', 'loc_E8']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_136']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
shr ['edx,', 'cl']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_136']
cmp ['[ebp+var_8],', '4']
ja ['short', 'loc_11D']
cmp ['[ebp+var_8],', '3']
jz ['short', 'loc_11D']
mov ['eax,', '[ebp+var_8]']
shr ['eax,', '1']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+1]']
add ['edx,', '1']
and ['edx,', '0FEh']
jnz ['short', 'loc_136']
mov ['eax,', '[ebp+var_8]']
shr ['eax,', '1']
or ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['loc_57']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
add ['eax,', '1']
and ['eax,', '0FEh']
jnz ['loc_236']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
or ['edx,', 'ecx']
mov ['[ebp+var_18],', 'edx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '5']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_19C']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_1A5']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_200']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '6']
shl ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_20]']
shr ['edx,', 'cl']
movzx ['eax,', 'dl']
add ['eax,', '1']
and ['eax,', '0FEh']
jnz ['short', 'loc_1F9']
mov ['edx,', '100h']
mov ['ecx,', '[ebp+var_20]']
shl ['edx,', 'cl']
sub ['edx,', '1']
xor ['edx,', '[ebp+var_18]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_1F0']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_1F9']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['al,', 'byte', 'ptr', '[ebp+var_18]']
mov ['[edx+1],', 'al']
mov ['ecx,', '[ebp+var_18]']
shr ['ecx,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_18]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_18]']
shr ['edx,', '18h']
and ['edx,', '1']
xor ['eax,', 'eax']
sub ['eax,', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+4],', 'al']
jmp ['short', 'loc_24A']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '1']
or ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['loc_57']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp

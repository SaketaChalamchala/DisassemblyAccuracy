??0CInOutTempBuffer@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CInOutTempBuffer@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CTempFile@NDir@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0COutFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@CInOutTempBuffer@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jnz ['short', 'loc_C5']
push ['100000h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CInOutTempBuffer@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CInOutTempBuffer@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1COutFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CTempFile@NDir@NFile@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InitWriting@CInOutTempBuffer@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+34h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['dword', 'ptr', '[edx+2Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+30h],', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WriteToFile@CInOutTempBuffer@@AAE_NPBXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_1D3']
mov ['al,', '1']
jmp ['loc_261']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+34h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_205']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '10h']
push ['edx']
mov ['eax,', 'ds:_kTempFilePrefixString']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1FE']
xor ['al,', 'al']
jmp ['short', 'loc_261']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+34h],', '1']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?Write@COutFile@NIO@NFile@NWindows@@QAE_NPBXIAAI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_227']
xor ['al,', 'al']
jmp ['short', 'loc_261']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+30h]']
call ['@CrcUpdate@12']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+30h],', 'eax']
mov ['edx,', '[ebp+var_C]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['edx,', '[ecx+28h]']
adc ['eax,', '[ecx+2Ch]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+28h],', 'edx']
mov ['[ecx+2Ch],', 'eax']
mov ['edx,', '[ebp+var_C]']
xor ['eax,', 'eax']
cmp ['edx,', '[ebp+arg_4]']
setz ['al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Write@CInOutTempBuffer@@QAE_NPBXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_2D0']
mov ['al,', '1']
jmp ['loc_36B']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '100000h']
sub ['ecx,', '[eax+24h]']
mov ['[ebp+Size],', 'ecx']
jz ['short', 'loc_35B']
mov ['edx,', '[ebp+Size]']
cmp ['edx,', '[ebp+arg_4]']
jbe ['short', 'loc_2EE']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+24h]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['edx,', '[ebp+Src]']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+30h]']
call ['@CrcUpdate@12']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+30h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+24h]']
add ['ecx,', '[ebp+Size]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+24h],', 'ecx']
mov ['eax,', '[ebp+Size]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+28h]']
adc ['ecx,', '[edx+2Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+28h],', 'eax']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+Size]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+Src]']
add ['ecx,', '[ebp+Size]']
mov ['[ebp+Src],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteToFile@CInOutTempBuffer@@AAE_NPBXI@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteToStream@CInOutTempBuffer@@QAEJPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?WriteToStream@CInOutTempBuffer@@QAEJPAUISequentialOutStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '54h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_3D2']
mov ['eax,', '80004005h']
jmp ['loc_5B5']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_1C],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx+24h],', '0']
jz ['short', 'loc_444']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+24h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_418']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_5B5']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+24h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[eax+20h]']
mov ['ecx,', '[ebp+var_1C]']
call ['@CrcUpdate@12']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+24h]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_18]']
adc ['eax,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+34h]']
test ['edx,', 'edx']
jz ['loc_57B']
lea ['ecx,', '[ebp+var_34]']
call ['??0CInFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?GetPath@CTempFile@NDir@NFile@NWindows@@QBEABVUString@@XZ']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
lea ['ecx,', '[ebp+var_34]']
call ['?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_49F']
mov ['[ebp+var_4C],', '80004005h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CInFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4C]']
jmp ['loc_5B5']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[ebp+var_58]']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[edx+2Ch]']
ja ['loc_56C']
jb ['short', 'loc_4C5']
mov ['ecx,', '[ebp+var_58]']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ecx+28h]']
jnb ['loc_56C']
lea ['eax,', '[ebp+var_40]']
push ['eax']
push ['100000h']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
push ['edx']
lea ['ecx,', '[ebp+var_34]']
call ['?ReadPart@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_502']
mov ['[ebp+var_50],', '80004005h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CInFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_5B5']
cmp ['[ebp+var_40],', '0']
jnz ['short', 'loc_50A']
jmp ['short', 'loc_56C']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_541']
mov ['edx,', '[ebp+var_48]']
mov ['[ebp+var_54],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CInFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_54]']
jmp ['short', 'loc_5B5']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
mov ['ecx,', '[ebp+var_1C]']
call ['@CrcUpdate@12']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+var_40]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_18]']
adc ['eax,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_49F']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CInFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+30h]']
cmp ['edx,', '[ebp+var_1C]']
jnz ['short', 'loc_5AB']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ecx+28h]']
jnz ['short', 'loc_5AB']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+2Ch]']
jnz ['short', 'loc_5AB']
mov ['[ebp+var_60],', '0']
jmp ['short', 'loc_5B2']
mov ['[ebp+var_60],', '80004005h']
mov ['eax,', '[ebp+var_60]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CInOutTempBuffer@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CTempFile@NDir@NFile@NWindows@@QAE@XZ']
endp
__ehhandler$??0CInOutTempBuffer@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CInOutTempBuffer@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1CInOutTempBuffer@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CTempFile@NDir@NFile@NWindows@@QAE@XZ']
endp
__ehhandler$??1CInOutTempBuffer@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CInOutTempBuffer@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?WriteToStream@CInOutTempBuffer@@QAEJPAUISequentialOutStream@@@Z$0 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1CInFile@NIO@NFile@NWindows@@QAE@XZ']
endp
__ehhandler$?WriteToStream@CInOutTempBuffer@@QAEJPAUISequentialOutStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-5Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?WriteToStream@CInOutTempBuffer@@QAEJPAUISequentialOutStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CTempFile@NDir@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CTempFile@NDir@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CTempFile@NDir@NFile@NWindows@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Remove@CTempFile@NDir@NFile@NWindows@@QAE_NXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CTempFile@NDir@NFile@NWindows@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CTempFile@NDir@NFile@NWindows@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CTempFile@NDir@NFile@NWindows@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFileBase@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFileBase@NIO@NFile@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetPath@CTempFile@NDir@NFile@NWindows@@QBEABVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CInFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFileBase@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CInFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFileBase@NIO@NFile@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

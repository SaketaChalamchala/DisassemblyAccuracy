?WriteSignature@COutArchive@N7z@NArchive@@AAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
push ['6']
push ['offset', '?kSignature@N7z@NArchive@@3PAEA']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['byte', 'ptr', '[ebp+var_10+2],', '0']
mov ['byte', 'ptr', '[ebp+var_10+3],', '4']
push ['8']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteDirect@COutArchive@N7z@NArchive@@AAEJPBXI@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WriteStartHeader@COutArchive@N7z@NArchive@@AAEJABUCStartHeader@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[eax]']
push ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
call ['?SetUInt64@N7z@NArchive@@YGXPAE_K@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ecx+8]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['?SetUInt64@N7z@NArchive@@YGXPAE_K@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
push ['eax']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['?SetUInt32@N7z@NArchive@@YGXPAEI@Z']
lea ['ecx,', '[ebp+var_20]']
mov ['edx,', '14h']
call ['@CrcCalc@8']
push ['eax']
lea ['edx,', '[ebp+var_24]']
push ['edx']
call ['?SetUInt32@N7z@NArchive@@YGXPAEI@Z']
push ['18h']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteDirect@COutArchive@N7z@NArchive@@AAEJPBXI@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetUInt32@N7z@NArchive@@YGXPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_196']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
shr ['ecx,', '8']
mov ['[ebp+arg_4],', 'ecx']
cmp ['[ebp+var_4],', '4']
jge ['short', 'loc_1A9']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['al,', 'byte', 'ptr', '[ebp+arg_4]']
mov ['[edx],', 'al']
jmp ['short', 'loc_184']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetUInt64@N7z@NArchive@@YGXPAE_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1E0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['cl,', '8']
call ['__aullshr']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+var_4],', '8']
jge ['short', 'loc_1F3']
mov ['cl,', 'byte', 'ptr', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['[edx],', 'cl']
jmp ['short', 'loc_1C4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Create@COutArchive@N7z@NArchive@@QAEJPAUISequentialOutStream@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@COutArchive@N7z@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '54h']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
movzx ['ecx,', '[ebp+arg_4]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_27F']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
call ['??I?$CMyComPtr@UIOutStream@@@@QAEPAPAUIOutStream@@XZ']
push ['eax']
push ['offset', '_IID_IOutStream']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '54h']
call ['??$QueryInterface@UIOutStream@@@?$CMyComPtr@UISequentialOutStream@@@@QBEJABU_GUID@@PAPAUIOutStream@@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
call ['??7?$CMyComPtr@UIOutStream@@@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_27F']
mov ['eax,', '80004001h']
jmp ['short', 'loc_2ED']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
call ['??7?$CMyComPtr@UIOutStream@@@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_298']
mov ['eax,', '80004005h']
jmp ['short', 'loc_2ED']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteSignature@COutArchive@N7z@NArchive@@AAEJXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2AE']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_2ED']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
push ['1']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2EB']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_2ED']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Close@COutArchive@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '54h']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
call ['?Release@?$CMyComPtr@UIOutStream@@@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SkipPrefixArchiveHeader@COutArchive@N7z@NArchive@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
push ['18h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['18h']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteDirect@COutArchive@N7z@NArchive@@AAEJPBXI@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetPos@COutArchive@N7z@NArchive@@ABE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3F3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
xor ['edx,', 'edx']
jmp ['short', 'loc_418']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jz ['short', 'loc_40B']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
jmp ['short', 'loc_418']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
call ['?GetPos@CWriteBufferLoc@N7z@NArchive@@QBEIXZ']
xor ['edx,', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WriteBytes@COutArchive@N7z@NArchive@@AAEXPBXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_45A']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
jmp ['short', 'loc_4A5']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+9]']
test ['eax,', 'eax']
jz ['short', 'loc_492']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?WriteBytes@COutBuffer@@QAEXPBXI@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['edx,', '[ebp+Src]']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+10h]']
call ['@CrcUpdate@12']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+10h],', 'eax']
jmp ['short', 'loc_4A5']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
call ['?WriteBytes@CWriteBufferLoc@N7z@NArchive@@QAEXPBXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4EA']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
jmp ['short', 'loc_53D']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+9]']
test ['eax,', 'eax']
jz ['short', 'loc_52D']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
movzx ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
xor ['edx,', '[eax+10h]']
and ['edx,', '0FFh']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+10h]']
shr ['eax,', '8']
xor ['eax,', 'dword', 'ptr', 'ds:_g_CrcTable[edx*4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+10h],', 'eax']
jmp ['short', 'loc_53D']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
call ['?WriteByte@CWriteBufferLoc@N7z@NArchive@@QAEXE@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteUInt32@COutArchive@N7z@NArchive@@AAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_579']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '4']
jge ['short', 'loc_597']
movzx ['ecx,', 'byte', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['edx,', '[ebp+arg_0]']
shr ['edx,', '8']
mov ['[ebp+arg_0],', 'edx']
jmp ['short', 'loc_570']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteUInt64@COutArchive@N7z@NArchive@@AAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_5D9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '8']
jge ['short', 'loc_601']
movzx ['ecx,', 'byte', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['cl,', '8']
call ['__aullshr']
mov ['dword', 'ptr', '[ebp+arg_0],', 'eax']
mov ['dword', 'ptr', '[ebp+arg_0+4],', 'edx']
jmp ['short', 'loc_5D0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_8+3],', '0']
mov ['byte', 'ptr', '[ebp+var_8+2],', '80h']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_657']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '8']
jge ['short', 'loc_6C0']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
imul ['ecx,', '7']
mov ['eax,', '1']
xor ['edx,', 'edx']
call ['__allshl']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'edx']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0+4]']
cmp ['ecx,', '[ebp+var_10]']
ja ['short', 'loc_6A9']
jb ['short', 'loc_68A']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_6A9']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '3']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
call ['__aullshr']
movzx ['eax,', 'al']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
or ['ecx,', 'eax']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'cl']
jmp ['short', 'loc_6C0']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_8+2]']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
or ['eax,', 'edx']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8+2]']
shr ['cl,', '1']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'cl']
jmp ['short', 'loc_64E']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_8+3]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
jmp ['short', 'loc_6D8']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jle ['short', 'loc_700']
movzx ['ecx,', 'byte', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['cl,', '8']
call ['__aullshr']
mov ['dword', 'ptr', '[ebp+arg_0],', 'eax']
mov ['dword', 'ptr', '[ebp+arg_0+4],', 'edx']
jmp ['short', 'loc_6CF']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteFolder@COutArchive@N7z@NArchive@@AAEXABUCFolder@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4Ch']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QBEIXZ']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_75B']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['loc_8D9']
mov ['ecx,', '[ebp+arg_0]']
call ['??B?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QBEPBUCCoderInfo@N7z@NArchive@@XZ']
mov ['ecx,', '[ebp+var_C]']
imul ['ecx,', '18h']
add ['eax,', 'ecx']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[edx+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_1C],', '1']
jmp ['short', 'loc_79F']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_1C],', '8']
jnb ['short', 'loc_7C8']
mov ['ecx,', '[ebp+var_1C]']
shl ['ecx,', '3']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
call ['__aullshr']
mov ['[ebp+var_4C],', 'eax']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_4C]']
or ['eax,', '[ebp+var_48]']
jnz ['short', 'loc_7C6']
jmp ['short', 'loc_7C8']
jmp ['short', 'loc_796']
mov ['ecx,', '[ebp+var_1C]']
and ['ecx,', '0Fh']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_7F5']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
mov ['cl,', '8']
call ['__aullshr']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_813']
mov ['ecx,', '[ebp+var_18]']
and ['ecx,', '0FFh']
mov ['edx,', '[ebp+var_14]']
and ['edx,', '0']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+eax+Src],', 'cl']
jmp ['short', 'loc_7D9']
mov ['cl,', 'byte', 'ptr', '[ebp+var_1C]']
mov ['byte', 'ptr', '[ebp+var_40+7],', 'cl']
mov ['ecx,', '[ebp+var_10]']
call ['?IsSimpleCoder@CCoderInfo@N7z@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['byte', 'ptr', '[ebp+var_40+6],', 'dl']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_40+6]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '10h']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_40+7]']
or ['ecx,', 'eax']
mov ['byte', 'ptr', '[ebp+var_40+7],', 'cl']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['dword', 'ptr', '[ebp+var_40],', 'eax']
mov ['edx,', 'dword', 'ptr', '[ebp+var_40]']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '20h']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_40+7]']
or ['eax,', 'edx']
mov ['byte', 'ptr', '[ebp+var_40+7],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+var_40+7]']
mov ['[ebp+Src],', 'cl']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
push ['edx']
lea ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBytes@COutArchive@N7z@NArchive@@AAEXPBXI@Z']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_40+6]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8A2']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+10h]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
cmp ['dword', 'ptr', '[ebp+var_40],', '0']
jnz ['short', 'loc_8AD']
jmp ['loc_752']
mov ['edx,', 'dword', 'ptr', '[ebp+var_40]']
xor ['eax,', 'eax']
push ['eax']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_40]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??B?$CBuffer@E@@QBEPBEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBytes@COutArchive@N7z@NArchive@@AAEXPBXI@Z']
jmp ['loc_752']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_8EB']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
call ['?Size@?$CObjArray2@UCBond@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['short', 'loc_934']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
call ['??B?$CObjArray2@UCBond@N7z@NArchive@@@@QBEPBUCBond@N7z@NArchive@@XZ']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[eax+ecx*8]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax]']
xor ['edx,', 'edx']
push ['edx']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax+4]']
xor ['edx,', 'edx']
push ['edx']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
jmp ['short', 'loc_8E2']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
call ['?Size@?$CObjArray2@I@@QBEIXZ']
cmp ['eax,', '1']
jbe ['short', 'loc_985']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_956']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
call ['?Size@?$CObjArray2@I@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['short', 'loc_985']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
call ['??B?$CObjArray2@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax+ecx*4]']
xor ['eax,', 'eax']
push ['eax']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
jmp ['short', 'loc_94D']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteBoolVector@COutArchive@N7z@NArchive@@AAEXABV?$CRecordVector@_N@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_8+3],', '0']
mov ['byte', 'ptr', '[ebp+var_8+2],', '80h']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_A08']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['short', 'loc_A5C']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['short', 'loc_A35']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+2]']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
or ['ecx,', 'eax']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'cl']
mov ['dl,', 'byte', 'ptr', '[ebp+var_8+2]']
shr ['dl,', '1']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'dl']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+2]']
test ['eax,', 'eax']
jnz ['short', 'loc_A5A']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['byte', 'ptr', '[ebp+var_8+2],', '80h']
mov ['byte', 'ptr', '[ebp+var_8+3],', '0']
jmp ['short', 'loc_9FF']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_8+2]']
cmp ['edx,', '80h']
jz ['short', 'loc_A75']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WritePropBoolVector@COutArchive@N7z@NArchive@@AAEXEABV?$CRecordVector@_N@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?Bv_GetSizeInBytes@N7z@NArchive@@YGIABV?$CRecordVector@_N@@@Z']
xor ['edx,', 'edx']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBoolVector@COutArchive@N7z@NArchive@@AAEXABV?$CRecordVector@_N@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Bv_GetSizeInBytes@N7z@NArchive@@YGIABV?$CRecordVector@_N@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
add ['eax,', '7']
shr ['eax,', '3']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?WriteHashDigests@COutArchive@N7z@NArchive@@AAEXABUCUInt32DefVector@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_B37']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['short', 'loc_B62']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['short', 'loc_B60']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_B2E']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_B6D']
jmp ['loc_BF4']
push ['0Ah']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnz ['short', 'loc_B90']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
jmp ['short', 'loc_BA6']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBoolVector@COutArchive@N7z@NArchive@@AAEXABV?$CRecordVector@_N@@@Z']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_BB8']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['short', 'loc_BF4']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_BF2']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@I@@QBEABII@Z']
mov ['eax,', '[eax]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteUInt32@COutArchive@N7z@NArchive@@AAEXI@Z']
jmp ['short', 'loc_BAF']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WritePackInfo@COutArchive@N7z@NArchive@@AAEX_KABV?$CRecordVector@_K@@ABUCUInt32DefVector@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?IsEmpty@?$CRecordVector@_K@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_C3B']
jmp ['loc_CC5']
push ['6']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
mov ['ecx,', '[ebp+arg_8]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
push ['9']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_C85']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_CAF']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CRecordVector@_K@@QBEAB_KI@Z']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[eax]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
jmp ['short', 'loc_C7C']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteHashDigests@COutArchive@N7z@NArchive@@AAEXABUCUInt32DefVector@23@@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?WriteUnpackInfo@COutArchive@N7z@NArchive@@AAEXABV?$CObjectVector@UCFolder@N7z@NArchive@@@@ABUCOutFolders@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@?$CObjectVector@UCFolder@N7z@NArchive@@@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_D12']
jmp ['loc_DDC']
push ['7']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
push ['0Bh']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCFolder@N7z@NArchive@@@@QBEIXZ']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_D56']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCFolder@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_D7A']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCFolder@N7z@NArchive@@@@QBEABUCFolder@N7z@NArchive@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteFolder@COutArchive@N7z@NArchive@@AAEXABUCFolder@23@@Z']
jmp ['short', 'loc_D4D']
push ['0Ch']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_D96']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '24h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['short', 'loc_DC6']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '24h']
call ['??A?$CRecordVector@_K@@QBEAB_KI@Z']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[eax]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
jmp ['short', 'loc_D8D']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteHashDigests@COutArchive@N7z@NArchive@@AAEXABUCUInt32DefVector@23@@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteSubStreamsInfo@COutArchive@N7z@NArchive@@AAEXABV?$CObjectVector@UCFolder@N7z@NArchive@@@@ABUCOutFolders@23@ABV?$CRecordVector@_K@@ABUCUInt32DefVector@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?WriteSubStreamsInfo@COutArchive@N7z@NArchive@@AAEXABV?$CObjectVector@UCFolder@N7z@NArchive@@@@ABUCOutFolders@23@ABV?$CRecordVector@_K@@ABUCUInt32DefVector@23@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '44h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '18h']
mov ['[ebp+var_14],', 'eax']
push ['8']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_E4F']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_18],', 'eax']
jnb ['short', 'loc_EB6']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['??A?$CRecordVector@I@@QBEABII@Z']
cmp ['dword', 'ptr', '[eax],', '1']
jz ['short', 'loc_EB4']
push ['0Dh']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_E89']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_18],', 'eax']
jnb ['short', 'loc_EB2']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??A?$CRecordVector@I@@QBEABII@Z']
mov ['edx,', '[eax]']
xor ['eax,', 'eax']
push ['eax']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
jmp ['short', 'loc_E80']
jmp ['short', 'loc_EB6']
jmp ['short', 'loc_E46']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_EC8']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_18],', 'eax']
jnb ['loc_F83']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['??A?$CRecordVector@I@@QBEABII@Z']
cmp ['dword', 'ptr', '[eax],', '1']
jbe ['loc_F7E']
push ['9']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_F11']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_18],', 'eax']
jnb ['short', 'loc_F7C']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??A?$CRecordVector@I@@QBEABII@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_F41']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[ebp+var_20]']
jnb ['short', 'loc_F7A']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
cmp ['edx,', '[ebp+var_20]']
jz ['short', 'loc_F6F']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CRecordVector@_K@@QBEAB_KI@Z']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[eax]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_F38']
jmp ['short', 'loc_F08']
jmp ['short', 'loc_F83']
jmp ['loc_EBF']
lea ['ecx,', '[ebp+var_40]']
call ['??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_48],', '0']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_FAB']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCFolder@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_18],', 'eax']
jnb ['loc_104D']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['??A?$CRecordVector@I@@QBEABII@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_4C],', 'eax']
cmp ['[ebp+var_4C],', '1']
jnz ['short', 'loc_FF1']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?ValidAndDefined@CUInt32DefVector@N7z@NArchive@@QBE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_FF1']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '1']
mov ['[ebp+var_48],', 'eax']
jmp ['short', 'loc_1048']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_100C']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '1']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_48]']
add ['edx,', '1']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_4C]']
jnb ['short', 'loc_1048']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
push ['edx']
lea ['ecx,', '[ebp+var_40]']
call ['?Add@?$CRecordVector@_N@@QAEI_N@Z']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@I@@QBEABII@Z']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_34]']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
jmp ['short', 'loc_FFA']
jmp ['loc_FA2']
lea ['edx,', '[ebp+var_40]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteHashDigests@COutArchive@N7z@NArchive@@AAEXABUCUInt32DefVector@23@@Z']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN33']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?SkipAlign@COutArchive@N7z@NArchive@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4Ch]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_10EB']
jmp ['short', 'loc_1167']
mov ['ecx,', '[ebp+var_4]']
call ['?GetPos@COutArchive@N7z@NArchive@@ABE_KXZ']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '1']
and ['edx,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'edx']
jnz ['short', 'loc_1109']
jmp ['short', 'loc_1167']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '2']
jnb ['short', 'loc_1121']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
push ['19h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_1153']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_1167']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
jmp ['short', 'loc_114A']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteAlignedBoolHeader@COutArchive@N7z@NArchive@@AAEXABV?$CRecordVector@_N@@IEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['dword', 'ptr', '[ebp+var_10],', 'eax']
mov ['dword', 'ptr', '[ebp+var_10+4],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_4],', 'eax']
jnz ['short', 'loc_11B4']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_11C0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?Bv_GetSizeInBytes@N7z@NArchive@@YGIABV?$CRecordVector@_N@@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_C]']
mul ['edx']
mov ['ecx,', '[ebp+var_8]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
add ['eax,', '2']
adc ['edx,', '0']
mov ['dword', 'ptr', '[ebp+var_10],', 'eax']
mov ['dword', 'ptr', '[ebp+var_10+4],', 'edx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_10+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_10]']
push ['ecx']
call ['?GetBigNumberSize@N7z@NArchive@@YGI_K@Z']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+eax+3]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SkipAlign@COutArchive@N7z@NArchive@@AAEXII@Z']
movzx ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['edx,', 'dword', 'ptr', '[ebp+var_10+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_4],', 'eax']
jnz ['short', 'loc_123A']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
jmp ['short', 'loc_1250']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBoolVector@COutArchive@N7z@NArchive@@AAEXABV?$CRecordVector@_N@@@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?GetBigNumberSize@N7z@NArchive@@YGI_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_129D']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '9']
jge ['short', 'loc_12D1']
mov ['ecx,', '[ebp+var_4]']
imul ['ecx,', '7']
mov ['eax,', '1']
xor ['edx,', 'edx']
call ['__allshl']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_8]']
ja ['short', 'loc_12CF']
jb ['short', 'loc_12CD']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ebp+var_C]']
jnb ['short', 'loc_12CF']
jmp ['short', 'loc_12D1']
jmp ['short', 'loc_1294']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteUInt64DefVector@COutArchive@N7z@NArchive@@AAEXABUCUInt64DefVector@23@E@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_1327']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['short', 'loc_1352']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['short', 'loc_1350']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_131E']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_135A']
jmp ['short', 'loc_13C3']
push ['8']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteAlignedBoolHeader@COutArchive@N7z@NArchive@@AAEXABV?$CRecordVector@_N@@IEI@Z']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_1383']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['short', 'loc_13C3']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_13C1']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@_K@@QBEAB_KI@Z']
mov ['edx,', '[eax+4]']
push ['edx']
mov ['eax,', '[eax]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteUInt64@COutArchive@N7z@NArchive@@AAEX_K@Z']
jmp ['short', 'loc_137A']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?EncodeStream@COutArchive@N7z@NArchive@@AAEJAAVCEncoder@23@ABV?$CBuffer@E@@AAV?$CRecordVector@_K@@AAV?$CObjectVector@UCFolder@N7z@NArchive@@@@AAUCOutFolders@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?EncodeStream@COutArchive@N7z@NArchive@@AAEJAAVCEncoder@23@ABV?$CBuffer@E@@AAV?$CRecordVector@_K@@AAV?$CObjectVector@UCFolder@N7z@NArchive@@@@AAUCOutFolders@23@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '4Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_58]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_4C],', '0']
jz ['short', 'loc_1442']
mov ['ecx,', '[ebp+var_4C]']
call ['??0CBufInStream@@QAE@XZ']
mov ['[ebp+var_58],', 'eax']
jmp ['short', 'loc_1449']
mov ['[ebp+var_58],', '0']
mov ['eax,', '[ebp+var_58]']
mov ['[ebp+var_48],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z']
mov ['[ebp+var_4],', '1']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?Init@CBufInStream@@QAEXPBEIPAUIUnknown@@@Z']
push ['1']
mov ['ecx,', '[ebp+arg_10]']
call ['?Add@?$CRecordVector@_N@@QAEI_N@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['edx,', 'esi']
mov ['ecx,', 'eax']
call ['@CrcCalc@8']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '0Ch']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
xor ['ecx,', 'ecx']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '24h']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ']
push ['eax']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Encode@CEncoder@N7z@NArchive@@QAEJPAUISequentialInStream@@PB_KAAUCFolder@23@AAV?$CRecordVector@_K@@AA_KPAUISequentialOutStream@@3PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_152A']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_50]']
jmp ['short', 'loc_1543']
mov ['[ebp+var_54],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_54]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '58h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0D8h']
push ['ebx']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+4Ch],', '1']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1628']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_165A']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
call ['??A?$CRecordVector@_K@@QBEAB_KI@Z']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_18]']
adc ['edx,', '[eax+4]']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_161F']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[eax+4],', 'edx']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '54h']
call ['?Size@?$CObjectVector@UCFolder@N7z@NArchive@@@@QBEIXZ']
test ['eax,', 'eax']
jbe ['loc_178B']
push ['4']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
push ['ecx']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['?WritePackInfo@COutArchive@N7z@NArchive@@AAEX_KABV?$CRecordVector@_K@@ABUCUInt32DefVector@23@@Z']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '54h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteUnpackInfo@COutArchive@N7z@NArchive@@AAEXABV?$CObjectVector@UCFolder@N7z@NArchive@@@@ABUCOutFolders@23@@Z']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_16E9']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_174B']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_54]']
movzx ['ecx,', 'byte', 'ptr', '[eax+10h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1718']
jmp ['short', 'loc_16E0']
mov ['edx,', '[ebp+var_54]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[edx]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
mov ['edx,', '[ebp+var_54]']
movzx ['eax,', 'byte', 'ptr', '[edx+12h]']
push ['eax']
lea ['ecx,', '[ebp+var_4C]']
call ['?Add@?$CRecordVector@_N@@QAEI_N@Z']
mov ['ecx,', '[ebp+var_54]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
lea ['ecx,', '[ebp+var_40]']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
jmp ['short', 'loc_16E0']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '54h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteSubStreamsInfo@COutArchive@N7z@NArchive@@AAEXABV?$CObjectVector@UCFolder@N7z@NArchive@@@@ABUCOutFolders@23@ABV?$CRecordVector@_K@@ABUCUInt32DefVector@23@@Z']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['?IsEmpty@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_17AC']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
jmp ['loc_1D37']
push ['5']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
xor ['edx,', 'edx']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
lea ['ecx,', '[ebp+var_64]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z']
mov ['[ebp+var_6C],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1809']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_185B']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
movzx ['edx,', 'byte', 'ptr', '[eax+10h]']
test ['edx,', 'edx']
jz ['short', 'loc_1841']
mov ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1859']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['ecx,', '[ebp+var_64]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['byte', 'ptr', '[eax],', '1']
mov ['edx,', '[ebp+var_6C]']
add ['edx,', '1']
mov ['[ebp+var_6C],', 'edx']
jmp ['short', 'loc_1800']
cmp ['[ebp+var_6C],', '0']
jz ['loc_19E5']
lea ['eax,', '[ebp+var_64]']
push ['eax']
push ['0Eh']
mov ['ecx,', '[ebp+var_10]']
call ['?WritePropBoolVector@COutArchive@N7z@NArchive@@AAEXEABV?$CRecordVector@_N@@@Z']
lea ['ecx,', '[ebp+var_7C]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_90]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
lea ['ecx,', '[ebp+var_7C]']
call ['?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z']
mov ['edx,', '[ebp+var_6C]']
push ['edx']
lea ['ecx,', '[ebp+var_90]']
call ['?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z']
mov ['[ebp+var_95],', '0']
mov ['[ebp+var_96],', '0']
mov ['[ebp+var_9C],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_18D3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['loc_1995']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_A0],', 'eax']
mov ['edx,', '[ebp+var_A0]']
movzx ['eax,', 'byte', 'ptr', '[edx+10h]']
test ['eax,', 'eax']
jz ['short', 'loc_190C']
jmp ['short', 'loc_18CA']
mov ['ecx,', '[ebp+var_A0]']
movzx ['ebx,', 'byte', 'ptr', '[ecx+11h]']
neg ['ebx']
sbb ['ebx,', 'ebx']
add ['ebx,', '1']
mov ['edx,', '[ebp+var_9C]']
push ['edx']
lea ['ecx,', '[ebp+var_7C]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['[eax],', 'bl']
mov ['eax,', '[ebp+var_A0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1943']
mov ['[ebp+var_95],', '1']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsItemAnti@CArchiveDatabaseOut@N7z@NArchive@@QBE_NI@Z']
mov ['[ebp+var_A1],', 'al']
mov ['eax,', '[ebp+var_9C]']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['cl,', '[ebp+var_A1]']
mov ['[eax],', 'cl']
movzx ['edx,', '[ebp+var_A1]']
test ['edx,', 'edx']
jz ['short', 'loc_1981']
mov ['[ebp+var_96],', '1']
mov ['eax,', '[ebp+var_9C]']
add ['eax,', '1']
mov ['[ebp+var_9C],', 'eax']
jmp ['loc_18CA']
movzx ['ecx,', '[ebp+var_95]']
test ['ecx,', 'ecx']
jz ['short', 'loc_19AE']
lea ['edx,', '[ebp+var_7C]']
push ['edx']
push ['0Fh']
mov ['ecx,', '[ebp+var_10]']
call ['?WritePropBoolVector@COutArchive@N7z@NArchive@@AAEXEABV?$CRecordVector@_N@@@Z']
movzx ['eax,', '[ebp+var_96]']
test ['eax,', 'eax']
jz ['short', 'loc_19CA']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
push ['10h']
mov ['ecx,', '[ebp+var_10]']
call ['?WritePropBoolVector@COutArchive@N7z@NArchive@@AAEXEABV?$CRecordVector@_N@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_90]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['dword', 'ptr', '[ebp+var_AC+4],', '0']
mov ['dword', 'ptr', '[ebp+var_AC],', '0']
mov ['[ebp+var_B0],', '0']
jmp ['short', 'loc_1A23']
mov ['edx,', '[ebp+var_B0]']
add ['edx,', '1']
mov ['[ebp+var_B0],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_B0],', 'eax']
jnb ['short', 'loc_1A8C']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['[ebp+var_B4],', 'eax']
mov ['ecx,', '[ebp+var_B4]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1A6F']
mov ['edx,', 'dword', 'ptr', '[ebp+var_AC+4]']
add ['edx,', '1']
mov ['dword', 'ptr', '[ebp+var_AC+4],', 'edx']
mov ['ecx,', '[ebp+var_B4]']
call ['?Len@UString@@QBEIXZ']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_AC]']
lea ['edx,', '[ecx+eax*2+2]']
mov ['dword', 'ptr', '[ebp+var_AC],', 'edx']
jmp ['short', 'loc_1A14']
cmp ['dword', 'ptr', '[ebp+var_AC+4],', '0']
jbe ['loc_1BA9']
mov ['eax,', 'dword', 'ptr', '[ebp+var_AC]']
add ['eax,', '1']
mov ['dword', 'ptr', '[ebp+var_AC],', 'eax']
push ['10h']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_AC]']
xor ['edx,', 'edx']
push ['edx']
push ['ecx']
call ['?GetBigNumberSize@N7z@NArchive@@YGI_K@Z']
add ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?SkipAlign@COutArchive@N7z@NArchive@@AAEXII@Z']
push ['11h']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['eax,', 'dword', 'ptr', '[ebp+var_AC]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['[ebp+var_B8],', '0']
jmp ['short', 'loc_1B06']
mov ['edx,', '[ebp+var_B8]']
add ['edx,', '1']
mov ['[ebp+var_B8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_B8],', 'eax']
jnb ['loc_1BA9']
mov ['eax,', '[ebp+var_B8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['[ebp+var_BC],', 'eax']
mov ['[ebp+var_C0],', '0']
jmp ['short', 'loc_1B50']
mov ['ecx,', '[ebp+var_C0]']
add ['ecx,', '1']
mov ['[ebp+var_C0],', 'ecx']
mov ['ecx,', '[ebp+var_BC]']
call ['?Len@UString@@QBEIXZ']
cmp ['[ebp+var_C0],', 'eax']
ja ['short', 'loc_1BA4']
mov ['ecx,', '[ebp+var_BC]']
call ['??BUString@@QBEPB_WXZ']
mov ['edx,', '[ebp+var_C0]']
mov ['ax,', '[eax+edx*2]']
mov ['[ebp+var_C4],', 'ax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_C4]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
movzx ['edx,', '[ebp+var_C4]']
sar ['edx,', '8']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
jmp ['short', 'loc_1B41']
jmp ['loc_1AF7']
push ['12h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '78h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteUInt64DefVector@COutArchive@N7z@NArchive@@AAEXABUCUInt64DefVector@23@E@Z']
push ['13h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '90h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteUInt64DefVector@COutArchive@N7z@NArchive@@AAEXABUCUInt64DefVector@23@E@Z']
push ['14h']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0A8h']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteUInt64DefVector@COutArchive@N7z@NArchive@@AAEXABUCUInt64DefVector@23@E@Z']
push ['18h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0C0h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteUInt64DefVector@COutArchive@N7z@NArchive@@AAEXABUCUInt64DefVector@23@E@Z']
lea ['ecx,', '[ebp+var_D4]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '5']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
push ['eax']
lea ['ecx,', '[ebp+var_D4]']
call ['?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z']
mov ['[ebp+var_DC],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1C3A']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_1C95']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['al,', '[eax+13h]']
mov ['[ebp+var_DD],', 'al']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['ecx,', '[ebp+var_D4]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['dl,', '[ebp+var_DD]']
mov ['[eax],', 'dl']
movzx ['eax,', '[ebp+var_DD]']
test ['eax,', 'eax']
jz ['short', 'loc_1C93']
mov ['ecx,', '[ebp+var_DC]']
add ['ecx,', '1']
mov ['[ebp+var_DC],', 'ecx']
jmp ['short', 'loc_1C31']
cmp ['[ebp+var_DC],', '0']
jz ['short', 'loc_1D11']
push ['4']
push ['15h']
mov ['edx,', '[ebp+var_DC]']
push ['edx']
lea ['eax,', '[ebp+var_D4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteAlignedBoolHeader@COutArchive@N7z@NArchive@@AAEXABV?$CRecordVector@_N@@IEI@Z']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1CCA']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_1D11']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_E4],', 'eax']
mov ['eax,', '[ebp+var_E4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+13h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1D0F']
mov ['edx,', '[ebp+var_E4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteUInt32@COutArchive@N7z@NArchive@@AAEXI@Z']
jmp ['short', 'loc_1CC1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_D4]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN60']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1F4h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_200]']
mov ['ecx,', '7Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?CheckNumFiles@CArchiveDatabaseOut@N7z@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1E6D']
mov ['eax,', '80004005h']
jmp ['loc_232C']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@CArchiveDatabaseOut@N7z@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1EA9']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_2C],', '0']
mov ['dword', 'ptr', '[ebp+var_20],', '0']
mov ['dword', 'ptr', '[ebp+var_20+4],', '0']
xor ['edx,', 'edx']
xor ['ecx,', 'ecx']
call ['@CrcCalc@8']
mov ['[ebp+var_28],', 'eax']
jmp ['loc_229D']
mov ['[ebp+var_31],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1EC9']
mov ['ecx,', '[ebp+arg_4]']
call ['?IsEmpty@CCompressionMethodMode@N7z@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1EC9']
mov ['[ebp+arg_4],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1EE8']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+21h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1EE4']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_1EE8']
mov ['[ebp+var_31],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '54h']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?Init@COutBuffer@@QAEXXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[ecx+10h],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
mov ['al,', '[ebp+var_31]']
mov ['[edx+8],', 'al']
mov ['ecx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[ecx+9],', '1']
mov ['edx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z']
movzx ['edx,', '[ebp+var_31]']
test ['edx,', 'edx']
jz ['loc_225B']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
lea ['ecx,', '[ebp+var_40]']
call ['??0?$CBuffer@E@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
lea ['ecx,', '[ebp+var_40]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '40h']
call ['?Init@CWriteBufferLoc@N7z@NArchive@@QAEXPAEI@Z']
mov ['ecx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[edx+9],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '40h']
call ['?GetPos@CWriteBufferLoc@N7z@NArchive@@QBEIXZ']
mov ['edx,', '[ebp+var_14]']
cmp ['[edx+0Ch],', 'eax']
jz ['short', 'loc_1FD0']
mov ['[ebp+var_1CC],', '80004005h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_1CC]']
jmp ['loc_232C']
lea ['ecx,', '[ebp+var_78]']
call ['??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax+21h]']
mov ['[ebp+var_57],', 'cl']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '24h']
push ['edx']
lea ['ecx,', '[ebp+var_54]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2009']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_1F4],', 'edx']
jmp ['short', 'loc_2012']
lea ['eax,', '[ebp+var_78]']
mov ['[ebp+var_1F4],', 'eax']
mov ['ecx,', '[ebp+var_1F4]']
mov ['[ebp+var_1D0],', 'ecx']
mov ['edx,', '[ebp+var_1D0]']
push ['edx']
lea ['ecx,', '[ebp+var_134]']
call ['??0CEncoder@N7z@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_148]']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_15C]']
call ['??0?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_194]']
call ['??0COutFolders@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['eax,', '[ebp+var_194]']
push ['eax']
lea ['ecx,', '[ebp+var_15C]']
push ['ecx']
lea ['edx,', '[ebp+var_148]']
push ['edx']
lea ['eax,', '[ebp+var_40]']
push ['eax']
lea ['ecx,', '[ebp+var_134]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?EncodeStream@COutArchive@N7z@NArchive@@AAEJAAVCEncoder@23@ABV?$CBuffer@E@@AAV?$CRecordVector@_K@@AAV?$CObjectVector@UCFolder@N7z@NArchive@@@@AAUCOutFolders@23@@Z']
mov ['[ebp+var_19C],', 'eax']
cmp ['[ebp+var_19C],', '0']
jz ['short', 'loc_2106']
mov ['edx,', '[ebp+var_19C]']
mov ['[ebp+var_1D4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_194]']
call ['??1COutFolders@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_15C]']
call ['??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_148]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_134]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_78]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_1D4]']
jmp ['loc_232C']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+9],', '1']
lea ['ecx,', '[ebp+var_15C]']
call ['?Size@?$CObjectVector@UCFolder@N7z@NArchive@@@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_2137']
mov ['[ebp+var_1D8],', '1']
push ['offset', '__TI1H']
lea ['ecx,', '[ebp+var_1D8]']
push ['ecx']
call ['__CxxThrowException@8']
push ['0']
push ['17h']
mov ['ecx,', '[ebp+var_14]']
call ['?WriteID@COutArchive@N7z@NArchive@@AAEX_K@Z']
lea ['ecx,', '[ebp+var_1F0]']
call ['??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_1F8],', 'eax']
mov ['edx,', '[ebp+var_1F8]']
mov ['[ebp+var_1FC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_1FC]']
push ['eax']
lea ['ecx,', '[ebp+var_148]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_20+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?WritePackInfo@COutArchive@N7z@NArchive@@AAEX_KABV?$CRecordVector@_K@@ABUCUInt32DefVector@23@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_1F0]']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
lea ['ecx,', '[ebp+var_194]']
push ['ecx']
lea ['edx,', '[ebp+var_15C]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?WriteUnpackInfo@COutArchive@N7z@NArchive@@AAEXABV?$CObjectVector@UCFolder@N7z@NArchive@@@@ABUCOutFolders@23@@Z']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?WriteByte@COutArchive@N7z@NArchive@@AAEXE@Z']
mov ['[ebp+var_1A0],', '0']
jmp ['short', 'loc_21CC']
mov ['eax,', '[ebp+var_1A0]']
add ['eax,', '1']
mov ['[ebp+var_1A0],', 'eax']
lea ['ecx,', '[ebp+var_148]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+var_1A0],', 'eax']
jnb ['short', 'loc_2204']
mov ['ecx,', '[ebp+var_1A0]']
push ['ecx']
lea ['ecx,', '[ebp+var_148]']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['edx,', 'dword', 'ptr', '[ebp+var_20]']
add ['edx,', '[eax]']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_20+4]']
adc ['ecx,', '[eax+4]']
mov ['dword', 'ptr', '[ebp+var_20],', 'edx']
mov ['dword', 'ptr', '[ebp+var_20+4],', 'ecx']
jmp ['short', 'loc_21BD']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_194]']
call ['??1COutFolders@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_15C]']
call ['??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_148]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_134]']
call ['??1CEncoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_78]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?Flush@COutBuffer@@QAEJXZ']
mov ['[ebp+var_1A4],', 'eax']
cmp ['[ebp+var_1A4],', '0']
jz ['short', 'loc_2280']
mov ['eax,', '[ebp+var_1A4]']
jmp ['loc_232C']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+10h]']
xor ['eax,', '0FFFFFFFFh']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_2C],', 'edx']
mov ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_1B8],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_1B4],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_1B0],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_20]']
mov ['[ebp+var_1C0],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_20+4]']
mov ['[ebp+var_1BC],', 'edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '50h']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_200],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[eax]']
push ['edx']
mov ['eax,', '[ebp+var_200]']
push ['eax']
mov ['ecx,', '[ebp+var_200]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C8],', 'eax']
cmp ['[ebp+var_1C8],', '0']
jz ['short', 'loc_231D']
mov ['eax,', '[ebp+var_1C8]']
jmp ['short', 'loc_232C']
lea ['ecx,', '[ebp+var_1C0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?WriteStartHeader@COutArchive@N7z@NArchive@@AAEJABUCStartHeader@23@@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN39']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '200h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SetItem@CUInt64DefVector@N7z@NArchive@@QAEXI_N_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_2447']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?Add@?$CRecordVector@_N@@QAEI_N@Z']
jmp ['short', 'loc_242E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax],', 'cl']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jnz ['short', 'loc_2462']
jmp ['short', 'loc_249D']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_2483']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
jmp ['short', 'loc_2462']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_8]']
mov ['[eax],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_8+4]']
mov ['[eax+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?AddFile@CArchiveDatabaseOut@N7z@NArchive@@QAEXABUCFileItem@23@ABUCFileItem2@23@ABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[eax]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '78h']
call ['?SetItem@CUInt64DefVector@N7z@NArchive@@QAEXI_N_K@Z']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[eax+8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+21h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '90h']
call ['?SetItem@CUInt64DefVector@N7z@NArchive@@QAEXI_N_K@Z']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+22h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0A8h']
call ['?SetItem@CUInt64DefVector@N7z@NArchive@@QAEXI_N_K@Z']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[eax+18h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+23h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C0h']
call ['?SetItem@CUInt64DefVector@N7z@NArchive@@QAEXI_N_K@Z']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?SetItem_Anti@CArchiveDatabaseOut@N7z@NArchive@@QAEXI_N@Z']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['ecx,', '[ebp+arg_0]']
sub ['esp,', '18h']
mov ['edx,', 'esp']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ecx+10h]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ecx+14h]']
mov ['[edx+14h],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '60h']
call ['?Add@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEIUCFileItem@N7z@NArchive@@@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?WriteDirect@COutArchive@N7z@NArchive@@AAEJPBXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '54h']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetPos@CWriteBufferLoc@N7z@NArchive@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WriteBytes@COutBuffer@@QAEXPBXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2651']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_266D']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
jmp ['short', 'loc_2648']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteByte@COutBuffer@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_26C4']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteBytes@CWriteBufferLoc@N7z@NArchive@@QAEXPBXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_26F3']
jmp ['short', 'loc_2744']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+8]']
cmp ['[ebp+Size],', 'edx']
jbe ['short', 'loc_2719']
mov ['[ebp+var_8],', '1']
push ['offset', '__TI1H']
lea ['eax,', '[ebp+var_8]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+8]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+Size]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'ecx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteByte@CWriteBufferLoc@N7z@NArchive@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_27CE']
mov ['[ebp+var_8],', '1']
push ['offset', '__TI1H']
lea ['eax,', '[ebp+var_8]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
mov ['al,', '[ebp+arg_0]']
mov ['[edx+ecx],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8],', 'edx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsSimpleCoder@CCoderInfo@N7z@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+10h],', '1']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?WriteSubStreamsInfo@COutArchive@N7z@NArchive@@AAEXABV?$CObjectVector@UCFolder@N7z@NArchive@@@@ABUCOutFolders@23@ABV?$CRecordVector@_K@@ABUCUInt32DefVector@23@@Z$0 proc near
lea ['ecx,', '[ebp-40h]']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$?WriteSubStreamsInfo@COutArchive@N7z@NArchive@@AAEXABV?$CObjectVector@UCFolder@N7z@NArchive@@@@ABUCOutFolders@23@ABV?$CRecordVector@_K@@ABUCUInt32DefVector@23@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?WriteSubStreamsInfo@COutArchive@N7z@NArchive@@AAEXABV?$CObjectVector@UCFolder@N7z@NArchive@@@@ABUCOutFolders@23@ABV?$CRecordVector@_K@@ABUCUInt32DefVector@23@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?EncodeStream@COutArchive@N7z@NArchive@@AAEJAAVCEncoder@23@ABV?$CBuffer@E@@AAV?$CRecordVector@_K@@AAV?$CObjectVector@UCFolder@N7z@NArchive@@@@AAUCOutFolders@23@@Z$0 proc near
mov ['eax,', '[ebp-4Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?EncodeStream@COutArchive@N7z@NArchive@@AAEJAAVCEncoder@23@ABV?$CBuffer@E@@AAV?$CRecordVector@_K@@AAV?$CObjectVector@UCFolder@N7z@NArchive@@@@AAUCOutFolders@23@@Z$1 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$?EncodeStream@COutArchive@N7z@NArchive@@AAEJAAVCEncoder@23@ABV?$CBuffer@E@@AAV?$CRecordVector@_K@@AAV?$CObjectVector@UCFolder@N7z@NArchive@@@@AAUCOutFolders@23@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-58h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?EncodeStream@COutArchive@N7z@NArchive@@AAEJAAVCEncoder@23@ABV?$CBuffer@E@@AAV?$CRecordVector@_K@@AAV?$CObjectVector@UCFolder@N7z@NArchive@@@@AAUCOutFolders@23@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__unwindfunclet$?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z$1 proc near
lea ['ecx,', '[ebp-4Ch]']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z$2 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z$3 proc near
lea ['ecx,', '[ebp-7Ch]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z$4 proc near
lea ['ecx,', '[ebp-90h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z$5 proc near
lea ['ecx,', '[ebp-0D4h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?WriteHeader@COutArchive@N7z@NArchive@@AAEXABUCArchiveDatabaseOut@23@AA_K@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z$0 proc near
lea ['ecx,', '[ebp-40h]']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__unwindfunclet$?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z$1 proc near
lea ['ecx,', '[ebp-78h]']
jmp ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z$2 proc near
lea ['ecx,', '[ebp-134h]']
jmp ['??1CEncoder@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z$3 proc near
lea ['ecx,', '[ebp-148h]']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__unwindfunclet$?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z$4 proc near
lea ['ecx,', '[ebp-15Ch]']
jmp ['??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z$5 proc near
lea ['ecx,', '[ebp-194h]']
jmp ['??1COutFolders@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z$6 proc near
lea ['ecx,', '[ebp-1F0h]']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-200h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z']
jmp ['___CxxFrameHandler3']
endp
?ValidAndDefined@CUInt32DefVector@N7z@NArchive@@QBE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_2A84']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2A84']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_2A8B']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Init@CBufInStream@@QAEXPBEIPAUIUnknown@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+18h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??0CBufInStream@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CBufInStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??0?$CMyComPtr@UIUnknown@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CBufInStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2EE8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_2F27']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2F04']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_2F27']
push ['offset', '_IID_IInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2F20']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_2F27']
mov ['eax,', '80004002h']
jmp ['short', 'loc_2F38']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CBufInStream@@UAGKXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CBufInStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2FEE']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_3018']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_300F']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCBufInStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_3016']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCBufInStream@@QAEPAXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBufInStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3052']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CBufInStream@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IInStream@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsItemAnti@CArchiveDatabaseOut@N7z@NArchive@@QBE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_31F8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_31F8']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_31FF']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsEmpty@CCompressionMethodMode@N7z@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_324E']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+21h]']
test ['edx,', 'edx']
jnz ['short', 'loc_324E']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_3255']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+19h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+1Ch],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+20h],', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+21h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CWriteBufferLoc@N7z@NArchive@@QAEXPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsEmpty@CArchiveDatabaseOut@N7z@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['?IsEmpty@?$CRecordVector@_K@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3424']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?IsEmpty@?$CRecordVector@I@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3424']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '54h']
call ['?IsEmpty@?$CObjectVector@UCFolder@N7z@NArchive@@@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3424']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '60h']
call ['?IsEmpty@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3424']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_342B']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CheckNumFiles@CArchiveDatabaseOut@N7z@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '60h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '78h']
call ['?CheckSize@CUInt64DefVector@N7z@NArchive@@QBE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_34F7']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '90h']
call ['?CheckSize@CUInt64DefVector@N7z@NArchive@@QBE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_34F7']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0A8h']
call ['?CheckSize@CUInt64DefVector@N7z@NArchive@@QBE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_34F7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C0h']
call ['?CheckSize@CUInt64DefVector@N7z@NArchive@@QBE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_34F7']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jz ['short', 'loc_34EE']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_34F7']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_34FE']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CheckSize@CUInt64DefVector@N7z@NArchive@@QBE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_3549']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_3549']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3550']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteID@COutArchive@N7z@NArchive@@AAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteNumber@COutArchive@N7z@NArchive@@AAEX_K@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutFolders@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COutFolders@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COutFolders@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0COutFolders@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??0COutFolders@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COutFolders@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1COutFolders@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COutFolders@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COutFolders@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1COutFolders@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??1COutFolders@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COutFolders@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?SetItem_Anti@CArchiveDatabaseOut@N7z@NArchive@@QAEXI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_389B']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['?Add@?$CRecordVector@_N@@QAEI_N@Z']
jmp ['short', 'loc_3876']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax],', 'cl']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0?$CBuffer@E@@QAE@I@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QAEPAEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QBEPBEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_39FA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3A38']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_3A5B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3AB3']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3B08']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_3B2B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsEmpty@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3C26']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3C1D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCMethodFull@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_3C24']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_3BE2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3D44']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3D8A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@I@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@I@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@I@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@I@@QBEABII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_K@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@_K@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@_K@@QAEI_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??A?$CRecordVector@_K@@QBEAB_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@_K@@QAEAA_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_N@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@_N@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@_N@@QAEI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@_N@@QBEAB_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@_N@@QAEAA_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QBEPBUCCoderInfo@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray2@UCBond@N7z@NArchive@@@@QBEPBUCBond@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjArray2@UCBond@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray2@I@@QBEPBIXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjArray2@I@@QBEIXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCFolder@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CObjectVector@UCFolder@N7z@NArchive@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCFolder@N7z@NArchive@@@@QBEABUCFolder@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_4303']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CFolder@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_430A']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@UCFolder@N7z@NArchive@@@@QAEAAUCFolder@N7z@NArchive@@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CFolder@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CFolder@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0?$CObjArray2@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CFolder@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??0CFolder@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??0CFolder@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CFolder@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_44E1']
push ['3']
mov ['ecx,', '[ebp+var_8]']
call ['??_ECCoderInfo@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_44E8']
mov ['[ebp+var_10],', '0']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray2@I@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4616']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_460D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCFolder@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4614']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_45D2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEIUCFileItem@N7z@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@UCFileItem@N7z@NArchive@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '18h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_14]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_47F8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_47FF']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
?Release@?$CMyComPtr@UIOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_48C3']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIOutStream@@@@QAEPAPAUIOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UIOutStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCMethodFull@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMethodFull@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_494E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_ECCoderInfo@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_49B0']
push ['offset', '??1CCoderInfo@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx-4]']
push ['edx']
push ['18h']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1']
jz ['short', 'loc_49A8']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '4']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '4']
jmp ['short', 'loc_49CF']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCoderInfo@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_49CC']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCFolder@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFolder@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4A0A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_H@YGXPAXIHP6EPAX0@Z@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
js ['short', 'loc_4A49']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_4A24']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
??1CMethodFull@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMethodProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCoderInfo@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CBuffer@E@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFolder@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CFolder@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1?$CObjArray2@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CFolder@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CFolder@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??1CFolder@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CFolder@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjArray2@I@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCProp@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4DDA']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_4DD1']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4DD8']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_4D96']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??_GCProp@@QAEPAXI@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4E7E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_4F94']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_4F6F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_5058']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_5033']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_5105']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_50E0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CRecordVector@_N@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@_N@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_518C']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clear@?$CRecordVector@_N@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveOnePosition@?$CRecordVector@UCFileItem@N7z@NArchive@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReserveOnePosition@?$CRecordVector@UCFileItem@N7z@NArchive@@@@AAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_52D7']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_1C]']
mov ['edx,', '18h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_5273']
push ['offset', '??0CFileItem@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
push ['18h']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['??_H@YGXPAXIHP6EPAX0@Z@Z']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_527A']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+Dst],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jz ['short', 'loc_52B2']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '18h']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+Dst]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+8],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?ReserveOnePosition@?$CRecordVector@UCFileItem@N7z@NArchive@@@@AAEXXZ$0 proc near
mov ['eax,', '[ebp-24h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?ReserveOnePosition@?$CRecordVector@UCFileItem@N7z@NArchive@@@@AAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReserveOnePosition@?$CRecordVector@UCFileItem@N7z@NArchive@@@@AAEXXZ']
jmp ['___CxxFrameHandler3']
endp
??0CFileItem@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+10h],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+11h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+12h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+13h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_542C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_5407']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$QueryInterface@UIOutStream@@@?$CMyComPtr@UISequentialOutStream@@@@QBEJABU_GUID@@PAPAUIOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

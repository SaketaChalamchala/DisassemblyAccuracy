?Clear@CStatInfo@NXz@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['dword', 'ptr', '[ecx+24h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+28h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+29h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+2Ah],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2Bh],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+2Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+2Dh],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2Eh],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+2Fh],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+30h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+31h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CHandler@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CHandler@NXz@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IInArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0IArchiveOpenSeq@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0IOutArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0ISetProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0CMultiMethodProps@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '58h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CHandler@NXz@NArchive@@6BIInArchive@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CHandler@NXz@NArchive@@6BIArchiveOpenSeq@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CHandler@NXz@NArchive@@6BIOutArchive@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CHandler@NXz@NArchive@@6BISetProperties@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??0CStatInfo@NXz@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '9Ch']
call ['??0?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0A0h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0A8h']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
call ['?Init@CHandler@NXz@NArchive@@AAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetNumberOfProperties@CHandler@NXz@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetPropertyInfo@CHandler@NXz@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '3']
jb ['short', 'loc_324']
mov ['eax,', '80070057h']
jmp ['short', 'loc_351']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_kProps[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
movzx ['dx,', 'byte', 'ptr', 'ds:?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['14h']
endp
?GetNumberOfArchiveProperties@CHandler@NXz@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetArchivePropertyInfo@CHandler@NXz@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '3']
jb ['short', 'loc_394']
mov ['eax,', '80070057h']
jmp ['short', 'loc_3C1']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_kArcProps[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
movzx ['dx,', 'byte', 'ptr', 'ds:?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['14h']
endp
?GetArchiveProperty@CHandler@NXz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetArchiveProperty@CHandler@NXz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '34h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_38],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
sub ['ecx,', '16h']
mov ['[ebp+var_3C],', 'ecx']
cmp ['[ebp+var_3C],', '38h']
ja ['$LN19']
mov ['edx,', '[ebp+var_3C]']
movzx ['eax,', 'ds:$LN30[edx]']
jmp ['ds:$LN35[eax*4]']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9Ah]']
test ['edx,', 'edx']
jz ['short', 'loc_470']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+74h]']
push ['ecx']
mov ['edx,', '[eax+70h]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN19']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+89h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_496']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+7Ch]']
push ['eax']
mov ['ecx,', '[edx+78h]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN19']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+8Ah]']
test ['eax,', 'eax']
jz ['short', 'loc_4C2']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+84h]']
push ['edx']
mov ['eax,', '[ecx+80h]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN19']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+88h]']
test ['edx,', 'edx']
jz ['short', 'loc_4E8']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
mov ['edx,', '[eax+68h]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN19']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0A8h']
call ['?IsEmpty@AString@@QBE_NXZ']
mov ['[ebp+var_3D],', 'al']
movzx ['eax,', '[ebp+var_3D]']
test ['eax,', 'eax']
jnz ['short', 'loc_523']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0A8h']
call ['??BAString@@QBEPBDXZ']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z']
jmp ['$LN19']
mov ['[ebp+var_2C],', '0']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+98h]']
test ['eax,', 'eax']
jnz ['short', 'loc_546']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+8Ch]']
test ['eax,', 'eax']
jz ['short', 'loc_55D']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '20h']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+8Dh]']
test ['eax,', 'eax']
jz ['short', 'loc_574']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '40h']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+8Fh]']
test ['eax,', 'eax']
jz ['short', 'loc_58B']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '2']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+8Eh]']
test ['eax,', 'eax']
jz ['short', 'loc_5A5']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '80h']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+90h]']
test ['eax,', 'eax']
jz ['short', 'loc_5BF']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '200h']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+91h]']
test ['eax,', 'eax']
jz ['short', 'loc_5D9']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '400h']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_30],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_62F']
endp
__catch$?GetArchiveProperty@CHandler@NXz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-34h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN28']
retn
endp
?GetNumberOfItems@CHandler@NXz@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetProperty@CHandler@NXz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetProperty@CHandler@NXz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '30h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_34],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '7']
jz ['short', 'loc_75F']
cmp ['[ebp+var_38],', '8']
jz ['short', 'loc_782']
cmp ['[ebp+var_38],', '16h']
jz ['short', 'loc_7A5']
jmp ['short', 'loc_7DB']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+88h]']
test ['edx,', 'edx']
jz ['short', 'loc_780']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
mov ['edx,', '[eax+68h]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['short', 'loc_7DB']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9Ah]']
test ['ecx,', 'ecx']
jz ['short', 'loc_7A3']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+74h]']
push ['eax']
mov ['ecx,', '[edx+70h]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['short', 'loc_7DB']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0A8h']
call ['?IsEmpty@AString@@QBE_NXZ']
mov ['[ebp+var_39],', 'al']
movzx ['edx,', '[ebp+var_39]']
test ['edx,', 'edx']
jnz ['short', 'loc_7DB']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0A8h']
call ['??BAString@@QBEPBDXZ']
mov ['[ebp+var_40],', 'eax']
mov ['eax,', '[ebp+var_40]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_2C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_825']
endp
__catch$?GetProperty@CHandler@NXz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-30h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN16_0']
retn
endp
??0COpenCallbackWrap@NXz@NArchive@@QAE@PAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '?OpenCallbackProgress@NXz@NArchive@@YGHPAX_K1@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?OpenCallbackProgress@NXz@NArchive@@YGHPAX_K1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?Open2@CHandler@NXz@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Open2@CHandler@NXz@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
mov ['eax,', '41B8h']
call ['__chkstk']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_41C4]']
mov ['ecx,', '106Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+99h],', '1']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_3C]']
call ['??0CSeqInStreamWrap@@QAE@PAUISequentialInStream@@@Z']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_Xz_ReadHeader@8']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_996']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['?SRes_to_Open_HRESULT@NXz@NArchive@@YGJH@Z']
jmp ['loc_D30']
lea ['edx,', '[ebp+var_F8]']
push ['edx']
lea ['eax,', '[ebp+var_EC]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
lea ['edx,', '[ebp+var_E0]']
push ['edx']
call ['_XzBlock_ReadHeader@16']
mov ['[ebp+var_100],', 'eax']
cmp ['[ebp+var_100],', '0']
jnz ['loc_A70']
cmp ['[ebp+var_EC],', '0']
jnz ['loc_A70']
movzx ['eax,', '[ebp+var_D0]']
and ['eax,', '3']
add ['eax,', '1']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_108],', '0']
jmp ['short', 'loc_A02']
mov ['ecx,', '[ebp+var_108]']
add ['ecx,', '1']
mov ['[ebp+var_108],', 'ecx']
mov ['edx,', '[ebp+var_108]']
cmp ['edx,', '[ebp+var_104]']
jnb ['short', 'loc_A70']
mov ['eax,', '[ebp+var_108]']
shl ['eax,', '5']
lea ['ecx,', '[ebp+eax+var_C8]']
push ['ecx']
lea ['edx,', '[ebp+var_4198]']
push ['edx']
call ['?GetMethodString@NXz@NArchive@@YG?AVAString@@ABUCXzFilter@@@Z']
mov ['[ebp+var_41B4],', 'eax']
mov ['eax,', '[ebp+var_41B4]']
mov ['[ebp+var_41B8],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_41B8]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '0A8h']
push ['edx']
call ['?AddString@NXz@NArchive@@YGXAAVAString@@ABV3@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_4198]']
call ['??1AString@@QAE@XZ']
jmp ['short', 'loc_9F3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '70h']
mov ['esi,', 'esp']
push ['eax']
push ['2']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[edx+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
cmp ['[ebp+var_10C],', '0']
jz ['short', 'loc_AAE']
mov ['eax,', '[ebp+var_10C]']
jmp ['loc_D30']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '70h']
mov ['esi,', 'esp']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ecx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_110],', 'eax']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_AE8']
mov ['eax,', '[ebp+var_110]']
jmp ['loc_D30']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_124]']
call ['??0CSeekInStreamWrap@@QAE@PAUIInStream@@@Z']
push ['1']
lea ['edx,', '[ebp+var_4148]']
push ['edx']
call ['_LookToRead_CreateVTable@8']
lea ['eax,', '[ebp+var_124]']
mov ['[ebp+var_4138],', 'eax']
lea ['ecx,', '[ebp+var_4148]']
push ['ecx']
call ['_LookToRead_Init@4']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['ecx,', '[ebp+var_415C]']
call ['??0COpenCallbackWrap@NXz@NArchive@@QAE@PAUIArchiveOpenCallback@@@Z']
lea ['ecx,', '[ebp+var_4170]']
call ['??0CXzsCPP@NXz@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '1']
push ['offset', '_g_Alloc']
lea ['eax,', '[ebp+var_415C]']
push ['eax']
lea ['ecx,', '[ebp+var_4180]']
push ['ecx']
lea ['edx,', '[ebp+var_4148]']
push ['edx']
lea ['eax,', '[ebp+var_4170]']
push ['eax']
call ['_Xzs_ReadBackward@20']
mov ['[ebp+var_4188],', 'eax']
cmp ['[ebp+var_4188],', '0Ah']
jnz ['short', 'loc_BBD']
cmp ['[ebp+var_4154],', '0']
jnz ['short', 'loc_B88']
mov ['[ebp+var_41BC],', '80004005h']
jmp ['short', 'loc_B94']
mov ['ecx,', '[ebp+var_4154]']
mov ['[ebp+var_41BC],', 'ecx']
mov ['edx,', '[ebp+var_41BC]']
mov ['[ebp+var_419C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_4170]']
call ['??1CXzsCPP@NXz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_419C]']
jmp ['loc_D30']
cmp ['[ebp+var_4188],', '0']
jnz ['loc_C95']
mov ['eax,', '[ebp+var_4180]']
or ['eax,', '[ebp+var_417C]']
jnz ['loc_C95']
mov ['ecx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[ecx+9Ah],', '1']
lea ['edx,', '[ebp+var_4170]']
push ['edx']
call ['_Xzs_GetUnpackSize@4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+68h],', 'eax']
mov ['[ecx+6Ch],', 'edx']
mov ['edx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[edx+88h],', '1']
mov ['eax,', '[ebp+var_4170]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+78h],', 'eax']
mov ['[edx+7Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+89h],', '1']
lea ['ecx,', '[ebp+var_4170]']
push ['ecx']
call ['_Xzs_GetNumBlocks@4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+80h],', 'eax']
mov ['[ecx+84h],', 'edx']
mov ['edx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[edx+8Ah],', '1']
lea ['eax,', '[ebp+var_4170]']
push ['eax']
lea ['ecx,', '[ebp+var_41A8]']
push ['ecx']
call ['?GetCheckString@NXz@NArchive@@YG?AVAString@@ABUCXzs@@@Z']
mov ['[ebp+var_41C0],', 'eax']
mov ['edx,', '[ebp+var_41C0]']
mov ['[ebp+var_41C4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_41C4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0A8h']
push ['ecx']
call ['?AddString@NXz@NArchive@@YGXAAVAString@@ABV3@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_41A8]']
call ['??1AString@@QAE@XZ']
jmp ['short', 'loc_C9F']
mov ['[ebp+var_4188],', '0']
mov ['edx,', '[ebp+var_4188]']
push ['edx']
call ['?SRes_to_Open_HRESULT@NXz@NArchive@@YGJH@Z']
mov ['[ebp+var_418C],', 'eax']
cmp ['[ebp+var_418C],', '0']
jz ['short', 'loc_CE0']
mov ['eax,', '[ebp+var_418C]']
mov ['[ebp+var_41AC],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_4170]']
call ['??1CXzsCPP@NXz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_41AC]']
jmp ['short', 'loc_D30']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '9Ch']
call ['??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0A0h']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+98h],', '1']
mov ['[ebp+var_41B0],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_4170]']
call ['??1CXzsCPP@NXz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_41B0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '41C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetMethodString@NXz@NArchive@@YG?AVAString@@ABUCXzFilter@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetMethodString@NXz@NArchive@@YG?AVAString@@ABUCXzFilter@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '64h']
push ['edi']
lea ['edi,', '[ebp+var_70]']
mov ['ecx,', '19h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_EAC']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '9']
jnb ['short', 'loc_EF0']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '_g_NamePairs[ecx*8]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_64],', 'edx']
mov ['[ebp+var_60],', 'eax']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[ebp+var_64]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_EEE']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_60]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_EEE']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', 'off_4C[eax*8]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_EF0']
jmp ['short', 'loc_EA3']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_F0F']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[eax]']
push ['edx']
call ['?ConvertUInt64ToString@@YGX_KPAD@Z']
lea ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['ecx,', '[ebp+var_50]']
call ['??0AString@@QAE@PBD@Z']
mov ['[ebp+var_4],', '1']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jbe ['loc_FE9']
push ['3Ah']
lea ['ecx,', '[ebp+var_50]']
call ['??YAString@@QAEAAV0@D@Z']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
cmp ['dword', 'ptr', '[ecx],', '21h']
jnz ['short', 'loc_F6C']
mov ['edx,', '[ebp+var_6C]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_F6C']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+8],', '1']
jnz ['short', 'loc_F6C']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Ch]']
push ['edx']
lea ['eax,', '[ebp+var_50]']
push ['eax']
call ['?Lzma2PropToString@NXz@NArchive@@YGXAAVAString@@I@Z']
jmp ['short', 'loc_FE9']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_70],', 'ecx']
mov ['edx,', '[ebp+var_70]']
cmp ['dword', 'ptr', '[edx],', '3']
jnz ['short', 'loc_FA2']
mov ['eax,', '[ebp+var_70]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_FA2']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+8],', '1']
jnz ['short', 'loc_FA2']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['?AddUInt32ToString@NXz@NArchive@@YGXAAVAString@@I@Z']
jmp ['short', 'loc_FE9']
push ['5Bh']
lea ['ecx,', '[ebp+var_50]']
call ['??YAString@@QAEAAV0@D@Z']
mov ['[ebp+var_58],', '0']
jmp ['short', 'loc_FBE']
mov ['edx,', '[ebp+var_58]']
add ['edx,', '1']
mov ['[ebp+var_58],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_58]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_FDF']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_58]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['?AddHexToString@NXz@NArchive@@YGXAAVAString@@E@Z']
jmp ['short', 'loc_FB5']
push ['5Dh']
lea ['ecx,', '[ebp+var_50]']
call ['??YAString@@QAEAAV0@D@Z']
lea ['edx,', '[ebp+var_50]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0AString@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_5C]']
or ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '70h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?AddHexToString@NXz@NArchive@@YGXAAVAString@@E@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
movzx ['eax,', '[ebp+arg_4]']
sar ['eax,', '4']
push ['eax']
call ['?GetHex@NXz@NArchive@@YGDI@Z']
movzx ['ecx,', 'al']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@D@Z']
movzx ['edx,', '[ebp+arg_4]']
and ['edx,', '0Fh']
push ['edx']
call ['?GetHex@NXz@NArchive@@YGDI@Z']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@D@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?GetHex@NXz@NArchive@@YGDI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0Ah']
jnb ['short', 'loc_10D0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '30h']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_10D9']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '37h']
mov ['[ebp+var_4],', 'ecx']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddUInt32ToString@NXz@NArchive@@YGXAAVAString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Lzma2PropToString@NXz@NArchive@@YGXAAVAString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1']
jnz ['short', 'loc_11A1']
mov ['ecx,', '[ebp+arg_4]']
shr ['ecx,', '1']
add ['ecx,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_11CE']
mov ['byte', 'ptr', '[ebp+var_4+3],', '6Bh']
mov ['edx,', '[ebp+arg_4]']
and ['edx,', '1']
or ['edx,', '2']
mov ['ecx,', '[ebp+arg_4]']
shr ['ecx,', '1']
add ['ecx,', '1']
shl ['edx,', 'cl']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+arg_4],', '11h']
jbe ['short', 'loc_11CE']
mov ['eax,', '[ebp+var_8]']
shr ['eax,', '0Ah']
mov ['[ebp+var_8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4+3],', '6Dh']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?AddUInt32ToString@NXz@NArchive@@YGXAAVAString@@I@Z']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_4+3]']
test ['eax,', 'eax']
jz ['short', 'loc_11F0']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4+3]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@D@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?AddString@NXz@NArchive@@YGXAAVAString@@ABV3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?Add_Space_if_NotEmpty@AString@@QAEXXZ']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@ABV0@@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?GetCheckString@NXz@NArchive@@YG?AVAString@@ABUCXzs@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetCheckString@NXz@NArchive@@YG?AVAString@@ABUCXzs@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_40],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1289']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ecx]']
jnb ['short', 'loc_12B5']
mov ['eax,', '[ebp+var_10]']
imul ['eax,', '18h']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax]']
and ['ecx,', '0Fh']
mov ['eax,', '1']
shl ['eax,', 'cl']
or ['eax,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1280']
lea ['ecx,', '[ebp+var_24]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '1']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_12D6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0Fh']
ja ['short', 'loc_134C']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_10]']
shr ['edx,', 'cl']
and ['edx,', '1']
jz ['short', 'loc_134A']
lea ['ecx,', '[ebp+var_38]']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_10]']
cmp ['_kChecks[eax*4],', '0']
jz ['short', 'loc_1317']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '_kChecks[ecx*4]']
push ['edx']
lea ['ecx,', '[ebp+var_38]']
call ['??4AString@@QAEAAV0@PBD@Z']
jmp ['short', 'loc_1331']
push ['offset', '$SG70104']
lea ['ecx,', '[ebp+var_38]']
call ['??4AString@@QAEAAV0@PBD@Z']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['?AddUInt32ToString@NXz@NArchive@@YGXAAVAString@@I@Z']
lea ['edx,', '[ebp+var_38]']
push ['edx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
call ['?AddString@NXz@NArchive@@YGXAAVAString@@ABV3@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_38]']
call ['??1AString@@QAE@XZ']
jmp ['short', 'loc_12CD']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0AString@@QAE@ABV0@@Z']
mov ['edx,', '[ebp+var_40]']
or ['edx,', '1']
mov ['[ebp+var_40],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SRes_to_Open_HRESULT@NXz@NArchive@@YGJH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_13F9']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_13FD']
cmp ['[ebp+var_4],', '0Ah']
jz ['short', 'loc_1404']
jmp ['short', 'loc_140B']
xor ['eax,', 'eax']
jmp ['short', 'loc_1410']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_1410']
mov ['eax,', '80004004h']
jmp ['short', 'loc_1410']
mov ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Open@CHandler@NXz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Open@CHandler@NXz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '8']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+this]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?Open2@CHandler@NXz@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_14BA']
endp
__catch$?Open@CHandler@NXz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-14h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7']
retn
endp
?OpenSeq@CHandler@NXz@NArchive@@UAGJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+this]']
sub ['eax,', '4']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx-4]']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '9Ch']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+94h],', '1']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+95h],', '0']
xor ['eax,', 'eax']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?Close@CHandler@NXz@NArchive@@UAGJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '60h']
call ['?Clear@CStatInfo@NXz@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+98h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+99h],', '0']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+9Ah],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0A8h']
call ['?Empty@AString@@QAEXXZ']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '9Ch']
call ['?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0A0h']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?Read@CSeekToSeqStream@NXz@NArchive@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CSeekToSeqStream@NXz@NArchive@@UAGJ_JIPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '80004001h']
pop ['ebp']
retn ['14h']
endp
??0CXzUnpackerCPP@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
push ['offset', '_g_Alloc']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '8']
push ['edx']
call ['_XzUnpacker_Construct@8']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CXzUnpackerCPP@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
push ['eax']
call ['_XzUnpacker_Free@4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_MyFree@4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_MyFree@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Decode@CDecoder@NXz@NArchive@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '70h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_70]']
mov ['ecx,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '8000h']
mov ['[ebp+var_C],', '200000h']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CStatInfo@NXz@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+6E0h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
push ['ecx']
call ['_XzUnpacker_Init@4']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+38h],', '0']
jnz ['short', 'loc_1708']
push ['8000h']
call ['_MyAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+38h],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+3Ch],', '0']
jnz ['short', 'loc_1721']
push ['200000h']
call ['_MyAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+3Ch],', 'eax']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_20],', '0']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_14]']
jnz ['short', 'loc_1783']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['8000h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+38h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_1783']
mov ['eax,', '[ebp+var_24]']
jmp ['loc_1A6B']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '200000h']
sub ['eax,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
xor ['edx,', 'edx']
cmp ['[ebp+var_14],', '0']
setz ['dl']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
add ['edx,', '[ebp+var_1C]']
push ['edx']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+3Ch]']
add ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '40h']
push ['eax']
call ['_XzUnpacker_Code@28']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ebp+var_38]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_2C]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx]']
adc ['ecx,', '[edx+4]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_38]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+8]']
adc ['ecx,', '[edx+0Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4C]']
mov ['[eax+6E0h],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_1826']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_1835']
cmp ['[ebp+var_4C],', '0']
jnz ['short', 'loc_1835']
mov ['[ebp+var_64],', '0']
jmp ['short', 'loc_183C']
mov ['[ebp+var_64],', '1']
mov ['dl,', 'byte', 'ptr', '[ebp+var_64]']
mov ['[ebp+var_4D],', 'dl']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_188D']
cmp ['[ebp+var_20],', '200000h']
jz ['short', 'loc_1859']
movzx ['eax,', '[ebp+var_4D]']
test ['eax,', 'eax']
jz ['short', 'loc_188B']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_188B']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+3Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_1884']
mov ['eax,', '[ebp+var_54]']
jmp ['loc_1A6B']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_1894']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_18CD']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '8']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0']
jz ['short', 'loc_18CD']
mov ['eax,', '[ebp+var_58]']
jmp ['loc_1A6B']
movzx ['edx,', '[ebp+var_4D]']
test ['edx,', 'edx']
jz ['loc_1A64']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ecx+4]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+88h]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[eax+8Ch]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_68]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0']
ja ['short', 'loc_191A']
mov ['eax,', '[ebp+var_68]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jbe ['short', 'loc_1921']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+2Bh],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+98h]']
mov ['[edx+20h],', 'ecx']
mov ['eax,', '[eax+9Ch]']
mov ['[edx+24h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+28h],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+29h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+2Ah],', '1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
push ['ecx']
call ['_XzUnpacker_GetExtraSize@4']
mov ['[ebp+var_60],', 'eax']
mov ['[ebp+var_5C],', 'edx']
cmp ['[ebp+var_4C],', '0']
jnz ['short', 'loc_19A3']
cmp ['[ebp+var_44],', '3']
jnz ['short', 'loc_199A']
mov ['[ebp+var_60],', '0']
mov ['[ebp+var_5C],', '0']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '40h']
push ['edx']
call ['_XzUnpacker_IsStreamWasFinished@4']
test ['eax,', 'eax']
jnz ['short', 'loc_1998']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+2Ch],', '1']
mov ['[ebp+var_4C],', '1']
jmp ['short', 'loc_19A1']
mov ['[ebp+var_4C],', '1']
jmp ['short', 'loc_19EB']
cmp ['[ebp+var_4C],', '11h']
jnz ['short', 'loc_19EB']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_60]']
jnz ['short', 'loc_19CD']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+var_5C]']
jnz ['short', 'loc_19CD']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+2Bh],', '0']
jmp ['short', 'loc_19EB']
mov ['ecx,', '[ebp+var_60]']
or ['ecx,', '[ebp+var_5C]']
jnz ['short', 'loc_19DD']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_14]']
jz ['short', 'loc_19EB']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+2Dh],', '1']
mov ['[ebp+var_4C],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4C]']
mov ['[ecx+6E0h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '[ebp+var_60]']
mov ['edx,', '[eax+14h]']
sbb ['edx,', '[ebp+var_5C]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
mov ['ecx,', '[ebp+var_4C]']
mov ['[ebp+var_70],', 'ecx']
cmp ['[ebp+var_70],', '11h']
ja ['short', '$LN1']
mov ['edx,', '[ebp+var_70]']
movzx ['eax,', 'ds:$LN42[edx]']
jmp ['ds:$LN49[eax*4]']
jmp ['short', 'loc_1A62']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+2Bh],', '0']
jmp ['short', 'loc_1A62']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2Fh],', '1']
jmp ['short', 'loc_1A62']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+2Eh],', '1']
jmp ['short', 'loc_1A62']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+31h],', '1']
jmp ['short', 'loc_1A62']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+30h],', '1']
jmp ['short', 'loc_1A62']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+30h],', '1']
jmp ['short', 'loc_1A69']
jmp ['loc_1736']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN48']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '70h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Get_Extract_OperationResult@CDecoder@NXz@NArchive@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2Bh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1B42']
mov ['[ebp+var_8],', '7']
jmp ['loc_1BD9']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+2Ch]']
test ['eax,', 'eax']
jz ['short', 'loc_1B59']
mov ['[ebp+var_8],', '5']
jmp ['loc_1BD9']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2Dh]']
test ['edx,', 'edx']
jz ['short', 'loc_1B6D']
mov ['[ebp+var_8],', '6']
jmp ['short', 'loc_1BD9']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+31h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1B81']
mov ['[ebp+var_8],', '3']
jmp ['short', 'loc_1BD9']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+2Eh]']
test ['eax,', 'eax']
jz ['short', 'loc_1B95']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_1BD9']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2Fh]']
test ['edx,', 'edx']
jz ['short', 'loc_1BA9']
mov ['[ebp+var_8],', '2']
jmp ['short', 'loc_1BD9']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+30h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1BBD']
mov ['[ebp+var_8],', '2']
jmp ['short', 'loc_1BD9']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+6E0h],', '0']
jz ['short', 'loc_1BD2']
mov ['[ebp+var_8],', '2']
jmp ['short', 'loc_1BD9']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Extract@CHandler@NXz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Extract@CHandler@NXz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '7A8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_7B8]']
mov ['ecx,', '1EAh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_14],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_1C3C']
xor ['eax,', 'eax']
jmp ['loc_209B']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jz ['short', 'loc_1C5A']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_1C50']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_1C5A']
mov ['eax,', '80070057h']
jmp ['loc_209B']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9Ah]']
test ['edx,', 'edx']
jz ['short', 'loc_1C8A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+74h]']
push ['ecx']
mov ['edx,', '[eax+70h]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_1C],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_770],', 'eax']
mov ['eax,', '[ebp+var_770]']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_1CD0']
mov ['eax,', '[ebp+var_28]']
jmp ['loc_209B']
lea ['ecx,', '[ebp+var_30]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_774],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_C],', '0']
setnz ['cl']
mov ['[ebp+var_38],', 'ecx']
lea ['ecx,', '[ebp+var_30]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
mov ['[ebp+var_778],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_778]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+14h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_77C],', 'eax']
mov ['edx,', '[ebp+var_77C]']
mov ['[ebp+var_3C],', 'edx']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_1D55']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_74C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_74C]']
jmp ['loc_209B']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_1D95']
lea ['ecx,', '[ebp+var_30]']
call ['??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ']
mov ['[ebp+var_77D],', 'al']
movzx ['ecx,', '[ebp+var_77D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1D95']
mov ['[ebp+var_750],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_750]']
jmp ['loc_209B']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_784],', 'eax']
mov ['ecx,', '[ebp+var_784]']
mov ['[ebp+var_758],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_758],', '0']
jz ['short', 'loc_1DF8']
mov ['ecx,', '[ebp+var_758]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_788],', 'eax']
mov ['edx,', '[ebp+var_788]']
mov ['[ebp+var_78C],', 'edx']
jmp ['short', 'loc_1E02']
mov ['[ebp+var_78C],', '0']
mov ['eax,', '[ebp+var_78C]']
mov ['[ebp+var_754],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_754]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
lea ['ecx,', '[ebp+var_48]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
push ['1']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+99h]']
test ['edx,', 'edx']
jz ['loc_1F1F']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '9Ch']
call ['??7?$CMyComPtr@UIInStream@@@@QBE_NXZ']
mov ['[ebp+var_78D],', 'al']
movzx ['eax,', '[ebp+var_78D]']
test ['eax,', 'eax']
jz ['short', 'loc_1E97']
mov ['[ebp+var_75C],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_75C]']
jmp ['loc_209B']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '9Ch']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_794],', 'eax']
mov ['ecx,', '[ebp+var_794]']
mov ['[ebp+var_798],', 'ecx']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_798]']
push ['edx']
mov ['eax,', '[ebp+var_798]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_79C],', 'eax']
mov ['eax,', '[ebp+var_79C]']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_1F1D']
mov ['ecx,', '[ebp+var_50]']
mov ['[ebp+var_760],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_760]']
jmp ['loc_209B']
jmp ['short', 'loc_1F29']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+99h],', '1']
lea ['ecx,', '[ebp+var_73C]']
call ['??0CDecoder@NXz@NArchive@@QAE@XZ']
mov ['[ebp+var_7A0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_48]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_7A4],', 'eax']
lea ['ecx,', '[ebp+var_30]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_7A8],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0A0h']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_7AC],', 'eax']
mov ['eax,', '[ebp+var_7A4]']
push ['eax']
lea ['ecx,', '[ebp+var_73C]']
push ['ecx']
mov ['edx,', '[ebp+var_7A8]']
push ['edx']
mov ['eax,', '[ebp+var_7AC]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?Decode2@CHandler@NXz@NArchive@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@AAUCDecoder@23@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_7B0],', 'eax']
mov ['ecx,', '[ebp+var_7B0]']
mov ['[ebp+var_744],', 'ecx']
cmp ['[ebp+var_744],', '0']
jz ['short', 'loc_1FEB']
mov ['edx,', '[ebp+var_744]']
mov ['[ebp+var_764],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_73C]']
call ['??1CDecoder@NXz@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_764]']
jmp ['loc_209B']
lea ['ecx,', '[ebp+var_73C]']
call ['?Get_Extract_OperationResult@CDecoder@NXz@NArchive@@QBEHXZ']
mov ['[ebp+var_7B4],', 'eax']
mov ['eax,', '[ebp+var_7B4]']
mov ['[ebp+var_748],', 'eax']
lea ['ecx,', '[ebp+var_30]']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_748]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_7B8],', 'eax']
mov ['eax,', '[ebp+var_7B8]']
mov ['[ebp+var_768],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_73C]']
call ['??1CDecoder@NXz@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_768]']
jmp ['short', 'loc_209B']
endp
__catch$?Extract@CHandler@NXz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-76Ch],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN25_0']
retn
endp
?GetFileTimeType@CHandler@NXz@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '2DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2EC]']
mov ['ecx,', '0B7h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_14],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
call ['??0CSeqOutStreamWrap@@QAE@PAUISequentialOutStream@@@Z']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_21DB']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['_Xz_EncodeEmpty@4']
mov ['[ebp+var_38],', 'eax']
mov ['edx,', '[ebp+var_38]']
push ['edx']
call ['?SResToHRESULT@@YGJH@Z']
jmp ['loc_2DE0']
cmp ['[ebp+arg_8],', '1']
jz ['short', 'loc_21EB']
mov ['eax,', '80070057h']
jmp ['loc_2DE0']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_21FB']
mov ['eax,', '80004005h']
jmp ['loc_2DE0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_58]']
push ['eax']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
lea ['edx,', '[ebp+var_40]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_23C],', 'eax']
mov ['ecx,', '[ebp+var_23C]']
mov ['[ebp+var_60],', 'ecx']
cmp ['[ebp+var_60],', '0']
jz ['short', 'loc_223D']
mov ['eax,', '[ebp+var_60]']
jmp ['loc_2DE0']
mov ['edx,', '[ebp+var_4C]']
push ['edx']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_23D],', 'al']
movzx ['eax,', '[ebp+var_23D]']
test ['eax,', 'eax']
jz ['loc_2307']
lea ['ecx,', '[ebp+var_74]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_244],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
push ['6']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_248],', 'eax']
mov ['eax,', '[ebp+var_248]']
mov ['[ebp+var_7C],', 'eax']
cmp ['[ebp+var_7C],', '0']
jz ['short', 'loc_22C1']
mov ['ecx,', '[ebp+var_7C]']
mov ['[ebp+var_1E4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_74]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_1E4]']
jmp ['loc_2DE0']
movzx ['edx,', '[ebp+var_74]']
test ['edx,', 'edx']
jz ['short', 'loc_22FB']
movzx ['eax,', '[ebp+var_74]']
cmp ['eax,', '0Bh']
jnz ['short', 'loc_22DA']
movsx ['ecx,', '[ebp+var_6C]']
test ['ecx,', 'ecx']
jz ['short', 'loc_22FB']
mov ['[ebp+var_1E8],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_74]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_1E8]']
jmp ['loc_2DE0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_74]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['edx,', '[ebp+var_40]']
push ['edx']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_249],', 'al']
movzx ['eax,', '[ebp+var_249]']
test ['eax,', 'eax']
jz ['loc_2A9C']
lea ['ecx,', '[ebp+var_98]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_250],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_98]']
push ['ecx']
push ['7']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_254],', 'eax']
mov ['eax,', '[ebp+var_254]']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0']
jz ['short', 'loc_239D']
mov ['ecx,', '[ebp+var_A0]']
mov ['[ebp+var_1EC],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_98]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_1EC]']
jmp ['loc_2DE0']
movzx ['edx,', '[ebp+var_98]']
cmp ['edx,', '15h']
jz ['short', 'loc_23CD']
mov ['[ebp+var_1F0],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_98]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_1F0]']
jmp ['loc_2DE0']
mov ['eax,', '[ebp+var_90]']
mov ['dword', 'ptr', '[ebp+var_84],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
mov ['dword', 'ptr', '[ebp+var_84+4],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', 'dword', 'ptr', '[ebp+var_84+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_84]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_258],', 'eax']
mov ['edx,', '[ebp+var_258]']
mov ['[ebp+var_A4],', 'edx']
cmp ['[ebp+var_A4],', '0']
jz ['short', 'loc_2445']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_1F4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_98]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_1F4]']
jmp ['loc_2DE0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_98]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
lea ['ecx,', '[ebp+var_F0]']
push ['ecx']
call ['_Lzma2EncProps_Init@4']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?GetLevel@CMultiMethodProps@NArchive@@QBEHXZ']
mov ['[ebp+var_25C],', 'eax']
mov ['edx,', '[ebp+var_25C]']
mov ['dword', 'ptr', '[ebp+var_F0.anonymous_0],', 'edx']
lea ['ecx,', '[ebp+var_FC]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_260],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_FC]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
mov ['[ebp+var_264],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_264]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_268],', 'eax']
mov ['edx,', '[ebp+var_268]']
mov ['[ebp+var_104],', 'edx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_2504']
mov ['eax,', '[ebp+var_104]']
mov ['[ebp+var_1F8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_FC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_1F8]']
jmp ['loc_2DE0']
lea ['ecx,', '[ebp+var_FC]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_26C],', 'eax']
mov ['ecx,', '[ebp+var_26C]']
push ['ecx']
lea ['ecx,', '[ebp+var_120]']
call ['??0CSeqInStreamWrap@@QAE@PAUISequentialInStream@@@Z']
mov ['edx,', 'dword', 'ptr', '[ebp+var_84+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_84]']
push ['eax']
lea ['ecx,', '[ebp+var_138]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@_K@Z']
mov ['[ebp+var_270],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_F0]']
push ['ecx']
lea ['edx,', '[ebp+var_138]']
push ['edx']
push ['offset', '$SG70045']
call ['?SetLzma2Prop@NLzma2@NCompress@@YGJKABUtagPROPVARIANT@@AAUCLzma2EncProps@@@Z']
mov ['[ebp+var_274],', 'eax']
mov ['eax,', '[ebp+var_274]']
mov ['[ebp+var_140],', 'eax']
cmp ['[ebp+var_140],', '0']
jz ['short', 'loc_25AC']
mov ['ecx,', '[ebp+var_140]']
mov ['[ebp+var_1FC],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_138]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_FC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_1FC]']
jmp ['loc_2DE0']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_138]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_144],', '0']
jmp ['short', 'loc_25D6']
mov ['edx,', '[ebp+var_144]']
add ['edx,', '1']
mov ['[ebp+var_144],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1Ch']
call ['?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ']
mov ['[ebp+var_278],', 'eax']
mov ['eax,', '[ebp+var_144]']
cmp ['eax,', '[ebp+var_278]']
jnb ['loc_2702']
mov ['ecx,', '[ebp+var_144]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1Ch']
call ['??A?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@I@Z']
mov ['[ebp+var_27C],', 'eax']
mov ['edx,', '[ebp+var_27C]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+var_148]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?SetGlobalLevelAndThreads@CMultiMethodProps@NArchive@@QAEXAAVCOneMethodInfo@@I@Z']
mov ['[ebp+var_14C],', '0']
jmp ['short', 'loc_2651']
mov ['eax,', '[ebp+var_14C]']
add ['eax,', '1']
mov ['[ebp+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_148]']
call ['?Size@?$CObjectVector@UCProp@@@@QBEIXZ']
mov ['[ebp+var_280],', 'eax']
mov ['ecx,', '[ebp+var_14C]']
cmp ['ecx,', '[ebp+var_280]']
jnb ['loc_26FD']
mov ['edx,', '[ebp+var_14C]']
push ['edx']
mov ['ecx,', '[ebp+var_148]']
call ['??A?$CObjectVector@UCProp@@@@QAEAAUCProp@@I@Z']
mov ['[ebp+var_284],', 'eax']
mov ['eax,', '[ebp+var_284]']
mov ['[ebp+var_150],', 'eax']
lea ['ecx,', '[ebp+var_F0]']
push ['ecx']
mov ['edx,', '[ebp+var_150]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+var_150]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?SetLzma2Prop@NLzma2@NCompress@@YGJKABUtagPROPVARIANT@@AAUCLzma2EncProps@@@Z']
mov ['[ebp+var_288],', 'eax']
mov ['edx,', '[ebp+var_288]']
mov ['[ebp+var_154],', 'edx']
cmp ['[ebp+var_154],', '0']
jz ['short', 'loc_26F8']
mov ['eax,', '[ebp+var_154]']
mov ['[ebp+var_200],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_FC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_200]']
jmp ['loc_2DE0']
jmp ['loc_2642']
jmp ['loc_25C7']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_B0],', 'edx']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_28C],', 'eax']
mov ['eax,', '[ebp+var_28C]']
mov ['[ebp+var_208],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
cmp ['[ebp+var_208],', '0']
jz ['short', 'loc_2756']
mov ['ecx,', '[ebp+var_208]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_290],', 'eax']
mov ['ecx,', '[ebp+var_290]']
mov ['[ebp+var_294],', 'ecx']
jmp ['short', 'loc_2760']
mov ['[ebp+var_294],', '0']
mov ['edx,', '[ebp+var_294]']
mov ['[ebp+var_204],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['eax,', '[ebp+var_204]']
mov ['[ebp+var_158],', 'eax']
mov ['ecx,', '[ebp+var_158]']
push ['ecx']
lea ['ecx,', '[ebp+var_160]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
push ['1']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+var_158]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
lea ['ecx,', '[ebp+var_160]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_298],', 'eax']
mov ['eax,', '[ebp+var_298]']
push ['eax']
lea ['ecx,', '[ebp+var_174]']
call ['??0CCompressProgressWrap@@QAE@PAUICompressProgressInfo@@@Z']
lea ['ecx,', '[ebp+var_188]']
push ['ecx']
call ['_XzProps_Init@4']
lea ['edx,', '[ebp+var_1A0]']
push ['edx']
call ['_XzFilterProps_Init@4']
lea ['eax,', '[ebp+var_F0]']
mov ['[ebp+var_188],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+9Ch]']
neg ['edx']
sbb ['edx,', 'edx']
lea ['eax,', '[ebp+var_1A0]']
and ['edx,', 'eax']
mov ['[ebp+var_184],', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+18h]']
mov ['[ebp+var_29C],', 'edx']
cmp ['[ebp+var_29C],', '20h']
ja ['short', '$LN17_0']
mov ['eax,', '[ebp+var_29C]']
movzx ['ecx,', 'ds:$LN67[eax]']
jmp ['ds:$LN87[ecx*4]']
mov ['[ebp+var_180],', '0']
jmp ['short', 'loc_2891']
mov ['[ebp+var_180],', '1']
jmp ['short', 'loc_2891']
mov ['[ebp+var_180],', '4']
jmp ['short', 'loc_2891']
mov ['[ebp+var_180],', '0Ah']
jmp ['short', 'loc_2891']
mov ['[ebp+var_20C],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_160]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_FC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_20C]']
jmp ['loc_2DE0']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+9Ch]']
mov ['[ebp+var_1A0],', 'eax']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+9Ch],', '3']
jnz ['loc_29E0']
mov ['[ebp+var_1A5],', '0']
mov ['[ebp+var_1AC],', '0']
jmp ['short', 'loc_28D2']
mov ['edx,', '[ebp+var_1AC]']
add ['edx,', '1']
mov ['[ebp+var_1AC],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['?Size@?$CObjectVector@UCProp@@@@QBEIXZ']
mov ['[ebp+var_2A0],', 'eax']
mov ['eax,', '[ebp+var_1AC]']
cmp ['eax,', '[ebp+var_2A0]']
jnb ['loc_29A2']
mov ['ecx,', '[ebp+var_1AC]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['??A?$CObjectVector@UCProp@@@@QAEAAUCProp@@I@Z']
mov ['[ebp+var_2A4],', 'eax']
mov ['edx,', '[ebp+var_2A4]']
mov ['[ebp+var_1B0],', 'edx']
mov ['eax,', '[ebp+var_1B0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_299D']
mov ['ecx,', '[ebp+var_1B0]']
movzx ['edx,', 'word', 'ptr', '[ecx+8]']
cmp ['edx,', '13h']
jnz ['short', 'loc_299D']
mov ['eax,', '[ebp+var_1B0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_1B4],', 'ecx']
cmp ['[ebp+var_1B4],', '1']
jb ['short', 'loc_2957']
cmp ['[ebp+var_1B4],', '100h']
jbe ['short', 'loc_298A']
mov ['[ebp+var_210],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_160]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_FC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_210]']
jmp ['loc_2DE0']
mov ['edx,', '[ebp+var_1B4]']
mov ['[ebp+var_19C],', 'edx']
mov ['[ebp+var_1A5],', '1']
jmp ['loc_28C3']
movzx ['eax,', '[ebp+var_1A5]']
test ['eax,', 'eax']
jnz ['short', 'loc_29E0']
mov ['[ebp+var_214],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_160]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_FC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_214]']
jmp ['loc_2DE0']
lea ['ecx,', '[ebp+var_174]']
push ['ecx']
lea ['edx,', '[ebp+var_188]']
push ['edx']
lea ['eax,', '[ebp+var_120]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['_Xz_Encode@16']
mov ['[ebp+var_1B8],', 'eax']
cmp ['[ebp+var_1B8],', '0']
jnz ['short', 'loc_2A61']
mov ['esi,', 'esp']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+20h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2A8],', 'eax']
mov ['eax,', '[ebp+var_2A8]']
mov ['[ebp+var_218],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_160]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_FC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_218]']
jmp ['loc_2DE0']
mov ['ecx,', '[ebp+var_1B8]']
push ['ecx']
call ['?SResToHRESULT@@YGJH@Z']
mov ['[ebp+var_21C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_160]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_FC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_21C]']
jmp ['loc_2DE0']
cmp ['[ebp+var_58],', '0']
jz ['short', 'loc_2AAC']
mov ['eax,', '80070057h']
jmp ['loc_2DE0']
lea ['ecx,', '[ebp+var_1C0]']
call ['??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['[ebp+var_2AC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_1C0]']
call ['??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_2B0],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_2B0]']
push ['edx']
push ['offset', '_IID_IArchiveUpdateCallbackFile']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_1C0]']
call ['??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_2B4],', 'eax']
cmp ['[ebp+var_2B4],', '0']
jz ['loc_2B93']
lea ['ecx,', '[ebp+var_1C0]']
call ['??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_2B8],', 'eax']
mov ['ecx,', '[ebp+var_2B8]']
mov ['[ebp+var_2BC],', 'ecx']
mov ['esi,', 'esp']
push ['3']
push ['0']
push ['1']
mov ['edx,', '[ebp+var_2BC]']
push ['edx']
mov ['eax,', '[ebp+var_2BC]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C0],', 'eax']
mov ['eax,', '[ebp+var_2C0]']
mov ['[ebp+var_1C8],', 'eax']
cmp ['[ebp+var_1C8],', '0']
jz ['short', 'loc_2B93']
mov ['ecx,', '[ebp+var_1C8]']
mov ['[ebp+var_220],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C0]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_220]']
jmp ['loc_2DE0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '94h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_2C4],', 'eax']
cmp ['[ebp+var_2C4],', '0']
jz ['loc_2CAB']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+92h]']
test ['eax,', 'eax']
jz ['short', 'loc_2C25']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+6Ch]']
push ['edx']
mov ['eax,', '[ecx+68h]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C8],', 'eax']
mov ['edx,', '[ebp+var_2C8]']
mov ['[ebp+var_1CC],', 'edx']
cmp ['[ebp+var_1CC],', '0']
jz ['short', 'loc_2C25']
mov ['eax,', '[ebp+var_1CC]']
mov ['[ebp+var_224],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C0]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_224]']
jmp ['loc_2DE0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '94h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_2CC],', 'eax']
mov ['ecx,', '[ebp+var_2CC]']
mov ['[ebp+var_2D0],', 'ecx']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_2D0]']
push ['edx']
mov ['eax,', '[ebp+var_2D0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2D4],', 'eax']
mov ['eax,', '[ebp+var_2D4]']
mov ['[ebp+var_1D0],', 'eax']
cmp ['[ebp+var_1D0],', '0']
jz ['short', 'loc_2CAB']
mov ['ecx,', '[ebp+var_1D0]']
mov ['[ebp+var_228],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C0]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_228]']
jmp ['loc_2DE0']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_2D8],', 'eax']
mov ['edx,', '[ebp+var_2D8]']
mov ['[ebp+var_230],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
cmp ['[ebp+var_230],', '0']
jz ['short', 'loc_2CF3']
mov ['ecx,', '[ebp+var_230]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_2DC],', 'eax']
mov ['eax,', '[ebp+var_2DC]']
mov ['[ebp+var_2E0],', 'eax']
jmp ['short', 'loc_2CFD']
mov ['[ebp+var_2E0],', '0']
mov ['ecx,', '[ebp+var_2E0]']
mov ['[ebp+var_22C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['edx,', '[ebp+var_22C]']
mov ['[ebp+var_1D4],', 'edx']
mov ['eax,', '[ebp+var_1D4]']
push ['eax']
lea ['ecx,', '[ebp+var_1DC]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
push ['(offset', '$SG69791+1)']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_1D4]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
lea ['ecx,', '[ebp+var_1DC]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_2E4],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '94h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_2E8],', 'eax']
mov ['edx,', '[ebp+var_2E4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_2E8]']
push ['ecx']
call ['?CopyStream@NCompress@@YGJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_2EC],', 'eax']
mov ['edx,', '[ebp+var_2EC]']
mov ['[ebp+var_234],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_1DC]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C0]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_234]']
jmp ['short', 'loc_2DE0']
endp
__catch$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-238h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN65']
retn
endp
?SetProperties@CHandler@NXz@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetProperties@CHandler@NXz@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '38h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '0Ch']
call ['?Init@CHandler@NXz@NArchive@@AAEXXZ']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_3023']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_3063']
mov ['edx,', '[ebp+var_14]']
shl ['edx,', '4']
add ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '4']
call ['?SetProperty@CMultiMethodProps@NArchive@@QAEJPB_WABUtagPROPVARIANT@@@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3061']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_31BB']
jmp ['short', 'loc_301A']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '30h']
call ['?IsEmpty@AString@@QBE_NXZ']
mov ['[ebp+var_2D],', 'al']
movzx ['ecx,', '[ebp+var_2D]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_30E5']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_308B']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_1C],', '9']
jnb ['short', 'loc_30D5']
mov ['eax,', '[ebp+var_1C]']
lea ['ecx,', '_g_NamePairs[eax*8]']
mov ['[ebp+var_20],', 'ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '30h']
call ['??BAString@@QBEPBDXZ']
mov ['[ebp+var_34],', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['?StringsAreEqualNoCase_Ascii@@YG_NPBD0@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_30D3']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
mov ['[eax+98h],', 'edx']
jmp ['short', 'loc_30D5']
jmp ['short', 'loc_3082']
cmp ['[ebp+var_1C],', '9']
jnz ['short', 'loc_30E5']
mov ['eax,', '80070057h']
jmp ['loc_31BB']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '4']
call ['?GetNumEmptyMethods@CMultiMethodProps@NArchive@@QBEIXZ']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?DeleteFrontal@?$CObjectVector@VCOneMethodInfo@@@@QAEXI@Z']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '1']
jbe ['short', 'loc_3120']
mov ['eax,', '80070057h']
jmp ['loc_31BB']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '1']
jnz ['short', 'loc_3191']
push ['0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['??A?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@I@Z']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '0Ch']
mov ['[ebp+var_24],', 'ecx']
mov ['ecx,', '[ebp+var_24]']
call ['?IsEmpty@AString@@QBE_NXZ']
mov ['[ebp+var_45],', 'al']
movzx ['edx,', '[ebp+var_45]']
test ['edx,', 'edx']
jz ['short', 'loc_3170']
mov ['eax,', 'ds:_k_LZMA2_Name']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
call ['??4AString@@QAEAAV0@PBD@Z']
jmp ['short', 'loc_3191']
mov ['ecx,', 'ds:_k_LZMA2_Name']
push ['ecx']
mov ['ecx,', '[ebp+var_24]']
call ['?IsEqualTo_Ascii_NoCase@AString@@QBE_NPBD@Z']
mov ['[ebp+var_46],', 'al']
movzx ['edx,', '[ebp+var_46]']
test ['edx,', 'edx']
jnz ['short', 'loc_3191']
mov ['eax,', '80070057h']
jmp ['short', 'loc_31BB']
xor ['eax,', 'eax']
jmp ['short', 'loc_31BB']
endp
__catch$?SetProperties@CHandler@NXz@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z$0 proc near
mov ['dword', 'ptr', '[ebp-28h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN22_1']
retn
endp
?CreateArc@NXz@NArchive@@YGPAUIInArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CreateArc@NXz@NArchive@@YGPAUIInArchive@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['0B8h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3248']
mov ['ecx,', '[ebp+var_14]']
call ['??0CHandler@NXz@NArchive@@QAE@XZ']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_324F']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateArcOut@NXz@NArchive@@YGPAUIOutArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CreateArcOut@NXz@NArchive@@YGPAUIOutArchive@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['0B8h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_32E4']
mov ['ecx,', '[ebp+var_14]']
call ['??0CHandler@NXz@NArchive@@QAE@XZ']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_32EB']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_3309']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_3310']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CHandler@NXz@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1CMultiMethodProps@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NXz@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '9Ch']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NXz@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0A0h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NXz@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0A8h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0CHandler@NXz@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CHandler@NXz@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetArchiveProperty@CHandler@NXz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$2 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__ehhandler$?GetArchiveProperty@CHandler@NXz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-48h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetArchiveProperty@CHandler@NXz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetProperty@CHandler@NXz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$2 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__ehhandler$?GetProperty@CHandler@NXz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-44h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetProperty@CHandler@NXz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Open2@CHandler@NXz@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z$0 proc near
lea ['ecx,', '[ebp-4198h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?Open2@CHandler@NXz@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z$1 proc near
lea ['ecx,', '[ebp-4170h]']
jmp ['??1CXzsCPP@NXz@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Open2@CHandler@NXz@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-41A8h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?Open2@CHandler@NXz@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-41C4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Open2@CHandler@NXz@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetMethodString@NXz@NArchive@@YG?AVAString@@ABUCXzFilter@@@Z$0 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?GetMethodString@NXz@NArchive@@YG?AVAString@@ABUCXzFilter@@@Z$1 proc near
mov ['eax,', '[ebp-5Ch]']
and ['eax,', '1']
jz ['locret_3433']
and ['dword', 'ptr', '[ebp-5Ch],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1AString@@QAE@XZ']
retn
endp
__ehhandler$?GetMethodString@NXz@NArchive@@YG?AVAString@@ABUCXzFilter@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-6Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetMethodString@NXz@NArchive@@YG?AVAString@@ABUCXzFilter@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetCheckString@NXz@NArchive@@YG?AVAString@@ABUCXzs@@@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?GetCheckString@NXz@NArchive@@YG?AVAString@@ABUCXzs@@@Z$1 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?GetCheckString@NXz@NArchive@@YG?AVAString@@ABUCXzs@@@Z$2 proc near
mov ['eax,', '[ebp-40h]']
and ['eax,', '1']
jz ['locret_3481']
and ['dword', 'ptr', '[ebp-40h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1AString@@QAE@XZ']
retn
endp
__ehhandler$?GetCheckString@NXz@NArchive@@YG?AVAString@@ABUCXzs@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetCheckString@NXz@NArchive@@YG?AVAString@@ABUCXzs@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Open@CHandler@NXz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Open@CHandler@NXz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Extract@CHandler@NXz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NXz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$3 proc near
mov ['eax,', '[ebp-758h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@NXz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NXz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$5 proc near
lea ['ecx,', '[ebp-73Ch]']
jmp ['??1CDecoder@NXz@NArchive@@QAE@XZ']
endp
__ehhandler$?Extract@CHandler@NXz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-7BCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Extract@CHandler@NXz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-74h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$3 proc near
lea ['ecx,', '[ebp-98h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-0FCh]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$5 proc near
lea ['ecx,', '[ebp-138h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$6 proc near
mov ['eax,', '[ebp-208h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$7 proc near
lea ['ecx,', '[ebp-160h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$8 proc near
lea ['ecx,', '[ebp-1C0h]']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$9 proc near
mov ['eax,', '[ebp-230h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$10 proc near
lea ['ecx,', '[ebp-1DCh]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__ehhandler$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-2F0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?UpdateItems@CHandler@NXz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?SetProperties@CHandler@NXz@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetProperties@CHandler@NXz@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CreateArc@NXz@NArchive@@YGPAUIInArchive@@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?CreateArc@NXz@NArchive@@YGPAUIInArchive@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CreateArc@NXz@NArchive@@YGPAUIInArchive@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CreateArcOut@NXz@NArchive@@YGPAUIOutArchive@@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?CreateArcOut@NXz@NArchive@@YGPAUIOutArchive@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CreateArcOut@NXz@NArchive@@YGPAUIOutArchive@@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMultiMethodProps@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CMultiMethodProps@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0COneMethodInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
call ['?Init@CMultiMethodProps@NArchive@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CMultiMethodProps@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
endp
__unwindfunclet$??0CMultiMethodProps@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1COneMethodInfo@@QAE@XZ']
endp
__ehhandler$??0CMultiMethodProps@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CMultiMethodProps@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0COneMethodInfo@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COneMethodInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CMethodProps@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMethodProps@@QAE@XZ']
endp
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0COneMethodInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COneMethodInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1COneMethodInfo@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COneMethodInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CMethodProps@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMethodProps@@QAE@XZ']
endp
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1COneMethodInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COneMethodInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCProp@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CStatInfo@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CStatInfo@NXz@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CHandler@NXz@NArchive@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0A4h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?Init@CMultiMethodProps@NArchive@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CHandler@NXz@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_42D7']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_4399']
push ['offset', '_IID_IInArchive']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_42F6']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_4399']
push ['offset', '_IID_IArchiveOpenSeq']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_432A']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_4319']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_4320']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_4399']
push ['offset', '_IID_IOutArchive']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_435E']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_434D']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4354']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_4399']
push ['offset', '_IID_ISetProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4392']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_4381']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_4388']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4399']
mov ['eax,', '80004002h']
jmp ['short', 'loc_43AA']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+58h]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+58h],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CHandler@NXz@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+58h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+58h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CHandler@NXz@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+58h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+58h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4466']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+58h]']
jmp ['short', 'loc_4490']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_4487']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCHandler@NXz@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_448E']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCHandler@NXz@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CHandler@NXz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_44CA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CHandler@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CHandler@NXz@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0A8h']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0A0h']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '9Ch']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1CMultiMethodProps@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CHandler@NXz@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1CMultiMethodProps@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@NXz@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '9Ch']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@NXz@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0A0h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$??1CHandler@NXz@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CHandler@NXz@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CMultiMethodProps@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CMultiMethodProps@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1COneMethodInfo@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CMultiMethodProps@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
endp
__ehhandler$??1CMultiMethodProps@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CMultiMethodProps@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0IInArchive@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IArchiveOpenSeq@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IArchiveOpenSeq@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IOutArchive@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISetProperties@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISetProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@AString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YAString@@QAEAAV0@D@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_4914']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@AString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CXzsCPP@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Xzs_Construct@4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CXzsCPP@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '_g_Alloc']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Xzs_Free@8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@AString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDecoder@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CStatInfo@NXz@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['??0CXzUnpackerCPP@NXz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+6E0h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Decode2@CHandler@NXz@NArchive@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@AAUCDecoder@23@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
push ['edi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?Decode@CDecoder@NXz@NArchive@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_4A53']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_4A6F']
mov ['esi,', '[ebp+arg_8]']
mov ['edi,', '[ebp+var_4]']
add ['edi,', '60h']
mov ['ecx,', '0Eh']
rep ['movsd']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+9Ah],', '1']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??1CDecoder@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['??1CXzUnpackerCPP@NXz@NArchive@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IntToBool@@YG_NH@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0']
setnz ['al']
pop ['ebp']
retn ['4']
endp
??0CPropVariant@NCOM@NWindows@@QAE@_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '15h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetLevel@CMultiMethodProps@NArchive@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jnz ['short', 'loc_4B20']
mov ['[ebp+var_8],', '5']
jmp ['short', 'loc_4B28']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEqualTo_Ascii_NoCase@AString@@QBE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?StringsAreEqualNoCase_Ascii@@YG_NPBD0@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetNumEmptyMethods@CMultiMethodProps@NArchive@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_4B89']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_4BBA']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['??A?$CObjectVector@VCOneMethodInfo@@@@QBEABVCOneMethodInfo@@I@Z']
mov ['ecx,', 'eax']
call ['?IsEmpty@COneMethodInfo@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_4BB8']
jmp ['short', 'loc_4BBA']
jmp ['short', 'loc_4B80']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@COneMethodInfo@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4C0D']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CObjectVector@UCProp@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4C0D']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_4C14']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_4C5C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4CA2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4D1E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4D6B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_4DF0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_4E13']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCProp@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CObjectVector@UCProp@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCProp@@@@QAEAAUCProp@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4F5E']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_4F55']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4F5C']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_4F1A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VCOneMethodInfo@@@@QBEABVCOneMethodInfo@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_510E']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5105']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCOneMethodInfo@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_510C']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_50CA']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?DeleteFrontal@?$CObjectVector@VCOneMethodInfo@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_51B7']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_51F4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_51EB']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCOneMethodInfo@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_51F2']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_51AE']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?DeleteFrontal@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5262']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_52AF']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_531C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_533F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UIInStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_53CE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_541B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_54CE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCProp@@QAEPAXI@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5552']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCOneMethodInfo@@QAEPAXI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COneMethodInfo@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5592']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteFrontal@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_56A9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@PAX@@AAEXII@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Release@CHandler@NXz@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CHandler@NXz@NArchive@@UAGKXZ']
endp
?Release@CHandler@NXz@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CHandler@NXz@NArchive@@UAGKXZ']
endp
?Release@CHandler@NXz@NArchive@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CHandler@NXz@NArchive@@UAGKXZ']
endp
?AddRef@CHandler@NXz@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CHandler@NXz@NArchive@@UAGKXZ']
endp
?AddRef@CHandler@NXz@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CHandler@NXz@NArchive@@UAGKXZ']
endp
?QueryInterface@CHandler@NXz@NArchive@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CHandler@NXz@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CHandler@NXz@NArchive@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CHandler@NXz@NArchive@@UAGKXZ']
endp
?QueryInterface@CHandler@NXz@NArchive@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CHandler@NXz@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CHandler@NXz@NArchive@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CHandler@NXz@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
??__Eg_Crc64TableInit@NXz@NArchive@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?g_Crc64TableInit@NXz@NArchive@@3UCCrc64Gen@12@A']
call ['??0CCrc64Gen@NXz@NArchive@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CCrc64Gen@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
call ['@Crc64GenerateTable@0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Eg_RegisterArc@NXz@NArchive@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_RegisterArc']
call ['??0CRegisterArc@NXz@NArchive@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CRegisterArc@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '_g_ArcInfo']
call ['?RegisterArc@@YGXPBUCArcInfo@@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

?FindNameForId@NZip@NArchive@@YGPBDPBUCIdToNamePair@12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_316']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_33E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+this]']
lea ['ecx,', '[eax+edx*8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_33C']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_340']
jmp ['short', 'loc_30D']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??0CHandler@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CHandler@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IInArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0IOutArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0ISetProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CHandler@NZip@NArchive@@6BIInArchive@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CHandler@NZip@NArchive@@6BIOutArchive@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CHandler@NZip@NArchive@@6BISetProperties@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0CInArchive@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0A8h']
call ['??0CBaseProps@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
call ['?InitMethodProps@CHandler@NZip@NArchive@@AAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetNumberOfProperties@CHandler@NZip@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Eh']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetPropertyInfo@CHandler@NZip@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '0Eh']
jb ['short', 'loc_460']
mov ['eax,', '80070057h']
jmp ['short', 'loc_48D']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_kProps[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
movzx ['dx,', 'byte', 'ptr', 'ds:?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['14h']
endp
?GetNumberOfArchiveProperties@CHandler@NZip@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetArchivePropertyInfo@CHandler@NZip@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '3']
jb ['short', 'loc_4D0']
mov ['eax,', '80070057h']
jmp ['short', 'loc_4FD']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_kArcProps[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
movzx ['dx,', 'byte', 'ptr', 'ds:?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['14h']
endp
?GetArchiveProperty@CHandler@NZip@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetArchiveProperty@CHandler@NZip@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '90h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_A0]']
mov ['ecx,', '24h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_60],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '[ebp+var_64]']
sub ['ecx,', '1Ch']
mov ['[ebp+var_64],', 'ecx']
cmp ['[ebp+var_64],', '41h']
ja ['$LN22']
mov ['edx,', '[ebp+var_64]']
movzx ['eax,', 'ds:$LN35[edx]']
jmp ['ds:$LN42[eax*4]']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+99h]']
test ['edx,', 'edx']
jz ['short', 'loc_5B2']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+99h]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
jmp ['$LN22']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8Ch']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_62E']
mov ['edx,', '[ebp+this]']
add ['edx,', '8Ch']
push ['edx']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
call ['?BytesToString@NZip@NArchive@@YG?AVAString@@ABV?$CBuffer@E@@@Z']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_70],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
push ['0']
mov ['edx,', '[ebp+var_70]']
push ['edx']
lea ['eax,', '[ebp+var_58]']
push ['eax']
call ['?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['[ebp+var_78],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['edx,', '[ebp+var_78]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_58]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_4C]']
call ['??1AString@@QAE@XZ']
jmp ['$LN22']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['?GetPhySize@CInArchiveInfo@NZip@NArchive@@QBE_KXZ']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_7C],', 'edx']
mov ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN22']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+5Ch]']
push ['eax']
mov ['ecx,', '[edx+58h]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_J@Z']
jmp ['$LN22']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['?GetEmbeddedStubSize@CInArchiveInfo@NZip@NArchive@@QBE_KXZ']
mov ['[ebp+var_88],', 'eax']
mov ['[ebp+var_84],', 'edx']
mov ['edx,', '[ebp+var_88]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_84]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_30]']
or ['ecx,', '[ebp+var_2C]']
jz ['short', 'loc_6B2']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN22']
mov ['[ebp+var_34],', '0']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9Bh]']
test ['edx,', 'edx']
jz ['short', 'loc_6D5']
mov ['eax,', '[ebp+var_34]']
or ['eax,', '2']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_6E7']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['$LN22']
mov ['[ebp+var_38],', '0']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+98h]']
test ['eax,', 'eax']
jnz ['short', 'loc_70A']
mov ['ecx,', '[ebp+var_38]']
or ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+9Ah]']
test ['eax,', 'eax']
jz ['short', 'loc_721']
mov ['ecx,', '[ebp+var_38]']
or ['ecx,', '2']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+9Dh]']
test ['eax,', 'eax']
jz ['short', 'loc_738']
mov ['ecx,', '[ebp+var_38]']
or ['ecx,', '20h']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
cmp ['dword', 'ptr', '[eax+5Ch],', '0']
jg ['short', 'loc_7C1']
jl ['short', 'loc_75B']
mov ['ecx,', '[ebp+var_8C]']
cmp ['dword', 'ptr', '[ecx+58h],', '0']
jnb ['short', 'loc_7C1']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['?GetEmbeddedStubSize@CInArchiveInfo@NZip@NArchive@@QBE_KXZ']
mov ['[ebp+var_94],', 'eax']
mov ['[ebp+var_90],', 'edx']
mov ['edx,', '[ebp+var_94]']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_90]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+58h]']
neg ['edx']
mov ['eax,', '[ecx+5Ch]']
adc ['eax,', '0']
neg ['eax']
mov ['[ebp+var_9C],', 'edx']
mov ['[ebp+var_98],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
cmp ['ecx,', '[ebp+var_98]']
ja ['short', 'loc_7C1']
jb ['short', 'loc_7B8']
mov ['edx,', '[ebp+var_40]']
cmp ['edx,', '[ebp+var_9C]']
jnb ['short', 'loc_7C1']
mov ['eax,', '[ebp+var_38]']
or ['eax,', '8']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9Eh]']
test ['edx,', 'edx']
jz ['short', 'loc_7D8']
mov ['eax,', '[ebp+var_38]']
or ['eax,', '10h']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['short', '$LN22']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?IsOpen@CInArchive@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_9D],', 'al']
movzx ['edx,', '[ebp+var_9D]']
test ['edx,', 'edx']
jz ['short', '$LN22']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?CanUpdate@CInArchive@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_9E],', 'al']
movzx ['eax,', '[ebp+var_9E]']
test ['eax,', 'eax']
jnz ['short', '$LN22']
push ['1']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
jmp ['short', '$LN27']
endp
__catch$?GetArchiveProperty@CHandler@NZip@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-5Ch],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN33']
retn
endp
$LN33           proc near               
mov ['eax,', '[ebp-5Ch]']
jmp ['short', 'loc_86C']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN41']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0A0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?BytesToString@NZip@NArchive@@YG?AVAString@@ABV?$CBuffer@E@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?BytesToString@NZip@NArchive@@YG?AVAString@@ABV?$CBuffer@E@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_24],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['?SetFrom_CalcLen@AString@@QAEXPBDI@Z']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0AString@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_24]']
or ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetNumberOfItems@CHandler@NZip@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?Size@?$CObjectVector@VCItemEx@NZip@NArchive@@@@QBEIXZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?GetProperty@CHandler@NZip@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetProperty@CHandler@NZip@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '1D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1E0]']
mov ['ecx,', '74h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_14],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_194],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['??A?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAEAAVCItemEx@NZip@NArchive@@I@Z']
mov ['[ebp+var_198],', 'eax']
mov ['ecx,', '[ebp+var_198]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_19C],', 'edx']
mov ['eax,', '[ebp+var_19C]']
sub ['eax,', '3']
mov ['[ebp+var_19C],', 'eax']
cmp ['[ebp+var_19C],', '32h']
ja ['$LN50']
mov ['ecx,', '[ebp+var_19C]']
movzx ['edx,', 'ds:$LN65[ecx]']
jmp ['ds:$LN87[edx*4]']
lea ['ecx,', '[ebp+var_40]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_1A0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0CCh]']
push ['ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+0C9h]']
push ['eax']
lea ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '20h']
push ['edx']
mov ['ecx,', '[ebp+var_30]']
call ['?GetUnicodeString@CItem@NZip@NArchive@@QBEXABVAString@@AAVUString@@_NI@Z']
lea ['eax,', '[ebp+var_40]']
push ['eax']
call ['?ConvertToOSName2@NItemName@NArchive@@YGXAAVUString@@@Z']
lea ['ecx,', '[ebp+var_40]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_40]']
call ['??1UString@@QAE@XZ']
jmp ['$LN50']
mov ['ecx,', '[ebp+var_30]']
call ['?IsDir@CItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_1A1],', 'al']
movzx ['edx,', '[ebp+var_1A1]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
jmp ['$LN50']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[eax+8]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN50']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN50']
lea ['eax,', '[ebp+var_50]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '48h']
call ['?GetNtfsTime@CExtraBlock@NZip@NArchive@@QBE_NIAAU_FILETIME@@@Z']
mov ['[ebp+var_1A2],', 'al']
movzx ['ecx,', '[ebp+var_1A2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_BC2']
mov ['[ebp+var_64],', '0']
jmp ['short', 'loc_BF6']
lea ['edx,', '[ebp+var_5C]']
push ['edx']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '48h']
call ['?GetUnixTime@CExtraBlock@NZip@NArchive@@QBE_N_NIAAI@Z']
mov ['[ebp+var_1A3],', 'al']
movzx ['eax,', '[ebp+var_1A3]']
test ['eax,', 'eax']
jz ['short', 'loc_BEF']
mov ['[ebp+var_64],', '1']
jmp ['short', 'loc_BF6']
mov ['[ebp+var_64],', '2']
mov ['ecx,', '[ebp+var_64]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['$LN50']
lea ['edx,', '[ebp+var_70]']
push ['edx']
push ['2']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '48h']
call ['?GetNtfsTime@CExtraBlock@NZip@NArchive@@QBE_NIAAU_FILETIME@@@Z']
mov ['[ebp+var_1A4],', 'al']
movzx ['eax,', '[ebp+var_1A4]']
test ['eax,', 'eax']
jz ['short', 'loc_C35']
lea ['ecx,', '[ebp+var_70]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z']
jmp ['$LN50']
lea ['edx,', '[ebp+var_80]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '48h']
call ['?GetNtfsTime@CExtraBlock@NZip@NArchive@@QBE_NIAAU_FILETIME@@@Z']
mov ['[ebp+var_1A5],', 'al']
movzx ['eax,', '[ebp+var_1A5]']
test ['eax,', 'eax']
jz ['short', 'loc_C68']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z']
jmp ['$LN50']
mov ['[ebp+var_95],', '1']
lea ['edx,', '[ebp+FileTime]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '48h']
call ['?GetNtfsTime@CExtraBlock@NZip@NArchive@@QBE_NIAAU_FILETIME@@@Z']
mov ['[ebp+var_1A6],', 'al']
movzx ['eax,', '[ebp+var_1A6]']
test ['eax,', 'eax']
jnz ['loc_D46']
mov ['[ebp+var_A0],', '0']
lea ['ecx,', '[ebp+var_A0]']
push ['ecx']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '48h']
call ['?GetUnixTime@CExtraBlock@NZip@NArchive@@QBE_N_NIAAI@Z']
mov ['[ebp+var_1A7],', 'al']
movzx ['edx,', '[ebp+var_1A7]']
test ['edx,', 'edx']
jz ['short', 'loc_CE3']
lea ['eax,', '[ebp+FileTime]']
push ['eax']
mov ['ecx,', '[ebp+var_A0]']
push ['ecx']
call ['?UnixTimeToFileTime@NTime@NWindows@@YGXIAAU_FILETIME@@@Z']
jmp ['short', 'loc_D46']
mov ['edx,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jnz ['short', 'loc_CF5']
mov ['[ebp+var_95],', '0']
jmp ['short', 'loc_D46']
lea ['eax,', '[ebp+LocalFileTime]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['?DosTimeToFileTime@NTime@NWindows@@YG_NIAAU_FILETIME@@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_D30']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+FileTime]']
push ['ecx']
lea ['edx,', '[ebp+LocalFileTime]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__LocalFileTimeToFileTime@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_D46']
mov ['[ebp+FileTime.dwLowDateTime],', '0']
mov ['eax,', '[ebp+FileTime.dwLowDateTime]']
mov ['[ebp+FileTime.dwHighDateTime],', 'eax']
movzx ['ecx,', '[ebp+var_95]']
test ['ecx,', 'ecx']
jz ['short', 'loc_D60']
lea ['edx,', '[ebp+FileTime]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z']
jmp ['$LN50']
mov ['ecx,', '[ebp+var_30]']
call ['?GetWinAttrib@CItem@NZip@NArchive@@QBEIXZ']
mov ['[ebp+var_1AC],', 'eax']
mov ['eax,', '[ebp+var_1AC]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['$LN50']
lea ['ecx,', '[ebp+var_BC]']
push ['ecx']
mov ['ecx,', '[ebp+var_30]']
call ['?GetPosixAttrib@CItem@NZip@NArchive@@QBE_NAAI@Z']
mov ['[ebp+var_1AD],', 'al']
movzx ['edx,', '[ebp+var_1AD]']
test ['edx,', 'edx']
jz ['short', 'loc_DB6']
mov ['eax,', '[ebp+var_BC]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['$LN50']
mov ['ecx,', '[ebp+var_30]']
call ['?IsEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_1AE],', 'al']
movzx ['ecx,', '[ebp+var_1AE]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
jmp ['$LN50']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '54h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['[ebp+var_1B4],', 'eax']
cmp ['[ebp+var_1B4],', '0']
jz ['loc_E92']
lea ['ecx,', '[ebp+var_D0]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_1B8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '54h']
push ['edx']
lea ['eax,', '[ebp+var_188]']
push ['eax']
call ['?BytesToString@NZip@NArchive@@YG?AVAString@@ABV?$CBuffer@E@@@Z']
mov ['[ebp+var_1BC],', 'eax']
mov ['ecx,', '[ebp+var_1BC]']
mov ['[ebp+var_1C0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0CCh]']
push ['eax']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C9h]']
push ['edx']
lea ['eax,', '[ebp+var_D0]']
push ['eax']
mov ['ecx,', '[ebp+var_1C0]']
push ['ecx']
mov ['ecx,', '[ebp+var_30]']
call ['?GetUnicodeString@CItem@NZip@NArchive@@QBEXABVAString@@AAVUString@@_NI@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_188]']
call ['??1AString@@QAE@XZ']
lea ['edx,', '[ebp+var_D0]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_D0]']
call ['??1UString@@QAE@XZ']
jmp ['$LN50']
mov ['ecx,', '[ebp+var_30]']
call ['?IsThereCrc@CItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_1C1],', 'al']
movzx ['eax,', '[ebp+var_1C1]']
test ['eax,', 'eax']
jz ['short', 'loc_EBF']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['$LN50']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_D8],', 'ecx']
lea ['ecx,', '[ebp+var_E8]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_1C8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_30]']
call ['?IsEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_1C9],', 'al']
movzx ['edx,', '[ebp+var_1C9]']
test ['edx,', 'edx']
jz ['loc_1097']
cmp ['[ebp+var_D8],', '63h']
jnz ['loc_F94']
mov ['eax,', 'ds:_kMethod_AES']
push ['eax']
lea ['ecx,', '[ebp+var_E8]']
call ['??YAString@@QAEAAV0@PBD@Z']
lea ['ecx,', '[ebp+var_F8]']
call ['??0CWzAesExtra@NZip@NArchive@@QAE@XZ']
lea ['ecx,', '[ebp+var_F8]']
push ['ecx']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '48h']
call ['?GetWzAes@CExtraBlock@NZip@NArchive@@QBE_NAAUCWzAesExtra@23@@Z']
mov ['[ebp+var_1CA],', 'al']
movzx ['edx,', '[ebp+var_1CA]']
test ['edx,', 'edx']
jz ['short', 'loc_F8F']
mov ['[ebp+var_110],', '2Dh']
lea ['eax,', '[ebp+var_10F]']
push ['eax']
movzx ['ecx,', '[ebp+var_F6]']
add ['ecx,', '1']
shl ['ecx,', '6']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
lea ['edx,', '[ebp+var_110]']
push ['edx']
lea ['ecx,', '[ebp+var_E8]']
call ['??YAString@@QAEAAV0@PBD@Z']
movzx ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_D8],', 'eax']
jmp ['loc_108A']
mov ['ecx,', '[ebp+var_30]']
call ['?IsStrongEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_1CB],', 'al']
movzx ['ecx,', '[ebp+var_1CB]']
test ['ecx,', 'ecx']
jz ['loc_1078']
xor ['edx,', 'edx']
mov ['[ebp+var_11E],', 'dx']
lea ['eax,', '[ebp+var_120]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '48h']
call ['?GetStrongCrypto@CExtraBlock@NZip@NArchive@@QBE_NAAUCStrongCryptoExtra@23@@Z']
mov ['[ebp+var_1CC],', 'al']
movzx ['ecx,', '[ebp+var_1CC]']
test ['ecx,', 'ecx']
jz ['loc_1065']
movzx ['edx,', '[ebp+var_11E]']
push ['edx']
push ['offset', 'unk_B']
push ['offset', '_k_StrongCryptoPairs']
call ['?FindNameForId@NZip@NArchive@@YGPBDPBUCIdToNamePair@12@II@Z']
mov ['[ebp+var_1D0],', 'eax']
mov ['eax,', '[ebp+var_1D0]']
mov ['[ebp+var_128],', 'eax']
cmp ['[ebp+var_128],', '0']
jz ['short', 'loc_1024']
mov ['ecx,', '[ebp+var_128]']
push ['ecx']
lea ['ecx,', '[ebp+var_E8]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['short', 'loc_1063']
mov ['edx,', 'ds:_kMethod_StrongCrypto']
push ['edx']
lea ['ecx,', '[ebp+var_E8]']
call ['??YAString@@QAEAAV0@PBD@Z']
mov ['[ebp+var_13C],', '3Ah']
lea ['eax,', '[ebp+var_13B]']
push ['eax']
movzx ['ecx,', '[ebp+var_11E]']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
lea ['edx,', '[ebp+var_13C]']
push ['edx']
lea ['ecx,', '[ebp+var_E8]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['short', 'loc_1076']
mov ['eax,', 'ds:_kMethod_StrongCrypto']
push ['eax']
lea ['ecx,', '[ebp+var_E8]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['short', 'loc_108A']
mov ['ecx,', 'ds:_kMethod_ZipCrypto']
push ['ecx']
lea ['ecx,', '[ebp+var_E8]']
call ['??YAString@@QAEAAV0@PBD@Z']
push ['20h']
lea ['ecx,', '[ebp+var_E8]']
call ['??YAString@@QAEAAV0@D@Z']
mov ['[ebp+var_15C],', '0']
cmp ['[ebp+var_D8],', '0Bh']
jnb ['short', 'loc_10BF']
mov ['edx,', '[ebp+var_D8]']
mov ['eax,', '_kMethods[edx*4]']
mov ['[ebp+var_15C],', 'eax']
jmp ['short', 'loc_110C']
mov ['ecx,', '[ebp+var_D8]']
push ['ecx']
push ['(offset', '$SG73947+2)']
push ['offset', '_k_MethodIdNamePairs']
call ['?FindNameForId@NZip@NArchive@@YGPBDPBUCIdToNamePair@12@II@Z']
mov ['[ebp+var_1D4],', 'eax']
mov ['edx,', '[ebp+var_1D4]']
mov ['[ebp+var_15C],', 'edx']
cmp ['[ebp+var_15C],', '0']
jnz ['short', 'loc_110C']
lea ['eax,', '[ebp+var_154]']
push ['eax']
mov ['ecx,', '[ebp+var_D8]']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
lea ['edx,', '[ebp+var_154]']
mov ['[ebp+var_15C],', 'edx']
mov ['eax,', '[ebp+var_15C]']
push ['eax']
lea ['ecx,', '[ebp+var_E8]']
call ['??YAString@@QAEAAV0@PBD@Z']
cmp ['[ebp+var_D8],', '0Eh']
jnz ['short', 'loc_1150']
mov ['ecx,', '[ebp+var_30]']
call ['?IsLzmaEOS@CLocalItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_1D5],', 'al']
movzx ['ecx,', '[ebp+var_1D5]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1150']
push ['offset', '$SG74206']
lea ['ecx,', '[ebp+var_E8]']
call ['??YAString@@QAEAAV0@PBD@Z']
lea ['ecx,', '[ebp+var_E8]']
call ['??BAString@@QBEPBDXZ']
mov ['[ebp+var_1DC],', 'eax']
mov ['edx,', '[ebp+var_1DC]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_E8]']
call ['??1AString@@QAE@XZ']
jmp ['$LN50']
mov ['ecx,', '[ebp+var_30]']
call ['?GetHostOS@CItem@NZip@NArchive@@QBEEXZ']
mov ['[ebp+var_1DD],', 'al']
mov ['al,', '[ebp+var_1DD]']
mov ['[ebp+var_15D],', 'al']
mov ['[ebp+var_17C],', '0']
movzx ['ecx,', '[ebp+var_15D]']
cmp ['ecx,', '14h']
jnb ['short', 'loc_11CA']
movzx ['edx,', '[ebp+var_15D]']
mov ['eax,', '_kHostOS[edx*4]']
mov ['[ebp+var_17C],', 'eax']
jmp ['short', 'loc_11EA']
lea ['ecx,', '[ebp+var_174]']
push ['ecx']
movzx ['edx,', '[ebp+var_15D]']
push ['edx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
lea ['eax,', '[ebp+var_174]']
mov ['[ebp+var_17C],', 'eax']
mov ['ecx,', '[ebp+var_17C]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z']
jmp ['short', '$LN50']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_18C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_18C]']
jmp ['short', 'loc_1261']
endp
__catch$?GetProperty@CHandler@NZip@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-190h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN63']
retn
endp
?SetCompletedLocal@CProgressImp@NZip@NArchive@@UAEJ_K0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?SetTotalCD@CProgressImp@NZip@NArchive@@UAEJ_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetCompletedCD@CProgressImp@NZip@NArchive@@UAEJ_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Open@CHandler@NZip@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Open@CHandler@NZip@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '28h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+this]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?Open@CInArchive@NZip@NArchive@@QAEJPAUIInStream@@PB_K@Z']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1607']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_16AF']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??0CProgressImp@NZip@NArchive@@QAE@PAUIArchiveOpenCallback@@@Z']
mov ['[ebp+var_34],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edx,', '[ebp+arg_C]']
neg ['edx']
sbb ['edx,', 'edx']
lea ['eax,', '[ebp+var_20]']
and ['edx,', 'eax']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?ReadHeaders@CInArchive@NZip@NArchive@@QAEJAAV?$CObjectVector@VCItemEx@NZip@NArchive@@@@PAUCProgressVirt@23@@Z']
mov ['[ebp+var_38],', 'eax']
mov ['edx,', '[ebp+var_38]']
mov ['[ebp+var_28],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_20]']
call ['??1CProgressImp@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_28]']
jmp ['short', 'loc_16AF']
endp
__catch$?Open@CHandler@NZip@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['ecx,', '[ebp+8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
__catch$?Open@CHandler@NZip@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$2 proc near
mov ['dword', 'ptr', '[ebp-2Ch],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN14']
retn
endp
?Close@CHandler@NZip@NArchive@@UAGJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?Clear@?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAEXXZ']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?Close@CInArchive@NZip@NArchive@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
??0CLzmaDecoder@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CLzmaDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CLzmaDecoder@NZip@NArchive@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
push ['0D8h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_17BE']
mov ['ecx,', '[ebp+var_18]']
call ['??0CDecoder@NLzma@NCompress@@QAE@XZ']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_17C5']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Code@CLzmaDecoder@NZip@NArchive@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
push ['9']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1861']
mov ['eax,', '[ebp+var_1C]']
jmp ['loc_18E5']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_14+2]']
cmp ['edx,', '5']
jnz ['short', 'loc_1872']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_14+3]']
test ['eax,', 'eax']
jz ['short', 'loc_1879']
mov ['eax,', '80004001h']
jmp ['short', 'loc_18E5']
mov ['esi,', 'esp']
push ['5']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
add ['edx,', '4']
mov ['eax,', '[eax+4]']
push ['edx']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_18AE']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_18E5']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
mov ['[ebp+var_24],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?Code@CXzDecoder@NZip@NArchive@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?Decode@CDecoder@NXz@NArchive@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1969']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_1993']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?Get_Extract_OperationResult@CDecoder@NXz@NArchive@@QBEHXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
jnz ['short', 'loc_1984']
mov ['eax,', '80004001h']
jmp ['short', 'loc_1993']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1991']
mov ['eax,', '1']
jmp ['short', 'loc_1993']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '290h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_29C]']
mov ['ecx,', '0A4h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '2']
lea ['ecx,', '[ebp+var_18]']
call ['??0C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_1D],', '1']
mov ['[ebp+var_1E],', '0']
mov ['[ebp+var_1F],', '0']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
mov ['[ebp+var_24],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?IsEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_1ACB']
mov ['ecx,', '[ebp+arg_4]']
call ['?IsStrongEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1A90']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '48h']
call ['?GetStrongCrypto@CExtraBlock@NZip@NArchive@@QBE_NAAUCStrongCryptoExtra@23@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1A5B']
mov ['[ebp+var_1F],', '1']
movzx ['ecx,', '[ebp+var_1F]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1A90']
mov ['edx,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[edx],', '1']
mov ['[ebp+var_160],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_160]']
jmp ['loc_310D']
movzx ['eax,', '[ebp+var_1F]']
test ['eax,', 'eax']
jnz ['short', 'loc_1ACB']
cmp ['[ebp+var_24],', '63h']
jnz ['short', 'loc_1ACB']
lea ['ecx,', '[ebp+var_40]']
call ['??0CWzAesExtra@NZip@NArchive@@QAE@XZ']
lea ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '48h']
call ['?GetWzAes@CExtraBlock@NZip@NArchive@@QBE_NAAUCWzAesExtra@23@@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1ACB']
mov ['[ebp+var_1E],', '1']
lea ['ecx,', '[ebp+var_40]']
call ['?NeedCrc@CWzAesExtra@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_1D],', 'al']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_168],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_168],', '0']
jz ['short', 'loc_1AFB']
mov ['ecx,', '[ebp+var_168]']
call ['??0COutStreamWithCRC@@QAE@XZ']
mov ['[ebp+var_240],', 'eax']
jmp ['short', 'loc_1B05']
mov ['[ebp+var_240],', '0']
mov ['eax,', '[ebp+var_240]']
mov ['[ebp+var_164],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_164]']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
lea ['ecx,', '[ebp+var_50]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
call ['?SetStream@COutStreamWithCRC@@QAEXPAUISequentialOutStream@@@Z']
movzx ['ecx,', '[ebp+var_1D]']
push ['ecx']
mov ['ecx,', '[ebp+var_48]']
call ['?Init@COutStreamWithCRC@@QAEX_N@Z']
lea ['ecx,', '[ebp+var_64]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+10h]']
mov ['dword', 'ptr', '[ebp+var_70],', 'eax']
mov ['ecx,', '[edx+14h]']
mov ['dword', 'ptr', '[ebp+var_70+4],', 'ecx']
movzx ['edx,', '[ebp+var_1E]']
test ['edx,', 'edx']
jz ['short', 'loc_1BC6']
cmp ['dword', 'ptr', '[ebp+var_70+4],', '0']
ja ['short', 'loc_1BB4']
jb ['short', 'loc_1B78']
cmp ['dword', 'ptr', '[ebp+var_70],', '0Ah']
jnb ['short', 'loc_1BB4']
mov ['[ebp+var_16C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_16C]']
jmp ['loc_310D']
mov ['eax,', 'dword', 'ptr', '[ebp+var_70]']
sub ['eax,', '0Ah']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_70+4]']
sbb ['ecx,', '0']
mov ['dword', 'ptr', '[ebp+var_70],', 'eax']
mov ['dword', 'ptr', '[ebp+var_70+4],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetDataPosition@CItemEx@NZip@NArchive@@QBE_KXZ']
mov ['dword', 'ptr', '[ebp+var_78],', 'eax']
mov ['dword', 'ptr', '[ebp+var_78+4],', 'edx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_70+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_70]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_78+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_78]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?CreateLimitedStream@CInArchive@NZip@NArchive@@QAEPAUISequentialInStream@@_K0@Z']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['?Attach@?$CMyComPtr@UISequentialInStream@@@@QAEXPAUISequentialInStream@@@Z']
mov ['eax,', 'dword', 'ptr', '[ebp+var_78]']
add ['eax,', 'dword', 'ptr', '[ebp+var_70]']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_78+4]']
adc ['ecx,', 'dword', 'ptr', '[ebp+var_70+4]']
mov ['dword', 'ptr', '[ebp+var_5C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_5C+4],', 'ecx']
lea ['ecx,', '[ebp+var_80]']
call ['??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+arg_4]']
call ['?IsEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_231A']
movzx ['eax,', '[ebp+var_1E]']
test ['eax,', 'eax']
jz ['loc_1DA4']
lea ['ecx,', '[ebp+var_90]']
call ['??0CWzAesExtra@NZip@NArchive@@QAE@XZ']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '48h']
call ['?GetWzAes@CExtraBlock@NZip@NArchive@@QBE_NAAUCWzAesExtra@23@@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1C9E']
mov ['[ebp+var_170],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_170]']
jmp ['loc_310D']
movzx ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??7?$CMyComPtr@UICompressFilter@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1D25']
push ['230h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_178],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
cmp ['[ebp+var_178],', '0']
jz ['short', 'loc_1CED']
mov ['ecx,', '[ebp+var_178]']
call ['??0CDecoder@NWzAes@NCrypto@@QAE@XZ']
mov ['[ebp+var_244],', 'eax']
jmp ['short', 'loc_1CF7']
mov ['[ebp+var_244],', '0']
mov ['edx,', '[ebp+var_244]']
mov ['[ebp+var_174],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_174]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
push ['ecx']
lea ['ecx,', '[ebp+var_80]']
call ['??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@ABV0@@Z']
movzx ['edx,', '[ebp+var_8E]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
call ['?SetKeyMode@CBaseCoder@NWzAes@NCrypto@@QAE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1D9F']
mov ['edx,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[edx],', '1']
mov ['[ebp+var_17C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_17C]']
jmp ['loc_310D']
jmp ['loc_1EC8']
movzx ['eax,', '[ebp+var_1F]']
test ['eax,', 'eax']
jz ['loc_1E41']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??7?$CMyComPtr@UICompressFilter@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1E2D']
push ['198h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_184],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
cmp ['[ebp+var_184],', '0']
jz ['short', 'loc_1DF5']
mov ['ecx,', '[ebp+var_184]']
call ['??0CDecoder@NZipStrong@NCrypto@@QAE@XZ']
mov ['[ebp+var_248],', 'eax']
jmp ['short', 'loc_1DFF']
mov ['[ebp+var_248],', '0']
mov ['edx,', '[ebp+var_248]']
mov ['[ebp+var_180],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_180]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
push ['ecx']
lea ['ecx,', '[ebp+var_80]']
call ['??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@ABV0@@Z']
jmp ['loc_1EC8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??7?$CMyComPtr@UICompressFilter@@@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1EB9']
push ['30h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
cmp ['[ebp+var_18C],', '0']
jz ['short', 'loc_1E83']
mov ['ecx,', '[ebp+var_18C]']
call ['??0CDecoder@NZip@NCrypto@@QAE@XZ']
mov ['[ebp+var_24C],', 'eax']
jmp ['short', 'loc_1E8D']
mov ['[ebp+var_24C],', '0']
mov ['eax,', '[ebp+var_24C]']
mov ['[ebp+var_188],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_188]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '0Ch']
push ['edx']
lea ['ecx,', '[ebp+var_80]']
call ['??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@ABV0@@Z']
lea ['ecx,', '[ebp+var_9C]']
call ['??0?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_9C]']
call ['??I?$CMyComPtr@UICryptoSetPassword@@@@QAEPAPAUICryptoSetPassword@@XZ']
push ['eax']
push ['offset', '_IID_ICryptoSetPassword']
lea ['ecx,', '[ebp+var_80]']
call ['??$QueryInterface@UICryptoSetPassword@@@?$CMyComPtr@UICompressFilter@@@@QBEJABU_GUID@@PAPAUICryptoSetPassword@@@Z']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '0']
jz ['short', 'loc_1F58']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_190],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_9C]']
call ['??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_190]']
jmp ['loc_310D']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??7?$CMyComPtr@UICryptoGetTextPassword@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1F91']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ICryptoGetTextPassword']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ']
test ['eax,', 'eax']
jz ['loc_2271']
lea ['ecx,', '[ebp+var_AC]']
call ['??0CMyComBSTR@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??C?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ']
mov ['[ebp+var_250],', 'eax']
lea ['ecx,', '[ebp+var_AC]']
call ['??ICMyComBSTR@@QAEPAPA_WXZ']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+var_250]']
push ['eax']
mov ['ecx,', '[ebp+var_250]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B4],', 'eax']
cmp ['[ebp+var_B4],', '0']
jz ['short', 'loc_2064']
mov ['ecx,', '[ebp+var_B4]']
mov ['[ebp+var_194],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_AC]']
call ['??1CMyComBSTR@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_9C]']
call ['??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_194]']
jmp ['loc_310D']
lea ['ecx,', '[ebp+var_C4]']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_AC]']
call ['??BCMyComBSTR@@QBEPB_WXZ']
test ['eax,', 'eax']
jz ['loc_2184']
movzx ['edx,', '[ebp+var_1E]']
test ['edx,', 'edx']
jnz ['short', 'loc_2096']
movzx ['eax,', '[ebp+var_1F]']
test ['eax,', 'eax']
jz ['short', 'loc_210E']
lea ['ecx,', '[ebp+var_AC]']
call ['??BCMyComBSTR@@QBEPB_WXZ']
push ['eax']
lea ['ecx,', '[ebp+var_1A0]']
call ['??0UString@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
push ['0']
lea ['ecx,', '[ebp+var_1A0]']
push ['ecx']
lea ['edx,', '[ebp+var_1AC]']
push ['edx']
call ['?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z']
mov ['[ebp+var_254],', 'eax']
mov ['eax,', '[ebp+var_254]']
mov ['[ebp+var_258],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
mov ['ecx,', '[ebp+var_258]']
push ['ecx']
lea ['ecx,', '[ebp+var_C4]']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_1AC]']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1A0]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_2184']
lea ['ecx,', '[ebp+var_AC]']
call ['??BCMyComBSTR@@QBEPB_WXZ']
push ['eax']
lea ['ecx,', '[ebp+var_1B8]']
call ['??0UString@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
push ['1']
lea ['edx,', '[ebp+var_1B8]']
push ['edx']
lea ['eax,', '[ebp+var_1C4]']
push ['eax']
call ['?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z']
mov ['[ebp+var_25C],', 'eax']
mov ['ecx,', '[ebp+var_25C]']
mov ['[ebp+var_260],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
mov ['edx,', '[ebp+var_260]']
push ['edx']
lea ['ecx,', '[ebp+var_C4]']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
lea ['ecx,', '[ebp+var_1C4]']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1B8]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_9C]']
call ['??C?$CMyComPtr@UICryptoSetPassword@@@@QBEPAUICryptoSetPassword@@XZ']
mov ['[ebp+var_264],', 'eax']
lea ['ecx,', '[ebp+var_C4]']
call ['?Len@AString@@QBEIXZ']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['eax,', '[ebp+var_264]']
push ['eax']
mov ['ecx,', '[ebp+var_264]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_CC],', 'eax']
cmp ['[ebp+var_CC],', '0']
jz ['short', 'loc_224E']
mov ['[ebp+var_1C8],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_C4]']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_AC]']
call ['??1CMyComBSTR@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_9C]']
call ['??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_1C8]']
jmp ['loc_310D']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_C4]']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_AC]']
call ['??1CMyComBSTR@@QAE@XZ']
jmp ['loc_230B']
lea ['ecx,', '[ebp+var_9C]']
call ['??C?$CMyComPtr@UICryptoSetPassword@@@@QBEPAUICryptoSetPassword@@XZ']
mov ['[ebp+var_268],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_268]']
push ['ecx']
mov ['edx,', '[ebp+var_268]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D0],', 'eax']
cmp ['[ebp+var_D0],', '0']
jz ['short', 'loc_230B']
mov ['edx,', '[ebp+var_D0]']
mov ['[ebp+var_1CC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_9C]']
call ['??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_1CC]']
jmp ['loc_310D']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_9C]']
call ['??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ']
mov ['[ebp+var_D4],', '0']
jmp ['short', 'loc_2335']
mov ['eax,', '[ebp+var_D4]']
add ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['?Size@?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_D4],', 'eax']
jnb ['short', 'loc_2365']
mov ['ecx,', '[ebp+var_D4]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??A?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAEAAUCMethodItem@NZip@NArchive@@I@Z']
mov ['edx,', '[eax]']
cmp ['edx,', '[ebp+var_24]']
jnz ['short', 'loc_2363']
jmp ['short', 'loc_2365']
jmp ['short', 'loc_2326']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['?Size@?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_D4],', 'eax']
jnz ['loc_27C7']
lea ['ecx,', '[ebp+var_E0]']
call ['??0CMethodItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_23FB']
push ['28h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1D4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
cmp ['[ebp+var_1D4],', '0']
jz ['short', 'loc_23CA']
mov ['ecx,', '[ebp+var_1D4]']
call ['??0CCopyCoder@NCompress@@QAE@XZ']
mov ['[ebp+var_26C],', 'eax']
jmp ['short', 'loc_23D4']
mov ['[ebp+var_26C],', '0']
mov ['ecx,', '[ebp+var_26C]']
mov ['[ebp+var_1D0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
mov ['edx,', '[ebp+var_1D0]']
push ['edx']
lea ['ecx,', '[ebp+var_DC]']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z']
jmp ['loc_27A0']
cmp ['[ebp+var_24],', '1']
jnz ['short', 'loc_2465']
push ['0C008h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1DC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
cmp ['[ebp+var_1DC],', '0']
jz ['short', 'loc_2434']
mov ['ecx,', '[ebp+var_1DC]']
call ['??0CDecoder@NShrink@NCompress@@QAE@XZ']
mov ['[ebp+var_270],', 'eax']
jmp ['short', 'loc_243E']
mov ['[ebp+var_270],', '0']
mov ['eax,', '[ebp+var_270]']
mov ['[ebp+var_1D8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
mov ['ecx,', '[ebp+var_1D8]']
push ['ecx']
lea ['ecx,', '[ebp+var_DC]']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z']
jmp ['loc_27A0']
cmp ['[ebp+var_24],', '6']
jnz ['short', 'loc_24CF']
push ['248h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1E4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
cmp ['[ebp+var_1E4],', '0']
jz ['short', 'loc_249E']
mov ['ecx,', '[ebp+var_1E4]']
call ['??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ']
mov ['[ebp+var_274],', 'eax']
jmp ['short', 'loc_24A8']
mov ['[ebp+var_274],', '0']
mov ['edx,', '[ebp+var_274]']
mov ['[ebp+var_1E0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
mov ['eax,', '[ebp+var_1E0]']
push ['eax']
lea ['ecx,', '[ebp+var_DC]']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z']
jmp ['loc_27A0']
cmp ['[ebp+var_24],', '0Eh']
jnz ['short', 'loc_2536']
push ['10h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
cmp ['[ebp+var_1EC],', '0']
jz ['short', 'loc_2505']
mov ['ecx,', '[ebp+var_1EC]']
call ['??0CLzmaDecoder@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_278],', 'eax']
jmp ['short', 'loc_250F']
mov ['[ebp+var_278],', '0']
mov ['ecx,', '[ebp+var_278]']
mov ['[ebp+var_1E8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
mov ['edx,', '[ebp+var_1E8]']
push ['edx']
lea ['ecx,', '[ebp+var_DC]']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z']
jmp ['loc_27A0']
cmp ['[ebp+var_24],', '5Fh']
jnz ['short', 'loc_25A0']
push ['6F0h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1F4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
cmp ['[ebp+var_1F4],', '0']
jz ['short', 'loc_256F']
mov ['ecx,', '[ebp+var_1F4]']
call ['??0CXzDecoder@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_27C],', 'eax']
jmp ['short', 'loc_2579']
mov ['[ebp+var_27C],', '0']
mov ['eax,', '[ebp+var_27C]']
mov ['[ebp+var_1F0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
mov ['ecx,', '[ebp+var_1F0]']
push ['ecx']
lea ['ecx,', '[ebp+var_DC]']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z']
jmp ['loc_27A0']
cmp ['[ebp+var_24],', '62h']
jnz ['short', 'loc_260C']
push ['1CF0h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1FC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
cmp ['[ebp+var_1FC],', '0']
jz ['short', 'loc_25DB']
push ['1']
mov ['ecx,', '[ebp+var_1FC]']
call ['??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z']
mov ['[ebp+var_280],', 'eax']
jmp ['short', 'loc_25E5']
mov ['[ebp+var_280],', '0']
mov ['edx,', '[ebp+var_280]']
mov ['[ebp+var_1F8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
mov ['eax,', '[ebp+var_1F8]']
push ['eax']
lea ['ecx,', '[ebp+var_DC]']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z']
jmp ['loc_27A0']
cmp ['[ebp+var_24],', '0Ch']
jnz ['short', 'loc_262B']
mov ['[ebp+var_EC],', '40202h']
mov ['[ebp+var_E8],', '0']
jmp ['loc_26AD']
cmp ['[ebp+var_24],', '0FFh']
jbe ['short', 'loc_2694']
mov ['ecx,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[ecx],', '1']
mov ['[ebp+var_200],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??1CMethodItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_200]']
jmp ['loc_310D']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_24]']
cdq
add ['eax,', '40100h']
adc ['edx,', '0']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_E8],', 'edx']
lea ['edx,', '[ebp+var_DC]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_E8]']
push ['eax']
mov ['ecx,', '[ebp+var_EC]']
push ['ecx']
call ['?CreateCoder@@YGJ_K_NAAV?$CMyComPtr@UICompressCoder@@@@@Z']
mov ['[ebp+var_F0],', 'eax']
cmp ['[ebp+var_F0],', '0']
jz ['short', 'loc_2731']
mov ['edx,', '[ebp+var_F0]']
mov ['[ebp+var_204],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??1CMethodItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_204]']
jmp ['loc_310D']
lea ['ecx,', '[ebp+var_DC]']
call ['??B?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
test ['eax,', 'eax']
jnz ['short', 'loc_27A0']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['[ebp+var_208],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??1CMethodItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_208]']
jmp ['loc_310D']
lea ['ecx,', '[ebp+var_E0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['?Add@?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAEIABUCMethodItem@NZip@NArchive@@@Z']
mov ['[ebp+var_D4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??1CMethodItem@NZip@NArchive@@QAE@XZ']
mov ['edx,', '[ebp+var_D4]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??A?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAEAAUCMethodItem@NZip@NArchive@@I@Z']
add ['eax,', '4']
mov ['ecx,', 'eax']
call ['??B?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
mov ['[ebp+var_F4],', 'eax']
lea ['ecx,', '[ebp+var_FC]']
call ['??0?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
lea ['ecx,', '[ebp+var_FC]']
call ['??I?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAEPAPAUICompressSetDecoderProperties2@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ICompressSetDecoderProperties2']
mov ['eax,', '[ebp+var_F4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_F4]']
push ['edx']
mov ['eax,', '[ecx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_FC]']
call ['??B?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBEPAUICompressSetDecoderProperties2@@XZ']
test ['eax,', 'eax']
jz ['loc_28E2']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_105],', 'dl']
lea ['ecx,', '[ebp+var_FC]']
call ['??C?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBEPAUICompressSetDecoderProperties2@@XZ']
mov ['[ebp+var_284],', 'eax']
mov ['esi,', 'esp']
push ['1']
lea ['eax,', '[ebp+var_105]']
push ['eax']
mov ['ecx,', '[ebp+var_284]']
push ['ecx']
mov ['edx,', '[ebp+var_284]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_110],', 'eax']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_28E2']
mov ['edx,', '[ebp+var_110]']
mov ['[ebp+var_20C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_FC]']
call ['??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_20C]']
jmp ['loc_310D']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_FC]']
call ['??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ']
lea ['ecx,', '[ebp+var_118]']
call ['??0?$CMyComPtr@UICompressSetCoderMt@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '17h']
lea ['ecx,', '[ebp+var_118]']
call ['??I?$CMyComPtr@UICompressSetCoderMt@@@@QAEPAPAUICompressSetCoderMt@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ICompressSetCoderMt']
mov ['eax,', '[ebp+var_F4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_F4]']
push ['edx']
mov ['eax,', '[ecx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_118]']
call ['??B?$CMyComPtr@UICompressSetCoderMt@@@@QBEPAUICompressSetCoderMt@@XZ']
test ['eax,', 'eax']
jz ['loc_29DA']
lea ['ecx,', '[ebp+var_118]']
call ['??C?$CMyComPtr@UICompressSetCoderMt@@@@QBEPAUICompressSetCoderMt@@XZ']
mov ['[ebp+var_288],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_288]']
push ['edx']
mov ['eax,', '[ebp+var_288]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_120],', 'eax']
cmp ['[ebp+var_120],', '0']
jz ['short', 'loc_29DA']
mov ['eax,', '[ebp+var_120]']
mov ['[ebp+var_210],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_118]']
call ['??1?$CMyComPtr@UICompressSetCoderMt@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_210]']
jmp ['loc_310D']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_118]']
call ['??1?$CMyComPtr@UICompressSetCoderMt@@@@QAE@XZ']
mov ['[ebp+var_124],', '0']
lea ['ecx,', '[ebp+var_12C]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
mov ['ecx,', '[ebp+arg_4]']
call ['?IsEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_2E73']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??7?$CMyComPtr@UISequentialInStream@@@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2AC8']
push ['98h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_218],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '19h']
cmp ['[ebp+var_218],', '0']
jz ['short', 'loc_2A60']
push ['0']
mov ['ecx,', '[ebp+var_218]']
call ['??0CFilterCoder@@QAE@_N@Z']
mov ['[ebp+var_28C],', 'eax']
jmp ['short', 'loc_2A6A']
mov ['[ebp+var_28C],', '0']
mov ['eax,', '[ebp+var_28C]']
mov ['[ebp+var_214],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_214]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_290],', 'ecx']
cmp ['[ebp+var_290],', '0']
jz ['short', 'loc_2AAC']
mov ['edx,', '[ebp+var_290]']
add ['edx,', '10h']
mov ['[ebp+var_294],', 'edx']
jmp ['short', 'loc_2AB6']
mov ['[ebp+var_294],', '0']
mov ['eax,', '[ebp+var_294]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx+18h]']
add ['ecx,', '94h']
call ['??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@ABV0@@Z']
movzx ['eax,', '[ebp+var_1E]']
test ['eax,', 'eax']
jz ['loc_2B83']
lea ['ecx,', '[ebp+var_64]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx+8]']
call ['?ReadHeader@CDecoder@NWzAes@NCrypto@@QAEJPAUISequentialInStream@@@Z']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '0']
jnz ['short', 'loc_2B7E']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx+8]']
call ['?Init_and_CheckPassword@CDecoder@NWzAes@NCrypto@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_2B7E']
mov ['ecx,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[ecx],', '9']
mov ['[ebp+var_21C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_21C]']
jmp ['loc_310D']
jmp ['loc_2D44']
movzx ['edx,', '[ebp+var_1F]']
test ['edx,', 'edx']
jz ['loc_2C59']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[eax+8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
lea ['ecx,', '[ebp+var_64]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx+4]']
call ['?ReadHeader@CDecoder@NZipStrong@NCrypto@@QAEJPAUISequentialInStream@@I_K@Z']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '0']
jnz ['loc_2C54']
lea ['eax,', '[ebp+var_135]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx+4]']
call ['?Init_and_CheckPassword@CDecoder@NZipStrong@NCrypto@@QAEJAA_N@Z']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '0']
jnz ['short', 'loc_2C54']
movzx ['edx,', '[ebp+var_135]']
test ['edx,', 'edx']
jnz ['short', 'loc_2C54']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['[ebp+var_220],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_220]']
jmp ['loc_310D']
jmp ['loc_2D44']
lea ['ecx,', '[ebp+var_64]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx]']
call ['?ReadHeader@CDecoder@NZip@NCrypto@@QAEJPAUISequentialInStream@@@Z']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '0']
jnz ['loc_2D44']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx]']
call ['?Init_BeforeDecode@CDecoder@NZip@NCrypto@@QAEXXZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['dl,', '[ecx+2Fh]']
mov ['[ebp+var_13D],', 'dl']
mov ['ecx,', '[ebp+arg_4]']
call ['?HasDescriptor@CLocalItem@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2CB7']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+18h]']
shr ['edx,', '8']
mov ['[ebp+var_298],', 'edx']
jmp ['short', 'loc_2CC6']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
shr ['ecx,', '18h']
mov ['[ebp+var_298],', 'ecx']
mov ['dl,', 'byte', 'ptr', '[ebp+var_298]']
mov ['[ebp+var_13E],', 'dl']
movzx ['eax,', '[ebp+var_13D]']
movzx ['ecx,', '[ebp+var_13E]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_2D44']
mov ['edx,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[edx],', '9']
mov ['[ebp+var_224],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_224]']
jmp ['loc_310D']
cmp ['[ebp+var_124],', '0']
jnz ['loc_2E71']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_18],', 'ecx']
lea ['ecx,', '[ebp+var_64]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '0Ch']
mov ['eax,', '[eax+0Ch]']
push ['edx']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_144],', 'eax']
cmp ['[ebp+var_144],', '0']
jz ['short', 'loc_2DEC']
mov ['edx,', '[ebp+var_144]']
mov ['[ebp+var_228],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_228]']
jmp ['loc_310D']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+18h]']
call ['?Init_NoSubFilterInit@CFilterCoder@@QAEJXZ']
mov ['[ebp+var_148],', 'eax']
cmp ['[ebp+var_148],', '0']
jz ['short', 'loc_2E5F']
mov ['ecx,', '[ebp+var_148]']
mov ['[ebp+var_22C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_22C]']
jmp ['loc_310D']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1Ch']
push ['edx']
lea ['ecx,', '[ebp+var_12C]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@ABV0@@Z']
jmp ['short', 'loc_2E82']
lea ['eax,', '[ebp+var_64]']
push ['eax']
lea ['ecx,', '[ebp+var_12C]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@ABV0@@Z']
cmp ['[ebp+var_124],', '0']
jnz ['short', 'loc_2ED0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '8']
push ['edx']
push ['0']
lea ['ecx,', '[ebp+var_50]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_12C]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['eax,', '[ebp+var_F4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_F4]']
push ['edx']
mov ['eax,', '[ecx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '1']
jnz ['short', 'loc_2F30']
mov ['[ebp+var_230],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_230]']
jmp ['loc_310D']
cmp ['[ebp+var_124],', '80004001h']
jnz ['short', 'loc_2F9C']
mov ['ecx,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[ecx],', '1']
mov ['[ebp+var_234],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_234]']
jmp ['loc_310D']
mov ['edx,', '[ebp+var_124]']
mov ['[ebp+var_14C],', 'edx']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_300A']
mov ['eax,', '[ebp+var_14C]']
mov ['[ebp+var_238],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_238]']
jmp ['loc_310D']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_14D],', '1']
mov ['[ebp+var_155],', '1']
movzx ['ecx,', '[ebp+var_1D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3048']
mov ['ecx,', '[ebp+var_48]']
call ['?GetCRC@COutStreamWithCRC@@QBEIXZ']
mov ['edx,', '[ebp+arg_4]']
xor ['ecx,', 'ecx']
cmp ['eax,', '[edx+1Ch]']
setz ['cl']
mov ['[ebp+var_14D],', 'cl']
movzx ['edx,', '[ebp+var_1E]']
test ['edx,', 'edx']
jz ['short', 'loc_3093']
push ['0']
push ['0Ah']
mov ['eax,', 'dword', 'ptr', '[ebp+var_5C+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_5C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?CreateLimitedStream@CInArchive@NZip@NArchive@@QAEPAUISequentialInStream@@_K0@Z']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['?Attach@?$CMyComPtr@UISequentialInStream@@@@QAEXPAUISequentialInStream@@@Z']
lea ['edx,', '[ebp+var_155]']
push ['edx']
lea ['ecx,', '[ebp+var_64]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
call ['?CheckMac@CDecoder@NWzAes@NCrypto@@QAEJPAUISequentialInStream@@AA_N@Z']
test ['eax,', 'eax']
jz ['short', 'loc_3093']
mov ['[ebp+var_155],', '0']
movzx ['ecx,', '[ebp+var_14D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_30B5']
movzx ['edx,', '[ebp+var_155]']
test ['edx,', 'edx']
jz ['short', 'loc_30B5']
mov ['[ebp+var_29C],', '0']
jmp ['short', 'loc_30BF']
mov ['[ebp+var_29C],', '3']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[ebp+var_29C]']
mov ['[eax],', 'ecx']
mov ['[ebp+var_23C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+var_23C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN155']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '29Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
?Extract@CHandler@NZip@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Extract@CHandler@NZip@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '224h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_234]']
mov ['ecx,', '89h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??0CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_1B0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_50],', '0']
mov ['[ebp+var_4C],', '0']
mov ['[ebp+var_58],', '0']
mov ['[ebp+var_54],', '0']
xor ['eax,', 'eax']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
setz ['al']
mov ['[ebp+var_59],', 'al']
movzx ['ecx,', '[ebp+var_59]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3374']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?Size@?$CObjectVector@VCItemEx@NZip@NArchive@@@@QBEIXZ']
mov ['[ebp+var_1B4],', 'eax']
mov ['edx,', '[ebp+var_1B4]']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_339B']
mov ['[ebp+var_168],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_168]']
jmp ['loc_3F95']
mov ['[ebp+var_60],', '0']
jmp ['short', 'loc_33AD']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_60]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_3424']
movzx ['edx,', '[ebp+var_59]']
test ['edx,', 'edx']
jz ['short', 'loc_33C8']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+var_1B8],', 'eax']
jmp ['short', 'loc_33D7']
mov ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_1B8],', 'eax']
mov ['ecx,', '[ebp+var_1B8]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['??A?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAEAAVCItemEx@NZip@NArchive@@I@Z']
mov ['[ebp+var_1BC],', 'eax']
mov ['edx,', '[ebp+var_1BC]']
mov ['[ebp+var_64],', 'edx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_4C]']
adc ['edx,', '[eax+0Ch]']
mov ['[ebp+var_50],', 'ecx']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[ebp+var_58]']
add ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_54]']
adc ['edx,', '[eax+14h]']
mov ['[ebp+var_58],', 'ecx']
mov ['[ebp+var_54],', 'edx']
jmp ['short', 'loc_33A4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C0],', 'eax']
mov ['eax,', '[ebp+var_1C0]']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_3478']
mov ['ecx,', '[ebp+var_68]']
mov ['[ebp+var_16C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_16C]']
jmp ['loc_3F95']
mov ['[ebp+var_70],', '0']
mov ['[ebp+var_6C],', '0']
mov ['[ebp+var_78],', '0']
mov ['[ebp+var_74],', '0']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C4],', 'eax']
mov ['edx,', '[ebp+var_1C4]']
mov ['[ebp+var_174],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_174],', '0']
jz ['short', 'loc_34DC']
mov ['ecx,', '[ebp+var_174]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_1C8],', 'eax']
mov ['eax,', '[ebp+var_1C8]']
mov ['[ebp+var_1CC],', 'eax']
jmp ['short', 'loc_34E6']
mov ['[ebp+var_1CC],', '0']
mov ['ecx,', '[ebp+var_1CC]']
mov ['[ebp+var_170],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_170]']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
push ['eax']
lea ['ecx,', '[ebp+var_94]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
push ['0']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_8C]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
mov ['[ebp+var_60],', '0']
jmp ['short', 'loc_3565']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_70]']
add ['eax,', '[ebp+var_80]']
mov ['ecx,', '[ebp+var_6C]']
adc ['ecx,', '[ebp+var_7C]']
mov ['[ebp+var_70],', 'eax']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '[ebp+var_88]']
mov ['eax,', '[ebp+var_74]']
adc ['eax,', '[ebp+var_84]']
mov ['[ebp+var_78],', 'edx']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_60]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['loc_3F05']
mov ['[ebp+var_80],', '0']
mov ['[ebp+var_7C],', '0']
mov ['[ebp+var_88],', '0']
mov ['[ebp+var_84],', '0']
mov ['edx,', '[ebp+var_8C]']
mov ['eax,', '[ebp+var_78]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['[edx+24h],', 'ecx']
mov ['edx,', '[ebp+var_8C]']
mov ['eax,', '[ebp+var_70]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
mov ['[edx+2Ch],', 'ecx']
mov ['ecx,', '[ebp+var_8C]']
call ['?SetCur@CLocalProgress@@QAEJXZ']
mov ['[ebp+var_1D0],', 'eax']
mov ['edx,', '[ebp+var_1D0]']
mov ['[ebp+var_9C],', 'edx']
cmp ['[ebp+var_9C],', '0']
jz ['short', 'loc_360F']
mov ['eax,', '[ebp+var_9C]']
mov ['[ebp+var_178],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_178]']
jmp ['loc_3F95']
lea ['ecx,', '[ebp+var_A4]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_1D4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_C],', '0']
setnz ['cl']
mov ['[ebp+var_AC],', 'ecx']
movzx ['edx,', '[ebp+var_59]']
test ['edx,', 'edx']
jz ['short', 'loc_3646']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+var_1D8],', 'eax']
jmp ['short', 'loc_3655']
mov ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_1D8],', 'eax']
mov ['ecx,', '[ebp+var_1D8]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_B0]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['??A?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAEAAVCItemEx@NZip@NArchive@@I@Z']
mov ['[ebp+var_1DC],', 'eax']
mov ['eax,', '[ebp+var_1DC]']
push ['eax']
lea ['ecx,', '[ebp+var_11C]']
call ['??0CItemEx@NZip@NArchive@@QAE@ABV012@@Z']
mov ['[ebp+var_1E0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_11C]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?IsLocalOffsetOK@CInArchive@NZip@NArchive@@QBE_NABVCItemEx@23@@Z']
mov ['[ebp+var_1E1],', 'al']
mov ['dl,', '[ebp+var_1E1]']
mov ['[ebp+var_121],', 'dl']
movzx ['eax,', '[ebp+var_121]']
test ['eax,', 'eax']
jnz ['short', 'loc_36EC']
lea ['ecx,', '[ebp+var_11C]']
call ['?IsDir@CItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_1E2],', 'al']
movzx ['ecx,', '[ebp+var_1E2]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_36EC']
mov ['[ebp+var_1E8],', '1']
jmp ['short', 'loc_36F6']
mov ['[ebp+var_1E8],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_1E8]']
mov ['[ebp+var_122],', 'dl']
movzx ['eax,', '[ebp+var_122]']
test ['eax,', 'eax']
jz ['short', 'loc_3717']
mov ['[ebp+var_AC],', '2']
mov ['ecx,', '[ebp+var_114]']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+var_110]']
mov ['[ebp+var_7C],', 'edx']
mov ['eax,', '[ebp+var_10C]']
mov ['[ebp+var_88],', 'eax']
mov ['ecx,', '[ebp+var_108]']
mov ['[ebp+var_84],', 'ecx']
lea ['ecx,', '[ebp+var_A4]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
mov ['[ebp+var_1EC],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_AC]']
push ['edx']
mov ['eax,', '[ebp+var_1EC]']
push ['eax']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+14h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1F0],', 'eax']
mov ['eax,', '[ebp+var_1F0]']
mov ['[ebp+var_128],', 'eax']
cmp ['[ebp+var_128],', '0']
jz ['short', 'loc_37E9']
mov ['ecx,', '[ebp+var_128]']
mov ['[ebp+var_17C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_17C]']
jmp ['loc_3F95']
movzx ['edx,', '[ebp+var_121]']
test ['edx,', 'edx']
jnz ['loc_3933']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_AC]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1F4],', 'eax']
mov ['edx,', '[ebp+var_1F4]']
mov ['[ebp+var_12C],', 'edx']
cmp ['[ebp+var_12C],', '0']
jz ['short', 'loc_3881']
mov ['eax,', '[ebp+var_12C]']
mov ['[ebp+var_180],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_180]']
jmp ['loc_3F95']
lea ['ecx,', '[ebp+var_A4]']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
mov ['esi,', 'esp']
push ['4']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1F8],', 'eax']
mov ['edx,', '[ebp+var_1F8]']
mov ['[ebp+var_130],', 'edx']
cmp ['[ebp+var_130],', '0']
jz ['short', 'loc_3910']
mov ['eax,', '[ebp+var_130]']
mov ['[ebp+var_184],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_184]']
jmp ['loc_3F95']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_3532']
movzx ['ecx,', '[ebp+var_C0]']
test ['ecx,', 'ecx']
jnz ['loc_3B53']
lea ['edx,', '[ebp+var_11C]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?ReadLocalItemAfterCdItem@CInArchive@NZip@NArchive@@QAEJAAVCItemEx@23@@Z']
mov ['[ebp+var_1FC],', 'eax']
mov ['eax,', '[ebp+var_1FC]']
mov ['[ebp+var_134],', 'eax']
cmp ['[ebp+var_134],', '1']
jnz ['loc_3AEE']
lea ['ecx,', '[ebp+var_11C]']
call ['?IsDir@CItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_1FD],', 'al']
movzx ['ecx,', '[ebp+var_1FD]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_39B3']
lea ['ecx,', '[ebp+var_A4]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_204],', 'eax']
cmp ['[ebp+var_204],', '0']
jnz ['short', 'loc_39B3']
cmp ['[ebp+arg_C],', '0']
jz ['loc_3ACB']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_AC]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_208],', 'eax']
mov ['ecx,', '[ebp+var_208]']
mov ['[ebp+var_138],', 'ecx']
cmp ['[ebp+var_138],', '0']
jz ['short', 'loc_3A3C']
mov ['edx,', '[ebp+var_138]']
mov ['[ebp+var_188],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_188]']
jmp ['loc_3F95']
lea ['ecx,', '[ebp+var_A4]']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
mov ['esi,', 'esp']
push ['8']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20C],', 'eax']
mov ['ecx,', '[ebp+var_20C]']
mov ['[ebp+var_13C],', 'ecx']
cmp ['[ebp+var_13C],', '0']
jz ['short', 'loc_3ACB']
mov ['edx,', '[ebp+var_13C]']
mov ['[ebp+var_18C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_18C]']
jmp ['loc_3F95']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_3532']
mov ['eax,', '[ebp+var_134]']
mov ['[ebp+var_140],', 'eax']
cmp ['[ebp+var_140],', '0']
jz ['short', 'loc_3B53']
mov ['ecx,', '[ebp+var_140]']
mov ['[ebp+var_190],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_190]']
jmp ['loc_3F95']
lea ['ecx,', '[ebp+var_11C]']
call ['?IsDir@CItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_20D],', 'al']
movzx ['edx,', '[ebp+var_20D]']
test ['edx,', 'edx']
jz ['loc_3CAE']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_AC]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_214],', 'eax']
mov ['edx,', '[ebp+var_214]']
mov ['[ebp+var_144],', 'edx']
cmp ['[ebp+var_144],', '0']
jz ['short', 'loc_3BFC']
mov ['eax,', '[ebp+var_144]']
mov ['[ebp+var_194],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_194]']
jmp ['loc_3F95']
lea ['ecx,', '[ebp+var_A4]']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_218],', 'eax']
mov ['edx,', '[ebp+var_218]']
mov ['[ebp+var_148],', 'edx']
cmp ['[ebp+var_148],', '0']
jz ['short', 'loc_3C8B']
mov ['eax,', '[ebp+var_148]']
mov ['[ebp+var_198],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_198]']
jmp ['loc_3F95']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_3532']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_3CF3']
lea ['ecx,', '[ebp+var_A4]']
call ['??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ']
mov ['[ebp+var_219],', 'al']
movzx ['ecx,', '[ebp+var_219]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3CF3']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_3532']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_AC]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_220],', 'eax']
mov ['ecx,', '[ebp+var_220]']
mov ['[ebp+var_14C],', 'ecx']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_3D7C']
mov ['edx,', '[ebp+var_14C]']
mov ['[ebp+var_19C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_19C]']
jmp ['loc_3F95']
lea ['ecx,', '[ebp+var_94]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_224],', 'eax']
lea ['ecx,', '[ebp+var_A4]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_228],', 'eax']
lea ['eax,', '[ebp+var_154]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0B8h]']
push ['edx']
mov ['eax,', '[ebp+var_224]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_228]']
push ['edx']
lea ['eax,', '[ebp+var_11C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
push ['ecx']
lea ['ecx,', '[ebp+var_44]']
call ['?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z']
mov ['[ebp+var_22C],', 'eax']
mov ['edx,', '[ebp+var_22C]']
mov ['[ebp+var_15C],', 'edx']
mov ['eax,', '[ebp+var_15C]']
mov ['[ebp+var_160],', 'eax']
cmp ['[ebp+var_160],', '0']
jz ['short', 'loc_3E4E']
mov ['ecx,', '[ebp+var_160]']
mov ['[ebp+var_1A0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_1A0]']
jmp ['loc_3F95']
lea ['ecx,', '[ebp+var_A4]']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_154]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_230],', 'eax']
mov ['ecx,', '[ebp+var_230]']
mov ['[ebp+var_164],', 'ecx']
cmp ['[ebp+var_164],', '0']
jz ['short', 'loc_3EE2']
mov ['edx,', '[ebp+var_164]']
mov ['[ebp+var_1A4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_1A4]']
jmp ['loc_3F95']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_3532']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', '[ebp+var_78]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+var_74]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', '[ebp+var_70]']
mov ['[eax+28h],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['[eax+2Ch],', 'edx']
mov ['ecx,', '[ebp+var_8C]']
call ['?SetCur@CLocalProgress@@QAEJXZ']
mov ['[ebp+var_234],', 'eax']
mov ['eax,', '[ebp+var_234]']
mov ['[ebp+var_1A8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_1A8]']
jmp ['short', 'loc_3F95']
endp
__catch$?Extract@CHandler@NZip@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-1ACh],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN49_0']
retn
endp
__unwindfunclet$??0CHandler@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1CInArchive@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NZip@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0A8h']
jmp ['??1CBaseProps@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$??0CHandler@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CHandler@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetArchiveProperty@CHandler@NZip@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$2 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?GetArchiveProperty@CHandler@NZip@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$3 proc near
lea ['ecx,', '[ebp-4Ch]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?GetArchiveProperty@CHandler@NZip@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$4 proc near
lea ['ecx,', '[ebp-58h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?GetArchiveProperty@CHandler@NZip@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0A4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetArchiveProperty@CHandler@NZip@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?BytesToString@NZip@NArchive@@YG?AVAString@@ABV?$CBuffer@E@@@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?BytesToString@NZip@NArchive@@YG?AVAString@@ABV?$CBuffer@E@@@Z$1 proc near
mov ['eax,', '[ebp-24h]']
and ['eax,', '1']
jz ['locret_40D5']
and ['dword', 'ptr', '[ebp-24h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1AString@@QAE@XZ']
retn
endp
__ehhandler$?BytesToString@NZip@NArchive@@YG?AVAString@@ABV?$CBuffer@E@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?BytesToString@NZip@NArchive@@YG?AVAString@@ABV?$CBuffer@E@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetProperty@CHandler@NZip@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$2 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CHandler@NZip@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$3 proc near
lea ['ecx,', '[ebp-40h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CHandler@NZip@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$4 proc near
lea ['ecx,', '[ebp-0D0h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CHandler@NZip@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$5 proc near
lea ['ecx,', '[ebp-188h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CHandler@NZip@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$6 proc near
lea ['ecx,', '[ebp-0E8h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?GetProperty@CHandler@NZip@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1E4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetProperty@CHandler@NZip@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Open@CHandler@NZip@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1CProgressImp@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$?Open@CHandler@NZip@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Open@CHandler@NZip@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0CLzmaDecoder@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
endp
__unwindfunclet$??0CLzmaDecoder@NZip@NArchive@@QAE@XZ$1 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0CLzmaDecoder@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CLzmaDecoder@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1C_InStream_Releaser@CFilterCoder@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$1 proc near
mov ['eax,', '[ebp-168h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$2 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$3 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$4 proc near
lea ['ecx,', '[ebp-80h]']
jmp ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$5 proc near
mov ['eax,', '[ebp-178h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$6 proc near
mov ['eax,', '[ebp-184h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$7 proc near
mov ['eax,', '[ebp-18Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$8 proc near
lea ['ecx,', '[ebp-9Ch]']
jmp ['??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$9 proc near
lea ['ecx,', '[ebp-0ACh]']
jmp ['??1CMyComBSTR@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$10 proc near
lea ['ecx,', '[ebp-0C4h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$11 proc near
lea ['ecx,', '[ebp-1A0h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$12 proc near
lea ['ecx,', '[ebp-1ACh]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$13 proc near
lea ['ecx,', '[ebp-1B8h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$14 proc near
lea ['ecx,', '[ebp-1C4h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$15 proc near
lea ['ecx,', '[ebp-0E0h]']
jmp ['??1CMethodItem@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$16 proc near
mov ['eax,', '[ebp-1D4h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$17 proc near
mov ['eax,', '[ebp-1DCh]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$18 proc near
mov ['eax,', '[ebp-1E4h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$19 proc near
mov ['eax,', '[ebp-1ECh]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$20 proc near
mov ['eax,', '[ebp-1F4h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$21 proc near
mov ['eax,', '[ebp-1FCh]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$22 proc near
lea ['ecx,', '[ebp-0FCh]']
jmp ['??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$23 proc near
lea ['ecx,', '[ebp-118h]']
jmp ['??1?$CMyComPtr@UICompressSetCoderMt@@@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$24 proc near
lea ['ecx,', '[ebp-12Ch]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z$25 proc near
mov ['eax,', '[ebp-218h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-29Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Decode@CZipDecoder@NZip@NArchive@@QAEJAAVCInArchive@23@ABVCItemEx@23@PAUISequentialOutStream@@PAUIArchiveExtractCallback@@PAUICompressProgressInfo@@IAAH@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Extract@CHandler@NZip@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-44h]']
jmp ['??1CZipDecoder@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NZip@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$3 proc near
mov ['eax,', '[ebp-174h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@NZip@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-94h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NZip@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$5 proc near
lea ['ecx,', '[ebp-0A4h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NZip@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$6 proc near
lea ['ecx,', '[ebp-11Ch]']
jmp ['??1CItemEx@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$?Extract@CHandler@NZip@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-238h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Extract@CHandler@NZip@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBaseProps@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CMethodProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseProps@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMethodProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCProp@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CHandler@NZip@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4B7C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_4C07']
push ['offset', '_IID_IInArchive']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4B98']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4C07']
push ['offset', '_IID_IOutArchive']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4BCC']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_4BBB']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_4BC2']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_4C07']
push ['offset', '_IID_ISetProperties']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4C00']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_4BEF']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4BF6']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_4C07']
mov ['eax,', '80004002h']
jmp ['short', 'loc_4C18']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+0Ch],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CHandler@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CHandler@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4CD2']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+0Ch]']
jmp ['short', 'loc_4CFC']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_4CF3']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCHandler@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_4CFA']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?InitMethodProps@CHandler@NZip@NArchive@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0A8h']
call ['?Init@CBaseProps@NZip@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0C0h],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0C4h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0C5h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0C6h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0C7h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0C8h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0C9h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0CCh],', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CBaseProps@NZip@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CProps@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
call ['?GetNumberOfProcessors@NSystem@NWindows@@YGIXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+15h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+16h],', '3']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CProps@@QAEXXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CObjectVector@UCProp@@@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCHandler@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CHandler@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4E2A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CHandler@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CHandler@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0A8h']
call ['??1CBaseProps@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1CInArchive@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CHandler@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1CInArchive@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$??1CHandler@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CHandler@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CInArchive@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CInArchive@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '80h']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1CInArchiveInfo@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CInBuffer@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CInArchive@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CInBuffer@@QAE@XZ']
endp
__unwindfunclet$??1CInArchive@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1CInArchiveInfo@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$??1CInArchive@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CInArchive@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CInBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CInArchiveInfo@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['??1?$CBuffer@E@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IInArchive@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IOutArchive@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISetProperties@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISetProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CInArchive@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CInArchive@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CInBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0CInArchiveInfo@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '80h']
call ['??0?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CInArchive@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CInBuffer@@QAE@XZ']
endp
__unwindfunclet$??0CInArchive@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1CInArchiveInfo@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$??0CInArchive@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CInArchive@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CInArchiveInfo@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['dword', 'ptr', '[ecx+24h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['dword', 'ptr', '[edx+2Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+30h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CInBufferBase@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetPhySize@CInArchiveInfo@NZip@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+18h]']
sub ['edx,', '[ecx]']
mov ['esi,', '[eax+1Ch]']
sbb ['esi,', '[ecx+4]']
mov ['eax,', 'edx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetEmbeddedStubSize@CInArchiveInfo@NZip@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+30h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5455']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
mov ['edx,', '[edx+2Ch]']
jmp ['short', 'loc_546A']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+10h]']
sub ['edx,', '[ecx]']
mov ['esi,', '[eax+14h]']
sbb ['esi,', '[ecx+4]']
mov ['eax,', 'edx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsOpen@CInArchive@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '80h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CanUpdate@CInArchive@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?AreThereErrors@CInArchive@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_54D6']
xor ['al,', 'al']
jmp ['loc_5557']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+3Ch],', '0']
jg ['short', 'loc_54F4']
jl ['short', 'loc_54F0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jnb ['short', 'loc_54F4']
xor ['al,', 'al']
jmp ['short', 'loc_5557']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+4Ch]']
cmp ['edx,', '[ecx+3Ch]']
jg ['short', 'loc_5522']
jl ['short', 'loc_551E']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+48h]']
cmp ['edx,', '[ecx+38h]']
jnb ['short', 'loc_5522']
xor ['al,', 'al']
jmp ['short', 'loc_5557']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?GetEmbeddedStubSize@CInArchiveInfo@NZip@NArchive@@QBE_KXZ']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '[ebp+var_14]']
jz ['short', 'loc_553F']
xor ['al,', 'al']
jmp ['short', 'loc_5557']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?ThereIsTail@CInArchiveInfo@NZip@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_5555']
xor ['al,', 'al']
jmp ['short', 'loc_5557']
mov ['al,', '1']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ThereIsTail@CInArchiveInfo@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[edx+24h]']
cmp ['ecx,', '[eax+1Ch]']
jb ['short', 'loc_55B5']
ja ['short', 'loc_55AC']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[edx+20h]']
cmp ['ecx,', '[eax+18h]']
jbe ['short', 'loc_55B5']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_55BC']
mov ['[ebp+var_10],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_10]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AreThereErrors@CInArchive@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7Ah]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_55FA']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+7Dh]']
test ['eax,', 'eax']
jnz ['short', 'loc_55FA']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_5601']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YAString@@QAEAAV0@D@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_5654']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@AString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CWzAesExtra@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2],', '3']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'ax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetWzAes@CExtraBlock@NZip@NArchive@@QBE_NAAUCWzAesExtra@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_56F9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_5728']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?ParseFromSubBlock@CWzAesExtra@NZip@NArchive@@QAE_NABUCExtraSubBlock@23@@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5726']
mov ['al,', '1']
jmp ['short', 'loc_572A']
jmp ['short', 'loc_56F0']
xor ['al,', 'al']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ParseFromSubBlock@CWzAesExtra@NZip@NArchive@@QAE_NABUCExtraSubBlock@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '9901h']
jz ['short', 'loc_5765']
xor ['al,', 'al']
jmp ['short', 'loc_57CB']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
call ['?Size@?$CBuffer@E@@QBEIXZ']
cmp ['eax,', '7']
jnb ['short', 'loc_5779']
xor ['al,', 'al']
jmp ['short', 'loc_57CB']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['[edx],', 'cx']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
cmp ['eax,', '41h']
jnz ['short', 'loc_57AB']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
cmp ['edx,', '45h']
jz ['short', 'loc_57AF']
xor ['al,', 'al']
jmp ['short', 'loc_57CB']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx+4]']
mov ['[eax+2],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['dx,', '[ecx+5]']
mov ['[eax+4],', 'dx']
mov ['al,', '1']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetStrongCrypto@CExtraBlock@NZip@NArchive@@QBE_NAAUCStrongCryptoExtra@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_5805']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_5834']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?ParseFromSubBlock@CStrongCryptoExtra@NZip@NArchive@@QAE_NABUCExtraSubBlock@23@@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5832']
mov ['al,', '1']
jmp ['short', 'loc_5836']
jmp ['short', 'loc_57FC']
xor ['al,', 'al']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ParseFromSubBlock@CStrongCryptoExtra@NZip@NArchive@@QAE_NABUCExtraSubBlock@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '17h']
jz ['short', 'loc_586E']
xor ['al,', 'al']
jmp ['short', 'loc_58D6']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
call ['?Size@?$CBuffer@E@@QBEIXZ']
cmp ['eax,', '8']
jnb ['short', 'loc_5890']
xor ['al,', 'al']
jmp ['short', 'loc_58D6']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['[edx],', 'cx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax+2]']
mov ['[edx+2],', 'cx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax+4]']
mov ['[edx+4],', 'cx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax+6]']
mov ['[edx+6],', 'cx']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
xor ['ecx,', 'ecx']
cmp ['eax,', '2']
setz ['cl']
mov ['al,', 'cl']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetNtfsTime@CExtraBlock@NZip@NArchive@@QBE_NIAAU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_5918']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_5953']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '0Ah']
jnz ['short', 'loc_5951']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_C]']
call ['?ExtractNtfsTime@CExtraSubBlock@NZip@NArchive@@QBE_NIAAU_FILETIME@@@Z']
jmp ['short', 'loc_5955']
jmp ['short', 'loc_590F']
xor ['al,', 'al']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetUnixTime@CExtraBlock@NZip@NArchive@@QBE_N_NIAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_5998']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_59DA']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '5455h']
jnz ['short', 'loc_59D8']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?ExtractUnixTime@CExtraSubBlock@NZip@NArchive@@QBE_N_NIAAI@Z']
jmp ['short', 'loc_59DC']
jmp ['short', 'loc_598F']
xor ['al,', 'al']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?IsEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[eax]']
and ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsStrongEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5A4A']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
and ['edx,', '40h']
jz ['short', 'loc_5A4A']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_5A51']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsLzmaEOS@CLocalItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[eax]']
and ['eax,', '2']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetHostOS@CItem@NZip@NArchive@@QBEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5Dh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5AB5']
mov ['edx,', '[ebp+var_4]']
mov ['al,', '[edx+39h]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
jmp ['short', 'loc_5ABE']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ecx+5]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'dl']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetUnicodeString@CItem@NZip@NArchive@@QBEXABVAString@@AAVUString@@_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsUtf8@CLocalItem@NZip@NArchive@@QBE_NXZ']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
mov ['byte', 'ptr', '[ebp+var_8+2],', '1']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_5B2E']
movzx ['ecx,', '[ebp+arg_8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5B16']
xor ['edx,', 'edx']
cmp ['[ebp+arg_C],', '0FDE9h']
setz ['dl']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'dl']
jmp ['short', 'loc_5B2E']
mov ['ecx,', '[ebp+var_4]']
call ['?GetHostOS@CItem@NZip@NArchive@@QBEEXZ']
movzx ['eax,', 'al']
cmp ['eax,', '3']
jnz ['short', 'loc_5B2E']
mov ['byte', 'ptr', '[ebp+var_8+3],', '1']
mov ['byte', 'ptr', '[ebp+var_8+2],', '0']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5B54']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?ConvertUTF8ToUnicode@@YG_NABVAString@@AAVUString@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5B52']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_8+2]']
test ['edx,', 'edx']
jz ['short', 'loc_5B54']
jmp ['short', 'loc_5B80']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_5B64']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_5B6F']
mov ['ecx,', '[ebp+var_4]']
call ['?GetCodePage@CItem@NZip@NArchive@@QBEIXZ']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?MultiByteToUnicodeString2@@YGXAAVUString@@ABVAString@@I@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?IsUtf8@CLocalItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[eax]']
and ['eax,', '800h']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsThereCrc@CItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
cmp ['ecx,', '63h']
jnz ['short', 'loc_5C08']
lea ['ecx,', '[ebp+var_10]']
call ['??0CWzAesExtra@NZip@NArchive@@QAE@XZ']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?GetWzAes@CExtraBlock@NZip@NArchive@@QBE_NAAUCWzAesExtra@23@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5C08']
lea ['ecx,', '[ebp+var_10]']
call ['?NeedCrc@CWzAesExtra@NZip@NArchive@@QBE_NXZ']
jmp ['short', 'loc_5C33']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0']
jnz ['short', 'loc_5C29']
mov ['ecx,', '[ebp+var_4]']
call ['?IsDir@CItem@NZip@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5C29']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_5C30']
mov ['[ebp+var_18],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?NeedCrc@CWzAesExtra@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[eax]']
sub ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetCodePage@CItem@NZip@NArchive@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetHostOS@CItem@NZip@NArchive@@QBEEXZ']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
test ['eax,', 'eax']
jz ['short', 'loc_5CDB']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
cmp ['ecx,', '0Bh']
jz ['short', 'loc_5CDB']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_5CE2']
mov ['[ebp+var_C],', '1']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProgressImp@NZip@NArchive@@QAE@PAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProgressVirt@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CProgressImp@NZip@NArchive@@6B@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@PAUIArchiveOpenCallback@@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CProgressVirt@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CProgressVirt@NZip@NArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProgressImp@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CLzmaDecoder@NZip@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6014']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_601B']
mov ['eax,', '80004002h']
jmp ['short', 'loc_602C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CLzmaDecoder@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CLzmaDecoder@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_609E']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_60C8']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_60BF']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCLzmaDecoder@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_60C6']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCLzmaDecoder@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CLzmaDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6102']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CLzmaDecoder@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyComBSTR@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMyComBSTR@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SysFreeString@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??ICMyComBSTR@@QAEPAPA_WXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BCMyComBSTR@@QBEPB_WXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0C_InStream_Releaser@CFilterCoder@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1C_InStream_Releaser@CFilterCoder@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6232']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '0Ch']
mov ['edx,', '[edx+0Ch]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCopyCoder@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0ICompressSetInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??0ICompressGetInStreamProcessedSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCopyCoder@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CCopyCoder@NCompress@@6BICompressSetInStream@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CCopyCoder@NCompress@@6BISequentialInStream@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CCopyCoder@NCompress@@6BICompressGetInStreamProcessedSize@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_664B']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_670D']
push ['offset', '_IID_ICompressCoder']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_666A']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_670D']
push ['offset', '_IID_ICompressSetInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_669E']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_668D']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_6694']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_670D']
push ['offset', '_IID_ISequentialInStream']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_66D2']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_66C1']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_66C8']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_670D']
push ['offset', '_IID_ICompressGetInStreamProcessedSize']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6706']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_66F5']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_66FC']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_670D']
mov ['eax,', '80004002h']
jmp ['short', 'loc_671E']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CCopyCoder@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCopyCoder@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+10h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_6796']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+10h]']
jmp ['short', 'loc_67C0']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_67B7']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCCopyCoder@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_67BE']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ICompressSetInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressGetInStreamProcessedSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressGetInStreamProcessedSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCCopyCoder@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCopyCoder@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_68AE']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetKeyMode@CBaseCoder@NWzAes@NCrypto@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '1']
jb ['short', 'loc_68DE']
cmp ['[ebp+arg_0],', '3']
jbe ['short', 'loc_68E2']
xor ['al,', 'al']
jmp ['short', 'loc_68ED']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@COutStreamWithCRC@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@COutStreamWithCRC@@QAEX_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+1Ch],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetCRC@COutStreamWithCRC@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+18h]']
xor ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?HasDescriptor@CLocalItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[eax]']
and ['eax,', '8']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetDataPosition@CItemEx@NZip@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+60h]']
xor ['edx,', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+40h]']
adc ['edx,', '[ecx+44h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutStreamWithCRC@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COutStreamWithCRC@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@COutStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6B6C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_6B73']
mov ['eax,', '80004002h']
jmp ['short', 'loc_6B84']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@COutStreamWithCRC@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@COutStreamWithCRC@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_6BF6']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_6C20']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_6C17']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCOutStreamWithCRC@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_6C1E']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCOutStreamWithCRC@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutStreamWithCRC@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6C5A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1COutStreamWithCRC@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDecoder@NWzAes@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseCoder@NWzAes@NCrypto@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NWzAes@NCrypto@@6BICompressFilter@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@NWzAes@NCrypto@@6BICryptoSetPassword@@@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CBaseCoder@NWzAes@NCrypto@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6F49']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_6F38']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_6F3F']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_6F84']
push ['offset', '_IID_ICryptoSetPassword']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6F7D']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_6F6C']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_6F73']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_6F84']
mov ['eax,', '80004002h']
jmp ['short', 'loc_6F95']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+8],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CBaseCoder@NWzAes@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CBaseCoder@NWzAes@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_700E']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
jmp ['short', 'loc_7038']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_702F']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCBaseCoder@NWzAes@NCrypto@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_7036']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCBaseCoder@NWzAes@NCrypto@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseCoder@NWzAes@NCrypto@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7072']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CBaseCoder@NWzAes@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??1CKeyInfo@NWzAes@NCrypto@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CKeyInfo@NWzAes@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??1?$CBuffer@E@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDecoder@NZipStrong@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseCoder@NZipStrong@NCrypto@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NZipStrong@NCrypto@@6BICompressFilter@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@NZipStrong@NCrypto@@6BICryptoProperties@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CDecoder@NZipStrong@NCrypto@@6BICompressSetCoderProperties@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+14Ch],', 'offset', '??_7CDecoder@NZipStrong@NCrypto@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CDecoder@NZipStrong@NCrypto@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_7560']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_754F']
mov ['edx,', '[ebp+this]']
add ['edx,', '14Ch']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_7556']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_759D']
push ['offset', '_IID_ICryptoSetPassword']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_7596']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_7585']
mov ['eax,', '[ebp+this]']
add ['eax,', '14Ch']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_758C']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_759D']
mov ['eax,', '80004002h']
jmp ['short', 'loc_75AE']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+0Ch],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CDecoder@NZipStrong@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@NZipStrong@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_7626']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+0Ch]']
jmp ['short', 'loc_7650']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_7647']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCDecoder@NZipStrong@NCrypto@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_764E']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCDecoder@NZipStrong@NCrypto@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDecoder@NZipStrong@NCrypto@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_768A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CDecoder@NZipStrong@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseCoder@NZipStrong@NCrypto@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseCoder@NZipStrong@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '174h']
call ['??1?$CBuffer@E@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDecoder@NZip@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CCipher@NZip@NCrypto@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NZip@NCrypto@@6BICompressFilter@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@NZip@NCrypto@@6BICryptoSetPassword@@@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CCipher@NZip@NCrypto@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_78AD']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_789C']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_78A3']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_78E8']
push ['offset', '_IID_ICryptoSetPassword']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_78E1']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_78D0']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_78D7']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_78E8']
mov ['eax,', '80004002h']
jmp ['short', 'loc_78F9']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+8],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CCipher@NZip@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCipher@NZip@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_796F']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
jmp ['short', 'loc_7983']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMethodItem@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodItem@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDecoder@NShrink@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NShrink@NCompress@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CDecoder@NShrink@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_7AE0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_7AE7']
mov ['eax,', '80004002h']
jmp ['short', 'loc_7AF8']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CDecoder@NShrink@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@NShrink@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7B67']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_7B7B']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CXzDecoder@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CXzDecoder@NZip@NArchive@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CDecoder@NXz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDecoder@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CStatInfo@NXz@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['??0CXzUnpackerCPP@NXz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+6E0h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CStatInfo@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CStatInfo@NXz@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CXzDecoder@NZip@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_7CF4']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_7CFB']
mov ['eax,', '80004002h']
jmp ['short', 'loc_7D0C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CXzDecoder@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CXzDecoder@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_7D7E']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_7DA8']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_7D9F']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCXzDecoder@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_7DA6']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCXzDecoder@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CXzDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7DE2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CXzDecoder@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CDecoder@NXz@NArchive@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CDecoder@NXz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['??1CXzUnpackerCPP@NXz@NArchive@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBaseCoder@NWzAes@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CBaseCoder@NWzAes@NCrypto@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressFilter@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0ICryptoSetPassword@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CBaseCoder@NWzAes@NCrypto@@6BICompressFilter@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CBaseCoder@NWzAes@NCrypto@@6BICryptoSetPassword@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CKeyInfo@NWzAes@NCrypto@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0F0h']
call ['??0CAesCtr2@NWzAes@NCrypto@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CBaseCoder@NWzAes@NCrypto@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CKeyInfo@NWzAes@NCrypto@@QAE@XZ']
endp
__ehhandler$??0CBaseCoder@NWzAes@NCrypto@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CBaseCoder@NWzAes@NCrypto@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CKeyInfo@NWzAes@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBaseCoder@NZipStrong@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['??0CAesCbcDecoder@NCrypto@@QAE@I@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14Ch']
call ['??0ICryptoSetPassword@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CBaseCoder@NZipStrong@NCrypto@@6BICompressFilter@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CBaseCoder@NZipStrong@NCrypto@@6BICryptoProperties@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CBaseCoder@NZipStrong@NCrypto@@6BICompressSetCoderProperties@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+14Ch],', 'offset', '??_7CBaseCoder@NZipStrong@NCrypto@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '174h']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_8138']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_8127']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_812E']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_81A7']
push ['offset', '_IID_ICryptoProperties']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_816C']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_815B']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_8162']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_81A7']
push ['offset', '_IID_ICompressSetCoderProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_81A0']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_818F']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_8196']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_81A7']
mov ['eax,', '80004002h']
jmp ['short', 'loc_81B8']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+0Ch],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CAesCbcCoder@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_822B']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+0Ch]']
jmp ['short', 'loc_823F']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CAesCbcDecoder@NCrypto@@QAE@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['??0CAesCbcCoder@NCrypto@@QAE@_NI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7CAesCbcDecoder@NCrypto@@6BICompressFilter@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', 'offset', '??_7CAesCbcDecoder@NCrypto@@6BICryptoProperties@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', 'offset', '??_7CAesCbcDecoder@NCrypto@@6BICompressSetCoderProperties@@@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CCipher@NZip@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressFilter@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0ICryptoSetPassword@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCipher@NZip@NCrypto@@6BICompressFilter@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CCipher@NZip@NCrypto@@6BICryptoSetPassword@@@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressFilter@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressFilter@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICryptoSetPassword@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICryptoSetPassword@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsLocalOffsetOK@CInArchive@NZip@NArchive@@QBE_NABVCItemEx@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_849D']
mov ['al,', '1']
jmp ['short', 'loc_84D6']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+38h]']
add ['ecx,', '[eax+40h]']
mov ['edx,', '[edx+3Ch]']
adc ['edx,', '[eax+44h]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_84CC']
jg ['short', 'loc_84C3']
cmp ['[ebp+var_C],', '0']
jb ['short', 'loc_84CC']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_84D3']
mov ['[ebp+var_10],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_10]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CZipDecoder@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CZipDecoder@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
endp
__unwindfunclet$??0CZipDecoder@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
endp
__unwindfunclet$??0CZipDecoder@NZip@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
endp
__unwindfunclet$??0CZipDecoder@NZip@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CZipDecoder@NZip@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
endp
__ehhandler$??0CZipDecoder@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CZipDecoder@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CZipDecoder@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CZipDecoder@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CZipDecoder@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
endp
__unwindfunclet$??1CZipDecoder@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
endp
__unwindfunclet$??1CZipDecoder@NZip@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
endp
__unwindfunclet$??1CZipDecoder@NZip@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CZipDecoder@NZip@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
endp
__ehhandler$??1CZipDecoder@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CZipDecoder@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CItemEx@NZip@NArchive@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CItem@NZip@NArchive@@QAE@ABV012@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
mov ['[ecx+60h],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CItemEx@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CItem@NZip@NArchive@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CItem@NZip@NArchive@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CItem@NZip@NArchive@@QAE@ABV012@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+38h]']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+38h],', 'dx']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx+3Ah]']
mov ['[ecx+3Ah],', 'ax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3Ch]']
mov ['[ecx+3Ch],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+40h]']
mov ['[ecx+40h],', 'eax']
mov ['edx,', '[edx+44h]']
mov ['[ecx+44h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '48h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??0CExtraBlock@NZip@NArchive@@QAE@ABU012@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '54h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??0?$CBuffer@E@@QAE@ABV0@@Z']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+5Ch]']
mov ['[edx+5Ch],', 'cl']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+5Dh]']
mov ['[edx+5Dh],', 'cl']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CItem@NZip@NArchive@@QAE@ABV012@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CLocalItem@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NZip@NArchive@@QAE@ABV012@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1CExtraBlock@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$??0CItem@NZip@NArchive@@QAE@ABV012@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CItem@NZip@NArchive@@QAE@ABV012@@Z']
jmp ['___CxxFrameHandler3']
endp
??1CLocalItem@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CLocalItem@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??1CExtraBlock@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1AString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CLocalItem@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1CLocalItem@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CLocalItem@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CExtraBlock@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CItem@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CItem@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??1CExtraBlock@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CLocalItem@NZip@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CItem@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CLocalItem@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CItem@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1CExtraBlock@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$??1CItem@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CItem@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+2]']
mov ['[eax+2],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+4]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[eax+14h]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[ecx+18h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['[ecx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0AString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2Ch']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0CExtraBlock@NZip@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CExtraBlock@NZip@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8CB2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_8D08']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_8D2B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UISequentialInStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Attach@?$CMyComPtr@UISequentialInStream@@@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_8E18']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8E5E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8EAB']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_8F18']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_8F3B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8FCA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICryptoSetPassword@@@@QAEPAPAUICryptoSetPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICryptoSetPassword@@@@QBEPAUICryptoSetPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_905E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBEPAUICompressSetDecoderProperties2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAEPAPAUICompressSetDecoderProperties2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBEPAUICompressSetDecoderProperties2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_910A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9148']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_916B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UICompressFilter@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9208']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_924E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBuffer@E@@QAE@ABV0@@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_9318']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QBEPBEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_93EA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9458']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_947B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_9533']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_958B']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_956C']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CExtraSubBlock@NZip@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_9573']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_952A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__unwindfunclet$??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z$1 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_96D2']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_96C9']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCExtraSubBlock@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_96D0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_968E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_979E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_9882']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_9879']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_9880']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_983E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@UCProp@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_9968']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_995F']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_9966']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_9924']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@VCItemEx@NZip@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAEAAVCItemEx@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_9A8A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_9A81']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCItemEx@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_9A88']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_9A46']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_9B70']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_9B67']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCItemEx@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_9B6E']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_9B2C']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@PAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9BBC']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_9C02']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_9C7E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UICryptoGetTextPassword@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAEAAUCMethodItem@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAEIABUCMethodItem@NZip@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['8']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_9DB2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0CMethodItem@NZip@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_9DB9']
mov ['[ebp+var_C],', '0']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_9E6A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_9E61']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCMethodItem@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_9E68']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_9E26']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCMethodItem@NZip@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CMyComPtr@UICompressSetCoderMt@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressSetCoderMt@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_9F36']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressSetCoderMt@@@@QBEPAUICompressSetCoderMt@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressSetCoderMt@@@@QAEPAPAUICompressSetCoderMt@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressSetCoderMt@@@@QBEPAUICompressSetCoderMt@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CExtraSubBlock@NZip@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0?$CBuffer@E@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCExtraSubBlock@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CExtraSubBlock@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_9FFA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCProp@@QAEPAXI@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_A03A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCItemEx@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_A07A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMethodItem@NZip@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCMethodItem@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMethodItem@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_A0FA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CExtraSubBlock@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??1?$CBuffer@E@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_A1F9']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_A36F']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressCoder@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_A3BC']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_A484']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_A45F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$QueryInterface@UICryptoSetPassword@@@?$CMyComPtr@UICompressFilter@@@@QBEJABU_GUID@@PAPAUICryptoSetPassword@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?AddRef@CDecoder@NZipStrong@NCrypto@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CDecoder@NZipStrong@NCrypto@@UAGKXZ']
endp
?Release@CCopyCoder@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CCopyCoder@NCompress@@UAGKXZ']
endp
?Release@CHandler@NZip@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CHandler@NZip@NArchive@@UAGKXZ']
endp
?Release@CAesCbcCoder@NCrypto@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?QueryInterface@CBaseCoder@NWzAes@NCrypto@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CBaseCoder@NWzAes@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CDecoder@NZipStrong@NCrypto@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CDecoder@NZipStrong@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CCipher@NZip@NCrypto@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CCipher@NZip@NCrypto@@UAGKXZ']
endp
?Release@CCopyCoder@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CCopyCoder@NCompress@@UAGKXZ']
endp
?AddRef@CHandler@NZip@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CHandler@NZip@NArchive@@UAGKXZ']
endp
?Release@CAesCbcCoder@NCrypto@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?Release@CDecoder@NZipStrong@NCrypto@@WBEM@AGKXZ proc near
sub ['[esp+arg_0],', '14Ch']
jmp ['?Release@CDecoder@NZipStrong@NCrypto@@UAGKXZ']
endp
?QueryInterface@CDecoder@NZipStrong@NCrypto@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CDecoder@NZipStrong@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CCopyCoder@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CCopyCoder@NCompress@@UAGKXZ']
endp
?AddRef@CCopyCoder@NCompress@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CCopyCoder@NCompress@@UAGKXZ']
endp
?AddRef@CHandler@NZip@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CHandler@NZip@NArchive@@UAGKXZ']
endp
?AddRef@CAesCbcCoder@NCrypto@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?QueryInterface@CCipher@NZip@NCrypto@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CCipher@NZip@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CHandler@NZip@NArchive@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CHandler@NZip@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CCopyCoder@NCompress@@W7AGKXZ proc near 
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CCopyCoder@NCompress@@UAGKXZ']
endp
?AddRef@CAesCbcCoder@NCrypto@@W7AGKXZ proc near 
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?AddRef@CDecoder@NZipStrong@NCrypto@@WBEM@AGKXZ proc near
sub ['[esp+arg_0],', '14Ch']
jmp ['?AddRef@CDecoder@NZipStrong@NCrypto@@UAGKXZ']
endp
?QueryInterface@CCopyCoder@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CHandler@NZip@NArchive@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CHandler@NZip@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CAesCbcCoder@NCrypto@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CCopyCoder@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CCopyCoder@NCompress@@UAGKXZ']
endp
?Release@CBaseCoder@NWzAes@NCrypto@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CBaseCoder@NWzAes@NCrypto@@UAGKXZ']
endp
?Release@CDecoder@NZipStrong@NCrypto@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CDecoder@NZipStrong@NCrypto@@UAGKXZ']
endp
?QueryInterface@CCopyCoder@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CAesCbcCoder@NCrypto@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CDecoder@NZipStrong@NCrypto@@WBEM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '14Ch']
jmp ['?QueryInterface@CDecoder@NZipStrong@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NZipStrong@NCrypto@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CDecoder@NZipStrong@NCrypto@@UAGKXZ']
endp
?QueryInterface@CCopyCoder@NCompress@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CBaseCoder@NWzAes@NCrypto@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CBaseCoder@NWzAes@NCrypto@@UAGKXZ']
endp
?AddRef@CDecoder@NZipStrong@NCrypto@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CDecoder@NZipStrong@NCrypto@@UAGKXZ']
endp
?Release@CCipher@NZip@NCrypto@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CCipher@NZip@NCrypto@@UAGKXZ']
endp
?Release@CHandler@NZip@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CHandler@NZip@NArchive@@UAGKXZ']
endp

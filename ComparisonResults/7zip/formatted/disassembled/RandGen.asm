?Init@CRandomGenerator@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0A8h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_A8]']
mov ['ecx,', '2Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_74]']
push ['eax']
call ['_Sha256_Init@4']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetCurrentProcessId@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_80],', 'eax']
push ['4']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
lea ['edx,', '[ebp+var_74]']
push ['edx']
call ['_Sha256_Update@12']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetCurrentThreadId@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_80],', 'eax']
push ['4']
lea ['eax,', '[ebp+var_80]']
push ['eax']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
call ['_Sha256_Update@12']
mov ['[ebp+var_88],', '0']
jmp ['short', 'loc_92']
mov ['edx,', '[ebp+var_88]']
add ['edx,', '1']
mov ['[ebp+var_88],', 'edx']
cmp ['[ebp+var_88],', '2']
jnb ['loc_142']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+PerformanceCount]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__QueryPerformanceCounter@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_CB']
push ['8']
lea ['ecx,', '[ebp+PerformanceCount]']
push ['ecx']
lea ['edx,', '[ebp+var_74]']
push ['edx']
call ['_Sha256_Update@12']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetTickCount@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_A0],', 'eax']
push ['4']
lea ['eax,', '[ebp+var_A0]']
push ['eax']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
call ['_Sha256_Update@12']
mov ['[ebp+var_A8],', '0']
jmp ['short', 'loc_10D']
mov ['edx,', '[ebp+var_A8]']
add ['edx,', '1']
mov ['[ebp+var_A8],', 'edx']
cmp ['[ebp+var_A8],', '64h']
jnb ['short', 'loc_13D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
call ['_Sha256_Final@8']
lea ['edx,', '[ebp+var_74]']
push ['edx']
call ['_Sha256_Init@4']
push ['20h']
mov ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
call ['_Sha256_Update@12']
jmp ['short', 'loc_FE']
jmp ['loc_83']
mov ['edx,', '[ebp+var_8]']
push ['edx']
lea ['eax,', '[ebp+var_74]']
push ['eax']
call ['_Sha256_Final@8']
mov ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx+20h],', '0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0A8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Generate@CRandomGenerator@@QAEXPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Generate@CRandomGenerator@@QAEXPAEI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0BCh']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_C8]']
mov ['ecx,', '2Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['offset', '_g_CriticalSection']
lea ['ecx,', '[ebp+var_1C]']
call ['??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+20h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_23A']
mov ['ecx,', '[ebp+var_14]']
call ['?Init@CRandomGenerator@@AAEXXZ']
cmp ['[ebp+arg_4],', '0']
jz ['loc_317']
lea ['edx,', '[ebp+var_8C]']
push ['edx']
call ['_Sha256_Init@4']
push ['20h']
mov ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
call ['_Sha256_Update@12']
mov ['edx,', '[ebp+var_14]']
push ['edx']
lea ['eax,', '[ebp+var_8C]']
push ['eax']
call ['_Sha256_Final@8']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
call ['_Sha256_Init@4']
mov ['[ebp+var_98],', '0F672ABD1h']
push ['4']
lea ['edx,', '[ebp+var_98]']
push ['edx']
lea ['eax,', '[ebp+var_8C]']
push ['eax']
call ['_Sha256_Update@12']
push ['20h']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+var_8C]']
push ['edx']
call ['_Sha256_Update@12']
lea ['eax,', '[ebp+var_C0]']
push ['eax']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
call ['_Sha256_Final@8']
mov ['[ebp+var_C8],', '0']
jmp ['short', 'loc_2E6']
mov ['edx,', '[ebp+var_C8]']
add ['edx,', '1']
mov ['[ebp+var_C8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+var_C8],', '20h']
jnb ['short', 'loc_312']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_312']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C8]']
mov ['al,', '[ebp+edx+var_C0]']
mov ['[ecx],', 'al']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_2CE']
jmp ['loc_23A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0C8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?Generate@CRandomGenerator@@QAEXPAEI@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$?Generate@CRandomGenerator@@QAEXPAEI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0C4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Generate@CRandomGenerator@@QAEXPAEI@Z']
jmp ['___CxxFrameHandler3']
endp
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx]']
call ['?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnterCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
call ['?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LeaveCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Eg_CriticalSection@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_CriticalSection']
call ['??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
push ['offset', '??__Fg_CriticalSection@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_CriticalSection_Init@4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Eg_RandomGenerator@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?g_RandomGenerator@@3VCRandomGenerator@@A']
call ['??0CRandomGenerator@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CRandomGenerator@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+20h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Fg_CriticalSection@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_CriticalSection']
call ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__DeleteCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

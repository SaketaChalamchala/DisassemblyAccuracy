??1CDecoder@NPpmd@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDecoder@NPpmd@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NPpmd@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@NPpmd@NCompress@@6BICompressSetDecoderProperties2@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CDecoder@NPpmd@NCompress@@6BICompressSetInStream@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CDecoder@NPpmd@NCompress@@6BICompressSetOutStreamSize@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CDecoder@NPpmd@NCompress@@6BISequentialInStream@@@']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_MidFree@4']
push ['offset', '_g_BigAlloc']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
push ['ecx']
call ['_Ppmd7_Free@8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4B48h']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1CByteInBufWrap@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetDecoderProperties2@CDecoder@NPpmd@NCompress@@UAGJPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_8],', '5']
jnb ['short', 'loc_DB']
mov ['eax,', '80070057h']
jmp ['loc_166']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax+4B28h],', 'dl']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+4B28h]']
cmp ['eax,', '2']
jl ['short', 'loc_11F']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4B28h]']
cmp ['edx,', '40h']
jg ['short', 'loc_11F']
cmp ['[ebp+var_4],', '800h']
jb ['short', 'loc_11F']
cmp ['[ebp+var_4],', '0FFFFFFDBh']
jbe ['short', 'loc_126']
mov ['eax,', '80004001h']
jmp ['short', 'loc_166']
push ['100000h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '34h']
call ['?Alloc@CByteInBufWrap@@QAE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_144']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_166']
push ['offset', '_g_BigAlloc']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
add ['edx,', '5Ch']
push ['edx']
call ['_Ppmd7_Alloc@12']
test ['eax,', 'eax']
jnz ['short', 'loc_164']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_166']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?CodeSpec@CDecoder@NPpmd@NCompress@@AAEJPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4B30h]']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_1D7']
cmp ['[ebp+var_18],', '2']
jz ['short', 'loc_1C6']
cmp ['[ebp+var_18],', '3']
jz ['short', 'loc_1CD']
jmp ['short', 'loc_22D']
xor ['eax,', 'eax']
jmp ['loc_339']
mov ['eax,', '1']
jmp ['loc_339']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?Init@CByteInBufWrap@@QAEXXZ']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1Ch']
push ['edx']
call ['_Ppmd7z_RangeDec_Init@4']
test ['eax,', 'eax']
jnz ['short', 'loc_209']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4B30h],', '3']
mov ['eax,', '1']
jmp ['loc_339']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4B30h],', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+4B2Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '60h']
push ['ecx']
call ['_Ppmd7_Init@8']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+4B2Dh]']
test ['eax,', 'eax']
jz ['short', 'loc_282']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+4B38h]']
sub ['eax,', '[edx+4B40h]']
mov ['ecx,', '[ecx+4B3Ch]']
sbb ['ecx,', '[edx+4B44h]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_8]']
jb ['short', 'loc_282']
ja ['short', 'loc_27C']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_C]']
jbe ['short', 'loc_282']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_29B']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+arg_4]']
jz ['short', 'loc_2D9']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1Ch']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '60h']
push ['ecx']
call ['_Ppmd7_DecodeSymbol@8']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+58h]']
test ['eax,', 'eax']
jnz ['short', 'loc_2CA']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_2CC']
jmp ['short', 'loc_2D9']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_10]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[ecx],', 'dl']
jmp ['short', 'loc_292']
mov ['eax,', '[ebp+var_10]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+4B40h]']
adc ['ecx,', '[edx+4B44h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4B40h],', 'eax']
mov ['[edx+4B44h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+58h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_31C']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4B30h],', '3']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+5Ch]']
jmp ['short', 'loc_339']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_337']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_14],', '0FFFFFFFFh']
setl ['cl']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4B30h],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Code@CDecoder@NPpmd@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jnz ['short', 'loc_393']
push ['100000h']
call ['_MidAlloc@4']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+18h],', 'eax']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jnz ['short', 'loc_393']
mov ['eax,', '8007000Eh']
jmp ['loc_4E4']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4Ch],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '0Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['eax']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4B40h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ecx+4B44h]']
mov ['[ebp+var_4],', 'eax']
push ['100000h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?CodeSpec@CDecoder@NPpmd@NCompress@@AAEJPAEI@Z']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4B40h]']
sub ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+4B44h]']
sbb ['edx,', '[ebp+var_4]']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_424']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_4E4']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_438']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_4E4']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+4B30h],', '2']
jnz ['short', 'loc_449']
jmp ['loc_4E2']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_492']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '38h']
call ['?GetProcessed@CByteInBufWrap@@QBE_KXZ']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '4B40h']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_492']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_4E4']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4B2Dh]']
test ['ecx,', 'ecx']
jz ['loc_3BB']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['[ebp+var_30],', 'edx']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ecx+4B44h]']
cmp ['eax,', '[edx+4B3Ch]']
jb ['loc_3BB']
ja ['short', 'loc_4E2']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ecx+4B40h]']
cmp ['eax,', '[edx+4B38h]']
jb ['loc_3BB']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?SetOutStreamSize@CDecoder@NPpmd@NCompress@@UAGJPB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_4],', '0']
setnz ['al']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+4B21h],', 'al']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+4B21h]']
test ['eax,', 'eax']
jz ['short', 'loc_56A']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ecx+4B2Ch],', 'eax']
mov ['edx,', '[edx+4]']
mov ['[ecx+4B30h],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+4B34h],', '0']
mov ['dword', 'ptr', '[eax+4B38h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+4B24h],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?SetInStream@CDecoder@NPpmd@NCompress@@UAGJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '4B40h']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+44h],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?ReleaseInStream@CDecoder@NPpmd@NCompress@@UAGJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '4B40h']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?Read@CDecoder@NPpmd@NCompress@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4B30h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[eax+4B34h]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '10h']
call ['?CodeSpec@CDecoder@NPpmd@NCompress@@AAEJPAEI@Z']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_656']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+4B30h]']
sub ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4B34h]']
sbb ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
__unwindfunclet$??1CDecoder@NPpmd@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1CByteInBufWrap@@QAE@XZ']
endp
__ehhandler$??1CDecoder@NPpmd@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDecoder@NPpmd@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CByteInBufWrap@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CByteInBufWrap@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CDecoder@NPpmd@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_C26']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_C12']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_C19']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['loc_D00']
push ['offset', '_IID_ICompressSetDecoderProperties2']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_C5D']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_C49']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_C50']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['loc_D00']
push ['offset', '_IID_ICompressSetInStream']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_C91']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_C80']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_C87']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_D00']
push ['offset', '_IID_ICompressSetOutStreamSize']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_CC5']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_CB4']
mov ['edx,', '[ebp+this]']
add ['edx,', '0Ch']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_CBB']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_D00']
push ['offset', '_IID_ISequentialInStream']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_CF9']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_CE8']
mov ['eax,', '[ebp+this]']
add ['eax,', '10h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_CEF']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_D00']
mov ['eax,', '80004002h']
jmp ['short', 'loc_D11']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+14h],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CDecoder@NPpmd@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?Release@CDecoder@NPpmd@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+14h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_DCE']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+14h]']
jmp ['short', 'loc_DF8']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_DEF']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCDecoder@NPpmd@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_DF6']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCDecoder@NPpmd@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDecoder@NPpmd@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_E32']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CByteInBufWrap@@QAEXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+20h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessed@CByteInBufWrap@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
sub ['eax,', '[ecx+0Ch]']
cdq
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+18h]']
adc ['edx,', '[ecx+1Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_EEE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_F3B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_F78']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_F9B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@NPpmd@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CDecoder@NPpmd@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NPpmd@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CDecoder@NPpmd@NCompress@@UAGKXZ']
endp
?Release@CDecoder@NPpmd@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?Release@CDecoder@NPpmd@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NPpmd@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CDecoder@NPpmd@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NPpmd@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CDecoder@NPpmd@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CDecoder@NPpmd@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CDecoder@NPpmd@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NPpmd@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CDecoder@NPpmd@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CDecoder@NPpmd@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?AddRef@CDecoder@NPpmd@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NPpmd@NCompress@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CDecoder@NPpmd@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CDecoder@NPpmd@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '10h']
jmp ['?QueryInterface@CDecoder@NPpmd@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NPpmd@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CDecoder@NPpmd@NCompress@@UAGKXZ']
endp
?Release@CDecoder@NPpmd@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CDecoder@NPpmd@NCompress@@UAGKXZ']
endp

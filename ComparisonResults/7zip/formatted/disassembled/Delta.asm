_Delta_Init@4   proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1D']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '100h']
jnb ['short', 'loc_31']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx],', '0']
jmp ['short', 'loc_14']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_Delta_Encode@16 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_110],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_108]']
push ['edx']
call ['_MyMemCpy@12']
mov ['[ebp+var_114],', '0']
mov ['eax,', '[ebp+var_114]']
cmp ['eax,', '[ebp+arg_C]']
jnb ['loc_12A']
mov ['[ebp+var_110],', '0']
jmp ['short', 'loc_C7']
mov ['ecx,', '[ebp+var_114]']
add ['ecx,', '1']
mov ['[ebp+var_114],', 'ecx']
mov ['edx,', '[ebp+var_110]']
add ['edx,', '1']
mov ['[ebp+var_110],', 'edx']
mov ['eax,', '[ebp+var_110]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_125']
mov ['ecx,', '[ebp+var_114]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_125']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_114]']
mov ['al,', '[edx]']
mov ['[ebp+var_115],', 'al']
movzx ['ecx,', '[ebp+var_115]']
mov ['edx,', '[ebp+var_110]']
movzx ['eax,', '[ebp+edx+var_108]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_114]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_110]']
mov ['cl,', '[ebp+var_115]']
mov ['[ebp+eax+var_108],', 'cl']
jmp ['short', 'loc_A9']
jmp ['loc_8E']
mov ['edx,', '[ebp+var_110]']
cmp ['edx,', '[ebp+arg_4]']
jnz ['short', 'loc_13F']
mov ['[ebp+var_110],', '0']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_110]']
push ['eax']
mov ['ecx,', '[ebp+var_110]']
lea ['edx,', '[ebp+ecx+var_108]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_MyMemCpy@12']
mov ['ecx,', '[ebp+var_110]']
push ['ecx']
lea ['edx,', '[ebp+var_108]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_110]']
push ['eax']
call ['_MyMemCpy@12']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
_MyMemCpy@12    proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1ED']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_207']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_4]']
mov ['cl,', '[eax]']
mov ['[edx],', 'cl']
jmp ['short', 'loc_1E4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
_Delta_Decode@16 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_110],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_108]']
push ['edx']
call ['_MyMemCpy@12']
mov ['[ebp+var_114],', '0']
mov ['eax,', '[ebp+var_114]']
cmp ['eax,', '[ebp+arg_C]']
jnb ['loc_2FA']
mov ['[ebp+var_110],', '0']
jmp ['short', 'loc_297']
mov ['ecx,', '[ebp+var_114]']
add ['ecx,', '1']
mov ['[ebp+var_114],', 'ecx']
mov ['edx,', '[ebp+var_110]']
add ['edx,', '1']
mov ['[ebp+var_110],', 'edx']
mov ['eax,', '[ebp+var_110]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_2F5']
mov ['ecx,', '[ebp+var_114]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_2F5']
mov ['edx,', '[ebp+var_110]']
movzx ['eax,', '[ebp+edx+var_108]']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_114]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
add ['eax,', 'edx']
mov ['[ebp+var_118],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_114]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_118]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_110]']
mov ['al,', 'byte', 'ptr', '[ebp+var_118]']
mov ['[ebp+edx+var_108],', 'al']
jmp ['short', 'loc_279']
jmp ['loc_25E']
mov ['ecx,', '[ebp+var_110]']
cmp ['ecx,', '[ebp+arg_4]']
jnz ['short', 'loc_30F']
mov ['[ebp+var_110],', '0']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_110]']
push ['edx']
mov ['eax,', '[ebp+var_110]']
lea ['ecx,', '[ebp+eax+var_108]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_MyMemCpy@12']
mov ['eax,', '[ebp+var_110]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_110]']
push ['edx']
call ['_MyMemCpy@12']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp

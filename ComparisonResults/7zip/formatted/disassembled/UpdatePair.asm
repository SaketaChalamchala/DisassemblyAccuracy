?GetUpdatePairInfoList@@YGXABVCDirItems@@ABV?$CObjectVector@UCArcItem@@@@W4EEnum@NFileTimeType@@AAV?$CRecordVector@UCUpdatePair@@@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetUpdatePairInfoList@@YGXABVCDirItems@@ABV?$CObjectVector@UCArcItem@@@@W4EEnum@NFileTimeType@@AAV?$CRecordVector@UCUpdatePair@@@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '104h']
push ['edi']
lea ['edi,', '[ebp+var_110]']
mov ['ecx,', '41h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_E4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@UCArcItem@@@@QBEIXZ']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['??0?$CObjArray@H@@QAE@I@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_44]']
call ['??B?$CObjArray@H@@QAEPAHXZ']
mov ['[ebp+var_4C],', 'eax']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_12E']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '1']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_50]']
cmp ['edx,', '[ebp+var_3C]']
jnb ['short', 'loc_145']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_4C]']
mov ['dword', 'ptr', '[ecx+eax*4],', '0']
jmp ['short', 'loc_125']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
lea ['ecx,', '[ebp+var_30]']
call ['?ClearAndSetSize@?$CRecordVector@I@@QAEXI@Z']
push ['0']
lea ['ecx,', '[ebp+var_30]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['[ebp+var_54],', 'eax']
mov ['[ebp+var_58],', '0']
jmp ['short', 'loc_170']
mov ['eax,', '[ebp+var_58]']
add ['eax,', '1']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+var_58]']
cmp ['ecx,', '[ebp+var_3C]']
jnb ['short', 'loc_186']
mov ['edx,', '[ebp+var_58]']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[ebp+var_58]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_167']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '?CompareArcItems@@YGHPBI0PAX@Z']
lea ['ecx,', '[ebp+var_30]']
call ['?Sort@?$CRecordVector@I@@QAEXP6GHPBI0PAX@Z1@Z']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_1A9']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '1']
cmp ['ecx,', '[ebp+var_3C]']
jnb ['short', 'loc_217']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
push ['edx']
lea ['ecx,', '[ebp+var_30]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
lea ['ecx,', '[ebp+var_30]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['edx,', '[eax]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
push ['eax']
call ['?CompareArcItemsBase@@YGHABUCArcItem@@0@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_215']
lea ['ecx,', '[ebp+var_44]']
call ['??B?$CObjArray@H@@QAEPAHXZ']
mov ['ecx,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax+ecx*4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??B?$CObjArray@H@@QAEPAHXZ']
mov ['edx,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax+edx*4+4],', '0FFFFFFFFh']
jmp ['short', 'loc_1A0']
lea ['ecx,', '[ebp+var_6C]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['?ClearAndReserve@?$CObjectVector@VUString@@@@QAEXI@Z']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_241']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '1']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_74]']
cmp ['edx,', '[ebp+var_38]']
jnb ['short', 'loc_292']
mov ['eax,', '[ebp+var_74]']
push ['eax']
lea ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetLogPath@CDirItems@@QBE?AVUString@@I@Z']
mov ['[ebp+var_E8],', 'eax']
mov ['edx,', '[ebp+var_E8]']
mov ['[ebp+var_EC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_EC]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_D0]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_238']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
lea ['edx,', '[ebp+var_6C]']
push ['edx']
call ['?SortFileNames@@YGXABV?$CObjectVector@VUString@@@@AAV?$CRecordVector@I@@@Z']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_2B1']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '1']
cmp ['ecx,', '[ebp+var_38]']
jnb ['short', 'loc_324']
mov ['edx,', '[ebp+var_74]']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['[ebp+var_78],', 'eax']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '1']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['edx,', '[eax]']
push ['edx']
lea ['ecx,', '[ebp+var_6C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_78]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_322']
mov ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+var_78]']
push ['ecx']
mov ['edx,', 'ds:_k_Duplicate_inDir_Message']
push ['edx']
call ['?ThrowError@@YGXPBDABVUString@@1@Z']
jmp ['short', 'loc_2A8']
mov ['[ebp+var_80],', '0']
mov ['[ebp+var_84],', '0']
mov ['[ebp+var_88],', '0FFFFFFFFh']
mov ['[ebp+var_8C],', '0']
mov ['eax,', '[ebp+var_80]']
cmp ['eax,', '[ebp+var_38]']
jb ['short', 'loc_360']
mov ['ecx,', '[ebp+var_84]']
cmp ['ecx,', '[ebp+var_3C]']
jnb ['loc_88E']
lea ['ecx,', '[ebp+var_A0]']
call ['??0CUpdatePair@@QAE@XZ']
mov ['[ebp+var_A8],', '0FFFFFFFFh']
mov ['[ebp+var_AC],', '0FFFFFFFFh']
mov ['[ebp+var_B0],', '0']
mov ['[ebp+var_B4],', '0']
mov ['[ebp+var_B8],', '0FFFFFFFFh']
mov ['[ebp+var_BC],', '0']
mov ['edx,', '[ebp+var_80]']
cmp ['edx,', '[ebp+var_38]']
jnb ['short', 'loc_3DB']
mov ['eax,', '[ebp+var_80]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_A8],', 'ecx']
mov ['edx,', '[ebp+var_A8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_84]']
cmp ['eax,', '[ebp+var_3C]']
jnb ['loc_498']
mov ['ecx,', '[ebp+var_84]']
push ['ecx']
lea ['ecx,', '[ebp+var_30]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_AC],', 'edx']
mov ['eax,', '[ebp+var_AC]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
mov ['[ebp+var_B4],', 'eax']
mov ['[ebp+var_B8],', '1']
mov ['ecx,', '[ebp+var_80]']
cmp ['ecx,', '[ebp+var_38]']
jnb ['short', 'loc_498']
mov ['ecx,', '[ebp+var_B4]']
add ['ecx,', '10h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+var_A8]']
push ['edx']
lea ['ecx,', '[ebp+var_6C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
mov ['[ebp+var_B8],', 'eax']
cmp ['[ebp+var_B8],', '0']
jnz ['short', 'loc_498']
mov ['ecx,', '[ebp+var_B0]']
call ['?IsDir@CDirItem@@QBE_NXZ']
movzx ['eax,', 'al']
mov ['ecx,', '[ebp+var_B4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Ch]']
cmp ['eax,', 'edx']
jz ['short', 'loc_498']
mov ['eax,', '[ebp+var_B4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Ch]']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '2']
add ['ecx,', '0FFFFFFFFh']
mov ['[ebp+var_B8],', 'ecx']
cmp ['[ebp+var_B8],', '0']
jge ['short', 'loc_4DA']
mov ['edx,', '[ebp+var_A8]']
push ['edx']
lea ['ecx,', '[ebp+var_6C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['[ebp+var_BC],', 'eax']
mov ['[ebp+var_A0],', '2']
mov ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_98],', 'eax']
mov ['ecx,', '[ebp+var_80]']
add ['ecx,', '1']
mov ['[ebp+var_80],', 'ecx']
jmp ['loc_6FC']
cmp ['[ebp+var_B8],', '0']
jle ['short', 'loc_528']
mov ['edx,', '[ebp+var_B4]']
add ['edx,', '10h']
mov ['[ebp+var_BC],', 'edx']
mov ['eax,', '[ebp+var_B4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+20h]']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['[ebp+var_A0],', 'ecx']
mov ['edx,', '[ebp+var_AC]']
mov ['[ebp+var_9C],', 'edx']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '1']
mov ['[ebp+var_84],', 'eax']
jmp ['loc_6FC']
lea ['ecx,', '[ebp+var_44]']
call ['??B?$CObjArray@H@@QAEPAHXZ']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_C0],', 'edx']
cmp ['[ebp+var_C0],', '0']
jz ['short', 'loc_581']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '[ebp+var_C0]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
add ['eax,', '10h']
push ['eax']
mov ['edx,', '[ebp+var_B4]']
add ['edx,', '10h']
push ['edx']
mov ['eax,', 'ds:_k_Duplicate_inArc_Message']
push ['eax']
call ['?ThrowError@@YGXPBDABVUString@@1@Z']
mov ['ecx,', '[ebp+var_A8]']
push ['ecx']
lea ['ecx,', '[ebp+var_6C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['[ebp+var_BC],', 'eax']
mov ['edx,', '[ebp+var_B4]']
movzx ['eax,', 'byte', 'ptr', '[edx+20h]']
test ['eax,', 'eax']
jnz ['short', 'loc_5C0']
mov ['ecx,', '[ebp+var_B4]']
add ['ecx,', '10h']
push ['ecx']
mov ['edx,', '[ebp+var_BC]']
push ['edx']
mov ['eax,', 'ds:_k_NotCensoredCollision_Message']
push ['eax']
call ['?ThrowError@@YGXPBDABVUString@@1@Z']
mov ['ecx,', '[ebp+var_A8]']
mov ['[ebp+var_98],', 'ecx']
mov ['edx,', '[ebp+var_AC]']
mov ['[ebp+var_9C],', 'edx']
mov ['eax,', '[ebp+var_B4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Fh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_634']
mov ['edx,', '[ebp+var_B4]']
cmp ['dword', 'ptr', '[edx+28h],', '0FFFFFFFFh']
jz ['short', 'loc_603']
mov ['eax,', '[ebp+var_B4]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_F0],', 'ecx']
jmp ['short', 'loc_60C']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_F0],', 'edx']
mov ['eax,', '[ebp+var_B4]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_B0]']
add ['ecx,', '18h']
push ['ecx']
mov ['edx,', '[ebp+var_F0]']
push ['edx']
call ['?MyCompareTime@@YGHW4EEnum@NFileTimeType@@ABU_FILETIME@@1@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_63E']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_F8],', 'eax']
cmp ['[ebp+var_F8],', '0FFFFFFFFh']
jz ['short', 'loc_65E']
cmp ['[ebp+var_F8],', '1']
jz ['short', 'loc_66A']
jmp ['short', 'loc_676']
mov ['[ebp+var_A0],', '3']
jmp ['short', 'loc_6E4']
mov ['[ebp+var_A0],', '4']
jmp ['short', 'loc_6E4']
mov ['ecx,', '[ebp+var_B4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Eh]']
test ['edx,', 'edx']
jz ['short', 'loc_6CE']
mov ['eax,', '[ebp+var_B0]']
mov ['ecx,', '[ebp+var_B4]']
mov ['[ebp+var_FC],', 'eax']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_FC]']
mov ['eax,', '[ebp+var_100]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jnz ['short', 'loc_6CE']
mov ['edx,', '[ebp+var_FC]']
mov ['eax,', '[ebp+var_100]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jnz ['short', 'loc_6CE']
mov ['[ebp+var_104],', '5']
jmp ['short', 'loc_6D8']
mov ['[ebp+var_104],', '6']
mov ['edx,', '[ebp+var_104]']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_84]']
add ['ecx,', '1']
mov ['[ebp+var_84],', 'ecx']
cmp ['[ebp+var_B0],', '0']
jz ['short', 'loc_713']
mov ['edx,', '[ebp+var_B0]']
movzx ['eax,', 'byte', 'ptr', '[edx+4Ch]']
test ['eax,', 'eax']
jnz ['short', 'loc_732']
cmp ['[ebp+var_B4],', '0']
jz ['loc_83F']
mov ['ecx,', '[ebp+var_B4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Dh]']
test ['edx,', 'edx']
jz ['loc_83F']
cmp ['[ebp+var_8C],', '0']
jz ['loc_83D']
mov ['ecx,', '[ebp+var_8C]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_C4],', 'eax']
mov ['ecx,', '[ebp+var_BC]']
call ['?Len@UString@@QBEIXZ']
cmp ['eax,', '[ebp+var_C4]']
jbe ['loc_83D']
mov ['ecx,', '[ebp+var_BC]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_C4]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
cmp ['edx,', '3Ah']
jnz ['short', 'loc_7EC']
mov ['eax,', '[ebp+var_C4]']
push ['eax']
lea ['ecx,', '[ebp+var_E0]']
push ['ecx']
mov ['ecx,', '[ebp+var_BC]']
call ['?Left@UString@@QBE?AV1@I@Z']
mov ['[ebp+var_108],', 'eax']
mov ['edx,', '[ebp+var_108]']
mov ['[ebp+var_10C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['eax,', '[ebp+var_E4]']
or ['eax,', '1']
mov ['[ebp+var_E4],', 'eax']
mov ['ecx,', '[ebp+var_10C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_7EC']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_7F6']
mov ['[ebp+var_110],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_110]']
mov ['[ebp+var_D1],', 'cl']
mov ['[ebp+var_4],', '3']
mov ['edx,', '[ebp+var_E4]']
and ['edx,', '1']
jz ['short', 'loc_826']
and ['[ebp+var_E4],', '0FFFFFFFEh']
lea ['ecx,', '[ebp+var_E0]']
call ['??1UString@@QAE@XZ']
movzx ['eax,', '[ebp+var_D1]']
test ['eax,', 'eax']
jz ['short', 'loc_83D']
mov ['ecx,', '[ebp+var_88]']
mov ['[ebp+var_94],', 'ecx']
jmp ['short', 'loc_859']
mov ['ecx,', '[ebp+arg_C]']
call ['?Size@?$CRecordVector@UCUpdatePair@@@@QBEIXZ']
mov ['[ebp+var_88],', 'eax']
mov ['edx,', '[ebp+var_BC]']
mov ['[ebp+var_8C],', 'edx']
sub ['esp,', '10h']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+var_A0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_9C]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_94]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_C]']
call ['?Add@?$CRecordVector@UCUpdatePair@@@@QAEIUCUpdatePair@@@Z']
jmp ['loc_349']
mov ['ecx,', '[ebp+arg_C]']
call ['?ReserveDown@?$CRecordVector@UCUpdatePair@@@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CObjArray@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CRecordVector@I@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN69']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '110h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?MyCompareTime@@YGHW4EEnum@NFileTimeType@@ABU_FILETIME@@1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '38h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_9A9']
cmp ['[ebp+var_38],', '1']
jz ['short', 'loc_9C2']
cmp ['[ebp+var_38],', '2']
jz ['short', 'loc_9EB']
jmp ['short', 'loc_A14']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+lpFileTime2]']
push ['ecx']
mov ['edx,', '[ebp+lpFileTime1]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CompareFileTime@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_A29']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+lpFileTime1]']
push ['ecx']
call ['?FileTimeToUnixTime@NTime@NWindows@@YG_NABU_FILETIME@@AAI@Z']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+lpFileTime2]']
push ['eax']
call ['?FileTimeToUnixTime@NTime@NWindows@@YG_NABU_FILETIME@@AAI@Z']
mov ['ecx,', '[ebp+var_14.dwLowDateTime]']
push ['ecx']
mov ['edx,', '[ebp+var_8.dwLowDateTime]']
push ['edx']
call ['??$MyCompare@I@@YGHII@Z']
jmp ['short', 'loc_A29']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+lpFileTime1]']
push ['ecx']
call ['?FileTimeToDosTime@NTime@NWindows@@YG_NABU_FILETIME@@AAI@Z']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+lpFileTime2]']
push ['eax']
call ['?FileTimeToDosTime@NTime@NWindows@@YG_NABU_FILETIME@@AAI@Z']
mov ['ecx,', '[ebp+var_2C.dwLowDateTime]']
push ['ecx']
mov ['edx,', '[ebp+var_20.dwLowDateTime]']
push ['edx']
call ['??$MyCompare@I@@YGHII@Z']
jmp ['short', 'loc_A29']
mov ['[ebp+var_34],', '3FF582h']
push ['offset', '__TI1H']
lea ['eax,', '[ebp+var_34]']
push ['eax']
call ['__CxxThrowException@8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ThrowError@@YGXPBDABVUString@@1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ThrowError@@YGXPBDABVUString@@1@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['?SetFromAscii@UString@@QAEXPBD@Z']
lea ['ecx,', '[ebp+var_1C]']
call ['?Add_LF@UString@@QAEXXZ']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
lea ['ecx,', '[ebp+var_1C]']
call ['?Add_LF@UString@@QAEXXZ']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??0UString@@QAE@ABV0@@Z']
push ['offset', '__TI1?AVUString@@']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['__CxxThrowException@8']
endp
?CompareArcItemsBase@@YGHABUCArcItem@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '10h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_BEE']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_C15']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Ch]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+1Ch]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_C13']
mov ['ecx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[ecx+1Ch]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '0FFFFFFFEh']
add ['eax,', '1']
jmp ['short', 'loc_C15']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?CompareArcItems@@YGHPBI0PAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_C]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
push ['eax']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
push ['eax']
call ['?CompareArcItemsBase@@YGHABUCArcItem@@0@Z']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_C82']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_C8F']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$MyCompare@I@@YGHII@Z']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$?GetUpdatePairInfoList@@YGXABVCDirItems@@ABV?$CObjectVector@UCArcItem@@@@W4EEnum@NFileTimeType@@AAV?$CRecordVector@UCUpdatePair@@@@@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__unwindfunclet$?GetUpdatePairInfoList@@YGXABVCDirItems@@ABV?$CObjectVector@UCArcItem@@@@W4EEnum@NFileTimeType@@AAV?$CRecordVector@UCUpdatePair@@@@@Z$1 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__unwindfunclet$?GetUpdatePairInfoList@@YGXABVCDirItems@@ABV?$CObjectVector@UCArcItem@@@@W4EEnum@NFileTimeType@@AAV?$CRecordVector@UCUpdatePair@@@@@Z$2 proc near
lea ['ecx,', '[ebp-44h]']
jmp ['??1?$CObjArray@H@@QAE@XZ']
endp
__unwindfunclet$?GetUpdatePairInfoList@@YGXABVCDirItems@@ABV?$CObjectVector@UCArcItem@@@@W4EEnum@NFileTimeType@@AAV?$CRecordVector@UCUpdatePair@@@@@Z$3 proc near
lea ['ecx,', '[ebp-6Ch]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?GetUpdatePairInfoList@@YGXABVCDirItems@@ABV?$CObjectVector@UCArcItem@@@@W4EEnum@NFileTimeType@@AAV?$CRecordVector@UCUpdatePair@@@@@Z$4 proc near
lea ['ecx,', '[ebp-0D0h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetUpdatePairInfoList@@YGXABVCDirItems@@ABV?$CObjectVector@UCArcItem@@@@W4EEnum@NFileTimeType@@AAV?$CRecordVector@UCUpdatePair@@@@@Z$5 proc near
mov ['eax,', '[ebp-0E4h]']
and ['eax,', '1']
jz ['locret_CEC']
and ['dword', 'ptr', '[ebp-0E4h],', '0FFFFFFFEh']
lea ['ecx,', '[ebp-0E0h]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__ehhandler$?GetUpdatePairInfoList@@YGXABVCDirItems@@ABV?$CObjectVector@UCArcItem@@@@W4EEnum@NFileTimeType@@AAV?$CRecordVector@UCUpdatePair@@@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetUpdatePairInfoList@@YGXABVCDirItems@@ABV?$CObjectVector@UCArcItem@@@@W4EEnum@NFileTimeType@@AAV?$CRecordVector@UCUpdatePair@@@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ThrowError@@YGXPBDABVUString@@1@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ThrowError@@YGXPBDABVUString@@1@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ThrowError@@YGXPBDABVUString@@1@Z']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Left@UString@@QBE?AV1@I@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@AAE@IABV0@@Z']
mov ['edx,', '[ebp+var_8]']
or ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsDir@CDirItem@@QBE_NXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+3Ch]']
and ['eax,', '10h']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CUpdatePair@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0Ch],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CObjectVector@VUString@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CObjectVector@VUString@@@@QAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_1040']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_1047']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1162']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_1159']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1160']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_111E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndSetSize@?$CRecordVector@I@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@I@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@I@@QAEAAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Sort@?$CRecordVector@I@@QAEXP6GHPBI0PAX@Z1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_12D1']
jmp ['loc_1355']
mov ['ecx,', '[ebp+var_4]']
call ['?Front@?$CRecordVector@I@@QAEAAIXZ']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['?SortRefDown@?$CRecordVector@I@@SGXPAIIIP6GHPBI1PAX@Z2@Z']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
jnz ['short', 'loc_12E7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_C]']
mov ['edx,', '[edx+4]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['?SortRefDown@?$CRecordVector@I@@SGXPAIIIP6GHPBI1PAX@Z2@Z']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_130B']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCArcItem@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjArray@H@@QAE@I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1455']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjArray@H@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@H@@QAEPAHXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCUpdatePair@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveDown@?$CRecordVector@UCUpdatePair@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReserveDown@?$CRecordVector@UCUpdatePair@@@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_1529']
jmp ['loc_15EC']
mov ['[ebp+Dst],', '0']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['loc_15C4']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_18],', 'edx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '10h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_158E']
push ['offset', '??0CUpdatePair@@QAE@XZ']
mov ['eax,', '[ebp+var_18]']
push ['eax']
push ['10h']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['??_H@YGXPAXIHP6EPAX0@Z@Z']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_28],', 'edx']
jmp ['short', 'loc_1595']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+Dst],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
shl ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+4]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?ReserveDown@?$CRecordVector@UCUpdatePair@@@@QAEXXZ$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?ReserveDown@?$CRecordVector@UCUpdatePair@@@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReserveDown@?$CRecordVector@UCUpdatePair@@@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?Add@?$CRecordVector@UCUpdatePair@@@@QAEIUCUpdatePair@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@UCUpdatePair@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??_GUString@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_16FA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_H@YGXPAXIHP6EPAX0@Z@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
js ['short', 'loc_1739']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_1714']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_181C']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clear@?$CObjectVector@VUString@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1948']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_193F']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1946']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1904']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CRecordVector@I@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@I@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_19E8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Front@?$CRecordVector@I@@QAEAAIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SortRefDown@?$CRecordVector@I@@SGXPAIIIP6GHPBI1PAX@Z2@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+arg_8]']
jbe ['short', 'loc_1A46']
jmp ['short', 'loc_1AC1']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['short', 'loc_1A80']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*4+4]']
push ['eax']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['short', 'loc_1A80']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jl ['short', 'loc_1AA4']
jmp ['short', 'loc_1AC1']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
mov ['esi,', '[ebp+arg_0]']
mov ['eax,', '[esi+eax*4]']
mov ['[edx+ecx*4],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+arg_4],', 'ecx']
jmp ['loc_1A34']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+edx*4],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?ReserveOnePosition@?$CRecordVector@UCUpdatePair@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReserveOnePosition@?$CRecordVector@UCUpdatePair@@@@AAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_1C2B']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_1C]']
mov ['edx,', '10h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_1BC7']
push ['offset', '??0CUpdatePair@@QAE@XZ']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
push ['10h']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['??_H@YGXPAXIHP6EPAX0@Z@Z']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_1BCE']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+Dst],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jz ['short', 'loc_1C06']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+Dst]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+8],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?ReserveOnePosition@?$CRecordVector@UCUpdatePair@@@@AAEXXZ$0 proc near
mov ['eax,', '[ebp-24h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?ReserveOnePosition@?$CRecordVector@UCUpdatePair@@@@AAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReserveOnePosition@?$CRecordVector@UCUpdatePair@@@@AAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@I@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$MyCompare@I@@YGHII@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_1CEC']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_1CFA']
mov ['ecx,', '[ebp+arg_0]']
xor ['edx,', 'edx']
cmp ['ecx,', '[ebp+arg_4]']
setnz ['dl']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

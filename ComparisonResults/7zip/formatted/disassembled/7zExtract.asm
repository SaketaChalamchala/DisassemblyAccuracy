?Init@CFolderOutStream@N7z@NArchive@@QAEJIPBII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+28h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+24h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0Eh],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+34h],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?ProcessEmptyFiles@CFolderOutStream@N7z@NArchive@@AAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?OpenFile@CFolderOutStream@N7z@NArchive@@AAEJ_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?OpenFile@CFolderOutStream@N7z@NArchive@@AAEJ_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx+2Ch]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jz ['short', 'loc_B9']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
mov ['eax,', '[edx]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_C2']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+28h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+28h]']
cmp ['edx,', '[ebp+var_18]']
jnz ['short', 'loc_E5']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['[ebp+var_3C],', 'ecx']
jmp ['short', 'loc_EC']
mov ['[ebp+var_3C],', '2']
mov ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_1C],', 'edx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jz ['short', 'loc_12B']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_12B']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+2Ch]']
call ['?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_12B']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+11h]']
test ['eax,', 'eax']
jnz ['short', 'loc_12B']
mov ['[ebp+var_1C],', '1']
lea ['ecx,', '[ebp+var_24]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ']
mov ['[ebp+var_40],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+14h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_199']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_30],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_282']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@ABV0@@Z']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Dh]']
test ['eax,', 'eax']
jz ['short', 'loc_1DC']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+12h]']
test ['edx,', 'edx']
jz ['short', 'loc_1DC']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1DC']
mov ['[ebp+var_44],', '1']
jmp ['short', 'loc_1E3']
mov ['[ebp+var_44],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[edx+0Fh],', 'al']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0Eh],', '1']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[eax+4]']
mov ['[edx+1Ch],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_244']
lea ['ecx,', '[ebp+var_24]']
call ['??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_244']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx+2Ch]']
call ['?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_244']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_244']
mov ['[ebp+var_1C],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ']
mov ['[ebp+var_48],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_34]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CloseFile_and_SetResult@CFolderOutStream@N7z@NArchive@@AAEJH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0Eh],', '0']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+20h],', '0']
jnz ['short', 'loc_324']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+24h]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+24h],', 'eax']
jmp ['short', 'loc_352']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+28h]']
jnz ['short', 'loc_352']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
add ['ecx,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+20h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+24h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+24h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+28h],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CloseFile@CFolderOutStream@N7z@NArchive@@AAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+2Ch]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Fh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3FB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
xor ['eax,', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_8]']
cmp ['[ecx+0Ch],', 'eax']
jz ['short', 'loc_3FB']
mov ['[ebp+var_C],', '3']
jmp ['short', 'loc_402']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?CloseFile_and_SetResult@CFolderOutStream@N7z@NArchive@@AAEJH@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ProcessEmptyFiles@CFolderOutStream@N7z@NArchive@@AAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['short', 'loc_498']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ecx]']
or ['eax,', '[edx+4]']
jnz ['short', 'loc_498']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?OpenFile@CFolderOutStream@N7z@NArchive@@AAEJ_N@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_480']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_49A']
mov ['ecx,', '[ebp+var_4]']
call ['?CloseFile@CFolderOutStream@N7z@NArchive@@AAEJXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_496']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_49A']
jmp ['short', 'loc_43A']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Write@CFolderOutStream@N7z@NArchive@@UAGJPBXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_4D6']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['loc_687']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Eh]']
test ['edx,', 'edx']
jz ['loc_63D']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[eax+1Ch]']
ja ['short', 'loc_520']
jb ['short', 'loc_518']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[edx+18h]']
jnb ['short', 'loc_520']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_34],', 'ecx']
jmp ['short', 'loc_529']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+18h]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_579']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_38],', 'eax']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Fh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_59C']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
call ['@CrcUpdate@12']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+10h],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_5AF']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
mov ['esi,', '[eax+18h]']
sub ['esi,', 'ecx']
mov ['ecx,', '[eax+1Ch]']
sbb ['ecx,', 'edx']
mov ['edx,', '[ebp+this]']
mov ['[edx+18h],', 'esi']
mov ['[edx+1Ch],', 'ecx']
mov ['eax,', '[ebp+this]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ecx+18h]']
or ['eax,', '[edx+1Ch]']
jnz ['short', 'loc_61F']
mov ['ecx,', '[ebp+this]']
call ['?CloseFile@CFolderOutStream@N7z@NArchive@@AAEJXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_609']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_689']
mov ['ecx,', '[ebp+this]']
call ['?ProcessEmptyFiles@CFolderOutStream@N7z@NArchive@@AAEJXZ']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_61F']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_689']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_630']
mov ['eax,', '[ebp+var_1C]']
jmp ['short', 'loc_689']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_638']
jmp ['short', 'loc_687']
jmp ['loc_4D6']
mov ['ecx,', '[ebp+this]']
call ['?ProcessEmptyFiles@CFolderOutStream@N7z@NArchive@@AAEJXZ']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_653']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_689']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+24h],', '0']
jnz ['short', 'loc_66A']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+34h],', '1']
mov ['eax,', '20000010h']
jmp ['short', 'loc_689']
push ['0']
mov ['ecx,', '[ebp+this]']
call ['?OpenFile@CFolderOutStream@N7z@NArchive@@AAEJ_N@Z']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_682']
mov ['eax,', '[ebp+var_24]']
jmp ['short', 'loc_689']
jmp ['loc_4D6']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?FlushCorrupted@CFolderOutStream@N7z@NArchive@@QAEJH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['short', 'loc_738']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Eh]']
test ['edx,', 'edx']
jz ['short', 'loc_71E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?CloseFile_and_SetResult@CFolderOutStream@N7z@NArchive@@AAEJH@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_71C']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_73A']
jmp ['short', 'loc_736']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?OpenFile@CFolderOutStream@N7z@NArchive@@AAEJ_N@Z']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_736']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_73A']
jmp ['short', 'loc_6EE']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '25Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_26C]']
mov ['ecx,', '97h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@PAUIArchiveExtractCallback@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_20],', '0']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
setz ['cl']
mov ['[ebp+var_25],', 'cl']
movzx ['edx,', '[ebp+var_25]']
test ['edx,', 'edx']
jz ['short', 'loc_7E7']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0E8h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
mov ['[ebp+var_1B4],', 'eax']
mov ['eax,', '[ebp+var_1B4]']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_80E']
mov ['[ebp+var_174],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_174]']
jmp ['loc_15D4']
mov ['[ebp+var_2C],', '0FFFFFFFFh']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_82E']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '1']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_34]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['loc_921']
movzx ['eax,', '[ebp+var_25]']
test ['eax,', 'eax']
jz ['short', 'loc_84D']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_1B8],', 'ecx']
jmp ['short', 'loc_85C']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_1B8],', 'ecx']
mov ['edx,', '[ebp+var_1B8]']
mov ['[ebp+var_38],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1ACh']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['[ebp+var_1BC],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_1BC]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_3C],', 'edx']
cmp ['[ebp+var_3C],', '0FFFFFFFFh']
jnz ['short', 'loc_890']
jmp ['short', 'loc_825']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+var_2C]']
jnz ['short', 'loc_8A0']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[ebp+var_30]']
jnb ['short', 'loc_8C3']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1A8h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['[ebp+var_1C0],', 'eax']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+var_1C0]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
mov ['[ebp+var_40],', 'edx']
jmp ['short', 'loc_8D4']
mov ['eax,', '[ebp+var_40]']
add ['eax,', '1']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
cmp ['ecx,', '[ebp+var_38]']
ja ['short', 'loc_90D']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0E8h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_1C4],', 'eax']
mov ['eax,', '[ebp+var_1C4]']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_20]']
adc ['edx,', '[eax+4]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_8CB']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['loc_825']
lea ['ecx,', '[ebp+var_18]']
call ['??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ']
mov ['[ebp+var_1C8],', 'eax']
mov ['edx,', '[ebp+var_1C8]']
mov ['[ebp+var_1CC],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_1CC]']
push ['edx']
mov ['eax,', '[ebp+var_1CC]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1D0],', 'eax']
mov ['eax,', '[ebp+var_1D0]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_995']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_178],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_178]']
jmp ['loc_15D4']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1D4],', 'eax']
mov ['edx,', '[ebp+var_1D4]']
mov ['[ebp+var_180],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_180],', '0']
jz ['short', 'loc_9DD']
mov ['ecx,', '[ebp+var_180]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_1D8],', 'eax']
mov ['eax,', '[ebp+var_1D8]']
mov ['[ebp+var_1DC],', 'eax']
jmp ['short', 'loc_9E7']
mov ['[ebp+var_1DC],', '0']
mov ['ecx,', '[ebp+var_1DC]']
mov ['[ebp+var_17C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_17C]']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_48]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ']
mov ['[ebp+var_1E0],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_1E0]']
push ['ecx']
mov ['ecx,', '[ebp+var_48]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+83h]']
push ['eax']
lea ['ecx,', '[ebp+var_BC]']
call ['??0CDecoder@N7z@NArchive@@QAE@_N@Z']
mov ['[ebp+var_1E4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??0?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['[ebp+var_1E8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_E0]']
call ['??I?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAEPAPAUIArchiveExtractCallbackMessage@@XZ']
mov ['[ebp+var_1EC],', 'eax']
mov ['ecx,', '[ebp+var_1EC]']
push ['ecx']
push ['offset', '_IID_IArchiveExtractCallbackMessage']
lea ['ecx,', '[ebp+var_18]']
call ['??$QueryInterface@UIArchiveExtractCallbackMessage@@@?$CMyComPtr@UIArchiveExtractCallback@@@@QBEJABU_GUID@@PAPAUIArchiveExtractCallbackMessage@@@Z']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1F0],', 'eax']
mov ['edx,', '[ebp+var_1F0]']
mov ['[ebp+var_188],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
cmp ['[ebp+var_188],', '0']
jz ['short', 'loc_AD1']
mov ['ecx,', '[ebp+var_188]']
call ['??0CFolderOutStream@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_1F4],', 'eax']
mov ['eax,', '[ebp+var_1F4]']
mov ['[ebp+var_1F8],', 'eax']
jmp ['short', 'loc_ADB']
mov ['[ebp+var_1F8],', '0']
mov ['ecx,', '[ebp+var_1F8]']
mov ['[ebp+var_184],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['edx,', '[ebp+var_184]']
mov ['[ebp+var_E8],', 'edx']
mov ['eax,', '[ebp+var_E8]']
push ['eax']
lea ['ecx,', '[ebp+var_F0]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '90h']
mov ['edx,', '[ebp+var_E8]']
mov ['[edx+2Ch],', 'ecx']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_E8]']
add ['ecx,', '30h']
call ['??4?$CMyComPtr@UIArchiveExtractCallback@@@@QAEPAUIArchiveExtractCallback@@ABV0@@Z']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_C],', '0']
setnz ['cl']
mov ['edx,', '[ebp+var_E8]']
mov ['[edx+0Ch],', 'cl']
mov ['eax,', '[ebp+this]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+28h],', '0']
setnz ['cl']
mov ['edx,', '[ebp+var_E8]']
mov ['[edx+0Dh],', 'cl']
mov ['[ebp+var_F8],', '0']
jmp ['short', 'loc_BA0']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', 'dword', 'ptr', '[ebp+var_D4]']
mov ['edx,', '[eax+2Ch]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_D4+4]']
mov ['eax,', '[ebp+var_48]']
mov ['[eax+28h],', 'ecx']
mov ['[eax+2Ch],', 'edx']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ecx+20h]']
add ['edx,', '[ebp+var_C8]']
mov ['eax,', '[ecx+24h]']
adc ['eax,', '[ebp+var_C4]']
mov ['ecx,', '[ebp+var_48]']
mov ['[ecx+20h],', 'edx']
mov ['[ecx+24h],', 'eax']
mov ['ecx,', '[ebp+var_48]']
call ['?SetCur@CLocalProgress@@QAEJXZ']
mov ['[ebp+var_1FC],', 'eax']
mov ['edx,', '[ebp+var_1FC]']
mov ['[ebp+var_FC],', 'edx']
cmp ['[ebp+var_FC],', '0']
jz ['short', 'loc_C1F']
mov ['eax,', '[ebp+var_FC]']
mov ['[ebp+var_18C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_F0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_18C]']
jmp ['loc_15D4']
mov ['ecx,', '[ebp+var_F8]']
cmp ['ecx,', '[ebp+arg_8]']
jb ['short', 'loc_C2F']
jmp ['loc_1551']
mov ['dword', 'ptr', '[ebp+var_D4],', '0']
mov ['dword', 'ptr', '[ebp+var_D4+4],', '0']
mov ['[ebp+var_C8],', '0']
mov ['[ebp+var_C4],', '0']
movzx ['edx,', '[ebp+var_25]']
test ['edx,', 'edx']
jz ['short', 'loc_C6D']
mov ['eax,', '[ebp+var_F8]']
mov ['[ebp+var_200],', 'eax']
jmp ['short', 'loc_C7F']
mov ['ecx,', '[ebp+var_F8]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_200],', 'eax']
mov ['ecx,', '[ebp+var_200]']
mov ['[ebp+var_100],', 'ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1ACh']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['[ebp+var_204],', 'eax']
mov ['edx,', '[ebp+var_100]']
mov ['eax,', '[ebp+var_204]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_104],', 'ecx']
mov ['[ebp+var_108],', '1']
cmp ['[ebp+var_104],', '0FFFFFFFFh']
jz ['loc_E6B']
mov ['edx,', '[ebp+var_104]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '90h']
call ['?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z']
mov ['[ebp+var_20C],', 'eax']
mov ['[ebp+var_208],', 'edx']
mov ['eax,', '[ebp+var_20C]']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_208]']
mov ['[ebp+var_C4],', 'ecx']
mov ['edx,', '[ebp+var_100]']
add ['edx,', '1']
mov ['[ebp+var_10C],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1A8h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['[ebp+var_210],', 'eax']
mov ['eax,', '[ebp+var_104]']
mov ['ecx,', '[ebp+var_210]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_100],', 'edx']
mov ['eax,', '[ebp+var_F8]']
add ['eax,', '1']
mov ['[ebp+var_110],', 'eax']
jmp ['short', 'loc_D5C']
mov ['ecx,', '[ebp+var_110]']
add ['ecx,', '1']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_110]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['loc_DEE']
movzx ['eax,', '[ebp+var_25]']
test ['eax,', 'eax']
jz ['short', 'loc_D81']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+var_214],', 'ecx']
jmp ['short', 'loc_D93']
mov ['edx,', '[ebp+var_110]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_214],', 'ecx']
mov ['edx,', '[ebp+var_214]']
mov ['[ebp+var_114],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1ACh']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['[ebp+var_218],', 'eax']
mov ['eax,', '[ebp+var_114]']
mov ['ecx,', '[ebp+var_218]']
mov ['edx,', '[ecx+eax*4]']
cmp ['edx,', '[ebp+var_104]']
jnz ['short', 'loc_DD8']
mov ['eax,', '[ebp+var_114]']
cmp ['eax,', '[ebp+var_10C]']
jnb ['short', 'loc_DDA']
jmp ['short', 'loc_DEE']
mov ['ecx,', '[ebp+var_114]']
add ['ecx,', '1']
mov ['[ebp+var_10C],', 'ecx']
jmp ['loc_D4D']
mov ['edx,', '[ebp+var_110]']
sub ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_108],', 'edx']
mov ['eax,', '[ebp+var_100]']
mov ['[ebp+var_110],', 'eax']
jmp ['short', 'loc_E1D']
mov ['ecx,', '[ebp+var_110]']
add ['ecx,', '1']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_110]']
cmp ['edx,', '[ebp+var_10C]']
jnb ['short', 'loc_E6B']
mov ['eax,', '[ebp+var_110]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0E8h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_21C],', 'eax']
mov ['ecx,', '[ebp+var_21C]']
mov ['edx,', 'dword', 'ptr', '[ebp+var_D4]']
add ['edx,', '[ecx]']
mov ['eax,', 'dword', 'ptr', '[ebp+var_D4+4]']
adc ['eax,', '[ecx+4]']
mov ['dword', 'ptr', '[ebp+var_D4],', 'edx']
mov ['dword', 'ptr', '[ebp+var_D4+4],', 'eax']
jmp ['short', 'loc_E0E']
movzx ['ecx,', '[ebp+var_25]']
test ['ecx,', 'ecx']
jz ['short', 'loc_E7F']
mov ['[ebp+var_220],', '0']
jmp ['short', 'loc_E91']
mov ['edx,', '[ebp+var_F8]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_220],', 'ecx']
mov ['edx,', '[ebp+var_108]']
push ['edx']
mov ['eax,', '[ebp+var_220]']
push ['eax']
mov ['ecx,', '[ebp+var_100]']
push ['ecx']
mov ['ecx,', '[ebp+var_E8]']
call ['?Init@CFolderOutStream@N7z@NArchive@@QAEJIPBII@Z']
mov ['[ebp+var_224],', 'eax']
mov ['edx,', '[ebp+var_224]']
mov ['[ebp+var_118],', 'edx']
mov ['eax,', '[ebp+var_F8]']
add ['eax,', '[ebp+var_108]']
mov ['[ebp+var_F8],', 'eax']
mov ['ecx,', '[ebp+var_118]']
mov ['[ebp+var_11C],', 'ecx']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_F46']
mov ['edx,', '[ebp+var_11C]']
mov ['[ebp+var_190],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_F0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_190]']
jmp ['loc_15D4']
mov ['ecx,', '[ebp+var_E8]']
call ['?WasWritingFinished@CFolderOutStream@N7z@NArchive@@QBE_NXZ']
mov ['[ebp+var_225],', 'al']
movzx ['eax,', '[ebp+var_225]']
test ['eax,', 'eax']
jz ['short', 'loc_F67']
jmp ['loc_B64']
lea ['ecx,', '[ebp+var_124]']
call ['??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['[ebp+var_22C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ']
mov ['[ebp+var_230],', 'eax']
cmp ['[ebp+var_230],', '0']
jz ['short', 'loc_FB8']
lea ['ecx,', '[ebp+var_124]']
call ['??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ']
mov ['[ebp+var_234],', 'eax']
mov ['ecx,', '[ebp+var_234]']
push ['ecx']
push ['offset', '_IID_ICryptoGetTextPassword']
lea ['ecx,', '[ebp+var_18]']
call ['??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveExtractCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['[ebp+var_12D],', '0']
mov ['[ebp+var_139],', '0']
lea ['ecx,', '[ebp+var_150]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_238],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_124]']
call ['??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ']
mov ['[ebp+var_23C],', 'eax']
lea ['ecx,', '[ebp+var_50]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_240],', 'eax']
lea ['ecx,', '[ebp+var_F0]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_244],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '88h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_248],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+20h]']
push ['eax']
push ['1']
lea ['ecx,', '[ebp+var_150]']
push ['ecx']
lea ['edx,', '[ebp+var_139]']
push ['edx']
lea ['eax,', '[ebp+var_12D]']
push ['eax']
mov ['ecx,', '[ebp+var_23C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_240]']
push ['edx']
mov ['eax,', '[ebp+var_244]']
push ['eax']
lea ['ecx,', '[ebp+var_D4]']
push ['ecx']
mov ['edx,', '[ebp+var_104]']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '90h']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+18Ch]']
push ['edx']
mov ['eax,', '[ecx+188h]']
push ['eax']
mov ['ecx,', '[ebp+var_248]']
push ['ecx']
lea ['ecx,', '[ebp+var_BC]']
call ['?Decode@CDecoder@N7z@NArchive@@QAEJPAUIInStream@@_KABUCFolders@23@IPB_KPAUISequentialOutStream@@PAUICompressProgressInfo@@PAPAUISequentialInStream@@PAUICryptoGetTextPassword@@AA_N8AAVUString@@_NI@Z']
mov ['[ebp+var_24C],', 'eax']
mov ['edx,', '[ebp+var_24C]']
mov ['[ebp+var_158],', 'edx']
cmp ['[ebp+var_158],', '1']
jz ['short', 'loc_10BD']
cmp ['[ebp+var_158],', '80004001h']
jnz ['loc_12CA']
mov ['ecx,', '[ebp+var_E8]']
call ['?WasWritingFinished@CFolderOutStream@N7z@NArchive@@QBE_NXZ']
mov ['[ebp+var_24D],', 'al']
mov ['al,', '[ebp+var_24D]']
mov ['[ebp+var_159],', 'al']
mov ['ecx,', '[ebp+var_158]']
sub ['ecx,', '1']
neg ['ecx']
sbb ['ecx,', 'ecx']
add ['ecx,', '2']
mov ['[ebp+var_160],', 'ecx']
mov ['edx,', '[ebp+var_160]']
push ['edx']
mov ['ecx,', '[ebp+var_E8]']
call ['?FlushCorrupted@CFolderOutStream@N7z@NArchive@@QAEJH@Z']
mov ['[ebp+var_254],', 'eax']
mov ['eax,', '[ebp+var_254]']
mov ['[ebp+var_164],', 'eax']
cmp ['[ebp+var_164],', '0']
jz ['short', 'loc_1197']
mov ['ecx,', '[ebp+var_164]']
mov ['[ebp+var_194],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_150]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_124]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_F0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_194]']
jmp ['loc_15D4']
movzx ['edx,', '[ebp+var_159]']
test ['edx,', 'edx']
jz ['loc_12A3']
lea ['ecx,', '[ebp+var_E0]']
call ['??B?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ']
mov ['[ebp+var_258],', 'eax']
cmp ['[ebp+var_258],', '0']
jz ['loc_12A3']
lea ['ecx,', '[ebp+var_E0]']
call ['??C?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ']
mov ['[ebp+var_25C],', 'eax']
mov ['eax,', '[ebp+var_25C]']
mov ['[ebp+var_260],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_160]']
push ['ecx']
mov ['edx,', '[ebp+var_104]']
push ['edx']
push ['2']
mov ['eax,', '[ebp+var_260]']
push ['eax']
mov ['ecx,', '[ebp+var_260]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_264],', 'eax']
mov ['ecx,', '[ebp+var_264]']
mov ['[ebp+var_168],', 'ecx']
cmp ['[ebp+var_168],', '0']
jz ['short', 'loc_12A3']
mov ['edx,', '[ebp+var_168]']
mov ['[ebp+var_198],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_150]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_124]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_F0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_198]']
jmp ['loc_15D4']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_150]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_124]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
jmp ['loc_B64']
cmp ['[ebp+var_158],', '0']
jz ['short', 'loc_134D']
mov ['eax,', '[ebp+var_158]']
mov ['[ebp+var_19C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_150]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_124]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_F0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_19C]']
jmp ['loc_15D4']
push ['2']
mov ['ecx,', '[ebp+var_E8]']
call ['?FlushCorrupted@CFolderOutStream@N7z@NArchive@@QAEJH@Z']
mov ['[ebp+var_268],', 'eax']
mov ['ecx,', '[ebp+var_268]']
mov ['[ebp+var_16C],', 'ecx']
cmp ['[ebp+var_16C],', '0']
jz ['short', 'loc_13EF']
mov ['edx,', '[ebp+var_16C]']
mov ['[ebp+var_1A0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_150]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_124]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_F0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E0]']
call ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_1A0]']
jmp ['loc_15D4']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_150]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_124]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
jmp ['loc_B64']
endp
__catch$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$0 proc near
push ['2']
mov ['ecx,', '[ebp-0E8h]']
call ['?FlushCorrupted@CFolderOutStream@N7z@NArchive@@QAEJH@Z']
mov ['[ebp-26Ch],', 'eax']
mov ['eax,', '[ebp-26Ch]']
mov ['[ebp-170h],', 'eax']
cmp ['dword', 'ptr', '[ebp-170h],', '0']
jz ['short', 'loc_1457']
mov ['ecx,', '[ebp-170h]']
mov ['[ebp-1A4h],', 'ecx']
mov ['dword', 'ptr', '[ebp-4],', '8']
mov ['eax,', 'offset', '$LN69']
retn
mov ['dword', 'ptr', '[ebp-1A8h],', '80004005h']
mov ['dword', 'ptr', '[ebp-4],', '8']
mov ['eax,', 'offset', '$LN71']
retn
endp
__catch$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$2 proc near
mov ['dword', 'ptr', '[ebp-1B0h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN73']
retn
endp
__unwindfunclet$?OpenFile@CFolderOutStream@N7z@NArchive@@AAEJ_N@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__ehhandler$?OpenFile@CFolderOutStream@N7z@NArchive@@AAEJ_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-48h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?OpenFile@CFolderOutStream@N7z@NArchive@@AAEJ_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$5 proc near
mov ['eax,', '[ebp-180h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$6 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$7 proc near
lea ['ecx,', '[ebp-0BCh]']
jmp ['??1CDecoder@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$8 proc near
lea ['ecx,', '[ebp-0E0h]']
jmp ['??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$9 proc near
mov ['eax,', '[ebp-188h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$10 proc near
lea ['ecx,', '[ebp-0F0h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$11 proc near
lea ['ecx,', '[ebp-124h]']
jmp ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$12 proc near
lea ['ecx,', '[ebp-150h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-270h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C4h']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_1900']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C4h']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1900']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_1907']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QBEPB_KXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edi,', '[eax+ecx*4+4]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QBEPB_KXZ']
mov ['ebx,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[eax+edx*4]']
mov ['ecx,', '[esi+edi*8]']
sub ['ecx,', '[ebx+eax*8]']
mov ['edx,', '[esi+edi*8+4]']
sbb ['edx,', '[ebx+eax*8+4]']
mov ['eax,', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CFolderOutStream@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CFolderOutStream@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CFolderOutStream@N7z@NArchive@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+0Dh],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CFolderOutStream@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__ehhandler$??0CFolderOutStream@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CFolderOutStream@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CFolderOutStream@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1CA8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_1CCB']
push ['offset', '_IID_ISequentialOutStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1CC4']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_1CCB']
mov ['eax,', '80004002h']
jmp ['short', 'loc_1CDC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CFolderOutStream@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CFolderOutStream@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1D92']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_1DBC']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1DB3']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCFolderOutStream@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_1DBA']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WasWritingFinished@CFolderOutStream@N7z@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+24h],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCFolderOutStream@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFolderOutStream@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1E16']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFolderOutStream@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CFolderOutStream@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CFolderOutStream@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__ehhandler$??1CFolderOutStream@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CFolderOutStream@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CDecoder@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CDecoder@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$??1CDecoder@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDecoder@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CBindInfoEx@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CBindInfo@NCoderMixer2@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CBindInfoEx@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CBindInfo@NCoderMixer2@@QAE@XZ']
endp
__ehhandler$??1CBindInfoEx@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CBindInfo@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CBindInfo@NCoderMixer2@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??1CBindInfo@NCoderMixer2@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CBindInfo@NCoderMixer2@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2224']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_226A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_22E8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_232E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_237B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_242C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_244F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_N@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@_N@@QBEAB_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_25E2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@_K@@QBEPB_KXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@I@@QAEPAIXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@I@@QBEPBIXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@PAUIArchiveExtractCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2700']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2746']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIArchiveExtractCallback@@@@QAEPAUIArchiveExtractCallback@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UIArchiveExtractCallback@@@@QAEPAUIArchiveExtractCallback@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2806']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QAEPAPAUIArchiveExtractCallbackMessage@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveExtractCallbackMessage@@@@QBEPAUIArchiveExtractCallbackMessage@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_28B2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIArchiveExtractCallback@@@@QAEPAUIArchiveExtractCallback@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2920']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_2943']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$QueryInterface@UIArchiveExtractCallbackMessage@@@?$CMyComPtr@UIArchiveExtractCallback@@@@QBEJABU_GUID@@PAPAUIArchiveExtractCallbackMessage@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveExtractCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

?Read@CSequentialInStreamCalcSize@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_6C']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+10h]']
adc ['edx,', '[eax+14h]']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_96']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_96']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+18h],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Write@COutStreamCalcSize@@UAGJPBXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_14F']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+10h]']
adc ['edx,', '[eax+14h]']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_174']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?OutStreamFinish@COutStreamCalcSize@@UAGJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_21B']
lea ['ecx,', '[ebp+var_C]']
call ['??0?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ']
lea ['ecx,', '[ebp+var_C]']
call ['??I?$CMyComPtr@UIOutStreamFinish@@@@QAEPAPAUIOutStreamFinish@@XZ']
push ['eax']
push ['offset', '_IID_IOutStreamFinish']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??$QueryInterface@UIOutStreamFinish@@@?$CMyComPtr@UISequentialOutStream@@@@QBEJABU_GUID@@PAPAUIOutStreamFinish@@@Z']
lea ['ecx,', '[ebp+var_C]']
call ['??B?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_213']
lea ['ecx,', '[ebp+var_C]']
call ['??C?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ecx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
lea ['ecx,', '[ebp+var_C]']
call ['??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CheckCoder@CBondsChecks@NCoderMixer2@@AAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+0Ch]']
call ['??A?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QBEABUCCoderStreamsInfo@NCoderMixer2@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_2C2']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_2C9']
xor ['al,', 'al']
jmp ['loc_375']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['byte', 'ptr', '[eax],', '1']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '28h']
call ['??A?$CRecordVector@I@@QBEABII@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_301']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_373']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+0Ch]']
call ['?IsStream_in_PackStreams@CBindInfo@NCoderMixer2@@QBE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_32C']
jmp ['short', 'loc_2F8']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+0Ch]']
call ['?FindBond_for_PackStream@CBindInfo@NCoderMixer2@@QBEHI@Z']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jge ['short', 'loc_348']
xor ['al,', 'al']
jmp ['short', 'loc_375']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QBEABUCBond@NCoderMixer2@@I@Z']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?CheckCoder@CBondsChecks@NCoderMixer2@@AAE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_371']
xor ['al,', 'al']
jmp ['short', 'loc_375']
jmp ['short', 'loc_2F8']
mov ['al,', '1']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Check@CBondsChecks@NCoderMixer2@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
call ['?Size@?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['?BoolVector_Fill_False@NCoderMixer2@@YGXAAV?$CRecordVector@_N@@I@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?CheckCoder@CBondsChecks@NCoderMixer2@@AAE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_3D9']
xor ['al,', 'al']
jmp ['short', 'loc_413']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3EB']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_411']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jnz ['short', 'loc_40F']
xor ['al,', 'al']
jmp ['short', 'loc_413']
jmp ['short', 'loc_3E2']
mov ['al,', '1']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?BoolVector_Fill_False@NCoderMixer2@@YGXAAV?$CRecordVector@_N@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_46F']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_4]']
jnb ['short', 'loc_482']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_466']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ClearMaps@CBindInfo@NCoderMixer2@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['?Clear@?$CRecordVector@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['?Clear@?$CRecordVector@I@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CalcMapsAndCheck@CBindInfo@NCoderMixer2@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CalcMapsAndCheck@CBindInfo@NCoderMixer2@@QAE_NXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '30h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?ClearMaps@CBindInfo@NCoderMixer2@@QAEXXZ']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_53D']
xor ['al,', 'al']
jmp ['loc_61A']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QBEIXZ']
mov ['esi,', 'eax']
sub ['esi,', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCBond@NCoderMixer2@@@@QBEIXZ']
cmp ['esi,', 'eax']
jz ['short', 'loc_560']
xor ['al,', 'al']
jmp ['loc_61A']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_572']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_18],', 'eax']
jnb ['short', 'loc_5D7']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAEAAUCCoderStreamsInfo@NCoderMixer2@@I@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_5AF']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ecx]']
jnb ['short', 'loc_5CA']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
jmp ['short', 'loc_5A6']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_569']
mov ['ecx,', '[ebp+var_10]']
call ['?GetNum_Bonds_and_PackStreams@CBindInfo@NCoderMixer2@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jz ['short', 'loc_5E8']
xor ['al,', 'al']
jmp ['short', 'loc_61A']
lea ['ecx,', '[ebp+var_34]']
call ['??0CBondsChecks@NCoderMixer2@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_28],', 'eax']
lea ['ecx,', '[ebp+var_34]']
call ['?Check@CBondsChecks@NCoderMixer2@@QAE_NXZ']
mov ['[ebp+var_39],', 'al']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CBondsChecks@NCoderMixer2@@QAE@XZ']
mov ['al,', '[ebp+var_39]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetCoderInfo@CCoder@NCoderMixer2@@QAEXPB_KPBQB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_69D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ecx+4]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '10h']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_6B8']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['?ClearAndSetSize@?$CRecordVector@_K@@QAEXI@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['?ClearAndSetSize@?$CRecordVector@PB_K@@QAEXI@Z']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_6EE']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+8]']
jnb ['loc_78B']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_755']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jz ['short', 'loc_755']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['esi,', '[ecx+eax*4]']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['ecx,', '[esi]']
mov ['[eax],', 'ecx']
mov ['edx,', '[esi+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??A?$CRecordVector@PB_K@@QAEAAPB_KI@Z']
mov ['[eax],', 'esi']
jmp ['short', 'loc_786']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??A?$CRecordVector@PB_K@@QAEAAPB_KI@Z']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['loc_6E5']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Is_UnpackSize_Correct_for_Coder@CMixer@NCoderMixer2@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+28h]']
jnz ['short', 'loc_7C9']
mov ['al,', '1']
jmp ['short', 'loc_83E']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?FindBond_for_UnpackStream@CBindInfo@NCoderMixer2@@QBEHI@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_7F6']
mov ['[ebp+var_10],', '13377C5h']
push ['offset', '__TI1H']
lea ['eax,', '[ebp+var_10]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAUCBond@NCoderMixer2@@I@Z']
mov ['edx,', '[eax]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jnz ['short', 'loc_832']
xor ['al,', 'al']
jmp ['short', 'loc_83E']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Is_UnpackSize_Correct_for_Coder@CMixer@NCoderMixer2@@QAE_NI@Z']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Is_PackSize_Correct_for_Stream@CMixer@NCoderMixer2@@AAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?IsStream_in_PackStreams@CBindInfo@NCoderMixer2@@QBE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_884']
mov ['al,', '1']
jmp ['short', 'loc_8EC']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?FindBond_for_PackStream@CBindInfo@NCoderMixer2@@QBEHI@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_8B1']
mov ['[ebp+var_10],', '13377C5h']
push ['offset', '__TI1H']
lea ['eax,', '[ebp+var_10]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAUCBond@NCoderMixer2@@I@Z']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8E0']
xor ['al,', 'al']
jmp ['short', 'loc_8EC']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Is_PackSize_Correct_for_Coder@CMixer@NCoderMixer2@@QAE_NI@Z']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Is_PackSize_Correct_for_Coder@CMixer@NCoderMixer2@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??A?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAEAAUCCoderStreamsInfo@NCoderMixer2@@I@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_954']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_C]']
jnb ['short', 'loc_978']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Is_PackSize_Correct_for_Stream@CMixer@NCoderMixer2@@AAE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_976']
xor ['al,', 'al']
jmp ['short', 'loc_97A']
jmp ['short', 'loc_94B']
mov ['al,', '1']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsThere_ExternalCoder_in_PackTree@CMixer@NCoderMixer2@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_9D0']
mov ['al,', '1']
jmp ['loc_A8D']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??A?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAEAAUCCoderStreamsInfo@NCoderMixer2@@I@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_A0A']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_A8B']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?IsStream_in_PackStreams@CBindInfo@NCoderMixer2@@QBE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A33']
jmp ['short', 'loc_A01']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?FindBond_for_PackStream@CBindInfo@NCoderMixer2@@QBEHI@Z']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jge ['short', 'loc_A60']
mov ['[ebp+var_1C],', '13377C5h']
push ['offset', '__TI1H']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAUCBond@NCoderMixer2@@I@Z']
mov ['edx,', '[eax+4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsThere_ExternalCoder_in_PackTree@CMixer@NCoderMixer2@@QAE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_A86']
mov ['al,', '1']
jmp ['short', 'loc_A8D']
jmp ['loc_A01']
xor ['al,', 'al']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMixerST@NCoderMixer2@@QAE@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CMixerST@NCoderMixer2@@QAE@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IUnknown@@QAE@XZ']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CMixer@NCoderMixer2@@QAE@_N@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7CMixerST@NCoderMixer2@@6BIUnknown@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+4],', 'offset', '??_7CMixerST@NCoderMixer2@@6BCMixer@1@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??0?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??0?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CMixerST@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CMixerST@NCoderMixer2@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CMixerST@NCoderMixer2@@6BIUnknown@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CMixerST@NCoderMixer2@@6BCMixer@1@@']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??1?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??1?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1CMixer@NCoderMixer2@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AddCoder@CMixerST@NCoderMixer2@@UAEXABUCCreatedCoder@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddCoder@CMixerST@NCoderMixer2@@UAEXABUCCreatedCoder@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['?Add@?$CRecordVector@_N@@QAEI_N@Z']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['?Add@?$CRecordVector@_N@@QAEI_N@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['?AddNew@?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@ABV0@@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '4']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
call ['??4?$CMyComPtr@UICompressCoder2@@@@QAEPAUICompressCoder2@@ABV0@@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['??B?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_C92']
mov ['ecx,', '[ebp+arg_0]']
call ['??B?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
mov ['[ebp+var_34],', 'eax']
jmp ['short', 'loc_CA0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
call ['??B?$CMyComPtr@UICompressCoder2@@@@QBEPAUICompressCoder2@@XZ']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_18],', 'eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[edx]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+38h],', 'al']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2C]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ISequentialOutStream']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ecx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_2C]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+39h],', 'al']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetCoder@CMixerST@NCoderMixer2@@UAEAAVCCoder@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '68h']
call ['??A?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReInit@CMixerST@NCoderMixer2@@UAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetInStream2@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetInStream2@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0A8h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_B4]']
mov ['ecx,', '2Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+60h]']
test ['edx,', 'edx']
jz ['short', 'loc_E80']
lea ['eax,', '[ebp+var_24]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?GetCoder_for_Stream@CBindInfo@NCoderMixer2@@QBEXIAAI0@Z']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_E80']
mov ['eax,', '80004001h']
jmp ['loc_125E']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??A?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@I@Z']
mov ['[ebp+var_2C],', 'eax']
lea ['ecx,', '[ebp+var_34]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
push ['eax']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+var_2C]']
call ['?QueryInterface@CCoder@NCoderMixer2@@QBEJABU_GUID@@PAPAX@Z']
lea ['ecx,', '[ebp+var_34]']
call ['??7?$CMyComPtr@UISequentialInStream@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_EEA']
mov ['[ebp+var_8C],', '80004001h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_8C]']
jmp ['loc_125E']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+60h]']
test ['eax,', 'eax']
jz ['short', 'loc_F01']
mov ['[ebp+var_A8],', '1']
jmp ['short', 'loc_F0D']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_A8],', 'edx']
mov ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+60h]']
test ['edx,', 'edx']
jz ['short', 'loc_F2C']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_AC],', 'eax']
jmp ['short', 'loc_F43']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_AC],', 'edx']
mov ['eax,', '[ebp+var_AC]']
mov ['[ebp+var_40],', 'eax']
mov ['[ebp+var_41],', '0']
cmp ['[ebp+var_3C],', '1']
jnz ['loc_1089']
lea ['ecx,', '[ebp+var_4C]']
call ['??0?$CMyComPtr@UICompressSetInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_4C]']
call ['??I?$CMyComPtr@UICompressSetInStream@@@@QAEPAPAUICompressSetInStream@@XZ']
push ['eax']
push ['offset', '_IID_ICompressSetInStream']
mov ['ecx,', '[ebp+var_2C]']
call ['?QueryInterface@CCoder@NCoderMixer2@@QBEJABU_GUID@@PAPAX@Z']
lea ['ecx,', '[ebp+var_4C]']
call ['??B?$CMyComPtr@UICompressSetInStream@@@@QBEPAUICompressSetInStream@@XZ']
test ['eax,', 'eax']
jz ['loc_107D']
lea ['ecx,', '[ebp+var_58]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_58]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?GetInStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jz ['short', 'loc_FF5']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+var_90],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$CMyComPtr@UICompressSetInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_90]']
jmp ['loc_125E']
lea ['ecx,', '[ebp+var_4C]']
call ['??C?$CMyComPtr@UICompressSetInStream@@@@QBEPAUICompressSetInStream@@XZ']
mov ['[ebp+var_B0],', 'eax']
lea ['ecx,', '[ebp+var_58]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
mov ['edx,', '[ebp+var_B0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_64],', 'eax']
cmp ['[ebp+var_64],', '0']
jz ['short', 'loc_106D']
mov ['edx,', '[ebp+var_64]']
mov ['[ebp+var_94],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$CMyComPtr@UICompressSetInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_94]']
jmp ['loc_125E']
mov ['[ebp+var_41],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$CMyComPtr@UICompressSetInStream@@@@QAE@XZ']
movzx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jnz ['loc_1232']
cmp ['[ebp+var_3C],', '0']
jz ['loc_1232']
lea ['ecx,', '[ebp+var_6C]']
call ['??0?$CMyComPtr@UICompressSetInStream2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_6C]']
call ['??I?$CMyComPtr@UICompressSetInStream2@@@@QAEPAPAUICompressSetInStream2@@XZ']
push ['eax']
push ['offset', '_IID_ICompressSetInStream2']
mov ['ecx,', '[ebp+var_2C]']
call ['?QueryInterface@CCoder@NCoderMixer2@@QBEJABU_GUID@@PAPAX@Z']
lea ['ecx,', '[ebp+var_6C]']
call ['??7?$CMyComPtr@UICompressSetInStream2@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1100']
mov ['[ebp+var_98],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CMyComPtr@UICompressSetInStream2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_98]']
jmp ['loc_125E']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_1112']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '1']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_3C]']
jnb ['loc_1226']
lea ['ecx,', '[ebp+var_7C]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_7C]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?GetInStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z']
mov ['[ebp+var_84],', 'eax']
cmp ['[ebp+var_84],', '0']
jz ['short', 'loc_1193']
mov ['eax,', '[ebp+var_84]']
mov ['[ebp+var_9C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CMyComPtr@UICompressSetInStream2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_9C]']
jmp ['loc_125E']
lea ['ecx,', '[ebp+var_6C]']
call ['??C?$CMyComPtr@UICompressSetInStream2@@@@QBEPAUICompressSetInStream2@@XZ']
mov ['[ebp+var_B4],', 'eax']
lea ['ecx,', '[ebp+var_7C]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+var_B4]']
push ['edx']
mov ['eax,', '[ebp+var_B4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0']
jz ['short', 'loc_1215']
mov ['eax,', '[ebp+var_88]']
mov ['[ebp+var_A0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CMyComPtr@UICompressSetInStream2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_A0]']
jmp ['short', 'loc_125E']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
jmp ['loc_1109']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CMyComPtr@UICompressSetInStream2@@@@QAE@XZ']
lea ['ecx,', '[ebp+var_34]']
call ['?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_A4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_A4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN35']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '0B4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetInStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetInStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '44h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_20],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+60h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_13BF']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+2Ch]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_13BD']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_13D1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?FindStream_in_PackStreams@CBindInfo@NCoderMixer2@@QBEHI@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_1414']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
lea ['ecx,', '[ebp+var_18]']
call ['?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_34]']
jmp ['loc_15A9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['?FindBond_for_Stream@CMixer@NCoderMixer2@@IBEH_NI@Z']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jge ['short', 'loc_144C']
mov ['[ebp+var_38],', '80070057h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_38]']
jmp ['loc_15A9']
lea ['ecx,', '[ebp+var_18]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+60h]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAUCBond@NCoderMixer2@@I@Z']
mov ['ecx,', 'eax']
call ['?Get_OutIndex@CBond@NCoderMixer2@@QBEI_N@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?GetInStream2@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_14A6']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_3C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3C]']
jmp ['loc_15A9']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['?Size@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QBEIXZ']
cmp ['eax,', '[ebp+var_24]']
ja ['short', 'loc_14C3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['?AddNew@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEAAUCStBinderStream@NCoderMixer2@@XZ']
jmp ['short', 'loc_14A6']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??A?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEAAUCStBinderStream@NCoderMixer2@@I@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '8']
call ['??B?$CMyComPtr@UIUnknown@@@@QBEPAUIUnknown@@XZ']
test ['eax,', 'eax']
jnz ['short', 'loc_14EC']
mov ['ecx,', '[ebp+var_2C]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_150A']
mov ['[ebp+var_40],', '80004001h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_40]']
jmp ['loc_15A9']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_48],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_152E']
mov ['ecx,', '[ebp+var_48]']
call ['??0CSequentialInStreamCalcSize@@QAE@XZ']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_1535']
mov ['[ebp+var_50],', '0']
mov ['edx,', '[ebp+var_50]']
mov ['[ebp+var_44],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_30]']
mov ['[edx],', 'eax']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
call ['?SetStream@CSequentialInStreamCalcSize@@QAEXPAUISequentialInStream@@@Z']
mov ['ecx,', '[ebp+var_30]']
call ['?Init@CSequentialInStreamCalcSize@@QAEXXZ']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx]']
push ['edx']
lea ['ecx,', '[ebp+var_18]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
lea ['ecx,', '[ebp+var_18]']
call ['?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_4C],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetOutStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialOutStream@@IPAPAU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetOutStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialOutStream@@IPAPAU3@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0A4h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_B0]']
mov ['ecx,', '29h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_20],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+60h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1676']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+2Ch]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_1674']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_1688']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?FindStream_in_PackStreams@CBindInfo@NCoderMixer2@@QBEHI@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_16CB']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
lea ['ecx,', '[ebp+var_18]']
call ['?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
mov ['[ebp+var_7C],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_7C]']
jmp ['loc_1AA9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['?FindBond_for_Stream@CMixer@NCoderMixer2@@IBEH_NI@Z']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jge ['short', 'loc_1703']
mov ['[ebp+var_80],', '80070057h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_80]']
jmp ['loc_1AA9']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+60h]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAUCBond@NCoderMixer2@@I@Z']
mov ['ecx,', 'eax']
call ['?Get_InIndex@CBond@NCoderMixer2@@QBEI_N@Z']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_30],', 'ecx']
mov ['[ebp+var_3C],', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+60h]']
test ['eax,', 'eax']
jnz ['short', 'loc_1753']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?GetCoder_for_Stream@CBindInfo@NCoderMixer2@@QBEXIAAI0@Z']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??A?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@I@Z']
mov ['[ebp+var_44],', 'eax']
lea ['ecx,', '[ebp+var_18]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
push ['eax']
push ['offset', '_IID_ISequentialOutStream']
mov ['ecx,', '[ebp+var_44]']
call ['?QueryInterface@CCoder@NCoderMixer2@@QBEJABU_GUID@@PAPAX@Z']
lea ['ecx,', '[ebp+var_18]']
call ['??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_17AE']
mov ['[ebp+var_84],', '80004001h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_84]']
jmp ['loc_1AA9']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+60h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_17C7']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_17D1']
mov ['[ebp+var_A4],', '1']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+60h]']
test ['eax,', 'eax']
jz ['short', 'loc_17FE']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_A8],', 'edx']
jmp ['short', 'loc_1807']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_A8],', 'eax']
mov ['ecx,', '[ebp+var_A8]']
mov ['[ebp+var_4C],', 'ecx']
mov ['[ebp+var_4D],', '0']
cmp ['[ebp+var_48],', '1']
jnz ['loc_194D']
lea ['ecx,', '[ebp+var_58]']
call ['??0?$CMyComPtr@UICompressSetOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_58]']
call ['??I?$CMyComPtr@UICompressSetOutStream@@@@QAEPAPAUICompressSetOutStream@@XZ']
push ['eax']
push ['offset', '_IID_ICompressSetOutStream']
mov ['ecx,', '[ebp+var_44]']
call ['??$QueryInterface@UICompressSetOutStream@@@?$CMyComPtr@UICompressCoder@@@@QBEJABU_GUID@@PAPAUICompressSetOutStream@@@Z']
lea ['ecx,', '[ebp+var_58]']
call ['??B?$CMyComPtr@UICompressSetOutStream@@@@QBEPAUICompressSetOutStream@@XZ']
test ['eax,', 'eax']
jz ['loc_1941']
lea ['ecx,', '[ebp+var_64]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?GetOutStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialOutStream@@IPAPAU3@@Z']
mov ['[ebp+var_6C],', 'eax']
cmp ['[ebp+var_6C],', '0']
jz ['short', 'loc_18B9']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_88],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UICompressSetOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_88]']
jmp ['loc_1AA9']
lea ['ecx,', '[ebp+var_58]']
call ['??C?$CMyComPtr@UICompressSetOutStream@@@@QBEPAUICompressSetOutStream@@XZ']
mov ['[ebp+var_AC],', 'eax']
lea ['ecx,', '[ebp+var_64]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+var_AC]']
push ['edx']
mov ['eax,', '[ebp+var_AC]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_1931']
mov ['eax,', '[ebp+var_70]']
mov ['[ebp+var_8C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UICompressSetOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_8C]']
jmp ['loc_1AA9']
mov ['[ebp+var_4D],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UICompressSetOutStream@@@@QAE@XZ']
movzx ['ecx,', '[ebp+var_4D]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_197F']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_197F']
mov ['[ebp+var_90],', '80004001h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_90]']
jmp ['loc_1AA9']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['?Size@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QBEIXZ']
cmp ['eax,', '[ebp+var_24]']
ja ['short', 'loc_199C']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['?AddNew@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEAAUCStBinderStream@NCoderMixer2@@XZ']
jmp ['short', 'loc_197F']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??A?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEAAUCStBinderStream@NCoderMixer2@@I@Z']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '8']
call ['??B?$CMyComPtr@UIUnknown@@@@QBEPAUIUnknown@@XZ']
test ['eax,', 'eax']
jnz ['short', 'loc_19C6']
mov ['eax,', '[ebp+var_74]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_19EA']
mov ['[ebp+var_94],', '80004001h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_94]']
jmp ['loc_1AA9']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_9C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_9C],', '0']
jz ['short', 'loc_1A1A']
mov ['ecx,', '[ebp+var_9C]']
call ['??0COutStreamCalcSize@@QAE@XZ']
mov ['[ebp+var_B0],', 'eax']
jmp ['short', 'loc_1A24']
mov ['[ebp+var_B0],', '0']
mov ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_98],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_98]']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_78]']
mov ['[ecx+4],', 'edx']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_78]']
call ['?SetStream@COutStreamCalcSize@@QAEXPAUISequentialOutStream@@@Z']
mov ['ecx,', '[ebp+var_78]']
call ['?Init@COutStreamCalcSize@@QAEXXZ']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
lea ['ecx,', '[ebp+var_18]']
call ['?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
mov ['[ebp+var_A0],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_A0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN36']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '0B0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?FinishStream@CMixerST@NCoderMixer2@@AAEJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?FinishStream@CMixerST@NCoderMixer2@@AAEJI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '44h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+60h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1BD1']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+2Ch]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_1BCF']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1BE3']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?FindStream_in_PackStreams@CBindInfo@NCoderMixer2@@QBEHI@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_1BF0']
xor ['eax,', 'eax']
jmp ['loc_1CFE']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['?FindBond_for_Stream@CMixer@NCoderMixer2@@IBEH_NI@Z']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jge ['short', 'loc_1C14']
mov ['eax,', '80070057h']
jmp ['loc_1CFE']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+60h]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAUCBond@NCoderMixer2@@I@Z']
mov ['ecx,', 'eax']
call ['?Get_InIndex@CBond@NCoderMixer2@@QBEI_N@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_30],', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+60h]']
test ['edx,', 'edx']
jnz ['short', 'loc_1C64']
lea ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?GetCoder_for_Stream@CBindInfo@NCoderMixer2@@QBEXIAAI0@Z']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??A?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@I@Z']
mov ['[ebp+var_38],', 'eax']
lea ['ecx,', '[ebp+var_40]']
call ['??0?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??I?$CMyComPtr@UIOutStreamFinish@@@@QAEPAPAUIOutStreamFinish@@XZ']
push ['eax']
push ['offset', '_IID_IOutStreamFinish']
mov ['ecx,', '[ebp+var_38]']
call ['?QueryInterface@CCoder@NCoderMixer2@@QBEJABU_GUID@@PAPAX@Z']
mov ['[ebp+var_48],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??B?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_1CD3']
lea ['ecx,', '[ebp+var_40]']
call ['??C?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_48],', 'eax']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?FinishCoder@CMixerST@NCoderMixer2@@AAEJI@Z']
push ['eax']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['?GetError@NCoderMixer2@@YGJJJ@Z']
mov ['[ebp+var_4C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetError@NCoderMixer2@@YGJJJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_1D90']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_1DB2']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1D9B']
mov ['eax,', '[ebp+arg_4]']
jmp ['short', 'loc_1DB2']
cmp ['[ebp+arg_0],', '20000010h']
jnz ['short', 'loc_1DAF']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1DAF']
mov ['eax,', '[ebp+arg_4]']
jmp ['short', 'loc_1DB2']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn ['8']
endp
?FinishCoder@CMixerST@NCoderMixer2@@AAEJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['??A?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+60h]']
test ['edx,', 'edx']
jz ['short', 'loc_1E0E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_1E15']
mov ['[ebp+var_1C],', '1']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+60h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1E3C']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1E42']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_1E61']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_1E87']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?FinishStream@CMixerST@NCoderMixer2@@AAEJI@Z']
push ['eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?GetError@NCoderMixer2@@YGJJJ@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1E58']
mov ['eax,', '[ebp+var_14]']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SelectMainCoder@CMixerST@NCoderMixer2@@UAEX_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_C],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '68h']
call ['??A?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@I@Z']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+28h]']
jz ['short', 'loc_1F30']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1F0C']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+39h]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_1F1D']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+38h]']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_1F30']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+8],', '1']
jz ['short', 'loc_1F3E']
jmp ['loc_200D']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?IsStream_in_PackStreams@CBindInfo@NCoderMixer2@@QBE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1F6D']
jmp ['loc_200D']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?FindBond_for_PackStream@CBindInfo@NCoderMixer2@@QBEHI@Z']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jge ['short', 'loc_1F9A']
mov ['[ebp+var_20],', '13377C5h']
push ['offset', '__TI1H']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+5Ch]']
test ['eax,', 'eax']
jz ['short', 'loc_1FB8']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+38h]']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
jmp ['short', 'loc_1FC9']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+39h]']
neg ['ecx']
sbb ['ecx,', 'ecx']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_1FD1']
jmp ['short', 'loc_200D']
cmp ['[ebp+var_C],', '0FFFFFFFFh']
jnz ['short', 'loc_1FF3']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jnz ['short', 'loc_1FF3']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAUCBond@NCoderMixer2@@I@Z']
mov ['eax,', '[eax+4]']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_1ED1']
movzx ['ecx,', '[ebp+arg_0]']
test ['ecx,', 'ecx']
jz ['short', 'loc_201D']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_2029']
cmp ['[ebp+var_C],', '0']
jl ['short', 'loc_2029']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+60h],', 'edx']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '104h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_110]']
mov ['ecx,', '41h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '74h']
call ['?Clear@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEXXZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+60h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+60h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['??A?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@I@Z']
mov ['[ebp+var_18],', 'eax']
lea ['ecx,', '[ebp+var_28]']
call ['??0?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??0?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5Ch]']
test ['edx,', 'edx']
jz ['short', 'loc_20EC']
mov ['[ebp+var_E8],', '1']
jmp ['short', 'loc_20F8']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_E8]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5Ch]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2118']
mov ['[ebp+var_EC],', '1']
jmp ['short', 'loc_2124']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+5Ch]']
test ['eax,', 'eax']
jz ['short', 'loc_2143']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_F0],', 'ecx']
jmp ['short', 'loc_215A']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_F0],', 'eax']
mov ['ecx,', '[ebp+var_F0]']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+5Ch]']
test ['eax,', 'eax']
jnz ['short', 'loc_2179']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_F4],', 'ecx']
jmp ['short', 'loc_2190']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_F4],', 'eax']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_50],', 'ecx']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_21AB']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+var_44]']
jnb ['loc_2243']
lea ['ecx,', '[ebp+var_5C]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_5C]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4C]']
add ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '4']
call ['?GetInStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z']
mov ['[ebp+var_64],', 'eax']
cmp ['[ebp+var_64],', '0']
jz ['short', 'loc_2226']
mov ['eax,', '[ebp+var_64]']
mov ['[ebp+var_D4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ']
mov ['eax,', '[ebp+var_D4]']
jmp ['loc_283F']
lea ['ecx,', '[ebp+var_5C]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['?Add@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEIABV?$CMyComPtr@UISequentialInStream@@@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
jmp ['loc_21A2']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_2255']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+var_48]']
jnb ['loc_22ED']
lea ['ecx,', '[ebp+var_6C]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_6C]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '4']
call ['?GetOutStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialOutStream@@IPAPAU3@@Z']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_22D0']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_D8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ']
mov ['eax,', '[ebp+var_D8]']
jmp ['loc_283F']
lea ['ecx,', '[ebp+var_6C]']
push ['ecx']
lea ['ecx,', '[ebp+var_3C]']
call ['?Add@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEIABV?$CMyComPtr@UISequentialOutStream@@@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_224C']
lea ['ecx,', '[ebp+var_84]']
call ['??0?$CRecordVector@PAUISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_98]']
call ['??0?$CRecordVector@PAUISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_231D']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+var_44]']
jnb ['short', 'loc_2346']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_84]']
call ['?Add@?$CRecordVector@PAUISequentialInStream@@@@QAEIQAUISequentialInStream@@@Z']
jmp ['short', 'loc_2314']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_2358']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+var_48]']
jnb ['short', 'loc_2381']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
lea ['ecx,', '[ebp+var_3C]']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_98]']
call ['?Add@?$CRecordVector@PAUISequentialOutStream@@@@QAEIQAUISequentialOutStream@@@Z']
jmp ['short', 'loc_234F']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_2393']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['?Size@?$CObjectVector@UCCoderST@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_54],', 'eax']
jnb ['loc_25EC']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_23B1']
jmp ['short', 'loc_238A']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['??A?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@I@Z']
mov ['[ebp+var_A0],', 'eax']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+5Ch]']
test ['eax,', 'eax']
jz ['loc_24C3']
lea ['ecx,', '[ebp+var_A8]']
call ['??0?$CMyComPtr@UICompressInitEncoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_A8]']
call ['??I?$CMyComPtr@UICompressInitEncoder@@@@QAEPAPAUICompressInitEncoder@@XZ']
push ['eax']
push ['offset', '_IID_ICompressInitEncoder']
mov ['ecx,', '[ebp+var_A0]']
call ['?QueryInterface@CCoder@NCoderMixer2@@QBEJABU_GUID@@PAPAX@Z']
lea ['ecx,', '[ebp+var_A8]']
call ['??B?$CMyComPtr@UICompressInitEncoder@@@@QBEPAUICompressInitEncoder@@XZ']
test ['eax,', 'eax']
jz ['loc_24AF']
lea ['ecx,', '[ebp+var_A8]']
call ['??C?$CMyComPtr@UICompressInitEncoder@@@@QBEPAUICompressInitEncoder@@XZ']
mov ['[ebp+var_F8],', 'eax']
mov ['ecx,', '[ebp+var_F8]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_F8]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '0']
jz ['short', 'loc_24AF']
mov ['edx,', '[ebp+var_B0]']
mov ['[ebp+var_DC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CMyComPtr@UICompressInitEncoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_98]']
call ['??1?$CRecordVector@PAUISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1?$CRecordVector@PAUISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ']
mov ['eax,', '[ebp+var_DC]']
jmp ['loc_283F']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CMyComPtr@UICompressInitEncoder@@@@QAE@XZ']
jmp ['loc_25E7']
lea ['ecx,', '[ebp+var_B8]']
call ['??0?$CMyComPtr@UICompressSetOutStreamSize@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_B8]']
call ['??I?$CMyComPtr@UICompressSetOutStreamSize@@@@QAEPAPAUICompressSetOutStreamSize@@XZ']
push ['eax']
push ['offset', '_IID_ICompressSetOutStreamSize']
mov ['ecx,', '[ebp+var_A0]']
call ['?QueryInterface@CCoder@NCoderMixer2@@QBEJABU_GUID@@PAPAX@Z']
lea ['ecx,', '[ebp+var_B8]']
call ['??B?$CMyComPtr@UICompressSetOutStreamSize@@@@QBEPAUICompressSetOutStreamSize@@XZ']
test ['eax,', 'eax']
jz ['loc_25D8']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2526']
push ['0']
mov ['ecx,', '[ebp+var_A0]']
add ['ecx,', '28h']
call ['??A?$CRecordVector@PB_K@@QAEAAPB_KI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_FC],', 'edx']
jmp ['short', 'loc_2535']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_FC],', 'ecx']
lea ['ecx,', '[ebp+var_B8]']
call ['??C?$CMyComPtr@UICompressSetOutStreamSize@@@@QBEPAUICompressSetOutStreamSize@@XZ']
mov ['[ebp+var_100],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_FC]']
push ['edx']
mov ['eax,', '[ebp+var_100]']
push ['eax']
mov ['ecx,', '[ebp+var_100]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C0],', 'eax']
cmp ['[ebp+var_C0],', '0']
jz ['short', 'loc_25D8']
mov ['ecx,', '[ebp+var_C0]']
mov ['[ebp+var_E0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_B8]']
call ['??1?$CMyComPtr@UICompressSetOutStreamSize@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_98]']
call ['??1?$CRecordVector@PAUISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1?$CRecordVector@PAUISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ']
mov ['eax,', '[ebp+var_E0]']
jmp ['loc_283F']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_B8]']
call ['??1?$CMyComPtr@UICompressSetOutStreamSize@@@@QAE@XZ']
jmp ['loc_238A']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+5Ch]']
test ['eax,', 'eax']
jz ['short', 'loc_2605']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '18h']
mov ['[ebp+var_104],', 'ecx']
jmp ['short', 'loc_2616']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '28h']
call ['?Front@?$CRecordVector@PB_K@@QBEABQB_KXZ']
mov ['[ebp+var_104],', 'eax']
mov ['edx,', '[ebp+var_104]']
mov ['[ebp+var_C4],', 'edx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2640']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '28h']
call ['?Front@?$CRecordVector@PB_K@@QBEABQB_KXZ']
mov ['[ebp+var_108],', 'eax']
jmp ['short', 'loc_264C']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '18h']
mov ['[ebp+var_108],', 'edx']
mov ['eax,', '[ebp+var_108]']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_26CD']
mov ['ecx,', '[ebp+var_18]']
call ['??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
mov ['[ebp+var_10C],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_C8]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_C4]']
mov ['edx,', '[ecx]']
push ['edx']
push ['0']
lea ['ecx,', '[ebp+var_98]']
call ['??A?$CRecordVector@PAUISequentialOutStream@@@@QAEAAPAUISequentialOutStream@@I@Z']
mov ['eax,', '[eax]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_84]']
call ['??A?$CRecordVector@PAUISequentialInStream@@@@QAEAAPAUISequentialInStream@@I@Z']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_10C]']
push ['edx']
mov ['eax,', '[ebp+var_10C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_CC],', 'eax']
jmp ['short', 'loc_2733']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '4']
call ['??C?$CMyComPtr@UICompressCoder2@@@@QBEPAUICompressCoder2@@XZ']
mov ['[ebp+var_110],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+var_C8]']
push ['edx']
lea ['ecx,', '[ebp+var_98]']
call ['?Front@?$CRecordVector@PAUISequentialOutStream@@@@QAEAAPAUISequentialOutStream@@XZ']
push ['eax']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_C4]']
push ['ecx']
lea ['ecx,', '[ebp+var_84]']
call ['?Front@?$CRecordVector@PAUISequentialInStream@@@@QAEAAPAUISequentialInStream@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_110]']
push ['edx']
mov ['eax,', '[ebp+var_110]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_CC],', 'eax']
cmp ['[ebp+var_CC],', '20000010h']
jnz ['short', 'loc_2749']
mov ['[ebp+var_CC],', '0']
cmp ['[ebp+var_CC],', '0']
jz ['short', 'loc_275B']
cmp ['[ebp+var_CC],', '1']
jnz ['short', 'loc_277D']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '4']
call ['?FinishCoder@CMixerST@NCoderMixer2@@AAEJI@Z']
push ['eax']
mov ['ecx,', '[ebp+var_CC]']
push ['ecx']
call ['?GetError@NCoderMixer2@@YGJJJ@Z']
mov ['[ebp+var_CC],', 'eax']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_278F']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '74h']
call ['?Size@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_54],', 'eax']
jnb ['short', 'loc_27DE']
mov ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '74h']
call ['??A?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEAAUCStBinderStream@NCoderMixer2@@I@Z']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_27CE']
mov ['edx,', '[ebp+var_D0]']
mov ['ecx,', '[edx]']
call ['?ReleaseStream@CSequentialInStreamCalcSize@@QAEXXZ']
jmp ['short', 'loc_27DC']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[eax+4]']
call ['?ReleaseStream@COutStreamCalcSize@@QAEXXZ']
jmp ['short', 'loc_2786']
cmp ['[ebp+var_CC],', '20000010h']
jnz ['short', 'loc_27F4']
mov ['[ebp+var_CC],', '0']
mov ['ecx,', '[ebp+var_CC]']
mov ['[ebp+var_E4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_98]']
call ['??1?$CRecordVector@PAUISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1?$CRecordVector@PAUISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ']
mov ['eax,', '[ebp+var_E4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN70']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '110h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetMainUnpackStream@CMixerST@NCoderMixer2@@QAEJPBQAUISequentialInStream@@PAPAU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetMainUnpackStream@CMixerST@NCoderMixer2@@QAEJPBQAUISequentialInStream@@PAPAU3@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
push ['eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?GetInStream2@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_29DC']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_3C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3C]']
jmp ['loc_2AD1']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_29EE']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['?Size@?$CObjectVector@UCCoderST@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_24],', 'eax']
jnb ['loc_2AAB']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??A?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@I@Z']
mov ['[ebp+var_28],', 'eax']
lea ['ecx,', '[ebp+var_30]']
call ['??0?$CMyComPtr@UICompressSetOutStreamSize@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_30]']
call ['??I?$CMyComPtr@UICompressSetOutStreamSize@@@@QAEPAPAUICompressSetOutStreamSize@@XZ']
push ['eax']
push ['offset', '_IID_ICompressSetOutStreamSize']
mov ['ecx,', '[ebp+var_28]']
call ['?QueryInterface@CCoder@NCoderMixer2@@QBEJABU_GUID@@PAPAX@Z']
lea ['ecx,', '[ebp+var_30]']
call ['??B?$CMyComPtr@UICompressSetOutStreamSize@@@@QBEPAUICompressSetOutStreamSize@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_2A9A']
lea ['ecx,', '[ebp+var_30]']
call ['??C?$CMyComPtr@UICompressSetOutStreamSize@@@@QBEPAUICompressSetOutStreamSize@@XZ']
mov ['[ebp+var_48],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_2A9A']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_40],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UICompressSetOutStreamSize@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_40]']
jmp ['short', 'loc_2AD1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UICompressSetOutStreamSize@@@@QAE@XZ']
jmp ['loc_29E5']
lea ['ecx,', '[ebp+var_18]']
call ['?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_44],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetBondStreamSize@CMixerST@NCoderMixer2@@UBE_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['??A?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QBEABUCStBinderStream@NCoderMixer2@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_2B7D']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
call ['?GetSize@CSequentialInStreamCalcSize@@QBE_KXZ']
jmp ['short', 'loc_2B88']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['?GetSize@COutStreamCalcSize@@QBE_KXZ']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Execute@CCoderMT@NCoderMixer2@@EAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Execute@CCoderMT@NCoderMixer2@@EAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?Code@CCoderMT@NCoderMixer2@@QAEXPAUICompressProgressInfo@@@Z']
jmp ['short', 'loc_2BFE']
endp
__catch$?Execute@CCoderMT@NCoderMixer2@@EAEXXZ$0 proc near
mov ['eax,', '[ebp-14h]']
mov ['dword', 'ptr', '[eax+6Ch],', '80004005h']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN2']
retn
endp
?Code@CCoderMT@NCoderMixer2@@QAEXPAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Code@CCoderMT@NCoderMixer2@@QAEXPAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+68h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C7F']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_2C88']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+68h]']
test ['eax,', 'eax']
jz ['short', 'loc_2CA4']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_30],', 'edx']
jmp ['short', 'loc_2CAB']
mov ['[ebp+var_30],', '1']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['?ClearAndReserve@?$CRecordVector@PAUISequentialInStream@@@@QAEXI@Z']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '5Ch']
call ['?ClearAndReserve@?$CRecordVector@PAUISequentialOutStream@@@@QAEXI@Z']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_2CE1']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['short', 'loc_2D0D']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['?AddInReserved@?$CRecordVector@PAUISequentialInStream@@@@QAEXQAUISequentialInStream@@@Z']
jmp ['short', 'loc_2CD8']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_2D1F']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_18]']
jnb ['short', 'loc_2D4B']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '5Ch']
call ['?AddInReserved@?$CRecordVector@PAUISequentialOutStream@@@@QAEXQAUISequentialOutStream@@@Z']
jmp ['short', 'loc_2D16']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??0CReleaser@CCoderMT@NCoderMixer2@@QAE@AAV12@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??B?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
test ['eax,', 'eax']
jz ['loc_2E1D']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+68h]']
test ['edx,', 'edx']
jz ['short', 'loc_2D90']
push ['0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??A?$CRecordVector@PB_K@@QAEAAPB_KI@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_34],', 'eax']
jmp ['short', 'loc_2D99']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+30h]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+68h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2DAF']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+30h]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_2DC1']
push ['0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??A?$CRecordVector@PB_K@@QAEAAPB_KI@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_38],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
mov ['[ebp+var_3C],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '5Ch']
call ['??A?$CRecordVector@PAUISequentialOutStream@@@@QAEAAPAUISequentialOutStream@@I@Z']
mov ['edx,', '[eax]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['??A?$CRecordVector@PAUISequentialInStream@@@@QAEAAPAUISequentialInStream@@I@Z']
mov ['eax,', '[eax]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+6Ch],', 'eax']
jmp ['loc_2EBC']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+68h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2E38']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['?Front@?$CRecordVector@PB_K@@QAEAAPB_KXZ']
mov ['[ebp+var_40],', 'eax']
jmp ['short', 'loc_2E41']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '30h']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+68h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2E57']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '30h']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_2E65']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['?Front@?$CRecordVector@PB_K@@QAEAAPB_KXZ']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??C?$CMyComPtr@UICompressCoder2@@@@QBEPAUICompressCoder2@@XZ']
mov ['[ebp+var_48],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '5Ch']
call ['?Front@?$CRecordVector@PAUISequentialOutStream@@@@QAEAAPAUISequentialOutStream@@XZ']
push ['eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['?Front@?$CRecordVector@PAUISequentialInStream@@@@QAEAAPAUISequentialInStream@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+6Ch],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1CReleaser@CCoderMT@NCoderMixer2@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetBindInfo@CMixerMT@NCoderMixer2@@UAEJABUCBindInfo@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetBindInfo@CMixer@NCoderMixer2@@UAEJABUCBindInfo@2@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '68h']
call ['?Clear@?$CObjectVector@VCStreamBinder@@@@QAEXXZ']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2F67']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?Size@?$CRecordVector@UCBond@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_2F99']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '68h']
call ['?AddNew@?$CObjectVector@VCStreamBinder@@@@QAEAAVCStreamBinder@@XZ']
mov ['ecx,', 'eax']
call ['?CreateEvents@CStreamBinder@@QAEIXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2F97']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_2F9B']
jmp ['short', 'loc_2F5E']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddCoder@CMixerMT@NCoderMixer2@@UAEXABUCCreatedCoder@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
call ['?Add@?$CRecordVector@_N@@QAEI_N@Z']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
call ['?Add@?$CRecordVector@_N@@QAEI_N@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['?AddNew@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+20h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '18h']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@ABV0@@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '4']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1Ch']
call ['??4?$CMyComPtr@UICompressCoder2@@@@QAEPAUICompressCoder2@@ABV0@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ecx+5Ch]']
mov ['[eax+68h],', 'dl']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetCoder@CMixerMT@NCoderMixer2@@UAEAAVCCoder@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3091']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '18h']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_3098']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReInit@CMixerMT@NCoderMixer2@@UAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_30D9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '68h']
call ['?Size@?$CObjectVector@VCStreamBinder@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_3101']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '68h']
call ['??A?$CObjectVector@VCStreamBinder@@@@QAEAAVCStreamBinder@@I@Z']
mov ['ecx,', 'eax']
call ['?ReInit@CStreamBinder@@QAEXXZ']
jmp ['short', 'loc_30D0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SelectMainCoder@CMixerMT@NCoderMixer2@@UAEX_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_8],', 'ecx']
movzx ['edx,', '[ebp+arg_0]']
test ['edx,', 'edx']
jnz ['loc_31E7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
cmp ['dword', 'ptr', '[eax+20h],', '1']
jz ['short', 'loc_315C']
jmp ['loc_31E7']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jnz ['short', 'loc_3174']
jmp ['short', 'loc_31E7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?IsStream_in_PackStreams@CBindInfo@NCoderMixer2@@QBE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_31A0']
jmp ['short', 'loc_31E7']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?FindBond_for_PackStream@CBindInfo@NCoderMixer2@@QBEHI@Z']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jge ['short', 'loc_31CD']
mov ['[ebp+var_14],', '13377C5h']
push ['offset', '__TI1H']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAUCBond@NCoderMixer2@@I@Z']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
jmp ['loc_3142']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+60h],', 'eax']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CMixerMT@NCoderMixer2@@AAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Init@CMixerMT@NCoderMixer2@@AAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0A4h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_B0]']
mov ['ecx,', '29h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_3253']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['?Size@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['loc_334A']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??A?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAEAAUCCoderStreamsInfo@NCoderMixer2@@I@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+60h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_32A2']
mov ['[ebp+var_94],', '1']
jmp ['short', 'loc_32AD']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_94],', 'eax']
mov ['ecx,', '[ebp+var_94]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+60h]']
test ['eax,', 'eax']
jz ['short', 'loc_32CE']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_98],', 'edx']
jmp ['short', 'loc_32D8']
mov ['[ebp+var_98],', '1']
mov ['eax,', '[ebp+var_98]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['?Clear@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEXXZ']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_32FE']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_24]']
jnb ['short', 'loc_3313']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@XZ']
jmp ['short', 'loc_32F5']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '7Ch']
call ['?Clear@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEXXZ']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_3330']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_28]']
jnb ['short', 'loc_3345']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '7Ch']
call ['?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@XZ']
jmp ['short', 'loc_3327']
jmp ['loc_324A']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_335C']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['?Size@?$CRecordVector@UCBond@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['loc_35B3']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAUCBond@NCoderMixer2@@I@Z']
mov ['[ebp+var_2C],', 'eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
lea ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?GetCoder_for_Stream@CBindInfo@NCoderMixer2@@QBEXIAAI0@Z']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+60h]']
test ['eax,', 'eax']
jz ['short', 'loc_33B4']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_9C],', 'edx']
jmp ['short', 'loc_33BD']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_9C],', 'eax']
mov ['ecx,', '[ebp+var_9C]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+60h]']
test ['eax,', 'eax']
jz ['short', 'loc_33DC']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_A0],', 'ecx']
jmp ['short', 'loc_33E8']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_A0],', 'eax']
mov ['ecx,', '[ebp+var_A0]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+60h]']
test ['eax,', 'eax']
jz ['short', 'loc_3408']
mov ['[ebp+var_A4],', '0']
jmp ['short', 'loc_3411']
mov ['ecx,', '[ebp+var_50]']
mov ['[ebp+var_A4],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+60h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3430']
mov ['edx,', '[ebp+var_50]']
mov ['[ebp+var_A8],', 'edx']
jmp ['short', 'loc_343A']
mov ['[ebp+var_A8],', '0']
mov ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
add ['eax,', '7Ch']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
push ['eax']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
add ['eax,', '70h']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??A?$CObjectVector@VCStreamBinder@@@@QAEAAVCStreamBinder@@I@Z']
mov ['ecx,', 'eax']
call ['?CreateStreams@CStreamBinder@@QAEXPAPAUISequentialInStream@@PAPAUISequentialOutStream@@@Z']
lea ['ecx,', '[ebp+var_5C]']
call ['??0?$CMyComPtr@UICompressSetBufSize@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_68]']
call ['??0?$CMyComPtr@UICompressSetBufSize@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_5C]']
call ['??I?$CMyComPtr@UICompressSetBufSize@@@@QAEPAPAUICompressSetBufSize@@XZ']
push ['eax']
push ['offset', '_IID_ICompressSetBufSize']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
add ['eax,', '18h']
mov ['ecx,', 'eax']
call ['?QueryInterface@CCoder@NCoderMixer2@@QBEJABU_GUID@@PAPAX@Z']
lea ['ecx,', '[ebp+var_68]']
call ['??I?$CMyComPtr@UICompressSetBufSize@@@@QAEPAPAUICompressSetBufSize@@XZ']
push ['eax']
push ['offset', '_IID_ICompressSetBufSize']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
add ['eax,', '18h']
mov ['ecx,', 'eax']
call ['?QueryInterface@CCoder@NCoderMixer2@@QBEJABU_GUID@@PAPAX@Z']
lea ['ecx,', '[ebp+var_5C]']
call ['??B?$CMyComPtr@UICompressSetBufSize@@@@QBEPAUICompressSetBufSize@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_3593']
lea ['ecx,', '[ebp+var_68]']
call ['??B?$CMyComPtr@UICompressSetBufSize@@@@QBEPAUICompressSetBufSize@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_3593']
mov ['[ebp+var_70],', '80000h']
lea ['ecx,', '[ebp+var_5C]']
call ['??C?$CMyComPtr@UICompressSetBufSize@@@@QBEPAUICompressSetBufSize@@XZ']
mov ['[ebp+var_AC],', 'eax']
mov ['esi,', 'esp']
push ['80000h']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_AC]']
push ['eax']
mov ['ecx,', '[ebp+var_AC]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_68]']
call ['??C?$CMyComPtr@UICompressSetBufSize@@@@QBEPAUICompressSetBufSize@@XZ']
mov ['[ebp+var_B0],', 'eax']
mov ['esi,', 'esp']
push ['80000h']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_B0]']
push ['edx']
mov ['eax,', '[ebp+var_B0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UICompressSetBufSize@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CMyComPtr@UICompressSetBufSize@@@@QAE@XZ']
jmp ['loc_3353']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
mov ['[ebp+var_74],', 'eax']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+60h]']
test ['eax,', 'eax']
jz ['short', 'loc_35EF']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '70h']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
jmp ['short', 'loc_3609']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '7Ch']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_361B']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['loc_36CA']
lea ['eax,', '[ebp+var_88]']
push ['eax']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?GetCoder_for_Stream@CBindInfo@NCoderMixer2@@QBEXIAAI0@Z']
mov ['ecx,', '[ebp+var_7C]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
mov ['[ebp+var_90],', 'eax']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+60h]']
test ['eax,', 'eax']
jz ['short', 'loc_369F']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_88]']
push ['ecx']
mov ['ecx,', '[ebp+var_90]']
add ['ecx,', '7Ch']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
jmp ['short', 'loc_36C5']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+var_88]']
push ['edx']
mov ['ecx,', '[ebp+var_90]']
add ['ecx,', '70h']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
jmp ['loc_3612']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN45']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '0B0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReturnIfError@CMixerMT@NCoderMixer2@@AAEJJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_37C9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '78h']
call ['?Size@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_37F7']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '78h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
mov ['edx,', '[eax+6Ch]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_37F5']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_37F9']
jmp ['short', 'loc_37C0']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Code@CMixerMT@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '4']
call ['?Init@CMixerMT@NCoderMixer2@@AAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@@Z']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_385B']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['?Size@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_389F']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+60h]']
jz ['short', 'loc_389D']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
mov ['ecx,', 'eax']
call ['?Create@CVirtThread@@QAEIXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_389D']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_3A4E']
jmp ['short', 'loc_3852']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_38B1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['?Size@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_38E4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+60h]']
jz ['short', 'loc_38E2']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
mov ['ecx,', 'eax']
call ['?Start@CVirtThread@@QAEXXZ']
jmp ['short', 'loc_38A8']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+60h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
mov ['ecx,', 'eax']
call ['?Code@CCoderMT@NCoderMixer2@@QAEXPAUICompressProgressInfo@@@Z']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3913']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['?Size@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_3946']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+60h]']
jz ['short', 'loc_3944']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
mov ['ecx,', 'eax']
call ['?WaitExecuteFinish@CVirtThread@@QAEXXZ']
jmp ['short', 'loc_390A']
push ['80004004h']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '4']
call ['?ReturnIfError@CMixerMT@NCoderMixer2@@AAEJJ@Z']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_3967']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_3A4E']
push ['8007000Eh']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '4']
call ['?ReturnIfError@CMixerMT@NCoderMixer2@@AAEJJ@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3988']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_3A4E']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_399A']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['?Size@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_39E4']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
mov ['ecx,', '[eax+6Ch]']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_39E2']
cmp ['[ebp+var_18],', '20000010h']
jz ['short', 'loc_39E2']
cmp ['[ebp+var_18],', '1']
jz ['short', 'loc_39E2']
cmp ['[ebp+var_18],', '80004005h']
jz ['short', 'loc_39E2']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_3A4E']
jmp ['short', 'loc_3991']
push ['1']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '4']
call ['?ReturnIfError@CMixerMT@NCoderMixer2@@AAEJJ@Z']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_39FF']
mov ['eax,', '[ebp+var_1C]']
jmp ['short', 'loc_3A4E']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3A11']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['?Size@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_3A4C']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z']
mov ['ecx,', '[eax+6Ch]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_3A4A']
cmp ['[ebp+var_20],', '20000010h']
jz ['short', 'loc_3A4A']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_3A4E']
jmp ['short', 'loc_3A08']
xor ['eax,', 'eax']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetBondStreamSize@CMixerMT@NCoderMixer2@@UBE_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '68h']
call ['??A?$CObjectVector@VCStreamBinder@@@@QBEABVCStreamBinder@@I@Z']
mov ['ecx,', 'eax']
mov ['eax,', '[ecx+18h]']
mov ['edx,', '[ecx+1Ch]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?FindBond_for_PackStream@CBindInfo@NCoderMixer2@@QBEHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3AC9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCBond@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_3AF6']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QBEABUCBond@NCoderMixer2@@I@Z']
mov ['edx,', '[eax]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_3AF4']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_3AF9']
jmp ['short', 'loc_3AC0']
or ['eax,', '0FFFFFFFFh']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsStream_in_PackStreams@CBindInfo@NCoderMixer2@@QBE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?FindStream_in_PackStreams@CBindInfo@NCoderMixer2@@QBEHI@Z']
xor ['ecx,', 'ecx']
test ['eax,', 'eax']
setnl ['cl']
mov ['al,', 'cl']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?FindStream_in_PackStreams@CBindInfo@NCoderMixer2@@QBEHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3B69']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_3B96']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??A?$CRecordVector@I@@QBEABII@Z']
mov ['edx,', '[eax]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_3B94']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_3B99']
jmp ['short', 'loc_3B60']
or ['eax,', '0FFFFFFFFh']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?CalcMapsAndCheck@CBindInfo@NCoderMixer2@@QAE_NXZ$0 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1CBondsChecks@NCoderMixer2@@QAE@XZ']
endp
__ehhandler$?CalcMapsAndCheck@CBindInfo@NCoderMixer2@@QAE_NXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CalcMapsAndCheck@CBindInfo@NCoderMixer2@@QAE_NXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0CMixerST@NCoderMixer2@@QAE@_N@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CMixer@NCoderMixer2@@QAE@XZ']
endp
__unwindfunclet$??0CMixerST@NCoderMixer2@@QAE@_N@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '6Ch']
jmp ['??1?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAE@XZ']
endp
__ehhandler$??0CMixerST@NCoderMixer2@@QAE@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CMixerST@NCoderMixer2@@QAE@_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1CMixerST@NCoderMixer2@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CMixer@NCoderMixer2@@QAE@XZ']
endp
__unwindfunclet$??1CMixerST@NCoderMixer2@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '6Ch']
jmp ['??1?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAE@XZ']
endp
__ehhandler$??1CMixerST@NCoderMixer2@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CMixerST@NCoderMixer2@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?AddCoder@CMixerST@NCoderMixer2@@UAEXABUCCreatedCoder@@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?AddCoder@CMixerST@NCoderMixer2@@UAEXABUCCreatedCoder@@@Z$1 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__ehhandler$?AddCoder@CMixerST@NCoderMixer2@@UAEXABUCCreatedCoder@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-34h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddCoder@CMixerST@NCoderMixer2@@UAEXABUCCreatedCoder@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetInStream2@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z$0 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?GetInStream2@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z$1 proc near
lea ['ecx,', '[ebp-4Ch]']
jmp ['??1?$CMyComPtr@UICompressSetInStream@@@@QAE@XZ']
endp
__unwindfunclet$?GetInStream2@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z$2 proc near
lea ['ecx,', '[ebp-58h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?GetInStream2@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z$3 proc near
lea ['ecx,', '[ebp-6Ch]']
jmp ['??1?$CMyComPtr@UICompressSetInStream2@@@@QAE@XZ']
endp
__unwindfunclet$?GetInStream2@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z$4 proc near
lea ['ecx,', '[ebp-7Ch]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$?GetInStream2@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0B4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetInStream2@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetInStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?GetInStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z$1 proc near
mov ['eax,', '[ebp-48h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?GetInStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetInStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialInStream@@IPAPAU3@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetOutStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialOutStream@@IPAPAU3@@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?GetOutStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialOutStream@@IPAPAU3@@Z$1 proc near
lea ['ecx,', '[ebp-58h]']
jmp ['??1?$CMyComPtr@UICompressSetOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?GetOutStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialOutStream@@IPAPAU3@@Z$2 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?GetOutStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialOutStream@@IPAPAU3@@Z$3 proc near
mov ['eax,', '[ebp-9Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?GetOutStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialOutStream@@IPAPAU3@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0B0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetOutStream@CMixerST@NCoderMixer2@@AAEJPBQAUISequentialOutStream@@IPAPAU3@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?FinishStream@CMixerST@NCoderMixer2@@AAEJI@Z$0 proc near
lea ['ecx,', '[ebp-40h]']
jmp ['??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ']
endp
__ehhandler$?FinishStream@CMixerST@NCoderMixer2@@AAEJI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-50h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?FinishStream@CMixerST@NCoderMixer2@@AAEJI@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$0 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ']
endp
__unwindfunclet$?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$1 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ']
endp
__unwindfunclet$?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$2 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$3 proc near
lea ['ecx,', '[ebp-6Ch]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$4 proc near
lea ['ecx,', '[ebp-84h]']
jmp ['??1?$CRecordVector@PAUISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$5 proc near
lea ['ecx,', '[ebp-98h]']
jmp ['??1?$CRecordVector@PAUISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$6 proc near
lea ['ecx,', '[ebp-0A8h]']
jmp ['??1?$CMyComPtr@UICompressInitEncoder@@@@QAE@XZ']
endp
__unwindfunclet$?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$7 proc near
lea ['ecx,', '[ebp-0B8h]']
jmp ['??1?$CMyComPtr@UICompressSetOutStreamSize@@@@QAE@XZ']
endp
__ehhandler$?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-110h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Code@CMixerST@NCoderMixer2@@UAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetMainUnpackStream@CMixerST@NCoderMixer2@@QAEJPBQAUISequentialInStream@@PAPAU3@@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?GetMainUnpackStream@CMixerST@NCoderMixer2@@QAEJPBQAUISequentialInStream@@PAPAU3@@Z$1 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1?$CMyComPtr@UICompressSetOutStreamSize@@@@QAE@XZ']
endp
__ehhandler$?GetMainUnpackStream@CMixerST@NCoderMixer2@@QAEJPBQAUISequentialInStream@@PAPAU3@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-48h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetMainUnpackStream@CMixerST@NCoderMixer2@@QAEJPBQAUISequentialInStream@@PAPAU3@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Execute@CCoderMT@NCoderMixer2@@EAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Execute@CCoderMT@NCoderMixer2@@EAEXXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Code@CCoderMT@NCoderMixer2@@QAEXPAUICompressProgressInfo@@@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1CReleaser@CCoderMT@NCoderMixer2@@QAE@XZ']
endp
__ehhandler$?Code@CCoderMT@NCoderMixer2@@QAEXPAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-48h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Code@CCoderMT@NCoderMixer2@@QAEXPAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Init@CMixerMT@NCoderMixer2@@AAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@@Z$0 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1?$CMyComPtr@UICompressSetBufSize@@@@QAE@XZ']
endp
__unwindfunclet$?Init@CMixerMT@NCoderMixer2@@AAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@@Z$1 proc near
lea ['ecx,', '[ebp-68h]']
jmp ['??1?$CMyComPtr@UICompressSetBufSize@@@@QAE@XZ']
endp
__ehhandler$?Init@CMixerMT@NCoderMixer2@@AAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0B0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Init@CMixerMT@NCoderMixer2@@AAEJPBQAUISequentialInStream@@PBQAUISequentialOutStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
?GetNum_Bonds_and_PackStreams@CBindInfo@NCoderMixer2@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCBond@NCoderMixer2@@@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
add ['eax,', 'esi']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBondsChecks@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBondsChecks@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?FindBond_for_UnpackStream@CBindInfo@NCoderMixer2@@QBEHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_422D']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCBond@NCoderMixer2@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_425B']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCBond@NCoderMixer2@@@@QBEABUCBond@NCoderMixer2@@I@Z']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_4259']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_425E']
jmp ['short', 'loc_4224']
or ['eax,', '0FFFFFFFFh']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMixer@NCoderMixer2@@QAE@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CMixer@NCoderMixer2@@QAE@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CMixer@NCoderMixer2@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CBindInfo@NCoderMixer2@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+5Ch],', 'dl']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+60h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CMixer@NCoderMixer2@@QAE@_N@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CBindInfo@NCoderMixer2@@QAE@XZ']
endp
__unwindfunclet$??0CMixer@NCoderMixer2@@QAE@_N@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??0CMixer@NCoderMixer2@@QAE@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CMixer@NCoderMixer2@@QAE@_N@Z']
jmp ['___CxxFrameHandler3']
endp
?SetBindInfo@CMixer@NCoderMixer2@@UAEJABUCBindInfo@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??4CBindInfo@NCoderMixer2@@QAEAAU01@ABU01@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
call ['?Clear@?$CRecordVector@_N@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+60h],', '0']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CBindInfo@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CBindInfo@NCoderMixer2@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CBindInfo@NCoderMixer2@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ']
endp
__unwindfunclet$??0CBindInfo@NCoderMixer2@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ']
endp
__unwindfunclet$??0CBindInfo@NCoderMixer2@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__unwindfunclet$??0CBindInfo@NCoderMixer2@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??0CBindInfo@NCoderMixer2@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CBindInfo@NCoderMixer2@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CBindInfo@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CBindInfo@NCoderMixer2@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??1CBindInfo@NCoderMixer2@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CBindInfo@NCoderMixer2@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??4CBindInfo@NCoderMixer2@@QAEAAU01@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??4?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '18h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??4?$CRecordVector@I@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '28h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??4?$CRecordVector@I@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '34h']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['??4?$CRecordVector@I@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?QueryInterface@CMixerST@NCoderMixer2@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_48E4']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_48EB']
mov ['eax,', '80004002h']
jmp ['short', 'loc_48FC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+68h]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+68h],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CMixerST@NCoderMixer2@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+68h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+68h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CMixerST@NCoderMixer2@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+68h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+68h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_49B2']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+68h]']
jmp ['short', 'loc_49DC']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_49D3']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCMixerST@NCoderMixer2@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_49DA']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetCoderInfo@CMixerST@NCoderMixer2@@UAEXIPB_KPBQB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '68h']
call ['??A?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@I@Z']
mov ['ecx,', 'eax']
call ['?SetCoderInfo@CCoder@NCoderMixer2@@QAEXPB_KPBQB_K@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??_GCMixerST@NCoderMixer2@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMixerST@NCoderMixer2@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4A52']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMixer@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CMixer@NCoderMixer2@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1CBindInfo@NCoderMixer2@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CMixer@NCoderMixer2@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CBindInfo@NCoderMixer2@@QAE@XZ']
endp
__unwindfunclet$??1CMixer@NCoderMixer2@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??1CMixer@NCoderMixer2@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CMixer@NCoderMixer2@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?GetCoder_for_Stream@CBindInfo@NCoderMixer2@@QBEXIAAI0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['??A?$CRecordVector@I@@QBEABII@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??A?$CRecordVector@I@@QBEABII@Z']
mov ['edx,', '[ebp+arg_0]']
sub ['edx,', '[eax]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?QueryInterface@CCoder@NCoderMixer2@@QBEJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetUnknown@CCoder@NCoderMixer2@@QBEPAUIUnknown@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetUnknown@CCoder@NCoderMixer2@@QBEPAUIUnknown@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??B?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_4C38']
mov ['ecx,', '[ebp+var_4]']
call ['??B?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4C46']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??B?$CMyComPtr@UICompressCoder2@@@@QBEPAUICompressCoder2@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@CSequentialInStreamCalcSize@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CSequentialInStreamCalcSize@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+18h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Get_OutIndex@CBond@NCoderMixer2@@QBEI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jz ['short', 'loc_4CDD']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_4CE6']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?FindBond_for_Stream@CMixer@NCoderMixer2@@IBEH_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5Ch]']
movzx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_4D20']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?FindBond_for_UnpackStream@CBindInfo@NCoderMixer2@@QBEHI@Z']
jmp ['short', 'loc_4D2F']
jmp ['short', 'loc_4D2F']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?FindBond_for_PackStream@CBindInfo@NCoderMixer2@@QBEHI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CSequentialInStreamCalcSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CSequentialInStreamCalcSize@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CSequentialInStreamCalcSize@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4EBC']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4EDF']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4ED8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4EDF']
mov ['eax,', '80004002h']
jmp ['short', 'loc_4EF0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CSequentialInStreamCalcSize@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CSequentialInStreamCalcSize@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4F62']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_4F8C']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_4F83']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCSequentialInStreamCalcSize@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_4F8A']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCSequentialInStreamCalcSize@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CSequentialInStreamCalcSize@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4FC6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CSequentialInStreamCalcSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@COutStreamCalcSize@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@COutStreamCalcSize@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Get_InIndex@CBond@NCoderMixer2@@QBEI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jz ['short', 'loc_50DA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_50E2']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0COutStreamCalcSize@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0IOutStreamFinish@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COutStreamCalcSize@@6BISequentialOutStream@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7COutStreamCalcSize@@6BIOutStreamFinish@@@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@COutStreamCalcSize@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5358']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_53AF']
push ['offset', '_IID_ISequentialOutStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5374']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_53AF']
push ['offset', '_IID_IOutStreamFinish']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_53A8']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_5397']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_539E']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_53AF']
mov ['eax,', '80004002h']
jmp ['short', 'loc_53C0']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+8],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@COutStreamCalcSize@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@COutStreamCalcSize@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_5436']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
jmp ['short', 'loc_5460']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_5457']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCOutStreamCalcSize@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_545E']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCOutStreamCalcSize@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutStreamCalcSize@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_549A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1COutStreamCalcSize@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IOutStreamFinish@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutStreamFinish@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReleaseStream@CSequentialInStreamCalcSize@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReleaseStream@COutStreamCalcSize@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetSize@CSequentialInStreamCalcSize@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+10h]']
mov ['edx,', '[ecx+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetSize@COutStreamCalcSize@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+10h]']
mov ['edx,', '[ecx+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CReleaser@CCoderMT@NCoderMixer2@@QAE@AAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CReleaser@CCoderMT@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
call ['?Release@CCoderMT@NCoderMixer2@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@CCoderMT@NCoderMixer2@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
call ['?Clear@?$CRecordVector@PAUISequentialInStream@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '5Ch']
call ['?Clear@?$CRecordVector@PAUISequentialOutStream@@@@QAEXXZ']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_5697']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '70h']
call ['?Size@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_56BF']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '70h']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
jmp ['short', 'loc_568E']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_56D1']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7Ch']
call ['?Size@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_56F9']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7Ch']
call ['??A?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@I@Z']
mov ['ecx,', 'eax']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
jmp ['short', 'loc_56C8']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WaitExecuteFinish@CVirtThread@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_Handle_WaitObject@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CMyComPtr@UICompressCoder2@@@@QBEPAUICompressCoder2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressCoder2@@@@QBEPAUICompressCoder2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UICompressCoder2@@@@QAEPAUICompressCoder2@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UICompressCoder2@@@@QAEPAUICompressCoder2@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5862']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_58AF']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5934']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_5957']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UISequentialInStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5A16']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5A63']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5AE8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_5B0B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_5C2A']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_5CCE']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jbe ['short', 'loc_5CA1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5CCB']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QBEABUCCoderStreamsInfo@NCoderMixer2@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAEAAUCCoderStreamsInfo@NCoderMixer2@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCBond@NCoderMixer2@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_5DD2']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_5E76']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@UCBond@NCoderMixer2@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jbe ['short', 'loc_5E49']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5E73']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@UCBond@NCoderMixer2@@@@QBEABUCBond@NCoderMixer2@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@UCBond@NCoderMixer2@@@@QAEAAUCBond@NCoderMixer2@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@I@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@I@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CRecordVector@I@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_5F96']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_603A']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jbe ['short', 'loc_600D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6037']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@I@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@I@@QBEABII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@I@@QAEAAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ClearAndSetSize@?$CRecordVector@_K@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@_K@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@_K@@QAEAA_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ClearAndSetSize@?$CRecordVector@PB_K@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@PB_K@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PB_K@@QAEAAPB_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Front@?$CRecordVector@PB_K@@QBEABQB_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Front@?$CRecordVector@PB_K@@QAEAAPB_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_N@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@_N@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@_N@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@_N@@QAEI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@_N@@QAEAA_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CMyComPtr@UIUnknown@@@@QBEPAUIUnknown@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6354']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_6377']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCCoderST@NCoderMixer2@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNew@?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['40h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_646F']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CCoderST@NCoderMixer2@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_6476']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAEAAUCCoderST@NCoderMixer2@@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CCoderST@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CCoder@NCoderMixer2@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+38h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+39h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCoder@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCoder@NCoderMixer2@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$CMyComPtr@UICompressCoder2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0?$CRecordVector@PB_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CCoder@NCoderMixer2@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
endp
__unwindfunclet$??0CCoder@NCoderMixer2@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$CMyComPtr@UICompressCoder2@@@@QAE@XZ']
endp
__unwindfunclet$??0CCoder@NCoderMixer2@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__ehhandler$??0CCoder@NCoderMixer2@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCoder@NCoderMixer2@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6692']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressCoder2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressCoder2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_66F6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PB_K@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_683E']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_6835']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCCoderST@NCoderMixer2@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_683C']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_67FA']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCCoderST@NCoderMixer2@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QBEABUCStBinderStream@NCoderMixer2@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEAAUCStBinderStream@NCoderMixer2@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNew@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEAAUCStBinderStream@NCoderMixer2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEAAUCStBinderStream@NCoderMixer2@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_69BF']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CStBinderStream@NCoderMixer2@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_69C6']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEAAUCStBinderStream@NCoderMixer2@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEAAUCStBinderStream@NCoderMixer2@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEAAUCStBinderStream@NCoderMixer2@@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CStBinderStream@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UIUnknown@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_6B4A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_6B41']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCStBinderStream@NCoderMixer2@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_6B48']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_6B06']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@UCStBinderStream@NCoderMixer2@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6C30']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_6C27']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCStBinderStream@NCoderMixer2@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_6C2E']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_6BEC']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAUISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CRecordVector@PAUISequentialInStream@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAUISequentialInStream@@@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_6D04']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@PAUISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PAUISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAUISequentialInStream@@@@QAEIQAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAUISequentialInStream@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CRecordVector@PAUISequentialInStream@@@@QAEXQAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAUISequentialInStream@@@@QAEAAPAUISequentialInStream@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Front@?$CRecordVector@PAUISequentialInStream@@@@QAEAAPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAUISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CRecordVector@PAUISequentialOutStream@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAUISequentialOutStream@@@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_6EF0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@PAUISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PAUISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAUISequentialOutStream@@@@QAEIQAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAUISequentialOutStream@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CRecordVector@PAUISequentialOutStream@@@@QAEXQAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAUISequentialOutStream@@@@QAEAAPAUISequentialOutStream@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Front@?$CRecordVector@PAUISequentialOutStream@@@@QAEAAPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEIABV?$CMyComPtr@UISequentialInStream@@@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['4']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_70DA']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@ABV0@@Z']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_70E1']
mov ['[ebp+var_C],', '0']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['4']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_7163']
mov ['ecx,', '[ebp+var_1C]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_716A']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEAAV?$CMyComPtr@UISequentialInStream@@@@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_728E']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_7285']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_G?$CMyComPtr@UISequentialInStream@@@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_728C']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_724A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7374']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_736B']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_G?$CMyComPtr@UISequentialInStream@@@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_7372']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_7330']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEIABV?$CMyComPtr@UISequentialOutStream@@@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['4']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7446']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@ABV0@@Z']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_744D']
mov ['[ebp+var_C],', '0']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['4']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_74CF']
mov ['ecx,', '[ebp+var_1C]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_74D6']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEAAV?$CMyComPtr@UISequentialOutStream@@@@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_75FA']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_75F1']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_G?$CMyComPtr@UISequentialOutStream@@@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_75F8']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_75B6']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_76E0']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_76D7']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_G?$CMyComPtr@UISequentialOutStream@@@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_76DE']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_769C']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@VCStreamBinder@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VCStreamBinder@@@@QBEABVCStreamBinder@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VCStreamBinder@@@@QAEAAVCStreamBinder@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNew@?$CObjectVector@VCStreamBinder@@@@QAEAAVCStreamBinder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@VCStreamBinder@@@@QAEAAVCStreamBinder@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_77D7']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CStreamBinder@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_77DE']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@VCStreamBinder@@@@QAEAAVCStreamBinder@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@VCStreamBinder@@@@QAEAAVCStreamBinder@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@VCStreamBinder@@@@QAEAAVCStreamBinder@@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@VCStreamBinder@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_78DC']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_78D3']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCStreamBinder@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_78DA']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_7898']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNew@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['88h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_79AA']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CCoderMT@NCoderMixer2@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_79B1']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@VCCoderMT@NCoderMixer2@@@@QAEAAVCCoderMT@NCoderMixer2@@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CCoderMT@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCoderMT@NCoderMixer2@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0CCoder@NCoderMixer2@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['??0CVirtThread@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCoderMT@NCoderMixer2@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['??0?$CRecordVector@PAUISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '5Ch']
call ['??0?$CRecordVector@PAUISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+68h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??0?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??0?$CObjectVector@V?$CMyComPtr@UISequentialOutStream@@@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CCoderMT@NCoderMixer2@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1CCoder@NCoderMixer2@@QAE@XZ']
endp
__unwindfunclet$??0CCoderMT@NCoderMixer2@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CVirtThread@@QAE@XZ']
endp
__unwindfunclet$??0CCoderMT@NCoderMixer2@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '50h']
jmp ['??1?$CRecordVector@PAUISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CCoderMT@NCoderMixer2@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '5Ch']
jmp ['??1?$CRecordVector@PAUISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CCoderMT@NCoderMixer2@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '70h']
jmp ['??1?$CObjectVector@V?$CMyComPtr@UISequentialInStream@@@@@@QAE@XZ']
endp
__ehhandler$??0CCoderMT@NCoderMixer2@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCoderMT@NCoderMixer2@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CVirtThread@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CVirtThread@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CVirtThread@@6B@']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
call ['?WaitThreadFinish@CVirtThread@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1CThread@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CVirtThread@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CVirtThread@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CVirtThread@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CThread@NWindows@@QAE@XZ']
endp
__ehhandler$??1CVirtThread@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CVirtThread@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CThread@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CThread@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CThread@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCoder@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCoder@NCoderMixer2@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CRecordVector@PB_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$CMyComPtr@UICompressCoder2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCoder@NCoderMixer2@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
endp
__unwindfunclet$??1CCoder@NCoderMixer2@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$CMyComPtr@UICompressCoder2@@@@QAE@XZ']
endp
__unwindfunclet$??1CCoder@NCoderMixer2@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__ehhandler$??1CCoder@NCoderMixer2@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCoder@NCoderMixer2@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CVirtThread@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CVirtThread@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CVirtThread@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CThread@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CVirtThread@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CVirtThread@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??0CVirtThread@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CVirtThread@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CThread@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PB_K@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_819A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIOutStreamFinish@@@@QAEPAPAUIOutStreamFinish@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressSetInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressSetInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8246']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressSetInStream@@@@QBEPAUICompressSetInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressSetInStream@@@@QAEPAPAUICompressSetInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressSetInStream@@@@QBEPAUICompressSetInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressSetInStream2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressSetInStream2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_82F2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressSetInStream2@@@@QAEPAPAUICompressSetInStream2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressSetInStream2@@@@QBEPAUICompressSetInStream2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UICompressSetInStream2@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressSetOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressSetOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_83A6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressSetOutStream@@@@QBEPAUICompressSetOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressSetOutStream@@@@QAEPAPAUICompressSetOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressSetOutStream@@@@QBEPAUICompressSetOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressInitEncoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressInitEncoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8452']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressInitEncoder@@@@QBEPAUICompressInitEncoder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressInitEncoder@@@@QAEPAPAUICompressInitEncoder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressInitEncoder@@@@QBEPAUICompressInitEncoder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressSetOutStreamSize@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressSetOutStreamSize@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_84FE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressSetOutStreamSize@@@@QBEPAUICompressSetOutStreamSize@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressSetOutStreamSize@@@@QAEPAPAUICompressSetOutStreamSize@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressSetOutStreamSize@@@@QBEPAUICompressSetOutStreamSize@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressSetBufSize@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressSetBufSize@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_85AA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressSetBufSize@@@@QBEPAUICompressSetBufSize@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressSetBufSize@@@@QAEPAPAUICompressSetBufSize@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressSetBufSize@@@@QBEPAUICompressSetBufSize@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCCoderST@NCoderMixer2@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCoderST@NCoderMixer2@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_862E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCStBinderStream@NCoderMixer2@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CStBinderStream@NCoderMixer2@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_866E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G?$CMyComPtr@UISequentialInStream@@@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_86AE']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G?$CMyComPtr@UISequentialOutStream@@@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_86EE']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CStreamBinder@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CStreamBinder@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CStreamBinder@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CStreamBinder@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??0CStreamBinder@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CStreamBinder@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??_GCStreamBinder@@QAEPAXI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CStreamBinder@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_880E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCoderST@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCoder@NCoderMixer2@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CStBinderStream@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_88A2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CStreamBinder@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CStreamBinder@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CStreamBinder@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CStreamBinder@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??1CStreamBinder@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CStreamBinder@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_8B48']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_8B6B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UICompressCoder2@@@@QAEPAUICompressCoder2@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_8BB4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_8BD7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8C30']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8C80']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_8D48']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_8D23']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CRecordVector@_K@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@_K@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_8DE0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ClearAndReserve@?$CRecordVector@PB_K@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PB_K@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_8E78']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_8F25']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_8F00']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CRecordVector@_N@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@_N@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_8FAC']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@PAUISequentialInStream@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_9070']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_904B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveOnePosition@?$CRecordVector@PAUISequentialOutStream@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_9134']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_910F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_91F8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_91D3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@_K@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PB_K@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$QueryInterface@UIOutStreamFinish@@@?$CMyComPtr@UISequentialOutStream@@@@QBEJABU_GUID@@PAPAUIOutStreamFinish@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$QueryInterface@UICompressSetOutStream@@@?$CMyComPtr@UICompressCoder@@@@QBEJABU_GUID@@PAPAUICompressSetOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Release@COutStreamCalcSize@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?Release@COutStreamCalcSize@@UAGKXZ']
endp
?AddRef@COutStreamCalcSize@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@COutStreamCalcSize@@UAGKXZ']
endp
?QueryInterface@COutStreamCalcSize@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@COutStreamCalcSize@@UAGJABU_GUID@@PAPAX@Z']
endp

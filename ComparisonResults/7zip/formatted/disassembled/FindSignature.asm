?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '70h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_7C]']
mov ['ecx,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CBuffer@E@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+Size]']
push ['edx']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_95']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_60],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_60]']
jmp ['loc_345']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_D0']
mov ['[ebp+var_64],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_64]']
jmp ['loc_345']
mov ['[ebp+var_24],', '10000h']
push ['10000h']
lea ['ecx,', '[ebp+var_30]']
call ['??0?$CBuffer@E@@QAE@I@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_30]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+Size]']
sub ['ecx,', '1']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
add ['eax,', '1']
push ['eax']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[ecx],', '1']
mov ['dword', 'ptr', '[ecx+4],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_180']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_78],', 'edx']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_78]']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ecx+4]']
cmp ['eax,', '[edx+4]']
jb ['short', 'loc_180']
ja ['short', 'loc_156']
mov ['ecx,', '[ebp+var_78]']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx]']
jbe ['short', 'loc_180']
mov ['[ebp+var_68],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_68]']
jmp ['loc_345']
mov ['ecx,', '10000h']
sub ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_40],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_1E3']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_6C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_6C]']
jmp ['loc_345']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_3C],', 'ecx']
cmp ['[ebp+var_48],', '0']
jnz ['short', 'loc_21C']
mov ['[ebp+var_70],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_70]']
jmp ['loc_345']
mov ['edx,', '[ebp+var_3C]']
cmp ['edx,', '[ebp+Size]']
jb ['loc_180']
mov ['eax,', '[ebp+var_3C]']
sub ['eax,', '[ebp+Size]']
add ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
mov ['[ebp+var_58],', '0']
jmp ['short', 'loc_246']
mov ['ecx,', '[ebp+var_58]']
add ['ecx,', '1']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[ebp+var_58]']
cmp ['edx,', '[ebp+var_54]']
jnb ['loc_2E6']
mov ['eax,', '[ebp+Buf2]']
mov ['cl,', '[eax]']
mov ['[ebp+var_59],', 'cl']
jmp ['short', 'loc_265']
mov ['edx,', '[ebp+var_58]']
add ['edx,', '1']
mov ['[ebp+var_58],', 'edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+var_58]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_59]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_280']
mov ['eax,', '[ebp+var_58]']
cmp ['eax,', '[ebp+var_54]']
jnb ['short', 'loc_280']
jmp ['short', 'loc_25C']
mov ['ecx,', '[ebp+var_58]']
cmp ['ecx,', '[ebp+var_54]']
jnz ['short', 'loc_28A']
jmp ['short', 'loc_2E6']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_58]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_2E1']
mov ['edx,', '[ebp+var_58]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_10]']
add ['edx,', '[ecx]']
adc ['eax,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx],', 'edx']
mov ['[ecx+4],', 'eax']
mov ['[ebp+var_74],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_74]']
jmp ['short', 'loc_345']
jmp ['loc_23D']
mov ['edx,', '[ebp+var_54]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_10]']
add ['edx,', '[ecx]']
adc ['eax,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx],', 'edx']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_3C]']
sub ['edx,', '[ebp+var_54]']
mov ['[ebp+var_3C],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_128']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CBuffer@E@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN30']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '7Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
__unwindfunclet$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__unwindfunclet$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z$1 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-7Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$CBuffer@E@@QAE@I@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QAEPAEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

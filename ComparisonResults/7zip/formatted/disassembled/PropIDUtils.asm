?ConvertWinAttribToString@@YGXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_639']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '10h']
jge ['short', 'loc_66D']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
shl ['edx,', 'cl']
and ['edx,', '[ebp+arg_4]']
jz ['short', 'loc_66B']
cmp ['[ebp+var_4],', '7']
jz ['short', 'loc_66B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '_g_WinAttribChars[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_630']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_4]']
shr ['edx,', '10h']
test ['edx,', 'edx']
jz ['short', 'loc_69C']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax],', '20h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
shr ['edx,', '10h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?ConvertPosixAttribToString@@YGXPADI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ConvertPosixAttribToString@@YGXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '0Ch']
and ['eax,', '0Fh']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '_kPosixTypes[eax]']
mov ['[ecx],', 'dl']
mov ['[ebp+var_4],', '6']
jmp ['short', 'loc_6DD']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jl ['short', 'loc_75D']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['edx,', '[ebp+arg_4]']
neg ['edx']
sbb ['dl,', 'dl']
and ['dl,', '45h']
add ['dl,', '2Dh']
mov ['eax,', '7']
sub ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['edx,', '[ebp+arg_4]']
neg ['edx']
sbb ['dl,', 'dl']
and ['dl,', '4Ah']
add ['dl,', '2Dh']
mov ['eax,', '8']
sub ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
shl ['edx,', 'cl']
and ['edx,', '[ebp+arg_4]']
neg ['edx']
sbb ['dl,', 'dl']
and ['dl,', '4Bh']
add ['dl,', '2Dh']
mov ['eax,', '9']
sub ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
jmp ['loc_6D4']
mov ['edx,', '[ebp+arg_4]']
and ['edx,', '800h']
jz ['short', 'loc_77C']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '40h']
neg ['eax']
sbb ['al,', 'al']
and ['al,', '20h']
add ['al,', '53h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+arg_4]']
and ['edx,', '400h']
jz ['short', 'loc_79B']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '8']
neg ['eax']
sbb ['al,', 'al']
and ['al,', '20h']
add ['al,', '53h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+6],', 'al']
mov ['edx,', '[ebp+arg_4]']
and ['edx,', '200h']
jz ['short', 'loc_7BA']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1']
neg ['eax']
sbb ['al,', 'al']
and ['al,', '20h']
add ['al,', '54h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+9],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+0Ah],', '0']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFF0000h']
mov ['[ebp+arg_4],', 'eax']
jz ['short', 'loc_7E5']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+0Ah],', '20h']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0Bh']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?ConvertUInt32ToHex8Digits@@YGXIPAD@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ConvertPropertyToShortString@@YGXPADABUtagPROPVARIANT@@K_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Str]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '40h']
jnz ['short', 'loc_872']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_836']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jz ['short', 'loc_854']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+LocalFileTime]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__FileTimeToLocalFileTime@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_859']
jmp ['loc_9D8']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+Str]']
push ['edx']
lea ['eax,', '[ebp+LocalFileTime]']
push ['eax']
call ['?ConvertFileTimeToString@@YG_NABU_FILETIME@@PAD_N2@Z']
jmp ['loc_9D8']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
sub ['edx,', '9']
mov ['[ebp+var_30],', 'edx']
cmp ['[ebp+var_30],', '52h']
ja ['$LN11']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'ds:$LN19[eax]']
jmp ['ds:$LN24[ecx*4]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '13h']
jz ['short', 'loc_8AC']
jmp ['$LN11']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['?ConvertUInt32ToHex8Digits@@YGXIPAD@Z']
jmp ['loc_9D8']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '13h']
jz ['short', 'loc_8D1']
jmp ['$LN11']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?ConvertWinAttribToString@@YGXPADI@Z']
jmp ['loc_9D8']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '13h']
jz ['short', 'loc_8FC']
jmp ['$LN11']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['?ConvertPosixAttribToString@@YGXPADI@Z']
jmp ['loc_9D8']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '15h']
jz ['short', 'loc_921']
jmp ['$LN11']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+8]']
mov ['edx,', '[ecx+0Ch]']
mov ['cl,', '30h']
call ['__aullshr']
push ['eax']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+Str]']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+Str]']
mov ['byte', 'ptr', '[eax],', '2Dh']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '1']
mov ['[ebp+Str],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[edx+0Ch]']
and ['ecx,', '0FFFFh']
mov ['dword', 'ptr', '[ebp+var_1C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_1C+4],', 'ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_1C+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_1C]']
push ['ecx']
call ['?ConvertUInt64ToString@@YGX_KPAD@Z']
jmp ['short', 'loc_9D8']
mov ['dword', 'ptr', '[ebp+var_28],', '0']
mov ['dword', 'ptr', '[ebp+var_28+4],', '0']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?ConvertPropVariantToUInt64@@YG_NABUtagPROPVARIANT@@AA_K@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', '$LN11']
mov ['edx,', '[ebp+Str]']
mov ['byte', 'ptr', '[edx],', '30h']
mov ['eax,', '[ebp+Str]']
mov ['byte', 'ptr', '[eax+1],', '78h']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
call ['?ConvertUInt64ToHex@@YGX_KPAD@Z']
jmp ['short', 'loc_9D8']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?ConvertPropVariantToShortString@@YGXABUtagPROPVARIANT@@PAD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?ConvertPropertyToString@@YGXAAVUString@@ABUtagPROPVARIANT@@K_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4Ch']
push ['edi']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '8']
jnz ['short', 'loc_AD8']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?SetFromBstr@UString@@QAEXPA_W@Z']
jmp ['short', 'loc_AFA']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['?ConvertPropertyToShortString@@YGXPADABUtagPROPVARIANT@@K_N@Z']
lea ['edx,', '[ebp+var_48]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?SetFromAscii@UString@@QAEXPBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?ConvertNtSecureToString@@YGXPBEIAAVAString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
call ['?Empty@AString@@QAEXXZ']
cmp ['[ebp+arg_4],', '14h']
jb ['short', 'loc_B66']
cmp ['[ebp+arg_4],', '40000h']
jbe ['short', 'loc_B78']
push ['offset', '$SG68035']
mov ['ecx,', '[ebp+arg_8]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['loc_C1A']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '1']
jz ['short', 'loc_B95']
push ['offset', '$SG68039']
mov ['ecx,', '[ebp+arg_8]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['loc_C1A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?ParseOwner@@YGXAAVAString@@PBEII@Z']
push ['20h']
mov ['ecx,', '[ebp+arg_8]']
call ['??YAString@@QAEAAV0@D@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['?ParseOwner@@YGXAAVAString@@PBEII@Z']
push ['0Ch']
push ['10h']
push ['offset', '$SG68044']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['?ParseAcl@@YGXAAVAString@@PBEIPBDII@Z']
push ['10h']
push ['4']
push ['offset', '$SG68045']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['?ParseAcl@@YGXAAVAString@@PBEIPBDII@Z']
push ['20h']
mov ['ecx,', '[ebp+arg_8]']
call ['??YAString@@QAEAAV0@D@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?AddUInt32ToString@@YGXAAVAString@@I@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?ParseOwner@@YGXAAVAString@@PBEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+arg_8]']
jbe ['short', 'loc_C5E']
push ['offset', '$SG67998']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['short', 'loc_C80']
mov ['[ebp+var_8],', '0']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ParseSid@@YGXAAVAString@@PBEIAAI@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?ParseSid@@YGXAAVAString@@PBEIAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_8],', '8']
jnb ['short', 'loc_D0E']
push ['offset', '$SG67930']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['loc_FB5']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '1']
jz ['short', 'loc_D2F']
push ['offset', '$SG67933']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['loc_FB5']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
lea ['eax,', 'ds:8[edx*4]']
cmp ['eax,', '[ebp+arg_8]']
jbe ['short', 'loc_D5A']
push ['offset', '$SG67936']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['loc_FB5']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', 'ds:8[ecx*4]']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
bswap ['edx']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jnz ['loc_EF7']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
test ['eax,', 'eax']
jnz ['loc_EF7']
cmp ['[ebp+var_10],', '5']
jnz ['loc_EF7']
cmp ['[ebp+var_C],', '1']
jb ['loc_EF7']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '16h']
jnb ['short', 'loc_DCD']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '_sidNames[eax*4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['loc_FB5']
cmp ['[ebp+var_14],', '20h']
jnz ['short', 'loc_E23']
cmp ['[ebp+var_C],', '2']
jnz ['short', 'loc_E23']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_DF4']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '16h']
jnb ['short', 'loc_E23']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '_sid_32_Names[edx*8]']
cmp ['eax,', '[ebp+var_18]']
jnz ['short', 'loc_E21']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', 'off_374[ecx*8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['loc_FB5']
jmp ['short', 'loc_DEB']
cmp ['[ebp+var_14],', '15h']
jnz ['short', 'loc_E79']
cmp ['[ebp+var_C],', '5']
jnz ['short', 'loc_E79']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_E4A']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '0Fh']
jnb ['short', 'loc_E79']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '_sid_21_Names[eax*8]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_E77']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', 'off_534[edx*8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['loc_FB5']
jmp ['short', 'loc_E41']
cmp ['[ebp+var_14],', '50h']
jnz ['short', 'loc_EF7']
cmp ['[ebp+var_C],', '6']
jnz ['short', 'loc_EF7']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_E97']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_28],', '1']
jnb ['short', 'loc_EF7']
mov ['edx,', '[ebp+var_28]']
imul ['edx,', '18h']
add ['edx,', 'offset', '_services_to_name']
mov ['[ebp+var_2C],', 'edx']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_EBE']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '5']
jge ['short', 'loc_EDB']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_30]']
mov ['esi,', '[ebp+arg_4]']
mov ['ecx,', '[edx+ecx*4]']
cmp ['ecx,', '[esi+eax*4+0Ch]']
jnz ['short', 'loc_EDB']
jmp ['short', 'loc_EB5']
cmp ['[ebp+var_30],', '5']
jnz ['short', 'loc_EF5']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['loc_FB5']
jmp ['short', 'loc_E8E']
push ['offset', '$SG67977']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
test ['edx,', 'edx']
jnz ['short', 'loc_F35']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_F35']
lea ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['short', 'loc_F6F']
push ['offset', '$SG67980']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
mov ['[ebp+var_4C],', '2']
jmp ['short', 'loc_F54']
mov ['edx,', '[ebp+var_4C]']
add ['edx,', '1']
mov ['[ebp+var_4C],', 'edx']
cmp ['[ebp+var_4C],', '8']
jge ['short', 'loc_F6F']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_4C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?AddHexToString@@YGXAAVAString@@I@Z']
jmp ['short', 'loc_F4B']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_F81']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_FB5']
push ['2Dh']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@D@Z']
lea ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4+8]']
push ['edx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
lea ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['short', 'loc_F78']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN36']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?AddHexToString@@YGXAAVAString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '4']
push ['eax']
call ['?GetHex@@YGII@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@D@Z']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '0Fh']
push ['ecx']
call ['?GetHex@@YGII@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@D@Z']
push ['20h']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@D@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?GetHex@@YGII@Z proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0Ah']
jnb ['short', 'loc_1068']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '30h']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_1071']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '37h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddUInt32ToString@@YGXAAVAString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ParseAcl@@YGXAAVAString@@PBEIPBDII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
and ['edx,', '[ebp+var_4]']
jnz ['short', 'loc_113B']
jmp ['short', 'loc_11A3']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
push ['20h']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@D@Z']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_8]']
jb ['short', 'loc_1166']
jmp ['short', 'loc_11A3']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_8]']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_8],', '8']
jnb ['short', 'loc_1180']
jmp ['short', 'loc_11A3']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2']
jz ['short', 'loc_118D']
jmp ['short', 'loc_11A3']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?AddUInt32ToString@@YGXAAVAString@@I@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?CheckNtSecure@@YG_NPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '14h']
jnb ['short', 'loc_11CC']
xor ['al,', 'al']
jmp ['loc_1263']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '1']
jz ['short', 'loc_11DE']
mov ['al,', '1']
jmp ['loc_1263']
cmp ['[ebp+arg_4],', '40000h']
jbe ['short', 'loc_11EB']
xor ['al,', 'al']
jmp ['short', 'loc_1263']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?CheckSid@@YG_NPBEII@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_120A']
xor ['al,', 'al']
jmp ['short', 'loc_1263']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?CheckSid@@YG_NPBEII@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1229']
xor ['al,', 'al']
jmp ['short', 'loc_1263']
push ['0Ch']
push ['10h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?CheckAcl@@YG_NPBEIII@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1245']
xor ['al,', 'al']
jmp ['short', 'loc_1263']
push ['10h']
push ['4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?CheckAcl@@YG_NPBEIII@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1261']
xor ['al,', 'al']
jmp ['short', 'loc_1263']
mov ['al,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?CheckSid@@YG_NPBEII@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_4]']
jb ['short', 'loc_129C']
xor ['al,', 'al']
jmp ['short', 'loc_12E4']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'ecx']
cmp ['[ebp+arg_4],', '8']
jnb ['short', 'loc_12AF']
xor ['al,', 'al']
jmp ['short', 'loc_12E4']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_12C5']
xor ['al,', 'al']
jmp ['short', 'loc_12E4']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', 'ds:8[eax*4]']
cmp ['[ebp+arg_4],', 'ecx']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?CheckAcl@@YG_NPBEIII@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '[ebp+var_4]']
jnz ['short', 'loc_131D']
mov ['al,', '1']
jmp ['short', 'loc_1365']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_4]']
jb ['short', 'loc_1334']
xor ['al,', 'al']
jmp ['short', 'loc_1365']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+var_8]']
mov ['[ebp+arg_4],', 'ecx']
cmp ['[ebp+arg_4],', '8']
jnb ['short', 'loc_1350']
xor ['al,', 'al']
jmp ['short', 'loc_1365']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
cmp ['[ebp+arg_4],', 'ecx']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?ConvertNtReparseToString@@YG_NPBEIAAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ConvertNtReparseToString@@YG_NPBEIAAVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '70h']
push ['edi']
lea ['edi,', '[ebp+var_7C]']
mov ['ecx,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?Empty@UString@@QAEXXZ']
lea ['ecx,', '[ebp+var_34]']
call ['??0CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_34]']
call ['?Parse@CReparseAttr@NFile@NWindows@@QAE_NPBEI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_1466']
lea ['ecx,', '[ebp+var_34]']
call ['?IsSymLink@CReparseAttr@NFile@NWindows@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_13F2']
push ['offset', '$SG68099']
mov ['ecx,', '[ebp+arg_8]']
call ['?AddAscii@UString@@QAEXPBD@Z']
lea ['ecx,', '[ebp+var_6C]']
push ['ecx']
lea ['ecx,', '[ebp+var_34]']
call ['?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ']
mov ['[ebp+var_78],', 'eax']
mov ['edx,', '[ebp+var_78]']
mov ['[ebp+var_7C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_6C]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_34]']
call ['?IsOkNamePair@CReparseAttr@NFile@NWindows@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_144B']
push ['offset', '$SG68102']
mov ['ecx,', '[ebp+arg_8]']
call ['?AddAscii@UString@@QAEXPBD@Z']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
mov ['[ebp+var_6D],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_6D]']
jmp ['loc_157A']
cmp ['[ebp+arg_4],', '8']
jnb ['short', 'loc_1487']
mov ['[ebp+var_6E],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_6E]']
jmp ['loc_157A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+4]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '8']
cmp ['ecx,', '[ebp+arg_4]']
jbe ['short', 'loc_14BF']
mov ['[ebp+var_6F],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_6F]']
jmp ['loc_157A']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+6]']
test ['eax,', 'eax']
jz ['short', 'loc_14E5']
mov ['[ebp+var_70],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_70]']
jmp ['loc_157A']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
call ['?ConvertUInt32ToHex8Digits@@YGXIPAD@Z']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?AddAscii@UString@@QAEXPBD@Z']
mov ['ecx,', '[ebp+arg_8]']
call ['?Add_Space@UString@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
mov ['[ebp+arg_0],', 'ecx']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_1521']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_40]']
jnb ['short', 'loc_1564']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_5C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_60]']
shr ['eax,', '4']
and ['eax,', '0Fh']
push ['eax']
call ['?GetHex@@YGII@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??YUString@@QAEAAV0@_W@Z']
mov ['ecx,', '[ebp+var_60]']
and ['ecx,', '0Fh']
push ['ecx']
call ['?GetHex@@YGII@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??YUString@@QAEAAV0@_W@Z']
jmp ['short', 'loc_1518']
mov ['[ebp+var_71],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_71]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '7Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ConvertPropVariantToUInt64@@YG_NABUtagPROPVARIANT@@AA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '15h']
ja ['short', '$LN1']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'ds:$LN11_0[edx]']
jmp ['ds:$LN12[eax*4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[edx+0Ch]']
mov ['[ecx+4],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_1686']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['[eax+4],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_1686']
mov ['ecx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[ecx+8]']
cdq
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['[ecx+4],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_1686']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
cdq
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['[ecx+4],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_1686']
xor ['al,', 'al']
jmp ['short', 'loc_1686']
mov ['[ebp+var_4],', '24E9Fh']
push ['offset', '__TI1H']
lea ['edx,', '[ebp+var_4]']
push ['edx']
call ['__CxxThrowException@8']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Empty@AString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YAString@@QAEAAV0@D@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_1760']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@AString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?ConvertNtReparseToString@@YG_NPBEIAAVUString@@@Z$0 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1CReparseAttr@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?ConvertNtReparseToString@@YG_NPBEIAAVUString@@@Z$1 proc near
lea ['ecx,', '[ebp-6Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ConvertNtReparseToString@@YG_NPBEIAAVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-78h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ConvertNtReparseToString@@YG_NPBEIAAVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YUString@@QAEAAV0@_W@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_18B0']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+eax*2],', 'dx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CReparseAttr@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CReparseAttr@NFile@NWindows@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CReparseAttr@NFile@NWindows@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CReparseAttr@NFile@NWindows@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?IsSymLink@CReparseAttr@NFile@NWindows@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0A000000Ch']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CReparseAttr@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CReparseAttr@NFile@NWindows@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CReparseAttr@NFile@NWindows@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CReparseAttr@NFile@NWindows@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp

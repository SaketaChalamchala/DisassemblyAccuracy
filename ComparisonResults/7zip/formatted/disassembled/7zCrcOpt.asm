@CrcUpdateT4@16 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_3C']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_6A']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '3']
jz ['short', 'loc_6A']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
xor ['edx,', '[ebp+var_4]']
and ['edx,', '0FFh']
mov ['eax,', '[ebp+var_4]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_4]']
xor ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2A']
jmp ['short', 'loc_7E']
mov ['edx,', '[ebp+arg_0]']
sub ['edx,', '4']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+arg_0],', '4']
jb ['short', 'loc_DE']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_4]']
xor ['edx,', '[ecx]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '8']
and ['ecx,', '0FFh']
mov ['edx,', '[ebp+arg_4]']
mov ['esi,', '[ebp+arg_4]']
mov ['eax,', '[edx+eax*4+0C00h]']
xor ['eax,', '[esi+ecx*4+800h]']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '10h']
and ['ecx,', '0FFh']
mov ['edx,', '[ebp+arg_4]']
xor ['eax,', '[edx+ecx*4+400h]']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '18h']
mov ['edx,', '[ebp+arg_4]']
xor ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_6C']
jmp ['short', 'loc_F2']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_117']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
xor ['eax,', '[ebp+var_4]']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '8']
mov ['edx,', '[ebp+arg_4]']
xor ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_E0']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
@CrcUpdateT8@16 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_168']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_196']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '7']
jz ['short', 'loc_196']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
xor ['edx,', '[ebp+var_4]']
and ['edx,', '0FFh']
mov ['eax,', '[ebp+var_4]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_4]']
xor ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_156']
jmp ['short', 'loc_1AA']
mov ['edx,', '[ebp+arg_0]']
sub ['edx,', '8']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+arg_0],', '8']
jb ['loc_26D']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_4]']
xor ['edx,', '[ecx]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '8']
and ['ecx,', '0FFh']
mov ['edx,', '[ebp+arg_4]']
mov ['esi,', '[ebp+arg_4]']
mov ['eax,', '[edx+eax*4+1C00h]']
xor ['eax,', '[esi+ecx*4+1800h]']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '10h']
and ['ecx,', '0FFh']
mov ['edx,', '[ebp+arg_4]']
xor ['eax,', '[edx+ecx*4+1400h]']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '18h']
mov ['edx,', '[ebp+arg_4]']
xor ['eax,', '[edx+ecx*4+1000h]']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
and ['edx,', '0FFh']
mov ['eax,', '[ebp+var_10]']
shr ['eax,', '8']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+arg_4]']
mov ['esi,', '[ebp+arg_4]']
mov ['edx,', '[ecx+edx*4+0C00h]']
xor ['edx,', '[esi+eax*4+800h]']
mov ['eax,', '[ebp+var_10]']
shr ['eax,', '10h']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+arg_4]']
xor ['edx,', '[ecx+eax*4+400h]']
mov ['eax,', '[ebp+var_10]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+arg_4]']
xor ['edx,', '[ecx+eax*4]']
xor ['edx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'edx']
jmp ['loc_198']
jmp ['short', 'loc_281']
mov ['edx,', '[ebp+arg_0]']
sub ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_2A7']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
xor ['edx,', '[ebp+var_4]']
and ['edx,', '0FFh']
mov ['eax,', '[ebp+var_4]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_4]']
xor ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_26F']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

_ARM_Convert@16 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_4],', '4']
jnb ['short', 'loc_28']
xor ['eax,', 'eax']
jmp ['loc_FD']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '8']
mov ['[ebp+arg_8],', 'ecx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_4C']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+arg_4]']
ja ['loc_FA']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
cmp ['edx,', '0EBh']
jnz ['loc_F5']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
or ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '2']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_B5']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_C3']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_8]']
mov ['[ecx],', 'dl']
jmp ['loc_43']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
_ARMT_Convert@16 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_4],', '4']
jnb ['short', 'loc_138']
xor ['eax,', 'eax']
jmp ['loc_26B']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '4']
mov ['[ebp+arg_8],', 'ecx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_15C']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '2']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+arg_4]']
ja ['loc_268']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
and ['edx,', '0F8h']
cmp ['edx,', '0F0h']
jnz ['loc_263']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
and ['ecx,', '0F8h']
cmp ['ecx,', '0F8h']
jnz ['loc_263']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
and ['eax,', '7']
shl ['eax,', '13h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
shl ['edx,', '0Bh']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
and ['edx,', '7']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
or ['eax,', 'edx']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
shl ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1FB']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_209']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', 'edx']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
shr ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '13h']
and ['edx,', '7']
or ['edx,', '0F0h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_8]']
shr ['ecx,', '0Bh']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_8]']
shr ['eax,', '8']
and ['eax,', '7']
or ['eax,', '0F8h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['[edx+2],', 'al']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
jmp ['loc_153']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
_PPC_Convert@16 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_4],', '4']
jnb ['short', 'loc_2A8']
xor ['eax,', 'eax']
jmp ['loc_3C1']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_2C3']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_4]']
ja ['loc_3BE']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sar ['ecx,', '2']
cmp ['ecx,', '12h']
jnz ['loc_3B9']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
and ['eax,', '3']
cmp ['eax,', '1']
jnz ['loc_3B9']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
and ['edx,', '3']
shl ['edx,', '18h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
and ['ecx,', '0FFFFFFFCh']
or ['edx,', 'ecx']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_34D']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_35B']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '18h']
and ['edx,', '3']
or ['edx,', '48h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_C]']
shr ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_C]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
and ['eax,', '3']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
or ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['[ecx+3],', 'al']
jmp ['loc_2BA']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
_SPARC_Convert@16 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_4],', '4']
jnb ['short', 'loc_3F8']
xor ['eax,', 'eax']
jmp ['loc_541']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_413']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_4]']
ja ['loc_53E']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '40h']
jnz ['short', 'loc_43E']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
and ['eax,', '0C0h']
jz ['short', 'loc_46C']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '7Fh']
jnz ['loc_539']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
and ['ecx,', '0C0h']
cmp ['ecx,', '0C0h']
jnz ['loc_539']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
shl ['edx,', '10h']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
or ['eax,', 'edx']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_4C2']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_4D0']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', 'edx']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
shr ['ecx,', '2']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '16h']
and ['edx,', '1']
xor ['eax,', 'eax']
sub ['eax,', 'edx']
shl ['eax,', '16h']
and ['eax,', '3FFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '3FFFFFh']
or ['eax,', 'ecx']
or ['eax,', '40000000h']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '18h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_C]']
shr ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_C]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[edx+3],', 'al']
jmp ['loc_40A']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp

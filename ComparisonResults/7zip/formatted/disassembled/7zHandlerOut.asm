?GetFileTimeType@CHandler@N7z@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?PropsMethod_To_FullMethod@CHandler@N7z@NArchive@@AAEJAAUCMethodFull@23@ABVCOneMethodInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '0Ch']
push ['edx']
call ['?FindMethod@@YG_NABVAString@@AA_KAAI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_A6']
mov ['eax,', '80070057h']
jmp ['short', 'loc_B4']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??4CProps@@QAEAAU0@ABU0@@Z']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetHeaderMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetHeaderMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '38h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7Ah]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_11C']
xor ['eax,', 'eax']
jmp ['loc_1AC']
lea ['ecx,', '[ebp+var_38]']
call ['??0COneMethodInfo@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['edx,', 'ds:_k_LZMA_Name']
push ['edx']
lea ['ecx,', '[ebp+var_2C]']
call ['??4AString@@QAEAAV0@PBD@Z']
mov ['eax,', 'ds:_k_MatchFinder_ForHeaders']
push ['eax']
push ['9']
lea ['ecx,', '[ebp+var_38]']
call ['?AddProp_Ascii@CProps@@QAEXKPBD@Z']
push ['5']
lea ['ecx,', '[ebp+var_38]']
call ['?AddProp_Level@CMethodProps@@QAEXI@Z']
push ['111h']
push ['8']
lea ['ecx,', '[ebp+var_38]']
call ['?AddProp32@CProps@@QAEXKI@Z']
push ['100000h']
push ['1']
lea ['ecx,', '[ebp+var_38]']
call ['?AddProp32@CProps@@QAEXKI@Z']
push ['1']
lea ['ecx,', '[ebp+var_38]']
call ['?AddProp_NumThreads@CMethodProps@@QAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?AddNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@XZ']
mov ['[ebp+var_40],', 'eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?PropsMethod_To_FullMethod@CHandler@N7z@NArchive@@AAEJAAUCMethodFull@23@ABVCOneMethodInfo@@@Z']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_38]']
call ['??1COneMethodInfo@@QAE@XZ']
mov ['eax,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetMainMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetMainMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '7Ch']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_88]']
mov ['ecx,', '1Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1D8h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['??4?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$CObjectVector@VCOneMethodInfo@@@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_279']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
lea ['ecx,', '[ebp+var_20]']
call ['?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ']
cmp ['[ebp+var_28],', 'eax']
jnb ['short', 'loc_2B8']
mov ['eax,', '[ebp+var_28]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??A?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@I@Z']
add ['eax,', '0Ch']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2B6']
mov ['edx,', 'ds:_kDefaultMethodName']
push ['edx']
mov ['ecx,', '[ebp+var_2C]']
call ['??4AString@@QAEAAV0@PBD@Z']
jmp ['short', 'loc_270']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEmpty@?$CObjectVector@VCOneMethodInfo@@@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_30B']
lea ['ecx,', '[ebp+var_20]']
call ['?AddNew@?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@XZ']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['?GetLevel@CMultiMethodProps@NArchive@@QBEHXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_2EC']
mov ['ecx,', 'ds:_k_Copy_Name']
mov ['[ebp+var_6C],', 'ecx']
jmp ['short', 'loc_2F5']
mov ['edx,', 'ds:_kDefaultMethodName']
mov ['[ebp+var_6C],', 'edx']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '0Ch']
call ['??4AString@@QAEAAV0@PBD@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+18h],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_387']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_32F']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '1']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_34],', 'eax']
jnb ['short', 'loc_36F']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEAAUCBond2@N7z@NArchive@@I@Z']
mov ['[ebp+var_38],', 'eax']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_326']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '38h']
push ['edx']
push ['0']
lea ['ecx,', '[ebp+var_20]']
call ['?Insert@?$CObjectVector@VCOneMethodInfo@@@@QAEXIABVCOneMethodInfo@@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+19h],', '1']
mov ['[ebp+var_40],', '1000000h']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_48],', '0FFFFFFFFh']
mov ['[ebp+var_44],', '0']
mov ['[ebp+var_49],', '0']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_3B9']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '1']
mov ['[ebp+var_50],', 'ecx']
lea ['ecx,', '[ebp+var_20]']
call ['?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ']
cmp ['[ebp+var_50],', 'eax']
jnb ['loc_571']
mov ['edx,', '[ebp+var_50]']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['??A?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@I@Z']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['?SetGlobalLevelAndThreads@CMultiMethodProps@NArchive@@QAEXAAVCOneMethodInfo@@I@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?AddNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@XZ']
mov ['[ebp+var_58],', 'eax']
mov ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+var_58]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?PropsMethod_To_FullMethod@CHandler@N7z@NArchive@@AAEJAAUCMethodFull@23@ABVCOneMethodInfo@@@Z']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_42D']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ebp+var_64],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_64]']
jmp ['loc_5C8']
mov ['edx,', '[ebp+var_58]']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+var_70]']
mov ['ecx,', '[ebp+var_70]']
mov ['edx,', '[eax+10h]']
or ['edx,', '[ecx+14h]']
jz ['short', 'loc_445']
mov ['[ebp+var_49],', '1']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+78h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_455']
jmp ['loc_3B0']
mov ['edx,', '[ebp+var_58]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_78],', 'eax']
mov ['ecx,', '[edx+14h]']
mov ['[ebp+var_74],', 'ecx']
cmp ['[ebp+var_74],', '0']
ja ['short', 'loc_4E2']
jb ['short', 'loc_475']
cmp ['[ebp+var_78],', '40202h']
ja ['short', 'loc_4E2']
mov ['edx,', '[ebp+var_78]']
mov ['[ebp+var_80],', 'edx']
cmp ['[ebp+var_80],', '30401h']
ja ['short', 'loc_49E']
cmp ['[ebp+var_80],', '30401h']
jz ['short', 'loc_4BF']
cmp ['[ebp+var_80],', '21h']
jz ['short', 'loc_4B2']
cmp ['[ebp+var_80],', '30101h']
jz ['short', 'loc_4B2']
jmp ['short', 'loc_4E2']
cmp ['[ebp+var_80],', '40108h']
jz ['short', 'loc_4CC']
cmp ['[ebp+var_80],', '40202h']
jz ['short', 'loc_4D5']
jmp ['short', 'loc_4E2']
mov ['ecx,', '[ebp+var_54]']
call ['?Get_Lzma_DicSize@CMethodProps@@QBEIXZ']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_4E7']
mov ['ecx,', '[ebp+var_54]']
call ['?Get_Ppmd_MemSize@CMethodProps@@QBEIXZ']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_4E7']
mov ['[ebp+var_60],', '8000h']
jmp ['short', 'loc_4E7']
mov ['ecx,', '[ebp+var_54]']
call ['?Get_BZip2_BlockSize@CMethodProps@@QBEIXZ']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_4E7']
jmp ['loc_3B0']
mov ['eax,', '[ebp+var_60]']
xor ['edx,', 'edx']
mov ['cl,', '7']
call ['__allshl']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+70h],', 'eax']
mov ['[ecx+74h],', 'edx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_84],', 'edx']
mov ['eax,', '[ebp+var_84]']
cmp ['dword', 'ptr', '[eax+74h],', '0']
ja ['short', 'loc_533']
jb ['short', 'loc_522']
mov ['ecx,', '[ebp+var_84]']
cmp ['dword', 'ptr', '[ecx+70h],', '1000000h']
jnb ['short', 'loc_533']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+70h],', '1000000h']
mov ['dword', 'ptr', '[edx+74h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_88],', 'eax']
mov ['ecx,', '[ebp+var_88]']
cmp ['dword', 'ptr', '[ecx+74h],', '0']
ja ['short', 'loc_554']
mov ['edx,', '[ebp+var_88]']
cmp ['dword', 'ptr', '[edx+70h],', '0FFFFFFFFh']
jbe ['short', 'loc_565']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+70h],', '0FFFFFFFFh']
mov ['dword', 'ptr', '[eax+74h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+78h],', '1']
jmp ['loc_3B0']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+78h]']
test ['eax,', 'eax']
jnz ['short', 'loc_5A8']
movzx ['ecx,', '[ebp+var_49]']
test ['ecx,', 'ecx']
jz ['short', 'loc_597']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+70h],', '0FFFFFFFFh']
mov ['dword', 'ptr', '[edx+74h],', '0']
jmp ['short', 'loc_5A8']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+70h],', '0']
mov ['dword', 'ptr', '[eax+74h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+78h],', '1']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_68]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN40']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '88h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '4F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_500]']
mov ['ecx,', '13Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '7Ch']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_420],', 'eax']
cmp ['[ebp+var_420],', '0']
jz ['short', 'loc_694']
mov ['eax,', '[ebp+this]']
add ['eax,', '84h']
mov ['[ebp+var_14],', 'eax']
lea ['ecx,', '[ebp+var_24]']
call ['??0?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_424],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+72h]']
test ['edx,', 'edx']
jz ['short', 'loc_6C8']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+71h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6C8']
mov ['[ebp+var_428],', '1']
jmp ['short', 'loc_6D2']
mov ['[ebp+var_428],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_428]']
mov ['[ebp+var_29],', 'dl']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+74h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6FD']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+73h]']
test ['eax,', 'eax']
jz ['short', 'loc_6FD']
mov ['[ebp+var_42C],', '1']
jmp ['short', 'loc_707']
mov ['[ebp+var_42C],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_42C]']
mov ['[ebp+var_2A],', 'cl']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+76h]']
test ['eax,', 'eax']
jz ['short', 'loc_726']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+75h]']
test ['edx,', 'edx']
jnz ['short', 'loc_73D']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+76h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_73D']
mov ['[ebp+var_430],', '0']
jmp ['short', 'loc_747']
mov ['[ebp+var_430],', '1']
mov ['dl,', 'byte', 'ptr', '[ebp+var_430]']
mov ['[ebp+var_2B],', 'dl']
cmp ['[ebp+var_14],', '0']
jz ['loc_7E4']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+72h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_787']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '64h']
call ['?IsEmpty@?$CRecordVector@_N@@QBE_NXZ']
mov ['[ebp+var_431],', 'al']
movzx ['edx,', '[ebp+var_431]']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['[ebp+var_29],', 'dl']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+74h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_7B4']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '7Ch']
call ['?IsEmpty@?$CRecordVector@_N@@QBE_NXZ']
mov ['[ebp+var_432],', 'al']
movzx ['edx,', '[ebp+var_432]']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['[ebp+var_2A],', 'dl']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+76h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_7E4']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '94h']
call ['?IsEmpty@?$CRecordVector@_N@@QBE_NXZ']
mov ['[ebp+var_433],', 'al']
movzx ['edx,', '[ebp+var_433]']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['[ebp+var_2B],', 'dl']
lea ['ecx,', '[ebp+var_3C]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_438],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_808']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['loc_1444']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_847']
mov ['[ebp+var_3AC],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3AC]']
jmp ['loc_1BD3']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_64]']
push ['edx']
lea ['eax,', '[ebp+var_58]']
push ['eax']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_43C],', 'eax']
mov ['ecx,', '[ebp+var_43C]']
mov ['[ebp+var_6C],', 'ecx']
cmp ['[ebp+var_6C],', '0']
jz ['short', 'loc_8AF']
mov ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_3B0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3B0]']
jmp ['loc_1BD3']
lea ['ecx,', '[ebp+var_B0]']
call ['??0CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_440],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['eax,', '[ebp+var_58]']
push ['eax']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_441],', 'al']
mov ['cl,', '[ebp+var_441]']
mov ['[ebp+var_77],', 'cl']
mov ['edx,', '[ebp+var_4C]']
push ['edx']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_442],', 'al']
mov ['al,', '[ebp+var_442]']
mov ['[ebp+var_78],', 'al']
mov ['ecx,', '[ebp+var_64]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_44]']
mov ['[ebp+var_AC],', 'edx']
mov ['[ebp+var_76],', '0']
mov ['[ebp+var_90],', '0']
mov ['[ebp+var_8C],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_448],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
cmp ['[ebp+var_B0],', '0FFFFFFFFh']
jz ['loc_ABC']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_965']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '58h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
mov ['[ebp+var_44C],', 'eax']
mov ['eax,', '[ebp+var_B0]']
cmp ['eax,', '[ebp+var_44C]']
jb ['short', 'loc_9B0']
mov ['[ebp+var_3B4],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3B4]']
jmp ['loc_1BD3']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_450],', 'eax']
mov ['edx,', '[ebp+var_450]']
mov ['[ebp+var_CC],', 'edx']
movzx ['eax,', '[ebp+var_77]']
test ['eax,', 'eax']
jnz ['short', 'loc_9F8']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+var_B0]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '84h']
call ['?GetPath@CDatabase@N7z@NArchive@@QBEXIAAVUString@@@Z']
mov ['eax,', '[ebp+var_CC]']
mov ['cl,', '[eax+11h]']
mov ['[ebp+var_75],', 'cl']
mov ['edx,', '[ebp+var_CC]']
mov ['eax,', '[edx]']
mov ['[ebp+var_90],', 'eax']
mov ['ecx,', '[edx+4]']
mov ['[ebp+var_8C],', 'ecx']
mov ['edx,', '[ebp+var_B0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z']
mov ['[ebp+var_451],', 'al']
mov ['al,', '[ebp+var_451]']
mov ['[ebp+var_76],', 'al']
movzx ['ecx,', '[ebp+var_77]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_ABC']
lea ['edx,', '[ebp+var_A8]']
push ['edx']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '64h']
call ['?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z']
mov ['[ebp+var_452],', 'al']
mov ['cl,', '[ebp+var_452]']
mov ['[ebp+var_73],', 'cl']
lea ['edx,', '[ebp+var_A0]']
push ['edx']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '7Ch']
call ['?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z']
mov ['[ebp+var_453],', 'al']
mov ['cl,', '[ebp+var_453]']
mov ['[ebp+var_72],', 'cl']
lea ['edx,', '[ebp+var_98]']
push ['edx']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '94h']
call ['?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z']
mov ['[ebp+var_454],', 'al']
mov ['cl,', '[ebp+var_454]']
mov ['[ebp+var_71],', 'cl']
movzx ['edx,', '[ebp+var_77]']
test ['edx,', 'edx']
jz ['loc_1247']
lea ['ecx,', '[ebp+var_E4]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_458],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_E4]']
push ['eax']
push ['9']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_45C],', 'eax']
mov ['eax,', '[ebp+var_45C]']
mov ['[ebp+var_EC],', 'eax']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_B78']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_3B8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E4]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3B8]']
jmp ['loc_1BD3']
movzx ['edx,', '[ebp+var_E4]']
test ['edx,', 'edx']
jnz ['short', 'loc_B89']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_BFE']
movzx ['eax,', '[ebp+var_E4]']
cmp ['eax,', '13h']
jz ['short', 'loc_BF1']
mov ['[ebp+var_3BC],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E4]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3BC]']
jmp ['loc_1BD3']
jmp ['short', 'loc_BFE']
mov ['ecx,', '[ebp+var_DC]']
mov ['[ebp+var_7C],', 'ecx']
mov ['[ebp+var_74],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_E4]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
movzx ['edx,', '[ebp+var_29]']
test ['edx,', 'edx']
jz ['loc_C9B']
lea ['eax,', '[ebp+var_73]']
push ['eax']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
push ['0Ah']
mov ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?GetTime@N7z@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAA_KAA_N@Z']
mov ['[ebp+var_460],', 'eax']
mov ['ecx,', '[ebp+var_460]']
mov ['[ebp+var_F0],', 'ecx']
cmp ['[ebp+var_F0],', '0']
jz ['short', 'loc_C9B']
mov ['edx,', '[ebp+var_F0]']
mov ['[ebp+var_3C0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3C0]']
jmp ['loc_1BD3']
movzx ['eax,', '[ebp+var_2A]']
test ['eax,', 'eax']
jz ['loc_D29']
lea ['ecx,', '[ebp+var_72]']
push ['ecx']
lea ['edx,', '[ebp+var_A0]']
push ['edx']
push ['0Bh']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['?GetTime@N7z@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAA_KAA_N@Z']
mov ['[ebp+var_464],', 'eax']
mov ['edx,', '[ebp+var_464]']
mov ['[ebp+var_F4],', 'edx']
cmp ['[ebp+var_F4],', '0']
jz ['short', 'loc_D29']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_3C4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3C4]']
jmp ['loc_1BD3']
movzx ['ecx,', '[ebp+var_2B]']
test ['ecx,', 'ecx']
jz ['loc_DB7']
lea ['edx,', '[ebp+var_71]']
push ['edx']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['0Ch']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['?GetTime@N7z@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAA_KAA_N@Z']
mov ['[ebp+var_468],', 'eax']
mov ['eax,', '[ebp+var_468]']
mov ['[ebp+var_F8],', 'eax']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_DB7']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ebp+var_3C8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3C8]']
jmp ['loc_1BD3']
lea ['ecx,', '[ebp+var_10C]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_46C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_10C]']
push ['edx']
push ['3']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_470],', 'eax']
mov ['edx,', '[ebp+var_470]']
mov ['[ebp+var_114],', 'edx']
cmp ['[ebp+var_114],', '0']
jz ['short', 'loc_E67']
mov ['eax,', '[ebp+var_114]']
mov ['[ebp+var_3CC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3CC]']
jmp ['loc_1BD3']
movzx ['ecx,', '[ebp+var_10C]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_E77']
jmp ['loc_F54']
movzx ['edx,', '[ebp+var_10C]']
cmp ['edx,', '8']
jz ['short', 'loc_EDF']
mov ['[ebp+var_3D0],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3D0]']
jmp ['loc_1BD3']
jmp ['short', 'loc_F54']
mov ['eax,', '[ebp+var_104]']
push ['eax']
lea ['ecx,', '[ebp+var_3DC]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_474],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_3DC]']
push ['ecx']
lea ['edx,', '[ebp+var_3E8]']
push ['edx']
call ['?MakeLegalName@NItemName@NArchive@@YG?AVUString@@ABV3@@Z']
mov ['[ebp+var_478],', 'eax']
mov ['eax,', '[ebp+var_478]']
mov ['[ebp+var_47C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_47C]']
push ['ecx']
lea ['ecx,', '[ebp+var_C4]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_3DC]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
lea ['ecx,', '[ebp+var_128]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_480],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_128]']
push ['edx']
push ['6']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_484],', 'eax']
mov ['edx,', '[ebp+var_484]']
mov ['[ebp+var_130],', 'edx']
cmp ['[ebp+var_130],', '0']
jz ['short', 'loc_1013']
mov ['eax,', '[ebp+var_130]']
mov ['[ebp+var_3EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_128]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3EC]']
jmp ['loc_1BD3']
movzx ['ecx,', '[ebp+var_128]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1027']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_10A6']
movzx ['edx,', '[ebp+var_128]']
cmp ['edx,', '0Bh']
jz ['short', 'loc_108F']
mov ['[ebp+var_3F0],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_128]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3F0]']
jmp ['loc_1BD3']
jmp ['short', 'loc_10A6']
movsx ['eax,', '[ebp+var_120]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['[ebp+var_75],', 'al']
mov ['[ebp+var_CD],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_128]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
lea ['ecx,', '[ebp+var_144]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_488],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_144]']
push ['ecx']
push ['15h']
mov ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_48C],', 'eax']
mov ['ecx,', '[ebp+var_48C]']
mov ['[ebp+var_14C],', 'ecx']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_1165']
mov ['edx,', '[ebp+var_14C]']
mov ['[ebp+var_3F4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_144]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3F4]']
jmp ['loc_1BD3']
movzx ['eax,', '[ebp+var_144]']
test ['eax,', 'eax']
jnz ['short', 'loc_1176']
mov ['[ebp+var_76],', '0']
jmp ['short', 'loc_11EE']
movzx ['ecx,', '[ebp+var_144]']
cmp ['ecx,', '0Bh']
jz ['short', 'loc_11DE']
mov ['[ebp+var_3F8],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_144]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3F8]']
jmp ['loc_1BD3']
jmp ['short', 'loc_11EE']
movsx ['edx,', '[ebp+var_13C]']
neg ['edx']
sbb ['edx,', 'edx']
neg ['edx']
mov ['[ebp+var_76],', 'dl']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_144]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
movzx ['eax,', '[ebp+var_76]']
test ['eax,', 'eax']
jz ['short', 'loc_1229']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_73],', '0']
mov ['[ebp+var_72],', '0']
mov ['[ebp+var_71],', '0']
mov ['[ebp+var_90],', '0']
mov ['[ebp+var_8C],', '0']
movzx ['ecx,', '[ebp+var_CD]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1247']
movzx ['edx,', '[ebp+var_74]']
test ['edx,', 'edx']
jz ['short', 'loc_1247']
lea ['ecx,', '[ebp+var_B0]']
call ['?SetDirStatusFromAttrib@CUpdateItem@N7z@NArchive@@QAEXXZ']
lea ['eax,', '[ebp+var_C4]']
push ['eax']
lea ['ecx,', '[ebp+var_88]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
movzx ['ecx,', '[ebp+var_78]']
test ['ecx,', 'ecx']
jz ['loc_1412']
lea ['ecx,', '[ebp+var_160]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_490],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_160]']
push ['edx']
push ['7']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_494],', 'eax']
mov ['edx,', '[ebp+var_494]']
mov ['[ebp+var_168],', 'edx']
cmp ['[ebp+var_168],', '0']
jz ['short', 'loc_1315']
mov ['eax,', '[ebp+var_168]']
mov ['[ebp+var_3FC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_160]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3FC]']
jmp ['loc_1BD3']
movzx ['ecx,', '[ebp+var_160]']
cmp ['ecx,', '15h']
jz ['short', 'loc_137B']
mov ['[ebp+var_400],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_160]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_400]']
jmp ['loc_1BD3']
mov ['edx,', '[ebp+var_158]']
mov ['[ebp+var_90],', 'edx']
mov ['eax,', '[ebp+var_154]']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_90]']
or ['ecx,', '[ebp+var_8C]']
jz ['short', 'loc_1403']
movzx ['edx,', '[ebp+var_76]']
test ['edx,', 'edx']
jz ['short', 'loc_1403']
mov ['[ebp+var_404],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_160]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_404]']
jmp ['loc_1BD3']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_160]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
lea ['eax,', '[ebp+var_B0]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['?Add@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAEIABUCUpdateItem@N7z@NArchive@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
jmp ['loc_7FF']
lea ['ecx,', '[ebp+var_19C]']
call ['??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_498],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_1D4]']
call ['??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_49C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+14h]']
push ['edx']
lea ['eax,', '[ebp+var_19C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '0Ch']
call ['?SetMainMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@I@Z']
mov ['[ebp+var_4A0],', 'eax']
mov ['ecx,', '[ebp+var_4A0]']
mov ['[ebp+var_1DC],', 'ecx']
mov ['edx,', '[ebp+var_1DC]']
mov ['[ebp+var_1E0],', 'edx']
cmp ['[ebp+var_1E0],', '0']
jz ['short', 'loc_14FB']
mov ['eax,', '[ebp+var_1E0]']
mov ['[ebp+var_408],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_19C]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_408]']
jmp ['loc_1BD3']
lea ['ecx,', '[ebp+var_1D4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '0Ch']
call ['?SetHeaderMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@@Z']
mov ['[ebp+var_4A4],', 'eax']
mov ['edx,', '[ebp+var_4A4]']
mov ['[ebp+var_1E4],', 'edx']
cmp ['[ebp+var_1E4],', '0']
jz ['short', 'loc_1575']
mov ['eax,', '[ebp+var_1E4]']
mov ['[ebp+var_40C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_19C]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_40C]']
jmp ['loc_1BD3']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_180],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['cl,', '[eax+77h]']
mov ['[ebp+var_17C],', 'cl']
mov ['[ebp+var_1B8],', '1']
mov ['edx,', '[ebp+this]']
mov ['al,', '[edx+77h]']
mov ['[ebp+var_1B4],', 'al']
lea ['ecx,', '[ebp+var_1EC]']
call ['??0?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ']
mov ['[ebp+var_4A8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
lea ['ecx,', '[ebp+var_1EC]']
call ['??I?$CMyComPtr@UICryptoGetTextPassword2@@@@QAEPAPAUICryptoGetTextPassword2@@XZ']
mov ['[ebp+var_4AC],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4AC]']
push ['ecx']
push ['offset', '_IID_ICryptoGetTextPassword2']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_17B],', '0']
lea ['ecx,', '[ebp+var_178]']
call ['?Empty@UString@@QAEXXZ']
lea ['ecx,', '[ebp+var_1EC]']
call ['??B?$CMyComPtr@UICryptoGetTextPassword2@@@@QBEPAUICryptoGetTextPassword2@@XZ']
mov ['[ebp+var_4B0],', 'eax']
cmp ['[ebp+var_4B0],', '0']
jz ['loc_1784']
lea ['ecx,', '[ebp+var_1F8]']
call ['??0CMyComBSTR@@QAE@XZ']
mov ['[ebp+var_4B4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
lea ['ecx,', '[ebp+var_1EC]']
call ['??C?$CMyComPtr@UICryptoGetTextPassword2@@@@QBEPAUICryptoGetTextPassword2@@XZ']
mov ['[ebp+var_4B8],', 'eax']
mov ['eax,', '[ebp+var_4B8]']
mov ['[ebp+var_4BC],', 'eax']
lea ['ecx,', '[ebp+var_1F8]']
call ['??ICMyComBSTR@@QAEPAPA_WXZ']
mov ['[ebp+var_4C0],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4C0]']
push ['ecx']
lea ['edx,', '[ebp+var_204]']
push ['edx']
mov ['eax,', '[ebp+var_4BC]']
push ['eax']
mov ['ecx,', '[ebp+var_4BC]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4C4],', 'eax']
mov ['ecx,', '[ebp+var_4C4]']
mov ['[ebp+var_20C],', 'ecx']
cmp ['[ebp+var_20C],', '0']
jz ['short', 'loc_170F']
mov ['edx,', '[ebp+var_20C]']
mov ['[ebp+var_410],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
lea ['ecx,', '[ebp+var_1F8]']
call ['??1CMyComBSTR@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
lea ['ecx,', '[ebp+var_1EC]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_19C]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_410]']
jmp ['loc_1BD3']
mov ['eax,', '[ebp+var_204]']
push ['eax']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_4C5],', 'al']
mov ['cl,', '[ebp+var_4C5]']
mov ['[ebp+var_17B],', 'cl']
movzx ['edx,', '[ebp+var_17B]']
test ['edx,', 'edx']
jz ['short', 'loc_1775']
lea ['ecx,', '[ebp+var_1F8]']
call ['??BCMyComBSTR@@QBEPB_WXZ']
mov ['[ebp+var_4CC],', 'eax']
cmp ['[ebp+var_4CC],', '0']
jz ['short', 'loc_1775']
lea ['ecx,', '[ebp+var_1F8]']
call ['??BCMyComBSTR@@QBEPB_WXZ']
mov ['[ebp+var_4D0],', 'eax']
mov ['eax,', '[ebp+var_4D0]']
push ['eax']
lea ['ecx,', '[ebp+var_178]']
call ['??4UString@@QAEAAV0@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
lea ['ecx,', '[ebp+var_1F8]']
call ['??1CMyComBSTR@@QAE@XZ']
mov ['ecx,', '[ebp+this]']
mov ['dl,', '[ecx+6Eh]']
mov ['[ebp+var_20D],', 'dl']
mov ['[ebp+var_20E],', '0']
movzx ['eax,', '[ebp+var_17B]']
test ['eax,', 'eax']
jnz ['short', 'loc_17CB']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1BDh]']
test ['edx,', 'edx']
jz ['short', 'loc_17CB']
mov ['[ebp+var_17B],', '1']
mov ['eax,', '[ebp+this]']
add ['eax,', '1C0h']
push ['eax']
lea ['ecx,', '[ebp+var_178]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
movzx ['ecx,', '[ebp+var_17B]']
test ['ecx,', 'ecx']
jz ['short', 'loc_182E']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+6Fh]']
test ['eax,', 'eax']
jz ['short', 'loc_17EF']
mov ['ecx,', '[ebp+this]']
mov ['dl,', '[ecx+70h]']
mov ['[ebp+var_20E],', 'dl']
jmp ['short', 'loc_17FE']
mov ['eax,', '[ebp+this]']
mov ['cl,', '[eax+1BDh]']
mov ['[ebp+var_20E],', 'cl']
mov ['[ebp+var_20D],', '1']
movzx ['edx,', '[ebp+var_20E]']
test ['edx,', 'edx']
jz ['short', 'loc_182E']
mov ['al,', '[ebp+var_17B]']
mov ['[ebp+var_1B3],', 'al']
lea ['ecx,', '[ebp+var_178]']
push ['ecx']
lea ['ecx,', '[ebp+var_1B0]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
cmp ['[ebp+arg_8],', '2']
jnb ['short', 'loc_183B']
mov ['[ebp+var_20D],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['?GetLevel@CMultiMethodProps@NArchive@@QBEHXZ']
mov ['[ebp+var_4D4],', 'eax']
mov ['edx,', '[ebp+var_4D4]']
mov ['[ebp+var_214],', 'edx']
lea ['ecx,', '[ebp+var_248]']
call ['??0CUpdateOptions@N7z@NArchive@@QAE@XZ']
lea ['eax,', '[ebp+var_19C]']
mov ['[ebp+var_248],', 'eax']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+6Eh]']
test ['edx,', 'edx']
jnz ['short', 'loc_1891']
movzx ['eax,', '[ebp+var_20E]']
test ['eax,', 'eax']
jnz ['short', 'loc_1891']
mov ['[ebp+var_4D8],', '0']
jmp ['short', 'loc_189D']
lea ['ecx,', '[ebp+var_1D4]']
mov ['[ebp+var_4D8],', 'ecx']
mov ['edx,', '[ebp+var_4D8]']
mov ['[ebp+var_244],', 'edx']
cmp ['[ebp+var_214],', '0']
jz ['short', 'loc_18D4']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+50h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_18D4']
movzx ['edx,', '[ebp+var_183]']
test ['edx,', 'edx']
jnz ['short', 'loc_18D4']
mov ['[ebp+var_4DC],', '1']
jmp ['short', 'loc_18DE']
mov ['[ebp+var_4DC],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4DC]']
mov ['[ebp+var_240],', 'al']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_214],', '8']
setnl ['cl']
mov ['[ebp+var_23F],', 'cl']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['?GetAnalysisLevel@CMultiMethodProps@NArchive@@QBEHXZ']
mov ['[ebp+var_4E0],', 'eax']
mov ['edx,', '[ebp+var_4E0]']
mov ['[ebp+var_23C],', 'edx']
mov ['al,', '[ebp+var_20D]']
mov ['[ebp+var_238],', 'al']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+5Ch]']
mov ['[ebp+var_230],', 'edx']
mov ['eax,', '[ecx+60h]']
mov ['[ebp+var_22C],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_228],', 'edx']
mov ['eax,', '[ecx+68h]']
mov ['[ebp+var_224],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['dl,', '[ecx+6Dh]']
mov ['[ebp+var_220],', 'dl']
mov ['eax,', '[ebp+this]']
mov ['cl,', '[eax+54h]']
mov ['[ebp+var_21F],', 'cl']
mov ['edx,', '[ebp+this]']
mov ['al,', '[edx+77h]']
mov ['[ebp+var_21E],', 'al']
lea ['ecx,', '[ebp+var_2A8]']
call ['??0COutArchive@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4E4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_394]']
call ['??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4E8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_3A0]']
call ['??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['[ebp+var_4EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_3A0]']
call ['??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ']
mov ['[ebp+var_4F0],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4F0]']
push ['ecx']
push ['offset', '_IID_ICryptoGetTextPassword']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_3A0]']
call ['??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ']
mov ['[ebp+var_4F4],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '7Ch']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_4F8],', 'eax']
mov ['eax,', '[ebp+var_4F4]']
push ['eax']
lea ['ecx,', '[ebp+var_248]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_394]']
push ['ecx']
lea ['edx,', '[ebp+var_2A8]']
push ['edx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_4F8]']
push ['edx']
call ['?Update@N7z@NArchive@@YGJPAUIInStream@@PBUCDbEx@12@ABV?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@AAVCOutArchive@12@AAUCArchiveDatabaseOut@12@PAUISequentialOutStream@@PAUIArchiveUpdateCallback@@ABUCUpdateOptions@12@PAUICryptoGetTextPassword@@@Z']
mov ['[ebp+var_4FC],', 'eax']
mov ['eax,', '[ebp+var_4FC]']
mov ['[ebp+var_1DC],', 'eax']
mov ['ecx,', '[ebp+var_1DC]']
mov ['[ebp+var_3A8],', 'ecx']
cmp ['[ebp+var_3A8],', '0']
jz ['loc_1AF3']
mov ['edx,', '[ebp+var_3A8]']
mov ['[ebp+var_414],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_3A0]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_394]']
call ['??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
lea ['ecx,', '[ebp+var_2A8]']
call ['??1COutArchive@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
lea ['ecx,', '[ebp+var_1EC]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_19C]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_414]']
jmp ['loc_1BD3']
lea ['ecx,', '[ebp+var_24]']
call ['?ClearAndFree@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAEXXZ']
lea ['eax,', '[ebp+var_238]']
push ['eax']
mov ['ecx,', '[ebp+var_244]']
push ['ecx']
lea ['edx,', '[ebp+var_394]']
push ['edx']
lea ['ecx,', '[ebp+var_2A8]']
call ['?WriteDatabase@COutArchive@N7z@NArchive@@QAEJABUCArchiveDatabaseOut@23@PBUCCompressionMethodMode@23@ABUCHeaderOptions@23@@Z']
mov ['[ebp+var_500],', 'eax']
mov ['eax,', '[ebp+var_500]']
mov ['[ebp+var_418],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_3A0]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_394]']
call ['??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
lea ['ecx,', '[ebp+var_2A8]']
call ['??1COutArchive@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
lea ['ecx,', '[ebp+var_1EC]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_19C]']
call ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_418]']
jmp ['short', 'loc_1BD3']
endp
__catch$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-41Ch],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN97']
retn
endp
?GetTime@N7z@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAA_KAA_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetTime@N7z@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAA_KAA_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_1E5E']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_2C]']
jmp ['loc_1EE0']
movzx ['edx,', '[ebp+var_20]']
cmp ['edx,', '40h']
jnz ['short', 'loc_1E8C']
mov ['esi,', '[ebp+var_18]']
xor ['edi,', 'edi']
mov ['eax,', '[ebp+var_14]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['esi,', 'eax']
or ['edi,', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax],', 'esi']
mov ['[eax+4],', 'edi']
mov ['ecx,', '[ebp+arg_10]']
mov ['byte', 'ptr', '[ecx],', '1']
jmp ['short', 'loc_1EC7']
movzx ['edx,', '[ebp+var_20]']
test ['edx,', 'edx']
jz ['short', 'loc_1EB1']
mov ['[ebp+var_30],', '80070057h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_1EE0']
jmp ['short', 'loc_1EC7']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+arg_10]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_34]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?InitProps@COutHandler@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Init@CMultiMethodProps@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+48h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+62h],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+63h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+64h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '65h']
call ['?Init@CBoolPair@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '67h']
call ['?Init@CBoolPair@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '69h']
call ['?Init@CBoolPair@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+6Bh],', '1']
mov ['ecx,', '[ebp+var_4]']
call ['?InitSolid@COutHandler@N7z@NArchive@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetSolidFromString@COutHandler@N7z@NArchive@@AAEJABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetSolidFromString@COutHandler@N7z@NArchive@@AAEJABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '54h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['?MakeLower_Ascii@UString@@QAEXXZ']
mov ['[ebp+var_28],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['?Len@UString@@QBEIXZ']
cmp ['[ebp+var_28],', 'eax']
jnb ['loc_21B6']
lea ['ecx,', '[ebp+var_20]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_28]']
lea ['edx,', '[eax+ecx*2]']
mov ['[ebp+var_2C],', 'edx']
lea ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['?ConvertStringToUInt64@@YG_KPB_WPAPB_W@Z']
mov ['[ebp+var_40],', 'eax']
mov ['[ebp+var_3C],', 'edx']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_34]']
jnz ['short', 'loc_2096']
lea ['ecx,', '[ebp+var_20]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_28]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
cmp ['edx,', '65h']
jz ['short', 'loc_205F']
mov ['[ebp+var_5C],', '1']
jmp ['short', 'loc_2066']
mov ['[ebp+var_5C],', '0']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_208A']
mov ['[ebp+var_4C],', '80070057h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4C]']
jmp ['loc_21CF']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+61h],', '1']
jmp ['loc_1FFC']
mov ['edx,', '[ebp+var_34]']
sub ['edx,', '[ebp+var_2C]']
sar ['edx,', '1']
add ['edx,', '[ebp+var_28]']
mov ['[ebp+var_28],', 'edx']
lea ['ecx,', '[ebp+var_20]']
call ['?Len@UString@@QBEIXZ']
cmp ['[ebp+var_28],', 'eax']
jnz ['short', 'loc_20CF']
mov ['[ebp+var_50],', '80070057h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_21CF']
lea ['ecx,', '[ebp+var_20]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_28]']
mov ['dx,', '[eax+ecx*2]']
mov ['[ebp+var_44],', 'dx']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
movzx ['ecx,', '[ebp+var_44]']
cmp ['ecx,', '66h']
jnz ['short', 'loc_2124']
cmp ['[ebp+var_3C],', '0']
ja ['short', 'loc_2110']
jb ['short', 'loc_2102']
cmp ['[ebp+var_40],', '1']
jnb ['short', 'loc_2110']
mov ['[ebp+var_40],', '1']
mov ['[ebp+var_3C],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_40]']
mov ['[edx+50h],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['[edx+54h],', 'ecx']
jmp ['loc_21B1']
movzx ['edx,', '[ebp+var_44]']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_60]']
sub ['eax,', '62h']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '12h']
ja ['short', '$LN1']
mov ['ecx,', '[ebp+var_60]']
movzx ['edx,', 'ds:$LN24[ecx]']
jmp ['ds:$LN30[edx*4]']
mov ['[ebp+var_48],', '0']
jmp ['short', 'loc_2193']
mov ['[ebp+var_48],', '0Ah']
jmp ['short', 'loc_2193']
mov ['[ebp+var_48],', '14h']
jmp ['short', 'loc_2193']
mov ['[ebp+var_48],', '1Eh']
jmp ['short', 'loc_2193']
mov ['[ebp+var_48],', '28h']
jmp ['short', 'loc_2193']
mov ['[ebp+var_54],', '80070057h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_54]']
jmp ['short', 'loc_21CF']
mov ['eax,', '[ebp+var_40]']
mov ['edx,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_48]']
call ['__allshl']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+58h],', 'eax']
mov ['[ecx+5Ch],', 'edx']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+60h],', '1']
jmp ['loc_1FFC']
mov ['[ebp+var_58],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_58]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetSolidFromPROPVARIANT@COutHandler@N7z@NArchive@@AAEJABUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetSolidFromPROPVARIANT@COutHandler@N7z@NArchive@@AAEJABUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '34h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_40],', 'ecx']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_22AA']
cmp ['[ebp+var_40],', '8']
jz ['short', 'loc_22C5']
cmp ['[ebp+var_40],', '0Bh']
jz ['short', 'loc_22B3']
jmp ['loc_233D']
mov ['[ebp+var_15],', '1']
jmp ['loc_2344']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'word', 'ptr', '[edx+8]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['[ebp+var_15],', 'al']
jmp ['short', 'loc_2344']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_15]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['?StringToBool@@YG_NABVUString@@AA_N@Z']
mov ['[ebp+var_1D],', 'al']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1UString@@QAE@XZ']
movzx ['edx,', '[ebp+var_1D]']
test ['edx,', 'edx']
jz ['short', 'loc_2304']
jmp ['short', 'loc_2344']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
lea ['ecx,', '[ebp+var_3C]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '1']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?SetSolidFromString@COutHandler@N7z@NArchive@@AAEJABVUString@@@Z']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_2369']
mov ['eax,', '80070057h']
jmp ['short', 'loc_2369']
movzx ['eax,', '[ebp+var_15]']
test ['eax,', 'eax']
jz ['short', 'loc_2356']
mov ['ecx,', '[ebp+var_10]']
call ['?InitSolid@COutHandler@N7z@NArchive@@QAEXXZ']
jmp ['short', 'loc_2367']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+50h],', '1']
mov ['dword', 'ptr', '[ecx+54h],', '0']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetProperty@COutHandler@N7z@NArchive@@QAEJPB_WABUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetProperty@COutHandler@N7z@NArchive@@QAEJPB_WABUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '78h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_84]']
mov ['ecx,', '1Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['?MakeLower_Ascii@UString@@QAEXXZ']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2445']
mov ['[ebp+var_4C],', '80070057h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4C]']
jmp ['loc_2786']
lea ['ecx,', '[ebp+var_20]']
call ['??BUString@@QBEPB_WXZ']
movzx ['edx,', 'word', 'ptr', '[eax]']
cmp ['edx,', '73h']
jnz ['loc_24E6']
push ['0']
lea ['ecx,', '[ebp+var_20]']
call ['?Delete@UString@@QAEXI@Z']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2498']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?SetSolidFromPROPVARIANT@COutHandler@N7z@NArchive@@AAEJABUtagPROPVARIANT@@@Z']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_2786']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_24C0']
mov ['[ebp+var_54],', '80070057h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_54]']
jmp ['loc_2786']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?SetSolidFromString@COutHandler@N7z@NArchive@@AAEJABVUString@@@Z']
mov ['[ebp+var_58],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_58]']
jmp ['loc_2786']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
call ['?ParseStringToUInt32@@YGIABVUString@@AAI@Z']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jnz ['loc_2756']
push ['offset', '$SG74549']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_253E']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '48h']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['[ebp+var_5C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_5C]']
jmp ['loc_2786']
push ['offset', '$SG74552']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_257C']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '62h']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['[ebp+var_60],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_60]']
jmp ['loc_2786']
push ['offset', '$SG74555']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_25F5']
mov ['[ebp+var_39],', '1']
lea ['edx,', '[ebp+var_39]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_25C7']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_64],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_64]']
jmp ['loc_2786']
movzx ['edx,', '[ebp+var_39]']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '7FF8FFA9h']
add ['edx,', '80070057h']
mov ['[ebp+var_68],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_68]']
jmp ['loc_2786']
push ['offset', '$SG74564']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2664']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '64h']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_263F']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_6C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_6C]']
jmp ['loc_2786']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+63h],', '1']
mov ['[ebp+var_70],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_70]']
jmp ['loc_2786']
push ['offset', '$SG74571']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_26A2']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '65h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?PROPVARIANT_to_BoolPair@N7z@NArchive@@YGJABUtagPROPVARIANT@@AAUCBoolPair@@@Z']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_74]']
jmp ['loc_2786']
push ['offset', '$SG74574']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_26E0']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '67h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?PROPVARIANT_to_BoolPair@N7z@NArchive@@YGJABUtagPROPVARIANT@@AAUCBoolPair@@@Z']
mov ['[ebp+var_78],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_78]']
jmp ['loc_2786']
push ['offset', '$SG74577']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_271B']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '69h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?PROPVARIANT_to_BoolPair@N7z@NArchive@@YGJABUtagPROPVARIANT@@AAUCBoolPair@@@Z']
mov ['[ebp+var_7C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_7C]']
jmp ['short', 'loc_2786']
push ['offset', '$SG74580']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2756']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '6Bh']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_80]']
jmp ['short', 'loc_2786']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?SetProperty@CMultiMethodProps@NArchive@@QAEJPB_WABUtagPROPVARIANT@@@Z']
mov ['[ebp+var_84],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_84]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '84h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?PROPVARIANT_to_BoolPair@N7z@NArchive@@YGJABUtagPROPVARIANT@@AAUCBoolPair@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2836']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_283F']
mov ['edx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[edx+1],', '1']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetProperties@CHandler@N7z@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetProperties@CHandler@N7z@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_14],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1D0h']
call ['?Clear@?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEXXZ']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?InitProps@COutHandler@N7z@NArchive@@QAEXXZ']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_28C6']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['loc_2B59']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_9C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_28]']
call ['?MakeLower_Ascii@UString@@QAEXXZ']
lea ['ecx,', '[ebp+var_28]']
call ['?IsEmpty@UString@@QBE_NXZ']
mov ['[ebp+var_9D],', 'al']
movzx ['edx,', '[ebp+var_9D]']
test ['edx,', 'edx']
jz ['short', 'loc_292A']
mov ['[ebp+var_78],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_78]']
jmp ['loc_2D3A']
mov ['eax,', '[ebp+var_18]']
shl ['eax,', '4']
add ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_30],', 'eax']
lea ['ecx,', '[ebp+var_28]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_A4],', 'eax']
mov ['ecx,', '[ebp+var_A4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '62h']
jnz ['loc_2AEF']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_297B']
mov ['[ebp+var_7C],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_7C]']
jmp ['loc_2D3A']
push ['0']
lea ['ecx,', '[ebp+var_28]']
call ['?Delete@UString@@QAEXI@Z']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
lea ['eax,', '[ebp+var_40]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
call ['?ParseBond@N7z@NArchive@@YGJAAVUString@@AAI1@Z']
mov ['[ebp+var_A8],', 'eax']
mov ['edx,', '[ebp+var_A8]']
mov ['[ebp+var_48],', 'edx']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_29C5']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_80],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_80]']
jmp ['loc_2D3A']
lea ['ecx,', '[ebp+var_28]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_AC],', 'eax']
mov ['ecx,', '[ebp+var_AC]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '3Ah']
jz ['short', 'loc_2A02']
mov ['[ebp+var_84],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_84]']
jmp ['loc_2D3A']
push ['0']
lea ['ecx,', '[ebp+var_28]']
call ['?Delete@UString@@QAEXI@Z']
mov ['[ebp+var_50],', '0']
lea ['eax,', '[ebp+var_50]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
lea ['edx,', '[ebp+var_28]']
push ['edx']
call ['?ParseBond@N7z@NArchive@@YGJAAVUString@@AAI1@Z']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0']
jz ['short', 'loc_2A59']
mov ['ecx,', '[ebp+var_58]']
mov ['[ebp+var_88],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_88]']
jmp ['loc_2D3A']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_2A80']
mov ['[ebp+var_8C],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_8C]']
jmp ['loc_2D3A']
lea ['ecx,', '[ebp+var_28]']
call ['?IsEmpty@UString@@QBE_NXZ']
mov ['[ebp+var_B1],', 'al']
movzx ['edx,', '[ebp+var_B1]']
test ['edx,', 'edx']
jnz ['short', 'loc_2ABA']
mov ['[ebp+var_90],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_90]']
jmp ['loc_2D3A']
sub ['esp,', '0Ch']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+var_40]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1D0h']
call ['?Add@?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEIUCBond2@N7z@NArchive@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
jmp ['loc_28BD']
lea ['ecx,', '[ebp+var_28]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_B8],', 'eax']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_B8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?SetProperty@COutHandler@N7z@NArchive@@QAEJPB_WABUtagPROPVARIANT@@@Z']
mov ['[ebp+var_BC],', 'eax']
mov ['ecx,', '[ebp+var_BC]']
mov ['[ebp+var_5C],', 'ecx']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_2B48']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_94],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_94]']
jmp ['loc_2D3A']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
jmp ['loc_28BD']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?GetNumEmptyMethods@CMultiMethodProps@NArchive@@QBEIXZ']
mov ['[ebp+var_C0],', 'eax']
mov ['eax,', '[ebp+var_C0]']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jbe ['loc_2C6F']
mov ['[ebp+var_64],', '0']
jmp ['short', 'loc_2B8F']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '1']
mov ['[ebp+var_64],', 'ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1D0h']
call ['?Size@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEIXZ']
mov ['[ebp+var_C4],', 'eax']
mov ['edx,', '[ebp+var_64]']
cmp ['edx,', '[ebp+var_C4]']
jnb ['short', 'loc_2BF0']
mov ['eax,', '[ebp+var_64]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1D0h']
call ['??A?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEAAUCBond2@N7z@NArchive@@I@Z']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+var_60]']
jb ['short', 'loc_2BE4']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_60]']
jnb ['short', 'loc_2BEE']
mov ['eax,', '80070057h']
jmp ['loc_2D3A']
jmp ['short', 'loc_2B86']
mov ['[ebp+var_64],', '0']
jmp ['short', 'loc_2C02']
mov ['eax,', '[ebp+var_64]']
add ['eax,', '1']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1D0h']
call ['?Size@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEIXZ']
mov ['[ebp+var_CC],', 'eax']
mov ['ecx,', '[ebp+var_64]']
cmp ['ecx,', '[ebp+var_CC]']
jnb ['short', 'loc_2C60']
mov ['edx,', '[ebp+var_64]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1D0h']
call ['??A?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEAAUCBond2@N7z@NArchive@@I@Z']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ecx+8]']
sub ['edx,', '[ebp+var_60]']
mov ['eax,', '[ebp+var_6C]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+var_60]']
mov ['eax,', '[ebp+var_6C]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_2BF9']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['?DeleteFrontal@?$CObjectVector@VCOneMethodInfo@@@@QAEXI@Z']
mov ['[ebp+var_70],', '0']
jmp ['short', 'loc_2C81']
mov ['edx,', '[ebp+var_70]']
add ['edx,', '1']
mov ['[ebp+var_70],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1D0h']
call ['?Size@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEIXZ']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_70]']
cmp ['eax,', '[ebp+var_D4]']
jnb ['short', 'loc_2D0A']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1D0h']
call ['??A?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEAAUCBond2@N7z@NArchive@@I@Z']
mov ['[ebp+var_D8],', 'eax']
mov ['edx,', '[ebp+var_D8]']
mov ['[ebp+var_74],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ']
mov ['[ebp+var_DC],', 'eax']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+var_DC]']
jnb ['short', 'loc_2CFE']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ']
mov ['[ebp+var_E0],', 'eax']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_E0]']
jb ['short', 'loc_2D05']
mov ['eax,', '80070057h']
jmp ['short', 'loc_2D3A']
jmp ['loc_2C78']
xor ['eax,', 'eax']
jmp ['short', 'loc_2D3A']
endp
__catch$?SetProperties@CHandler@N7z@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z$0 proc near
mov ['dword', 'ptr', '[ebp-98h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN34']
retn
endp
?ParseBond@N7z@NArchive@@YGJAAVUString@@AAI1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?ParseStringToUInt32@@YGIABVUString@@AAI@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_2DFA']
mov ['eax,', '80070057h']
jmp ['short', 'loc_2E4B']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?DeleteFrontal@UString@@QAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '73h']
jnz ['short', 'loc_2E49']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Delete@UString@@QAEXI@Z']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?ParseStringToUInt32@@YGIABVUString@@AAI@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2E3D']
mov ['eax,', '80070057h']
jmp ['short', 'loc_2E4B']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?DeleteFrontal@UString@@QAEXI@Z']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??4CProps@@QAEAAU0@ABU0@@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?SetHeaderMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@@Z$0 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1COneMethodInfo@@QAE@XZ']
endp
__ehhandler$?SetHeaderMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-40h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetHeaderMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetMainMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@I@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
endp
__ehhandler$?SetMainMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-84h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetMainMethod@CHandler@N7z@NArchive@@AAEJAAUCCompressionMethodMode@23@I@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$3 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-0B0h]']
jmp ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$5 proc near
lea ['ecx,', '[ebp-0C4h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$6 proc near
lea ['ecx,', '[ebp-0E4h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$7 proc near
lea ['ecx,', '[ebp-10Ch]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$8 proc near
lea ['ecx,', '[ebp-3DCh]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$9 proc near
lea ['ecx,', '[ebp-3E8h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$10 proc near
lea ['ecx,', '[ebp-128h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$11 proc near
lea ['ecx,', '[ebp-144h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$12 proc near
lea ['ecx,', '[ebp-160h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$13 proc near
lea ['ecx,', '[ebp-19Ch]']
jmp ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$14 proc near
lea ['ecx,', '[ebp-1D4h]']
jmp ['??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$15 proc near
lea ['ecx,', '[ebp-1ECh]']
jmp ['??1?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$16 proc near
lea ['ecx,', '[ebp-1F8h]']
jmp ['??1CMyComBSTR@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$17 proc near
lea ['ecx,', '[ebp-2A8h]']
jmp ['??1COutArchive@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$18 proc near
lea ['ecx,', '[ebp-394h]']
jmp ['??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$19 proc near
lea ['ecx,', '[ebp-3A0h]']
jmp ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
endp
__ehhandler$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-504h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetTime@N7z@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAA_KAA_N@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__ehhandler$?GetTime@N7z@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAA_KAA_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-34h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetTime@N7z@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAA_KAA_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetSolidFromString@COutHandler@N7z@NArchive@@AAEJABVUString@@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?SetSolidFromString@COutHandler@N7z@NArchive@@AAEJABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-5Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetSolidFromString@COutHandler@N7z@NArchive@@AAEJABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetSolidFromPROPVARIANT@COutHandler@N7z@NArchive@@AAEJABUtagPROPVARIANT@@@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?SetSolidFromPROPVARIANT@COutHandler@N7z@NArchive@@AAEJABUtagPROPVARIANT@@@Z$1 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?SetSolidFromPROPVARIANT@COutHandler@N7z@NArchive@@AAEJABUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetSolidFromPROPVARIANT@COutHandler@N7z@NArchive@@AAEJABUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetProperty@COutHandler@N7z@NArchive@@QAEJPB_WABUtagPROPVARIANT@@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?SetProperty@COutHandler@N7z@NArchive@@QAEJPB_WABUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-80h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetProperty@COutHandler@N7z@NArchive@@QAEJPB_WABUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetProperties@CHandler@N7z@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z$2 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?SetProperties@CHandler@N7z@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetProperties@CHandler@N7z@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z']
jmp ['___CxxFrameHandler3']
endp
?AddProp_Ascii@CProps@@QAEXKPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+4],', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?AddProp_Level@CMethodProps@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0Fh']
mov ['ecx,', '[ebp+var_4]']
call ['?AddProp32@CProps@@QAEXKI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddProp_NumThreads@CMethodProps@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0Dh']
mov ['ecx,', '[ebp+var_4]']
call ['?AddProp32@CProps@@QAEXKI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0COneMethodInfo@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COneMethodInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CMethodProps@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMethodProps@@QAE@XZ']
endp
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0COneMethodInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COneMethodInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COneMethodInfo@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COneMethodInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CMethodProps@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMethodProps@@QAE@XZ']
endp
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1COneMethodInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COneMethodInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCProp@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@AString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Get_Lzma_DicSize@CMethodProps@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?FindProp@CMethodProps@@QBEHK@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_36BF']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '13h']
jnz ['short', 'loc_36BF']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
mov ['eax,', '[eax+10h]']
jmp ['short', 'loc_36FD']
mov ['ecx,', '[ebp+var_4]']
call ['?GetLevel@CMethodProps@@QBEHXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '5']
jg ['short', 'loc_36E3']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+eax+0Eh]']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_36FA']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '6']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '2000000h']
add ['eax,', '2000000h']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Get_BZip2_BlockSize@CMethodProps@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?FindProp@CMethodProps@@QBEHK@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_379F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '13h']
jnz ['short', 'loc_379F']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
mov ['eax,', '[eax+10h]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '186A0h']
mov ['[ebp+var_14],', '0DBBA0h']
cmp ['[ebp+var_C],', '186A0h']
jnb ['short', 'loc_378A']
mov ['[ebp+var_C],', '186A0h']
cmp ['[ebp+var_C],', '0DBBA0h']
jbe ['short', 'loc_379A']
mov ['[ebp+var_C],', '0DBBA0h']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_37E1']
mov ['ecx,', '[ebp+var_4]']
call ['?GetLevel@CMethodProps@@QBEHXZ']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '5']
jl ['short', 'loc_37B9']
mov ['[ebp+var_1C],', '9']
jmp ['short', 'loc_37D8']
cmp ['[ebp+var_18],', '1']
jl ['short', 'loc_37CB']
mov ['ecx,', '[ebp+var_18]']
lea ['edx,', '[ecx+ecx-1]']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_37D2']
mov ['[ebp+var_20],', '1']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
imul ['eax,', '186A0h']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Get_Ppmd_MemSize@CMethodProps@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['2']
mov ['ecx,', '[ebp+var_4]']
call ['?FindProp@CMethodProps@@QBEHK@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_3843']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '13h']
jnz ['short', 'loc_3843']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
mov ['eax,', '[eax+10h]']
jmp ['short', 'loc_3870']
mov ['ecx,', '[ebp+var_4]']
call ['?GetLevel@CMethodProps@@QBEHXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '9']
jl ['short', 'loc_385D']
mov ['[ebp+var_10],', '0C000000h']
jmp ['short', 'loc_386D']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '13h']
mov ['eax,', '1']
shl ['eax,', 'cl']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetLevel@CMultiMethodProps@NArchive@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jnz ['short', 'loc_38A8']
mov ['[ebp+var_8],', '5']
jmp ['short', 'loc_38B0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyComBSTR@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMyComBSTR@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SysFreeString@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??ICMyComBSTR@@QAEPAPA_WXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BCMyComBSTR@@QBEPB_WXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetAnalysisLevel@CMultiMethodProps@NArchive@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+19h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+1Ch],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+20h],', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+21h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?IntToBool@@YG_NH@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0']
setnz ['al']
pop ['ebp']
retn ['4']
endp
?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_3B32']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3B32']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@_K@@QBEAB_KI@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['eax,', '[eax+4]']
mov ['[ecx+4],', 'eax']
mov ['al,', '1']
jmp ['short', 'loc_3B44']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['dword', 'ptr', '[ecx+4],', '0']
xor ['al,', 'al']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C4h']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_3BA0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C4h']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3BA0']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_3BA7']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0COutArchive@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COutArchive@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??0CWriteBufferLoc@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
push ['10000h']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['?Create@COutBuffer@@QAE_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COutArchive@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1COutBuffer@@QAE@XZ']
endp
__unwindfunclet$??0COutArchive@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '50h']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$??0COutArchive@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COutArchive@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CWriteBufferLoc@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CUpdateItem@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+3Ah],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+3Bh],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+3Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+3Dh],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+3Eh],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+3Fh],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetDirStatusFromAttrib@CUpdateItem@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+34h]']
and ['ecx,', '10h']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+3Bh],', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CUpdateOptions@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+9],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0CHeaderOptions@N7z@NArchive@@QAE@XZ']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '0FFFFFFFFh']
mov ['dword', 'ptr', '[edx+1Ch],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0FFFFFFFFh']
mov ['dword', 'ptr', '[eax+24h],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+28h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+29h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+2Ah],', '1']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CHeaderOptions@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CUpdateItem@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCompressionMethodMode@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1COutArchive@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COutArchive@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1COutBuffer@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COutArchive@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1COutBuffer@@QAE@XZ']
endp
__unwindfunclet$??1COutArchive@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '50h']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$??1COutArchive@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COutArchive@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0COutFolders@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??0?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??0?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '90h']
call ['??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0A8h']
call ['??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0C0h']
call ['??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0D8h']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1COutFolders@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '3Ch']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '54h']
jmp ['??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '60h']
jmp ['??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '6Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '78h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '90h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0A8h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$9 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0C0h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CUInt64DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '9']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0D8h']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0C0h']
call ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0A8h']
call ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '90h']
call ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1COutFolders@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1COutFolders@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '3Ch']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '54h']
jmp ['??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '60h']
jmp ['??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '6Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '78h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '90h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0A8h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ$9 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0C0h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArchiveDatabaseOut@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0COutFolders@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COutFolders@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COutFolders@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0COutFolders@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??0COutFolders@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COutFolders@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1COutFolders@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COutFolders@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COutFolders@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1COutFolders@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??1COutFolders@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COutFolders@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CUInt64DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Init@CBoolPair@@QAEXXZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InitSolid@COutHandler@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?InitSolidFiles@COutHandler@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?InitSolidSize@COutHandler@N7z@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+61h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+60h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InitSolidFiles@COutHandler@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+50h],', '0FFFFFFFFh']
mov ['dword', 'ptr', '[eax+54h],', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InitSolidSize@COutHandler@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+58h],', '0FFFFFFFFh']
mov ['dword', 'ptr', '[eax+5Ch],', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MakeLower_Ascii@UString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?MyStringLower_Ascii@@YGXPA_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEqualTo@UString@@QBE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?StringsAreEqual_Ascii@@YG_NPB_WPBD@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetNumEmptyMethods@CMultiMethodProps@NArchive@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_4A71']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_4AA2']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['??A?$CObjectVector@VCOneMethodInfo@@@@QBEABVCOneMethodInfo@@I@Z']
mov ['ecx,', 'eax']
call ['?IsEmpty@COneMethodInfo@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_4AA0']
jmp ['short', 'loc_4AA2']
jmp ['short', 'loc_4A68']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@COneMethodInfo@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4AF5']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CObjectVector@UCProp@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4AF5']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_4AFC']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4BCA']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_4BC1']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4BC8']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_4B86']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?IsEmpty@?$CObjectVector@UCProp@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_4CDF']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_4D71']
mov ['ecx,', '[ebp+var_10]']
call ['?Clear@?$CObjectVector@UCProp@@@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCProp@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Reserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_4D10']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_4D6E']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_4D4C']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CProp@@QAE@ABU0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_4D53']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_4D07']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCProp@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_4E93']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CProp@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4E9A']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4FF2']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_4FE9']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4FF0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_4FAE']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@UCProp@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_50D8']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_50CF']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_50D6']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_5094']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CObjectVector@VCOneMethodInfo@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VCOneMethodInfo@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$CObjectVector@VCOneMethodInfo@@@@QAE@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VCOneMethodInfo@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_51AF']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_5207']
push ['24h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_51E8']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@VCOneMethodInfo@@@@QBEABVCOneMethodInfo@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0COneMethodInfo@@QAE@ABV0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_51EF']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_51A6']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$CObjectVector@VCOneMethodInfo@@@@QAE@ABV0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__unwindfunclet$??0?$CObjectVector@VCOneMethodInfo@@@@QAE@ABV0@@Z$1 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0?$CObjectVector@VCOneMethodInfo@@@@QAE@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$CObjectVector@VCOneMethodInfo@@@@QAE@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??A?$CObjectVector@VCOneMethodInfo@@@@QBEABVCOneMethodInfo@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNew@?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['24h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_534B']
mov ['ecx,', '[ebp+var_1C]']
call ['??0COneMethodInfo@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_5352']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@VCOneMethodInfo@@@@QAEAAVCOneMethodInfo@@XZ']
jmp ['___CxxFrameHandler3']
endp
?Insert@?$CObjectVector@VCOneMethodInfo@@@@QAEXIABVCOneMethodInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Insert@?$CObjectVector@VCOneMethodInfo@@@@QAEXIABVCOneMethodInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['24h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5448']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0COneMethodInfo@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_544F']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?Insert@?$CObjectVector@VCOneMethodInfo@@@@QAEXIABVCOneMethodInfo@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Insert@?$CObjectVector@VCOneMethodInfo@@@@QAEXIABVCOneMethodInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Insert@?$CObjectVector@VCOneMethodInfo@@@@QAEXIABVCOneMethodInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_556E']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5565']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCOneMethodInfo@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_556C']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_552A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?DeleteFrontal@?$CObjectVector@VCOneMethodInfo@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_5617']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_5654']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_564B']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCOneMethodInfo@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_5652']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_560E']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?DeleteFrontal@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AddNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_56FB']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CMethodFull@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_5702']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAEAAUCMethodFull@N7z@NArchive@@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_5826']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_581D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCMethodFull@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_5824']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_57E2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCMethodFull@N7z@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_596E']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_5A12']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@UCBond2@N7z@NArchive@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jbe ['short', 'loc_59E5']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '0Ch']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5A0F']
mov ['eax,', '[ebp+var_8]']
imul ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEIUCBond2@N7z@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@UCBond2@N7z@NArchive@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??A?$CRecordVector@UCBond2@N7z@NArchive@@@@QAEAAUCBond2@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_N@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@_N@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@_N@@QBEAB_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@_K@@QBEAB_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEABUCFileItem@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5DBE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_5E8A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5E81']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCFolder@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_5E88']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_5E46']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCFolder@N7z@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CMyComPtr@UIOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5F56']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAEIABUCUpdateItem@N7z@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAEIABUCUpdateItem@N7z@NArchive@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['40h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5FF4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CUpdateItem@N7z@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_5FFB']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAEIABUCUpdateItem@N7z@NArchive@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAEIABUCUpdateItem@N7z@NArchive@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAEIABUCUpdateItem@N7z@NArchive@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_6116']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_610D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCUpdateItem@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_6114']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_60D2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?ClearAndFree@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndFree@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_620E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICryptoGetTextPassword2@@@@QBEPAUICryptoGetTextPassword2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICryptoGetTextPassword2@@@@QAEPAPAUICryptoGetTextPassword2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICryptoGetTextPassword2@@@@QBEPAUICryptoGetTextPassword2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_62BA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GUString@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6326']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CProp@@QAE@ABU0@@Z proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+4]']
mov ['[eax+4],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CPropVariant@NCOM@NWindows@@QAE@ABV012@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCProp@@QAEPAXI@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_63B2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0COneMethodInfo@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COneMethodInfo@@QAE@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0CMethodProps@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0AString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '18h']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0COneMethodInfo@@QAE@ABV0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMethodProps@@QAE@XZ']
endp
__unwindfunclet$??0COneMethodInfo@@QAE@ABV0@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0COneMethodInfo@@QAE@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COneMethodInfo@@QAE@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??_GCOneMethodInfo@@QAEPAXI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COneMethodInfo@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_64E6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMethodFull@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CMethodProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCMethodFull@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMethodFull@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_654E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_H@YGXPAXIHP6EPAX0@Z@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
js ['short', 'loc_658D']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_6568']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
??_GCFolder@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFolder@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_65C6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CUpdateItem@N7z@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[eax+14h]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[ecx+18h],', 'eax']
mov ['edx,', '[edx+1Ch]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ecx+24h]']
mov ['[eax+24h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '28h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??0UString@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['[eax+34h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+38h]']
mov ['[eax+38h],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+39h]']
mov ['[eax+39h],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+3Ah]']
mov ['[eax+3Ah],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+3Bh]']
mov ['[eax+3Bh],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+3Ch]']
mov ['[eax+3Ch],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+3Dh]']
mov ['[eax+3Dh],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+3Eh]']
mov ['[eax+3Eh],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+3Fh]']
mov ['[eax+3Fh],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCUpdateItem@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CUpdateItem@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6706']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMethodProps@@QAE@ABV0@@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@ABU0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CMethodFull@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMethodProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFolder@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CFolder@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1?$CObjArray2@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CFolder@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CFolder@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??1CFolder@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CFolder@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_68B1']
push ['3']
mov ['ecx,', '[ebp+var_8]']
call ['??_ECCoderInfo@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_68B8']
mov ['[ebp+var_10],', '0']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray2@UCBond@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray2@I@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_ECCoderInfo@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_698C']
push ['offset', '??1CCoderInfo@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx-4]']
push ['edx']
push ['18h']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1']
jz ['short', 'loc_6984']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '4']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '4']
jmp ['short', 'loc_69AB']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCoderInfo@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_69A8']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCoderInfo@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CBuffer@E@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProps@@QAE@ABU0@@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6B09']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Reserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_6BB0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_6B8B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndFree@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteFrontal@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6CA1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@PAX@@AAEXII@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@PAX@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCProp@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_6E53']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_6EAB']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6E8C']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CProp@@QAE@ABU0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_6E93']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_6E4A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__unwindfunclet$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z$1 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
?ReserveOnePosition@?$CRecordVector@UCBond2@N7z@NArchive@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_6FE8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '0Ch']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_6FC3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
imul ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CObjectVector@UCUpdateItem@N7z@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7064']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_705B']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCUpdateItem@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_7062']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_7020']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_7188']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_7163']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

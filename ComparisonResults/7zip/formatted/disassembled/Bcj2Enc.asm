_Bcj2Enc_Init@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+28h],', '5']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+2Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+30h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+31h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+34h],', '0FFFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+38h],', '0']
mov ['dword', 'ptr', '[edx+3Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+40h],', '1']
mov ['dword', 'ptr', '[eax+44h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+48h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+54h],', '4000000h']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+5Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+68h],', '0']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_A7']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '102h']
jnb ['short', 'loc_C2']
mov ['edx,', '400h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*2+6Ch],', 'dx']
jmp ['short', 'loc_9E']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_Bcj2Enc_Encode@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+5Ch],', '0']
jz ['loc_22C']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+20h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+60h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+24h],', 'eax']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_C]']
jz ['short', 'loc_146']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_Bcj2Enc_Encode_2@4']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '60h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
sub ['ecx,', 'edx']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+5Ch]']
sub ['eax,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+5Ch],', 'edx']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_187']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_18]']
jnb ['short', 'loc_1A7']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+edx+60h]']
mov ['[eax+60h],', 'dl']
jmp ['short', 'loc_17E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+24h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+2Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '4']
jnz ['short', 'loc_1D3']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_C]']
jnz ['short', 'loc_1D8']
jmp ['loc_295']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+var_18]']
jb ['short', 'loc_1F8']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+5Ch],', '0']
jmp ['short', 'loc_22C']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax+60h],', 'dl']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+5Ch],', 'eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['loc_FA']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_Bcj2Enc_Encode_2@4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '4']
jnz ['short', 'loc_295']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
sub ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_265']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_24]']
jnb ['short', 'loc_280']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ebp+var_28]']
mov ['al,', '[edx]']
mov ['[ecx+60h],', 'al']
jmp ['short', 'loc_25C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_24]']
mov ['[ecx+5Ch],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_Bcj2Enc_Encode_2@4 proc near           
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
push ['edi']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '1']
jz ['short', 'loc_2D8']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+28h],', '2']
jnz ['short', 'loc_31D']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[edx+ecx*4+10h]']
jnz ['short', 'loc_2FE']
jmp ['loc_71C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
bswap ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+eax*4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+28h],', '4']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+34h],', '1000000h']
jnb ['short', 'loc_353']
mov ['ecx,', '[ebp+arg_0]']
call ['@RangeEnc_ShiftLow@4']
test ['eax,', 'eax']
jz ['short', 'loc_344']
jmp ['loc_71C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
sub ['edx,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jnz ['short', 'loc_387']
cmp ['[ebp+var_14],', '4']
ja ['short', 'loc_37C']
jmp ['loc_71C']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '4']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_392']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_392']
jmp ['loc_6DD']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
sub ['edx,', '[ebp+var_10]']
cmp ['[ebp+var_14],', 'edx']
jbe ['short', 'loc_3C5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jnz ['short', 'loc_3C5']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+28h],', '0']
jmp ['loc_71C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+30h]']
cmp ['edx,', '0Fh']
jnz ['short', 'loc_3FD']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '0F0h']
cmp ['ecx,', '80h']
jnz ['short', 'loc_3FD']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['[edx],', 'cl']
jmp ['loc_489']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[edx]']
mov ['[ebp+var_15],', 'al']
mov ['ecx,', '[ebp+var_10]']
mov ['dl,', '[ebp+var_15]']
mov ['[ecx],', 'dl']
movzx ['eax,', '[ebp+var_15]']
cmp ['eax,', '0Fh']
jz ['short', 'loc_448']
movzx ['ecx,', '[ebp+var_15]']
and ['ecx,', '0FEh']
cmp ['ecx,', '0E8h']
jnz ['short', 'loc_42A']
jmp ['short', 'loc_489']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_C]']
jz ['short', 'loc_446']
jmp ['short', 'loc_3FD']
jmp ['short', 'loc_489']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_C]']
jnz ['short', 'loc_464']
jmp ['short', 'loc_489']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
and ['eax,', '0F0h']
cmp ['eax,', '80h']
jz ['short', 'loc_478']
jmp ['short', 'loc_3FD']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[edx]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_489']
jmp ['loc_3FD']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '[ecx+20h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_C]']
jnz ['short', 'loc_4CE']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[edx-1]']
mov ['[ecx+30h],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+48h]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+48h],', 'eax']
jmp ['loc_327']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_4E0']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+30h]']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_4EA']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx-1]']
mov ['[ebp+var_44],', 'edx']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ebp+var_16],', 'al']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+48h]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[edx+ecx+1]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+48h],', 'eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
sub ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '4']
jb ['short', 'loc_572']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+50h],', '0']
jz ['short', 'loc_558']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+48h]']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[eax+ecx+4]']
mov ['eax,', '[ebp+arg_0]']
sub ['edx,', '[eax+4Ch]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+50h]']
jnb ['short', 'loc_572']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[edx+54h]']
shr ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', '[ecx+54h]']
jnb ['short', 'loc_572']
mov ['[ebp+var_1C],', '1']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[edx-1]']
mov ['[ebp+var_29],', 'al']
movzx ['ecx,', '[ebp+var_29]']
cmp ['ecx,', '0E8h']
jnz ['short', 'loc_593']
movzx ['edx,', '[ebp+var_16]']
add ['edx,', '2']
mov ['[ebp+var_48],', 'edx']
jmp ['short', 'loc_5A4']
movzx ['eax,', '[ebp+var_29]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0E9h']
setz ['cl']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*2+6Ch]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'word', 'ptr', '[edx]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
shr ['edx,', '0Bh']
imul ['edx,', '[ebp+var_28]']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_604']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '800h']
sub ['edx,', '[ebp+var_28]']
shr ['edx,', '5']
add ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_30]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_29]']
mov ['[eax+30h],', 'cl']
jmp ['loc_327']
mov ['edx,', '[ebp+var_24]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+38h]']
adc ['eax,', '[ecx+3Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+38h],', 'edx']
mov ['[ecx+3Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
sub ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+var_28]']
shr ['edx,', '5']
mov ['eax,', '[ebp+var_28]']
sub ['eax,', 'edx']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+48h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+48h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+48h]']
add ['edx,', '[ebp+var_34]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx+3]']
mov ['[eax+30h],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
movzx ['eax,', '[ebp+var_29]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0E8h']
setnz ['cl']
add ['ecx,', '1']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_40]']
cmp ['ecx,', '[eax+edx*4+10h]']
jnz ['short', 'loc_6BF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_3C]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_38]']
mov ['[ecx+58h],', 'edx']
jmp ['short', 'loc_71C']
mov ['eax,', '[ebp+var_38]']
bswap ['eax']
mov ['ecx,', '[ebp+var_40]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_40]']
add ['edx,', '4']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*4],', 'edx']
jmp ['loc_327']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+2Ch],', '2']
jz ['short', 'loc_6E8']
jmp ['short', 'loc_71C']
jmp ['short', 'loc_6F9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+68h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+68h],', '5']
jnb ['short', 'loc_712']
mov ['ecx,', '[ebp+arg_0]']
call ['@RangeEnc_ShiftLow@4']
test ['eax,', 'eax']
jz ['short', 'loc_710']
jmp ['short', 'loc_71C']
jmp ['short', 'loc_6EA']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+28h],', '5']
pop ['edi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
@RangeEnc_ShiftLow@4 proc near          
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['ebx']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+38h],', '0FF000000h']
jb ['short', 'loc_76F']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+38h]']
mov ['edx,', '[ecx+3Ch]']
mov ['cl,', '20h']
call ['__aullshr']
test ['eax,', 'eax']
jz ['loc_819']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+1Ch]']
jnz ['short', 'loc_7A0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+28h],', '3']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '1']
jmp ['loc_847']
mov ['eax,', '[ebp+var_4]']
movzx ['ebx,', 'byte', 'ptr', '[eax+31h]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+38h]']
mov ['edx,', '[ecx+3Ch]']
mov ['cl,', '20h']
call ['__aullshr']
movzx ['edx,', 'al']
add ['ebx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax],', 'bl']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+31h],', '0FFh']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+40h]']
sub ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[eax+44h]']
sbb ['edx,', '0']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+40h],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[eax+44h],', 'edx']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '[ebp+var_C]']
jnz ['loc_778']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
shr ['ecx,', '18h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+31h],', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+40h]']
add ['ecx,', '1']
mov ['edx,', '[eax+44h]']
adc ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+40h],', 'ecx']
mov ['[eax+44h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
shl ['edx,', '8']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+38h],', 'edx']
mov ['[ecx+3Ch],', 'eax']
xor ['eax,', 'eax']
pop ['ebx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

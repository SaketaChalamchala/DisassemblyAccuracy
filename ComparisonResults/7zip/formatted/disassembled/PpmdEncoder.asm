?Normalize@CEncProps@NPpmd@NCompress@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_36']
mov ['[ebp+arg_0],', '5']
cmp ['[ebp+arg_0],', '9']
jle ['short', 'loc_43']
mov ['[ebp+arg_0],', '9']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jnz ['short', 'loc_72']
cmp ['[ebp+arg_0],', '9']
jl ['short', 'loc_5A']
mov ['[ebp+var_14],', '0C000000h']
jmp ['short', 'loc_6A']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '13h']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['[ebp+var_8],', '10h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
shr ['eax,', '4']
mov ['ecx,', '[ebp+var_4]']
cmp ['eax,', '[ecx+4]']
jbe ['short', 'loc_D2']
mov ['[ebp+var_C],', '10h']
jmp ['short', 'loc_9B']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '1Fh']
ja ['short', 'loc_D2']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_C]']
shl ['eax,', 'cl']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
shr ['ecx,', '4']
mov ['edx,', '[ebp+var_4]']
cmp ['[edx+4],', 'ecx']
ja ['short', 'loc_D0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_10]']
jbe ['short', 'loc_CE']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_D2']
jmp ['short', 'loc_92']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+8],', '0FFFFFFFFh']
jnz ['short', 'loc_EB']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', '_kOrders[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CEncoder@NPpmd@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CEncoder@NPpmd@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0ICompressSetCoderProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0ICompressWriteCoderProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CEncoder@NPpmd@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CEncoder@NPpmd@NCompress@@6BICompressSetCoderProperties@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CEncoder@NPpmd@NCompress@@6BICompressWriteCoderProperties@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0CByteOutBufWrap@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4B2Ch']
call ['??0CEncProps@NPpmd@NCompress@@QAE@XZ']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4B2Ch']
call ['?Normalize@CEncProps@NPpmd@NCompress@@QAEXH@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+58h],', 'ecx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '60h']
push ['eax']
call ['_Ppmd7_Construct@4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CEncoder@NPpmd@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CEncoder@NPpmd@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CEncoder@NPpmd@NCompress@@6BICompressSetCoderProperties@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CEncoder@NPpmd@NCompress@@6BICompressWriteCoderProperties@@@']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_MidFree@4']
push ['offset', '_g_BigAlloc']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '60h']
push ['edx']
call ['_Ppmd7_Free@8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??1CByteOutBufWrap@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetCoderProperties@CEncoder@NPpmd@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??0CEncProps@NPpmd@NCompress@@QAE@XZ']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_293']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['loc_391']
mov ['edx,', '[ebp+var_1C]']
shl ['edx,', '4']
add ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '10h']
jbe ['short', 'loc_2BF']
jmp ['short', 'loc_28A']
cmp ['[ebp+var_24],', '10h']
jnz ['short', 'loc_2F5']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '15h']
jnz ['short', 'loc_2F3']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
ja ['short', 'loc_2F3']
jb ['short', 'loc_2EA']
mov ['ecx,', '[ebp+var_2C]']
cmp ['dword', 'ptr', '[ecx+8],', '0FFFFFFFFh']
jnb ['short', 'loc_2F3']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_28A']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '13h']
jz ['short', 'loc_30A']
mov ['eax,', '80070057h']
jmp ['loc_3B9']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '2']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0Dh']
ja ['short', '$LN1']
mov ['ecx,', '[ebp+var_30]']
movzx ['edx,', 'ds:$LN22[ecx]']
jmp ['ds:$LN26[edx*4]']
cmp ['[ebp+var_28],', '10000h']
jb ['short', 'loc_350']
cmp ['[ebp+var_28],', '0FFFFFFDBh']
ja ['short', 'loc_350']
mov ['eax,', '[ebp+var_28]']
and ['eax,', '3']
jz ['short', 'loc_357']
mov ['eax,', '80070057h']
jmp ['short', 'loc_3B9']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_38C']
cmp ['[ebp+var_28],', '2']
jb ['short', 'loc_36B']
cmp ['[ebp+var_28],', '20h']
jbe ['short', 'loc_372']
mov ['eax,', '80070057h']
jmp ['short', 'loc_3B9']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_28]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_38C']
jmp ['short', 'loc_38C']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_38C']
mov ['eax,', '80070057h']
jmp ['short', 'loc_3B9']
jmp ['loc_28A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_14]']
call ['?Normalize@CEncProps@NPpmd@NCompress@@QAEXH@Z']
mov ['edx,', '[ebp+this]']
add ['edx,', '4B28h']
mov ['eax,', '[ebp+var_14]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?WriteCoderProperties@CEncoder@NPpmd@NCompress@@UAGJPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '5']
mov ['eax,', '[ebp+this]']
mov ['cl,', '[eax+4B2Ch]']
mov ['byte', 'ptr', '[ebp+var_14],', 'cl']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+4B24h]']
mov ['[ebp+var_14+1],', 'eax']
push ['5']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Code@CEncoder@NPpmd@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_4FF']
push ['100000h']
call ['_MidAlloc@4']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+10h],', '0']
jnz ['short', 'loc_4FF']
mov ['eax,', '8007000Eh']
jmp ['loc_692']
push ['100000h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Alloc@CByteOutBufWrap@@QAE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_520']
mov ['eax,', '8007000Eh']
jmp ['loc_692']
push ['offset', '_g_BigAlloc']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4B2Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '60h']
push ['eax']
call ['_Ppmd7_Alloc@12']
test ['eax,', 'eax']
jnz ['short', 'loc_549']
mov ['eax,', '8007000Eh']
jmp ['loc_692']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+2Ch],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Init@CByteOutBufWrap@@QAEXXZ']
mov ['eax,', '[ebp+this]']
add ['eax,', '40h']
push ['eax']
call ['_Ppmd7z_RangeEnc_Init@4']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4B34h]']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '60h']
push ['eax']
call ['_Ppmd7_Init@8']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_8],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
push ['100000h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_5C5']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_692']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_5E7']
mov ['edx,', '[ebp+this]']
add ['edx,', '40h']
push ['edx']
call ['_Ppmd7z_RangeEnc_FlushData@4']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Flush@CByteOutBufWrap@@QAEJXZ']
jmp ['loc_692']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_5F9']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[ebp+var_18]']
jnb ['short', 'loc_638']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
mov ['ecx,', '[ebp+var_24]']
movzx ['edx,', 'byte', 'ptr', '[eax+ecx]']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '40h']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '60h']
push ['ecx']
call ['_Ppmd7_EncodeSymbol@12']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+38h]']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_636']
mov ['eax,', '[ebp+var_28]']
jmp ['short', 'loc_692']
jmp ['short', 'loc_5F0']
mov ['ecx,', '[ebp+var_18]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_C]']
adc ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_68D']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?GetProcessed@CByteOutBufWrap@@QBE_KXZ']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_30],', 'edx']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_34]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_68D']
mov ['eax,', '[ebp+var_3C]']
jmp ['short', 'loc_692']
jmp ['loc_58D']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
__unwindfunclet$??0CEncoder@NPpmd@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1CByteOutBufWrap@@QAE@XZ']
endp
__ehhandler$??0CEncoder@NPpmd@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CEncoder@NPpmd@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CByteOutBufWrap@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CByteOutBufWrap@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CEncProps@NPpmd@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CEncoder@NPpmd@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_B7C']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_B6B']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_B72']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_BEB']
push ['offset', '_IID_ICompressSetCoderProperties']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_BB0']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_B9F']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_BA6']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_BEB']
push ['offset', '_IID_ICompressWriteCoderProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_BE4']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_BD3']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_BDA']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_BEB']
mov ['eax,', '80004002h']
jmp ['short', 'loc_BFC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+0Ch],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CEncoder@NPpmd@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?Release@CEncoder@NPpmd@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_CB6']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+0Ch]']
jmp ['short', 'loc_CE0']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_CD7']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCEncoder@NPpmd@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_CDE']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCEncoder@NPpmd@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CEncoder@NPpmd@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_D1A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetCoderProperties@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetCoderProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressWriteCoderProperties@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressWriteCoderProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CByteOutBufWrap@@QAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessed@CByteOutBufWrap@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
sub ['eax,', '[ecx+0Ch]']
cdq
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+18h]']
adc ['edx,', '[ecx+1Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@CEncoder@NPpmd@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CEncoder@NPpmd@NCompress@@UAGKXZ']
endp
?Release@CEncoder@NPpmd@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CEncoder@NPpmd@NCompress@@UAGKXZ']
endp
?AddRef@CEncoder@NPpmd@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CEncoder@NPpmd@NCompress@@UAGKXZ']
endp
?AddRef@CEncoder@NPpmd@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CEncoder@NPpmd@NCompress@@UAGKXZ']
endp
?QueryInterface@CEncoder@NPpmd@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CEncoder@NPpmd@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CEncoder@NPpmd@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CEncoder@NPpmd@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp

_Ppmd8_RangeDec_Init@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+48h],', '0FFFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4Ch],', '0']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_3D']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '4']
jnb ['short', 'loc_73']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', '[ecx+4Ch]']
shl ['esi,', '8']
mov ['edi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+54h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
or ['esi,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4Ch],', 'esi']
jmp ['short', 'loc_34']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4Ch],', '0FFFFFFFFh']
sbb ['eax,', 'eax']
neg ['eax']
pop ['edi']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_Ppmd8_DecodeSymbol@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '578h']
push ['edi']
lea ['edi,', '[ebp+var_578]']
mov ['ecx,', '15Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['loc_34B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_110],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_RangeDec_GetThreshold@8']
mov ['[ebp+var_118],', 'eax']
mov ['ecx,', '[ebp+var_110]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
mov ['[ebp+var_11C],', 'edx']
mov ['eax,', '[ebp+var_118]']
cmp ['eax,', '[ebp+var_11C]']
jnb ['short', 'loc_150']
mov ['ecx,', '[ebp+var_110]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_RangeDec_Decode@12']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_110]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_110]']
mov ['cl,', '[eax]']
mov ['[ebp+var_11D],', 'cl']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_Ppmd8_Update1_0@4']
movzx ['eax,', '[ebp+var_11D]']
jmp ['loc_887']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_114],', 'eax']
mov ['ecx,', '[ebp+var_110]']
add ['ecx,', '6']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_110]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
add ['eax,', '[ebp+var_11C]']
mov ['[ebp+var_11C],', 'eax']
mov ['ecx,', '[ebp+var_11C]']
cmp ['ecx,', '[ebp+var_118]']
jbe ['short', 'loc_1F1']
mov ['edx,', '[ebp+var_110]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
push ['eax']
mov ['ecx,', '[ebp+var_110]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
mov ['eax,', '[ebp+var_11C]']
sub ['eax,', 'edx']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_RangeDec_Decode@12']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_110]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_110]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_11E],', 'dl']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Ppmd8_Update1@4']
movzx ['eax,', '[ebp+var_11E]']
jmp ['loc_887']
mov ['ecx,', '[ebp+var_114]']
sub ['ecx,', '1']
mov ['[ebp+var_114],', 'ecx']
jnz ['loc_168']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
cmp ['[ebp+var_118],', 'ecx']
jb ['short', 'loc_221']
mov ['eax,', '0FFFFFFFEh']
jmp ['loc_887']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
sub ['ecx,', '[ebp+var_11C]']
push ['ecx']
mov ['edx,', '[ebp+var_11C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_RangeDec_Decode@12']
mov ['[ebp+var_124],', '0']
jmp ['short', 'loc_25C']
mov ['ecx,', '[ebp+var_124]']
add ['ecx,', '8']
mov ['[ebp+var_124],', 'ecx']
cmp ['[ebp+var_124],', '40h']
jnb ['loc_2F6']
mov ['edx,', '[ebp+var_124]']
mov ['[ebp+edx*4+var_108],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+eax*4+var_104],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_124]']
mov ['[ebp+ecx*4+var_100],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_124]']
mov ['[ebp+edx*4+var_FC],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+eax*4+var_F8],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_124]']
mov ['[ebp+ecx*4+var_F4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_124]']
mov ['[ebp+edx*4+var_F0],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+eax*4+var_EC],', '0FFFFFFFFh']
jmp ['loc_24D']
mov ['ecx,', '[ebp+var_110]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['byte', 'ptr', '[ebp+edx+var_108],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_114],', 'edx']
mov ['eax,', '[ebp+var_110]']
sub ['eax,', '6']
mov ['[ebp+var_110],', 'eax']
mov ['ecx,', '[ebp+var_110]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['byte', 'ptr', '[ebp+edx+var_108],', '0']
mov ['eax,', '[ebp+var_114]']
sub ['eax,', '1']
mov ['[ebp+var_114],', 'eax']
jnz ['short', 'loc_315']
jmp ['loc_58B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+32Fh]']
shl ['edx,', '7']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+1038h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['edx,', '[eax+8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax+230h]']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+14h]']
mov ['edx,', '[ebp+arg_0]']
mov ['edx,', '[edx]']
movzx ['edx,', 'byte', 'ptr', '[edx+1]']
add ['eax,', 'edx']
mov ['edx,', '[ebp+arg_0]']
mov ['edx,', '[edx+1Ch]']
sar ['edx,', '1Ah']
and ['edx,', '20h']
add ['eax,', 'edx']
lea ['eax,', '[ecx+eax*2]']
mov ['[ebp+var_128],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+48h]']
shr ['edx,', '0Eh']
mov ['[ebp+var_570],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_570]']
mov ['[eax+48h],', 'ecx']
mov ['edx,', '[ebp+var_128]']
movzx ['ecx,', 'word', 'ptr', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
xor ['edx,', 'edx']
div ['[ebp+var_570]']
cmp ['eax,', 'ecx']
jnb ['short', 'loc_45B']
mov ['eax,', '[ebp+var_128]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_RangeDec_Decode@12']
mov ['eax,', '[ebp+var_128]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
add ['ecx,', '80h']
mov ['edx,', '[ebp+var_128]']
movzx ['eax,', 'word', 'ptr', '[edx]']
add ['eax,', '20h']
sar ['eax,', '7']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+var_128]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '2']
mov ['[ebp+var_574],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_574]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_574]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_129],', 'dl']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Ppmd8_UpdateBin@4']
movzx ['eax,', '[ebp+var_129]']
jmp ['loc_887']
mov ['ecx,', '[ebp+var_128]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '4000h']
sub ['eax,', 'edx']
push ['eax']
mov ['ecx,', '[ebp+var_128]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_RangeDec_Decode@12']
mov ['ecx,', '[ebp+var_128]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_128]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
add ['ecx,', '20h']
sar ['ecx,', '7']
sub ['edx,', 'ecx']
mov ['eax,', '[ebp+var_128]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+var_128]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
sar ['edx,', '0Ah']
movzx ['eax,', 'byte', 'ptr', 'ds:_PPMD8_kExpEscape[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ebp+var_130],', '0']
jmp ['short', 'loc_4D6']
mov ['edx,', '[ebp+var_130]']
add ['edx,', '8']
mov ['[ebp+var_130],', 'edx']
cmp ['[ebp+var_130],', '40h']
jnb ['loc_570']
mov ['eax,', '[ebp+var_130]']
mov ['[ebp+eax*4+var_108],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+ecx*4+var_104],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_130]']
mov ['[ebp+edx*4+var_100],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_130]']
mov ['[ebp+eax*4+var_FC],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+ecx*4+var_F8],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_130]']
mov ['[ebp+edx*4+var_F4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_130]']
mov ['[ebp+eax*4+var_F0],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+ecx*4+var_EC],', '0FFFFFFFFh']
jmp ['loc_4C7']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
mov ['byte', 'ptr', '[ebp+ecx+var_108],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_560],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jnz ['short', 'loc_5BB']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_887']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '[ebp+var_560]']
jz ['short', 'loc_599']
mov ['[ebp+var_550],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_53C],', 'edx']
mov ['[ebp+var_558],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
sub ['edx,', '[ebp+var_560]']
mov ['[ebp+var_55C],', 'edx']
mov ['eax,', '[ebp+var_53C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ebp+ecx+var_108]']
mov ['[ebp+var_564],', 'edx']
mov ['eax,', '[ebp+var_53C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
and ['ecx,', '[ebp+var_564]']
add ['ecx,', '[ebp+var_550]']
mov ['[ebp+var_550],', 'ecx']
mov ['edx,', '[ebp+var_558]']
mov ['eax,', '[ebp+var_53C]']
mov ['[ebp+edx*4+var_534],', 'eax']
mov ['ecx,', '[ebp+var_53C]']
add ['ecx,', '6']
mov ['[ebp+var_53C],', 'ecx']
mov ['edx,', '[ebp+var_558]']
sub ['edx,', '[ebp+var_564]']
mov ['[ebp+var_558],', 'edx']
mov ['eax,', '[ebp+var_558]']
cmp ['eax,', '[ebp+var_55C]']
jnz ['short', 'loc_60E']
lea ['ecx,', '[ebp+var_544]']
push ['ecx']
mov ['edx,', '[ebp+var_560]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Ppmd8_MakeEscFreq@12']
mov ['[ebp+var_554],', 'eax']
mov ['ecx,', '[ebp+var_544]']
add ['ecx,', '[ebp+var_550]']
mov ['[ebp+var_544],', 'ecx']
mov ['edx,', '[ebp+var_544]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_RangeDec_GetThreshold@8']
mov ['[ebp+var_54C],', 'eax']
mov ['ecx,', '[ebp+var_54C]']
cmp ['ecx,', '[ebp+var_550]']
jnb ['loc_808']
lea ['edx,', '[ebp+var_534]']
mov ['[ebp+var_56C],', 'edx']
mov ['[ebp+var_550],', '0']
jmp ['short', 'loc_701']
mov ['eax,', '[ebp+var_56C]']
add ['eax,', '4']
mov ['[ebp+var_56C],', 'eax']
mov ['ecx,', '[ebp+var_56C]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
add ['eax,', '[ebp+var_550]']
mov ['[ebp+var_550],', 'eax']
mov ['ecx,', '[ebp+var_550]']
cmp ['ecx,', '[ebp+var_54C]']
ja ['short', 'loc_729']
jmp ['short', 'loc_6F2']
mov ['edx,', '[ebp+var_56C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_53C],', 'eax']
mov ['ecx,', '[ebp+var_53C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
push ['edx']
mov ['eax,', '[ebp+var_53C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['edx,', '[ebp+var_550]']
sub ['edx,', 'ecx']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_RangeDec_Decode@12']
mov ['ecx,', '[ebp+var_554]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
cmp ['edx,', '7']
jge ['short', 'loc_7DC']
mov ['eax,', '[ebp+var_554]']
mov ['cl,', '[eax+3]']
sub ['cl,', '1']
mov ['[ebp+var_575],', 'cl']
mov ['edx,', '[ebp+var_554]']
mov ['al,', '[ebp+var_575]']
mov ['[edx+3],', 'al']
movzx ['ecx,', '[ebp+var_575]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_7DC']
mov ['edx,', '[ebp+var_554]']
mov ['ax,', '[edx]']
shl ['ax,', '1']
mov ['ecx,', '[ebp+var_554]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_554]']
movzx ['ecx,', 'byte', 'ptr', '[edx+2]']
mov ['eax,', '3']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_554]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_554]']
mov ['al,', '[edx+2]']
add ['al,', '1']
mov ['ecx,', '[ebp+var_554]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_53C]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_53C]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_565],', 'dl']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Ppmd8_Update2@4']
movzx ['eax,', '[ebp+var_565]']
jmp ['short', 'loc_887']
mov ['ecx,', '[ebp+var_54C]']
cmp ['ecx,', '[ebp+var_544]']
jb ['short', 'loc_81D']
mov ['eax,', '0FFFFFFFEh']
jmp ['short', 'loc_887']
mov ['edx,', '[ebp+var_544]']
sub ['edx,', '[ebp+var_550]']
push ['edx']
mov ['eax,', '[ebp+var_550]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_RangeDec_Decode@12']
mov ['edx,', '[ebp+var_554]']
movzx ['eax,', 'word', 'ptr', '[edx]']
add ['eax,', '[ebp+var_544]']
mov ['ecx,', '[ebp+var_554]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_558]']
sub ['edx,', '1']
mov ['[ebp+var_558],', 'edx']
mov ['eax,', '[ebp+var_558]']
mov ['ecx,', '[ebp+eax*4+var_534]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['byte', 'ptr', '[ebp+edx+var_108],', '0']
cmp ['[ebp+var_558],', '0']
jnz ['short', 'loc_852']
jmp ['loc_58B']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN43']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '578h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_RangeDec_GetThreshold@8 proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+48h]']
xor ['edx,', 'edx']
div ['[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx+48h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+4Ch]']
xor ['edx,', 'edx']
div ['[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
_RangeDec_Decode@12 proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
push ['edi']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
imul ['ecx,', '[eax+48h]']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+50h]']
add ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+50h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
sub ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+48h]']
imul ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+48h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+50h]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+48h]']
mov ['edx,', '[ebp+arg_0]']
xor ['eax,', '[edx+50h]']
cmp ['eax,', '1000000h']
jb ['short', 'loc_9C2']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+48h],', '8000h']
jnb ['short', 'loc_A13']
mov ['ecx,', '[ebp+arg_0]']
xor ['edx,', 'edx']
sub ['edx,', '[ecx+50h]']
and ['edx,', '7FFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+48h],', 'edx']
mov ['ecx,', '1']
test ['ecx,', 'ecx']
jz ['short', 'loc_A13']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[edx+4Ch]']
shl ['esi,', '8']
mov ['edi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+54h]']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['edx,', 'al']
or ['esi,', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4Ch],', 'esi']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+48h]']
shl ['edx,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+48h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
shl ['edx,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+50h],', 'edx']
jmp ['loc_980']
pop ['edi']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp

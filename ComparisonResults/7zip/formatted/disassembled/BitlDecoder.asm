??__Eg_InverterTableInitializer@NBitl@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?g_InverterTableInitializer@NBitl@@3UCInverterTableInitializer@1@A']
call ['??0CInverterTableInitializer@NBitl@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CInverterTableInitializer@NBitl@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_154']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '100h']
jnb ['short', 'loc_1B0']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '55h']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
and ['edx,', '0AAh']
shr ['edx,', '1']
or ['ecx,', 'edx']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '33h']
shl ['eax,', '2']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0CCh']
shr ['ecx,', '2']
or ['eax,', 'ecx']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0Fh']
shl ['edx,', '4']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '0F0h']
shr ['eax,', '4']
or ['edx,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ds:?kInvertTable@NBitl@@3PAEA[ecx],', 'dl']
jmp ['short', 'loc_14B']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

?GetNumberOfProperties@CHandler@NTar@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ah']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetPropertyInfo@CHandler@NTar@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '0Ah']
jb ['short', 'loc_60']
mov ['eax,', '80070057h']
jmp ['short', 'loc_8D']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_kProps[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
movzx ['dx,', 'byte', 'ptr', 'ds:?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['14h']
endp
?GetNumberOfArchiveProperties@CHandler@NTar@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '2']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetArchivePropertyInfo@CHandler@NTar@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '2']
jb ['short', 'loc_D0']
mov ['eax,', '80070057h']
jmp ['short', 'loc_FD']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_kArcProps[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
movzx ['dx,', 'byte', 'ptr', 'ds:?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['14h']
endp
?GetArchiveProperty@CHandler@NTar@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4Ch']
push ['edi']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', '2Ch']
mov ['[ebp+var_44],', 'ecx']
cmp ['[ebp+var_44],', '27h']
ja ['$LN19']
mov ['edx,', '[ebp+var_44]']
movzx ['eax,', 'ds:$LN23[edx]']
jmp ['ds:$LN28[eax*4]']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0D0h]']
test ['edx,', 'edx']
jz ['short', 'loc_189']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0C4h]']
push ['ecx']
mov ['edx,', '[eax+0C0h]']
push ['edx']
lea ['ecx,', '[ebp+var_18]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN19']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0D0h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1B5']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0CCh]']
push ['eax']
mov ['ecx,', '[edx+0C8h]']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN19']
mov ['[ebp+var_20],', '0']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+0D8h]']
test ['eax,', 'eax']
jnz ['short', 'loc_1DA']
mov ['ecx,', '[ebp+var_20]']
or ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_204']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0D4h]']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '1']
jz ['short', 'loc_1FD']
cmp ['[ebp+var_48],', '2']
jz ['short', 'loc_1F4']
jmp ['short', 'loc_204']
mov ['[ebp+var_20],', '20h']
jmp ['short', 'loc_204']
mov ['[ebp+var_20],', '2']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['short', '$LN19']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0E4h]']
mov ['[ebp+var_4C],', 'eax']
cmp ['[ebp+var_4C],', '1']
jz ['short', 'loc_236']
cmp ['[ebp+var_4C],', '0FDE9h']
jz ['short', 'loc_23F']
jmp ['short', 'loc_246']
mov ['[ebp+var_24],', 'offset', '$SG71186']
jmp ['short', 'loc_246']
mov ['[ebp+var_24],', 'offset', '$SG71188']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_25A']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z']
jmp ['short', '$LN19']
lea ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E4h]']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
lea ['edx,', '[ebp+var_38]']
push ['edx']
lea ['ecx,', '[ebp+var_18]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_40],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_40]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ReadItem2@CHandler@NTar@NArchive@@AAEJPAUISequentialInStream@@AA_NAAUCItemEx@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0C0h]']
mov ['[eax+78h],', 'edx']
mov ['ecx,', '[ecx+0C4h]']
mov ['[eax+7Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0D4h']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?ReadItem@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_388']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_3FF']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3AB']
mov ['ecx,', '[ebp+arg_8]']
call ['?IsPaxExtendedHeader@CItem@NTar@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3AB']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0D9h],', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+80h]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['edx,', '[ecx+0C0h]']
adc ['eax,', '[ecx+0C4h]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0C0h],', 'edx']
mov ['[ecx+0C4h],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+80h]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+0C8h]']
adc ['ecx,', '[edx+0CCh]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0C8h],', 'eax']
mov ['[edx+0CCh],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Open2@CHandler@NTar@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Open2@CHandler@NTar@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '134h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_140]']
mov ['ecx,', '4Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_1C],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_20]']
push ['eax']
push ['2']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[edx+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_494']
mov ['eax,', '[ebp+var_28]']
jmp ['loc_A46']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_4C4']
mov ['eax,', '[ebp+var_2C]']
jmp ['loc_A46']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0D0h],', '1']
mov ['[ebp+var_2D],', '1']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0DAh]']
test ['edx,', 'edx']
jnz ['short', 'loc_4F5']
movzx ['eax,', '[ebp+var_2D]']
test ['eax,', 'eax']
jnz ['short', 'loc_4F5']
mov ['ecx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[ecx+0E0h],', '1']
lea ['ecx,', '[ebp+var_BC]']
call ['??0CItemEx@NTar@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['edx,', '[ebp+var_BC]']
push ['edx']
lea ['eax,', '[ebp+var_C5]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?ReadItem2@CHandler@NTar@NArchive@@AAEJPAUISequentialInStream@@AA_NAAUCItemEx@23@@Z']
mov ['[ebp+var_D0],', 'eax']
cmp ['[ebp+var_D0],', '0']
jz ['short', 'loc_559']
mov ['edx,', '[ebp+var_D0]']
mov ['[ebp+var_118],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CItemEx@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_118]']
jmp ['loc_A46']
movzx ['eax,', '[ebp+var_C5]']
test ['eax,', 'eax']
jnz ['short', 'loc_57B']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CItemEx@NTar@NArchive@@QAE@XZ']
jmp ['loc_7E3']
mov ['ecx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[ecx+0D8h],', '1']
lea ['edx,', '[ebp+var_BC]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?Add@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEIABUCItemEx@NTar@NArchive@@@Z']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0DAh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_61A']
movzx ['edx,', '[ebp+var_2D]']
test ['edx,', 'edx']
jz ['short', 'loc_5C6']
movzx ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+var_BC]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
call ['?CheckUTF8@@YG_NPBD_N@Z']
mov ['[ebp+var_2D],', 'al']
movzx ['ecx,', '[ebp+var_2D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5E4']
movzx ['edx,', '[ebp+var_37]']
push ['edx']
lea ['ecx,', '[ebp+var_80]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
call ['?CheckUTF8@@YG_NPBD_N@Z']
mov ['[ebp+var_2D],', 'al']
movzx ['eax,', '[ebp+var_2D]']
test ['eax,', 'eax']
jz ['short', 'loc_5FF']
push ['0']
lea ['ecx,', '[ebp+var_74]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
call ['?CheckUTF8@@YG_NPBD_N@Z']
mov ['[ebp+var_2D],', 'al']
movzx ['ecx,', '[ebp+var_2D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_61A']
push ['0']
lea ['ecx,', '[ebp+var_68]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
call ['?CheckUTF8@@YG_NPBD_N@Z']
mov ['[ebp+var_2D],', 'al']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '0C0h']
mov ['esi,', 'esp']
push ['edx']
push ['1']
lea ['ecx,', '[ebp+var_BC]']
call ['?GetPackSizeAligned@CItem@NTar@NArchive@@QBE_KXZ']
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_682']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_11C],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CItemEx@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_11C]']
jmp ['loc_A46']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_13C],', 'edx']
mov ['eax,', '[ebp+var_13C]']
mov ['ecx,', '[eax+0C4h]']
cmp ['ecx,', '[ebp+var_1C]']
jb ['short', 'loc_6D3']
ja ['short', 'loc_6AF']
mov ['edx,', '[ebp+var_13C]']
mov ['eax,', '[edx+0C0h]']
cmp ['eax,', '[ebp+var_20]']
jbe ['short', 'loc_6D3']
mov ['ecx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[ecx+0D4h],', '2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CItemEx@NTar@NArchive@@QAE@XZ']
jmp ['loc_7E3']
cmp ['[ebp+arg_4],', '0']
jz ['loc_7CC']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?Size@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QBEIXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_742']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_20]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ecx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D8],', 'eax']
cmp ['[ebp+var_D8],', '0']
jz ['short', 'loc_742']
mov ['ecx,', '[ebp+var_D8]']
mov ['[ebp+var_120],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CItemEx@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_120]']
jmp ['loc_A46']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?Size@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QBEIXZ']
and ['eax,', '3FFh']
jnz ['short', 'loc_7CC']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?Size@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QBEIXZ']
xor ['edx,', 'edx']
mov ['[ebp+var_E4],', 'eax']
mov ['[ebp+var_E0],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0C0h']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_E4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[eax+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_7CC']
mov ['eax,', '[ebp+var_EC]']
mov ['[ebp+var_124],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CItemEx@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_124]']
jmp ['loc_A46']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_BC]']
call ['??1CItemEx@NTar@NArchive@@QAE@XZ']
jmp ['loc_4F5']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0DAh]']
test ['edx,', 'edx']
jnz ['short', 'loc_806']
movzx ['eax,', '[ebp+var_2D]']
test ['eax,', 'eax']
jnz ['short', 'loc_806']
mov ['ecx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[ecx+0E0h],', '1']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0E0h]']
mov ['[edx+0E4h],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?Size@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QBEIXZ']
test ['eax,', 'eax']
jnz ['loc_A3A']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[edx+0D4h],', '0']
jz ['short', 'loc_84B']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0D8h],', '0']
mov ['eax,', '1']
jmp ['loc_A46']
lea ['ecx,', '[ebp+var_F4]']
call ['??0?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_88A']
mov ['[ebp+var_128],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_F4]']
call ['??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_128]']
jmp ['loc_A46']
lea ['ecx,', '[ebp+var_F4]']
call ['??I?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAEPAPAUIArchiveOpenVolumeCallback@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_IArchiveOpenVolumeCallback']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[edx]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_F4]']
call ['??7?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8EA']
mov ['[ebp+var_12C],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_F4]']
call ['??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_12C]']
jmp ['loc_A46']
lea ['ecx,', '[ebp+var_10C]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_F4]']
call ['??C?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBEPAUIArchiveOpenVolumeCallback@@XZ']
mov ['[ebp+var_140],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+var_140]']
push ['ecx']
mov ['edx,', '[ebp+var_140]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_96A']
mov ['[ebp+var_130],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_F4]']
call ['??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_130]']
jmp ['loc_A46']
movzx ['edx,', '[ebp+var_10C]']
cmp ['edx,', '8']
jz ['short', 'loc_9AC']
mov ['[ebp+var_134],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_F4]']
call ['??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_134]']
jmp ['loc_A46']
mov ['eax,', '[ebp+var_104]']
push ['eax']
call ['?MyStringLen@@YGIPB_W@Z']
mov ['[ebp+var_114],', 'eax']
cmp ['[ebp+var_114],', '4']
jb ['short', 'loc_9E6']
push ['offset', '$SG71307']
mov ['ecx,', '[ebp+var_114]']
mov ['edx,', '[ebp+var_104]']
lea ['eax,', '[edx+ecx*2-8]']
push ['eax']
call ['?MyStringCompareNoCase@@YGHPB_W0@Z']
test ['eax,', 'eax']
jz ['short', 'loc_A19']
mov ['[ebp+var_138],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_F4]']
call ['??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_138]']
jmp ['short', 'loc_A46']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_F4]']
call ['??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[ecx+0D8h],', '1']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN45']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '140h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Open@CHandler@NTar@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Open@CHandler@NTar@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '0Ch']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_1C],', '0CCCCCCCCh']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+this]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?Open2@CHandler@NTar@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_B93']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_BCC']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z']
xor ['eax,', 'eax']
jmp ['short', 'loc_BCC']
endp
__catch$?Open@CHandler@NTar@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-18h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN8']
retn
endp
?OpenSeq@CHandler@NTar@NArchive@@UAGJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+this]']
sub ['eax,', '4']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx-4]']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+0D4h],', '1']
xor ['eax,', 'eax']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?Close@CHandler@NTar@NArchive@@UAGJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+0D8h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+0D4h],', '0']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+0D0h],', '0']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+0C0h],', '0']
mov ['dword', 'ptr', '[eax+0C4h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+0C8h],', '0']
mov ['dword', 'ptr', '[ecx+0CCh],', '0']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+2Ch],', '0']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+30h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+0D9h],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Clear@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEXXZ']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?GetNumberOfItems@CHandler@NTar@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_D0A']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Size@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QBEIXZ']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_D11']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CHandler@NTar@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CHandler@NTar@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IInArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0IArchiveOpenSeq@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0IInArchiveGetStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0ISetProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0IOutArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CHandler@NTar@NArchive@@6BIInArchive@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CHandler@NTar@NArchive@@6BIArchiveOpenSeq@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CHandler@NTar@NArchive@@6BIInArchiveGetStream@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CHandler@NTar@NArchive@@6BISetProperties@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CHandler@NTar@NArchive@@6BIOutArchive@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0CItemEx@NTar@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0ECh']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
push ['28h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_E4E']
mov ['ecx,', '[ebp+var_18]']
call ['??0CCopyCoder@NCompress@@QAE@XZ']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_E55']
mov ['[ebp+var_1C],', '0']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+0E8h],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+0E8h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0ECh']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+0E4h],', '0FDE9h']
mov ['ecx,', '[ebp+var_10]']
call ['?Init@CHandler@NTar@NArchive@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SkipTo@CHandler@NTar@NArchive@@AAEJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
cmp ['ecx,', '[ebp+arg_0]']
jb ['short', 'loc_EF6']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+30h]']
test ['eax,', 'eax']
jnz ['loc_102F']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+30h]']
test ['edx,', 'edx']
jz ['loc_FDD']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?GetPackSizeAligned@CItem@NTar@NArchive@@QBE_KXZ']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0E8h]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0E8h]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_F62']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_1031']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0E8h]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0C0h]']
add ['edx,', '[eax+20h]']
mov ['ecx,', '[ecx+0C4h]']
adc ['ecx,', '[eax+24h]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+0C0h],', 'edx']
mov ['[eax+0C4h],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0E8h]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+20h]']
cmp ['ecx,', '[ebp+var_10]']
jnz ['short', 'loc_FB1']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+24h]']
cmp ['eax,', '[ebp+var_C]']
jz ['short', 'loc_FC5']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0D4h],', '2']
mov ['eax,', '1']
jmp ['short', 'loc_1031']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+30h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+2Ch],', 'ecx']
jmp ['short', 'loc_102A']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '38h']
push ['eax']
lea ['ecx,', '[ebp+var_1D]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadItem2@CHandler@NTar@NArchive@@AAEJPAUISequentialInStream@@AA_NAAUCItemEx@23@@Z']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_100A']
mov ['eax,', '[ebp+var_28]']
jmp ['short', 'loc_1031']
movzx ['edx,', '[ebp+var_1D]']
test ['edx,', 'edx']
jnz ['short', 'loc_1023']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0D0h],', '1']
mov ['eax,', '80070057h']
jmp ['short', 'loc_1031']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+30h],', '1']
jmp ['loc_EDC']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?TarStringToUnicode@CHandler@NTar@NArchive@@ABEXABVAString@@AAVCPropVariant@NCOM@NWindows@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?TarStringToUnicode@CHandler@NTar@NArchive@@ABEXABVAString@@AAVCPropVariant@NCOM@NWindows@@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+0E0h],', '0FDE9h']
jnz ['short', 'loc_10FC']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?ConvertUTF8ToUnicode@@YG_NABVAString@@AAVUString@@@Z']
jmp ['short', 'loc_1113']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+0E0h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
call ['?MultiByteToUnicodeString2@@YGXAAVUString@@ABVAString@@I@Z']
movzx ['ecx,', '[ebp+arg_8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1124']
lea ['edx,', '[ebp+var_20]']
push ['edx']
call ['?ConvertToOSName2@NItemName@NArchive@@YGXAAVUString@@@Z']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetProperty@CHandler@NTar@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetProperty@CHandler@NTar@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '70h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_80]']
mov ['ecx,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_54],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0']
jz ['short', 'loc_120F']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['??A?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEAAUCItemEx@NTar@NArchive@@I@Z']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_1275']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+2Ch]']
jnb ['short', 'loc_1237']
mov ['[ebp+var_44],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_44]']
jmp ['loc_1458']
jmp ['short', 'loc_1275']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?SkipTo@CHandler@NTar@NArchive@@AAEJI@Z']
mov ['[ebp+var_60],', 'eax']
mov ['edx,', '[ebp+var_60]']
mov ['[ebp+var_30],', 'edx']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_126C']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_48],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_48]']
jmp ['loc_1458']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '38h']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_64],', 'edx']
mov ['eax,', '[ebp+var_64]']
sub ['eax,', '3']
mov ['[ebp+var_64],', 'eax']
cmp ['[ebp+var_64],', '57h']
ja ['$LN15_0']
mov ['ecx,', '[ebp+var_64]']
movzx ['edx,', 'ds:$LN31[ecx]']
jmp ['ds:$LN37_0[edx*4]']
push ['1']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?TarStringToUnicode@CHandler@NTar@NArchive@@ABEXABVAString@@AAVCPropVariant@NCOM@NWindows@@_N@Z']
jmp ['$LN15_0']
mov ['ecx,', '[ebp+var_2C]']
call ['?IsDir@CItem@NTar@NArchive@@QBE_NXZ']
mov ['[ebp+var_65],', 'al']
movzx ['edx,', '[ebp+var_65]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
jmp ['$LN15_0']
mov ['ecx,', '[ebp+var_2C]']
call ['?GetUnpackSize@CItem@NTar@NArchive@@QBE_KXZ']
mov ['[ebp+var_70],', 'eax']
mov ['[ebp+var_6C],', 'edx']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN15_0']
mov ['ecx,', '[ebp+var_2C]']
call ['?GetPackSizeAligned@CItem@NTar@NArchive@@QBE_KXZ']
mov ['[ebp+var_78],', 'eax']
mov ['[ebp+var_74],', 'edx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_78]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN15_0']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_7C],', 'ecx']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[edx+20h]']
or ['ecx,', '[eax+24h]']
jz ['short', 'loc_1354']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[eax+20h]']
push ['edx']
call ['?UnixTime64ToFileTime@NTime@NWindows@@YG_N_JAAU_FILETIME@@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1354']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z']
jmp ['$LN15_0']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+28h]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['$LN15_0']
push ['0']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '48h']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?TarStringToUnicode@CHandler@NTar@NArchive@@ABEXABVAString@@AAVCPropVariant@NCOM@NWindows@@_N@Z']
jmp ['$LN15_0']
push ['0']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '54h']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?TarStringToUnicode@CHandler@NTar@NArchive@@ABEXABVAString@@AAVCPropVariant@NCOM@NWindows@@_N@Z']
jmp ['short', '$LN15_0']
mov ['edx,', '[ebp+var_2C]']
movsx ['eax,', 'byte', 'ptr', '[edx+68h]']
cmp ['eax,', '32h']
jnz ['short', 'loc_13D5']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '3Ch']
call ['?IsEmpty@AString@@QBE_NXZ']
mov ['[ebp+var_7D],', 'al']
movzx ['ecx,', '[ebp+var_7D]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_13D5']
push ['0']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?TarStringToUnicode@CHandler@NTar@NArchive@@ABEXABVAString@@AAVCPropVariant@NCOM@NWindows@@_N@Z']
jmp ['short', '$LN15_0']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'byte', 'ptr', '[ecx+68h]']
cmp ['edx,', '31h']
jnz ['short', '$LN15_0']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '3Ch']
call ['?IsEmpty@AString@@QBE_NXZ']
mov ['[ebp+var_7E],', 'al']
movzx ['eax,', '[ebp+var_7E]']
test ['eax,', 'eax']
jnz ['short', '$LN15_0']
push ['0']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '3Ch']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?TarStringToUnicode@CHandler@NTar@NArchive@@ABEXABVAString@@AAVCPropVariant@NCOM@NWindows@@_N@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_4C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4C]']
jmp ['short', 'loc_1458']
endp
__catch$?GetProperty@CHandler@NTar@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-50h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN29']
retn
endp
?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '1E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1F4]']
mov ['ecx,', '79h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_10C],', 'eax']
mov ['eax,', '[ebp+var_10C]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_110],', 'eax']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_110],', '0']
setz ['cl']
mov ['[ebp+var_15],', 'cl']
movzx ['edx,', '[ebp+var_15]']
test ['edx,', 'edx']
jnz ['short', 'loc_15E4']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_114],', 'eax']
mov ['eax,', '[ebp+var_114]']
mov ['[ebp+var_14],', 'eax']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
setz ['cl']
mov ['[ebp+var_16],', 'cl']
movzx ['edx,', '[ebp+var_16]']
test ['edx,', 'edx']
jz ['short', 'loc_1612']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Size@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QBEIXZ']
mov ['[ebp+var_118],', 'eax']
mov ['eax,', '[ebp+var_118]']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_11C],', 'eax']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_1639']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_1639']
xor ['eax,', 'eax']
jmp ['loc_22A9']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_1659']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['short', 'loc_16CC']
movzx ['eax,', '[ebp+var_16]']
test ['eax,', 'eax']
jz ['short', 'loc_1674']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_120],', 'ecx']
jmp ['short', 'loc_1683']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_120],', 'ecx']
mov ['edx,', '[ebp+var_120]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['??A?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEAAUCItemEx@NTar@NArchive@@I@Z']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+var_124]']
call ['?GetUnpackSize@CItem@NTar@NArchive@@QBE_KXZ']
mov ['[ebp+var_12C],', 'eax']
mov ['[ebp+var_128],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_12C]']
mov ['ecx,', '[ebp+var_1C]']
adc ['ecx,', '[ebp+var_128]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_1650']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_28],', '0']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_1C],', 'eax']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_130],', 'eax']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+var_C4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_C4],', '0']
jz ['short', 'loc_174D']
mov ['ecx,', '[ebp+var_C4]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_134],', 'eax']
mov ['edx,', '[ebp+var_134]']
mov ['[ebp+var_138],', 'edx']
jmp ['short', 'loc_1757']
mov ['[ebp+var_138],', '0']
mov ['eax,', '[ebp+var_138]']
mov ['[ebp+var_C0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_C0]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
push ['edx']
lea ['ecx,', '[ebp+var_38]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
push ['0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
push ['28h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_13C],', 'eax']
mov ['ecx,', '[ebp+var_13C]']
mov ['[ebp+var_CC],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_CC],', '0']
jz ['short', 'loc_17D6']
mov ['ecx,', '[ebp+var_CC]']
call ['??0CLimitedSequentialInStream@@QAE@XZ']
mov ['[ebp+var_140],', 'eax']
mov ['edx,', '[ebp+var_140]']
mov ['[ebp+var_144],', 'edx']
jmp ['short', 'loc_17E0']
mov ['[ebp+var_144],', '0']
mov ['eax,', '[ebp+var_144]']
mov ['[ebp+var_C8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
lea ['ecx,', '[ebp+var_48]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
call ['?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_148],', 'eax']
mov ['ecx,', '[ebp+var_148]']
mov ['[ebp+var_D4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_185D']
mov ['ecx,', '[ebp+var_D4]']
call ['??0CLimitedSequentialOutStream@@QAE@XZ']
mov ['[ebp+var_14C],', 'eax']
mov ['edx,', '[ebp+var_14C]']
mov ['[ebp+var_150],', 'edx']
jmp ['short', 'loc_1867']
mov ['[ebp+var_150],', '0']
mov ['eax,', '[ebp+var_150]']
mov ['[ebp+var_D0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_D0]']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
lea ['ecx,', '[ebp+var_58]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_18A2']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[ebp+arg_8]']
jb ['short', 'loc_18B6']
movzx ['edx,', '[ebp+var_15]']
test ['edx,', 'edx']
jz ['loc_2247']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+28h],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['[eax+2Ch],', 'edx']
mov ['ecx,', '[ebp+var_30]']
call ['?SetCur@CLocalProgress@@QAEJXZ']
mov ['[ebp+var_154],', 'eax']
mov ['eax,', '[ebp+var_154]']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jz ['short', 'loc_1929']
mov ['ecx,', '[ebp+var_60]']
mov ['[ebp+var_D8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_D8]']
jmp ['loc_22A9']
lea ['ecx,', '[ebp+var_68]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_158],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
xor ['edx,', 'edx']
cmp ['[ebp+arg_C],', '0']
setnz ['dl']
mov ['[ebp+var_70],', 'edx']
movzx ['eax,', '[ebp+var_16]']
test ['eax,', 'eax']
jz ['short', 'loc_195A']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_15C],', 'ecx']
jmp ['short', 'loc_1969']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_15C],', 'ecx']
mov ['edx,', '[ebp+var_15C]']
mov ['[ebp+var_74],', 'edx']
movzx ['eax,', '[ebp+var_15]']
test ['eax,', 'eax']
jz ['loc_1A0E']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?SkipTo@CHandler@NTar@NArchive@@AAEJI@Z']
mov ['[ebp+var_160],', 'eax']
mov ['edx,', '[ebp+var_160]']
mov ['[ebp+var_7C],', 'edx']
cmp ['[ebp+var_7C],', '80070057h']
jnz ['short', 'loc_19B3']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_2247']
mov ['eax,', '[ebp+var_7C]']
mov ['[ebp+var_80],', 'eax']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_1A03']
mov ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_DC],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_DC]']
jmp ['loc_22A9']
mov ['edx,', '[ebp+this]']
add ['edx,', '38h']
mov ['[ebp+var_78],', 'edx']
jmp ['short', 'loc_1A2C']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['??A?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEAAUCItemEx@NTar@NArchive@@I@Z']
mov ['[ebp+var_164],', 'eax']
mov ['ecx,', '[ebp+var_164]']
mov ['[ebp+var_78],', 'ecx']
lea ['ecx,', '[ebp+var_68]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
mov ['[ebp+var_168],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_70]']
push ['edx']
mov ['eax,', '[ebp+var_168]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+14h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_16C],', 'eax']
mov ['eax,', '[ebp+var_16C]']
mov ['[ebp+var_84],', 'eax']
cmp ['[ebp+var_84],', '0']
jz ['short', 'loc_1AC2']
mov ['ecx,', '[ebp+var_84]']
mov ['[ebp+var_E0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_E0]']
jmp ['loc_22A9']
mov ['ecx,', '[ebp+var_78]']
call ['?GetUnpackSize@CItem@NTar@NArchive@@QBE_KXZ']
mov ['[ebp+var_174],', 'eax']
mov ['[ebp+var_170],', 'edx']
mov ['edx,', '[ebp+var_174]']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+var_170]']
mov ['[ebp+var_88],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '[ebp+var_8C]']
mov ['edx,', '[ebp+var_1C]']
adc ['edx,', '[ebp+var_88]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_1C],', 'edx']
mov ['ecx,', '[ebp+var_78]']
call ['?GetPackSizeAligned@CItem@NTar@NArchive@@QBE_KXZ']
mov ['[ebp+var_17C],', 'eax']
mov ['[ebp+var_178],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_17C]']
mov ['ecx,', '[ebp+var_28]']
adc ['ecx,', '[ebp+var_178]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'ecx']
mov ['ecx,', '[ebp+var_78]']
call ['?IsDir@CItem@NTar@NArchive@@QBE_NXZ']
mov ['[ebp+var_17D],', 'al']
movzx ['edx,', '[ebp+var_17D]']
test ['edx,', 'edx']
jz ['loc_1C58']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_184],', 'eax']
mov ['edx,', '[ebp+var_184]']
mov ['[ebp+var_90],', 'edx']
cmp ['[ebp+var_90],', '0']
jz ['short', 'loc_1BCC']
mov ['eax,', '[ebp+var_90]']
mov ['[ebp+var_E4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_E4]']
jmp ['loc_22A9']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_188],', 'eax']
mov ['edx,', '[ebp+var_188]']
mov ['[ebp+var_94],', 'edx']
cmp ['[ebp+var_94],', '0']
jz ['short', 'loc_1C47']
mov ['eax,', '[ebp+var_94]']
mov ['[ebp+var_E8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_E8]']
jmp ['loc_22A9']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_1899']
mov ['[ebp+var_95],', '0']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_1CA5']
lea ['ecx,', '[ebp+var_68]']
call ['??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ']
mov ['[ebp+var_189],', 'al']
movzx ['ecx,', '[ebp+var_189]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1CA5']
movzx ['edx,', '[ebp+var_15]']
test ['edx,', 'edx']
jnz ['short', 'loc_1C97']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_1899']
mov ['[ebp+var_95],', '1']
mov ['[ebp+var_70],', '2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_190],', 'eax']
mov ['edx,', '[ebp+var_190]']
mov ['[ebp+var_9C],', 'edx']
cmp ['[ebp+var_9C],', '0']
jz ['short', 'loc_1D22']
mov ['eax,', '[ebp+var_9C]']
mov ['[ebp+var_EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_EC]']
jmp ['loc_22A9']
lea ['ecx,', '[ebp+var_68]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_194],', 'eax']
mov ['ecx,', '[ebp+var_194]']
push ['ecx']
mov ['ecx,', '[ebp+var_50]']
call ['?SetStream@CLimitedSequentialOutStream@@QAEXPAUISequentialOutStream@@@Z']
lea ['ecx,', '[ebp+var_68]']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
movzx ['edx,', '[ebp+var_95]']
test ['edx,', 'edx']
jz ['short', 'loc_1D68']
mov ['dword', 'ptr', '[ebp+var_19C],', '0']
mov ['dword', 'ptr', '[ebp+var_19C+4],', '0']
jmp ['short', 'loc_1D80']
mov ['eax,', '[ebp+var_8C]']
mov ['dword', 'ptr', '[ebp+var_19C],', 'eax']
mov ['ecx,', '[ebp+var_88]']
mov ['dword', 'ptr', '[ebp+var_19C+4],', 'ecx']
push ['1']
mov ['edx,', 'dword', 'ptr', '[ebp+var_19C+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_19C]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
call ['?Init@CLimitedSequentialOutStream@@QAEX_K_N@Z']
mov ['[ebp+var_A0],', '0']
lea ['ecx,', '[ebp+var_A8]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_1A0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_78]']
call ['?IsSparse@CItem@NTar@NArchive@@QBE_NXZ']
mov ['[ebp+var_1A1],', 'al']
movzx ['ecx,', '[ebp+var_1A1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1DE4']
lea ['edx,', '[ebp+var_48]']
push ['edx']
lea ['ecx,', '[ebp+var_A8]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@ABV0@@Z']
jmp ['loc_1E8B']
lea ['ecx,', '[ebp+var_A8]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
mov ['[ebp+var_1A8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_1A8]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+this]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_A8]']
call ['??7?$CMyComPtr@UISequentialInStream@@@@QBE_NXZ']
mov ['[ebp+var_1A9],', 'al']
movzx ['eax,', '[ebp+var_1A9]']
test ['eax,', 'eax']
jz ['short', 'loc_1E8B']
mov ['[ebp+var_F0],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_F0]']
jmp ['loc_22A9']
mov ['ecx,', '[ebp+var_78]']
call ['?IsSymLink@CItem@NTar@NArchive@@QBE_NXZ']
mov ['[ebp+var_1AA],', 'al']
movzx ['ecx,', '[ebp+var_1AA]']
test ['ecx,', 'ecx']
jz ['loc_1F4B']
mov ['ecx,', '[ebp+var_78]']
add ['ecx,', '3Ch']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+var_1B0],', 'eax']
mov ['ecx,', '[ebp+var_78]']
add ['ecx,', '3Ch']
call ['??BAString@@QBEPBDXZ']
mov ['[ebp+var_1B4],', 'eax']
mov ['edx,', '[ebp+var_1B0]']
push ['edx']
mov ['eax,', '[ebp+var_1B4]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '0']
jz ['short', 'loc_1F46']
mov ['edx,', '[ebp+var_B0]']
mov ['[ebp+var_F4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_F4]']
jmp ['loc_22A9']
jmp ['loc_2146']
movzx ['eax,', '[ebp+var_15]']
test ['eax,', 'eax']
jnz ['loc_2028']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_1B8],', 'eax']
mov ['ecx,', '[ebp+var_1B8]']
mov ['[ebp+var_1BC],', 'ecx']
mov ['ecx,', '[ebp+var_78]']
call ['?GetDataPosition@CItemEx@NTar@NArchive@@QBE_KXZ']
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_1C0]']
push ['edx']
mov ['eax,', '[ebp+var_1C4]']
push ['eax']
mov ['ecx,', '[ebp+var_1BC]']
push ['ecx']
mov ['edx,', '[ebp+var_1BC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C8],', 'eax']
mov ['edx,', '[ebp+var_1C8]']
mov ['[ebp+var_B4],', 'edx']
cmp ['[ebp+var_B4],', '0']
jz ['short', 'loc_2028']
mov ['eax,', '[ebp+var_B4]']
mov ['[ebp+var_F8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_F8]']
jmp ['loc_22A9']
mov ['ecx,', '[ebp+var_78]']
call ['?GetPackSizeAligned@CItem@NTar@NArchive@@QBE_KXZ']
mov ['dword', 'ptr', '[ebp+var_1D0],', 'eax']
mov ['dword', 'ptr', '[ebp+var_1D0+4],', 'edx']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_1D0+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_1D0]']
push ['edx']
mov ['ecx,', '[ebp+var_40]']
call ['?Init@CLimitedSequentialInStream@@QAEX_K@Z']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0ECh']
call ['??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
mov ['[ebp+var_1D4],', 'eax']
mov ['eax,', '[ebp+var_1D4]']
mov ['[ebp+var_1D8],', 'eax']
lea ['ecx,', '[ebp+var_38]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_1DC],', 'eax']
lea ['ecx,', '[ebp+var_58]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_1E0],', 'eax']
lea ['ecx,', '[ebp+var_A8]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_1E4],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_1E0]']
push ['edx']
mov ['eax,', '[ebp+var_1E4]']
push ['eax']
mov ['ecx,', '[ebp+var_1D8]']
push ['ecx']
mov ['edx,', '[ebp+var_1D8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1E8],', 'eax']
mov ['edx,', '[ebp+var_1E8]']
mov ['[ebp+var_B8],', 'edx']
cmp ['[ebp+var_B8],', '0']
jz ['short', 'loc_2146']
mov ['eax,', '[ebp+var_B8]']
mov ['[ebp+var_FC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_FC]']
jmp ['loc_22A9']
mov ['ecx,', '[ebp+var_50]']
call ['?GetRem@CLimitedSequentialOutStream@@QBE_KXZ']
mov ['[ebp+var_1F0],', 'eax']
mov ['[ebp+var_1EC],', 'edx']
mov ['ecx,', '[ebp+var_1F0]']
or ['ecx,', '[ebp+var_1EC]']
jz ['short', 'loc_2172']
mov ['[ebp+var_A0],', '2']
movzx ['edx,', '[ebp+var_15]']
test ['edx,', 'edx']
jz ['short', 'loc_2190']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+30h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+2Ch]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+2Ch],', 'edx']
mov ['ecx,', '[ebp+var_50]']
call ['?ReleaseStream@CLimitedSequentialOutStream@@QAEXXZ']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_A0]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1F4],', 'eax']
mov ['eax,', '[ebp+var_1F4]']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jz ['short', 'loc_2227']
mov ['ecx,', '[ebp+var_BC]']
mov ['[ebp+var_100],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_100]']
jmp ['loc_22A9']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_1899']
mov ['[ebp+var_104],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_104]']
jmp ['short', 'loc_22A9']
endp
__catch$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-108h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN61']
retn
endp
?Read@CSparseStream@NTar@NArchive@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '94h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_94]']
mov ['ecx,', '25h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_238C']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_2399']
xor ['eax,', 'eax']
jmp ['loc_2784']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+24h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+1Ch]']
add ['ecx,', '18h']
call ['??A?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEAAUCItemEx@NTar@NArchive@@I@Z']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_50],', 'ecx']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_54]']
mov ['edx,', '[eax+14h]']
cmp ['edx,', '[ecx+1Ch]']
jb ['short', 'loc_23E2']
ja ['short', 'loc_23DB']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_54]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+18h]']
jb ['short', 'loc_23E2']
xor ['eax,', 'eax']
jmp ['loc_2784']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+18h]']
sub ['edx,', '[ecx+10h]']
mov ['eax,', '[eax+1Ch]']
sbb ['eax,', '[ecx+14h]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+Size]']
xor ['edx,', 'edx']
mov ['[ebp+var_5C],', 'ecx']
mov ['[ebp+var_58],', 'edx']
mov ['eax,', '[ebp+var_58]']
cmp ['eax,', '[ebp+var_8]']
jb ['short', 'loc_241D']
ja ['short', 'loc_2417']
mov ['ecx,', '[ebp+var_5C]']
cmp ['ecx,', '[ebp+var_C]']
jbe ['short', 'loc_241D']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+Size],', 'edx']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['?IsEmpty@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_244D']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
jmp ['loc_275C']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_18]']
shr ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_14]']
jnz ['short', 'loc_2477']
jmp ['short', 'loc_24BC']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_60],', 'ecx']
mov ['[ebp+var_64],', 'eax']
mov ['edx,', '[ebp+var_60]']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[edx+14h]']
cmp ['ecx,', '[eax+4]']
ja ['short', 'loc_24B4']
jb ['short', 'loc_24AC']
mov ['edx,', '[ebp+var_60]']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[edx+10h]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_24B4']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_24BA']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_2462']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[edx+10h]']
sub ['ecx,', '[eax]']
mov ['edx,', '[edx+14h]']
sbb ['edx,', '[eax+4]']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_68],', 'eax']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[edx+14h]']
cmp ['ecx,', '[eax+4]']
jb ['loc_267A']
ja ['short', 'loc_2516']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[edx+10h]']
cmp ['ecx,', '[eax]']
jb ['loc_267A']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+var_70]']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[eax+0Ch]']
ja ['loc_267A']
jb ['short', 'loc_253C']
mov ['edx,', '[ebp+var_70]']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[edx+8]']
jnb ['loc_267A']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+8]']
sub ['edx,', '[ebp+var_28]']
mov ['eax,', '[ecx+0Ch]']
sbb ['eax,', '[ebp+var_24]']
mov ['[ebp+var_30],', 'edx']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+Size]']
xor ['edx,', 'edx']
mov ['[ebp+var_78],', 'ecx']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_2C]']
jb ['short', 'loc_2574']
ja ['short', 'loc_256E']
mov ['ecx,', '[ebp+var_78]']
cmp ['ecx,', '[ebp+var_30]']
jbe ['short', 'loc_2574']
mov ['edx,', '[ebp+var_30]']
mov ['[ebp+Size],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_28]']
mov ['edx,', '[eax+4]']
adc ['edx,', '[ebp+var_24]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_25BB']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_7C],', 'edx']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+var_38]']
jnz ['short', 'loc_25BB']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[edx+0Ch]']
cmp ['eax,', '[ebp+var_34]']
jz ['short', 'loc_261E']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+1Ch]']
add ['ecx,', '24h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_80],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?GetDataPosition@CItemEx@NTar@NArchive@@QBE_KXZ']
add ['eax,', '[ebp+var_38]']
adc ['edx,', '[ebp+var_34]']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_80]']
push ['edx']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_2608']
mov ['eax,', '[ebp+var_3C]']
jmp ['loc_2784']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_38]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+1Ch]']
add ['ecx,', '24h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_84],', 'eax']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_84]']
push ['edx']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+Size]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
add ['eax,', '[edx+8]']
adc ['ecx,', '[edx+0Ch]']
mov ['edx,', '[ebp+this]']
mov ['[edx+8],', 'eax']
mov ['[edx+0Ch],', 'ecx']
jmp ['loc_275C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[eax+1Ch]']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_88],', 'eax']
mov ['[ebp+var_8C],', 'ecx']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', '[edx+14h]']
cmp ['ecx,', '[eax+4]']
ja ['short', 'loc_26D4']
jb ['short', 'loc_26C4']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', '[edx+10h]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_26D4']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[edx+4]']
mov ['[ebp+var_40],', 'ecx']
jmp ['short', 'loc_2706']
mov ['esi,', '[ebp+var_14]']
add ['esi,', '1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
cmp ['esi,', 'eax']
jnb ['short', 'loc_2706']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_40]']
sbb ['edx,', '[eax+14h]']
mov ['[ebp+var_4C],', 'ecx']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+Size]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_94],', 'eax']
mov ['[ebp+var_90],', 'ecx']
mov ['edx,', '[ebp+var_90]']
cmp ['edx,', '[ebp+var_48]']
jb ['short', 'loc_274A']
ja ['short', 'loc_2744']
mov ['eax,', '[ebp+var_94]']
cmp ['eax,', '[ebp+var_4C]']
jbe ['short', 'loc_274A']
mov ['ecx,', '[ebp+var_4C]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Size]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+10h]']
adc ['edx,', '[eax+14h]']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_2781']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+Size]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_10]']
pop ['edi']
pop ['esi']
add ['esp,', '94h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CSparseStream@NTar@NArchive@@UAGJ_JIPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_27C5']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_27C7']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_27DE']
jmp ['short', 'loc_2807']
jmp ['short', 'loc_280E']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+10h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+14h]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_280E']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+24h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+1Ch]']
add ['ecx,', '18h']
call ['??A?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEAAUCItemEx@NTar@NArchive@@I@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['ecx,', '[eax+18h]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['edx,', '[eax+1Ch]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'ecx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'edx']
jmp ['short', 'loc_280E']
mov ['eax,', '80030001h']
jmp ['short', 'loc_284B']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
jg ['short', 'loc_2823']
jl ['short', 'loc_281C']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_2823']
mov ['eax,', '80070083h']
jmp ['short', 'loc_284B']
mov ['eax,', '[ebp+this]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[eax+14h],', 'edx']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_2849']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ecx+14h]']
mov ['[eax+4],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?GetStream@CHandler@NTar@NArchive@@UAGJIPAPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetStream@CHandler@NTar@NArchive@@UAGJIPAPAUISequentialInStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '74h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_84]']
mov ['ecx,', '1Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['??A?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEAAUCItemEx@NTar@NArchive@@I@Z']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?IsSparse@CItem@NTar@NArchive@@QBE_NXZ']
mov ['[ebp+var_49],', 'al']
movzx ['edx,', '[ebp+var_49]']
test ['edx,', 'edx']
jz ['loc_2A1D']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_3C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_2904']
mov ['ecx,', '[ebp+var_3C]']
call ['??0CSparseStream@NTar@NArchive@@QAE@XZ']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_54]']
mov ['[ebp+var_58],', 'ecx']
jmp ['short', 'loc_290B']
mov ['[ebp+var_58],', '0']
mov ['edx,', '[ebp+var_58]']
mov ['[ebp+var_38],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_18]']
call ['?Init@CSparseStream@NTar@NArchive@@QAEXXZ']
mov ['edx,', '[ebp+this]']
sub ['edx,', '8']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+1Ch],', 'edx']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '8']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '20h']
call ['??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+24h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '6Ch']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '28h']
call ['?Reserve@?$CRecordVector@_K@@QAEXI@Z']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_2997']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '6Ch']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
mov ['[ebp+var_60],', 'eax']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[ebp+var_60]']
jnb ['short', 'loc_29EF']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '6Ch']
call ['??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z']
mov ['[ebp+var_64],', 'eax']
mov ['edx,', '[ebp+var_64]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '28h']
call ['?AddInReserved@?$CRecordVector@_K@@QAEX_K@Z']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_28]']
adc ['ecx,', '[edx+0Ch]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'ecx']
jmp ['short', 'loc_298E']
lea ['ecx,', '[ebp+var_20]']
call ['?Detach@?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@XZ']
mov ['[ebp+var_68],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_68]']
mov ['[edx],', 'eax']
mov ['[ebp+var_40],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_40]']
jmp ['loc_2AD8']
mov ['ecx,', '[ebp+var_14]']
call ['?IsSymLink@CItem@NTar@NArchive@@QBE_NXZ']
mov ['[ebp+var_69],', 'al']
movzx ['ecx,', '[ebp+var_69]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2A68']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '3Ch']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+var_70],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '3Ch']
call ['??BAString@@QBEPBDXZ']
mov ['[ebp+var_74],', 'eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+this]']
sub ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
call ['?Create_BufInStream_WithReference@@YGXPBXIPAUIUnknown@@PAPAUISequentialInStream@@@Z']
xor ['eax,', 'eax']
jmp ['short', 'loc_2AD8']
mov ['ecx,', '[ebp+var_14]']
call ['?GetDataPosition@CItemEx@NTar@NArchive@@QBE_KXZ']
mov ['dword', 'ptr', '[ebp+var_7C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_7C+4],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1Ch']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ecx+10h]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_7C+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_7C]']
push ['edx']
mov ['eax,', '[ebp+var_80]']
push ['eax']
call ['?CreateLimitedInStream@@YGJPAUIInStream@@_K1PAPAUISequentialInStream@@@Z']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_84]']
jmp ['short', 'loc_2AD8']
endp
__catch$?GetStream@CHandler@NTar@NArchive@@UAGJIPAPAUISequentialInStream@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-44h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN16_1']
retn
endp
?Init@CHandler@NTar@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0DAh],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0DCh],', '0FDE9h']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0E0h],', '0FDE9h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetProperties@CHandler@NTar@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '64h']
push ['edi']
lea ['edi,', '[ebp+var_64]']
mov ['ecx,', '19h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '0Ch']
call ['?Init@CHandler@NTar@NArchive@@QAEXXZ']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_2BA3']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['loc_2D04']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
lea ['ecx,', '[ebp+var_14]']
call ['??0UString@@QAE@PB_W@Z']
lea ['ecx,', '[ebp+var_14]']
call ['?MakeLower_Ascii@UString@@QAEXXZ']
lea ['ecx,', '[ebp+var_14]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2BEF']
mov ['[ebp+var_40],', '80070057h']
lea ['ecx,', '[ebp+var_14]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_40]']
jmp ['loc_2D06']
mov ['eax,', '[ebp+var_4]']
shl ['eax,', '4']
add ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_1C],', 'eax']
lea ['ecx,', '[ebp+var_14]']
call ['??BUString@@QBEPB_WXZ']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '78h']
jnz ['short', 'loc_2C62']
mov ['[ebp+var_24],', '0']
push ['1']
lea ['ecx,', '[ebp+var_14]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
lea ['ecx,', '[ebp+var_4C]']
call ['??0UString@@QAE@PB_W@Z']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
call ['?ParsePropToUInt32@@YGJABVUString@@ABUtagPROPVARIANT@@AAI@Z']
mov ['[ebp+var_2C],', 'eax']
lea ['ecx,', '[ebp+var_4C]']
call ['??1UString@@QAE@XZ']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_2C5D']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_50],', 'edx']
lea ['ecx,', '[ebp+var_14]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_2D06']
jmp ['loc_2CF7']
push ['offset', '$SG71839']
lea ['ecx,', '[ebp+var_14]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2CE3']
mov ['[ebp+var_34],', '1']
push ['offset', '$SG71843']
lea ['ecx,', '[ebp+var_5C]']
call ['??0UString@@QAE@PB_W@Z']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
call ['?ParsePropToUInt32@@YGJABVUString@@ABUtagPROPVARIANT@@AAI@Z']
mov ['[ebp+var_3C],', 'eax']
lea ['ecx,', '[ebp+var_5C]']
call ['??1UString@@QAE@XZ']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_2CBF']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_60],', 'ecx']
lea ['ecx,', '[ebp+var_14]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_60]']
jmp ['short', 'loc_2D06']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+0CEh],', '1']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_34]']
mov ['[eax+0D0h],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_34]']
mov ['[edx+0D4h],', 'eax']
jmp ['short', 'loc_2CF7']
mov ['[ebp+var_64],', '80070057h']
lea ['ecx,', '[ebp+var_14]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_64]']
jmp ['short', 'loc_2D06']
lea ['ecx,', '[ebp+var_14]']
call ['??1UString@@QAE@XZ']
jmp ['loc_2B9A']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '64h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsPaxExtendedHeader@CItem@NTar@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[eax+68h]']
mov ['byte', 'ptr', '[ebp+var_8],', 'cl']
cmp ['byte', 'ptr', '[ebp+var_8],', '58h']
jz ['short', 'loc_2DF4']
cmp ['byte', 'ptr', '[ebp+var_8],', '67h']
jz ['short', 'loc_2DF4']
cmp ['byte', 'ptr', '[ebp+var_8],', '78h']
jz ['short', 'loc_2DF4']
jmp ['short', 'loc_2DF8']
mov ['al,', '1']
jmp ['short', 'loc_2DFA']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?Open2@CHandler@NTar@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z$0 proc near
lea ['ecx,', '[ebp-0BCh]']
jmp ['??1CItemEx@NTar@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Open2@CHandler@NTar@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z$1 proc near
lea ['ecx,', '[ebp-0F4h]']
jmp ['??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ']
endp
__unwindfunclet$?Open2@CHandler@NTar@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-10Ch]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__ehhandler$?Open2@CHandler@NTar@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-140h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Open2@CHandler@NTar@NArchive@@AAEJPAUIInStream@@PAUIArchiveOpenCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Open@CHandler@NTar@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Open@CHandler@NTar@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0CHandler@NTar@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NTar@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NTar@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NTar@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1CItemEx@NTar@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NTar@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0ECh']
jmp ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NTar@NArchive@@QAE@XZ$5 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0CHandler@NTar@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CHandler@NTar@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?TarStringToUnicode@CHandler@NTar@NArchive@@ABEXABVAString@@AAVCPropVariant@NCOM@NWindows@@_N@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?TarStringToUnicode@CHandler@NTar@NArchive@@ABEXABVAString@@AAVCPropVariant@NCOM@NWindows@@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?TarStringToUnicode@CHandler@NTar@NArchive@@ABEXABVAString@@AAVCPropVariant@NCOM@NWindows@@_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetProperty@CHandler@NTar@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$2 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__ehhandler$?GetProperty@CHandler@NTar@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-84h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetProperty@CHandler@NTar@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$2 proc near
mov ['eax,', '[ebp-0C4h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$3 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$4 proc near
mov ['eax,', '[ebp-0CCh]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$5 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$6 proc near
mov ['eax,', '[ebp-0D4h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$7 proc near
lea ['ecx,', '[ebp-58h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$8 proc near
lea ['ecx,', '[ebp-68h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$9 proc near
lea ['ecx,', '[ebp-0A8h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Extract@CHandler@NTar@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetStream@CHandler@NTar@NArchive@@UAGJIPAPAUISequentialInStream@@@Z$2 proc near
mov ['eax,', '[ebp-3Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?GetStream@CHandler@NTar@NArchive@@UAGJIPAPAUISequentialInStream@@@Z$3 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__ehhandler$?GetStream@CHandler@NTar@NArchive@@UAGJIPAPAUISequentialInStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-88h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetStream@CHandler@NTar@NArchive@@UAGJIPAPAUISequentialInStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
?MyStringLen@@YGIPB_W@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_3245']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
test ['eax,', 'eax']
jz ['short', 'loc_3255']
jmp ['short', 'loc_323C']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetPackSizeAligned@CItem@NTar@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '1FFh']
mov ['edx,', '[eax+14h]']
adc ['edx,', '0']
and ['ecx,', '0FFFFFE00h']
mov ['eax,', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CItemEx@NTar@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CItem@NTar@NArchive@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CItem@NTar@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CItem@NTar@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??1?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1AString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '3Ch']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '54h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1CItem@NTar@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CItem@NTar@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CItemEx@NTar@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CItem@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CItem@NTar@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CItem@NTar@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??0?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '3Ch']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '54h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0CItem@NTar@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CItem@NTar@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCopyCoder@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0ICompressSetInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??0ICompressGetInStreamProcessedSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCopyCoder@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CCopyCoder@NCompress@@6BICompressSetInStream@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CCopyCoder@NCompress@@6BISequentialInStream@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CCopyCoder@NCompress@@6BICompressGetInStreamProcessedSize@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_3EC3']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_3F85']
push ['offset', '_IID_ICompressCoder']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_3EE2']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_3F85']
push ['offset', '_IID_ICompressSetInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_3F16']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_3F05']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_3F0C']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_3F85']
push ['offset', '_IID_ISequentialInStream']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_3F4A']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_3F39']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_3F40']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_3F85']
push ['offset', '_IID_ICompressGetInStreamProcessedSize']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_3F7E']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_3F6D']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_3F74']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_3F85']
mov ['eax,', '80004002h']
jmp ['short', 'loc_3F96']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CCopyCoder@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCopyCoder@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+10h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4052']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+10h]']
jmp ['short', 'loc_407C']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_4073']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCCopyCoder@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_407A']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressGetInStreamProcessedSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressGetInStreamProcessedSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCCopyCoder@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCopyCoder@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_41C2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?QueryInterface@CHandler@NTar@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4217']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_4310']
push ['offset', '_IID_IInArchive']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4236']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_4310']
push ['offset', '_IID_IArchiveOpenSeq']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_426D']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_4259']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_4260']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['loc_4310']
push ['offset', '_IID_IInArchiveGetStream']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_42A1']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_4290']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4297']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_4310']
push ['offset', '_IID_ISetProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_42D5']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_42C4']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_42CB']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4310']
push ['offset', '_IID_IOutArchive']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4309']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_42F8']
mov ['edx,', '[ebp+this]']
add ['edx,', '10h']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_42FF']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_4310']
mov ['eax,', '80004002h']
jmp ['short', 'loc_4321']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+14h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+14h],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CHandler@NTar@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CHandler@NTar@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+14h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_439A']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+14h]']
jmp ['short', 'loc_43C4']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_43BB']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCHandler@NTar@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_43C2']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCHandler@NTar@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CHandler@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_43FE']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CHandler@NTar@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CHandler@NTar@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0ECh']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1CItemEx@NTar@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CHandler@NTar@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@NTar@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@NTar@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@NTar@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1CItemEx@NTar@NArchive@@QAE@XZ']
endp
__ehhandler$??1CHandler@NTar@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CHandler@NTar@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0IInArchive@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IArchiveOpenSeq@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IArchiveOpenSeq@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IInArchiveGetStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInArchiveGetStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISetProperties@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISetProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IOutArchive@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@AString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetUnpackSize@CItem@NTar@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsSymLink@CItem@NTar@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_47BA']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '3Ch']
call ['?Len@AString@@QBEIXZ']
xor ['ecx,', 'ecx']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_47C9']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[edx+1Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsSymLink@CItem@NTar@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+68h]']
cmp ['ecx,', '32h']
jnz ['short', 'loc_483F']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+18h]']
or ['edx,', '[ecx+1Ch]']
jnz ['short', 'loc_483F']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_4846']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsDir@CItem@NTar@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+68h]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '44h']
ja ['short', '$LN3']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'ds:$LN7_2[edx]']
jmp ['ds:$LN8_0[eax*4]']
mov ['al,', '1']
jmp ['short', 'loc_489B']
push ['offset', 'unk_1']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['?HasTailSlash@NItemName@NArchive@@YG_NABVAString@@I@Z']
jmp ['short', 'loc_489B']
xor ['al,', 'al']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CLimitedSequentialInStream@@QAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+20h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetStream@CLimitedSequentialOutStream@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReleaseStream@CLimitedSequentialOutStream@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CLimitedSequentialOutStream@@QAEX_K_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ebp+arg_8]']
mov ['[ecx+19h],', 'dl']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetRem@CLimitedSequentialOutStream@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+10h]']
mov ['edx,', '[ecx+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsSparse@CItem@NTar@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+68h]']
xor ['eax,', 'eax']
cmp ['ecx,', '53h']
setz ['al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetDataPosition@CItemEx@NTar@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+80h]']
xor ['edx,', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+78h]']
adc ['edx,', '[ecx+7Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CLimitedSequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CLimitedSequentialInStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CLimitedSequentialInStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4B80']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4BA3']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4B9C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4BA3']
mov ['eax,', '80004002h']
jmp ['short', 'loc_4BB4']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CLimitedSequentialInStream@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CLimitedSequentialInStream@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4C26']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_4C50']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_4C47']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCLimitedSequentialInStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_4C4E']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCLimitedSequentialInStream@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CLimitedSequentialInStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4C8A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CLimitedSequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CLimitedSequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CLimitedSequentialOutStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CLimitedSequentialOutStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4E28']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4E4B']
push ['offset', '_IID_ISequentialOutStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4E44']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4E4B']
mov ['eax,', '80004002h']
jmp ['short', 'loc_4E5C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CLimitedSequentialOutStream@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CLimitedSequentialOutStream@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4ECE']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_4EF8']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_4EEF']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCLimitedSequentialOutStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_4EF6']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCLimitedSequentialOutStream@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CLimitedSequentialOutStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4F32']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CLimitedSequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CSparseStream@NTar@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+18h],', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CSparseStream@NTar@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CSparseStream@NTar@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CSparseStream@NTar@NArchive@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0?$CMyComPtr@UIUnknown@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CSparseStream@NTar@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
endp
__ehhandler$??0CSparseStream@NTar@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CSparseStream@NTar@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0IInStream@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CSparseStream@NTar@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5258']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_5297']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5274']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_5297']
push ['offset', '_IID_IInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5290']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_5297']
mov ['eax,', '80004002h']
jmp ['short', 'loc_52A8']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CSparseStream@NTar@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CSparseStream@NTar@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_531A']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_5344']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_533B']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCSparseStream@NTar@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_5342']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCSparseStream@NTar@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CSparseStream@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_537E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CSparseStream@NTar@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CSparseStream@NTar@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CSparseStream@NTar@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
endp
__ehhandler$??1CSparseStream@NTar@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CSparseStream@NTar@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Ptr@UString@@QBEPB_WI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MakeLower_Ascii@UString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?MyStringLower_Ascii@@YGXPA_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEqualTo@UString@@QBE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?StringsAreEqual_Ascii@@YG_NPB_WPBD@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5558']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_559E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_55EB']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5658']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_567B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UISequentialInStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5738']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_577E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_57CB']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5838']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_585B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Detach@?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_58FC']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5942']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_598F']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_59FC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_5A1F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5A90']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5AD6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5B52']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5B90']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_5BB3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEAAUCItemEx@NTar@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEIABUCItemEx@NTar@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEIABUCItemEx@NTar@NArchive@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['88h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5D77']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CItemEx@NTar@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_5D7E']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEIABUCItemEx@NTar@NArchive@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEIABUCItemEx@NTar@NArchive@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEIABUCItemEx@NTar@NArchive@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_5E9A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5E91']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCItemEx@NTar@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_5E98']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_5E56']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@UCItemEx@NTar@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5F80']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_5F77']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCItemEx@NTar@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_5F7E']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_5F3C']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5FEA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6040']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_6063']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_60D2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAEPAPAUIArchiveOpenVolumeCallback@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBEPAUIArchiveOpenVolumeCallback@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Reserve@?$CRecordVector@_K@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_61FC']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_61D7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AddInReserved@?$CRecordVector@_K@@QAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??A?$CRecordVector@_K@@QAEAA_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CItemEx@NTar@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CItem@NTar@NArchive@@QAE@ABU012@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+78h]']
mov ['[ecx+78h],', 'eax']
mov ['edx,', '[edx+7Ch]']
mov ['[ecx+7Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+80h]']
mov ['[eax+80h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+84h]']
mov ['[eax+84h],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+85h]']
mov ['[eax+85h],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCItemEx@NTar@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CItemEx@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6346']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CItem@NTar@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CItem@NTar@NArchive@@QAE@ABU012@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0AString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[edx+14h]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['ecx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['[edx+20h],', 'ecx']
mov ['eax,', '[eax+24h]']
mov ['[edx+24h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['[ecx+28h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
mov ['[ecx+2Ch],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
mov ['[ecx+30h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
mov ['[ecx+34h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
mov ['[ecx+38h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '3Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??0AString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '48h']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??0AString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '54h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??0AString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
mov ['[ecx+60h],', 'eax']
mov ['edx,', '[edx+64h]']
mov ['[ecx+64h],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+68h]']
mov ['[eax+68h],', 'dl']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+69h]']
mov ['[eax+69h],', 'dl']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+6Ah]']
mov ['[eax+6Ah],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '6Ch']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??0?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '3Ch']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '54h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0CItem@NTar@NArchive@@QAE@ABU012@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CItem@NTar@NArchive@@QAE@ABU012@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6708']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '10h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_67D0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_67AB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CHandler@NTar@NArchive@@WBA@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '10h']
jmp ['?QueryInterface@CHandler@NTar@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CCopyCoder@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CCopyCoder@NCompress@@UAGKXZ']
endp
?Release@CHandler@NTar@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CHandler@NTar@NArchive@@UAGKXZ']
endp
?Release@CCopyCoder@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CCopyCoder@NCompress@@UAGKXZ']
endp
?Release@CHandler@NTar@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CHandler@NTar@NArchive@@UAGKXZ']
endp
?Release@CCopyCoder@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CCopyCoder@NCompress@@UAGKXZ']
endp
?AddRef@CCopyCoder@NCompress@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CCopyCoder@NCompress@@UAGKXZ']
endp
?Release@CHandler@NTar@NArchive@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CHandler@NTar@NArchive@@UAGKXZ']
endp
?AddRef@CHandler@NTar@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CHandler@NTar@NArchive@@UAGKXZ']
endp
?AddRef@CCopyCoder@NCompress@@W7AGKXZ proc near 
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CCopyCoder@NCompress@@UAGKXZ']
endp
?QueryInterface@CCopyCoder@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CHandler@NTar@NArchive@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?Release@CHandler@NTar@NArchive@@UAGKXZ']
endp
?AddRef@CHandler@NTar@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CHandler@NTar@NArchive@@UAGKXZ']
endp
?AddRef@CCopyCoder@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CCopyCoder@NCompress@@UAGKXZ']
endp
?QueryInterface@CHandler@NTar@NArchive@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CHandler@NTar@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CCopyCoder@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CHandler@NTar@NArchive@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CHandler@NTar@NArchive@@UAGKXZ']
endp
?QueryInterface@CHandler@NTar@NArchive@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CHandler@NTar@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CCopyCoder@NCompress@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CHandler@NTar@NArchive@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?AddRef@CHandler@NTar@NArchive@@UAGKXZ']
endp
?QueryInterface@CHandler@NTar@NArchive@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CHandler@NTar@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp

_Ppmd7z_RangeDec_Init@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0FFFFFFFFh']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_46']
xor ['eax,', 'eax']
jmp ['short', 'loc_99']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_58']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '4']
jnb ['short', 'loc_8E']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', '[eax+10h]']
shl ['esi,', '8']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'al']
or ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'esi']
jmp ['short', 'loc_4F']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+10h],', '0FFFFFFFFh']
sbb ['eax,', 'eax']
neg ['eax']
pop ['edi']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_Ppmd7z_RangeDec_CreateVTable@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', 'offset', '_Range_GetThreshold@8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '_Range_Decode@12']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '_Range_DecodeBit@8']
pop ['ebp']
retn ['4']
endp
_Range_GetThreshold@8 proc near         
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+0Ch]']
xor ['edx,', 'edx']
div ['[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+10h]']
xor ['edx,', 'edx']
div ['[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
_Range_Decode@12 proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
imul ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
imul ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Range_Normalize@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
_Range_Normalize@4 proc near            
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
push ['edi']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0Ch],', '1000000h']
jnb ['loc_22B']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', '[ecx+10h]']
shl ['esi,', '8']
mov ['edi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
or ['esi,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+10h],', 'esi']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0Ch],', '1000000h']
jnb ['short', 'loc_22B']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', '[ecx+10h]']
shl ['esi,', '8']
mov ['edi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
or ['esi,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+10h],', 'esi']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
_Range_DecodeBit@8 proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
shr ['edx,', '0Eh']
imul ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['short', 'loc_28E']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'eax']
jmp ['short', 'loc_2B3']
mov ['[ebp+var_C],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
sub ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
sub ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_Range_Normalize@4']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
_Ppmd7_DecodeSymbol@8 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '578h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_578]']
mov ['ecx,', '15Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '1']
jz ['loc_5DC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_110],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_118],', 'eax']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['[ebp+var_11C],', 'ecx']
mov ['edx,', '[ebp+var_118]']
cmp ['edx,', '[ebp+var_11C]']
jnb ['short', 'loc_3A9']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['esi,', 'esp']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_110]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_110]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_11D],', 'dl']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Ppmd7_Update1_0@4']
movzx ['eax,', '[ebp+var_11D]']
jmp ['loc_B23']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '1']
mov ['[ebp+var_114],', 'ecx']
mov ['edx,', '[ebp+var_110]']
add ['edx,', '6']
mov ['[ebp+var_110],', 'edx']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
add ['ecx,', '[ebp+var_11C]']
mov ['[ebp+var_11C],', 'ecx']
mov ['edx,', '[ebp+var_11C]']
cmp ['edx,', '[ebp+var_118]']
jbe ['short', 'loc_459']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_110]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
mov ['ecx,', '[ebp+var_11C]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_110]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_110]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_11E],', 'dl']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Ppmd7_Update1@4']
movzx ['eax,', '[ebp+var_11E]']
jmp ['loc_B23']
mov ['ecx,', '[ebp+var_114]']
sub ['ecx,', '1']
mov ['[ebp+var_114],', 'ecx']
jnz ['loc_3C4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
cmp ['[ebp+var_118],', 'ecx']
jb ['short', 'loc_489']
mov ['eax,', '0FFFFFFFEh']
jmp ['loc_B23']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx+388h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
sub ['ecx,', '[ebp+var_11C]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_11C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_124],', '0']
jmp ['short', 'loc_4EA']
mov ['eax,', '[ebp+var_124]']
add ['eax,', '8']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '40h']
jnb ['loc_584']
mov ['ecx,', '[ebp+var_124]']
mov ['[ebp+ecx*4+var_108],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_124]']
mov ['[ebp+edx*4+var_104],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+eax*4+var_100],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_124]']
mov ['[ebp+ecx*4+var_FC],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_124]']
mov ['[ebp+edx*4+var_F8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+eax*4+var_F4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_124]']
mov ['[ebp+ecx*4+var_F0],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_124]']
mov ['[ebp+edx*4+var_EC],', '0FFFFFFFFh']
jmp ['loc_4DB']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['byte', 'ptr', '[ebp+ecx+var_108],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '1']
mov ['[ebp+var_114],', 'ecx']
mov ['edx,', '[ebp+var_110]']
sub ['edx,', '6']
mov ['[ebp+var_110],', 'edx']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['byte', 'ptr', '[ebp+ecx+var_108],', '0']
mov ['edx,', '[ebp+var_114]']
sub ['edx,', '1']
mov ['[ebp+var_114],', 'edx']
jnz ['short', 'loc_5A6']
jmp ['loc_801']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+388h]']
mov ['[ebp+var_570],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_570]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
sar ['edx,', '1Ah']
and ['edx,', '20h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['eax,', 'byte', 'ptr', '[ecx+2]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax+388h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx]']
mov ['ecx,', '[ecx+8]']
movzx ['ecx,', 'word', 'ptr', '[ecx]']
mov ['esi,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[esi+ecx+287h]']
mov ['esi,', '[ebp+arg_0]']
mov ['esi,', '[esi+14h]']
add ['esi,', 'ecx']
add ['esi,', '[ebp+var_570]']
lea ['eax,', '[esi+eax*2]']
add ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['ecx,', 'byte', 'ptr', '[edx+3]']
sub ['ecx,', '1']
shl ['ecx,', '7']
mov ['edx,', '[ebp+arg_0]']
lea ['ecx,', '[edx+ecx+0ACCh]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_128],', 'edx']
mov ['eax,', '[ebp+var_128]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6F5']
mov ['edx,', '[ebp+var_128]']
movzx ['eax,', 'word', 'ptr', '[edx]']
add ['eax,', '80h']
mov ['ecx,', '[ebp+var_128]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
add ['edx,', '20h']
sar ['edx,', '7']
sub ['eax,', 'edx']
mov ['ecx,', '[ebp+var_128]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
add ['eax,', '2']
mov ['[ebp+var_574],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_574]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_574]']
mov ['cl,', '[eax]']
mov ['[ebp+var_129],', 'cl']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_Ppmd7_UpdateBin@4']
movzx ['eax,', '[ebp+var_129]']
jmp ['loc_B23']
mov ['eax,', '[ebp+var_128]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_128]']
movzx ['eax,', 'word', 'ptr', '[edx]']
add ['eax,', '20h']
sar ['eax,', '7']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+var_128]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_128]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sar ['ecx,', '0Ah']
movzx ['edx,', 'byte', 'ptr', 'ds:_PPMD7_kExpEscape[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+10h],', 'edx']
mov ['[ebp+var_130],', '0']
jmp ['short', 'loc_74C']
mov ['ecx,', '[ebp+var_130]']
add ['ecx,', '8']
mov ['[ebp+var_130],', 'ecx']
cmp ['[ebp+var_130],', '40h']
jnb ['loc_7E6']
mov ['edx,', '[ebp+var_130]']
mov ['[ebp+edx*4+var_108],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_130]']
mov ['[ebp+eax*4+var_104],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+ecx*4+var_100],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_130]']
mov ['[ebp+edx*4+var_FC],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_130]']
mov ['[ebp+eax*4+var_F8],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+ecx*4+var_F4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_130]']
mov ['[ebp+edx*4+var_F0],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_130]']
mov ['[ebp+eax*4+var_EC],', '0FFFFFFFFh']
jmp ['loc_73D']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
mov ['byte', 'ptr', '[ebp+eax+var_108],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_560],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_831']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_B23']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '[ebp+var_560]']
jz ['short', 'loc_80F']
mov ['[ebp+var_550],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_53C],', 'ecx']
mov ['[ebp+var_558],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '[ebp+var_560]']
mov ['[ebp+var_55C],', 'ecx']
mov ['edx,', '[ebp+var_53C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
movsx ['ecx,', 'byte', 'ptr', '[ebp+eax+var_108]']
mov ['[ebp+var_564],', 'ecx']
mov ['edx,', '[ebp+var_53C]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
and ['eax,', '[ebp+var_564]']
add ['eax,', '[ebp+var_550]']
mov ['[ebp+var_550],', 'eax']
mov ['ecx,', '[ebp+var_558]']
mov ['edx,', '[ebp+var_53C]']
mov ['[ebp+ecx*4+var_534],', 'edx']
mov ['eax,', '[ebp+var_53C]']
add ['eax,', '6']
mov ['[ebp+var_53C],', 'eax']
mov ['ecx,', '[ebp+var_558]']
sub ['ecx,', '[ebp+var_564]']
mov ['[ebp+var_558],', 'ecx']
mov ['edx,', '[ebp+var_558]']
cmp ['edx,', '[ebp+var_55C]']
jnz ['short', 'loc_884']
lea ['eax,', '[ebp+var_544]']
push ['eax']
mov ['ecx,', '[ebp+var_560]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_Ppmd7_MakeEscFreq@12']
mov ['[ebp+var_554],', 'eax']
mov ['eax,', '[ebp+var_544]']
add ['eax,', '[ebp+var_550]']
mov ['[ebp+var_544],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_544]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_54C],', 'eax']
mov ['edx,', '[ebp+var_54C]']
cmp ['edx,', '[ebp+var_550]']
jnb ['loc_A98']
lea ['eax,', '[ebp+var_534]']
mov ['[ebp+var_56C],', 'eax']
mov ['[ebp+var_550],', '0']
jmp ['short', 'loc_982']
mov ['ecx,', '[ebp+var_56C]']
add ['ecx,', '4']
mov ['[ebp+var_56C],', 'ecx']
mov ['edx,', '[ebp+var_56C]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
add ['ecx,', '[ebp+var_550]']
mov ['[ebp+var_550],', 'ecx']
mov ['edx,', '[ebp+var_550]']
cmp ['edx,', '[ebp+var_54C]']
ja ['short', 'loc_9AA']
jmp ['short', 'loc_973']
mov ['eax,', '[ebp+var_56C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_53C],', 'ecx']
mov ['edx,', '[ebp+var_53C]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_53C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
mov ['eax,', '[ebp+var_550]']
sub ['eax,', 'edx']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_554]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
cmp ['edx,', '7']
jge ['short', 'loc_A69']
mov ['eax,', '[ebp+var_554]']
mov ['cl,', '[eax+3]']
sub ['cl,', '1']
mov ['[ebp+var_575],', 'cl']
mov ['edx,', '[ebp+var_554]']
mov ['al,', '[ebp+var_575]']
mov ['[edx+3],', 'al']
movzx ['ecx,', '[ebp+var_575]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A69']
mov ['edx,', '[ebp+var_554]']
mov ['ax,', '[edx]']
shl ['ax,', '1']
mov ['ecx,', '[ebp+var_554]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_554]']
movzx ['ecx,', 'byte', 'ptr', '[edx+2]']
mov ['eax,', '3']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_554]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_554]']
mov ['al,', '[edx+2]']
add ['al,', '1']
mov ['ecx,', '[ebp+var_554]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_53C]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_53C]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_565],', 'dl']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Ppmd7_Update2@4']
movzx ['eax,', '[ebp+var_565]']
jmp ['loc_B23']
mov ['ecx,', '[ebp+var_54C]']
cmp ['ecx,', '[ebp+var_544]']
jb ['short', 'loc_AAD']
mov ['eax,', '0FFFFFFFEh']
jmp ['short', 'loc_B23']
mov ['edx,', '[ebp+var_544]']
sub ['edx,', '[ebp+var_550]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_550]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_554]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
add ['edx,', '[ebp+var_544]']
mov ['eax,', '[ebp+var_554]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+var_558]']
sub ['ecx,', '1']
mov ['[ebp+var_558],', 'ecx']
mov ['edx,', '[ebp+var_558]']
mov ['eax,', '[ebp+edx*4+var_534]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['byte', 'ptr', '[ebp+ecx+var_108],', '0']
cmp ['[ebp+var_558],', '0']
jnz ['short', 'loc_AEE']
jmp ['loc_801']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN43']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '578h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

?WaitAndCode@CThreadInfo@NZip@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_33']
jmp ['loc_EC']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0A0h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
push ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0C0h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['?Compress@CAddCommon@NZip@NArchive@@QAEJPAUISequentialInStream@@PAUIOutStream@@IPAUICompressProgressInfo@@AAUCCompressingResult@23@@Z']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+98h],', 'eax']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+98h],', '0']
jnz ['short', 'loc_DC']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_DC']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['??C?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0A8h']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0A0h']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+98h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
jmp ['loc_18']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@CMtProgressMixer2@NZip@NArchive@@QAEXPAUIProgress@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??4?$CMyComPtr@UIProgress@@@@QAEPAUIProgress@@PAU1@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['??I?$CMyComPtr@UICompressProgressInfo@@@@QAEPAPAUICompressProgressInfo@@XZ']
push ['eax']
push ['offset', '_IID_ICompressProgressInfo']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??$QueryInterface@UICompressProgressInfo@@@?$CMyComPtr@UIProgress@@@@QBEJABU_GUID@@PAPAUICompressProgressInfo@@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ebp+arg_4]']
mov ['[ecx+38h],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['dword', 'ptr', '[ecx+24h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetProgressOffset@CMtProgressMixer2@NZip@NArchive@@QAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '3Ch']
call ['?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[edx+0Ch],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '3Ch']
call ['?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetRatioInfo@CMtProgressMixer2@NZip@NArchive@@QAEJIPB_K0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetRatioInfo@CMtProgressMixer2@NZip@NArchive@@QAEJIPB_K0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '3Ch']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2D9']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_2D9']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??C?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_3C],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_2D9']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_34],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_34]']
jmp ['loc_3A1']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2F5']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_4]']
mov ['esi,', '[ecx]']
mov ['[eax+edx*8+10h],', 'esi']
mov ['ecx,', '[ecx+4]']
mov ['[eax+edx*8+14h],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_311']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_8]']
mov ['esi,', '[ecx]']
mov ['[eax+edx*8+20h],', 'esi']
mov ['ecx,', '[ecx+4]']
mov ['[eax+edx*8+24h],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+38h]']
test ['eax,', 'eax']
jz ['short', 'loc_336']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ecx+10h]']
add ['eax,', '[edx+18h]']
mov ['ecx,', '[ecx+14h]']
adc ['ecx,', '[edx+1Ch]']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_40],', 'ecx']
jmp ['short', 'loc_34E']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[edx+20h]']
add ['ecx,', '[eax+28h]']
mov ['edx,', '[edx+24h]']
adc ['edx,', '[eax+2Ch]']
mov ['[ebp+var_44],', 'ecx']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+var_44]']
mov ['edx,', '[eax+0Ch]']
adc ['edx,', '[ebp+var_40]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_28],', 'edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??C?$CMyComPtr@UIProgress@@@@QBEPAUIProgress@@XZ']
mov ['[ebp+var_48],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SetRatioInfo@CMtProgressMixer2@NZip@NArchive@@UAGJPB_K0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+this]']
call ['?SetRatioInfo@CMtProgressMixer2@NZip@NArchive@@QAEJIPB_K0@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?Create@CMtProgressMixer@NZip@NArchive@@QAEXPAUIProgress@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Create@CMtProgressMixer@NZip@NArchive@@QAEXPAUIProgress@@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['58h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_480']
mov ['ecx,', '[ebp+var_18]']
call ['??0CMtProgressMixer2@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_487']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??4?$CMyComPtr@UICompressProgressInfo@@@@QAEPAUICompressProgressInfo@@PAU1@@Z']
movzx ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx+8]']
call ['?Create@CMtProgressMixer2@NZip@NArchive@@QAEXPAUIProgress@@_N@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetRatioInfo@CMtProgressMixer@NZip@NArchive@@UAGJPB_K0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+8]']
call ['?SetRatioInfo@CMtProgressMixer2@NZip@NArchive@@QAEJIPB_K0@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?Allocate@CCacheOutStream@NZip@NArchive@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_537']
push ['400000h']
call ['_MidAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
setnz ['al']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CCacheOutStream@NZip@NArchive@@QAEJPAUIOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '10h']
mov ['esi,', 'esp']
push ['eax']
push ['1']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5F8']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_6C3']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '18h']
mov ['esi,', 'esp']
push ['edx']
push ['2']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_63B']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_6C3']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
mov ['esi,', 'esp']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[edx+10h]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_682']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_6C3']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ecx+14h]']
mov ['[eax+24h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[eax+1Ch]']
mov ['[edx+2Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+30h],', '0']
mov ['dword', 'ptr', '[ecx+34h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+38h],', '0']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyWrite@CCacheOutStream@NZip@NArchive@@AAEJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['loc_872']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jz ['loc_872']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[eax+20h]']
cmp ['edx,', '[ecx+30h]']
jnz ['short', 'loc_73B']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[eax+24h]']
cmp ['edx,', '[ecx+34h]']
jz ['short', 'loc_785']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+34h]']
push ['edx']
mov ['eax,', '[ecx+30h]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_785']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_874']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+30h]']
and ['eax,', '3FFFFFh']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
push ['edx']
mov ['eax,', '400000h']
sub ['eax,', '[ebp+var_C]']
push ['eax']
call ['??$MyMin@I@@YGIII@Z']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['??$MyMin@I@@YGIII@Z']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_7EB']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_874']
mov ['eax,', '[ebp+var_10]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+20h]']
adc ['ecx,', '[edx+24h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+20h],', 'eax']
mov ['[edx+24h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[edx+2Ch]']
cmp ['ecx,', '[eax+24h]']
ja ['short', 'loc_83E']
jb ['short', 'loc_82C']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[edx+28h]']
cmp ['ecx,', '[eax+20h]']
jnb ['short', 'loc_83E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[eax+24h]']
mov ['[edx+2Ch],', 'eax']
mov ['ecx,', '[ebp+var_10]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['ecx,', '[eax+30h]']
adc ['edx,', '[eax+34h]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+30h],', 'ecx']
mov ['[eax+34h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
sub ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+38h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '[ebp+var_10]']
mov ['[ebp+arg_0],', 'ecx']
jmp ['loc_6FC']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?FlushCache@CCacheOutStream@NZip@NArchive@@AAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MyWrite@CCacheOutStream@NZip@NArchive@@AAEJI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCacheOutStream@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCacheOutStream@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCacheOutStream@NZip@NArchive@@6B@']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?FlushCache@CCacheOutStream@NZip@NArchive@@AAEJXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+18h]']
cmp ['edx,', '[ecx+28h]']
jnz ['short', 'loc_943']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+1Ch]']
cmp ['edx,', '[ecx+2Ch]']
jz ['short', 'loc_973']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[eax+18h]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+20h]']
jnz ['short', 'loc_99B']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[eax+14h]']
cmp ['edx,', '[ecx+24h]']
jz ['short', 'loc_9CF']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_28],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_MidFree@4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['esi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Write@CCacheOutStream@NZip@NArchive@@UAGJPBXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '78h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_78]']
mov ['ecx,', '1Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A36']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_A43']
xor ['eax,', 'eax']
jmp ['loc_DC9']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ecx+14h]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+38h],', '0']
jz ['loc_B1E']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[ecx+14h]']
cmp ['eax,', '[edx+34h]']
ja ['short', 'loc_AA4']
jb ['short', 'loc_A89']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[ecx+10h]']
cmp ['eax,', '[edx+30h]']
jnb ['short', 'loc_AA4']
mov ['ecx,', '[ebp+this]']
call ['?FlushCache@CCacheOutStream@NZip@NArchive@@AAEJXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_AA2']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_DC9']
jmp ['short', 'loc_B1E']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+38h]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+30h]']
adc ['eax,', '[ecx+34h]']
mov ['[ebp+var_14],', 'edx']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax+14h]']
ja ['short', 'loc_B1E']
jb ['short', 'loc_AD9']
mov ['edx,', '[ebp+var_4C]']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[edx+10h]']
jnb ['short', 'loc_B1E']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx+2Ch]']
ja ['short', 'loc_B12']
jb ['short', 'loc_AF7']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx+28h]']
jnb ['short', 'loc_B12']
mov ['ecx,', '[ebp+this]']
call ['?FlushCache@CCacheOutStream@NZip@NArchive@@AAEJXZ']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_B10']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_DC9']
jmp ['short', 'loc_B1E']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+38h],', '0']
jnz ['short', 'loc_B6F']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_54],', 'eax']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[ebp+var_54]']
mov ['eax,', '[ebp+var_58]']
mov ['ecx,', '[edx+2Ch]']
cmp ['ecx,', '[eax+14h]']
ja ['short', 'loc_B6F']
jb ['short', 'loc_B51']
mov ['edx,', '[ebp+var_54]']
mov ['eax,', '[ebp+var_58]']
mov ['ecx,', '[edx+28h]']
cmp ['ecx,', '[eax+10h]']
jnb ['short', 'loc_B6F']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+28h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[edx+2Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+30h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[edx+34h],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+10h]']
jnz ['short', 'loc_B8F']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[edx+14h]']
jz ['loc_C60']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+38h]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+30h]']
adc ['eax,', '[ecx+34h]']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+var_20]']
and ['edx,', '3FFFFFh']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '400000h']
sub ['eax,', '[ebp+var_24]']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+Size]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
mov ['esi,', '[eax+10h]']
sub ['esi,', '[ebp+var_20]']
mov ['eax,', '[eax+14h]']
sbb ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_64],', 'ecx']
mov ['[ebp+var_60],', 'edx']
mov ['[ebp+var_6C],', 'esi']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_60]']
cmp ['ecx,', '[ebp+var_68]']
jb ['short', 'loc_C01']
ja ['short', 'loc_BEF']
mov ['edx,', '[ebp+var_64]']
cmp ['edx,', '[ebp+var_6C]']
jbe ['short', 'loc_C01']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '[ebp+var_20]']
mov ['edx,', '[eax+14h]']
sbb ['edx,', '[ebp+var_1C]']
mov ['[ebp+Size],', 'ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_C09']
jmp ['short', 'loc_C60']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '400000h']
sub ['ecx,', '[eax+38h]']
cmp ['[ebp+Size],', 'ecx']
jbe ['short', 'loc_C34']
mov ['ecx,', '[ebp+this]']
call ['?MyWriteBlock@CCacheOutStream@NZip@NArchive@@AAEJXZ']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_C32']
mov ['eax,', '[ebp+var_2C]']
jmp ['loc_DC9']
jmp ['short', 'loc_C09']
mov ['edx,', '[ebp+Size]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+38h]']
add ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+38h],', 'eax']
jmp ['loc_B8F']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+38h],', '0']
jnz ['short', 'loc_C7B']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+30h],', 'edx']
mov ['ecx,', '[ecx+14h]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
and ['eax,', '3FFFFFh']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '400000h']
sub ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['??$MyMin@I@@YGIII@Z']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+38h]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+30h]']
adc ['edx,', '[eax+34h]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_34],', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_70],', 'ecx']
mov ['edx,', '[ebp+var_70]']
mov ['eax,', '[edx+10h]']
cmp ['eax,', '[ebp+var_38]']
jnz ['short', 'loc_CD1']
mov ['ecx,', '[ebp+var_70]']
mov ['edx,', '[ecx+14h]']
cmp ['edx,', '[ebp+var_34]']
jz ['short', 'loc_CEF']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_34]']
sbb ['edx,', '[eax+14h]']
push ['ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$MyMin@I@@YGIII@Z']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_D4C']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+38h],', '400000h']
jnz ['short', 'loc_D14']
mov ['ecx,', '[ebp+this]']
call ['?MyWriteBlock@CCacheOutStream@NZip@NArchive@@AAEJXZ']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_D14']
mov ['eax,', '[ebp+var_3C]']
jmp ['loc_DC9']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+30h]']
and ['eax,', '3FFFFFh']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
cmp ['ecx,', '[ebp+var_30]']
jbe ['short', 'loc_D3D']
mov ['edx,', '[ebp+var_40]']
sub ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$MyMin@I@@YGIII@Z']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+38h]']
add ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[eax+38h],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_D74']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+10h]']
adc ['edx,', '[eax+14h]']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_74],', 'ecx']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_78]']
mov ['edx,', '[eax+1Ch]']
cmp ['edx,', '[ecx+14h]']
ja ['short', 'loc_DC7']
jb ['short', 'loc_DB5']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_78]']
mov ['edx,', '[eax+18h]']
cmp ['edx,', '[ecx+10h]']
jnb ['short', 'loc_DC7']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+18h],', 'edx']
mov ['ecx,', '[ecx+14h]']
mov ['[eax+1Ch],', 'ecx']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
add ['esp,', '78h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CCacheOutStream@NZip@NArchive@@UAGJ_JIPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_E05']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_E07']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_E1E']
jmp ['short', 'loc_E35']
jmp ['short', 'loc_E3C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+10h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+14h]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_E3C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+18h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_E3C']
mov ['eax,', '80030001h']
jmp ['short', 'loc_E76']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
jg ['short', 'loc_E51']
jl ['short', 'loc_E4A']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_E51']
mov ['eax,', '80070083h']
jmp ['short', 'loc_E76']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+14h],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_E74']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+4],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?SetSize@CCacheOutStream@NZip@NArchive@@UAGJ_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
cmp ['edx,', '[ecx+2Ch]']
ja ['short', 'loc_F18']
jb ['short', 'loc_ECB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
cmp ['ecx,', '[eax+28h]']
jnb ['short', 'loc_F18']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+14h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_F09']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_F8F']
mov ['edx,', '[ebp+this]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[edx+2Ch],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
cmp ['ecx,', '[eax+34h]']
ja ['short', 'loc_F4F']
jb ['short', 'loc_F36']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
cmp ['eax,', '[edx+30h]']
ja ['short', 'loc_F4F']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+38h],', '0']
mov ['edx,', '[ebp+this]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[edx+30h],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[edx+34h],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+38h]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
add ['eax,', '[edx+30h]']
adc ['ecx,', '[edx+34h]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
cmp ['eax,', '[ebp+var_14]']
ja ['short', 'loc_F8D']
jb ['short', 'loc_F78']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_18]']
jnb ['short', 'loc_F8D']
mov ['edx,', '[ebp+this]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
sub ['eax,', '[edx+30h]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
sbb ['ecx,', '[edx+34h]']
mov ['edx,', '[ebp+this]']
mov ['[edx+38h],', 'eax']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Update@NZip@NArchive@@YGJABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PAUISequentialOutStream@@PAVCInArchive@12@_NPAUCCompressionMethodMode@12@PAUIArchiveUpdateCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Update@NZip@NArchive@@YGJABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PAUISequentialOutStream@@PAVCInArchive@12@_NPAUCCompressionMethodMode@12@PAUIArchiveUpdateCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0DCh']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_FFB']
mov ['ecx,', '[ebp+arg_C]']
call ['?CanUpdate@CInArchive@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_FFB']
mov ['eax,', '80004001h']
jmp ['loc_14D0']
lea ['ecx,', '[ebp+var_14]']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_20]']
call ['??I?$CMyComPtr@UIOutStream@@@@QAEPAPAUIOutStream@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_IOutStream']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[edx]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_20]']
call ['??7?$CMyComPtr@UIOutStream@@@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1079']
mov ['[ebp+var_A4],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_A4]']
jmp ['loc_14D0']
cmp ['[ebp+arg_C],', '0']
jz ['loc_118D']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
cmp ['dword', 'ptr', '[ecx+3Ch],', '0']
jl ['loc_118D']
jg ['short', 'loc_10AE']
mov ['edx,', '[ebp+var_D0]']
cmp ['dword', 'ptr', '[edx+38h],', '0']
jbe ['loc_118D']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jnz ['loc_118D']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '80h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_D4],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_D4]']
push ['ecx']
mov ['edx,', '[ebp+var_D4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_112B']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_A8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_A8]']
jmp ['loc_14D0']
push ['0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+3Ch]']
push ['ecx']
mov ['edx,', '[eax+38h]']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '80h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
call ['?CopyStream_ExactSize@NCompress@@YGJPAUISequentialInStream@@PAUISequentialOutStream@@_KPAUICompressProgressInfo@@@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_118D']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_AC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_AC]']
jmp ['loc_14D0']
push ['40h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_B4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_B4],', '0']
jz ['short', 'loc_11BD']
mov ['ecx,', '[ebp+var_B4]']
call ['??0CCacheOutStream@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_D8],', 'eax']
jmp ['short', 'loc_11C7']
mov ['[ebp+var_D8],', '0']
mov ['ecx,', '[ebp+var_D8]']
mov ['[ebp+var_B0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_B0]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
call ['??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z']
mov ['ecx,', '[ebp+var_30]']
call ['?Allocate@CCacheOutStream@NZip@NArchive@@QAE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_122B']
mov ['[ebp+var_B8],', '8007000Eh']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_B8]']
jmp ['loc_14D0']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
call ['?Init@CCacheOutStream@NZip@NArchive@@QAEJPAUIOutStream@@@Z']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_1274']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_BC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_BC]']
jmp ['loc_14D0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
lea ['ecx,', '[ebp+var_88]']
call ['??0COutArchive@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_14]']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_88]']
call ['?Create@COutArchive@NZip@NArchive@@QAEJPAUIOutStream@@@Z']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_90],', '0']
jz ['short', 'loc_12E7']
mov ['eax,', '[ebp+var_90]']
mov ['[ebp+var_C0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_88]']
call ['??1COutArchive@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_C0]']
jmp ['loc_14D0']
cmp ['[ebp+arg_C],', '0']
jz ['loc_1461']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_DC],', 'ecx']
mov ['[ebp+var_E0],', 'edx']
mov ['eax,', '[ebp+var_DC]']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[eax+4Ch]']
cmp ['edx,', '[ecx+3Ch]']
jl ['loc_1461']
jg ['short', 'loc_1335']
mov ['eax,', '[ebp+var_DC]']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[eax+48h]']
cmp ['edx,', '[ecx+38h]']
jbe ['loc_1461']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '80h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_E4],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+3Ch]']
push ['ecx']
mov ['edx,', '[eax+38h]']
push ['edx']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
mov ['ecx,', '[ebp+var_E4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_94],', 'eax']
cmp ['[ebp+var_94],', '0']
jz ['short', 'loc_13B9']
mov ['ecx,', '[ebp+var_94]']
mov ['[ebp+var_C4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_88]']
call ['??1COutArchive@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_C4]']
jmp ['loc_14D0']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[edx+48h]']
sub ['ecx,', '[eax+38h]']
mov ['edx,', '[edx+4Ch]']
sbb ['edx,', '[eax+3Ch]']
mov ['[ebp+var_9C],', 'ecx']
mov ['[ebp+var_9C+4],', 'edx']
push ['0']
mov ['eax,', '[ebp+var_9C+4]']
push ['eax']
mov ['ecx,', '[ebp+var_9C]']
push ['ecx']
lea ['ecx,', '[ebp+var_14]']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '80h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
call ['?CopyStream_ExactSize@NCompress@@YGJPAUISequentialInStream@@PAUISequentialOutStream@@_KPAUICompressProgressInfo@@@Z']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0']
jz ['short', 'loc_1448']
mov ['edx,', '[ebp+var_A0]']
mov ['[ebp+var_C8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_88]']
call ['??1COutArchive@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_C8]']
jmp ['loc_14D0']
mov ['eax,', '[ebp+var_9C+4]']
push ['eax']
mov ['ecx,', '[ebp+var_9C]']
push ['ecx']
lea ['ecx,', '[ebp+var_88]']
call ['?MoveCurPos@COutArchive@NZip@NArchive@@QAEX_K@Z']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1475']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '6Ch']
mov ['[ebp+var_E8],', 'edx']
jmp ['short', 'loc_147F']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_E8]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
lea ['eax,', '[ebp+var_88]']
push ['eax']
call ['?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z']
mov ['[ebp+var_CC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_88]']
call ['??1COutArchive@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_CC]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN32']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '6ECh']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_6F8]']
mov ['ecx,', '1BBh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_IArchiveUpdateCallbackFile']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ecx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['dword', 'ptr', '[ebp+var_28],', '0']
mov ['dword', 'ptr', '[ebp+var_28+4],', '0']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_40],', '0']
jmp ['short', 'loc_160E']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '1']
mov ['[ebp+var_40],', 'ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?Size@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_40],', 'eax']
jnb ['loc_172D']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['??A?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QBEABUCUpdateItem@NZip@NArchive@@I@Z']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1679']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', 'dword', 'ptr', '[ebp+var_28]']
add ['eax,', '[edx+18h]']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_28+4]']
adc ['ecx,', '[edx+1Ch]']
mov ['dword', 'ptr', '[ebp+var_28],', 'eax']
mov ['dword', 'ptr', '[ebp+var_28+4],', 'ecx']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[edx+18h]']
mov ['ecx,', '[ebp+var_38]']
adc ['ecx,', '[edx+1Ch]']
mov ['[ebp+var_3C],', 'eax']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_30]']
adc ['eax,', '0']
mov ['[ebp+var_34],', 'edx']
mov ['[ebp+var_30],', 'eax']
jmp ['loc_1704']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@VCItemEx@NZip@NArchive@@@@QBEABVCItemEx@NZip@NArchive@@I@Z']
push ['eax']
lea ['ecx,', '[ebp+var_B0]']
call ['??0CItemEx@NZip@NArchive@@QAE@ABV012@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?ReadLocalItemAfterCdItemFull@CInArchive@NZip@NArchive@@QAEJAAVCItemEx@23@@Z']
test ['eax,', 'eax']
jz ['short', 'loc_16DE']
mov ['[ebp+var_65C],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_65C]']
jmp ['loc_3784']
lea ['ecx,', '[ebp+var_B0]']
call ['?GetLocalFullSize@CItemEx@NZip@NArchive@@QBE_KXZ']
add ['eax,', 'dword', 'ptr', '[ebp+var_28]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_28+4]']
mov ['dword', 'ptr', '[ebp+var_28],', 'eax']
mov ['dword', 'ptr', '[ebp+var_28+4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_28]']
add ['ecx,', '1Eh']
mov ['edx,', 'dword', 'ptr', '[ebp+var_28+4]']
adc ['edx,', '0']
mov ['dword', 'ptr', '[ebp+var_28],', 'ecx']
mov ['dword', 'ptr', '[ebp+var_28+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_28]']
add ['eax,', '2Eh']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_28+4]']
adc ['ecx,', '0']
mov ['dword', 'ptr', '[ebp+var_28],', 'eax']
mov ['dword', 'ptr', '[ebp+var_28+4],', 'ecx']
jmp ['loc_1605']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_1749']
mov ['ecx,', '[ebp+arg_14]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
xor ['edx,', 'edx']
add ['eax,', 'dword', 'ptr', '[ebp+var_28]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_28+4]']
mov ['dword', 'ptr', '[ebp+var_28],', 'eax']
mov ['dword', 'ptr', '[ebp+var_28+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_28]']
add ['eax,', '1']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_28+4]']
adc ['ecx,', '0']
mov ['dword', 'ptr', '[ebp+var_28],', 'eax']
mov ['dword', 'ptr', '[ebp+var_28+4],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', 'dword', 'ptr', '[ebp+var_28+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
lea ['ecx,', '[ebp+var_128]']
call ['??0CAddCommon@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['dword', 'ptr', '[ebp+var_28],', '0']
mov ['dword', 'ptr', '[ebp+var_28+4],', '0']
lea ['ecx,', '[ebp+var_178]']
call ['??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_17BF']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_178]']
call ['??4CCompressionMethodMode@NZip@NArchive@@QAEAAU012@ABU012@@Z']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_180],', 'edx']
mov ['[ebp+var_184],', '40h']
cmp ['[ebp+var_180],', '40h']
jbe ['short', 'loc_17E8']
mov ['[ebp+var_180],', '40h']
cmp ['[ebp+var_180],', '40h']
jbe ['short', 'loc_17FB']
mov ['[ebp+var_180],', '40h']
cmp ['[ebp+var_180],', '1']
jnb ['short', 'loc_180E']
mov ['[ebp+var_180],', '1']
mov ['[ebp+var_188],', '2000000h']
mov ['[ebp+var_18C],', '10000h']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_183D']
cmp ['[ebp+var_180],', '1']
jbe ['short', 'loc_183D']
mov ['[ebp+var_6C0],', '1']
jmp ['short', 'loc_1847']
mov ['[ebp+var_6C0],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_6C0]']
mov ['[ebp+var_18D],', 'al']
cmp ['[ebp+var_30],', '0']
ja ['short', 'loc_1868']
jb ['short', 'loc_1861']
cmp ['[ebp+var_34],', '1']
ja ['short', 'loc_1868']
mov ['[ebp+var_18D],', '0']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '18h']
call ['?Front@?$CRecordVector@E@@QBEABEXZ']
mov ['cl,', '[eax]']
mov ['[ebp+var_18E],', 'cl']
movzx ['edx,', '[ebp+var_18D]']
test ['edx,', 'edx']
jnz ['short', 'loc_18C5']
push ['0Dh']
lea ['ecx,', '[ebp+var_178]']
call ['?FindProp@CMethodProps@@QBEHK@Z']
test ['eax,', 'eax']
jge ['short', 'loc_18C0']
movzx ['eax,', '[ebp+var_164]']
test ['eax,', 'eax']
jnz ['short', 'loc_18AE']
movzx ['ecx,', '[ebp+var_18E]']
cmp ['ecx,', '0Ch']
jnz ['short', 'loc_18C0']
mov ['edx,', '[ebp+var_180]']
push ['edx']
lea ['ecx,', '[ebp+var_178]']
call ['?AddProp_NumThreads@CMethodProps@@QAEXI@Z']
jmp ['loc_1A68']
movzx ['eax,', '[ebp+var_18E]']
test ['eax,', 'eax']
jnz ['short', 'loc_18E5']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+24h]']
test ['edx,', 'edx']
jnz ['short', 'loc_18E5']
mov ['[ebp+var_180],', '1']
movzx ['eax,', '[ebp+var_18E]']
cmp ['eax,', '0Ch']
jnz ['loc_19EB']
lea ['ecx,', '[ebp+var_195]']
push ['ecx']
lea ['ecx,', '[ebp+var_178]']
call ['?Get_BZip2_NumThreads@CMethodProps@@QBEIAA_N@Z']
mov ['[ebp+var_1A0],', 'eax']
movzx ['edx,', '[ebp+var_195]']
test ['edx,', 'edx']
jnz ['loc_19D7']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['__aulldiv']
mov ['[ebp+var_1A8],', 'eax']
mov ['[ebp+var_1A4],', 'edx']
lea ['ecx,', '[ebp+var_178]']
call ['?Get_BZip2_BlockSize@CMethodProps@@QBEIXZ']
mov ['[ebp+var_1AC],', 'eax']
mov ['ecx,', '[ebp+var_1AC]']
xor ['edx,', 'edx']
push ['edx']
push ['ecx']
mov ['eax,', '[ebp+var_1A4]']
push ['eax']
mov ['ecx,', '[ebp+var_1A8]']
push ['ecx']
call ['__aulldiv']
add ['eax,', '1']
adc ['edx,', '0']
mov ['[ebp+var_1B4],', 'eax']
mov ['[ebp+var_1B0],', 'edx']
mov ['[ebp+var_1A0],', '20h']
mov ['edx,', '[ebp+var_1A0]']
xor ['eax,', 'eax']
mov ['[ebp+var_6C8],', 'edx']
mov ['[ebp+var_6C4],', 'eax']
mov ['ecx,', '[ebp+var_1B0]']
cmp ['ecx,', '[ebp+var_6C4]']
ja ['short', 'loc_19C5']
jb ['short', 'loc_19B9']
mov ['edx,', '[ebp+var_1B4]']
cmp ['edx,', '[ebp+var_6C8]']
jnb ['short', 'loc_19C5']
mov ['eax,', '[ebp+var_1B4]']
mov ['[ebp+var_1A0],', 'eax']
mov ['ecx,', '[ebp+var_1A0]']
push ['ecx']
lea ['ecx,', '[ebp+var_178]']
call ['?AddProp_NumThreads@CMethodProps@@QAEXI@Z']
mov ['eax,', '[ebp+var_180]']
xor ['edx,', 'edx']
div ['[ebp+var_1A0]']
mov ['[ebp+var_180],', 'eax']
movzx ['edx,', '[ebp+var_18E]']
cmp ['edx,', '0Eh']
jnz ['short', 'loc_1A23']
lea ['eax,', '[ebp+var_1B9]']
push ['eax']
lea ['ecx,', '[ebp+var_178]']
call ['?Get_Lzma_NumThreads@CMethodProps@@QBEIAA_N@Z']
mov ['[ebp+var_1C4],', 'eax']
mov ['eax,', '[ebp+var_180]']
xor ['edx,', 'edx']
div ['[ebp+var_1C4]']
mov ['[ebp+var_180],', 'eax']
mov ['ecx,', '[ebp+var_180]']
xor ['edx,', 'edx']
mov ['[ebp+var_6D0],', 'ecx']
mov ['[ebp+var_6CC],', 'edx']
mov ['eax,', '[ebp+var_6CC]']
cmp ['eax,', '[ebp+var_30]']
jb ['short', 'loc_1A58']
ja ['short', 'loc_1A4F']
mov ['ecx,', '[ebp+var_6D0]']
cmp ['ecx,', '[ebp+var_34]']
jbe ['short', 'loc_1A58']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_180],', 'edx']
cmp ['[ebp+var_180],', '1']
ja ['short', 'loc_1A68']
mov ['[ebp+var_18D],', '0']
movzx ['eax,', '[ebp+var_18D]']
test ['eax,', 'eax']
jnz ['short', 'loc_1ADE']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
lea ['eax,', '[ebp+var_178]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z']
mov ['[ebp+var_660],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_660]']
jmp ['loc_3784']
lea ['ecx,', '[ebp+var_1D4]']
call ['??0?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
push ['10h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_668],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
cmp ['[ebp+var_668],', '0']
jz ['short', 'loc_1B1D']
mov ['ecx,', '[ebp+var_668]']
call ['??0CMtProgressMixer@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_6D4],', 'eax']
jmp ['short', 'loc_1B27']
mov ['[ebp+var_6D4],', '0']
mov ['edx,', '[ebp+var_6D4]']
mov ['[ebp+var_664],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_664]']
mov ['[ebp+var_1DC],', 'eax']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
lea ['ecx,', '[ebp+var_1E4]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
push ['1']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['ecx,', '[ebp+var_1DC]']
call ['?Create@CMtProgressMixer@NZip@NArchive@@QAEXPAUIProgress@@_N@Z']
lea ['ecx,', '[ebp+var_234]']
call ['??0CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_1DC]']
add ['ecx,', '0Ch']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
push ['eax']
mov ['eax,', '[ebp+var_180]']
push ['eax']
lea ['ecx,', '[ebp+var_234]']
call ['?Init@CMtCompressProgressMixer@@QAEXHPAUICompressProgressInfo@@@Z']
push ['10000h']
lea ['ecx,', '[ebp+var_264]']
call ['??0CMemBlockManagerMt@@QAE@I@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_264]']
push ['ecx']
lea ['ecx,', '[ebp+var_27C]']
call ['??0CMemRefs@NZip@NArchive@@QAE@PAVCMemBlockManagerMt@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??0CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??0?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
push ['0']
mov ['edx,', '[ebp+var_180]']
shl ['edx,', '9']
push ['edx']
lea ['ecx,', '[ebp+var_264]']
call ['?AllocateSpaceAlways@CMemBlockManagerMt@@QAEHII@Z']
mov ['[ebp+var_2C0],', 'eax']
cmp ['[ebp+var_2C0],', '0']
jz ['loc_1CD7']
mov ['eax,', '[ebp+var_2C0]']
mov ['[ebp+var_66C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_66C]']
jmp ['loc_3784']
mov ['[ebp+var_40],', '0']
jmp ['short', 'loc_1CE9']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '1']
mov ['[ebp+var_40],', 'ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?Size@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_40],', 'eax']
jnb ['short', 'loc_1D3A']
lea ['ecx,', '[ebp+var_300]']
call ['??0CMemBlocks2@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_6D8],', 'eax']
mov ['edx,', '[ebp+var_6D8]']
mov ['[ebp+var_6DC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
mov ['eax,', '[ebp+var_6DC]']
push ['eax']
lea ['ecx,', '[ebp+var_278]']
call ['?Add@?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEIABUCMemBlocks2@NZip@NArchive@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_300]']
call ['??1CMemBlocks2@NZip@NArchive@@QAE@XZ']
jmp ['short', 'loc_1CE0']
mov ['[ebp+var_304],', '0']
jmp ['short', 'loc_1D55']
mov ['ecx,', '[ebp+var_304]']
add ['ecx,', '1']
mov ['[ebp+var_304],', 'ecx']
mov ['edx,', '[ebp+var_304]']
cmp ['edx,', '[ebp+var_180]']
jnb ['short', 'loc_1DAE']
lea ['eax,', '[ebp+var_178]']
push ['eax']
lea ['ecx,', '[ebp+var_3CC]']
call ['??0CThreadInfo@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z']
mov ['[ebp+var_6E0],', 'eax']
mov ['ecx,', '[ebp+var_6E0]']
mov ['[ebp+var_6E4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
mov ['edx,', '[ebp+var_6E4]']
push ['edx']
lea ['ecx,', '[ebp+var_290]']
call ['?Add@?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEIABUCThreadInfo@NZip@NArchive@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_3CC]']
call ['??1CThreadInfo@NZip@NArchive@@QAE@XZ']
jmp ['short', 'loc_1D46']
mov ['[ebp+var_304],', '0']
jmp ['short', 'loc_1DC9']
mov ['eax,', '[ebp+var_304]']
add ['eax,', '1']
mov ['[ebp+var_304],', 'eax']
mov ['ecx,', '[ebp+var_304]']
cmp ['ecx,', '[ebp+var_180]']
jnb ['loc_21AB']
mov ['edx,', '[ebp+var_304]']
push ['edx']
lea ['ecx,', '[ebp+var_290]']
call ['??A?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEAAUCThreadInfo@NZip@NArchive@@I@Z']
mov ['[ebp+var_3D0],', 'eax']
mov ['ecx,', '[ebp+var_3D0]']
call ['?CreateEvents@CThreadInfo@NZip@NArchive@@QAEJXZ']
mov ['[ebp+var_3D4],', 'eax']
cmp ['[ebp+var_3D4],', '0']
jz ['loc_1ECD']
mov ['eax,', '[ebp+var_3D4]']
mov ['[ebp+var_670],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_670]']
jmp ['loc_3784']
push ['50h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_678],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
cmp ['[ebp+var_678],', '0']
jz ['short', 'loc_1F04']
lea ['ecx,', '[ebp+var_264]']
push ['ecx']
mov ['ecx,', '[ebp+var_678]']
call ['??0COutMemStream@@QAE@PAVCMemBlockManagerMt@@@Z']
mov ['[ebp+var_6E8],', 'eax']
jmp ['short', 'loc_1F0E']
mov ['[ebp+var_6E8],', '0']
mov ['edx,', '[ebp+var_6E8]']
mov ['[ebp+var_674],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
mov ['eax,', '[ebp+var_3D0]']
mov ['ecx,', '[ebp+var_674]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', '[ebp+var_3D0]']
mov ['ecx,', '[edx+18h]']
call ['?CreateEvents@COutMemStream@@QAEHXZ']
mov ['[ebp+var_3D8],', 'eax']
cmp ['[ebp+var_3D8],', '0']
jz ['loc_200A']
mov ['eax,', '[ebp+var_3D8]']
mov ['[ebp+var_67C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_67C]']
jmp ['loc_3784']
mov ['ecx,', '[ebp+var_3D0]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['ecx,', '[ebp+var_3D0]']
add ['ecx,', '1Ch']
call ['??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z']
mov ['eax,', '[ebp+var_3D0]']
mov ['byte', 'ptr', '[eax+0B8h],', '1']
push ['10h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_684],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
cmp ['[ebp+var_684],', '0']
jz ['short', 'loc_205F']
mov ['ecx,', '[ebp+var_684]']
call ['??0CMtCompressProgress@@QAE@XZ']
mov ['[ebp+var_6EC],', 'eax']
jmp ['short', 'loc_2069']
mov ['[ebp+var_6EC],', '0']
mov ['ecx,', '[ebp+var_6EC]']
mov ['[ebp+var_680],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
mov ['edx,', '[ebp+var_3D0]']
mov ['eax,', '[ebp+var_680]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_3D0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['ecx,', '[ebp+var_3D0]']
add ['ecx,', '14h']
call ['??4?$CMyComPtr@UICompressProgressInfo@@@@QAEPAUICompressProgressInfo@@PAU1@@Z']
mov ['eax,', '[ebp+var_304]']
push ['eax']
lea ['ecx,', '[ebp+var_234]']
push ['ecx']
mov ['edx,', '[ebp+var_3D0]']
mov ['ecx,', '[edx+10h]']
call ['?Init@CMtCompressProgress@@QAEXPAVCMtCompressProgressMixer@@H@Z']
mov ['eax,', '[ebp+var_3D0]']
mov ['dword', 'ptr', '[eax+0C0h],', '0']
mov ['ecx,', '[ebp+var_3D0]']
call ['?CreateThread@CThreadInfo@NZip@NArchive@@QAEHXZ']
mov ['[ebp+var_3DC],', 'eax']
cmp ['[ebp+var_3DC],', '0']
jz ['loc_21A6']
mov ['ecx,', '[ebp+var_3DC]']
mov ['[ebp+var_688],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_688]']
jmp ['loc_3784']
jmp ['loc_1DBA']
mov ['[ebp+var_3E0],', '0']
mov ['[ebp+var_3E4],', '0']
mov ['[ebp+var_3E8],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_C]']
call ['?Size@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_3E4],', 'eax']
jnb ['loc_35DC']
lea ['ecx,', '[ebp+var_2B8]']
call ['?Size@?$CRecordVector@H@@QBEIXZ']
cmp ['eax,', '[ebp+var_180]']
jnb ['loc_2AA1']
mov ['ecx,', '[ebp+arg_C]']
call ['?Size@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_3E0],', 'eax']
jnb ['loc_2AA1']
mov ['edx,', '[ebp+var_3E0]']
mov ['[ebp+var_6F0],', 'edx']
mov ['eax,', '[ebp+var_3E0]']
add ['eax,', '1']
mov ['[ebp+var_3E0],', 'eax']
mov ['ecx,', '[ebp+var_6F0]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??A?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QBEABUCUpdateItem@NZip@NArchive@@I@Z']
mov ['[ebp+var_3EC],', 'eax']
mov ['edx,', '[ebp+var_3EC]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_2247']
jmp ['short', 'loc_21C9']
lea ['ecx,', '[ebp+var_458]']
call ['??0CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_4E0]']
call ['??0CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
mov ['ecx,', '[ebp+var_3EC]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
test ['edx,', 'edx']
jz ['short', 'loc_22A9']
mov ['eax,', '[ebp+var_3EC]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_22A4']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_4E0]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_458]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
jmp ['loc_21C9']
jmp ['loc_23FD']
mov ['edx,', '[ebp+var_3EC]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@VCItemEx@NZip@NArchive@@@@QBEABVCItemEx@NZip@NArchive@@I@Z']
push ['eax']
lea ['ecx,', '[ebp+var_458]']
call ['??4CItemEx@NZip@NArchive@@QAEAAV012@ABV012@@Z']
lea ['ecx,', '[ebp+var_458]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?ReadLocalItemAfterCdItemFull@CInArchive@NZip@NArchive@@QAEJAAVCItemEx@23@@Z']
test ['eax,', 'eax']
jz ['loc_23B6']
mov ['[ebp+var_68C],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_4E0]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_458]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_68C]']
jmp ['loc_3784']
lea ['edx,', '[ebp+var_458]']
push ['edx']
lea ['ecx,', '[ebp+var_4E0]']
call ['??4CItem@NZip@NArchive@@QAEAAV012@ABV012@@Z']
lea ['ecx,', '[ebp+var_4E0]']
call ['?IsDir@CItem@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_23FD']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_4E0]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_458]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
jmp ['loc_21C9']
lea ['ecx,', '[ebp+var_4EC]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
mov ['ecx,', '[ebp+var_1DC]']
mov ['edx,', '[ecx+8]']
add ['edx,', '3Ch']
push ['edx']
lea ['ecx,', '[ebp+var_4F8]']
call ['??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
lea ['ecx,', '[ebp+var_4EC]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+var_3EC]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[eax+1Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_500],', 'eax']
cmp ['[ebp+var_500],', '1']
jnz ['loc_2626']
mov ['eax,', '[ebp+var_3EC]']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_28]']
add ['ecx,', '[eax+18h]']
mov ['edx,', 'dword', 'ptr', '[ebp+var_28+4]']
adc ['edx,', '[eax+1Ch]']
mov ['dword', 'ptr', '[ebp+var_28],', 'ecx']
mov ['dword', 'ptr', '[ebp+var_28+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_28]']
add ['eax,', '1Eh']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_28+4]']
adc ['ecx,', '0']
mov ['dword', 'ptr', '[ebp+var_28],', 'eax']
mov ['dword', 'ptr', '[ebp+var_28+4],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_28+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
mov ['ecx,', '[ecx+8]']
call ['?SetProgressOffset@CMtProgressMixer2@NZip@NArchive@@QAEX_K@Z']
mov ['esi,', 'esp']
push ['0']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[eax+20h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_504],', 'eax']
cmp ['[ebp+var_504],', '0']
jz ['loc_25CC']
mov ['eax,', '[ebp+var_504]']
mov ['[ebp+var_690],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_4F8]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_4EC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_4E0]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_458]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_690]']
jmp ['loc_3784']
mov ['ecx,', '[ebp+var_3E0]']
sub ['ecx,', '1']
push ['ecx']
lea ['ecx,', '[ebp+var_278]']
call ['??A?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEAAUCMemBlocks2@NZip@NArchive@@I@Z']
mov ['byte', 'ptr', '[eax+39h],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_4F8]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_4EC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_4E0]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_458]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
jmp ['loc_21C9']
mov ['edx,', '[ebp+var_500]']
mov ['[ebp+var_508],', 'edx']
cmp ['[ebp+var_508],', '0']
jz ['loc_2737']
mov ['eax,', '[ebp+var_508]']
mov ['[ebp+var_694],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_4F8]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_4EC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_4E0]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_458]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_694]']
jmp ['loc_3784']
lea ['ecx,', '[ebp+var_4EC]']
call ['??7?$CMyComPtr@UISequentialInStream@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_2843']
mov ['[ebp+var_698],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_4F8]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_4EC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_4E0]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_458]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_698]']
jmp ['loc_3784']
mov ['esi,', 'esp']
push ['0']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[eax+20h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_50C],', 'eax']
cmp ['[ebp+var_50C],', '0']
jz ['loc_2967']
mov ['eax,', '[ebp+var_50C]']
mov ['[ebp+var_69C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_4F8]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_4EC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_4E0]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_458]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_69C]']
jmp ['loc_3784']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_4F8]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_510],', '0']
jmp ['short', 'loc_2991']
mov ['ecx,', '[ebp+var_510]']
add ['ecx,', '1']
mov ['[ebp+var_510],', 'ecx']
mov ['edx,', '[ebp+var_510]']
cmp ['edx,', '[ebp+var_180]']
jnb ['loc_2A6F']
mov ['eax,', '[ebp+var_510]']
push ['eax']
lea ['ecx,', '[ebp+var_290]']
call ['??A?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEAAUCThreadInfo@NZip@NArchive@@I@Z']
mov ['[ebp+var_514],', 'eax']
mov ['ecx,', '[ebp+var_514]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0B8h]']
test ['edx,', 'edx']
jz ['loc_2A6A']
mov ['eax,', '[ebp+var_514]']
mov ['byte', 'ptr', '[eax+0B8h],', '0']
lea ['ecx,', '[ebp+var_4EC]']
push ['ecx']
mov ['ecx,', '[ebp+var_514]']
add ['ecx,', '20h']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@ABV0@@Z']
lea ['ecx,', '[ebp+var_4EC]']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
mov ['edx,', '[ebp+var_514]']
mov ['ecx,', '[edx+18h]']
call ['?Init@COutMemStream@@QAEXXZ']
mov ['eax,', '[ebp+var_514]']
mov ['ecx,', '[eax+10h]']
call ['?Reinit@CMtCompressProgress@@QAEXXZ']
mov ['ecx,', '[ebp+var_514]']
add ['ecx,', '4']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_3E0]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_514]']
mov ['[edx+0BCh],', 'ecx']
mov ['ecx,', '[ebp+var_514]']
add ['ecx,', '8']
call ['??BCBaseEvent@NSynchronization@NWindows@@QAEPAXXZ']
push ['eax']
lea ['ecx,', '[ebp+var_2A4]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_510]']
push ['eax']
lea ['ecx,', '[ebp+var_2B8]']
call ['?Add@?$CRecordVector@H@@QAEIH@Z']
jmp ['short', 'loc_2A6F']
jmp ['loc_2982']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_4EC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_4E0]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_458]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
jmp ['loc_21C9']
mov ['ecx,', '[ebp+var_3E4]']
push ['ecx']
lea ['ecx,', '[ebp+var_278]']
call ['??A?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEAAUCMemBlocks2@NZip@NArchive@@I@Z']
movzx ['edx,', 'byte', 'ptr', '[eax+39h]']
test ['edx,', 'edx']
jz ['short', 'loc_2ACF']
mov ['eax,', '[ebp+var_3E4]']
add ['eax,', '1']
mov ['[ebp+var_3E4],', 'eax']
jmp ['loc_21C9']
mov ['ecx,', '[ebp+var_3E4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??A?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QBEABUCUpdateItem@NZip@NArchive@@I@Z']
mov ['[ebp+var_518],', 'eax']
lea ['ecx,', '[ebp+var_584]']
call ['??0CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_60C]']
call ['??0CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
mov ['edx,', '[ebp+var_518]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
test ['eax,', 'eax']
jz ['short', 'loc_2B21']
mov ['ecx,', '[ebp+var_518]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['loc_2C40']
mov ['eax,', '[ebp+var_518]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@VCItemEx@NZip@NArchive@@@@QBEABVCItemEx@NZip@NArchive@@I@Z']
push ['eax']
lea ['ecx,', '[ebp+var_584]']
call ['??4CItemEx@NZip@NArchive@@QAEAAV012@ABV012@@Z']
lea ['edx,', '[ebp+var_584]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?ReadLocalItemAfterCdItemFull@CInArchive@NZip@NArchive@@QAEJAAVCItemEx@23@@Z']
test ['eax,', 'eax']
jz ['loc_2C2E']
mov ['[ebp+var_6A0],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_60C]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_584]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6A0]']
jmp ['loc_3784']
lea ['eax,', '[ebp+var_584]']
push ['eax']
lea ['ecx,', '[ebp+var_60C]']
call ['??4CItem@NZip@NArchive@@QAEAAV012@ABV012@@Z']
mov ['ecx,', '[ebp+var_518]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['loc_3448']
mov ['eax,', '[ebp+var_518]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C70']
mov ['edx,', '[ebp+var_518]']
mov ['al,', '[edx+2]']
mov ['[ebp+var_6F1],', 'al']
jmp ['short', 'loc_2C81']
lea ['ecx,', '[ebp+var_60C]']
call ['?IsDir@CItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_6F1],', 'al']
mov ['cl,', '[ebp+var_6F1]']
mov ['[ebp+var_611],', 'cl']
movzx ['edx,', '[ebp+var_611]']
test ['edx,', 'edx']
jz ['short', 'loc_2CB8']
lea ['eax,', '[ebp+var_60C]']
push ['eax']
mov ['ecx,', '[ebp+var_518]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?WriteDirHeader@NZip@NArchive@@YGXAAVCOutArchive@12@PBUCCompressionMethodMode@12@ABUCUpdateItem@12@AAVCItemOut@12@@Z']
jmp ['loc_3443']
mov ['ecx,', '[ebp+var_3E8]']
cmp ['ecx,', '[ebp+var_3E4]']
jge ['short', 'loc_2D1B']
mov ['edx,', '[ebp+var_3E4]']
mov ['[ebp+var_3E8],', 'edx']
lea ['eax,', '[ebp+var_60C]']
push ['eax']
mov ['ecx,', '[ebp+var_518]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?SetFileHeader@NZip@NArchive@@YGXAAVCOutArchive@12@ABUCCompressionMethodMode@12@ABUCUpdateItem@12@AAVCItemOut@12@@Z']
mov ['ecx,', '[ebp+arg_10]']
call ['?IsRealAesMode@CCompressionMethodMode@NZip@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
push ['ecx']
mov ['edx,', '[ebp+var_518]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[edx+18h]']
push ['ecx']
lea ['ecx,', '[ebp+var_5EC]']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?PrepareWriteCompressedData@COutArchive@NZip@NArchive@@QAEXI_K_N@Z']
mov ['edx,', '[ebp+var_3E4]']
push ['edx']
lea ['ecx,', '[ebp+var_278]']
call ['??A?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEAAUCMemBlocks2@NZip@NArchive@@I@Z']
mov ['[ebp+var_618],', 'eax']
mov ['eax,', '[ebp+var_618]']
movzx ['ecx,', 'byte', 'ptr', '[eax+38h]']
test ['ecx,', 'ecx']
jz ['loc_2E05']
lea ['ecx,', '[ebp+var_620]']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '17h']
lea ['ecx,', '[ebp+var_620]']
call ['??I?$CMyComPtr@UIOutStream@@@@QAEPAPAUIOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z']
lea ['ecx,', '[ebp+var_620]']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_264]']
call ['?GetBlockSize@CMemBlockManager@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_618]']
call ['?WriteToStream@CMemBlocks@@QBEJIPAUISequentialOutStream@@@Z']
lea ['edx,', '[ebp+var_60C]']
push ['edx']
mov ['eax,', '[ebp+var_518]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?SetFileHeader@NZip@NArchive@@YGXAAVCOutArchive@12@ABUCCompressionMethodMode@12@ABUCUpdateItem@12@AAVCItemOut@12@@Z']
lea ['eax,', '[ebp+var_60C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+16h]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?IsRealAesMode@CCompressionMethodMode@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+var_618]']
add ['ecx,', '20h']
push ['ecx']
call ['?SetItemInfoFromCompressingResult@NZip@NArchive@@YGXABUCCompressingResult@12@_NEAAVCItem@12@@Z']
lea ['edx,', '[ebp+var_60C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?WriteLocalHeader_And_SeekToNextFile@COutArchive@NZip@NArchive@@QAEXABVCLocalItem@23@@Z']
lea ['eax,', '[ebp+var_264]']
push ['eax']
mov ['ecx,', '[ebp+var_618]']
call ['?FreeOpt@CMemBlocks@@QAEXPAVCMemBlockManagerMt@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
lea ['ecx,', '[ebp+var_620]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
jmp ['loc_3443']
lea ['ecx,', '[ebp+var_2B8]']
call ['?Front@?$CRecordVector@H@@QAEAAHXZ']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_290]']
call ['??A?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEAAUCThreadInfo@NZip@NArchive@@I@Z']
mov ['[ebp+var_628],', 'eax']
mov ['edx,', '[ebp+var_628]']
mov ['ecx,', '[edx+18h]']
call ['?WasUnlockEventSent@COutMemStream@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_2E93']
lea ['ecx,', '[ebp+var_630]']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
lea ['ecx,', '[ebp+var_630]']
call ['??I?$CMyComPtr@UIOutStream@@@@QAEPAPAUIOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z']
lea ['ecx,', '[ebp+var_630]']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_628]']
mov ['ecx,', '[ecx+18h]']
call ['?SetOutStream@COutMemStream@@QAEXPAUIOutStream@@@Z']
mov ['edx,', '[ebp+var_628]']
mov ['ecx,', '[edx+18h]']
call ['?SetRealStreamMode@COutMemStream@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
lea ['ecx,', '[ebp+var_630]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
push ['0']
lea ['ecx,', '[ebp+var_2A4]']
call ['?Front@?$CRecordVector@PAX@@QAEAAPAXXZ']
push ['eax']
lea ['ecx,', '[ebp+var_2A4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__WaitForMultipleObjects@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_638],', 'eax']
cmp ['[ebp+var_638],', '0FFFFFFFFh']
jnz ['loc_2FE1']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_63C],', 'eax']
cmp ['[ebp+var_63C],', '0']
jz ['short', 'loc_2EFD']
mov ['eax,', '[ebp+var_63C]']
mov ['[ebp+var_6F8],', 'eax']
jmp ['short', 'loc_2F07']
mov ['[ebp+var_6F8],', '80004005h']
mov ['ecx,', '[ebp+var_6F8]']
mov ['[ebp+var_6A4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_60C]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_584]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6A4]']
jmp ['loc_3784']
mov ['edx,', '[ebp+var_638]']
mov ['[ebp+var_640],', 'edx']
lea ['ecx,', '[ebp+var_2A4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
cmp ['[ebp+var_640],', 'eax']
jb ['loc_30DC']
mov ['[ebp+var_6A8],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_60C]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_584]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6A8]']
jmp ['loc_3784']
mov ['eax,', '[ebp+var_640]']
push ['eax']
lea ['ecx,', '[ebp+var_2B8]']
call ['??A?$CRecordVector@H@@QAEAAHI@Z']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_290]']
call ['??A?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEAAUCThreadInfo@NZip@NArchive@@I@Z']
mov ['[ebp+var_644],', 'eax']
mov ['ecx,', '[ebp+var_644]']
add ['ecx,', '20h']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
mov ['edx,', '[ebp+var_644]']
mov ['byte', 'ptr', '[edx+0B8h],', '1']
mov ['eax,', '[ebp+var_644]']
mov ['ecx,', '[eax+98h]']
mov ['[ebp+var_648],', 'ecx']
cmp ['[ebp+var_648],', '0']
jz ['loc_3216']
mov ['edx,', '[ebp+var_648]']
mov ['[ebp+var_6AC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_60C]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_584]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6AC]']
jmp ['loc_3784']
mov ['eax,', '[ebp+var_640]']
push ['eax']
lea ['ecx,', '[ebp+var_2B8]']
call ['?Delete@?$CRecordVector@H@@QAEXI@Z']
mov ['ecx,', '[ebp+var_640]']
push ['ecx']
lea ['ecx,', '[ebp+var_2A4]']
call ['?Delete@?$CRecordVector@PAX@@QAEXI@Z']
cmp ['[ebp+var_640],', '0']
jnz ['loc_33AC']
mov ['edx,', '[ebp+var_644]']
mov ['ecx,', '[edx+18h]']
call ['?WriteToRealStream@COutMemStream@@QAEJXZ']
mov ['[ebp+var_64C],', 'eax']
cmp ['[ebp+var_64C],', '0']
jz ['loc_3342']
mov ['eax,', '[ebp+var_64C]']
mov ['[ebp+var_6B0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_60C]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_584]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6B0]']
jmp ['loc_3784']
mov ['ecx,', '[ebp+var_644]']
mov ['ecx,', '[ecx+18h]']
call ['?ReleaseOutStream@COutMemStream@@QAEXXZ']
lea ['edx,', '[ebp+var_60C]']
push ['edx']
mov ['eax,', '[ebp+var_518]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?SetFileHeader@NZip@NArchive@@YGXAAVCOutArchive@12@ABUCCompressionMethodMode@12@ABUCUpdateItem@12@AAVCItemOut@12@@Z']
lea ['eax,', '[ebp+var_60C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+16h]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?IsRealAesMode@CCompressionMethodMode@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+var_644]']
add ['ecx,', '0A0h']
push ['ecx']
call ['?SetItemInfoFromCompressingResult@NZip@NArchive@@YGXABUCCompressingResult@12@_NEAAVCItem@12@@Z']
lea ['edx,', '[ebp+var_60C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?WriteLocalHeader_And_SeekToNextFile@COutArchive@NZip@NArchive@@QAEXABVCLocalItem@23@@Z']
jmp ['loc_3443']
mov ['eax,', '[ebp+var_644]']
mov ['ecx,', '[eax+0BCh]']
push ['ecx']
lea ['ecx,', '[ebp+var_278]']
call ['??A?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEAAUCMemBlocks2@NZip@NArchive@@I@Z']
mov ['[ebp+var_650],', 'eax']
mov ['edx,', '[ebp+var_650]']
push ['edx']
mov ['eax,', '[ebp+var_644]']
mov ['ecx,', '[eax+18h]']
call ['?DetachData@COutMemStream@@QAEXAAUCMemLockBlocks@@@Z']
mov ['ecx,', '[ebp+var_644]']
add ['ecx,', '0A0h']
mov ['edx,', '[ebp+var_650]']
add ['edx,', '20h']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ecx+10h]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ecx+14h]']
mov ['[edx+14h],', 'ecx']
mov ['edx,', '[ebp+var_650]']
mov ['byte', 'ptr', '[edx+38h],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_60C]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_584]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
jmp ['loc_21C9']
jmp ['loc_3570']
lea ['eax,', '[ebp+var_28]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_1E4]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_60C]']
push ['ecx']
mov ['edx,', '[ebp+var_518]']
push ['edx']
lea ['eax,', '[ebp+var_584]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?UpdateItemOldData@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABVCItemEx@12@ABUCUpdateItem@12@AAVCItemOut@12@PAUICompressProgressInfo@@PAUIArchiveUpdateCallbackFile@@AA_K@Z']
mov ['[ebp+var_654],', 'eax']
cmp ['[ebp+var_654],', '0']
jz ['loc_3570']
mov ['eax,', '[ebp+var_654]']
mov ['[ebp+var_6B4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_60C]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_584]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6B4]']
jmp ['loc_3784']
lea ['ecx,', '[ebp+var_60C]']
push ['ecx']
lea ['ecx,', '[ebp+var_1D4]']
call ['?Add@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAEIABVCItemOut@NZip@NArchive@@@Z']
mov ['edx,', 'dword', 'ptr', '[ebp+var_28]']
add ['edx,', '1Eh']
mov ['eax,', 'dword', 'ptr', '[ebp+var_28+4]']
adc ['eax,', '0']
mov ['dword', 'ptr', '[ebp+var_28],', 'edx']
mov ['dword', 'ptr', '[ebp+var_28+4],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_28+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_1DC]']
mov ['ecx,', '[eax+8]']
call ['?SetProgressOffset@CMtProgressMixer2@NZip@NArchive@@QAEX_K@Z']
mov ['ecx,', '[ebp+var_3E4]']
add ['ecx,', '1']
mov ['[ebp+var_3E4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_60C]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_584]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
jmp ['loc_21C9']
push ['0']
push ['0']
push ['0']
lea ['ecx,', '[ebp+var_234]']
call ['?SetRatioInfo@CMtCompressProgressMixer@@QAEJHPB_K0@Z']
mov ['[ebp+var_658],', 'eax']
cmp ['[ebp+var_658],', '0']
jz ['loc_36BC']
mov ['edx,', '[ebp+var_658]']
mov ['[ebp+var_6B8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6B8]']
jmp ['loc_3784']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_1D4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?WriteCentralDir@COutArchive@NZip@NArchive@@QAEXABV?$CObjectVector@VCItemOut@NZip@NArchive@@@@PBV?$CBuffer@E@@@Z']
mov ['[ebp+var_6BC],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_290]']
call ['??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_27C]']
call ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_264]']
call ['??1CMemBlockManagerMt@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_234]']
call ['??1CMtCompressProgressMixer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1E4]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_178]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_128]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['eax,', '[ebp+var_6BC]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN151']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '6F8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
?SetFileHeader@NZip@NArchive@@YGXAAVCOutArchive@12@ABUCCompressionMethodMode@12@ABUCUpdateItem@12@AAVCItemOut@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ecx+1Ch]']
mov ['[eax+0Ch],', 'ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?ClearFlags@CLocalItem@NZip@NArchive@@QAEXXZ']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
test ['eax,', 'eax']
jz ['loc_3A8B']
mov ['ecx,', '[ebp+arg_8]']
mov ['dl,', '[ecx+2]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'dl']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '20h']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '20h']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['?SetUtf8@CLocalItem@NZip@NArchive@@QAEX_N@Z']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+3Ch],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[eax+30h]']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax+60h],', 'ecx']
mov ['[eax+64h],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[ecx+38h]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx+68h],', 'edx']
mov ['[ecx+6Ch],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+3Ch]']
mov ['ecx,', '[edx+40h]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx+70h],', 'eax']
mov ['[edx+74h],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['dl,', '[ecx+3]']
mov ['[eax+78h],', 'dl']
jmp ['short', 'loc_3A96']
mov ['ecx,', '[ebp+arg_C]']
call ['?IsDir@CItem@NZip@NArchive@@QBE_NXZ']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'al']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx+40h],', 'eax']
mov ['[ecx+44h],', 'edx']
mov ['edx,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[edx+39h],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[eax+38h],', '3Fh']
mov ['ecx,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[ecx+5],', '0']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax+3Ah],', 'dx']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4+3]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3ADE']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+24h]']
test ['eax,', 'eax']
jz ['short', 'loc_3ADE']
mov ['byte', 'ptr', '[ebp+var_4+2],', '1']
jmp ['short', 'loc_3AE2']
mov ['byte', 'ptr', '[ebp+var_4+2],', '0']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4+2]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?SetEncrypted@CLocalItem@NZip@NArchive@@QAEX_N@Z']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4+3]']
test ['edx,', 'edx']
jz ['short', 'loc_3B22']
mov ['eax,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[eax+4],', '14h']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx+2],', 'cx']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?SetItemInfoFromCompressingResult@NZip@NArchive@@YGXABUCCompressingResult@12@_NEAAVCItem@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetItemInfoFromCompressingResult@NZip@NArchive@@YGXABUCCompressingResult@12@_NEAAVCItem@12@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+16h]']
mov ['[eax+4],', 'dl']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+14h]']
mov ['[eax+2],', 'dx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ecx+4]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[eax+0Ch]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '2Ch']
call ['?Clear@CExtraBlock@NZip@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '48h']
call ['?Clear@CExtraBlock@NZip@NArchive@@QAEXXZ']
movzx ['ecx,', '[ebp+arg_4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3C63']
lea ['ecx,', '[ebp+var_18]']
call ['??0CWzAesExtra@NZip@NArchive@@QAE@XZ']
mov ['dl,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[ebp+var_18+2],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+14h]']
mov ['word', 'ptr', '[ebp+var_14],', 'cx']
mov ['edx,', '63h']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??0CExtraSubBlock@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
lea ['ecx,', '[ebp+var_18]']
call ['?SetSubBlock@CWzAesExtra@NZip@NArchive@@QBEXAAUCExtraSubBlock@23@@Z']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '2Ch']
call ['?Add@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEIABUCExtraSubBlock@NZip@NArchive@@@Z']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '48h']
call ['?Add@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEIABUCExtraSubBlock@NZip@NArchive@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1CExtraSubBlock@NZip@NArchive@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?CoderThread@NZip@NArchive@@YGIPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?WaitAndCode@CThreadInfo@NZip@NArchive@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?UpdateItemOldData@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABVCItemEx@12@ABUCUpdateItem@12@AAVCItemOut@12@PAUICompressProgressInfo@@PAUIArchiveUpdateCallbackFile@@AA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_18],', '0']
jz ['short', 'loc_3D30']
mov ['esi,', 'esp']
push ['3']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+8]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[eax+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3D30']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_3F35']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
test ['ecx,', 'ecx']
jz ['loc_3EA7']
mov ['ecx,', '[ebp+arg_10]']
call ['?HasDescriptor@CLocalItem@NZip@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3D58']
mov ['eax,', '80004001h']
jmp ['loc_3F35']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?GetDataPosition@CItemEx@NZip@NArchive@@QBE_KXZ']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetOffsetInStream@CInArchive@NZip@NArchive@@QBE_K_K@Z']
push ['edx']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0CUpdateRange@NZip@NArchive@@QAE@_K0@Z']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '20h']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '20h']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?SetUtf8@CLocalItem@NZip@NArchive@@QAEX_N@Z']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[eax+30h]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax+60h],', 'ecx']
mov ['[eax+64h],', 'edx']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[ecx+38h]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx+68h],', 'edx']
mov ['[ecx+6Ch],', 'eax']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx+3Ch]']
mov ['ecx,', '[edx+40h]']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx+70h],', 'eax']
mov ['[edx+74h],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+arg_C]']
mov ['dl,', '[ecx+3]']
mov ['[eax+78h],', 'dl']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '48h']
call ['?RemoveUnknownSubBlocks@CExtraBlock@NZip@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '2Ch']
call ['?RemoveUnknownSubBlocks@CExtraBlock@NZip@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx+40h],', 'eax']
mov ['[ecx+44h],', 'edx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '2Ch']
call ['?HasWzAes@CExtraBlock@NZip@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[eax+8]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '20h']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?PrepareWriteCompressedData2@COutArchive@NZip@NArchive@@QAEXI_K0_N@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?WriteLocalHeader@COutArchive@NZip@NArchive@@QAEXABVCLocalItem@23@@Z']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '80h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
call ['?WriteRange@NZip@NArchive@@YGJPAUIInStream@@AAVCOutArchive@12@ABUCUpdateRange@12@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_3E8C']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_3F35']
mov ['ecx,', '[ebp+arg_1C]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+var_10]']
mov ['eax,', '[ecx+4]']
adc ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['[ecx],', 'edx']
mov ['[ecx+4],', 'eax']
jmp ['loc_3F33']
mov ['ecx,', '[ebp+arg_8]']
call ['?GetLocalFullSize@CItemEx@NZip@NArchive@@QBE_KXZ']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+44h]']
push ['eax']
mov ['ecx,', '[edx+40h]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetOffsetInStream@CInArchive@NZip@NArchive@@QBE_K_K@Z']
push ['edx']
push ['eax']
lea ['ecx,', '[ebp+var_34]']
call ['??0CUpdateRange@NZip@NArchive@@QAE@_K0@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx+40h],', 'eax']
mov ['[ecx+44h],', 'edx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
lea ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '80h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
call ['?WriteRange@NZip@NArchive@@YGJPAUIInStream@@AAVCOutArchive@12@ABUCUpdateRange@12@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_3F0D']
mov ['eax,', '[ebp+var_3C]']
jmp ['short', 'loc_3F35']
mov ['edx,', '[ebp+arg_1C]']
mov ['eax,', '[edx]']
add ['eax,', 'dword', 'ptr', '[ebp+var_2C]']
mov ['ecx,', '[edx+4]']
adc ['ecx,', 'dword', 'ptr', '[ebp+var_2C+4]']
mov ['edx,', '[ebp+arg_1C]']
mov ['[edx],', 'eax']
mov ['[edx+4],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_2C+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?MoveCurPos@COutArchive@NZip@NArchive@@QAEX_K@Z']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
endp
?WriteRange@NZip@NArchive@@YGJPAUIInStream@@AAVCOutArchive@12@ABUCUpdateRange@12@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ecx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[edx+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3FE3']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_4032']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ecx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?CopyBlockToArchive@NZip@NArchive@@YGJPAUISequentialInStream@@_KAAVCOutArchive@12@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_400D']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_4032']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '8']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?CopyBlockToArchive@NZip@NArchive@@YGJPAUISequentialInStream@@_KAAVCOutArchive@12@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CopyBlockToArchive@NZip@NArchive@@YGJPAUISequentialInStream@@_KAAVCOutArchive@12@PAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_14]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_14]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['ecx,', '[ebp+var_14]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?CopyStream_ExactSize@NCompress@@YGJPAUISequentialInStream@@PAUISequentialOutStream@@_KPAUICompressProgressInfo@@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?WriteDirHeader@NZip@NArchive@@YGXAAVCOutArchive@12@PBUCCompressionMethodMode@12@ABUCUpdateItem@12@AAVCItemOut@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?SetFileHeader@NZip@NArchive@@YGXAAVCOutArchive@12@ABUCCompressionMethodMode@12@ABUCUpdateItem@12@AAVCItemOut@12@@Z']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ecx+18h]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '20h']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?PrepareWriteCompressedData@COutArchive@NZip@NArchive@@QAEXI_K_N@Z']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?WriteLocalHeader_And_SeekToNextFile@COutArchive@NZip@NArchive@@QAEXABVCLocalItem@23@@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '254h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_260]']
mov ['ecx,', '95h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_230],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_230],', '0']
jz ['short', 'loc_4222']
mov ['ecx,', '[ebp+var_230]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_25C],', 'eax']
jmp ['short', 'loc_422C']
mov ['[ebp+var_25C],', '0']
mov ['eax,', '[ebp+var_25C]']
mov ['[ebp+var_22C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_22C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_4],', '1']
push ['1']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
lea ['ecx,', '[ebp+var_94]']
call ['??0CAddCommon@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A8]']
call ['??0?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['[ebp+var_B4],', '0']
mov ['[ebp+var_B0],', '0']
mov ['[ebp+var_BC],', '0']
mov ['[ebp+var_B8],', '0']
mov ['[ebp+var_C0],', '0']
jmp ['short', 'loc_42CE']
mov ['edx,', '[ebp+var_C0]']
add ['edx,', '1']
mov ['[ebp+var_C0],', 'edx']
mov ['ecx,', '[ebp+arg_C]']
call ['?Size@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_C0],', 'eax']
jnb ['loc_4AE8']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_B4]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+var_B0]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_BC]']
mov ['[eax+28h],', 'ecx']
mov ['edx,', '[ebp+var_B8]']
mov ['[eax+2Ch],', 'edx']
mov ['ecx,', '[ebp+var_14]']
call ['?SetCur@CLocalProgress@@QAEJXZ']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '0']
jz ['short', 'loc_4367']
mov ['eax,', '[ebp+var_C4]']
mov ['[ebp+var_234],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_234]']
jmp ['loc_4BBA']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??A?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QBEABUCUpdateItem@NZip@NArchive@@I@Z']
mov ['[ebp+var_C8],', 'eax']
lea ['ecx,', '[ebp+var_134]']
call ['??0CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1BC]']
call ['??0CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['edx,', '[ebp+var_C8]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
test ['eax,', 'eax']
jz ['short', 'loc_43B9']
mov ['ecx,', '[ebp+var_C8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['loc_445C']
mov ['eax,', '[ebp+var_C8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@VCItemEx@NZip@NArchive@@@@QBEABVCItemEx@NZip@NArchive@@I@Z']
push ['eax']
lea ['ecx,', '[ebp+var_134]']
call ['??4CItemEx@NZip@NArchive@@QAEAAV012@ABV012@@Z']
lea ['edx,', '[ebp+var_134]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?ReadLocalItemAfterCdItemFull@CInArchive@NZip@NArchive@@QAEJAAVCItemEx@23@@Z']
test ['eax,', 'eax']
jz ['short', 'loc_444A']
mov ['[ebp+var_238],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1BC]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_134]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_238]']
jmp ['loc_4BBA']
lea ['eax,', '[ebp+var_134]']
push ['eax']
lea ['ecx,', '[ebp+var_1BC]']
call ['??4CItem@NZip@NArchive@@QAEAAV012@ABV012@@Z']
mov ['ecx,', '[ebp+var_C8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['loc_49B4']
mov ['eax,', '[ebp+var_C8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
test ['ecx,', 'ecx']
jz ['short', 'loc_448C']
mov ['edx,', '[ebp+var_C8]']
mov ['al,', '[edx+2]']
mov ['[ebp+var_25D],', 'al']
jmp ['short', 'loc_449D']
lea ['ecx,', '[ebp+var_1BC]']
call ['?IsDir@CItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_25D],', 'al']
mov ['cl,', '[ebp+var_25D]']
mov ['[ebp+var_1C1],', 'cl']
movzx ['edx,', '[ebp+var_1C1]']
test ['edx,', 'edx']
jz ['short', 'loc_44D4']
lea ['eax,', '[ebp+var_1BC]']
push ['eax']
mov ['ecx,', '[ebp+var_C8]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?WriteDirHeader@NZip@NArchive@@YGXAAVCOutArchive@12@PBUCCompressionMethodMode@12@ABUCUpdateItem@12@AAVCItemOut@12@@Z']
jmp ['loc_49AF']
lea ['ecx,', '[ebp+var_1CC]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_1CC]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ecx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1D4],', 'eax']
cmp ['[ebp+var_1D4],', '1']
jnz ['loc_460C']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_C8]']
mov ['eax,', '[ecx+18h]']
add ['eax,', '[edx+18h]']
mov ['ecx,', '[ecx+1Ch]']
adc ['ecx,', '[edx+1Ch]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+18h],', 'eax']
mov ['[edx+1Ch],', 'ecx']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ecx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1D8],', 'eax']
cmp ['[ebp+var_1D8],', '0']
jz ['short', 'loc_45DA']
mov ['ecx,', '[ebp+var_1D8]']
mov ['[ebp+var_23C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1BC]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_134]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_23C]']
jmp ['loc_4BBA']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1BC]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_134]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
jmp ['loc_42BF']
mov ['edx,', '[ebp+var_1D4]']
mov ['[ebp+var_1DC],', 'edx']
cmp ['[ebp+var_1DC],', '0']
jz ['short', 'loc_4692']
mov ['eax,', '[ebp+var_1DC]']
mov ['[ebp+var_240],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1BC]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_134]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_240]']
jmp ['loc_4BBA']
lea ['ecx,', '[ebp+var_1CC]']
call ['??7?$CMyComPtr@UISequentialInStream@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4713']
mov ['[ebp+var_244],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1BC]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_134]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_244]']
jmp ['loc_4BBA']
lea ['edx,', '[ebp+var_1BC]']
push ['edx']
mov ['eax,', '[ebp+var_C8]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?SetFileHeader@NZip@NArchive@@YGXAAVCOutArchive@12@ABUCCompressionMethodMode@12@ABUCUpdateItem@12@AAVCItemOut@12@@Z']
mov ['ecx,', '[ebp+arg_10]']
call ['?IsRealAesMode@CCompressionMethodMode@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ecx+18h]']
push ['eax']
lea ['ecx,', '[ebp+var_19C]']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?PrepareWriteCompressedData@COutArchive@NZip@NArchive@@QAEXI_K_N@Z']
lea ['ecx,', '[ebp+var_204]']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_204]']
call ['??I?$CMyComPtr@UIOutStream@@@@QAEPAPAUIOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z']
lea ['ecx,', '[ebp+var_1F8]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_C8]']
mov ['eax,', '[edx+14h]']
push ['eax']
lea ['ecx,', '[ebp+var_204]']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_1CC]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_94]']
call ['?Compress@CAddCommon@NZip@NArchive@@QAEJPAUISequentialInStream@@PAUIOutStream@@IPAUICompressProgressInfo@@AAUCCompressingResult@23@@Z']
mov ['[ebp+var_20C],', 'eax']
cmp ['[ebp+var_20C],', '0']
jz ['loc_484F']
mov ['ecx,', '[ebp+var_20C]']
mov ['[ebp+var_248],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_204]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1BC]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_134]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_248]']
jmp ['loc_4BBA']
movzx ['edx,', '[ebp+var_1E1]']
test ['edx,', 'edx']
jz ['short', 'loc_4867']
push ['1']
lea ['ecx,', '[ebp+var_1BC]']
call ['?SetDescriptorMode@CLocalItem@NZip@NArchive@@QAEX_N@Z']
lea ['eax,', '[ebp+var_1BC]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+16h]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?IsRealAesMode@CCompressionMethodMode@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
push ['eax']
lea ['ecx,', '[ebp+var_1F8]']
push ['ecx']
call ['?SetItemInfoFromCompressingResult@NZip@NArchive@@YGXABUCCompressingResult@12@_NEAAVCItem@12@@Z']
lea ['edx,', '[ebp+var_1BC]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?WriteLocalHeader_And_SeekToNextFile@COutArchive@NZip@NArchive@@QAEXABVCLocalItem@23@@Z']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ecx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_210],', 'eax']
cmp ['[ebp+var_210],', '0']
jz ['loc_4949']
mov ['ecx,', '[ebp+var_210]']
mov ['[ebp+var_24C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_204]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1BC]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_134]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_24C]']
jmp ['loc_4BBA']
mov ['edx,', '[ebp+var_B4]']
add ['edx,', '[ebp+var_1B4]']
mov ['eax,', '[ebp+var_B0]']
adc ['eax,', '[ebp+var_1B0]']
mov ['[ebp+var_B4],', 'edx']
mov ['[ebp+var_B0],', 'eax']
mov ['ecx,', '[ebp+var_BC]']
add ['ecx,', '[ebp+var_1AC]']
mov ['edx,', '[ebp+var_B8]']
adc ['edx,', '[ebp+var_1A8]']
mov ['[ebp+var_BC],', 'ecx']
mov ['[ebp+var_B8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_204]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
jmp ['loc_4A9B']
mov ['[ebp+var_21C],', '0']
mov ['[ebp+var_218],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+30h],', '0']
lea ['ecx,', '[ebp+var_21C]']
push ['ecx']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
push ['eax']
lea ['eax,', '[ebp+var_1BC]']
push ['eax']
mov ['ecx,', '[ebp+var_C8]']
push ['ecx']
lea ['edx,', '[ebp+var_134]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?UpdateItemOldData@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABVCItemEx@12@ABUCUpdateItem@12@AAVCItemOut@12@PAUICompressProgressInfo@@PAUIArchiveUpdateCallbackFile@@AA_K@Z']
mov ['[ebp+var_224],', 'eax']
cmp ['[ebp+var_224],', '0']
jz ['short', 'loc_4A76']
mov ['edx,', '[ebp+var_224]']
mov ['[ebp+var_250],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1BC]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_134]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_250]']
jmp ['loc_4BBA']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+30h],', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '[ebp+var_21C]']
mov ['eax,', '[ecx+1Ch]']
adc ['eax,', '[ebp+var_218]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+18h],', 'edx']
mov ['[ecx+1Ch],', 'eax']
lea ['edx,', '[ebp+var_1BC]']
push ['edx']
lea ['ecx,', '[ebp+var_A8]']
call ['?Add@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAEIABVCItemOut@NZip@NArchive@@@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1Eh']
mov ['edx,', '[eax+1Ch]']
adc ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[eax+18h],', 'ecx']
mov ['[eax+1Ch],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1BC]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_134]']
call ['??1CItemEx@NZip@NArchive@@QAE@XZ']
jmp ['loc_42BF']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_B4]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+var_B0]']
mov ['[ecx+24h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_BC]']
mov ['[ecx+28h],', 'edx']
mov ['eax,', '[ebp+var_B8]']
mov ['[ecx+2Ch],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?SetCur@CLocalProgress@@QAEJXZ']
mov ['[ebp+var_228],', 'eax']
cmp ['[ebp+var_228],', '0']
jz ['short', 'loc_4B6A']
mov ['ecx,', '[ebp+var_228]']
mov ['[ebp+var_254],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_254]']
jmp ['short', 'loc_4BBA']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?WriteCentralDir@COutArchive@NZip@NArchive@@QAEXABV?$CObjectVector@VCItemOut@NZip@NArchive@@@@PBV?$CBuffer@E@@@Z']
mov ['[ebp+var_258],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_94]']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_258]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN46']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '260h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
endp
?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Event_Set@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_Handle_WaitObject@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnterCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LeaveCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?SetRatioInfo@CMtProgressMixer2@NZip@NArchive@@QAEJIPB_K0@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$?SetRatioInfo@CMtProgressMixer2@NZip@NArchive@@QAEJIPB_K0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-48h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetRatioInfo@CMtProgressMixer2@NZip@NArchive@@QAEJIPB_K0@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Create@CMtProgressMixer@NZip@NArchive@@QAEXPAUIProgress@@_N@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Create@CMtProgressMixer@NZip@NArchive@@QAEXPAUIProgress@@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Create@CMtProgressMixer@NZip@NArchive@@QAEXPAUIProgress@@_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1CCacheOutStream@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$??1CCacheOutStream@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCacheOutStream@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Update@NZip@NArchive@@YGJABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PAUISequentialOutStream@@PAVCInArchive@12@_NPAUCCompressionMethodMode@12@PAUIArchiveUpdateCallback@@@Z$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Update@NZip@NArchive@@YGJABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PAUISequentialOutStream@@PAVCInArchive@12@_NPAUCCompressionMethodMode@12@PAUIArchiveUpdateCallback@@@Z$1 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Update@NZip@NArchive@@YGJABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PAUISequentialOutStream@@PAVCInArchive@12@_NPAUCCompressionMethodMode@12@PAUIArchiveUpdateCallback@@@Z$2 proc near
mov ['eax,', '[ebp-0B4h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Update@NZip@NArchive@@YGJABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PAUISequentialOutStream@@PAVCInArchive@12@_NPAUCCompressionMethodMode@12@PAUIArchiveUpdateCallback@@@Z$3 proc near
lea ['ecx,', '[ebp-88h]']
jmp ['??1COutArchive@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$?Update@NZip@NArchive@@YGJABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PAUISequentialOutStream@@PAVCInArchive@12@_NPAUCCompressionMethodMode@12@PAUIArchiveUpdateCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Update@NZip@NArchive@@YGJABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PAUISequentialOutStream@@PAVCInArchive@12@_NPAUCCompressionMethodMode@12@PAUIArchiveUpdateCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$1 proc near
lea ['ecx,', '[ebp-0B0h]']
jmp ['??1CItemEx@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-128h]']
jmp ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$3 proc near
lea ['ecx,', '[ebp-178h]']
jmp ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-1D4h]']
jmp ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$5 proc near
mov ['eax,', '[ebp-668h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$6 proc near
lea ['ecx,', '[ebp-1E4h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$7 proc near
lea ['ecx,', '[ebp-234h]']
jmp ['??1CMtCompressProgressMixer@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$8 proc near
lea ['ecx,', '[ebp-264h]']
jmp ['??1CMemBlockManagerMt@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$9 proc near
lea ['ecx,', '[ebp-27Ch]']
jmp ['??1CMemRefs@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$10 proc near
lea ['ecx,', '[ebp-290h]']
jmp ['??1CThreads@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$11 proc near
lea ['ecx,', '[ebp-2A4h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$12 proc near
lea ['ecx,', '[ebp-2B8h]']
jmp ['??1?$CRecordVector@H@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$13 proc near
lea ['ecx,', '[ebp-300h]']
jmp ['??1CMemBlocks2@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$14 proc near
lea ['ecx,', '[ebp-3CCh]']
jmp ['??1CThreadInfo@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$15 proc near
mov ['eax,', '[ebp-678h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$16 proc near
mov ['eax,', '[ebp-684h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$17 proc near
lea ['ecx,', '[ebp-458h]']
jmp ['??1CItemEx@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$18 proc near
lea ['ecx,', '[ebp-4E0h]']
jmp ['??1CItemOut@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$19 proc near
lea ['ecx,', '[ebp-4ECh]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$20 proc near
lea ['ecx,', '[ebp-4F8h]']
jmp ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$21 proc near
lea ['ecx,', '[ebp-584h]']
jmp ['??1CItemEx@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$22 proc near
lea ['ecx,', '[ebp-60Ch]']
jmp ['??1CItemOut@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$23 proc near
lea ['ecx,', '[ebp-620h]']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z$24 proc near
lea ['ecx,', '[ebp-630h]']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-6F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Update2@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetItemInfoFromCompressingResult@NZip@NArchive@@YGXABUCCompressingResult@12@_NEAAVCItem@12@@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1CExtraSubBlock@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$?SetItemInfoFromCompressingResult@NZip@NArchive@@YGXABUCCompressingResult@12@_NEAAVCItem@12@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetItemInfoFromCompressingResult@NZip@NArchive@@YGXABUCCompressingResult@12@_NEAAVCItem@12@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CopyBlockToArchive@NZip@NArchive@@YGJPAUISequentialInStream@@_KAAVCOutArchive@12@PAUICompressProgressInfo@@@Z$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__ehhandler$?CopyBlockToArchive@NZip@NArchive@@YGJPAUISequentialInStream@@_KAAVCOutArchive@12@PAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CopyBlockToArchive@NZip@NArchive@@YGJPAUISequentialInStream@@_KAAVCOutArchive@12@PAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z$0 proc near
mov ['eax,', '[ebp-230h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z$1 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z$2 proc near
lea ['ecx,', '[ebp-94h]']
jmp ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z$3 proc near
lea ['ecx,', '[ebp-0A8h]']
jmp ['??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z$4 proc near
lea ['ecx,', '[ebp-134h]']
jmp ['??1CItemEx@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z$5 proc near
lea ['ecx,', '[ebp-1BCh]']
jmp ['??1CItemOut@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z$6 proc near
lea ['ecx,', '[ebp-1CCh]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z$7 proc near
lea ['ecx,', '[ebp-204h]']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-260h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Update2St@NZip@NArchive@@YGJAAVCOutArchive@12@PAVCInArchive@12@ABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PBUCCompressionMethodMode@12@PBV?$CBuffer@E@@PAUIArchiveUpdateCallback@@PAUIArchiveUpdateCallbackFile@@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx]']
call ['?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
call ['?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMtProgressMixer2@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CMtProgressMixer2@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressProgressInfo@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CMtProgressMixer2@NZip@NArchive@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0?$CMyComPtr@UIProgress@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CMtProgressMixer2@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1?$CMyComPtr@UIProgress@@@@QAE@XZ']
endp
__unwindfunclet$??0CMtProgressMixer2@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '34h']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__ehhandler$??0CMtProgressMixer2@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CMtProgressMixer2@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_CriticalSection_Init@4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CMtProgressMixer2@NZip@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5654']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_565B']
mov ['eax,', '80004002h']
jmp ['short', 'loc_566C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CMtProgressMixer2@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CMtProgressMixer2@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_5722']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_574C']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_5743']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCMtProgressMixer2@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_574A']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCMtProgressMixer2@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMtProgressMixer2@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5786']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CMtProgressMixer2@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CMtProgressMixer2@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1?$CMyComPtr@UIProgress@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CMtProgressMixer2@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1?$CMyComPtr@UIProgress@@@@QAE@XZ']
endp
__unwindfunclet$??1CMtProgressMixer2@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '34h']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__ehhandler$??1CMtProgressMixer2@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CMtProgressMixer2@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__DeleteCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressProgressInfo@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressProgressInfo@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CCacheOutStream@NZip@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5AA0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_5AA7']
mov ['eax,', '80004002h']
jmp ['short', 'loc_5AB8']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CCacheOutStream@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCacheOutStream@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_5B2A']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_5B54']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_5B4B']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCCacheOutStream@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_5B52']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCCacheOutStream@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCacheOutStream@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5B8E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyWriteBlock@CCacheOutStream@NZip@NArchive@@AAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+30h]']
and ['ecx,', '0FFFFFh']
mov ['edx,', '100000h']
sub ['edx,', 'ecx']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?MyWrite@CCacheOutStream@NZip@NArchive@@AAEJI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CanUpdate@CInArchive@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?AreThereErrors@CInArchive@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5C12']
xor ['al,', 'al']
jmp ['loc_5C93']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+3Ch],', '0']
jg ['short', 'loc_5C30']
jl ['short', 'loc_5C2C']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jnb ['short', 'loc_5C30']
xor ['al,', 'al']
jmp ['short', 'loc_5C93']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+4Ch]']
cmp ['edx,', '[ecx+3Ch]']
jg ['short', 'loc_5C5E']
jl ['short', 'loc_5C5A']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+48h]']
cmp ['edx,', '[ecx+38h]']
jnb ['short', 'loc_5C5E']
xor ['al,', 'al']
jmp ['short', 'loc_5C93']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?GetEmbeddedStubSize@CInArchiveInfo@NZip@NArchive@@QBE_KXZ']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '[ebp+var_14]']
jz ['short', 'loc_5C7B']
xor ['al,', 'al']
jmp ['short', 'loc_5C93']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?ThereIsTail@CInArchiveInfo@NZip@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_5C91']
xor ['al,', 'al']
jmp ['short', 'loc_5C93']
mov ['al,', '1']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetEmbeddedStubSize@CInArchiveInfo@NZip@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+30h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5CC9']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
mov ['edx,', '[edx+2Ch]']
jmp ['short', 'loc_5CDE']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+10h]']
sub ['edx,', '[ecx]']
mov ['esi,', '[eax+14h]']
sbb ['esi,', '[ecx+4]']
mov ['eax,', 'edx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ThereIsTail@CInArchiveInfo@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[edx+24h]']
cmp ['ecx,', '[eax+1Ch]']
jb ['short', 'loc_5D31']
ja ['short', 'loc_5D28']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[edx+20h]']
cmp ['ecx,', '[eax+18h]']
jbe ['short', 'loc_5D31']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_5D38']
mov ['[ebp+var_10],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_10]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AreThereErrors@CInArchive@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7Ah]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5D76']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+7Dh]']
test ['eax,', 'eax']
jnz ['short', 'loc_5D76']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_5D7D']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BCBaseEvent@NSynchronization@NWindows@@QAEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetBlockSize@CMemBlockManager@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMemBlockManagerMt@@QAE@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CMemBlockManagerMt@@QAE@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0CMemBlockManager@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0CSemaphore@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CMemBlockManagerMt@@QAE@I@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMemBlockManager@@QAE@XZ']
endp
__unwindfunclet$??0CMemBlockManagerMt@@QAE@I@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??0CMemBlockManagerMt@@QAE@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CMemBlockManagerMt@@QAE@I@Z']
jmp ['___CxxFrameHandler3']
endp
??0CSemaphore@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMemBlockManager@@QAE@I@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CMemBlockManager@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?FreeSpace@CMemBlockManager@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMemBlockManagerMt@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CMemBlockManagerMt@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
call ['?FreeSpace@CMemBlockManagerMt@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1CSemaphore@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CMemBlockManager@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CMemBlockManagerMt@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMemBlockManager@@QAE@XZ']
endp
__unwindfunclet$??1CMemBlockManagerMt@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CMemBlockManagerMt@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1CSemaphore@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??1CMemBlockManagerMt@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CMemBlockManagerMt@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CSemaphore@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CSemaphore@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CSemaphore@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateEvents@COutMemStream@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_60A0']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_60AB']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_60DD']
xor ['eax,', 'eax']
jmp ['short', 'loc_60E6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_AutoResetEvent_CreateNotSignaled@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setnz ['cl']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetOutStream@COutMemStream@@QAEXPAUIOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4Ch']
call ['??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReleaseOutStream@COutMemStream@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4Ch']
call ['?Release@?$CMyComPtr@UIOutStream@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutMemStream@@QAE@PAVCMemBlockManagerMt@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COutMemStream@@QAE@PAVCMemBlockManagerMt@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COutMemStream@@6B@']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0CMemLockBlocks@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0COutMemStream@@QAE@PAVCMemBlockManagerMt@@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0COutMemStream@@QAE@PAVCMemBlockManagerMt@@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0COutMemStream@@QAE@PAVCMemBlockManagerMt@@@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1CMemLockBlocks@@QAE@XZ']
endp
__unwindfunclet$??0COutMemStream@@QAE@PAVCMemBlockManagerMt@@@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__ehhandler$??0COutMemStream@@QAE@PAVCMemBlockManagerMt@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COutMemStream@@QAE@PAVCMemBlockManagerMt@@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CMemLockBlocks@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CMemBlocks@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+18h],', '1']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMemBlocks@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WasUnlockEventSent@COutMemStream@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax+15h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetRealStreamMode@COutMemStream@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+15h],', '1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@COutMemStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6444']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_644B']
mov ['eax,', '80004002h']
jmp ['short', 'loc_645C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@COutMemStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@COutMemStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_64CE']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_64F8']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_64EF']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCOutMemStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_64F6']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0IOutStream@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMemLockBlocks@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMemBlocks@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMemBlocks@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCOutMemStream@@QAEPAXI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutMemStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6692']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1COutMemStream@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COutMemStream@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COutMemStream@@6B@']
mov ['[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
call ['?Free@COutMemStream@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1CMemLockBlocks@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COutMemStream@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1COutMemStream@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1COutMemStream@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1CMemLockBlocks@@QAE@XZ']
endp
__unwindfunclet$??1COutMemStream@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$??1COutMemStream@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4Ch']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$??1COutMemStream@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COutMemStream@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CMtCompressProgress@@QAEXPAVCMtCompressProgressMixer@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+0Ch],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Reinit@CMtCompressProgress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+8]']
call ['?Reinit@CMtCompressProgressMixer@@QAEXH@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Get_Lzma_NumThreads@CMethodProps@@QBEIAA_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?Get_NumThreads@CMethodProps@@QBEHXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_68E6']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx],', '1']
xor ['eax,', 'eax']
cmp ['[ebp+var_8],', '2']
setnl ['al']
add ['eax,', '1']
jmp ['short', 'loc_68F7']
mov ['ecx,', '[ebp+var_4]']
call ['?Get_Lzma_Algo@CMethodProps@@QBEIXZ']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['eax,', '1']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Get_NumThreads@CMethodProps@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0Dh']
mov ['ecx,', '[ebp+var_4]']
call ['?FindProp@CMethodProps@@QBEHK@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_6958']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '13h']
jnz ['short', 'loc_6958']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
mov ['eax,', '[eax+10h]']
jmp ['short', 'loc_695B']
or ['eax,', '0FFFFFFFFh']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Get_Lzma_Algo@CMethodProps@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0Ch']
mov ['ecx,', '[ebp+var_4]']
call ['?FindProp@CMethodProps@@QBEHK@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_69BC']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '13h']
jnz ['short', 'loc_69BC']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
mov ['eax,', '[eax+10h]']
jmp ['short', 'loc_69CE']
mov ['ecx,', '[ebp+var_4]']
call ['?GetLevel@CMethodProps@@QBEHXZ']
xor ['ecx,', 'ecx']
cmp ['eax,', '5']
setnl ['cl']
mov ['eax,', 'ecx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Get_BZip2_NumThreads@CMethodProps@@QBEIAA_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?Get_NumThreads@CMethodProps@@QBEHXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_6A2F']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx],', '1']
cmp ['[ebp+var_8],', '1']
jge ['short', 'loc_6A1D']
mov ['eax,', '1']
jmp ['short', 'loc_6A34']
cmp ['[ebp+var_8],', '40h']
jle ['short', 'loc_6A2A']
mov ['eax,', '40h']
jmp ['short', 'loc_6A34']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_6A34']
mov ['eax,', '1']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Get_BZip2_BlockSize@CMethodProps@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?FindProp@CMethodProps@@QBEHK@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_6AD7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '13h']
jnz ['short', 'loc_6AD7']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
mov ['eax,', '[eax+10h]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '186A0h']
mov ['[ebp+var_14],', '0DBBA0h']
cmp ['[ebp+var_C],', '186A0h']
jnb ['short', 'loc_6AC2']
mov ['[ebp+var_C],', '186A0h']
cmp ['[ebp+var_C],', '0DBBA0h']
jbe ['short', 'loc_6AD2']
mov ['[ebp+var_C],', '0DBBA0h']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_6B19']
mov ['ecx,', '[ebp+var_4]']
call ['?GetLevel@CMethodProps@@QBEHXZ']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '5']
jl ['short', 'loc_6AF1']
mov ['[ebp+var_1C],', '9']
jmp ['short', 'loc_6B10']
cmp ['[ebp+var_18],', '1']
jl ['short', 'loc_6B03']
mov ['ecx,', '[ebp+var_18]']
lea ['edx,', '[ecx+ecx-1]']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_6B0A']
mov ['[ebp+var_20],', '1']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
imul ['eax,', '186A0h']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AddProp_NumThreads@CMethodProps@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0Dh']
mov ['ecx,', '[ebp+var_4]']
call ['?AddProp32@CProps@@QAEXKI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsRealAesMode@CCompressionMethodMode@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+24h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6B8A']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+15h]']
test ['eax,', 'eax']
jz ['short', 'loc_6B8A']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_6B91']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CBaseProps@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0?$CRecordVector@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0AString@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+40h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+38h],', '0']
mov ['dword', 'ptr', '[edx+3Ch],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CBaseProps@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@E@@QAE@XZ']
endp
__ehhandler$??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CBaseProps@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CMethodProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseProps@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMethodProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCProp@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CItemOut@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CItem@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+78h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CItem@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CItem@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CLocalItem@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+3Ah],', 'ax']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+3Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??0CExtraBlock@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+5Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+5Dh],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+38h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+39h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CItem@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CLocalItem@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1CExtraBlock@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$??0CItem@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CItem@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CLocalItem@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CLocalItem@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0CExtraBlock@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CLocalItem@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0CLocalItem@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CLocalItem@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CLocalItem@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CLocalItem@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??1CExtraBlock@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1AString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CLocalItem@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1CLocalItem@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CLocalItem@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CExtraBlock@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CExtraBlock@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WriteLocalHeader_And_SeekToNextFile@COutArchive@NZip@NArchive@@QAEXABVCLocalItem@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteLocalHeader@COutArchive@NZip@NArchive@@QAEXABVCLocalItem@23@@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?SeekToCurPos@COutArchive@NZip@NArchive@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetLocalFullSize@CItemEx@NZip@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', '[eax+60h]']
xor ['edi,', 'edi']
mov ['ecx,', '[ebp+var_4]']
add ['esi,', '[ecx+10h]']
adc ['edi,', '[ecx+14h]']
mov ['ecx,', '[ebp+var_4]']
call ['?HasDescriptor@CLocalItem@NZip@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '10h']
xor ['eax,', 'eax']
add ['esi,', 'edx']
adc ['edi,', 'eax']
mov ['eax,', 'esi']
mov ['edx,', 'edi']
pop ['edi']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?HasDescriptor@CLocalItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[eax]']
and ['eax,', '8']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearFlags@CLocalItem@NZip@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetEncrypted@CLocalItem@NZip@NArchive@@QAEX_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?SetFlag@CLocalItem@NZip@NArchive@@AAEXI_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetFlag@CLocalItem@NZip@NArchive@@AAEXI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jz ['short', 'loc_71DB']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
or ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dx']
jmp ['short', 'loc_71EE']
mov ['ecx,', '[ebp+arg_0]']
not ['ecx']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
and ['eax,', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetUtf8@CLocalItem@NZip@NArchive@@QAEX_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
push ['800h']
mov ['ecx,', '[ebp+var_4]']
call ['?SetFlag@CLocalItem@NZip@NArchive@@AAEXI_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+38h]']
mov ['edx,', '[ecx+3Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CWzAesExtra@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2],', '3']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'ax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetSubBlock@CWzAesExtra@NZip@NArchive@@QBEXAAUCExtraSubBlock@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['7']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
mov ['eax,', '9901h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[eax]']
mov ['[edx],', 'cl']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx+2],', '41h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+3],', '45h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['al,', '[edx+2]']
mov ['[ecx+4],', 'al']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['al,', '[edx+4]']
mov ['[ecx+5],', 'al']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+4]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+6],', 'dl']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clear@CExtraBlock@NZip@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CExtraSubBlock@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CExtraSubBlock@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??1?$CBuffer@E@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CThreadInfo@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CThreadInfo@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CThread@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0CAddCommon@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+0C0h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CThread@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$??0CThreadInfo@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CThreadInfo@NZip@NArchive@@QAE@ABUCCompressionMethodMode@12@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CThread@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CThread@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CThread@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CThread@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateEvents@CThreadInfo@NZip@NArchive@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_75B4']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_75BF']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateThread@CThreadInfo@NZip@NArchive@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
push ['offset', '?CoderThread@NZip@NArchive@@YGIPAX@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_Thread_Create@12']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??1CThreads@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CThreads@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_767F']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_76A1']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEAAUCThreadInfo@NZip@NArchive@@I@Z']
mov ['ecx,', 'eax']
call ['?StopWaitClose@CThreadInfo@NZip@NArchive@@QAEXXZ']
jmp ['short', 'loc_7676']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CThreads@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAE@XZ']
endp
__ehhandler$??1CThreads@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CThreads@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?StopWaitClose@CThreadInfo@NZip@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0Ch],', '1']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jz ['short', 'loc_774A']
push ['80004004h']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+18h]']
call ['?StopWriting@COutMemStream@@QAEXJ@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_7767']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?Wait@CThread@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CThread@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Wait@CThread@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_Handle_WaitObject@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?StopWriting@COutMemStream@@QAEXJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+20h],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMemBlocks2@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CMemLockBlocks@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+38h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+39h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMemRefs@NZip@NArchive@@QAE@PAVCMemBlockManagerMt@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CMemRefs@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CMemRefs@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_789F']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['?Size@?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_78CD']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??A?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEAAUCMemBlocks2@NZip@NArchive@@I@Z']
mov ['ecx,', 'eax']
call ['?FreeOpt@CMemBlocks@@QAEXPAVCMemBlockManagerMt@@@Z']
jmp ['short', 'loc_7896']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CMemRefs@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAE@XZ']
endp
__ehhandler$??1CMemRefs@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CMemRefs@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?HasWzAes@CExtraBlock@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
lea ['ecx,', '[ebp+var_10]']
call ['??0CWzAesExtra@NZip@NArchive@@QAE@XZ']
lea ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?GetWzAes@CExtraBlock@NZip@NArchive@@QBE_NAAUCWzAesExtra@23@@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetWzAes@CExtraBlock@NZip@NArchive@@QBE_NAAUCWzAesExtra@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_79DD']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_7A0C']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?ParseFromSubBlock@CWzAesExtra@NZip@NArchive@@QAE_NABUCExtraSubBlock@23@@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7A0A']
mov ['al,', '1']
jmp ['short', 'loc_7A0E']
jmp ['short', 'loc_79D4']
xor ['al,', 'al']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ParseFromSubBlock@CWzAesExtra@NZip@NArchive@@QAE_NABUCExtraSubBlock@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '9901h']
jz ['short', 'loc_7A49']
xor ['al,', 'al']
jmp ['short', 'loc_7AAF']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
call ['?Size@?$CBuffer@E@@QBEIXZ']
cmp ['eax,', '7']
jnb ['short', 'loc_7A5D']
xor ['al,', 'al']
jmp ['short', 'loc_7AAF']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['[edx],', 'cx']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
cmp ['eax,', '41h']
jnz ['short', 'loc_7A8F']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
cmp ['edx,', '45h']
jz ['short', 'loc_7A93']
xor ['al,', 'al']
jmp ['short', 'loc_7AAF']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx+4]']
mov ['[eax+2],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['dx,', '[ecx+5]']
mov ['[eax+4],', 'dx']
mov ['al,', '1']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?RemoveUnknownSubBlocks@CExtraBlock@NZip@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7B16']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEAAUCExtraSubBlock@NZip@NArchive@@I@Z']
movzx ['edx,', 'word', 'ptr', '[eax]']
cmp ['edx,', '9901h']
jz ['short', 'loc_7B14']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Delete@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEXI@Z']
jmp ['short', 'loc_7AE2']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetDataPosition@CItemEx@NZip@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+60h]']
xor ['edx,', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+40h]']
adc ['edx,', '[ecx+44h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetOffsetInStream@CInArchive@NZip@NArchive@@QBE_K_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
add ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['edx,', '[eax+3Ch]']
adc ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['eax,', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CUpdateRange@NZip@NArchive@@QAE@_K0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_8+4]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?SetDescriptorMode@CLocalItem@NZip@NArchive@@QAEX_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
push ['8']
mov ['ecx,', '[ebp+var_4]']
call ['?SetFlag@CLocalItem@NZip@NArchive@@AAEXI_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CItemEx@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CItem@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CItemEx@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CItem@NZip@NArchive@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CItem@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CItem@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??1CExtraBlock@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CLocalItem@NZip@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CItem@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CLocalItem@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CItem@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1CExtraBlock@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$??1CItem@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CItem@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CItemOut@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CItem@NZip@NArchive@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4CItemEx@NZip@NArchive@@QAEAAV012@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4CItem@NZip@NArchive@@QAEAAV012@ABV012@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
mov ['[ecx+60h],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CItem@NZip@NArchive@@QAEAAV012@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4CLocalItem@NZip@NArchive@@QAEAAV012@ABV012@@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+38h]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+38h],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx+3Ah]']
mov ['[ecx+3Ah],', 'ax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3Ch]']
mov ['[ecx+3Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+40h]']
mov ['[ecx+40h],', 'eax']
mov ['edx,', '[edx+44h]']
mov ['[ecx+44h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '48h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['??4CExtraBlock@NZip@NArchive@@QAEAAU012@ABU012@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '54h']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '54h']
call ['??4?$CBuffer@E@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+5Ch]']
mov ['[edx+5Ch],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+5Dh]']
mov ['[edx+5Dh],', 'cl']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CLocalItem@NZip@NArchive@@QAEAAV012@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+2]']
mov ['[eax+2],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[eax+14h]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[ecx+18h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['[ecx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2Ch']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??4CExtraBlock@NZip@NArchive@@QAEAAU012@ABU012@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CExtraBlock@NZip@NArchive@@QAEAAU012@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CItemEx@NZip@NArchive@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CItem@NZip@NArchive@@QAE@ABV012@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
mov ['[ecx+60h],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CBaseProps@NZip@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CBaseProps@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@E@@QAE@XZ']
endp
__ehhandler$??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??4CCompressionMethodMode@NZip@NArchive@@QAEAAU012@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4CBaseProps@NZip@NArchive@@QAEAAU012@ABU012@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??4?$CRecordVector@E@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+24h]']
mov ['[edx+24h],', 'cl']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '28h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['[eax+38h],', 'edx']
mov ['ecx,', '[ecx+3Ch]']
mov ['[eax+3Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+40h]']
mov ['[edx+40h],', 'cl']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMtProgressMixer@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressProgressInfo@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CMtProgressMixer@NZip@NArchive@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CMtProgressMixer@NZip@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_8178']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_817F']
mov ['eax,', '80004002h']
jmp ['short', 'loc_8190']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CMtProgressMixer@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CMtProgressMixer@NZip@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_8202']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_822C']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_8223']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCMtProgressMixer@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_822A']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCMtProgressMixer@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMtProgressMixer@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_8266']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CMtProgressMixer@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMtCompressProgressMixer@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CMtCompressProgressMixer@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CMtCompressProgressMixer@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$??0CMtCompressProgressMixer@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__unwindfunclet$??0CMtCompressProgressMixer@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__ehhandler$??0CMtCompressProgressMixer@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CMtCompressProgressMixer@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CMtCompressProgressMixer@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CMtCompressProgressMixer@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CMtCompressProgressMixer@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$??1CMtCompressProgressMixer@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__unwindfunclet$??1CMtCompressProgressMixer@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__ehhandler$??1CMtCompressProgressMixer@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CMtCompressProgressMixer@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CThreads@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMemBlocks2@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMemLockBlocks@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CThreadInfo@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CThreadInfo@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1CAddCommon@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CThread@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CThreadInfo@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CThread@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CThreadInfo@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CThreadInfo@NZip@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CThreadInfo@NZip@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$??1CThreadInfo@NZip@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CThreadInfo@NZip@NArchive@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$??1CThreadInfo@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CThreadInfo@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CMtCompressProgress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressProgressInfo@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CMtCompressProgress@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CMtCompressProgress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_8744']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_874B']
mov ['eax,', '80004002h']
jmp ['short', 'loc_875C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CMtCompressProgress@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CMtCompressProgress@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_87CB']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_87DF']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CItem@NZip@NArchive@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CItem@NZip@NArchive@@QAE@ABV012@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+38h]']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+38h],', 'dx']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx+3Ah]']
mov ['[ecx+3Ah],', 'ax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3Ch]']
mov ['[ecx+3Ch],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+40h]']
mov ['[ecx+40h],', 'eax']
mov ['edx,', '[edx+44h]']
mov ['[ecx+44h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '48h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??0CExtraBlock@NZip@NArchive@@QAE@ABU012@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '54h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??0?$CBuffer@E@@QAE@ABV0@@Z']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+5Ch]']
mov ['[edx+5Ch],', 'cl']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+5Dh]']
mov ['[edx+5Dh],', 'cl']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CItem@NZip@NArchive@@QAE@ABV012@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CLocalItem@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NZip@NArchive@@QAE@ABV012@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1CExtraBlock@NZip@NArchive@@QAE@XZ']
endp
__ehhandler$??0CItem@NZip@NArchive@@QAE@ABV012@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CItem@NZip@NArchive@@QAE@ABV012@@Z']
jmp ['___CxxFrameHandler3']
endp
??4CBaseProps@NZip@NArchive@@QAEAAU012@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4CMethodProps@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+14h]']
mov ['[ecx+14h],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+15h]']
mov ['[ecx+15h],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+16h]']
mov ['[ecx+16h],', 'al']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+2]']
mov ['[eax+2],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+4]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[eax+14h]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[ecx+18h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['[ecx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0AString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2Ch']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0CExtraBlock@NZip@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CLocalItem@NZip@NArchive@@QAE@ABV012@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CExtraBlock@NZip@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CMethodProps@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4CProps@@QAEAAU0@ABU0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CProps@@QAEAAU0@ABU0@@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CCacheOutStream@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCacheOutStream@NZip@NArchive@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutArchive@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COutArchive@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COutArchive@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$??0COutArchive@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COutArchive@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutArchive@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COutArchive@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COutArchive@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$??1COutArchive@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COutArchive@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Delete@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@PAX@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Front@?$CRecordVector@PAX@@QAEAAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8F1A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8F67']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9000']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_9023']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UISequentialInStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_90E2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_912F']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_919C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_91BF']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBuffer@E@@QAE@ABV0@@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_927C']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QAEPAEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QBEPBEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@?$CBuffer@E@@QAEXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_9364']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@?$CBuffer@E@@QAEXXZ']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9364']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Free@?$CBuffer@E@@QAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_93B0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CBuffer@E@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_4]']
jz ['short', 'loc_93F6']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_945E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UIOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_94AB']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIOutStream@@@@QAEPAPAUIOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9530']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_9553']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UIOutStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIProgress@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIProgress@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_95E2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIProgress@@@@QBEPAUIProgress@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIProgress@@@@QAEPAUIProgress@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9638']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_965B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_96CC']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_9712']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressProgressInfo@@@@QAEPAPAUICompressProgressInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UICompressProgressInfo@@@@QAEPAUICompressProgressInfo@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9798']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_97BB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_98BF']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_9951']
mov ['ecx,', '[ebp+var_10]']
call ['?Clear@?$CObjectVector@UCProp@@@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCProp@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Reserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_98F0']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_994E']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_992C']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CProp@@QAE@ABU0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_9933']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_98E7']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCProp@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_9AA2']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_9A99']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_9AA0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_9A5E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@UCProp@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_9B88']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_9B7F']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_9B86']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_9B44']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@E@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@E@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CRecordVector@E@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Size],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_9C3A']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_9CCB']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@E@@QBEIXZ']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Size]']
cmp ['edx,', '[ecx+8]']
jbe ['short', 'loc_9CA1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+Size]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_9CC8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Front@?$CRecordVector@E@@QBEABEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_9DB7']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_9E0F']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_9DF0']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CExtraSubBlock@NZip@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_9DF7']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_9DAE']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__unwindfunclet$??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z$1 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??4?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_9EE7']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_9F79']
mov ['ecx,', '[ebp+var_10]']
call ['?Clear@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Reserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_9F18']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_9F76']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_9F54']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CExtraSubBlock@NZip@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_9F5B']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_9F0F']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEAAV0@ABV0@@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??4?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEAAV0@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEAAV0@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEAAUCExtraSubBlock@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEIABUCExtraSubBlock@NZip@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEIABUCExtraSubBlock@NZip@NArchive@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A0A4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CExtraSubBlock@NZip@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_A0AB']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEIABUCExtraSubBlock@NZip@NArchive@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEIABUCExtraSubBlock@NZip@NArchive@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEIABUCExtraSubBlock@NZip@NArchive@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_A1C6']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A1BD']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCExtraSubBlock@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_A1C4']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_A182']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_A2AC']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_A2A3']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCExtraSubBlock@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_A2AA']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_A268']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Delete@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_A30A']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['??_GCExtraSubBlock@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_A311']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Delete@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEAAUCThreadInfo@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEIABUCThreadInfo@NZip@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEIABUCThreadInfo@NZip@NArchive@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0C8h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A40F']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CThreadInfo@NZip@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_A416']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEIABUCThreadInfo@NZip@NArchive@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEIABUCThreadInfo@NZip@NArchive@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAEIABUCThreadInfo@NZip@NArchive@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_A532']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A529']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCThreadInfo@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_A530']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_A4EE']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCThreadInfo@NZip@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEAAUCMemBlocks2@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEIABUCMemBlocks2@NZip@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEIABUCMemBlocks2@NZip@NArchive@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['40h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A688']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CMemBlocks2@NZip@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_A68F']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEIABUCMemBlocks2@NZip@NArchive@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEIABUCMemBlocks2@NZip@NArchive@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAEIABUCMemBlocks2@NZip@NArchive@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_A7AA']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A7A1']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCMemBlocks2@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_A7A8']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_A766']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCMemBlocks2@NZip@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAEIABVCItemOut@NZip@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAEIABVCItemOut@NZip@NArchive@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['80h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A8B3']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CItemOut@NZip@NArchive@@QAE@ABV012@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_A8BA']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAEIABVCItemOut@NZip@NArchive@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAEIABVCItemOut@NZip@NArchive@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAEIABVCItemOut@NZip@NArchive@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_A9D6']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A9CD']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCItemOut@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_A9D4']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_A992']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VCItemOut@NZip@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QBEABUCUpdateItem@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VCItemEx@NZip@NArchive@@@@QBEABVCItemEx@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_AB1E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@H@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@H@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@H@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Delete@?$CRecordVector@H@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@H@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@H@@QAEIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@H@@QAEAAHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Front@?$CRecordVector@H@@QAEAAHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProp@@QAE@ABU0@@Z proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+4]']
mov ['[eax+4],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CPropVariant@NCOM@NWindows@@QAE@ABV012@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCProp@@QAEPAXI@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_AD32']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CExtraSubBlock@NZip@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0?$CBuffer@E@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCExtraSubBlock@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CExtraSubBlock@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_ADB2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CThreadInfo@NZip@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CThreadInfo@NZip@NArchive@@QAE@ABU012@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'dl']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '14h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[ecx+18h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '20h']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '28h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0CAddCommon@NZip@NArchive@@QAE@ABV012@@Z']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+98h]']
mov ['[ecx+98h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0A0h']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '0A0h']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ecx+10h]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ecx+14h]']
mov ['[edx+14h],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+0B8h]']
mov ['[edx+0B8h],', 'cl']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0BCh]']
mov ['[edx+0BCh],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0C0h]']
mov ['[edx+0C0h],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABU012@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CThread@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABU012@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABU012@@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABU012@@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABU012@@Z$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NZip@NArchive@@QAE@ABU012@@Z$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$??0CThreadInfo@NZip@NArchive@@QAE@ABU012@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CThreadInfo@NZip@NArchive@@QAE@ABU012@@Z']
jmp ['___CxxFrameHandler3']
endp
??_GCThreadInfo@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CThreadInfo@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_B01A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMemBlocks2@NZip@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CMemLockBlocks@@QAE@ABU0@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '20h']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ecx+10h]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ecx+14h]']
mov ['[edx+14h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+38h]']
mov ['[edx+38h],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+39h]']
mov ['[edx+39h],', 'cl']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCMemBlocks2@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMemBlocks2@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_B0CE']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CItemOut@NZip@NArchive@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CItem@NZip@NArchive@@QAE@ABV012@@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+60h]']
mov ['eax,', '[ecx+64h]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+60h],', 'edx']
mov ['[ecx+64h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+68h]']
mov ['ecx,', '[edx+6Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+68h],', 'eax']
mov ['[edx+6Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+70h]']
mov ['edx,', '[eax+74h]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+70h],', 'ecx']
mov ['[eax+74h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+78h]']
mov ['[ecx+78h],', 'al']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCItemOut@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CItemOut@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_B17E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CAddCommon@NZip@NArchive@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CCompressionMethodMode@NZip@NArchive@@QAE@ABU012@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+48h]']
mov ['[ecx+48h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4Ch']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@ABV0@@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '50h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+54h]']
mov ['[eax+54h],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
mov ['[eax+58h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '5Ch']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '5Ch']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
mov ['[ecx+60h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+64h]']
mov ['[ecx+64h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+68h]']
mov ['[ecx+68h],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMemLockBlocks@@QAE@ABU0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CMemBlocks@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+18h]']
mov ['[ecx+18h],', 'al']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CCompressionMethodMode@NZip@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCompressionMethodMode@NZip@NArchive@@QAE@ABU012@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0CBaseProps@NZip@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0?$CRecordVector@E@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+24h]']
mov ['[edx+24h],', 'cl']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '28h']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0AString@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['[eax+38h],', 'edx']
mov ['ecx,', '[ecx+3Ch]']
mov ['[eax+3Ch],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+40h]']
mov ['[edx+40h],', 'cl']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CCompressionMethodMode@NZip@NArchive@@QAE@ABU012@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CBaseProps@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CCompressionMethodMode@NZip@NArchive@@QAE@ABU012@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@E@@QAE@XZ']
endp
__ehhandler$??0CCompressionMethodMode@NZip@NArchive@@QAE@ABU012@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCompressionMethodMode@NZip@NArchive@@QAE@ABU012@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CMemBlocks@@QAE@ABV0@@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[edx+14h]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CBaseProps@NZip@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CMethodProps@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+14h]']
mov ['[ecx+14h],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+15h]']
mov ['[ecx+15h],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+16h]']
mov ['[ecx+16h],', 'al']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CMethodProps@@QAE@ABV0@@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@ABU0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CProps@@QAE@ABU0@@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_B5FC']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_B5D7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAX@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B6AC']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B70D']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Reserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_B7B4']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_B78F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UICompressCoder@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B890']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B8E0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B930']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_B97A']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0?$CMyComPtr@UIOutStream@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B9C8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_BA18']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCProp@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_BAA3']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_BAFB']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_BADC']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CProp@@QAE@ABU0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_BAE3']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_BA9A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__unwindfunclet$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z$1 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$CObjectVector@UCProp@@@@QAE@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@E@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@E@@QBEIXZ']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_BC11']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+Size]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CRecordVector@E@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MoveItems@?$CRecordVector@H@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_BD48']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_BD23']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$QueryInterface@UICompressProgressInfo@@@?$CMyComPtr@UIProgress@@@@QBEJABU_GUID@@PAPAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$MyMin@I@@YGIII@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_BDB7']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_BDBD']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

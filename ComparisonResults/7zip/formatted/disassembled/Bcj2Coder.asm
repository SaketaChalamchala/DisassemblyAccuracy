??0CBaseCoder@NBcj2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_29']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '5']
jge ['short', 'loc_5A']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+eax*4+14h],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+edx*4+28h],', '40000h']
jmp ['short', 'loc_20']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseCoder@NBcj2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_99']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '5']
jge ['short', 'loc_B0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
call ['_MidFree@4']
jmp ['short', 'loc_90']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@CBaseCoder@NBcj2@NCompress@@IAEJ_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_102']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_8]']
jnb ['loc_1B7']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4+28h]']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_14],', '1']
cmp ['[ebp+var_10],', '1']
jnb ['short', 'loc_12F']
mov ['[ebp+var_10],', '1']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jz ['short', 'loc_14A']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax+edx*4+14h]']
jz ['short', 'loc_1B2']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+edx*4],', '0']
jz ['short', 'loc_172']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
call ['_MidFree@4']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+eax*4+14h],', '0']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_MidAlloc@4']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+eax*4],', 'edx']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_1A5']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_1B9']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+eax*4+14h],', 'edx']
jmp ['loc_F9']
xor ['eax,', 'eax']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CEncoder@NBcj2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressCoder2@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0ICompressSetCoderProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0ICompressSetBufSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0CBaseCoder@NBcj2@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CEncoder@NBcj2@NCompress@@6BICompressCoder2@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CEncoder@NBcj2@NCompress@@6BICompressSetCoderProperties@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CEncoder@NBcj2@NCompress@@6BICompressSetBufSize@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4Ch],', '4000000h']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CEncoder@NBcj2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CEncoder@NBcj2@NCompress@@6BICompressCoder2@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CEncoder@NBcj2@NCompress@@6BICompressSetCoderProperties@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CEncoder@NBcj2@NCompress@@6BICompressSetBufSize@@@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??1CBaseCoder@NBcj2@NCompress@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetInBufSize@CEncoder@NBcj2@NCompress@@UAGJII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+40h],', 'ecx']
xor ['eax,', 'eax']
pop ['ebp']
retn ['0Ch']
endp
?SetOutBufSize@CEncoder@NBcj2@NCompress@@UAGJII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+eax*4+30h],', 'edx']
xor ['eax,', 'eax']
pop ['ebp']
retn ['0Ch']
endp
?SetCoderProperties@CEncoder@NBcj2@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '4000000h']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_313']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_392']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '4']
add ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '10h']
jb ['short', 'loc_33B']
jmp ['short', 'loc_30A']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '1']
jz ['short', 'loc_355']
cmp ['[ebp+var_14],', '0Dh']
jz ['short', 'loc_382']
cmp ['[ebp+var_14],', '0Fh']
jz ['short', 'loc_384']
jmp ['short', 'loc_386']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '13h']
jz ['short', 'loc_367']
mov ['eax,', '80070057h']
jmp ['short', 'loc_39D']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '80000000h']
jbe ['short', 'loc_380']
mov ['eax,', '80070057h']
jmp ['short', 'loc_39D']
jmp ['short', 'loc_38D']
jmp ['short', 'loc_30A']
jmp ['short', 'loc_30A']
mov ['eax,', '80070057h']
jmp ['short', 'loc_39D']
jmp ['loc_30A']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+48h],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '37Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_388]']
mov ['ecx,', '0DFh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_400']
cmp ['[ebp+arg_14],', '4']
jz ['short', 'loc_40A']
mov ['eax,', '80070057h']
jmp ['loc_D5A']
push ['1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['?Alloc@CBaseCoder@NBcj2@NCompress@@IAEJ_N@Z']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_428']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_D5A']
mov ['[ebp+var_1C],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_464']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_464']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[edx+4]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
ja ['short', 'loc_464']
jb ['short', 'loc_45E']
cmp ['[ebp+var_24],', '80000000h']
ja ['short', 'loc_464']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??I?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEPAPAUICompressGetSubStreamSize@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ICompressGetSubStreamSize']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ecx]']
push ['eax']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_284],', 'ecx']
mov ['edx,', '[ebp+var_284]']
mov ['[ebp+var_280],', 'edx']
mov ['[ebp+var_2AC],', '0']
jmp ['short', 'loc_4CE']
mov ['eax,', '[ebp+var_2AC]']
add ['eax,', '1']
mov ['[ebp+var_2AC],', 'eax']
cmp ['[ebp+var_2AC],', '4']
jge ['short', 'loc_51A']
mov ['ecx,', '[ebp+var_2AC]']
mov ['edx,', '[ebp+var_2AC]']
mov ['eax,', '[ebp+var_14]']
mov ['edx,', '[eax+edx*4+10h]']
mov ['[ebp+ecx*4+var_2A4],', 'edx']
mov ['eax,', '[ebp+var_2AC]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+10h]']
mov ['eax,', '[ebp+var_2AC]']
mov ['ecx,', '[ebp+var_14]']
add ['edx,', '[ecx+eax*4+24h]']
mov ['eax,', '[ebp+var_2AC]']
mov ['[ebp+eax*4+var_294],', 'edx']
jmp ['short', 'loc_4BF']
mov ['[ebp+var_2B0],', '0']
mov ['[ebp+var_2B8],', '0']
mov ['[ebp+var_2B4],', '0']
mov ['[ebp+var_2C0],', '0']
mov ['[ebp+var_2BC],', '0']
mov ['[ebp+var_2CC],', '0']
mov ['[ebp+var_2C8],', '0']
mov ['[ebp+var_2D8],', '0']
mov ['[ebp+var_2D4],', '0']
lea ['ecx,', '[ebp+var_2A4]']
push ['ecx']
call ['_Bcj2Enc_Init@4']
mov ['[ebp+var_258],', '0']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_254],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4Ch]']
mov ['[ebp+var_250],', 'ecx']
mov ['[ebp+var_278],', '0']
mov ['[ebp+var_2D9],', '0']
mov ['[ebp+var_2E4],', '0']
mov ['[ebp+var_2E0],', '0']
mov ['[ebp+var_2EC],', '0']
mov ['[ebp+var_2E8],', '0']
mov ['[ebp+var_2ED],', '0']
movzx ['edx,', '[ebp+var_2D9]']
test ['edx,', 'edx']
jz ['loc_89E']
lea ['ecx,', '[ebp+var_2C]']
call ['??B?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ']
test ['eax,', 'eax']
jz ['loc_89E']
mov ['[ebp+var_258],', '0']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_254],', 'eax']
mov ['[ebp+var_278],', '0']
mov ['[ebp+var_2FC],', '0']
mov ['[ebp+var_2F8],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??C?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ']
mov ['[ebp+var_36C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_2FC]']
push ['ecx']
mov ['edx,', '[ebp+var_2E0]']
push ['edx']
mov ['eax,', '[ebp+var_2E4]']
push ['eax']
mov ['ecx,', '[ebp+var_36C]']
push ['ecx']
mov ['edx,', '[ebp+var_36C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_304],', 'eax']
mov ['[ebp+var_2D9],', '0']
cmp ['[ebp+var_304],', '0']
jnz ['loc_852']
mov ['edx,', '[ebp+var_2EC]']
add ['edx,', '[ebp+var_2FC]']
mov ['eax,', '[ebp+var_2E8]']
adc ['eax,', '[ebp+var_2F8]']
mov ['[ebp+var_30C],', 'edx']
mov ['[ebp+var_308],', 'eax']
mov ['ecx,', '[ebp+var_308]']
cmp ['ecx,', '[ebp+var_2BC]']
jb ['short', 'loc_700']
ja ['short', 'loc_6CB']
mov ['edx,', '[ebp+var_30C]']
cmp ['edx,', '[ebp+var_2C0]']
jb ['short', 'loc_700']
mov ['eax,', '[ebp+var_308]']
cmp ['eax,', '[ebp+var_2BC]']
ja ['short', 'loc_6F4']
jb ['short', 'loc_6E9']
mov ['ecx,', '[ebp+var_30C]']
cmp ['ecx,', '[ebp+var_2C0]']
ja ['short', 'loc_6F4']
movzx ['edx,', '[ebp+var_2ED]']
test ['edx,', 'edx']
jnz ['short', 'loc_700']
mov ['[ebp+var_370],', '0']
jmp ['short', 'loc_70A']
mov ['[ebp+var_370],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_370]']
mov ['[ebp+var_30D],', 'al']
mov ['ecx,', '[ebp+var_308]']
cmp ['ecx,', '[ebp+var_2C8]']
ja ['short', 'loc_77A']
jb ['short', 'loc_734']
mov ['edx,', '[ebp+var_30C]']
cmp ['edx,', '[ebp+var_2CC]']
ja ['short', 'loc_77A']
movzx ['eax,', '[ebp+var_30D]']
test ['eax,', 'eax']
jz ['short', 'loc_77A']
mov ['ecx,', '[ebp+var_30C]']
mov ['[ebp+var_2EC],', 'ecx']
mov ['edx,', '[ebp+var_308]']
mov ['[ebp+var_2E8],', 'edx']
mov ['eax,', '[ebp+var_2E4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_2E0]']
adc ['ecx,', '0']
mov ['[ebp+var_2E4],', 'eax']
mov ['[ebp+var_2E0],', 'ecx']
jmp ['loc_61B']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+20h]']
add ['eax,', '[ebp+var_2B0]']
mov ['[ebp+var_280],', 'eax']
movzx ['ecx,', '[ebp+var_30D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_809']
mov ['edx,', '[ebp+var_2C0]']
sub ['edx,', '[ebp+var_30C]']
mov ['eax,', '[ebp+var_2BC]']
sbb ['eax,', '[ebp+var_308]']
mov ['[ebp+var_314],', 'edx']
mov ['ecx,', '[ebp+var_280]']
sub ['ecx,', '[ebp+var_284]']
cmp ['ecx,', '[ebp+var_314]']
jnb ['short', 'loc_7ED']
mov ['[ebp+var_34C],', '80004005h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ']
mov ['eax,', '[ebp+var_34C]']
jmp ['loc_D5A']
mov ['edx,', '[ebp+var_280]']
sub ['edx,', '[ebp+var_314]']
mov ['[ebp+var_280],', 'edx']
mov ['[ebp+var_278],', '1']
cmp ['[ebp+var_2F8],', '0']
ja ['short', 'loc_850']
jb ['short', 'loc_820']
cmp ['[ebp+var_2FC],', '80000000h']
ja ['short', 'loc_850']
mov ['eax,', '[ebp+var_2EC]']
sub ['eax,', '[ebp+var_2CC]']
mov ['ecx,', '[ebp+var_2E8]']
sbb ['ecx,', '[ebp+var_2C8]']
add ['eax,', '[ebp+var_25C]']
mov ['[ebp+var_258],', 'eax']
mov ['edx,', '[ebp+var_2FC]']
mov ['[ebp+var_254],', 'edx']
jmp ['short', 'loc_89E']
cmp ['[ebp+var_304],', '1']
jnz ['short', 'loc_85D']
jmp ['short', 'loc_89E']
cmp ['[ebp+var_304],', '80004001h']
jnz ['short', 'loc_873']
lea ['ecx,', '[ebp+var_2C]']
call ['?Release@?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEXXZ']
jmp ['short', 'loc_89E']
mov ['eax,', '[ebp+var_304]']
mov ['[ebp+var_350],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ']
mov ['eax,', '[ebp+var_350]']
jmp ['loc_D5A']
jmp ['loc_61B']
movzx ['ecx,', '[ebp+var_2ED]']
test ['ecx,', 'ecx']
jz ['short', 'loc_913']
mov ['edx,', '[ebp+var_2C0]']
sub ['edx,', '[ebp+var_2CC]']
mov ['eax,', '[ebp+var_2BC]']
sbb ['eax,', '[ebp+var_2C8]']
mov ['ecx,', '[ebp+var_280]']
sub ['ecx,', '[ebp+var_284]']
add ['ecx,', '[ebp+var_248]']
xor ['esi,', 'esi']
mov ['[ebp+var_378],', 'edx']
mov ['[ebp+var_374],', 'eax']
mov ['[ebp+var_380],', 'ecx']
mov ['[ebp+var_37C],', 'esi']
mov ['edx,', '[ebp+var_378]']
cmp ['edx,', '[ebp+var_380]']
jnz ['short', 'loc_913']
mov ['eax,', '[ebp+var_374]']
cmp ['eax,', '[ebp+var_37C]']
jnz ['short', 'loc_913']
mov ['[ebp+var_278],', '2']
lea ['ecx,', '[ebp+var_2A4]']
push ['ecx']
call ['_Bcj2Enc_Encode@4']
mov ['edx,', '[ebp+var_2B0]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_2C0]']
sub ['ecx,', 'edx']
mov ['esi,', '[ebp+var_2BC]']
sbb ['esi,', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_284]']
sub ['eax,', '[edx+20h]']
cdq
add ['ecx,', 'eax']
adc ['esi,', 'edx']
mov ['eax,', '[ebp+var_248]']
xor ['edx,', 'edx']
sub ['ecx,', 'eax']
sbb ['esi,', 'edx']
mov ['[ebp+var_2CC],', 'ecx']
mov ['[ebp+var_2C8],', 'esi']
cmp ['[ebp+var_23C],', '5']
jnz ['short', 'loc_96E']
jmp ['loc_CA5']
cmp ['[ebp+var_27C],', '4']
jnb ['loc_A66']
mov ['eax,', '[ebp+var_27C]']
mov ['ecx,', '[ebp+var_27C]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+eax*4+var_2A4]']
sub ['eax,', '[edx+ecx*4+10h]']
mov ['[ebp+var_318],', 'eax']
mov ['ecx,', '[ebp+var_318]']
push ['ecx']
mov ['edx,', '[ebp+var_27C]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+edx*4+10h]']
push ['ecx']
mov ['edx,', '[ebp+var_27C]']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_31C],', 'eax']
cmp ['[ebp+var_31C],', '0']
jz ['short', 'loc_9F7']
mov ['edx,', '[ebp+var_31C]']
mov ['[ebp+var_354],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ']
mov ['eax,', '[ebp+var_354]']
jmp ['loc_D5A']
cmp ['[ebp+var_27C],', '3']
jnz ['short', 'loc_A20']
mov ['eax,', '[ebp+var_318]']
xor ['ecx,', 'ecx']
add ['eax,', '[ebp+var_2D8]']
adc ['ecx,', '[ebp+var_2D4]']
mov ['[ebp+var_2D8],', 'eax']
mov ['[ebp+var_2D4],', 'ecx']
mov ['edx,', '[ebp+var_27C]']
mov ['eax,', '[ebp+var_27C]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[ecx+eax*4+10h]']
mov ['[ebp+edx*4+var_2A4],', 'eax']
mov ['ecx,', '[ebp+var_27C]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+ecx*4+10h]']
mov ['ecx,', '[ebp+var_27C]']
mov ['edx,', '[ebp+var_14]']
add ['eax,', '[edx+ecx*4+24h]']
mov ['ecx,', '[ebp+var_27C]']
mov ['[ebp+ecx*4+var_294],', 'eax']
jmp ['loc_BC0']
cmp ['[ebp+var_27C],', '4']
jz ['short', 'loc_A98']
mov ['[ebp+var_358],', '80004005h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ']
mov ['eax,', '[ebp+var_358]']
jmp ['loc_D5A']
jmp ['loc_BC0']
mov ['[ebp+var_2D9],', '1']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_284]']
sub ['eax,', '[edx+20h]']
cmp ['[ebp+var_2B0],', 'eax']
jz ['short', 'loc_ACA']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+20h]']
add ['edx,', '[ebp+var_2B0]']
mov ['[ebp+var_280],', 'edx']
jmp ['loc_5DF']
movzx ['eax,', '[ebp+var_2ED]']
test ['eax,', 'eax']
jz ['short', 'loc_ADA']
jmp ['loc_5DF']
mov ['[ebp+var_2B0],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_284],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_280],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+34h]']
mov ['[ebp+var_324],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_324]']
push ['ecx']
mov ['edx,', '[ebp+var_324]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_32C],', 'eax']
cmp ['[ebp+var_32C],', '0']
jz ['short', 'loc_B6D']
mov ['edx,', '[ebp+var_32C]']
mov ['[ebp+var_35C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ']
mov ['eax,', '[ebp+var_35C]']
jmp ['loc_D5A']
cmp ['[ebp+var_324],', '0']
jnz ['short', 'loc_B82']
mov ['[ebp+var_2ED],', '1']
jmp ['loc_5DF']
mov ['eax,', '[ebp+var_324]']
mov ['[ebp+var_2B0],', 'eax']
mov ['ecx,', '[ebp+var_2B0]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_2C0]']
adc ['edx,', '[ebp+var_2BC]']
mov ['[ebp+var_2C0],', 'ecx']
mov ['[ebp+var_2BC],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+20h]']
add ['ecx,', '[ebp+var_2B0]']
mov ['[ebp+var_280],', 'ecx']
cmp ['[ebp+arg_18],', '0']
jz ['loc_CA0']
mov ['edx,', '[ebp+var_2CC]']
sub ['edx,', '[ebp+var_2B8]']
mov ['eax,', '[ebp+var_2C8]']
sbb ['eax,', '[ebp+var_2B4]']
mov ['[ebp+var_388],', 'edx']
mov ['[ebp+var_384],', 'eax']
cmp ['[ebp+var_384],', '0']
ja ['short', 'loc_C07']
cmp ['[ebp+var_388],', '100000h']
jb ['loc_CA0']
mov ['ecx,', '[ebp+var_2CC]']
add ['ecx,', '[ebp+var_2D8]']
mov ['edx,', '[ebp+var_2C8]']
adc ['edx,', '[ebp+var_2D4]']
mov ['eax,', 'ecx']
cdq
mov ['[ebp+var_338],', 'eax']
mov ['[ebp+var_334],', 'edx']
mov ['eax,', '[ebp+var_2CC]']
mov ['[ebp+var_2B8],', 'eax']
mov ['ecx,', '[ebp+var_2C8]']
mov ['[ebp+var_2B4],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_338]']
push ['edx']
lea ['eax,', '[ebp+var_2CC]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_340],', 'eax']
cmp ['[ebp+var_340],', '0']
jz ['short', 'loc_CA0']
mov ['edx,', '[ebp+var_340]']
mov ['[ebp+var_360],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ']
mov ['eax,', '[ebp+var_360]']
jmp ['loc_D5A']
jmp ['loc_5DF']
mov ['[ebp+var_344],', '0']
jmp ['short', 'loc_CC0']
mov ['eax,', '[ebp+var_344]']
add ['eax,', '1']
mov ['[ebp+var_344],', 'eax']
cmp ['[ebp+var_344],', '4']
jge ['short', 'loc_D3B']
mov ['ecx,', '[ebp+var_344]']
mov ['edx,', '[ebp+var_344]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+ecx*4+var_2A4]']
sub ['ecx,', '[eax+edx*4+10h]']
push ['ecx']
mov ['edx,', '[ebp+var_344]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+edx*4+10h]']
push ['ecx']
mov ['edx,', '[ebp+var_344]']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_348],', 'eax']
cmp ['[ebp+var_348],', '0']
jz ['short', 'loc_D36']
mov ['edx,', '[ebp+var_348]']
mov ['[ebp+var_364],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ']
mov ['eax,', '[ebp+var_364]']
jmp ['short', 'loc_D5A']
jmp ['loc_CB1']
mov ['[ebp+var_368],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ']
mov ['eax,', '[ebp+var_368]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN62']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '388h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '8']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_EC3']
endp
__catch$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-14h],', '80004005h']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7']
retn
endp
?SetInBufSize@CDecoder@NBcj2@NCompress@@UAGJII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+eax*4+30h],', 'edx']
xor ['eax,', 'eax']
pop ['ebp']
retn ['0Ch']
endp
?SetOutBufSize@CDecoder@NBcj2@NCompress@@UAGJII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+40h],', 'ecx']
xor ['eax,', 'eax']
pop ['ebp']
retn ['0Ch']
endp
??0CDecoder@NBcj2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CDecoder@NBcj2@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressCoder2@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0ICompressSetFinishMode@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0ICompressSetInStream2@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0ICompressSetOutStreamSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0ICompressSetBufSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0CBaseCoder@NBcj2@NCompress@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NBcj2@NCompress@@6BICompressCoder2@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@NBcj2@NCompress@@6BICompressSetFinishMode@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CDecoder@NBcj2@NCompress@@6BICompressSetInStream2@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CDecoder@NBcj2@NCompress@@6BISequentialInStream@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CDecoder@NBcj2@NCompress@@6BICompressSetOutStreamSize@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+14h],', 'offset', '??_7CDecoder@NBcj2@NCompress@@6BICompressSetBufSize@@@']
push ['offset', '??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
push ['offset', '??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
push ['4']
push ['4']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '98h']
push ['eax']
call ['??_L@YGXPAXIHP6EX0@Z1@Z']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0A8h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+0A9h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0B0h],', '0']
mov ['dword', 'ptr', '[eax+0B4h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetFinishMode@CDecoder@NBcj2@NCompress@@UAGJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_4],', '0']
setnz ['al']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+0A4h],', 'al']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?InitCommon@CDecoder@NBcj2@NCompress@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_10B1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '4']
jge ['short', 'loc_10EA']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_4]']
mov ['eax,', '[esi+eax*4+1Ch]']
mov ['[edx+ecx*4+0C0h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_4]']
mov ['eax,', '[esi+eax*4+0C0h]']
mov ['[edx+ecx*4+0D0h],', 'eax']
jmp ['short', 'loc_10A8']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_10FC']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '4']
jge ['short', 'loc_1139']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+edx*4+58h],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx*8+68h],', '0']
mov ['dword', 'ptr', '[edx+ecx*8+6Ch],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+eax*4+88h],', '0']
jmp ['short', 'loc_10F3']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0C0h']
push ['edx']
call ['_Bcj2Dec_Init@4']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Code@CDecoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0A0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_A0]']
mov ['ecx,', '28h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '4']
jnz ['short', 'loc_118A']
cmp ['[ebp+arg_18],', '1']
jz ['short', 'loc_1194']
mov ['eax,', '80070057h']
jmp ['loc_17BB']
push ['1']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1Ch']
call ['?Alloc@CBaseCoder@NBcj2@NCompress@@IAEJ_N@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_11B2']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_17BB']
mov ['ecx,', '[ebp+this]']
call ['?InitCommon@CDecoder@NBcj2@NCompress@@AAEXXZ']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+0E0h],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0E0h]']
mov ['[eax+0E4h],', 'edx']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+this]']
add ['eax,', '0C0h']
push ['eax']
call ['_Bcj2Dec_Decode@4']
test ['eax,', 'eax']
jz ['short', 'loc_121A']
mov ['eax,', '1']
jmp ['loc_17BB']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+0E8h],', '4']
jnb ['loc_14BE']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0E8h]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+eax*4+58h]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E8h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+ecx*4+1Ch]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_1262']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+var_1C]']
jnb ['short', 'loc_128D']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E8h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+ecx*4+0C0h]']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_24]']
mov ['al,', '[eax+edx]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_1259']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0E8h]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+edx*4+0C0h],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0E8h]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx+eax*4+0D0h],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E8h]']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+ecx*4+88h],', '0']
jz ['short', 'loc_12EA']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E8h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+ecx*4+88h]']
mov ['[ebp+var_18],', 'eax']
jmp ['loc_165D']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0E8h]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+edx*4+30h]']
sub ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_2C],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0E8h]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+edx*4+1Ch]']
add ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0E8h]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E8h]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+ecx*4]']
mov ['edx,', '[edx]']
push ['ecx']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0E8h]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_34]']
mov ['[eax+edx*4+88h],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_136C']
jmp ['short', 'loc_13D0']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0E8h]']
mov ['ecx,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['esi,', '[ebp+this]']
add ['ecx,', '[esi+eax*8+68h]']
adc ['edx,', '[esi+eax*8+6Ch]']
mov ['eax,', '[ebp+this]']
mov ['eax,', '[eax+0E8h]']
mov ['esi,', '[ebp+this]']
mov ['[esi+eax*8+68h],', 'ecx']
mov ['[esi+eax*8+6Ch],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_13AA']
jmp ['short', 'loc_13D0']
cmp ['[ebp+var_1C],', '4']
jnb ['short', 'loc_13D0']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+0E8h],', '1']
jz ['loc_12EA']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+0E8h],', '2']
jz ['loc_12EA']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0E8h]']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+edx*4+88h],', '0']
jz ['short', 'loc_13FC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0E8h]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+edx*4+88h]']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_1407']
jmp ['loc_165D']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+0E8h],', '1']
jz ['short', 'loc_141F']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+0E8h],', '2']
jnz ['short', 'loc_1493']
mov ['ecx,', '[ebp+var_1C]']
and ['ecx,', '3']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0E8h]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_38]']
mov ['[ecx+eax*4+58h],', 'edx']
cmp ['[ebp+var_1C],', '4']
jnb ['short', 'loc_148A']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E8h]']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+ecx*4+88h],', '0']
jz ['short', 'loc_1472']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E8h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+ecx*4+88h]']
mov ['[ebp+var_84],', 'eax']
jmp ['short', 'loc_147C']
mov ['[ebp+var_84],', '1']
mov ['ecx,', '[ebp+var_84]']
mov ['[ebp+var_18],', 'ecx']
jmp ['loc_165D']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '[ebp+var_38]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E8h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+ecx*4+1Ch]']
add ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0E8h]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+edx*4+0D0h],', 'eax']
jmp ['loc_1595']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+0E0h]']
sub ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_3C],', 'ecx']
jz ['short', 'loc_150A']
mov ['edx,', '[ebp+var_3C]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_C]']
adc ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_150A']
mov ['eax,', '[ebp+var_40]']
jmp ['loc_17BB']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+0E0h],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+40h]']
mov ['[ebp+var_44],', 'ecx']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_1575']
mov ['edx,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_1575']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+var_C]']
mov ['eax,', '[ecx+4]']
sbb ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4C],', 'edx']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_44]']
xor ['edx,', 'edx']
mov ['[ebp+var_8C],', 'ecx']
mov ['[ebp+var_88],', 'edx']
mov ['eax,', '[ebp+var_88]']
cmp ['eax,', '[ebp+var_48]']
jb ['short', 'loc_1575']
ja ['short', 'loc_156F']
mov ['ecx,', '[ebp+var_8C]']
cmp ['ecx,', '[ebp+var_4C]']
jbe ['short', 'loc_1575']
mov ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E0h]']
add ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ebp+this]']
mov ['[edx+0E4h],', 'ecx']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_1595']
jmp ['loc_165D']
cmp ['[ebp+arg_1C],', '0']
jz ['loc_1658']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[eax+0E0h]']
sub ['eax,', '[ecx+2Ch]']
cdq
add ['eax,', '[ebp+var_C]']
adc ['edx,', '[ebp+var_8]']
mov ['[ebp+var_58],', 'eax']
mov ['[ebp+var_54],', 'edx']
mov ['edx,', '[ebp+var_58]']
sub ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_54]']
sbb ['eax,', '[ebp+var_10]']
mov ['[ebp+var_94],', 'edx']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_90],', '0']
ja ['short', 'loc_15E8']
cmp ['[ebp+var_94],', '400000h']
jb ['short', 'loc_1658']
mov ['ecx,', '[ebp+this]']
mov ['esi,', '[ebp+var_58]']
add ['esi,', '[ecx+80h]']
mov ['edi,', '[ebp+var_54]']
adc ['edi,', '[ecx+84h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+0DCh]']
sub ['ecx,', '[eax+0CCh]']
mov ['eax,', 'ecx']
cdq
sub ['esi,', 'eax']
sbb ['edi,', 'edx']
mov ['[ebp+var_68],', 'esi']
mov ['[ebp+var_64],', 'edi']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_58]']
push ['edx']
lea ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_164C']
mov ['eax,', '[ebp+var_70]']
jmp ['loc_17BB']
mov ['edx,', '[ebp+var_58]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_10],', 'eax']
jmp ['loc_11FE']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+0E0h]']
sub ['eax,', '[edx+2Ch]']
mov ['[ebp+var_74],', 'eax']
jz ['short', 'loc_16A9']
mov ['ecx,', '[ebp+var_74]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_C]']
adc ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+2Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_78],', 'eax']
cmp ['[ebp+var_78],', '0']
jz ['short', 'loc_16A9']
mov ['eax,', '[ebp+var_78]']
jmp ['loc_17BB']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_16B7']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_17BB']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+0A8h]']
test ['eax,', 'eax']
jz ['loc_17B9']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+0F8h],', '0']
jz ['short', 'loc_16DF']
mov ['eax,', '1']
jmp ['loc_17BB']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+0E8h],', '0']
jz ['short', 'loc_1701']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+0E8h],', '8']
jz ['short', 'loc_1701']
mov ['eax,', '1']
jmp ['loc_17BB']
cmp ['[ebp+arg_8],', '0']
jz ['loc_17B9']
mov ['[ebp+var_7C],', '0']
jmp ['short', 'loc_171D']
mov ['ecx,', '[ebp+var_7C]']
add ['ecx,', '1']
mov ['[ebp+var_7C],', 'ecx']
cmp ['[ebp+var_7C],', '4']
jge ['loc_17B9']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_7C]']
mov ['esi,', '[ebp+this]']
mov ['edx,', '[eax+edx*4+0D0h]']
sub ['edx,', '[esi+ecx*4+0C0h]']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+eax*4+58h]']
mov ['[ebp+var_80],', 'edx']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+edx*4],', '0']
jz ['short', 'loc_17B4']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+ecx*4]']
mov ['ecx,', '[ebp+var_80]']
xor ['edx,', 'edx']
mov ['esi,', '[ebp+var_7C]']
mov ['edi,', '[ebp+this]']
mov ['ebx,', '[edi+esi*8+68h]']
sub ['ebx,', 'ecx']
mov ['ecx,', '[edi+esi*8+6Ch]']
sbb ['ecx,', 'edx']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_A0],', 'ebx']
mov ['[ebp+var_9C],', 'ecx']
mov ['edx,', '[ebp+var_98]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_A0]']
jnz ['short', 'loc_17AD']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+var_9C]']
jz ['short', 'loc_17B4']
mov ['eax,', '1']
jmp ['short', 'loc_17BB']
jmp ['loc_1714']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN55_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0A0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
endp
?SetInStream2@CDecoder@NBcj2@NCompress@@UAGJIPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+this]']
lea ['ecx,', '[edx+ecx*4+90h]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?ReleaseInStream2@CDecoder@NBcj2@NCompress@@UAGJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+this]']
lea ['ecx,', '[ecx+eax*4+90h]']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?SetOutStreamSize@CDecoder@NBcj2@NCompress@@UAGJPB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
xor ['eax,', 'eax']
cmp ['[ebp+arg_4],', '0']
setnz ['al']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+99h],', 'al']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+0A0h],', '0']
mov ['dword', 'ptr', '[edx+0A4h],', '0']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+99h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_18E9']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[edx+0A0h],', 'ecx']
mov ['eax,', '[eax+4]']
mov ['[edx+0A4h],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+0A8h],', '0']
mov ['dword', 'ptr', '[ecx+0ACh],', '0']
push ['0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['?Alloc@CBaseCoder@NBcj2@NCompress@@IAEJ_N@Z']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '10h']
call ['?InitCommon@CDecoder@NBcj2@NCompress@@AAEXXZ']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+0D0h],', '0']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+0D4h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Read@CDecoder@NBcj2@NCompress@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1976']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_1983']
xor ['eax,', 'eax']
jmp ['loc_1D89']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9Dh]']
test ['edx,', 'edx']
jz ['short', 'loc_19DF']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+0A4h]']
sub ['edx,', '[ecx+0ACh]']
mov ['eax,', '[eax+0A8h]']
sbb ['eax,', '[ecx+0B0h]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
xor ['edx,', 'edx']
mov ['[ebp+var_40],', 'ecx']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+var_8]']
jb ['short', 'loc_19DF']
ja ['short', 'loc_19D9']
mov ['ecx,', '[ebp+var_40]']
cmp ['ecx,', '[ebp+var_C]']
jbe ['short', 'loc_19DF']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0D4h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[eax+0D8h],', 'edx']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0B4h']
push ['ecx']
call ['_Bcj2Dec_Decode@4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1A23']
mov ['eax,', '1']
jmp ['loc_1D89']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0D4h]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_18],', 'eax']
jz ['short', 'loc_1A80']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1A4B']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_18]']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_18]']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+var_18]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
add ['eax,', '[edx+0ACh]']
adc ['ecx,', '[edx+0B0h]']
mov ['edx,', '[ebp+this]']
mov ['[edx+0ACh],', 'eax']
mov ['[edx+0B0h],', 'ecx']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+0DCh],', '4']
jb ['short', 'loc_1A91']
jmp ['loc_1D04']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0DCh]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+edx*4+4Ch]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0DCh]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+eax*4+10h]']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_1AC9']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[ebp+var_1C]']
jnb ['short', 'loc_1AF4']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0DCh]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+eax*4+0B4h]']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_24]']
mov ['dl,', '[edx+ecx]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_1AC0']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0DCh]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+ecx*4+0B4h],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0DCh]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+edx*4+0C4h],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0DCh]']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+eax*4+7Ch],', '0']
jz ['short', 'loc_1B48']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0DCh]']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+eax*4+7Ch]']
jmp ['loc_1D89']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0DCh]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+eax*4+24h]']
sub ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0DCh]']
mov ['edx,', '[ebp+this]']
lea ['ecx,', '[edx+ecx*4+8Ch]']
call ['??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_44],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0DCh]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+eax*4+10h]']
add ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0DCh]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_34]']
mov ['[eax+edx*4+7Ch],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_1BCA']
jmp ['short', 'loc_1C2E']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0DCh]']
mov ['ecx,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['esi,', '[ebp+this]']
add ['ecx,', '[esi+eax*8+5Ch]']
adc ['edx,', '[esi+eax*8+60h]']
mov ['eax,', '[ebp+this]']
mov ['eax,', '[eax+0DCh]']
mov ['esi,', '[ebp+this]']
mov ['[esi+eax*8+5Ch],', 'ecx']
mov ['[esi+eax*8+60h],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_1C08']
jmp ['short', 'loc_1C2E']
cmp ['[ebp+var_1C],', '4']
jnb ['short', 'loc_1C2E']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+0DCh],', '1']
jz ['loc_1B48']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+0DCh],', '2']
jz ['loc_1B48']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_1C52']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1C4D']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0DCh]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+edx*4+7Ch]']
mov ['[ebp+var_10],', 'ecx']
jmp ['loc_1D04']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+0DCh],', '1']
jz ['short', 'loc_1C6A']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+0DCh],', '2']
jnz ['short', 'loc_1CD9']
mov ['ecx,', '[ebp+var_1C]']
and ['ecx,', '3']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0DCh]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_38]']
mov ['[ecx+eax*4+4Ch],', 'edx']
cmp ['[ebp+var_1C],', '4']
jnb ['short', 'loc_1CD0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1C99']
xor ['eax,', 'eax']
jmp ['loc_1D89']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0DCh]']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+ecx*4+7Ch],', '0']
jz ['short', 'loc_1CC1']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0DCh]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+ecx*4+7Ch]']
mov ['[ebp+var_48],', 'eax']
jmp ['short', 'loc_1CC8']
mov ['[ebp+var_48],', '1']
mov ['eax,', '[ebp+var_48]']
jmp ['loc_1D89']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0DCh]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+eax*4+10h]']
add ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0DCh]']
mov ['eax,', '[ebp+this]']
mov ['[eax+ecx*4+0C4h],', 'edx']
jmp ['loc_1A01']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9Ch]']
test ['edx,', 'edx']
jz ['short', 'loc_1D86']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9Dh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1D86']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['[ebp+var_4C],', 'edx']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[ecx+0A4h]']
cmp ['eax,', '[edx+0ACh]']
jnz ['short', 'loc_1D86']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[ecx+0A8h]']
cmp ['eax,', '[edx+0B0h]']
jnz ['short', 'loc_1D86']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+0ECh],', '0']
jz ['short', 'loc_1D67']
mov ['eax,', '1']
jmp ['short', 'loc_1D89']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+0DCh],', '0']
jz ['short', 'loc_1D86']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+0DCh],', '8']
jz ['short', 'loc_1D86']
mov ['eax,', '1']
jmp ['short', 'loc_1D89']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN38']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CEncoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_21FC']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_2287']
push ['offset', '_IID_ICompressCoder2']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2218']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_2287']
push ['offset', '_IID_ICompressSetCoderProperties']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_224C']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_223B']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_2242']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_2287']
push ['offset', '_IID_ICompressSetBufSize']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2280']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_226F']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2276']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_2287']
mov ['eax,', '80004002h']
jmp ['short', 'loc_2298']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+0Ch],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CEncoder@NBcj2@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CEncoder@NBcj2@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_230E']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+0Ch]']
jmp ['short', 'loc_2338']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_232F']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCEncoder@NBcj2@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_2336']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCEncoder@NBcj2@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CEncoder@NBcj2@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2372']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
??0ICompressCoder2@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder2@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetCoderProperties@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetCoderProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetBufSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetBufSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ']
endp
__ehhandler$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-388h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0CDecoder@NBcj2@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1CBaseCoder@NBcj2@NCompress@@QAE@XZ']
endp
__ehhandler$??0CDecoder@NBcj2@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CDecoder@NBcj2@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2A72']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_2BA2']
push ['offset', '_IID_ICompressCoder2']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2A91']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_2BA2']
push ['offset', '_IID_ICompressSetFinishMode']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2AC8']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2AB4']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_2ABB']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['loc_2BA2']
push ['offset', '_IID_ICompressSetInStream2']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2AFF']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2AEB']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2AF2']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['loc_2BA2']
push ['offset', '_IID_ISequentialInStream']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2B33']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2B22']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_2B29']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_2BA2']
push ['offset', '_IID_ICompressSetOutStreamSize']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2B67']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2B56']
mov ['edx,', '[ebp+this]']
add ['edx,', '10h']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_2B5D']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_2BA2']
push ['offset', '_IID_ICompressSetBufSize']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2B9B']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2B8A']
mov ['eax,', '[ebp+this]']
add ['eax,', '14h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_2B91']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_2BA2']
mov ['eax,', '80004002h']
jmp ['short', 'loc_2BB3']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+18h],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+18h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@NBcj2@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+18h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+18h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2C2A']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+18h]']
jmp ['short', 'loc_2C54']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2C4B']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCDecoder@NBcj2@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_2C52']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCDecoder@NBcj2@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDecoder@NBcj2@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2C8E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CDecoder@NBcj2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDecoder@NBcj2@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
push ['offset', '??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
push ['4']
push ['4']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '98h']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1CBaseCoder@NBcj2@NCompress@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CDecoder@NBcj2@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1CBaseCoder@NBcj2@NCompress@@QAE@XZ']
endp
__ehhandler$??1CDecoder@NBcj2@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDecoder@NBcj2@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0ICompressSetFinishMode@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetFinishMode@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetInStream2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetInStream2@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetOutStreamSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetOutStreamSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2F26']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2F73']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2FC8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_2FEB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_305A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_30A7']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEPAPAUICompressGetSubStreamSize@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CDecoder@NBcj2@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '10h']
jmp ['?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CEncoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CEncoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CDecoder@NBcj2@NCompress@@WBE@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '14h']
jmp ['?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NBcj2@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CDecoder@NBcj2@NCompress@@UAGKXZ']
endp
?Release@CDecoder@NBcj2@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CDecoder@NBcj2@NCompress@@UAGKXZ']
endp
?Release@CDecoder@NBcj2@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CDecoder@NBcj2@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NBcj2@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ']
endp
?Release@CEncoder@NBcj2@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CEncoder@NBcj2@NCompress@@UAGKXZ']
endp
?Release@CDecoder@NBcj2@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?Release@CDecoder@NBcj2@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NBcj2@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ']
endp
?Release@CEncoder@NBcj2@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CEncoder@NBcj2@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NBcj2@NCompress@@WBE@AGKXZ proc near
sub ['[esp+arg_0],', '14h']
jmp ['?Release@CDecoder@NBcj2@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NBcj2@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ']
endp
?AddRef@CEncoder@NBcj2@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CEncoder@NBcj2@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CDecoder@NBcj2@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ']
endp
?AddRef@CEncoder@NBcj2@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CEncoder@NBcj2@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NBcj2@NCompress@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CDecoder@NBcj2@NCompress@@WBE@AGKXZ proc near
sub ['[esp+arg_0],', '14h']
jmp ['?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ']
endp
?QueryInterface@CEncoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CEncoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp

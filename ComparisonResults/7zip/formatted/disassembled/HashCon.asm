?CheckBreak@CHashCallbackConsole@@UAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
call ['?CheckBreak2@@YGJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CheckBreak2@@YGJXZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
call ['?TestBreakSignal@NConsoleClose@@YG_NXZ']
movzx ['eax,', 'al']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '80004004h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
?StartScanning@CHashCallbackConsole@@UAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+131h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_184']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0B8h],', '0']
jz ['short', 'loc_184']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['eax,', 'ds:_kScanningMessage']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+0B8h]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?NeedPercents@CCallbackConsoleBase@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1B1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ClearCurState@CPercentPrinterState@@QAEXXZ']
push ['offset', '$SG74931']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??4AString@@QAEAAV0@PBD@Z']
call ['?CheckBreak2@@YGJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ScanProgress@CHashCallbackConsole@@UAEJABUCDirItemsStat@@ABVUString@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?NeedPercents@CCallbackConsoleBase@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_23A']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
add ['eax,', '[edx+8]']
mov ['ecx,', '[ecx+4]']
adc ['ecx,', '[edx+0Ch]']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+10h]']
adc ['ecx,', '[edx+14h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+18h],', 'eax']
mov ['[edx+1Ch],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetTotalBytes@CDirItemsStat@@QBE_KXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['[ecx+0Ch],', 'edx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Print@CPercentPrinter@@QAEXXZ']
call ['?CheckBreak2@@YGJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ScanError@CHashCallbackConsole@@UAEJABVUString@@K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?FinishScanning@CHashCallbackConsole@@UAEJABUCDirItemsStat@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?NeedPercents@CCallbackConsoleBase@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2D4']
push ['1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ClosePrint@CPercentPrinter@@QAEX_N@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ClearCurState@CPercentPrinterState@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+131h]']
test ['edx,', 'edx']
jz ['short', 'loc_336']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0B8h],', '0']
jz ['short', 'loc_336']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '124h']
push ['edx']
call ['?Print_DirItemsStat@@YGXAAVAString@@ABUCDirItemsStat@@@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '124h']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0B8h]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
call ['?CheckBreak2@@YGJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetNumFiles@CHashCallbackConsole@@UAEJ_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
call ['?CheckBreak2@@YGJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetTotal@CHashCallbackConsole@@UAEJ_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?NeedPercents@CCallbackConsoleBase@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3B6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Print@CPercentPrinter@@QAEXXZ']
call ['?CheckBreak2@@YGJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetCompleted@CHashCallbackConsole@@UAEJPB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_40E']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?NeedPercents@CCallbackConsoleBase@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_40E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[edx+4]']
mov ['[ecx+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Print@CPercentPrinter@@QAEXXZ']
call ['?CheckBreak2@@YGJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?PrintSeparatorLine@CHashCallbackConsole@@AAEXABV?$CObjectVector@UCHasherState@@@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '124h']
call ['?Empty@AString@@QAEXXZ']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_46A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_4B8']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_48B']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '124h']
call ['?Add_Space@AString@@QAEXXZ']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['?GetColumnWidth@@YGII@Z']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '124h']
push ['ecx']
call ['?AddMinuses@@YGXAAVAString@@I@Z']
jmp ['short', 'loc_461']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+132h]']
test ['eax,', 'eax']
jz ['short', 'loc_4E5']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '124h']
call ['?Add_Space@AString@@QAEXXZ']
push ['0Dh']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '124h']
push ['ecx']
call ['?AddMinuses@@YGXAAVAString@@I@Z']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+133h]']
test ['eax,', 'eax']
jz ['short', 'loc_50C']
mov ['ecx,', '[ebp+var_4]']
call ['?AddSpacesBeforeName@CHashCallbackConsole@@AAEXXZ']
push ['0Ch']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '124h']
push ['ecx']
call ['?AddMinuses@@YGXAAVAString@@I@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '124h']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+0B8h]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddMinuses@@YGXAAVAString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_569']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_57D']
push ['2Dh']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@D@Z']
jmp ['short', 'loc_560']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetColumnWidth@@YGII@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '8']
jnb ['short', 'loc_5C7']
mov ['[ebp+var_8],', '8']
jmp ['short', 'loc_5CD']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+131h]']
test ['ecx,', 'ecx']
jz ['loc_7BA']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx+0B8h],', '0']
jz ['loc_7BA']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '124h']
call ['?Empty@AString@@QAEXXZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_66F']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
call ['?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_6EA']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_693']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '124h']
call ['?Add_Space@AString@@QAEXXZ']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
call ['??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '4']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '124h']
call ['??YAString@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['?GetColumnWidth@@YGII@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '4']
call ['?Len@AString@@QBEIXZ']
sub ['esi,', 'eax']
push ['esi']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '124h']
push ['edx']
call ['?AddSpaces_if_Positive@@YGXAAVAString@@H@Z']
jmp ['loc_666']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+132h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_759']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '124h']
call ['?Add_Space@AString@@QAEXXZ']
push ['offset', '$SG75026']
lea ['ecx,', '[ebp+var_28]']
call ['??0AString@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['?Len@AString@@QBEIXZ']
mov ['edx,', '0Dh']
sub ['edx,', 'eax']
push ['edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '124h']
push ['eax']
call ['?AddSpaces_if_Positive@@YGXAAVAString@@H@Z']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '124h']
call ['??YAString@@QAEAAV0@ABV0@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1AString@@QAE@XZ']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+133h]']
test ['eax,', 'eax']
jz ['short', 'loc_782']
mov ['ecx,', '[ebp+var_10]']
call ['?AddSpacesBeforeName@CHashCallbackConsole@@AAEXXZ']
push ['offset', '$SG75030']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '124h']
call ['??YAString@@QAEAAV0@PBD@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '124h']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx+0B8h]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '4']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?PrintSeparatorLine@CHashCallbackConsole@@AAEXABV?$CObjectVector@UCHasherState@@@@@Z']
call ['?CheckBreak2@@YGJXZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['esi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddSpaces_if_Positive@@YGXAAVAString@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_829']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_4]']
jge ['short', 'loc_83B']
mov ['ecx,', '[ebp+arg_0]']
call ['?Add_Space@AString@@QAEXXZ']
jmp ['short', 'loc_820']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?OpenFileError@CHashCallbackConsole@@UAEJABVUString@@K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetStream@CHashCallbackConsole@@UAEJPB_W_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '118h']
call ['??4UString@@QAEAAV0@PB_W@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?NeedPercents@CCallbackConsoleBase@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8F7']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+130h]']
test ['eax,', 'eax']
jz ['short', 'loc_8EC']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['?Empty@UString@@QAEXXZ']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_8EC']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??4UString@@QAEAAV0@PB_W@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Print@CPercentPrinter@@QAEXXZ']
call ['?CheckBreak2@@YGJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?PrintResultLine@CHashCallbackConsole@@AAEX_KABV?$CObjectVector@UCHasherState@@@@I_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '11Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_11C]']
mov ['ecx,', '47h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '124h']
call ['?Empty@AString@@QAEXXZ']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_963']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['loc_A1D']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Str],', '0']
movzx ['edx,', '[ebp+arg_10]']
test ['edx,', 'edx']
jz ['short', 'loc_9B3']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
shl ['edx,', '6']
mov ['eax,', '[ebp+var_10]']
lea ['ecx,', '[eax+edx+14h]']
push ['ecx']
lea ['edx,', '[ebp+Str]']
push ['edx']
call ['?AddHashHexToString@@YGXPADPBEI@Z']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['?GetColumnWidth@@YGII@Z']
mov ['esi,', 'eax']
lea ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
sub ['esi,', 'eax']
push ['esi']
lea ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
lea ['ecx,', '[ebp+eax+Str]']
push ['ecx']
call ['?SetSpacesAndNul@@YGXPADI@Z']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_A03']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '124h']
call ['?Add_Space@AString@@QAEXXZ']
lea ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '124h']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['loc_95A']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+132h]']
test ['ecx,', 'ecx']
jz ['loc_B0B']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '124h']
call ['?Add_Space@AString@@QAEXXZ']
lea ['edx,', '[ebp+var_10C]']
mov ['[ebp+var_114],', 'edx']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['loc_AE8']
lea ['ecx,', '[ebp+var_FF]']
mov ['[ebp+var_114],', 'ecx']
mov ['edx,', '[ebp+var_114]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
call ['?ConvertUInt64ToString@@YGX_KPAD@Z']
mov ['edx,', '[ebp+var_114]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '0Dh']
sub ['ecx,', 'eax']
mov ['[ebp+var_118],', 'ecx']
cmp ['[ebp+var_118],', '0']
jle ['short', 'loc_AE6']
mov ['edx,', '[ebp+var_114]']
sub ['edx,', '[ebp+var_118]']
mov ['[ebp+var_114],', 'edx']
mov ['[ebp+var_11C],', '0']
jmp ['short', 'loc_AC7']
mov ['eax,', '[ebp+var_11C]']
add ['eax,', '1']
mov ['[ebp+var_11C],', 'eax']
mov ['ecx,', '[ebp+var_11C]']
cmp ['ecx,', '[ebp+var_118]']
jnb ['short', 'loc_AE6']
mov ['edx,', '[ebp+var_114]']
add ['edx,', '[ebp+var_11C]']
mov ['byte', 'ptr', '[edx],', '20h']
jmp ['short', 'loc_AB8']
jmp ['short', 'loc_AF6']
push ['0Dh']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?SetSpacesAndNul@@YGXPADI@Z']
mov ['ecx,', '[ebp+var_114]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '124h']
call ['??YAString@@QAEAAV0@PBD@Z']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+133h]']
test ['eax,', 'eax']
jz ['short', 'loc_B21']
mov ['ecx,', '[ebp+var_8]']
call ['?AddSpacesBeforeName@CHashCallbackConsole@@AAEXXZ']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '124h']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+0B8h]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '11Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?SetSpacesAndNul@@YGXPADI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_BB9']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_BCC']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx],', '20h']
jmp ['short', 'loc_BB0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetOperationResult@CHashCallbackConsole@@UAEJ_KABUCHashBundle@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0B8h],', '0']
jz ['loc_C82']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '4']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?PrintResultLine@CHashCallbackConsole@@AAEX_KABV?$CObjectVector@UCHasherState@@@@I_N@Z']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+133h]']
test ['eax,', 'eax']
jz ['short', 'loc_C6F']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '118h']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C52']
mov ['edx,', 'ds:_kEmptyFileAlias']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0B8h]']
call ['??6CStdOutStream@@QAEAAV0@PB_W@Z']
jmp ['short', 'loc_C6F']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '118h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+0B8h]']
call ['??6CStdOutStream@@QAEAAV0@PB_W@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+0B8h]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?NeedPercents@CCallbackConsoleBase@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_CB7']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '1']
mov ['eax,', '[ecx+1Ch]']
adc ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+18h],', 'edx']
mov ['[ecx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Print@CPercentPrinter@@QAEXXZ']
call ['?CheckBreak2@@YGJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?PrintHashStat@@YGXAAVCStdOutStream@@ABUCHashBundle@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_CF8']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '4']
call ['?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jnb ['loc_D9D']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '4']
call ['??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z']
mov ['[ebp+var_8],', 'eax']
push ['1']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[edx+18h],', '1']
jnz ['short', 'loc_D59']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jnz ['short', 'loc_D59']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[edx+10h]']
or ['ecx,', '[eax+14h]']
jz ['short', 'loc_D68']
push ['2']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[edx+20h]']
or ['ecx,', '[eax+24h]']
jz ['short', 'loc_D8B']
push ['3']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
jmp ['loc_CEF']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E0h']
push ['edi']
lea ['edi,', '[ebp+var_EC]']
mov ['ecx,', '38h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '4']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
lea ['ecx,', '[ebp+var_20]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '4']
call ['?Len@AString@@QBEIXZ']
mov ['ecx,', '6']
sub ['ecx,', 'eax']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
call ['?AddSpaces_if_Positive@@YGXAAVAString@@H@Z']
lea ['ecx,', '[ebp+var_20]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', 'ds:_k_DigestTitles[eax*4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['[ebp+Str],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
shl ['ecx,', '6']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[edx+ecx+14h]']
push ['eax']
lea ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?AddHashHexToString@@YGXPADPBEI@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
lea ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0ECh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_2C],', '3Ah']
mov ['[ebp+var_2B],', '20h']
lea ['eax,', '[ebp+var_2A]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
push ['edx']
call ['?ConvertUInt64ToString@@YGX_KPAD@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+0B8h]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AfterLastFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ClosePercents2@CCallbackConsoleBase@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+131h]']
test ['ecx,', 'ecx']
jz ['loc_1154']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0B8h],', '0']
jz ['loc_1154']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?PrintSeparatorLine@CHashCallbackConsole@@AAEXABV?$CObjectVector@UCHasherState@@@@@Z']
push ['1']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[edx+28h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?PrintResultLine@CHashCallbackConsole@@AAEX_KABV?$CObjectVector@UCHasherState@@@@I_N@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+0B8h]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '1']
jnz ['short', 'loc_108E']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0']
jnz ['short', 'loc_108E']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ecx+10h]']
or ['eax,', '[edx+14h]']
jz ['short', 'loc_10D2']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[edx+10h]']
or ['ecx,', '[eax+14h]']
jz ['short', 'loc_10BA']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[edx+10h]']
push ['ecx']
push ['offset', '$SG75127']
mov ['ecx,', '[ebp+var_4]']
call ['?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[edx+18h]']
push ['ecx']
push ['offset', '$SG75128']
mov ['ecx,', '[ebp+var_4]']
call ['?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[edx+28h]']
push ['ecx']
push ['offset', '$SG75129']
mov ['ecx,', '[ebp+var_4]']
call ['?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+20h]']
or ['edx,', '[ecx+24h]']
jz ['short', 'loc_112E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[eax+20h]']
push ['edx']
push ['offset', '$SG75131']
mov ['ecx,', '[ebp+var_4]']
call ['?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
push ['ecx']
mov ['edx,', '[eax+30h]']
push ['edx']
push ['offset', '$SG75132']
mov ['ecx,', '[ebp+var_4]']
call ['?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0B8h]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0B8h]']
push ['eax']
call ['?PrintHashStat@@YGXAAVCStdOutStream@@ABUCHashBundle@@@Z']
xor ['eax,', 'eax']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?TestBreakSignal@NConsoleClose@@YG_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', 'ds:?g_BreakCounter@NConsoleClose@@3IA,', '0']
setnz ['al']
pop ['ebp']
retn
endp
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['[ebp+arg_0]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??6CStdOutStream@@QAEAAV0@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?NeedPercents@CCallbackConsoleBase@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+0A4h],', '0']
setnz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetTotalBytes@CDirItemsStat@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+18h]']
add ['edx,', '[ecx+20h]']
mov ['esi,', '[eax+1Ch]']
adc ['esi,', '[ecx+24h]']
mov ['eax,', 'edx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@AString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AddSpacesBeforeName@CHashCallbackConsole@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '124h']
call ['?Add_Space@AString@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '124h']
call ['?Add_Space@AString@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YAString@@QAEAAV0@D@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_12F0']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@AString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z$0 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?NeedPercents@CCallbackConsoleBase@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1477']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+0B0h]']
cmp ['eax,', '[edx+0A4h]']
jnz ['short', 'loc_1477']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?ClosePrint@CPercentPrinter@@QAEX_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClosePercents2@CCallbackConsoleBase@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?NeedPercents@CCallbackConsoleBase@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_150F']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?ClosePrint@CPercentPrinter@@QAEX_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp

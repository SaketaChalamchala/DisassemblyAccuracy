?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_C5']
mov ['eax,', 'ds:_kFirstQuestionMessage']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_E2']
mov ['ecx,', 'ds:_kHelpQuestionMessage']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?Flush@CStdOutStream@@QAE_NXZ']
push ['0']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'offset', '?g_StdIn@@3VCStdInStream@@A']
call ['?ScanStringUntilNewLine@CStdInStream@@QAE?AVAString@@_N@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['?Trim@AString@@QAEXXZ']
lea ['ecx,', '[ebp+var_1C]']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['$LN9']
lea ['ecx,', '[ebp+var_1C]']
call ['??BAString@@QBEPBDXZ']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['?MyCharLower_Ascii@@YGDD@Z']
movsx ['edx,', 'al']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_3C]']
sub ['eax,', '61h']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '18h']
ja ['$LN9']
mov ['ecx,', '[ebp+var_3C]']
movzx ['edx,', 'ds:$LN17[ecx]']
jmp ['ds:$LN22[edx*4]']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_24]']
jmp ['loc_20B']
mov ['[ebp+var_28],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_28]']
jmp ['loc_20B']
mov ['[ebp+var_2C],', '2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_20B']
mov ['[ebp+var_30],', '3']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_20B']
mov ['[ebp+var_34],', '4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_34]']
jmp ['short', 'loc_20B']
mov ['[ebp+var_38],', '5']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_38]']
jmp ['short', 'loc_20B']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1AString@@QAE@XZ']
jmp ['loc_C5']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '2Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_38],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2F4']
push ['offset', '$SG68372']
mov ['ecx,', '[ebp+arg_4]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['?Flush@CStdOutStream@@QAE_NXZ']
mov ['esi,', 'esp']
push ['0FFFFFFF6h']
call ['dword', 'ptr', 'ds:__imp__GetStdHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+hConsoleHandle],', 'eax']
mov ['[ebp+var_11],', '0']
mov ['[ebp+Mode],', '0']
cmp ['[ebp+hConsoleHandle],', '0FFFFFFFFh']
jz ['short', 'loc_35D']
cmp ['[ebp+hConsoleHandle],', '0']
jz ['short', 'loc_35D']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Mode]']
push ['eax']
mov ['ecx,', '[ebp+hConsoleHandle]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetConsoleMode@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_35D']
mov ['edx,', '[ebp+Mode]']
and ['edx,', '0FFFFFFFBh']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+hConsoleHandle]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetConsoleMode@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['[ebp+var_11],', 'al']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', 'offset', '?g_StdIn@@3VCStdInStream@@A']
call ['?ScanUStringUntilNewLine@CStdInStream@@QAE?AVUString@@XZ']
mov ['[ebp+var_4],', '1']
movzx ['edx,', '[ebp+var_11]']
test ['edx,', 'edx']
jz ['short', 'loc_391']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Mode]']
push ['eax']
mov ['ecx,', '[ebp+hConsoleHandle]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetConsoleMode@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_3AC']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['?Flush@CStdOutStream@@QAE_NXZ']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_38]']
or ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-38h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z$0 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z$1 proc near
mov ['eax,', '[ebp-38h]']
and ['eax,', '1']
jz ['locret_46F']
and ['dword', 'ptr', '[ebp-38h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__ehhandler$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-38h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
?MyCharLower_Ascii@@YGDD@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
movsx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '41h']
jl ['short', 'loc_512']
movsx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '5Ah']
jg ['short', 'loc_512']
movzx ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
jmp ['short', 'loc_515']
mov ['al,', '[ebp+arg_0]']
pop ['ebp']
retn ['4']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@AString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Trim@AString@@QAEXXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?TrimRight@AString@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?TrimLeft@AString@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??6CStdOutStream@@QAEAAV0@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['[ebp+arg_0]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp

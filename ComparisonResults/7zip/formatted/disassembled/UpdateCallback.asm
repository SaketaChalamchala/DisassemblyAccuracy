??0CArchiveUpdateCallback@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CArchiveUpdateCallback@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IArchiveUpdateCallback2@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0IArchiveUpdateCallbackFile@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0IArchiveExtractCallbackMessage@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0IArchiveGetRawProps@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0IArchiveGetRootProps@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0ICryptoGetTextPassword2@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0ICryptoGetTextPassword@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0ICompressProgressInfo@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0IInFileStream_Callback@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CArchiveUpdateCallback@@6BIArchiveUpdateCallback2@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CArchiveUpdateCallback@@6BIArchiveUpdateCallbackFile@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CArchiveUpdateCallback@@6BIArchiveExtractCallbackMessage@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CArchiveUpdateCallback@@6BIArchiveGetRawProps@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CArchiveUpdateCallback@@6BIArchiveGetRootProps@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+14h],', 'offset', '??_7CArchiveUpdateCallback@@6BICryptoGetTextPassword2@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '??_7CArchiveUpdateCallback@@6BICryptoGetTextPassword@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+1Ch],', 'offset', '??_7CArchiveUpdateCallback@@6BICompressProgressInfo@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+20h],', 'offset', '??_7CArchiveUpdateCallback@@6BIInFileStream_Callback@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+38h],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '58h']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '64h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+7Ch],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+80h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+84h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+88h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8Ch']
call ['??0?$CMyComPtr@UIInArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+90h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+94h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+98h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+9Ch],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+9Dh],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+9Eh],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+9Fh],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0A0h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0A1h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+0A4h],', '0']
call ['?InitLocalPrivileges@@YG_NXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+28h],', 'al']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '8']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+7Ch]']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+7Ch]']
mov ['eax,', '[edx]']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_2DF']
endp
__catch$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z$0 proc near
mov ['dword', 'ptr', '[ebp-14h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7']
retn
endp
?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '8']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+7Ch]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+7Ch]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_39B']
endp
__catch$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z$0 proc near
mov ['dword', 'ptr', '[ebp-14h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7_0']
retn
endp
?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '8']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+60h]']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+60h]']
mov ['eax,', '[edx]']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_44F']
endp
__catch$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z$0 proc near
mov ['dword', 'ptr', '[ebp-14h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7_1']
retn
endp
?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '28h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+7Ch]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+7Ch]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4F1']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_5D3']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+94h]']
call ['??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_529']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
call ['?BoolToInt@@YGH_N@Z']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_547']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
push ['ecx']
call ['?BoolToInt@@YGH_N@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_5A9']
mov ['ecx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
call ['?ExistInArchive@CUpdatePair2@@QBE_NXZ']
mov ['[ebp+var_2D],', 'al']
movzx ['edx,', '[ebp+var_2D]']
test ['edx,', 'edx']
jz ['short', 'loc_5A9']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+90h],', '0']
jnz ['short', 'loc_580']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_34],', 'edx']
jmp ['short', 'loc_5A1']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+90h]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+var_34]']
mov ['[edx],', 'eax']
xor ['eax,', 'eax']
jmp ['short', 'loc_5D3']
endp
__catch$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z$0 proc near
mov ['dword', 'ptr', '[ebp-1Ch],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN14']
retn
endp
?GetRootProp@CArchiveUpdateCallback@@UAGJKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['ecx,', '[ebp+var_14]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '6']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '6']
ja ['$LN10']
mov ['edx,', '[ebp+var_20]']
jmp ['ds:$LN17[edx*4]']
push ['1']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
jmp ['short', '$LN10']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+74h],', '0']
jz ['short', 'loc_671']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+74h]']
mov ['eax,', '[edx+3Ch]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['short', '$LN10']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+74h],', '0']
jz ['short', 'loc_68E']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+74h]']
add ['eax,', '8']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z']
jmp ['short', '$LN10']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+74h],', '0']
jz ['short', 'loc_6AB']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+74h]']
add ['eax,', '10h']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z']
jmp ['short', '$LN10']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+74h],', '0']
jz ['short', '$LN10']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+74h]']
add ['eax,', '18h']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_14]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_1C],', '0']
lea ['ecx,', '[ebp+var_14]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetParent@CArchiveUpdateCallback@@UAGJIPAI0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
xor ['eax,', 'eax']
pop ['ebp']
retn ['10h']
endp
?GetNumRawProps@CArchiveUpdateCallback@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+93h]']
test ['edx,', 'edx']
jz ['short', 'loc_78F']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetRawPropInfo@CArchiveUpdateCallback@@UAGJIPAPA_WPAK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx],', '3Eh']
xor ['eax,', 'eax']
pop ['ebp']
retn ['10h']
endp
?GetRootRawProp@CArchiveUpdateCallback@@UAGJKPAPBXPAI1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8Fh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_801']
xor ['eax,', 'eax']
jmp ['loc_8D5']
cmp ['[ebp+arg_4],', '3Eh']
jnz ['loc_8D3']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+8Dh]']
test ['eax,', 'eax']
jz ['short', 'loc_820']
xor ['eax,', 'eax']
jmp ['loc_8D5']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+74h],', '0']
jz ['short', 'loc_87E']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+74h]']
cmp ['dword', 'ptr', '[eax+48h],', '0']
jge ['short', 'loc_83C']
xor ['eax,', 'eax']
jmp ['loc_8D5']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+74h]']
mov ['eax,', '[edx+48h]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+70h]']
add ['ecx,', '68h']
call ['??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[edx],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_8D5']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+78h],', '0']
jz ['short', 'loc_8D3']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+78h]']
add ['ecx,', '0Ch']
call ['??B?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_8D3']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+78h]']
add ['ecx,', '0Ch']
call ['??C?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_8D5']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?GetRawProp@CArchiveUpdateCallback@@UAGJIKPAPBXPAI1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[edx],', '0']
cmp ['[ebp+arg_8],', '3Eh']
jz ['short', 'loc_938']
cmp ['[ebp+arg_8],', '59h']
jnz ['loc_B13']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+91h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_94D']
xor ['eax,', 'eax']
jmp ['loc_B15']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+88h]']
call ['??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
test ['edx,', 'edx']
jz ['loc_A09']
mov ['ecx,', '[ebp+var_4]']
call ['?ExistInArchive@CUpdatePair2@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_A09']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+7Ch]']
add ['ecx,', '8']
call ['??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_A09']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+84h],', '0']
jz ['short', 'loc_9BF']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+84h]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
mov ['eax,', '[eax+24h]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_9C8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+7Ch]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_B15']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+88h]']
call ['??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
test ['ecx,', 'ecx']
jz ['short', 'loc_A30']
xor ['eax,', 'eax']
jmp ['loc_B15']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+74h]']
add ['ecx,', '24h']
call ['??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+arg_8],', '3Eh']
jnz ['short', 'loc_AB0']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+93h]']
test ['eax,', 'eax']
jnz ['short', 'loc_A63']
xor ['eax,', 'eax']
jmp ['loc_B15']
mov ['ecx,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[ecx+48h],', '0']
jge ['short', 'loc_A73']
xor ['eax,', 'eax']
jmp ['loc_B15']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+48h]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+74h]']
add ['ecx,', '68h']
call ['??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[edx],', '1']
jmp ['short', 'loc_B0F']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+95h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_AC2']
xor ['eax,', 'eax']
jmp ['short', 'loc_B15']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '34h']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+var_14]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_AE0']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '2Ch']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_B0F']
mov ['ecx,', '[ebp+var_14]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_B15']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '158h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_168]']
mov ['ecx,', '56h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+94h]']
call ['??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z']
mov ['[ebp+var_E4],', 'eax']
mov ['edx,', '[ebp+var_E4]']
mov ['[ebp+var_14],', 'edx']
lea ['ecx,', '[ebp+var_28]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_E8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_F0D']
cmp ['[ebp+arg_8],', '36h']
jnz ['loc_DF0']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+38h]']
jnz ['short', 'loc_BF7']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_A4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_A4]']
jmp ['loc_12B2']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jl ['loc_DEB']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+80h]']
add ['ecx,', '24h']
call ['??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z']
mov ['[ebp+var_EC],', 'eax']
mov ['eax,', '[ebp+var_EC]']
mov ['[ebp+var_30],', 'eax']
lea ['ecx,', '[ebp+var_54]']
call ['??0CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_F0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '2Ch']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['[ebp+var_F4],', 'eax']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '2Ch']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['[ebp+var_F8],', 'eax']
mov ['ecx,', '[ebp+var_F4]']
push ['ecx']
mov ['edx,', '[ebp+var_F8]']
push ['edx']
lea ['ecx,', '[ebp+var_54]']
call ['?Parse@CReparseAttr@NFile@NWindows@@QAE_NPBEI@Z']
mov ['[ebp+var_F9],', 'al']
movzx ['eax,', '[ebp+var_F9]']
test ['eax,', 'eax']
jz ['loc_DDF']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
lea ['ecx,', '[ebp+var_54]']
call ['?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ']
mov ['[ebp+var_100],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_54]']
call ['?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ']
mov ['[ebp+var_101],', 'al']
movzx ['edx,', '[ebp+var_101]']
test ['edx,', 'edx']
jz ['short', 'loc_CCA']
lea ['eax,', '[ebp+var_68]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
jmp ['loc_D9A']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+80h]']
call ['?GetPhyPath@CDirItems@@QBE?AVUString@@I@Z']
mov ['[ebp+var_108],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_90]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_10C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_7C]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_110],', 'eax']
lea ['edx,', '[ebp+var_90]']
push ['edx']
mov ['eax,', '[ebp+var_110]']
push ['eax']
call ['?MyGetFullPathName@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z']
mov ['[ebp+var_111],', 'al']
movzx ['ecx,', '[ebp+var_111]']
test ['ecx,', 'ecx']
jz ['short', 'loc_D7F']
lea ['edx,', '[ebp+var_90]']
push ['edx']
lea ['eax,', '[ebp+var_68]']
push ['eax']
lea ['ecx,', '[ebp+var_B0]']
push ['ecx']
call ['?GetRelativePath@@YG?AVUString@@ABV1@0@Z']
mov ['[ebp+var_118],', 'eax']
mov ['edx,', '[ebp+var_118]']
mov ['[ebp+var_11C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_11C]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_B0]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_90]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_7C]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_B4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_68]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_54]']
call ['??1CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_B4]']
jmp ['loc_12B2']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_54]']
call ['??1CReparseAttr@NFile@NWindows@@QAE@XZ']
jmp ['loc_F0D']
cmp ['[ebp+arg_8],', '5Ah']
jnz ['loc_F0D']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+38h]']
jnz ['loc_ED7']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+3Ch]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '2Ch']
call ['??A?$CRecordVector@UCKeyKeyValPair@@@@QAEAAUCKeyKeyValPair@@I@Z']
mov ['[ebp+var_120],', 'eax']
mov ['eax,', '[ebp+var_120]']
mov ['[ebp+var_98],', 'eax']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+94h]']
call ['??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+var_124]']
mov ['[ebp+var_9C],', 'ecx']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+80h]']
call ['?GetLogPath@CDirItems@@QBE?AVUString@@I@Z']
mov ['[ebp+var_128],', 'eax']
mov ['eax,', '[ebp+var_128]']
mov ['[ebp+var_12C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_12C]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_C0]']
call ['??1UString@@QAE@XZ']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_C4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_C4]']
jmp ['loc_12B2']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jl ['short', 'loc_F0D']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_C8],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_C8]']
jmp ['loc_12B2']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
test ['eax,', 'eax']
jz ['short', 'loc_F64']
cmp ['[ebp+arg_8],', '6']
jz ['short', 'loc_F64']
cmp ['[ebp+arg_8],', '3']
jz ['short', 'loc_F64']
cmp ['[ebp+arg_8],', '3Fh']
jz ['short', 'loc_F64']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_130],', 'ecx']
cmp ['[ebp+var_130],', '7']
jz ['short', 'loc_F47']
cmp ['[ebp+var_130],', '15h']
jz ['short', 'loc_F55']
jmp ['short', 'loc_F5F']
push ['0']
push ['0']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['short', 'loc_F5F']
push ['1']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
jmp ['$LN20']
cmp ['[ebp+arg_8],', '3']
jnz ['short', 'loc_FA2']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jl ['short', 'loc_FA2']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+98h]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['[ebp+var_134],', 'eax']
mov ['eax,', '[ebp+var_134]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
jmp ['$LN20']
cmp ['[ebp+arg_8],', '32h']
jnz ['short', 'loc_FC1']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jl ['short', 'loc_FC1']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+10h]']
test ['eax,', 'eax']
jz ['short', 'loc_FC1']
jmp ['$LN20']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
test ['edx,', 'edx']
jnz ['short', 'loc_FEE']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9Eh]']
test ['ecx,', 'ecx']
jz ['loc_10EA']
cmp ['[ebp+arg_8],', '3']
jz ['short', 'loc_FEE']
cmp ['[ebp+arg_8],', '3Fh']
jnz ['loc_10EA']
mov ['ecx,', '[ebp+var_14]']
call ['?ExistInArchive@CUpdatePair2@@QBE_NXZ']
mov ['[ebp+var_135],', 'al']
movzx ['edx,', '[ebp+var_135]']
test ['edx,', 'edx']
jz ['loc_10EA']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8Ch']
call ['??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ']
mov ['[ebp+var_13C],', 'eax']
cmp ['[ebp+var_13C],', '0']
jz ['loc_10EA']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+90h],', '0']
jz ['short', 'loc_1064']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+90h]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
mov ['[ebp+var_140],', 'eax']
mov ['ecx,', '[ebp+var_140]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_144],', 'edx']
jmp ['short', 'loc_1070']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_144],', 'ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8Ch']
call ['??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ']
mov ['[ebp+var_148],', 'eax']
mov ['edx,', '[ebp+var_148]']
mov ['[ebp+var_14C],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_144]']
push ['edx']
mov ['eax,', '[ebp+var_14C]']
push ['eax']
mov ['ecx,', '[ebp+var_14C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_150],', 'eax']
mov ['ecx,', '[ebp+var_150]']
mov ['[ebp+var_CC],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_CC]']
jmp ['loc_12B2']
jmp ['$LN20']
mov ['ecx,', '[ebp+var_14]']
call ['?ExistOnDisk@CUpdatePair2@@QBE_NXZ']
mov ['[ebp+var_151],', 'al']
movzx ['edx,', '[ebp+var_151]']
test ['edx,', 'edx']
jz ['$LN20']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+80h]']
add ['ecx,', '24h']
call ['??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z']
mov ['[ebp+var_158],', 'eax']
mov ['eax,', '[ebp+var_158]']
mov ['[ebp+var_A0],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_15C],', 'ecx']
mov ['edx,', '[ebp+var_15C]']
sub ['edx,', '3']
mov ['[ebp+var_15C],', 'edx']
cmp ['[ebp+var_15C],', '3Ch']
ja ['$LN20']
mov ['eax,', '[ebp+var_15C]']
movzx ['ecx,', 'ds:$LN56[eax]']
jmp ['ds:$LN65[ecx*4]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_D8]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+80h]']
call ['?GetLogPath@CDirItems@@QBE?AVUString@@I@Z']
mov ['[ebp+var_160],', 'eax']
mov ['eax,', '[ebp+var_160]']
mov ['[ebp+var_164],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_164]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_D8]']
call ['??1UString@@QAE@XZ']
jmp ['$LN20']
mov ['ecx,', '[ebp+var_A0]']
call ['?IsDir@CDirItem@@QBE_NXZ']
mov ['[ebp+var_165],', 'al']
movzx ['edx,', '[ebp+var_165]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
jmp ['short', '$LN20']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[eax]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['short', '$LN20']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+3Ch]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['short', '$LN20']
mov ['edx,', '[ebp+var_A0]']
add ['edx,', '8']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z']
jmp ['short', '$LN20']
mov ['eax,', '[ebp+var_A0]']
add ['eax,', '10h']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z']
jmp ['short', '$LN20']
mov ['ecx,', '[ebp+var_A0]']
add ['ecx,', '18h']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z']
jmp ['short', '$LN20']
mov ['edx,', '[ebp+var_A0]']
movzx ['eax,', 'byte', 'ptr', '[edx+4Ch]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_DC],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_DC]']
jmp ['short', 'loc_12B2']
endp
__catch$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-0E0h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN54']
retn
endp
?GetRelativePath@@YG?AVUString@@ABV1@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetRelativePath@@YG?AVUString@@ABV1@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '48h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_54],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_30]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?SplitPathToParts@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?SplitPathToParts@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_1440']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['esi,', '[ebp+var_38]']
add ['esi,', '1']
lea ['ecx,', '[ebp+var_30]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['esi,', 'eax']
jnb ['short', 'loc_1464']
mov ['esi,', '[ebp+var_38]']
add ['esi,', '1']
lea ['ecx,', '[ebp+var_1C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['esi,', 'eax']
jb ['short', 'loc_1466']
jmp ['short', 'loc_149B']
mov ['edx,', '[ebp+var_38]']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
test ['eax,', 'eax']
jz ['short', 'loc_1499']
jmp ['short', 'loc_149B']
jmp ['short', 'loc_1437']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_1500']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_14CB']
mov ['ecx,', '[ebp+arg_8]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1500']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_54]']
or ['ecx,', '1']
mov ['[ebp+var_54],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_15BD']
lea ['ecx,', '[ebp+var_48]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_1520']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
lea ['ecx,', '[ebp+var_30]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_50],', 'eax']
jnb ['short', 'loc_153C']
push ['offset', '$SG76007']
lea ['ecx,', '[ebp+var_48]']
call ['??YUString@@QAEAAV0@PB_W@Z']
jmp ['short', 'loc_1517']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_154D']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '1']
mov ['[ebp+var_50],', 'edx']
lea ['ecx,', '[ebp+var_1C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_50],', 'eax']
jnb ['short', 'loc_1581']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_38]']
jz ['short', 'loc_156A']
lea ['ecx,', '[ebp+var_48]']
call ['?Add_PathSepar@UString@@QAEXXZ']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
jmp ['short', 'loc_1544']
lea ['edx,', '[ebp+var_48]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_54]']
or ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '54h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '1CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1DC]']
mov ['ecx,', '73h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_14],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+90h]']
call ['??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z']
mov ['[ebp+var_144],', 'eax']
mov ['eax,', '[ebp+var_144]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_16B5']
mov ['eax,', '80004005h']
jmp ['loc_1E88']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+78h]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+78h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_148],', 'eax']
mov ['ecx,', '[ebp+var_148]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_16EE']
mov ['eax,', '[ebp+var_1C]']
jmp ['loc_1E88']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '4']
call ['?IsDir@CArchiveUpdateCallback@@QBE_NABUCUpdatePair2@@@Z']
mov ['[ebp+var_149],', 'al']
mov ['al,', '[ebp+var_149]']
mov ['[ebp+var_1D],', 'al']
mov ['ecx,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
test ['edx,', 'edx']
jz ['loc_1907']
lea ['ecx,', '[ebp+var_30]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_150],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jl ['short', 'loc_1765']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8Ch]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
mov ['[ebp+var_154],', 'eax']
mov ['ecx,', '[ebp+var_154]']
add ['ecx,', '10h']
push ['ecx']
lea ['ecx,', '[ebp+var_30]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
jmp ['short', 'loc_17BB']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jl ['short', 'loc_17BB']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['edx,', '[ebp+var_108]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+7Ch]']
call ['?GetLogPath@CDirItems@@QBE?AVUString@@I@Z']
mov ['[ebp+var_158],', 'eax']
mov ['ecx,', '[ebp+var_158]']
mov ['[ebp+var_15C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edx,', '[ebp+var_15C]']
push ['edx']
lea ['ecx,', '[ebp+var_30]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_108]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_30]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_160],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
movzx ['ecx,', '[ebp+var_1D]']
push ['ecx']
mov ['edx,', '[ebp+var_160]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+78h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+78h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_164],', 'eax']
mov ['ecx,', '[ebp+var_164]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_182C']
mov ['edx,', '[ebp+var_38]']
mov ['[ebp+var_10C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_10C]']
jmp ['loc_1E88']
movzx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jnz ['loc_18E6']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_168],', 'eax']
mov ['ecx,', '[ebp+var_168]']
mov ['[ebp+var_114],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_114],', '0']
jz ['short', 'loc_1880']
mov ['ecx,', '[ebp+var_114]']
call ['??0CBufInStream@@QAE@XZ']
mov ['[ebp+var_16C],', 'eax']
mov ['edx,', '[ebp+var_16C]']
mov ['[ebp+var_170],', 'edx']
jmp ['short', 'loc_188A']
mov ['[ebp+var_170],', '0']
mov ['eax,', '[ebp+var_170]']
mov ['[ebp+var_110],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
lea ['ecx,', '[ebp+var_44]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_3C]']
call ['?Init@CBufInStream@@QAEXPBEIPAUIUnknown@@@Z']
lea ['ecx,', '[ebp+var_44]']
call ['?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ']
mov ['[ebp+var_174],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_174]']
mov ['[eax],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_118],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_118]']
jmp ['loc_1E88']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_124]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+7Ch]']
call ['?GetLogPath@CDirItems@@QBE?AVUString@@I@Z']
mov ['[ebp+var_178],', 'eax']
mov ['eax,', '[ebp+var_178]']
mov ['[ebp+var_17C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_17C]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_180],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['0']
movzx ['edx,', '[ebp+var_1D]']
push ['edx']
mov ['eax,', '[ebp+var_180]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+78h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+78h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_184],', 'eax']
mov ['ecx,', '[ebp+var_184]']
mov ['[ebp+var_4C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_124]']
call ['??1UString@@QAE@XZ']
cmp ['[ebp+var_4C],', '0']
jz ['short', 'loc_19A1']
mov ['eax,', '[ebp+var_4C]']
jmp ['loc_1E88']
movzx ['edx,', '[ebp+var_1D]']
test ['edx,', 'edx']
jz ['short', 'loc_19B0']
xor ['eax,', 'eax']
jmp ['loc_1E88']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+99h]']
test ['ecx,', 'ecx']
jz ['loc_1A7A']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_19D5']
cmp ['[ebp+arg_C],', '1']
jz ['short', 'loc_19D5']
xor ['eax,', 'eax']
jmp ['loc_1E88']
push ['8']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_188],', 'eax']
mov ['edx,', '[ebp+var_188]']
mov ['[ebp+var_12C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
cmp ['[ebp+var_12C],', '0']
jz ['short', 'loc_1A1D']
mov ['ecx,', '[ebp+var_12C]']
call ['??0CStdInFileStream@@QAE@XZ']
mov ['[ebp+var_18C],', 'eax']
mov ['eax,', '[ebp+var_18C]']
mov ['[ebp+var_190],', 'eax']
jmp ['short', 'loc_1A27']
mov ['[ebp+var_190],', '0']
mov ['ecx,', '[ebp+var_190]']
mov ['[ebp+var_128],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_128]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_50]']
push ['eax']
lea ['ecx,', '[ebp+var_58]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_58]']
call ['?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ']
mov ['[ebp+var_194],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_194]']
mov ['[ecx],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
jmp ['loc_1E58']
push ['58h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_198],', 'eax']
mov ['eax,', '[ebp+var_198]']
mov ['[ebp+var_134],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
cmp ['[ebp+var_134],', '0']
jz ['short', 'loc_1AC2']
mov ['ecx,', '[ebp+var_134]']
call ['??0CInFileStream@@QAE@XZ']
mov ['[ebp+var_19C],', 'eax']
mov ['ecx,', '[ebp+var_19C]']
mov ['[ebp+var_1A0],', 'ecx']
jmp ['short', 'loc_1ACC']
mov ['[ebp+var_1A0],', '0']
mov ['edx,', '[ebp+var_1A0]']
mov ['[ebp+var_130],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_130]']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
lea ['ecx,', '[ebp+var_68]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['edx,', '[ebp+var_60]']
mov ['eax,', '[ebp+this]']
mov ['cl,', '[eax+9Ch]']
mov ['[edx+48h],', 'cl']
mov ['edx,', '[ebp+this]']
sub ['edx,', '4']
jz ['short', 'loc_1B1A']
mov ['eax,', '[ebp+this]']
add ['eax,', '1Ch']
mov ['[ebp+var_1A4],', 'eax']
jmp ['short', 'loc_1B24']
mov ['[ebp+var_1A4],', '0']
mov ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ebp+var_1A4]']
mov ['[ecx+4Ch],', 'edx']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+50h],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+7Ch]']
call ['?GetPhyPath@CDirItems@@QBE?AVUString@@I@Z']
mov ['[ebp+var_1A8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '3Ch']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '48h']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+7Ch]']
add ['ecx,', '24h']
call ['??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z']
mov ['[ebp+var_1AC],', 'eax']
mov ['ecx,', '[ebp+var_1AC]']
call ['?AreReparseData@CDirItem@@QBE_NXZ']
mov ['[ebp+var_1AD],', 'al']
movzx ['edx,', '[ebp+var_1AD]']
test ['edx,', 'edx']
jz ['loc_1C4D']
lea ['ecx,', '[ebp+var_7C]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_1B4],', 'eax']
mov ['eax,', '[ebp+var_1B4]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '18h']
call ['?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z']
mov ['[ebp+var_1B5],', 'al']
movzx ['ecx,', '[ebp+var_1B5]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1C48']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
lea ['edx,', '[ebp+var_7C]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+78h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+78h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1BC],', 'eax']
mov ['ecx,', '[ebp+var_1BC]']
mov ['[ebp+var_138],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_7C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_138]']
jmp ['loc_1E88']
jmp ['loc_1CEB']
lea ['ecx,', '[ebp+var_7C]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_1C0],', 'eax']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+98h]']
push ['eax']
mov ['ecx,', '[ebp+var_1C0]']
push ['ecx']
mov ['ecx,', '[ebp+var_60]']
call ['?OpenShared@CInFileStream@@QAE_NPB_W_N@Z']
mov ['[ebp+var_1C1],', 'al']
movzx ['edx,', '[ebp+var_1C1]']
test ['edx,', 'edx']
jnz ['short', 'loc_1CEB']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
lea ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+78h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+78h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C8],', 'eax']
mov ['ecx,', '[ebp+var_1C8]']
mov ['[ebp+var_13C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_7C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_13C]']
jmp ['loc_1E88']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+9Ch]']
test ['eax,', 'eax']
jz ['loc_1DED']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '0Ch']
push ['edx']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1CC],', 'eax']
cmp ['[ebp+var_1CC],', '0']
jnz ['loc_1DED']
cmp ['[ebp+var_A4],', '1']
jbe ['loc_1DED']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_E4],', 'eax']
mov ['ecx,', '[ebp+var_B8]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_B4]']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_D8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_D4],', 'ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['?Size@?$CRecordVector@UCKeyKeyValPair@@@@QBEIXZ']
mov ['[ebp+var_1D0],', 'eax']
mov ['edx,', '[ebp+var_1D0]']
mov ['[ebp+var_EC],', 'edx']
lea ['eax,', '[ebp+var_E4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['?AddToUniqueSorted2@?$CRecordVector@UCKeyKeyValPair@@@@QAEIABUCKeyKeyValPair@@@Z']
mov ['[ebp+var_1D4],', 'eax']
mov ['ecx,', '[ebp+var_1D4]']
mov ['[ebp+var_F0],', 'ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['?Size@?$CRecordVector@UCKeyKeyValPair@@@@QBEIXZ']
mov ['[ebp+var_1D8],', 'eax']
mov ['edx,', '[ebp+var_EC]']
cmp ['edx,', '[ebp+var_1D8]']
jnz ['short', 'loc_1DED']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_F0]']
mov ['[edx+38h],', 'eax']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+0A0h],', '0']
jz ['short', 'loc_1E27']
push ['offset', '_CS']
lea ['ecx,', '[ebp+var_F8]']
call ['??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0A0h]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
mov ['byte', 'ptr', '[eax+edx],', '1']
lea ['ecx,', '[ebp+var_F8]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
lea ['ecx,', '[ebp+var_68]']
call ['?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ']
mov ['[ebp+var_1DC],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_1DC]']
mov ['[eax],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_7C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
xor ['eax,', 'eax']
jmp ['short', 'loc_1E88']
endp
__catch$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$0 proc near
mov ['dword', 'ptr', '[ebp-140h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN48']
retn
endp
?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '8']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+7Ch]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+7Ch]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_1FFB']
endp
__catch$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z$0 proc near
mov ['dword', 'ptr', '[ebp-14h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7_3']
retn
endp
?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '0Ch']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_1C],', '0CCCCCCCCh']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+94h]']
call ['??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_18]']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', '[edx+8],', '0']
setnl ['al']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
jmp ['short', 'loc_20D7']
endp
__catch$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-14h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7_4']
retn
endp
?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_14],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_19],', '0']
cmp ['[ebp+arg_4],', '3']
jnz ['loc_22C5']
lea ['ecx,', '[ebp+var_30]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_A8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jz ['loc_2231']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+90h]']
call ['??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z']
mov ['[ebp+var_AC],', 'eax']
mov ['edx,', '[ebp+var_AC]']
mov ['[ebp+var_38],', 'edx']
mov ['ecx,', '[ebp+var_38]']
call ['?ExistOnDisk@CUpdatePair2@@QBE_NXZ']
mov ['[ebp+var_AD],', 'al']
movzx ['eax,', '[ebp+var_AD]']
test ['eax,', 'eax']
jz ['loc_2231']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['eax,', '[ebp+var_90]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+7Ch]']
call ['?GetLogPath@CDirItems@@QBE?AVUString@@I@Z']
mov ['[ebp+var_B4],', 'eax']
mov ['edx,', '[ebp+var_B4]']
mov ['[ebp+var_B8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_B8]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_90]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+7Ch]']
add ['ecx,', '24h']
call ['??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z']
mov ['[ebp+var_BC],', 'eax']
mov ['ecx,', '[ebp+var_BC]']
call ['?IsDir@CDirItem@@QBE_NXZ']
mov ['[ebp+var_BD],', 'al']
mov ['cl,', '[ebp+var_BD]']
mov ['[ebp+var_19],', 'cl']
lea ['ecx,', '[ebp+var_30]']
call ['?IsEmpty@UString@@QBE_NXZ']
mov ['[ebp+var_BE],', 'al']
movzx ['edx,', '[ebp+var_BE]']
test ['edx,', 'edx']
jz ['short', 'loc_2256']
mov ['[ebp+var_C4],', '0']
jmp ['short', 'loc_2270']
lea ['ecx,', '[ebp+var_30]']
call ['?Ptr@UString@@QBEPB_WXZ']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_C8]']
mov ['[ebp+var_C4],', 'eax']
mov ['esi,', 'esp']
movzx ['ecx,', '[ebp+var_19]']
push ['ecx']
mov ['edx,', '[ebp+var_C4]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+78h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+78h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_CC],', 'eax']
mov ['ecx,', '[ebp+var_CC]']
mov ['[ebp+var_94],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_94]']
jmp ['loc_24BF']
lea ['ecx,', '[ebp+var_70]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_D0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['[ebp+var_78],', '0']
cmp ['[ebp+arg_4],', '1']
jnz ['loc_2415']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jz ['loc_2413']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+8Ch],', '0']
jz ['short', 'loc_2347']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+8Ch]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
mov ['[ebp+var_D4],', 'eax']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_7C],', 'edx']
mov ['ecx,', '[ebp+var_7C]']
add ['ecx,', '10h']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+var_D8]']
mov ['[ebp+var_78],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
mov ['dl,', '[ecx+1Ch]']
mov ['[ebp+var_19],', 'dl']
jmp ['loc_2413']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+84h],', '0']
jz ['loc_2413']
lea ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+84h]']
call ['?GetItemPath@CArc@@QBEJIAAVUString@@@Z']
mov ['[ebp+var_DC],', 'eax']
mov ['ecx,', '[ebp+var_DC]']
mov ['[ebp+var_80],', 'ecx']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_23A2']
mov ['edx,', '[ebp+var_80]']
mov ['[ebp+var_98],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_98]']
jmp ['loc_24BF']
lea ['ecx,', '[ebp+var_70]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '[ebp+var_E0]']
mov ['[ebp+var_78],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+84h]']
call ['??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ']
mov ['[ebp+var_E4],', 'eax']
lea ['edx,', '[ebp+var_19]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
call ['?Archive_IsItem_Dir@@YGJPAUIInArchive@@IAA_N@Z']
mov ['[ebp+var_84],', 'eax']
cmp ['[ebp+var_84],', '0']
jz ['short', 'loc_2413']
mov ['edx,', '[ebp+var_84]']
mov ['[ebp+var_9C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_9C]']
jmp ['loc_24BF']
jmp ['short', 'loc_2437']
cmp ['[ebp+arg_4],', '2']
jnz ['short', 'loc_2437']
mov ['eax,', '23h']
mov ['[ebp+var_5C],', 'ax']
lea ['ecx,', '[ebp+var_5A]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['?ConvertUInt32ToString@@YGXIPA_W@Z']
lea ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_78],', 'eax']
cmp ['[ebp+var_78],', '0']
jnz ['short', 'loc_2444']
mov ['[ebp+var_78],', 'offset', '$SG76267']
mov ['esi,', 'esp']
movzx ['ecx,', '[ebp+var_19]']
push ['ecx']
mov ['edx,', '[ebp+var_78]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+78h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+78h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
mov ['[ebp+var_A0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_A0]']
jmp ['short', 'loc_24BF']
endp
__catch$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$0 proc near
mov ['dword', 'ptr', '[ebp-0A4h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN25_0']
retn
endp
?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '90h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_A0]']
mov ['ecx,', '24h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_14],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_19],', '0']
lea ['ecx,', '[ebp+var_58]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_80],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_60],', '0']
cmp ['[ebp+arg_4],', '3']
jnz ['short', 'loc_25D2']
mov ['[ebp+var_6C],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_58]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_6C]']
jmp ['loc_27A0']
cmp ['[ebp+arg_4],', '1']
jnz ['loc_26FD']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jz ['loc_26FB']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+88h],', '0']
jz ['short', 'loc_2629']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+88h]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
mov ['[ebp+var_84],', 'eax']
mov ['ecx,', '[ebp+var_84]']
add ['ecx,', '10h']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_88],', 'eax']
mov ['eax,', '[ebp+var_88]']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_2691']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+80h],', '0']
jz ['short', 'loc_2691']
lea ['edx,', '[ebp+var_58]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+80h]']
call ['?GetItemPath@CArc@@QBEJIAAVUString@@@Z']
mov ['[ebp+var_8C],', 'eax']
mov ['edx,', '[ebp+var_8C]']
mov ['[ebp+var_64],', 'edx']
cmp ['[ebp+var_64],', '0']
jz ['short', 'loc_267A']
mov ['eax,', '[ebp+var_64]']
mov ['[ebp+var_70],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_58]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_70]']
jmp ['loc_27A0']
lea ['ecx,', '[ebp+var_58]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_90],', 'eax']
mov ['ecx,', '[ebp+var_90]']
mov ['[ebp+var_60],', 'ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '84h']
call ['??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ']
mov ['[ebp+var_94],', 'eax']
cmp ['[ebp+var_94],', '0']
jz ['short', 'loc_26FB']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '84h']
call ['??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ']
mov ['[ebp+var_98],', 'eax']
lea ['edx,', '[ebp+var_19]']
push ['edx']
push ['0Fh']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_98]']
push ['ecx']
call ['?Archive_GetItemBoolProp@@YGJPAUIInArchive@@IKAA_N@Z']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_26FB']
mov ['edx,', '[ebp+var_68]']
mov ['[ebp+var_74],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_58]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_74]']
jmp ['loc_27A0']
jmp ['short', 'loc_271F']
cmp ['[ebp+arg_4],', '2']
jnz ['short', 'loc_271F']
mov ['eax,', '23h']
mov ['[ebp+var_44],', 'ax']
lea ['ecx,', '[ebp+var_42]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['?ConvertUInt32ToString@@YGXIPA_W@Z']
lea ['eax,', '[ebp+var_44]']
mov ['[ebp+var_60],', 'eax']
movzx ['ecx,', '[ebp+var_19]']
push ['ecx']
call ['?BoolToInt@@YGH_N@Z']
mov ['[ebp+var_9C],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_60]']
push ['edx']
mov ['eax,', '[ebp+var_9C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+74h]']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+74h]']
mov ['eax,', '[edx]']
mov ['edx,', '[eax+28h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_A0],', 'eax']
mov ['eax,', '[ebp+var_A0]']
mov ['[ebp+var_78],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_58]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_78]']
jmp ['short', 'loc_27A0']
endp
__catch$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z$0 proc near
mov ['dword', 'ptr', '[ebp-7Ch],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN19']
retn
endp
?GetVolumeSize@CArchiveUpdateCallback@@UAGJIPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_2835']
mov ['eax,', '1']
jmp ['short', 'loc_2874']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+arg_4],', 'eax']
jb ['short', 'loc_2856']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['eax,', '[eax+4]']
mov ['[ecx+4],', 'eax']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '9Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_AC]']
mov ['ecx,', '27h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_14],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPA_W@Z']
lea ['edx,', '[ebp+var_38]']
push ['edx']
lea ['ecx,', '[ebp+var_4C]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_8C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_4C]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_90],', '2']
jnb ['short', 'loc_2920']
push ['30h']
lea ['ecx,', '[ebp+var_4C]']
call ['?InsertAtFront@UString@@QAEX_W@Z']
jmp ['short', 'loc_28FD']
mov ['eax,', '[ebp+this]']
add ['eax,', '64h']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_94],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
push ['2Eh']
lea ['ecx,', '[ebp+var_60]']
call ['??YUString@@QAEAAV0@_W@Z']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
lea ['ecx,', '[ebp+var_60]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+this]']
add ['edx,', '70h']
push ['edx']
lea ['ecx,', '[ebp+var_60]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
mov ['[ebp+var_7C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_7C],', '0']
jz ['short', 'loc_299D']
mov ['ecx,', '[ebp+var_7C]']
call ['??0COutFileStream@@QAE@XZ']
mov ['[ebp+var_9C],', 'eax']
mov ['ecx,', '[ebp+var_9C]']
mov ['[ebp+var_A0],', 'ecx']
jmp ['short', 'loc_29A7']
mov ['[ebp+var_A0],', '0']
mov ['edx,', '[ebp+var_A0]']
mov ['[ebp+var_78],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
lea ['ecx,', '[ebp+var_70]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_60]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_A4],', 'eax']
push ['0']
mov ['edx,', '[ebp+var_A4]']
push ['edx']
mov ['ecx,', '[ebp+var_68]']
call ['?Create@COutFileStream@@QAE_NPB_W_N@Z']
mov ['[ebp+var_A5],', 'al']
movzx ['eax,', '[ebp+var_A5]']
test ['eax,', 'eax']
jnz ['short', 'loc_2A35']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_80],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_60]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_80]']
jmp ['short', 'loc_2AB0']
lea ['ecx,', '[ebp+var_70]']
call ['?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_AC],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_AC]']
mov ['[ecx],', 'edx']
mov ['[ebp+var_84],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_60]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_84]']
jmp ['short', 'loc_2AB0']
endp
__catch$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-88h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN16_0']
retn
endp
?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '8']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+68h]']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+68h]']
mov ['eax,', '[edx]']
mov ['edx,', '[eax+30h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_2BDF']
endp
__catch$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z$0 proc near
mov ['dword', 'ptr', '[ebp-14h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7_5']
retn
endp
?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '8']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+64h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+64h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_2C9B']
endp
__catch$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z$0 proc near
mov ['dword', 'ptr', '[ebp-14h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7_6']
retn
endp
?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+arg_4],', '21h']
jnz ['loc_2DC9']
push ['offset', '_g_CriticalSection']
lea ['ecx,', '[ebp+var_18]']
call ['??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_2D38']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_24],', 'eax']
jnb ['short', 'loc_2DBA']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_2DB5']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
push ['eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+5Ch]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+5Ch]']
mov ['edx,', '[ecx]']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_2DB3']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_2DD2']
jmp ['short', 'loc_2DBA']
jmp ['loc_2D2F']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_HRESULT_FROM_WIN32@4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['esi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['offset', '_g_CriticalSection']
lea ['ecx,', '[ebp+var_18]']
call ['??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_2E8A']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_24],', 'eax']
jnb ['short', 'loc_2EE1']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_2EDF']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['?Delete@?$CRecordVector@I@@QAEXI@Z']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['?Delete@?$CObjectVector@VUString@@@@QAEXI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
jmp ['short', 'loc_2F05']
jmp ['short', 'loc_2E81']
mov ['[ebp+var_28],', '1335445h']
push ['offset', '__TI1H']
lea ['eax,', '[ebp+var_28]']
push ['eax']
call ['__CxxThrowException@8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '58h']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '64h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '70h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8Ch']
jmp ['??1?$CMyComPtr@UIInArchive@@@@QAE@XZ']
endp
__ehhandler$??0CArchiveUpdateCallback@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CArchiveUpdateCallback@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$2 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$3 proc near
lea ['ecx,', '[ebp-54h]']
jmp ['??1CReparseAttr@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$4 proc near
lea ['ecx,', '[ebp-68h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$5 proc near
lea ['ecx,', '[ebp-7Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$6 proc near
lea ['ecx,', '[ebp-90h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$7 proc near
lea ['ecx,', '[ebp-0B0h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$8 proc near
lea ['ecx,', '[ebp-0C0h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$9 proc near
lea ['ecx,', '[ebp-0D8h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-16Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$1 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$2 proc near
mov ['eax,', '[ebp-54h]']
and ['eax,', '1']
jz ['locret_30B9']
and ['dword', 'ptr', '[ebp-54h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$3 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?GetRelativePath@@YG?AVUString@@ABV1@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-54h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetRelativePath@@YG?AVUString@@ABV1@0@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$2 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$3 proc near
lea ['ecx,', '[ebp-108h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$4 proc near
mov ['eax,', '[ebp-114h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$5 proc near
lea ['ecx,', '[ebp-44h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$6 proc near
lea ['ecx,', '[ebp-124h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$7 proc near
mov ['eax,', '[ebp-12Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$8 proc near
lea ['ecx,', '[ebp-58h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$9 proc near
mov ['eax,', '[ebp-134h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$10 proc near
lea ['ecx,', '[ebp-68h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$11 proc near
lea ['ecx,', '[ebp-7Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1E0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$2 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$3 proc near
lea ['ecx,', '[ebp-90h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$4 proc near
lea ['ecx,', '[ebp-70h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0ECh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z$2 proc near
lea ['ecx,', '[ebp-58h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0A4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$2 proc near
lea ['ecx,', '[ebp-4Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$3 proc near
lea ['ecx,', '[ebp-60h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$4 proc near
mov ['eax,', '[ebp-7Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$5 proc near
lea ['ecx,', '[ebp-70h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__ehhandler$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0B0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICryptoGetTextPassword@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICryptoGetTextPassword@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4350']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_44EE']
push ['offset', '_IID_IArchiveUpdateCallback2']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_436F']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_44EE']
push ['offset', '_IID_IArchiveUpdateCallbackFile']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_43A6']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_4392']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_4399']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['loc_44EE']
push ['offset', '_IID_IArchiveExtractCallbackMessage']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_43DD']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_43C9']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_43D0']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['loc_44EE']
push ['offset', '_IID_IArchiveGetRawProps']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4414']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_4400']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_4407']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['loc_44EE']
push ['offset', '_IID_IArchiveGetRootProps']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_444B']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_4437']
mov ['edx,', '[ebp+this]']
add ['edx,', '10h']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_443E']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['loc_44EE']
push ['offset', '_IID_ICryptoGetTextPassword2']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_447F']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_446E']
mov ['eax,', '[ebp+this]']
add ['eax,', '14h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_4475']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_44EE']
push ['offset', '_IID_ICryptoGetTextPassword']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_44B3']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_44A2']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_44A9']
mov ['[ebp+var_18],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_44EE']
push ['offset', '_IID_ICompressProgressInfo']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_44E7']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_44D6']
mov ['edx,', '[ebp+this]']
add ['edx,', '1Ch']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_44DD']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_44EE']
mov ['eax,', '80004002h']
jmp ['short', 'loc_44FF']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+24h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+24h],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CArchiveUpdateCallback@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+24h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+24h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CArchiveUpdateCallback@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+24h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+24h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_45BA']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+24h]']
jmp ['short', 'loc_45E4']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_45DB']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCArchiveUpdateCallback@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_45E2']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCArchiveUpdateCallback@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CArchiveUpdateCallback@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_461E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CArchiveUpdateCallback@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArchiveUpdateCallback@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8Ch']
call ['??1?$CMyComPtr@UIInArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '64h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '58h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??1?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '58h']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '64h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '70h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CArchiveUpdateCallback@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArchiveUpdateCallback@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0IArchiveUpdateCallback2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IArchiveUpdateCallback@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IArchiveUpdateCallback2@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IArchiveUpdateCallbackFile@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IArchiveUpdateCallbackFile@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IArchiveExtractCallbackMessage@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IProgress@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IArchiveExtractCallbackMessage@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IArchiveGetRawProps@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IArchiveGetRawProps@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IArchiveGetRootProps@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IArchiveGetRootProps@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICryptoGetTextPassword2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICryptoGetTextPassword2@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressProgressInfo@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressProgressInfo@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IInFileStream_Callback@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInFileStream_Callback@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IArchiveUpdateCallback@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IProgress@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IArchiveUpdateCallback@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IProgress@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IProgress@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?BoolToInt@@YGH_N@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
movzx ['eax,', '[ebp+arg_0]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
pop ['ebp']
retn ['4']
endp
?ExistInArchive@CUpdatePair2@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
setnz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CReparseAttr@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CReparseAttr@NFile@NWindows@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CReparseAttr@NFile@NWindows@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CReparseAttr@NFile@NWindows@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '1']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsDir@CDirItem@@QBE_NXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+3Ch]']
and ['eax,', '10h']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ExistOnDisk@CUpdatePair2@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
setnz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add_PathSepar@UString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['5Ch']
mov ['ecx,', '[ebp+var_4]']
call ['??YUString@@QAEAAV0@_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YUString@@QAEAAV0@_W@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_4D7C']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+eax*2],', 'dx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CReparseAttr@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CReparseAttr@NFile@NWindows@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CReparseAttr@NFile@NWindows@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CReparseAttr@NFile@NWindows@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CReparseAttr@NFile@NWindows@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx]']
call ['?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnterCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
call ['?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LeaveCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['2200000h']
push ['3']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CBufInStream@@QAEXPBEIPAUIUnknown@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+18h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?OpenShared@CInFileStream@@QAE_NPB_W_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?OpenShared@CInFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?AreReparseData@CDirItem@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['?Size@?$CBuffer@E@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_506A']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_506A']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_5071']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsDir@CArchiveUpdateCallback@@QBE_NABUCUpdatePair2@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jl ['short', 'loc_50BE']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+80h]']
add ['ecx,', '24h']
call ['??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z']
mov ['ecx,', 'eax']
call ['?IsDir@CDirItem@@QBE_NXZ']
jmp ['short', 'loc_50E3']
jmp ['short', 'loc_50E1']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jl ['short', 'loc_50E1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+90h]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
mov ['al,', '[eax+1Ch]']
jmp ['short', 'loc_50E3']
xor ['al,', 'al']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CBufInStream@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CBufInStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??0?$CMyComPtr@UIUnknown@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CBufInStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_52BC']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_52FB']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_52D8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_52FB']
push ['offset', '_IID_IInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_52F4']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_52FB']
mov ['eax,', '80004002h']
jmp ['short', 'loc_530C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CBufInStream@@UAGKXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CBufInStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_537E']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_53A8']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_539F']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCBufInStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_53A6']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCBufInStream@@QAEPAXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBufInStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_53E2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CBufInStream@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IInStream@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CStdInFileStream@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CStdInFileStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CStdInFileStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_55C4']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_55CB']
mov ['eax,', '80004002h']
jmp ['short', 'loc_55DC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CStdInFileStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CStdInFileStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_564F']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_5687']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_567E']
mov ['esi,', 'esp']
push ['1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_5685']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCStdInFileStream@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CStdInFileStream@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_56C2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CStdInFileStream@@UAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CStdInFileStream@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Ptr@UString@@QBEPB_WXZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@COutFileStream@@QAE_NPB_W_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0COutFileStream@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COutFileStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0COutFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@COutFileStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5944']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_5967']
push ['offset', '_IID_IOutStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5960']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_5967']
mov ['eax,', '80004002h']
jmp ['short', 'loc_5978']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@COutFileStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@COutFileStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_59EB']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_5A23']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_5A1A']
mov ['esi,', 'esp']
push ['1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_5A21']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCOutFileStream@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutFileStream@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5A5E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1COutFileStream@@UAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COutFileStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1COutFile@NIO@NFile@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFileBase@NIO@NFile@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IOutStream@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFileBase@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_HRESULT_FROM_WIN32@4 proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jg ['short', 'loc_5C05']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_5C1D']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FFFFh']
or ['ecx,', '70000h']
or ['ecx,', '80000000h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@VUString@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5D70']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_5D77']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_5E92']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5E89']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_5E90']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_5E4E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Delete@?$CObjectVector@VUString@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5F52']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_5F59']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Delete@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CBuffer@E@@QBEPBEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5FFA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6038']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_605B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_60AC']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_60F2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@I@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Delete@?$CRecordVector@I@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@I@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@I@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@I@@QAEAAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_K@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@_K@@QAEAA_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIInArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIInArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_63CA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCKeyKeyValPair@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@UCKeyKeyValPair@@@@QAEAAUCKeyKeyValPair@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddToUniqueSorted2@?$CRecordVector@UCKeyKeyValPair@@@@QAEIABUCKeyKeyValPair@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_C]']
jz ['short', 'loc_6599']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_C]']
shr ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@UCKeyKeyValPair@@@@QAEAAUCKeyKeyValPair@@I@Z']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Compare@CKeyKeyValPair@@QBEHABU1@@Z']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_6580']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_65D2']
cmp ['[ebp+var_18],', '0']
jge ['short', 'loc_658E']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_6597']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_6544']
mov ['edx,', '[ebp+arg_0]']
sub ['esp,', '18h']
mov ['eax,', 'esp']
mov ['ecx,', '[edx]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[edx+4]']
mov ['[eax+4],', 'ecx']
mov ['ecx,', '[edx+8]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[edx+0Ch]']
mov ['[eax+0Ch],', 'ecx']
mov ['ecx,', '[edx+10h]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[edx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Insert@?$CRecordVector@UCKeyKeyValPair@@@@QAEXIUCKeyKeyValPair@@@Z']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Compare@CKeyKeyValPair@@QBEHABU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
ja ['short', 'loc_662E']
jb ['short', 'loc_6629']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_662E']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_6678']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+4]']
cmp ['eax,', '[edx+4]']
jb ['short', 'loc_665D']
ja ['short', 'loc_6656']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx]']
jbe ['short', 'loc_665D']
mov ['eax,', '1']
jmp ['short', 'loc_6678']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ecx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ecx+8]']
push ['eax']
call ['??$MyCompare@_K@@YGH_K0@Z']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '14h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6708']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_674E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GUString@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_67BA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Delete@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@PAX@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MoveItems@?$CRecordVector@I@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_6A40']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_6A1B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Insert@?$CRecordVector@UCKeyKeyValPair@@@@QAEXIUCKeyKeyValPair@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@UCKeyKeyValPair@@@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@UCKeyKeyValPair@@@@AAEXII@Z']
mov ['edx,', '[ebp+arg_0]']
imul ['edx,', '18h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_14]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+arg_18]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_6C14']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_6BEF']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MoveItems@?$CRecordVector@UCKeyKeyValPair@@@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
imul ['ecx,', '18h']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
imul ['edx,', '18h']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
imul ['ecx,', '18h']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@UCKeyKeyValPair@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_6D30']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '18h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_6D0B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
imul ['eax,', '18h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$MyCompare@_K@@YGH_K0@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
ja ['short', 'loc_6D6F']
jb ['short', 'loc_6D66']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_6D6F']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_6D95']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ebp+arg_8]']
jnz ['short', 'loc_6D88']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_6D88']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_6D8F']
mov ['[ebp+var_8],', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Release@CArchiveUpdateCallback@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?Release@CArchiveUpdateCallback@@UAGKXZ']
endp
?AddRef@CArchiveUpdateCallback@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CArchiveUpdateCallback@@UAGKXZ']
endp
?QueryInterface@CArchiveUpdateCallback@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CArchiveUpdateCallback@@WBE@AGKXZ proc near
sub ['[esp+arg_0],', '14h']
jmp ['?Release@CArchiveUpdateCallback@@UAGKXZ']
endp
?AddRef@CArchiveUpdateCallback@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CArchiveUpdateCallback@@UAGKXZ']
endp
?QueryInterface@CArchiveUpdateCallback@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CArchiveUpdateCallback@@WBI@AGKXZ proc near
sub ['[esp+arg_0],', '18h']
jmp ['?Release@CArchiveUpdateCallback@@UAGKXZ']
endp
?AddRef@CArchiveUpdateCallback@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?AddRef@CArchiveUpdateCallback@@UAGKXZ']
endp
?QueryInterface@CArchiveUpdateCallback@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CArchiveUpdateCallback@@WBM@AGKXZ proc near
sub ['[esp+arg_0],', '1Ch']
jmp ['?Release@CArchiveUpdateCallback@@UAGKXZ']
endp
?AddRef@CArchiveUpdateCallback@@WBE@AGKXZ proc near
sub ['[esp+arg_0],', '14h']
jmp ['?AddRef@CArchiveUpdateCallback@@UAGKXZ']
endp
?QueryInterface@CArchiveUpdateCallback@@WBA@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '10h']
jmp ['?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CArchiveUpdateCallback@@WBI@AGKXZ proc near
sub ['[esp+arg_0],', '18h']
jmp ['?AddRef@CArchiveUpdateCallback@@UAGKXZ']
endp
?QueryInterface@CArchiveUpdateCallback@@WBE@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '14h']
jmp ['?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CArchiveUpdateCallback@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CArchiveUpdateCallback@@UAGKXZ']
endp
?AddRef@CArchiveUpdateCallback@@WBM@AGKXZ proc near
sub ['[esp+arg_0],', '1Ch']
jmp ['?AddRef@CArchiveUpdateCallback@@UAGKXZ']
endp
?SetCompleted@CArchiveUpdateCallback@@W7AGJPB_K@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z']
endp
?QueryInterface@CArchiveUpdateCallback@@WBI@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '18h']
jmp ['?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CArchiveUpdateCallback@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CArchiveUpdateCallback@@UAGKXZ']
endp
?QueryInterface@CArchiveUpdateCallback@@WBM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '1Ch']
jmp ['?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CArchiveUpdateCallback@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CArchiveUpdateCallback@@UAGKXZ']
endp
?AddRef@CArchiveUpdateCallback@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CArchiveUpdateCallback@@UAGKXZ']
endp
?SetTotal@CArchiveUpdateCallback@@W7AGJ_K@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z']
endp
??__Eg_CriticalSection@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_CriticalSection']
call ['??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
push ['offset', '??__Fg_CriticalSection@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_CriticalSection_Init@4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__ECS@@YAXXZ  proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_CS']
call ['??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
push ['offset', '??__FCS@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??__Fg_CriticalSection@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_CriticalSection']
call ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__DeleteCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__FCS@@YAXXZ  proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_CS']
call ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp

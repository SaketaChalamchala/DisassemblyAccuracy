??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0ICompressSetDecoderProperties2@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCoder@NDecoder@NImplode@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CCoder@NDecoder@NImplode@NCompress@@6BICompressSetDecoderProperties2@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0CLzOutWindow@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
push ['100h']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??0CDecoder@NHuffman@NImplode@NCompress@@QAE@I@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
push ['40h']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '108h']
call ['??0CDecoder@NHuffman@NImplode@NCompress@@QAE@I@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
push ['40h']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1A0h']
call ['??0CDecoder@NHuffman@NImplode@NCompress@@QAE@I@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadLevelItems@CCoder@NDecoder@NImplode@NCompress@@AAE_NAAVCDecoder@NHuffman@34@PAEH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_135']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_8]']
jge ['loc_1C4']
push ['4']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
push ['4']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+arg_8]']
jle ['short', 'loc_18F']
push ['0']
lea ['ecx,', '[ebp+var_24]']
call ['??0CException@NDecoder@NImplode@NCompress@@QAE@W4ECauseType@0123@@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_20],', 'eax']
push ['offset', '__TI1?AVCException@NDecoder@NImplode@NCompress@@']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_1A1']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_18]']
jge ['short', 'loc_1BF']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_C]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_198']
jmp ['loc_12C']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+arg_8]']
jz ['short', 'loc_1D0']
xor ['al,', 'al']
jmp ['short', 'loc_1DC']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?SetCodeLengths@CDecoder@NHuffman@NImplode@NCompress@@QAE_NPBE@Z']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ReadTables@CCoder@NDecoder@NImplode@NCompress@@AAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1A0h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1A0]']
mov ['ecx,', '68h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+239h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_24F']
push ['100h']
lea ['edx,', '[ebp+var_10C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '70h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadLevelItems@CCoder@NDecoder@NImplode@NCompress@@AAE_NAAVCDecoder@NHuffman@34@PAEH@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_24F']
xor ['al,', 'al']
jmp ['short', 'loc_28E']
push ['40h']
lea ['edx,', '[ebp+var_154]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '108h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadLevelItems@CCoder@NDecoder@NImplode@NCompress@@AAE_NAAVCDecoder@NHuffman@34@PAEH@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_274']
xor ['al,', 'al']
jmp ['short', 'loc_28E']
push ['40h']
lea ['edx,', '[ebp+var_19C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1A0h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadLevelItems@CCoder@NDecoder@NImplode@NCompress@@AAE_NAAVCDecoder@NHuffman@34@PAEH@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1A0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CodeReal@CCoder@NDecoder@NImplode@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '58h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_58]']
mov ['ecx,', '16h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['100000h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_35D']
mov ['eax,', '8007000Eh']
jmp ['loc_646']
mov ['ecx,', 'ds:_kHistorySize']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?Create@COutBuffer@@QAE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_380']
mov ['eax,', '8007000Eh']
jmp ['loc_646']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_390']
mov ['eax,', '80070057h']
jmp ['loc_646']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?Init@CLzOutWindow@@QAEX_N@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadTables@CCoder@NDecoder@NImplode@NCompress@@AAE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_3FB']
mov ['eax,', '1']
jmp ['loc_646']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_18]']
ja ['loc_622']
jb ['short', 'loc_415']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_1C]']
jnb ['loc_622']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_47E']
push ['0']
push ['10000h']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['__aullrem']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_4C],', 'edx']
mov ['ecx,', '[ebp+var_50]']
or ['ecx,', '[ebp+var_4C]']
jnz ['short', 'loc_47E']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'edx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_10]']
push ['edx']
lea ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_47E']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_646']
push ['1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
test ['eax,', 'eax']
jnz ['loc_5B0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+23Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1A0h']
call ['?DecodeSymbol@CDecoder@NHuffman@NImplode@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '40h']
jb ['short', 'loc_4D3']
mov ['eax,', '1']
jmp ['loc_646']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[edx+23Ch]']
shl ['eax,', 'cl']
add ['eax,', '[ebp+var_34]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '108h']
call ['?DecodeSymbol@CDecoder@NHuffman@NImplode@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '40h']
jb ['short', 'loc_50F']
mov ['eax,', '1']
jmp ['loc_646']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[edx+240h]']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_3C],', '3Fh']
jnz ['short', 'loc_537']
push ['8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
add ['eax,', '[ebp+var_40]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_38]']
xor ['edx,', 'edx']
mov ['[ebp+var_58],', 'ecx']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+var_C]']
jb ['short', 'loc_584']
ja ['short', 'loc_554']
mov ['ecx,', '[ebp+var_58]']
cmp ['ecx,', '[ebp+var_10]']
jb ['short', 'loc_584']
cmp ['[ebp+var_40],', '0']
jbe ['short', 'loc_584']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?PutByte@CLzOutWindow@@QAEXE@Z']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_C]']
adc ['eax,', '0']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_40]']
sub ['ecx,', '1']
mov ['[ebp+var_40],', 'ecx']
jmp ['short', 'loc_537']
cmp ['[ebp+var_40],', '0']
jbe ['short', 'loc_59D']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?CopyBlock@CLzOutWindow@@QAE_NII@Z']
mov ['ecx,', '[ebp+var_40]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_10]']
adc ['edx,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_61D']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+239h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5EB']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '38h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '70h']
call ['?DecodeSymbol@CDecoder@NHuffman@NImplode@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '100h']
jb ['short', 'loc_5E3']
mov ['eax,', '1']
jmp ['short', 'loc_646']
mov ['al,', 'byte', 'ptr', '[ebp+var_48]']
mov ['[ebp+var_41],', 'al']
jmp ['short', 'loc_5FB']
push ['8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
mov ['[ebp+var_41],', 'al']
movzx ['ecx,', '[ebp+var_41]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?PutByte@CLzOutWindow@@QAEXE@Z']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_C]']
adc ['eax,', '0']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_3FB']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_18]']
jb ['short', 'loc_63B']
ja ['short', 'loc_634']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_1C]']
jbe ['short', 'loc_63B']
mov ['eax,', '1']
jmp ['short', 'loc_646']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?Flush@COutBuffer@@QAEJXZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '58h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '18h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?CodeReal@CCoder@NDecoder@NImplode@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_28]']
jmp ['short', 'loc_756']
endp
__catch$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0 proc near
mov ['edx,', '[ebp-18h]']
mov ['eax,', '[edx]']
mov ['[ebp-20h],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN8_0']
retn
endp
__catch$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1 proc near
mov ['dword', 'ptr', '[ebp-24h],', '1']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN10_0']
retn
endp
?SetDecoderProperties2@CCoder@NDecoder@NImplode@NCompress@@UAGJPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_8],', '1']
jnb ['short', 'loc_7B8']
mov ['eax,', '80070057h']
jmp ['short', 'loc_826']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4+3]']
and ['edx,', '2']
neg ['edx']
sbb ['edx,', 'edx']
neg ['edx']
mov ['eax,', '[ebp+this]']
mov ['[eax+234h],', 'dl']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+234h]']
neg ['edx']
sbb ['edx,', 'edx']
neg ['edx']
add ['edx,', '6']
mov ['eax,', '[ebp+this]']
mov ['[eax+238h],', 'edx']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4+3]']
and ['ecx,', '4']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['edx,', '[ebp+this]']
mov ['[edx+235h],', 'cl']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+235h]']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '2']
mov ['edx,', '[ebp+this]']
mov ['[edx+23Ch],', 'ecx']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1CLzOutWindow@@QAE@XZ']
endp
__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
endp
__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '70h']
jmp ['??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ']
endp
__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '108h']
jmp ['??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ']
endp
__ehhandler$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-2Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_C51']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_C40']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_C47']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_C8C']
push ['offset', '_IID_ICompressSetDecoderProperties2']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_C85']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_C74']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_C7B']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_C8C']
mov ['eax,', '80004002h']
jmp ['short', 'loc_C9D']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+8],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D5A']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
jmp ['short', 'loc_D84']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_D7B']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCCoder@NDecoder@NImplode@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_D82']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCCoder@NDecoder@NImplode@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_DBE']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1A0h']
call ['??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '108h']
call ['??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1CLzOutWindow@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1CLzOutWindow@@QAE@XZ']
endp
__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
endp
__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '70h']
jmp ['??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ']
endp
__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '108h']
jmp ['??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ']
endp
__ehhandler$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CLzOutWindow@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutBuffer@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CInBuffer@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CInBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetDecoderProperties2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetDecoderProperties2@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CLzOutWindow@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0COutBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CInBufferBase@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CException@NDecoder@NImplode@NCompress@@QAE@W4ECauseType@0123@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CopyBlock@CLzOutWindow@@QAE_NII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[edx+4]']
jb ['short', 'loc_1271']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+24h]']
test ['edx,', 'edx']
jz ['short', 'loc_125E']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+10h]']
jb ['short', 'loc_1265']
xor ['al,', 'al']
jmp ['loc_134D']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[edx+10h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+8]']
sub ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_4]']
jbe ['short', 'loc_12E1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
sub ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_4]']
jbe ['short', 'loc_12E1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax]']
mov ['[edx],', 'cl']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
jnz ['short', 'loc_12B8']
jmp ['short', 'loc_134B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+10h]']
jnz ['short', 'loc_12F3']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_14]']
mov ['esi,', '[ebp+var_8]']
mov ['cl,', '[ecx+esi]']
mov ['[eax+edx],', 'cl']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+8]']
jnz ['short', 'loc_1340']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
jnz ['short', 'loc_12E1']
mov ['al,', '1']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?PutByte@CLzOutWindow@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+arg_0]']
mov ['[eax+ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jnz ['short', 'loc_13B3']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+30h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
shl ['eax,', 'cl']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
and ['eax,', '[ecx+30h]']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Create@CInBuffer@@QAE_NI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?GetProcessedSize@CInBufferBase@@QBE_KXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '20h']
sub ['esi,', '[ecx]']
shr ['esi,', '3']
xor ['ecx,', 'ecx']
sub ['eax,', 'esi']
sbb ['edx,', 'ecx']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessedSize@CInBufferBase@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
xor ['esi,', 'esi']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
adc ['esi,', '[edx+14h]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[eax]']
sub ['eax,', '[edx+8]']
cdq
add ['ecx,', 'eax']
adc ['esi,', 'edx']
mov ['eax,', 'ecx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_158A']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '8']
jb ['short', 'loc_15DA']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ReadByte@CInBufferBase@@QAEEXZ']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_8+3]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '20h']
sub ['ecx,', '[eax]']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+var_4]']
or ['edx,', '[ecx+30h]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+30h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
shl ['edx,', '8']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
movzx ['ecx,', 'byte', 'ptr', 'ds:?kInvertTable@NBitl@@3PAEA[eax]']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
jmp ['short', 'loc_157D']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadByte@CInBufferBase@@QAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+4]']
jb ['short', 'loc_1616']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ']
jmp ['short', 'loc_1630']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['dl,', '[ecx]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+30h]']
mov ['ecx,', '[ebp+arg_0]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+30h],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Init@CInBufferBase@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '20h']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ']
endp
?AddRef@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ']
endp
?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
??__EkHistorySize@NDecoder@NImplode@NCompress@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['6']
push ['7']
call ['??$MyMax@H@@YGHHH@Z']
mov ['edx,', '1']
mov ['ecx,', 'eax']
shl ['edx,', 'cl']
shl ['edx,', '6']
mov ['ds:_kHistorySize,', 'edx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??$MyMax@H@@YGHHH@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jle ['short', 'loc_1717']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_171D']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??__EkMatchMinLenMax@NDecoder@NImplode@NCompress@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['2']
push ['3']
call ['??$MyMax@I@@YGIII@Z']
mov ['ds:_kMatchMinLenMax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??$MyMax@I@@YGIII@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jbe ['short', 'loc_175F']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_1765']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

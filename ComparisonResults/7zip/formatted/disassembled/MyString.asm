?FindCharPosInString@@YGHPBDD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_1C']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
movsx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_32']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_43']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_41']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_43']
jmp ['short', 'loc_13']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?FindCharPosInString@@YGHPB_W_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_6C']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_84']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
jmp ['short', 'loc_95']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_93']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_95']
jmp ['short', 'loc_63']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?MyStringLower_Ascii@@YGXPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'cl']
movsx ['edx,', 'byte', 'ptr', '[ebp+var_4+3]']
test ['edx,', 'edx']
jnz ['short', 'loc_BD']
jmp ['short', 'loc_D7']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_4+3]']
push ['eax']
call ['?MyCharLower_Ascii@@YGDD@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
jmp ['short', 'loc_AB']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyStringLower_Ascii@@YGXPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_4],', 'cx']
movzx ['edx,', 'word', 'ptr', '[ebp+var_4]']
test ['edx,', 'edx']
jnz ['short', 'loc_10F']
jmp ['short', 'loc_12A']
movzx ['eax,', 'word', 'ptr', '[ebp+var_4]']
push ['eax']
call ['?MyCharLower_Ascii@@YG_W_W@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
jmp ['short', 'loc_FB']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyCharUpper_WIN@@YG_W_W@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+cbMultiByte],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['dword', 'ptr', '[ebp+MultiByteStr],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
movzx ['eax,', '[ebp+WideCharStr]']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CharUpperW@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_19F']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '78h']
jz ['short', 'loc_1A5']
mov ['ax,', 'word', 'ptr', '[ebp+var_8]']
jmp ['short', 'loc_224']
mov ['[ebp+var_C],', '4']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['4']
lea ['ecx,', '[ebp+MultiByteStr]']
push ['ecx']
push ['1']
lea ['edx,', '[ebp+WideCharStr]']
push ['edx']
push ['0']
push ['0']
call ['dword', 'ptr', 'ds:__imp__WideCharToMultiByte@32']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+cbMultiByte],', 'eax']
cmp ['[ebp+cbMultiByte],', '0']
jz ['short', 'loc_1DE']
cmp ['[ebp+cbMultiByte],', '4']
jle ['short', 'loc_1E4']
mov ['ax,', '[ebp+WideCharStr]']
jmp ['short', 'loc_224']
mov ['eax,', '[ebp+cbMultiByte]']
mov ['[ebp+eax+MultiByteStr],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+MultiByteStr]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CharUpperA@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['1']
lea ['edx,', '[ebp+WideCharStr]']
push ['edx']
mov ['eax,', '[ebp+cbMultiByte]']
push ['eax']
lea ['ecx,', '[ebp+MultiByteStr]']
push ['ecx']
push ['0']
push ['0']
call ['dword', 'ptr', 'ds:__imp__MultiByteToWideChar@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ax,', '[ebp+WideCharStr]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsString1PrefixedByString2@@YG_NPBD0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'cl']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_4+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_298']
mov ['al,', '1']
jmp ['short', 'loc_2BB']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx]']
mov ['byte', 'ptr', '[ebp+var_4+2],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4+2]']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4+3]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_2B9']
xor ['al,', 'al']
jmp ['short', 'loc_2BB']
jmp ['short', 'loc_27B']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StringsAreEqualNoCase@@YG_NPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_4],', 'cx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_8],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_339']
movzx ['edx,', 'word', 'ptr', '[ebp+var_4]']
push ['edx']
call ['?MyCharUpper@@YG_W_W@Z']
movzx ['esi,', 'ax']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
push ['eax']
call ['?MyCharUpper@@YG_W_W@Z']
movzx ['ecx,', 'ax']
cmp ['esi,', 'ecx']
jz ['short', 'loc_339']
xor ['al,', 'al']
jmp ['short', 'loc_347']
movzx ['edx,', 'word', 'ptr', '[ebp+var_4]']
test ['edx,', 'edx']
jnz ['short', 'loc_345']
mov ['al,', '1']
jmp ['short', 'loc_347']
jmp ['short', 'loc_2E5']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsPrefixedBy_Ascii_NoCase@AString@@QBE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx]']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'al']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
movsx ['edx,', 'byte', 'ptr', '[ebp+var_C+3]']
test ['edx,', 'edx']
jnz ['short', 'loc_3A4']
mov ['al,', '1']
jmp ['short', 'loc_3D9']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_C+2],', 'cl']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_C+2]']
push ['eax']
call ['?MyCharLower_Ascii@@YGDD@Z']
movsx ['esi,', 'al']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_C+3]']
push ['ecx']
call ['?MyCharLower_Ascii@@YGDD@Z']
movsx ['edx,', 'al']
cmp ['esi,', 'edx']
jz ['short', 'loc_3D7']
xor ['al,', 'al']
jmp ['short', 'loc_3D9']
jmp ['short', 'loc_387']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsPrefixedBy_Ascii_NoCase@UString@@QBE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx]']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'al']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
movsx ['edx,', 'byte', 'ptr', '[ebp+var_C+3]']
test ['edx,', 'edx']
jnz ['short', 'loc_430']
mov ['al,', '1']
jmp ['short', 'loc_467']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_10],', 'cx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_10]']
push ['eax']
call ['?MyCharLower_Ascii@@YG_W_W@Z']
movzx ['esi,', 'ax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_C+3]']
push ['ecx']
call ['?MyCharLower_Ascii@@YGDD@Z']
movzx ['edx,', 'al']
cmp ['esi,', 'edx']
jz ['short', 'loc_465']
xor ['al,', 'al']
jmp ['short', 'loc_467']
jmp ['short', 'loc_413']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?StringsAreEqual_Ascii@@YG_NPB_WPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['edx,', 'ecx']
jz ['short', 'loc_4A5']
xor ['al,', 'al']
jmp ['short', 'loc_4C5']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4+3]']
test ['edx,', 'edx']
jnz ['short', 'loc_4B1']
mov ['al,', '1']
jmp ['short', 'loc_4C5']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_48B']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StringsAreEqualNoCase_Ascii@@YG_NPBD0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'cl']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_4+2],', 'cl']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_4+3]']
movsx ['ecx,', 'byte', 'ptr', '[ebp+var_4+2]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_52C']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4+3]']
push ['edx']
call ['?MyCharLower_Ascii@@YGDD@Z']
movsx ['esi,', 'al']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_4+2]']
push ['eax']
call ['?MyCharLower_Ascii@@YGDD@Z']
movsx ['ecx,', 'al']
cmp ['esi,', 'ecx']
jz ['short', 'loc_52C']
xor ['al,', 'al']
jmp ['short', 'loc_53A']
movsx ['edx,', 'byte', 'ptr', '[ebp+var_4+3]']
test ['edx,', 'edx']
jnz ['short', 'loc_538']
mov ['al,', '1']
jmp ['short', 'loc_53A']
jmp ['short', 'loc_4DC']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StringsAreEqualNoCase_Ascii@@YG_NPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_4],', 'cx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_8],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_5B9']
movzx ['edx,', 'word', 'ptr', '[ebp+var_4]']
push ['edx']
call ['?MyCharLower_Ascii@@YG_W_W@Z']
movzx ['esi,', 'ax']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
push ['eax']
call ['?MyCharLower_Ascii@@YG_W_W@Z']
movzx ['ecx,', 'ax']
cmp ['esi,', 'ecx']
jz ['short', 'loc_5B9']
xor ['al,', 'al']
jmp ['short', 'loc_5C7']
movzx ['edx,', 'word', 'ptr', '[ebp+var_4]']
test ['edx,', 'edx']
jnz ['short', 'loc_5C5']
mov ['al,', '1']
jmp ['short', 'loc_5C7']
jmp ['short', 'loc_565']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_4],', 'cx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'cl']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_650']
movzx ['edx,', 'word', 'ptr', '[ebp+var_4]']
cmp ['edx,', '7Fh']
jg ['short', 'loc_64C']
movzx ['eax,', 'word', 'ptr', '[ebp+var_4]']
push ['eax']
call ['?MyCharLower_Ascii@@YG_W_W@Z']
movzx ['esi,', 'ax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
push ['ecx']
call ['?MyCharLower_Ascii@@YGDD@Z']
movzx ['edx,', 'al']
cmp ['esi,', 'edx']
jz ['short', 'loc_650']
xor ['al,', 'al']
jmp ['short', 'loc_65E']
movzx ['eax,', 'word', 'ptr', '[ebp+var_4]']
test ['eax,', 'eax']
jnz ['short', 'loc_65C']
mov ['al,', '1']
jmp ['short', 'loc_65E']
jmp ['short', 'loc_5F5']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsString1PrefixedByString2@@YG_NPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_4],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_4]']
test ['eax,', 'eax']
jnz ['short', 'loc_6A3']
mov ['al,', '1']
jmp ['short', 'loc_6C8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx]']
mov ['word', 'ptr', '[ebp+var_8],', 'dx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ebp+var_4]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_6C6']
xor ['al,', 'al']
jmp ['short', 'loc_6C8']
jmp ['short', 'loc_684']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsString1PrefixedByString2_NoCase@@YG_NPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_4],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_4]']
test ['eax,', 'eax']
jnz ['short', 'loc_704']
mov ['al,', '1']
jmp ['short', 'loc_747']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx]']
mov ['word', 'ptr', '[ebp+var_8],', 'dx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ebp+var_4]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_745']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
push ['eax']
call ['?MyCharUpper@@YG_W_W@Z']
movzx ['esi,', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_4]']
push ['ecx']
call ['?MyCharUpper@@YG_W_W@Z']
movzx ['edx,', 'ax']
cmp ['esi,', 'edx']
jz ['short', 'loc_745']
xor ['al,', 'al']
jmp ['short', 'loc_747']
jmp ['short', 'loc_6E5']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?MyStringCompareNoCase@@YGHPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_4],', 'cx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_8],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_7E9']
movzx ['edx,', 'word', 'ptr', '[ebp+var_4]']
push ['edx']
call ['?MyCharUpper@@YG_W_W@Z']
mov ['word', 'ptr', '[ebp+var_C],', 'ax']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
push ['eax']
call ['?MyCharUpper@@YG_W_W@Z']
mov ['word', 'ptr', '[ebp+var_10],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_C]']
movzx ['edx,', 'word', 'ptr', '[ebp+var_10]']
cmp ['ecx,', 'edx']
jge ['short', 'loc_7D6']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_7F7']
movzx ['eax,', 'word', 'ptr', '[ebp+var_C]']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_10]']
cmp ['eax,', 'ecx']
jle ['short', 'loc_7E9']
mov ['eax,', '1']
jmp ['short', 'loc_7F7']
movzx ['edx,', 'word', 'ptr', '[ebp+var_4]']
test ['edx,', 'edx']
jnz ['short', 'loc_7F5']
xor ['eax,', 'eax']
jmp ['short', 'loc_7F7']
jmp ['short', 'loc_777']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?InsertSpace@AString@@AAEXAAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow@AString@@AAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@AString@@AAEXII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReAlloc@AString@@AAEXI@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jb ['short', 'loc_891']
cmp ['[ebp+arg_0],', '40000000h']
jb ['short', 'loc_8A6']
mov ['[ebp+var_C],', '13329ACh']
push ['offset', '__TI1H']
lea ['edx,', '[ebp+var_C]']
push ['edx']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReAlloc2@AString@@AAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '40000000h']
jb ['short', 'loc_94B']
mov ['[ebp+var_C],', '13329ACh']
push ['offset', '__TI1H']
lea ['eax,', '[ebp+var_C]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStartLen@AString@@AAEXI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Grow_1@AString@@AAEXXZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '1']
add ['edx,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '0FFFFFFF0h']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReAlloc@AString@@AAEXI@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Grow@AString@@AAEXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_8]']
ja ['short', 'loc_A97']
jmp ['short', 'loc_ACF']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
shr ['eax,', '1']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '10h']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0FFFFFFF0h']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReAlloc@AString@@AAEXI@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0AString@@AAE@IABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+Size]']
cmp ['ecx,', '[eax+4]']
jbe ['short', 'loc_B02']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@AString@@AAEXI@Z']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+Size]']
mov ['byte', 'ptr', '[edx+eax],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0AString@@AAE@ABV0@D@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['[ebp+Dst],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@AString@@QBEIXZ']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@AString@@AAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+Dst],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+Size],', 'eax']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+Size]']
mov ['dl,', '[ebp+arg_4]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+Size]']
mov ['byte', 'ptr', '[eax+1],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0AString@@AAE@PBDI0I@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+Dst],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Size]']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@AString@@AAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+Size]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??H@YG?AVAString@@ABV0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_8]']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0AString@@AAE@PBDI0I@Z']
mov ['eax,', '[ebp+var_4]']
or ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??H@YG?AVAString@@ABV0@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0AString@@AAE@PBDI0I@Z']
mov ['edx,', '[ebp+var_4]']
or ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??H@YG?AVAString@@PBDABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_8]']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0AString@@AAE@PBDI0I@Z']
mov ['edx,', '[ebp+var_4]']
or ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??0AString@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
push ['4']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0AString@@QAE@D@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@AString@@AAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0AString@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@AString@@AAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['?MyStringCopy@@YGXPADPBD@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0AString@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@AString@@AAEXI@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?MyStringCopy@@YGXPADPBD@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4AString@@QAEAAV0@D@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+8],', '1']
jnb ['short', 'loc_F1C']
push ['2']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4AString@@QAEAAV0@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jbe ['short', 'loc_FC1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?MyStringCopy@@YGXPADPBD@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4AString@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_101A']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_1088']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_106B']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?MyStringCopy@@YGXPADPBD@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetFromWStr_if_Ascii@AString@@QAEXPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_10D8']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx+ecx*2]']
mov ['word', 'ptr', '[ebp+var_C],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_C]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_10F0']
jmp ['short', 'loc_1103']
movzx ['edx,', 'word', 'ptr', '[ebp+var_C]']
cmp ['edx,', '80h']
jl ['short', 'loc_1101']
jmp ['loc_1192']
jmp ['short', 'loc_10CF']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_114B']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_116E']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['short', 'loc_1189']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['al,', '[ecx+eax*2]']
mov ['[edx],', 'al']
jmp ['short', 'loc_1165']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[ebp+var_18]']
mov ['byte', 'ptr', '[ecx],', '0']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add_Space@AString@@QAEXXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['20h']
mov ['ecx,', '[ebp+var_4]']
call ['??YAString@@QAEAAV0@D@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add_Space_if_NotEmpty@AString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1205']
mov ['ecx,', '[ebp+var_4]']
call ['?Add_Space@AString@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add_LF@AString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0Ah']
mov ['ecx,', '[ebp+var_4]']
call ['??YAString@@QAEAAV0@D@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YAString@@QAEAAV0@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow@AString@@AAEXI@Z']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+4]']
push ['ecx']
call ['?MyStringCopy@@YGXPADPBD@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??YAString@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow@AString@@AAEXI@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+4]']
push ['edx']
call ['?MyStringCopy@@YGXPADPBD@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetFrom@AString@@QAEXPBDI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Size]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_1382']
mov ['edx,', '[ebp+Size]']
add ['edx,', '1']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax+8],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_139E']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+Size]']
mov ['byte', 'ptr', '[ecx+edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax+4],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetFrom_CalcLen@AString@@QAEXPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_13F9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_1412']
mov ['edx,', '[ebp+Src]']
add ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_1410']
jmp ['short', 'loc_1412']
jmp ['short', 'loc_13F0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?SetFrom@AString@@QAEXPBDI@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Find@AString@@QBEHPBDI@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+SubStr]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?strstr@@YAPADPADPBD@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_147A']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_1484']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax]']
mov ['eax,', 'ecx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReverseFind@AString@@QBEHD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_14C5']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_150B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
lea ['edx,', '[edx+ecx-1]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
movsx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_14F1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax]']
mov ['eax,', 'ecx']
jmp ['short', 'loc_150B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_1500']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_150B']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_14D7']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReverseFind_PathSepar@AString@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_154C']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_159C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
lea ['edx,', '[edx+ecx-1]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'cl']
movsx ['edx,', 'byte', 'ptr', '[ebp+var_C+3]']
cmp ['edx,', '5Ch']
jz ['short', 'loc_1578']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_C+3]']
cmp ['eax,', '2Fh']
jnz ['short', 'loc_1582']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ecx]']
jmp ['short', 'loc_159C']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_1591']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_159C']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_155E']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?TrimLeft@AString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_15CD']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'cl']
movsx ['edx,', 'byte', 'ptr', '[ebp+var_C+3]']
cmp ['edx,', '20h']
jz ['short', 'loc_15F2']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_C+3]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_15F2']
movsx ['ecx,', 'byte', 'ptr', '[ebp+var_C+3]']
cmp ['ecx,', '9']
jz ['short', 'loc_15F2']
jmp ['short', 'loc_15F4']
jmp ['short', 'loc_15C4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[edx]']
mov ['[ebp+var_10],', 'eax']
jz ['short', 'loc_161E']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@AString@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?TrimRight@AString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_1666']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1697']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_C]']
mov ['al,', '[edx-1]']
mov ['byte', 'ptr', '[ebp+var_10+3],', 'al']
movsx ['ecx,', 'byte', 'ptr', '[ebp+var_10+3]']
cmp ['ecx,', '20h']
jz ['short', 'loc_1695']
movsx ['edx,', 'byte', 'ptr', '[ebp+var_10+3]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_1695']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_10+3]']
cmp ['eax,', '9']
jz ['short', 'loc_1695']
jmp ['short', 'loc_1697']
jmp ['short', 'loc_165D']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+4]']
jz ['short', 'loc_16B7']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[ecx+edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InsertAtFront@AString@@QAEXD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_16E4']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@AString@@AAEXXZ']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@AString@@AAEXII@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Insert@AString@@QAEXIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_1781']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?InsertSpace@AString@@AAEXAAII@Z']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '[ebp+Size]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Insert@AString@@QAEXIABV1@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_1805']
mov ['eax,', '[ebp+Size]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?InsertSpace@AString@@AAEXAAII@Z']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?RemoveChar@AString@@QAEXD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[edx]']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'al']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
movsx ['edx,', 'byte', 'ptr', '[ebp+var_C+3]']
test ['edx,', 'edx']
jnz ['short', 'loc_1860']
jmp ['short', 'loc_18C7']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_C+3]']
movsx ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_186E']
jmp ['short', 'loc_1870']
jmp ['short', 'loc_1845']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_14+3],', 'cl']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_14+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_1894']
jmp ['short', 'loc_18B3']
movsx ['ecx,', 'byte', 'ptr', '[ebp+var_14+3]']
movsx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_18B1']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_14+3]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_1879']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Replace@AString@@QAEXDD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movsx ['eax,', '[ebp+arg_0]']
movsx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_18F5']
jmp ['short', 'loc_193C']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+4]']
jnb ['short', 'loc_193C']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Find@AString@@QBEHDI@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_1923']
jmp ['short', 'loc_193C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[ebp+arg_4]']
mov ['[ecx+edx],', 'al']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_18FC']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Replace@AString@@QAEXABV1@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_197E']
jmp ['loc_1A07']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??8@YG_NABVAString@@0@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1994']
jmp ['short', 'loc_1A07']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ecx+4]']
jnb ['short', 'loc_1A07']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Find@AString@@QBEHPBDI@Z']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jge ['short', 'loc_19DC']
jmp ['short', 'loc_1A07']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Delete@AString@@QAEXII@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Insert@AString@@QAEXIABV1@@Z']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_19B1']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Delete@AString@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@AString@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Delete@AString@@QAEXII@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
cmp ['eax,', '[ecx+4]']
jbe ['short', 'loc_1A88']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_1AB0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@AString@@AAEXII@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?DeleteFrontal@AString@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1AF1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@AString@@AAEXII@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?InsertSpace@UString@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow@UString@@AAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@UString@@AAEXII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReAlloc@UString@@AAEXI@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jb ['short', 'loc_1B81']
cmp ['[ebp+arg_0],', '40000000h']
jb ['short', 'loc_1B96']
mov ['[ebp+var_C],', '13329ADh']
push ['offset', '__TI1H']
lea ['edx,', '[ebp+var_C]']
push ['edx']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReAlloc2@UString@@AAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '40000000h']
jb ['short', 'loc_1C4B']
mov ['[ebp+var_C],', '13329ADh']
push ['offset', '__TI1H']
lea ['eax,', '[ebp+var_C]']
push ['eax']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'eax']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStartLen@UString@@AAEXI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Grow_1@UString@@AAEXXZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '1']
add ['edx,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '0FFFFFFF0h']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReAlloc@UString@@AAEXI@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Grow@UString@@AAEXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_8]']
ja ['short', 'loc_1DB7']
jmp ['short', 'loc_1DEF']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
shr ['eax,', '1']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '10h']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0FFFFFFF0h']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReAlloc@UString@@AAEXI@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0UString@@AAE@IPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?MyStringLen@@YGIPB_W@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+var_8]']
jbe ['short', 'loc_1E31']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@UString@@AAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+edx*2],', 'cx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0UString@@AAE@IABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jbe ['short', 'loc_1EA2']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@UString@@AAEXI@Z']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0UString@@AAE@ABV0@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+Dst],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@UString@@AAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+Dst],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+Dst]']
mov ['ax,', '[ebp+arg_4]']
mov ['[edx+ecx*2],', 'ax']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+edx*2+2],', 'cx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0UString@@AAE@PB_WI0I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+Dst],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@UString@@AAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+Dst]']
lea ['ecx,', '[eax+edx*2]']
push ['ecx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??H@YG?AVUString@@ABV0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_8]']
call ['?Len@UString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@UString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@AAE@PB_WI0I@Z']
mov ['eax,', '[ebp+var_4]']
or ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??H@YG?AVUString@@ABV0@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?MyStringLen@@YGIPB_W@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@UString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@AAE@PB_WI0I@Z']
mov ['edx,', '[ebp+var_4]']
or ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??H@YG?AVUString@@PB_WABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_8]']
call ['?Len@UString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?MyStringLen@@YGIPB_W@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@AAE@PB_WI0I@Z']
mov ['edx,', '[ebp+var_4]']
or ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??0UString@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
push ['8']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
xor ['ecx,', 'ecx']
mov ['[eax],', 'cx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0UString@@QAE@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@UString@@AAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['dx,', '[ebp+arg_0]']
mov ['[ecx],', 'dx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
xor ['edx,', 'edx']
mov ['[ecx+2],', 'dx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0UString@@QAE@PB_W@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPB_W@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@UString@@AAEXI@Z']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0UString@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@UString@@AAEXI@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4UString@@QAEAAV0@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+8],', '1']
jnb ['short', 'loc_22EC']
push ['4']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['dx,', '[ebp+arg_0]']
mov ['[ecx],', 'dx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
xor ['edx,', 'edx']
mov ['[ecx+2],', 'dx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4UString@@QAEAAV0@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPB_W@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jbe ['short', 'loc_23A1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4UString@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_240D']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_2495']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_246E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetFromBstr@UString@@QAEXPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SysStringLen@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jbe ['short', 'loc_253C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_wmemcpy']
add ['esp,', '0Ch']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add_Space@UString@@QAEXXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['20h']
mov ['ecx,', '[ebp+var_4]']
call ['??YUString@@QAEAAV0@_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add_Space_if_NotEmpty@UString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_25C5']
mov ['ecx,', '[ebp+var_4]']
call ['?Add_Space@UString@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add_LF@UString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_2614']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '0Ah']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+edx*2],', 'cx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+eax*2],', 'dx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YUString@@QAEAAV0@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPB_W@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow@UString@@AAEXI@Z']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
lea ['edx,', '[ecx+edx*2]']
push ['edx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??YUString@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow@UString@@AAEXI@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
lea ['ecx,', '[eax+ecx*2]']
push ['ecx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+4]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetFrom@UString@@QAEXPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_27C2']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_27DE']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ecx+eax*2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+4],', 'edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetFromAscii@UString@@QAEXPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jbe ['short', 'loc_2897']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_28B1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_28CF']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_14]']
movzx ['cx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+edx*2],', 'cx']
jmp ['short', 'loc_28A8']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+edx*2],', 'cx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddAscii@UString@@QAEXPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow@UString@@AAEXI@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
lea ['eax,', '[edx+eax*2]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_2955']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_2973']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_10]']
movzx ['cx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+edx*2],', 'cx']
jmp ['short', 'loc_294C']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+edx*2],', 'cx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Find@UString@@QBEHPB_WI@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+SubStr]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
call ['?wcsstr@@YAPA_WPA_WPB_W@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_29DD']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_29E7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[edx]']
sar ['eax,', '1']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReverseFind@UString@@QBEH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_2A25']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_2A6D']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
lea ['edx,', '[ecx+edx*2-2]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
movzx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_2A53']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax]']
sar ['ecx,', '1']
mov ['eax,', 'ecx']
jmp ['short', 'loc_2A6D']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_2A62']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_2A6D']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '2']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2A37']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReverseFind_PathSepar@UString@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_2AAC']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_2B00']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
lea ['edx,', '[ecx+edx*2-2]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_C],', 'cx']
movzx ['edx,', 'word', 'ptr', '[ebp+var_C]']
cmp ['edx,', '5Ch']
jz ['short', 'loc_2ADA']
movzx ['eax,', 'word', 'ptr', '[ebp+var_C]']
cmp ['eax,', '2Fh']
jnz ['short', 'loc_2AE6']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ecx]']
sar ['eax,', '1']
jmp ['short', 'loc_2B00']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_2AF5']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_2B00']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '2']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2ABE']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?TrimLeft@UString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2B3D']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_C],', 'cx']
movzx ['edx,', 'word', 'ptr', '[ebp+var_C]']
cmp ['edx,', '20h']
jz ['short', 'loc_2B64']
movzx ['eax,', 'word', 'ptr', '[ebp+var_C]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_2B64']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_C]']
cmp ['ecx,', '9']
jz ['short', 'loc_2B64']
jmp ['short', 'loc_2B66']
jmp ['short', 'loc_2B34']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[edx]']
sar ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
jz ['short', 'loc_2B92']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@UString@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?TrimRight@UString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_2BD6']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2C0A']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax+edx*2-2]']
mov ['word', 'ptr', '[ebp+var_10],', 'cx']
movzx ['edx,', 'word', 'ptr', '[ebp+var_10]']
cmp ['edx,', '20h']
jz ['short', 'loc_2C08']
movzx ['eax,', 'word', 'ptr', '[ebp+var_10]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_2C08']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_10]']
cmp ['ecx,', '9']
jz ['short', 'loc_2C08']
jmp ['short', 'loc_2C0A']
jmp ['short', 'loc_2BCD']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[edx+4]']
jz ['short', 'loc_2C2C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[edx+ecx*2],', 'ax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InsertAtFront@UString@@QAEX_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_2C54']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@UString@@AAEXII@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['dx,', '[ebp+arg_0]']
mov ['[ecx],', 'dx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Insert@UString@@QAEXIPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?MyStringLen@@YGIPB_W@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2CF4']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?InsertSpace@UString@@AAEXII@Z']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Insert@UString@@QAEXIABV1@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2D78']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?InsertSpace@UString@@AAEXII@Z']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
push ['eax']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?RemoveChar@UString@@QAEX_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ax,', '[edx]']
mov ['word', 'ptr', '[ebp+var_C],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2']
mov ['[ebp+var_8],', 'ecx']
movzx ['edx,', 'word', 'ptr', '[ebp+var_C]']
test ['edx,', 'edx']
jnz ['short', 'loc_2DD2']
jmp ['short', 'loc_2E41']
movzx ['eax,', 'word', 'ptr', '[ebp+var_C]']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_2DE0']
jmp ['short', 'loc_2DE2']
jmp ['short', 'loc_2DB5']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '2']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_14],', 'cx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_14]']
test ['eax,', 'eax']
jnz ['short', 'loc_2E08']
jmp ['short', 'loc_2E29']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_14]']
movzx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_2E27']
mov ['eax,', '[ebp+var_10]']
mov ['cx,', 'word', 'ptr', '[ebp+var_14]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '2']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_2DEB']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[edx]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Replace@UString@@QAEX_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_2E75']
jmp ['short', 'loc_2EBE']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+4]']
jnb ['short', 'loc_2EBE']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Find@UString@@QBEH_WI@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_2EA3']
jmp ['short', 'loc_2EBE']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['ax,', '[ebp+arg_4]']
mov ['[ecx+edx*2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2E7C']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Replace@UString@@QAEXABV1@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2EFE']
jmp ['loc_2F87']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??8@YG_NABVUString@@0@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2F14']
jmp ['short', 'loc_2F87']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ecx+4]']
jnb ['short', 'loc_2F87']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Find@UString@@QBEHPB_WI@Z']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jge ['short', 'loc_2F5C']
jmp ['short', 'loc_2F87']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Delete@UString@@QAEXII@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Insert@UString@@QAEXIABV1@@Z']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_2F31']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Delete@UString@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@UString@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Delete@UString@@QAEXII@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
cmp ['eax,', '[ecx+4]']
jbe ['short', 'loc_3008']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_3030']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@UString@@AAEXII@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?DeleteFrontal@UString@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3071']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@UString@@AAEXII@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReAlloc2@UString2@@AAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '40000000h']
jb ['short', 'loc_30CC']
mov ['[ebp+var_8],', '13329ADh']
push ['offset', '__TI1H']
lea ['eax,', '[ebp+var_8]']
push ['eax']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStartLen@UString2@@AAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0UString2@@QAE@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPB_W@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@UString2@@AAEXI@Z']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0UString2@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_3236']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStartLen@UString2@@AAEXI@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4UString2@@QAEAAV0@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPB_W@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+4]']
jbe ['short', 'loc_32D0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_32C8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?MyStringCopy@@YGXPA_WPB_W@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetFromAscii@UString2@@QAEXPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+4]']
jbe ['short', 'loc_3386']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_337E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_33A0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['short', 'loc_33BE']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_14]']
movzx ['ax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_3397']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+4],', 'ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4UString2@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_341A']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_3497']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+4]']
jbe ['short', 'loc_347A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_3472']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['?MyStringCopy@@YGXPA_WPB_W@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8@YG_NABVUString2@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString2@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@UString2@@QBEIXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_3512']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@UString2@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_3509']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetRawPtr@UString2@@QBEPB_WXZ']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetRawPtr@UString2@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcscmp']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_3512']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_3519']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??8@YG_NABVUString2@@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@UString2@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3552']
mov ['ecx,', '[ebp+Str2]']
movzx ['eax,', 'word', 'ptr', '[ecx]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
jmp ['short', 'loc_3578']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+Str2]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetRawPtr@UString2@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcscmp']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
??8@YG_NPB_WABVUString2@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['ecx,', '[ebp+arg_4]']
call ['?IsEmpty@UString2@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_35B2']
mov ['ecx,', '[ebp+Str1]']
movzx ['eax,', 'word', 'ptr', '[ecx]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
jmp ['short', 'loc_35D8']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetRawPtr@UString2@@QBEPB_WXZ']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__wcscmp']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?fs2fas@@YG?AVAString@@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?fs2fas@@YG?AVAString@@PB_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '1']
call ['?GetCurrentCodePage@@YGIXZ']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z']
mov ['eax,', '[ebp+var_1C]']
or ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetCurrentCodePage@@YGIXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__AreFileApisANSI@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
?fas2fs@@YG?AVUString@@ABVAString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
call ['?GetCurrentCodePage@@YGIXZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z']
mov ['edx,', '[ebp+var_4]']
or ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?MyCharLower_Ascii@@YGDD@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
movsx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '41h']
jl ['short', 'loc_372A']
movsx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '5Ah']
jg ['short', 'loc_372A']
movzx ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
jmp ['short', 'loc_372D']
mov ['al,', '[ebp+arg_0]']
pop ['ebp']
retn ['4']
endp
?MyCharLower_Ascii@@YG_W_W@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '41h']
jl ['short', 'loc_3752']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '5Ah']
jg ['short', 'loc_3752']
movzx ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
jmp ['short', 'loc_3756']
mov ['ax,', '[ebp+arg_0]']
pop ['ebp']
retn ['4']
endp
?MyCharUpper@@YG_W_W@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '61h']
jge ['short', 'loc_376E']
mov ['ax,', '[ebp+arg_0]']
jmp ['short', 'loc_3799']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '7Ah']
jg ['short', 'loc_3780']
movzx ['eax,', '[ebp+arg_0]']
sub ['eax,', '20h']
jmp ['short', 'loc_3799']
movzx ['edx,', '[ebp+arg_0]']
cmp ['edx,', '7Fh']
jg ['short', 'loc_378F']
mov ['ax,', '[ebp+arg_0]']
jmp ['short', 'loc_3799']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyCharUpper_WIN@@YG_W_W@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?MoveItems@AString@@AAEXII@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MyStringLen@@YGIPBD@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_3885']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_3894']
jmp ['short', 'loc_387C']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyStringCopy@@YGXPADPBD@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
test ['ecx,', 'ecx']
jz ['short', 'loc_38DA']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_38E1']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_38E9']
jmp ['short', 'loc_38AB']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??YAString@@QAEAAV0@D@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_3924']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@AString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsEmpty@AString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?strstr@@YAPADPADPBD@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+SubStr]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
?Find@AString@@QBEHDI@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?FindCharPosInString@@YGHPBDD@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_39FB']
mov ['[ebp+var_C],', '0FFFFFFFFh']
jmp ['short', 'loc_3A04']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??8@YG_NABVAString@@0@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@AString@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@AString@@QBEIXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_3A61']
mov ['ecx,', '[ebp+arg_4]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3A61']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_3A68']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?MoveItems@UString@@AAEXII@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+ecx+2]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[ecx+edx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
_wmemcpy        proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
?MyStringLen@@YGIPB_W@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_3B15']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
test ['eax,', 'eax']
jz ['short', 'loc_3B25']
jmp ['short', 'loc_3B0C']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YUString@@QAEAAV0@_W@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_3B94']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+eax*2],', 'dx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?wcsstr@@YAPA_WPA_WPB_W@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+SubStr]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__wcsstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
?Find@UString@@QBEH_WI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
call ['?FindCharPosInString@@YGHPB_W_W@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_3C72']
mov ['[ebp+var_C],', '0FFFFFFFFh']
jmp ['short', 'loc_3C7B']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??8@YG_NABVUString@@0@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@UString@@QBEIXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_3CE3']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcscmp']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_3CE3']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_3CEA']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?MyStringCopy@@YGXPA_WPB_W@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '2']
mov ['[ebp+arg_4],', 'eax']
test ['ecx,', 'ecx']
jz ['short', 'loc_3D3C']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_3D43']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3D4B']
jmp ['short', 'loc_3D0B']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Len@UString2@@QBEIXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@UString2@@QBE_NXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetRawPtr@UString2@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?fs2fas@@YG?AVAString@@PB_W@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?fs2fas@@YG?AVAString@@PB_W@Z$1 proc near
mov ['eax,', '[ebp-1Ch]']
and ['eax,', '1']
jz ['locret_3DC4']
and ['dword', 'ptr', '[ebp-1Ch],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1AString@@QAE@XZ']
retn
endp
__ehhandler$?fs2fas@@YG?AVAString@@PB_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?fs2fas@@YG?AVAString@@PB_W@Z']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

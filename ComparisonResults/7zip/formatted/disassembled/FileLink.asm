?WriteString@NFile@NWindows@@YGXPAEPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_4],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_4]']
test ['eax,', 'eax']
jnz ['short', 'loc_38']
jmp ['short', 'loc_4D']
mov ['ecx,', '[ebp+this]']
mov ['dx,', 'word', 'ptr', '[ebp+var_4]']
mov ['[ecx],', 'dx']
mov ['eax,', '[ebp+this]']
add ['eax,', '2']
mov ['[ebp+this],', 'eax']
jmp ['short', 'loc_1B']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?FillLinkData@NFile@NWindows@@YG_NAAV?$CBuffer@E@@PB_W_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?IsAbsolutePath@NName@NFile@NWindows@@YG_NPB_W@Z']
mov ['[ebp+var_1],', 'al']
movzx ['ecx,', '[ebp+var_1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_99']
movzx ['edx,', '[ebp+arg_8]']
test ['edx,', 'edx']
jnz ['short', 'loc_99']
xor ['al,', 'al']
jmp ['loc_269']
mov ['[ebp+var_2],', '1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_CA']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '8']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_CA']
mov ['[ebp+var_2],', '0']
movzx ['edx,', '[ebp+var_1]']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?MyStringLen@@YGIPB_W@Z']
shl ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+var_10],', 'eax']
movzx ['ecx,', '[ebp+var_2]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_101']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'edx']
mov ['al,', '[ebp+arg_8]']
mov ['[ebp+var_15],', 'al']
movzx ['ecx,', '[ebp+var_15]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_121']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '4']
mov ['[ebp+var_14],', 'edx']
movzx ['eax,', '[ebp+arg_8]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '4']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[eax+ecx+10h]']
mov ['[ebp+Size],', 'edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
movzx ['edx,', '[ebp+arg_8]']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '9']
add ['edx,', '0A0000003h']
mov ['[ebp+var_20],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+Size]']
sub ['edx,', '8']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+4],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+6],', 'cx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '8']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_2C],', '0']
movzx ['ecx,', '[ebp+var_15]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1BD']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_28],', 'edx']
jmp ['short', 'loc_1C6']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '2']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['dx,', 'word', 'ptr', '[ebp+var_28]']
mov ['[ecx],', 'dx']
mov ['eax,', '[ebp+var_24]']
mov ['cx,', 'word', 'ptr', '[ebp+var_10]']
mov ['[eax+2],', 'cx']
mov ['edx,', '[ebp+var_24]']
mov ['ax,', 'word', 'ptr', '[ebp+var_2C]']
mov ['[edx+4],', 'ax']
mov ['ecx,', '[ebp+var_24]']
mov ['dx,', 'word', 'ptr', '[ebp+var_C]']
mov ['[ecx+6],', 'dx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '8']
mov ['[ebp+var_24],', 'eax']
movzx ['ecx,', '[ebp+arg_8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_221']
movzx ['edx,', '[ebp+var_1]']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '4']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_239']
mov ['eax,', 'ds:_k_LinkPrefix']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '[ebp+var_28]']
push ['ecx']
call ['?WriteString@NFile@NWindows@@YGXPAEPB_W@Z']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?WriteString@NFile@NWindows@@YGXPAEPB_W@Z']
movzx ['eax,', '[ebp+var_2]']
test ['eax,', 'eax']
jz ['short', 'loc_267']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '[ebp+var_2C]']
push ['edx']
call ['?WriteString@NFile@NWindows@@YGXPAEPB_W@Z']
mov ['al,', '1']
pop ['edi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Parse@CReparseAttr@NFile@NWindows@@QAE_NPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '8']
jnb ['short', 'loc_2AD']
xor ['al,', 'al']
jmp ['loc_41A']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '8']
cmp ['edx,', '[ebp+arg_4]']
jbe ['short', 'loc_2D3']
xor ['al,', 'al']
jmp ['loc_41A']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0A0000003h']
jz ['short', 'loc_2F0']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0A000000Ch']
jz ['short', 'loc_2F0']
xor ['al,', 'al']
jmp ['loc_41A']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+6]']
test ['eax,', 'eax']
jz ['short', 'loc_302']
xor ['al,', 'al']
jmp ['loc_41A']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '8']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_323']
xor ['al,', 'al']
jmp ['loc_41A']
cmp ['[ebp+var_8],', '8']
jnb ['short', 'loc_330']
xor ['al,', 'al']
jmp ['loc_41A']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+6]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0A000000Ch']
jnz ['short', 'loc_3A8']
cmp ['[ebp+var_8],', '4']
jnb ['short', 'loc_38B']
xor ['al,', 'al']
jmp ['loc_41A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ecx+4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '4']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '4']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '1']
jnz ['short', 'loc_3C3']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_8]']
ja ['short', 'loc_3C3']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_10]']
jnb ['short', 'loc_3C7']
xor ['al,', 'al']
jmp ['short', 'loc_41A']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '1']
jnz ['short', 'loc_3E2']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_8]']
ja ['short', 'loc_3E2']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_18]']
jnb ['short', 'loc_3E6']
xor ['al,', 'al']
jmp ['short', 'loc_41A']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
shr ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_C]']
push ['edx']
call ['?GetString@NFile@NWindows@@YGXPBEIAAVUString@@@Z']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '14h']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
shr ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_14]']
push ['edx']
call ['?GetString@NFile@NWindows@@YGXPBEIAAVUString@@@Z']
mov ['al,', '1']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetString@NFile@NWindows@@YGXPBEIAAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?GetBuf@UString@@QAEPA_WI@Z']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_46C']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_4]']
jnb ['short', 'loc_49C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['word', 'ptr', '[ebp+var_C],', 'dx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_48C']
jmp ['short', 'loc_49C']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['ax,', 'word', 'ptr', '[ebp+var_C]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_463']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+edx*2],', 'cx']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?ReleaseBuf_SetLen@UString@@QAEXI@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Parse@CReparseShortInfo@NFile@NWindows@@QAE_NPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
cmp ['[ebp+arg_4],', '8']
jnb ['short', 'loc_51C']
xor ['al,', 'al']
jmp ['loc_64E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
cmp ['ecx,', '[ebp+arg_4]']
jbe ['short', 'loc_540']
xor ['al,', 'al']
jmp ['loc_64E']
cmp ['[ebp+var_C],', '0A0000003h']
jz ['short', 'loc_559']
cmp ['[ebp+var_C],', '0A000000Ch']
jz ['short', 'loc_559']
xor ['al,', 'al']
jmp ['loc_64E']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+6]']
test ['eax,', 'eax']
jz ['short', 'loc_56B']
xor ['al,', 'al']
jmp ['loc_64E']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '8']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_58C']
xor ['al,', 'al']
jmp ['loc_64E']
cmp ['[ebp+var_10],', '8']
jnb ['short', 'loc_599']
xor ['al,', 'al']
jmp ['loc_64E']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+4]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+6]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
mov ['[ebp+arg_0],', 'ecx']
cmp ['[ebp+var_C],', '0A000000Ch']
jnz ['short', 'loc_5F7']
cmp ['[ebp+var_10],', '4']
jnb ['short', 'loc_5E5']
xor ['al,', 'al']
jmp ['short', 'loc_64E']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_14]']
and ['ecx,', '1']
jnz ['short', 'loc_612']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_10]']
ja ['short', 'loc_612']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_18]']
jnb ['short', 'loc_616']
xor ['al,', 'al']
jmp ['short', 'loc_64E']
mov ['ecx,', '[ebp+var_1C]']
and ['ecx,', '1']
jnz ['short', 'loc_631']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_10]']
ja ['short', 'loc_631']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_635']
xor ['al,', 'al']
jmp ['short', 'loc_64E']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+4],', 'ecx']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsOkNamePair@CReparseAttr@NFile@NWindows@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?IsLinkPrefix@NFile@NWindows@@YG?B_NPB_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6E2']
push ['4']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
call ['?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6AE']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['?IsEmpty@UString@@QBE_NXZ']
jmp ['short', 'loc_713']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['??BUString@@QBEPB_WXZ']
mov ['esi,', 'esp']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcscmp']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6E2']
mov ['al,', '1']
jmp ['short', 'loc_713']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['??BUString@@QBEPB_WXZ']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcscmp']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsLinkPrefix@NFile@NWindows@@YG?B_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'ds:_k_LinkPrefix']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?IsString1PrefixedByString2@@YG_NPB_W0@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '8']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_20]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?IsLinkPrefix@NFile@NWindows@@YG?B_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_7F1']
push ['5Ch']
push ['1']
lea ['ecx,', '[ebp+var_20]']
call ['?ReplaceOneCharAtPos@UString@@QAEXI_W@Z']
push ['4']
lea ['ecx,', '[ebp+var_20]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
call ['?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7F1']
push ['4']
lea ['ecx,', '[ebp+var_20]']
call ['?DeleteFrontal@UString@@QAEXI@Z']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_28]']
or ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '38h']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Free@?$CBuffer@E@@QAEXXZ']
lea ['ecx,', '[ebp+var_20]']
call ['??0CInFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8DA']
mov ['[ebp+var_41],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1CInFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_41]']
jmp ['loc_985']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_8EC']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z']
mov ['[ebp+var_28],', '4000h']
push ['4000h']
lea ['ecx,', '[ebp+var_30]']
call ['??0?$CObjArray@E@@QAE@I@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['eax,', '[ebp+Size]']
push ['eax']
push ['4000h']
lea ['ecx,', '[ebp+var_30]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
push ['eax']
push ['900A8h']
lea ['ecx,', '[ebp+var_20]']
call ['?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_94E']
mov ['[ebp+var_42],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CObjArray@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1CInFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_42]']
jmp ['short', 'loc_985']
mov ['edx,', '[ebp+Size]']
push ['edx']
lea ['ecx,', '[ebp+var_30]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z']
mov ['[ebp+var_43],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CObjArray@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1CInFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_43]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '84h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_90]']
mov ['ecx,', '21h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_48]']
call ['??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+this]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
call ['?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_AAB']
lea ['ecx,', '[ebp+var_48]']
call ['?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ']
movzx ['edx,', 'al']
movzx ['eax,', 'byte', 'ptr', '[ebp+arg_4]']
cmp ['edx,', 'eax']
jz ['short', 'loc_AA6']
mov ['esi,', 'esp']
push ['10Bh']
call ['dword', 'ptr', 'ds:__imp__SetLastError@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_89],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_89]']
jmp ['loc_C16']
jmp ['loc_B49']
movzx ['ecx,', 'byte', 'ptr', '[ebp+arg_4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_AE6']
mov ['edx,', '[ebp+this]']
push ['edx']
call ['?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_AE4']
mov ['[ebp+var_8A],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_8A]']
jmp ['loc_C16']
jmp ['short', 'loc_B49']
mov ['ecx,', '[ebp+this]']
push ['ecx']
call ['?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z']
lea ['ecx,', '[ebp+var_60]']
call ['??0COutFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
push ['1']
mov ['edx,', '[ebp+this]']
push ['edx']
lea ['ecx,', '[ebp+var_60]']
call ['?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_B3D']
mov ['[ebp+var_8B],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_60]']
call ['??1COutFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_8B]']
jmp ['loc_C16']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_60]']
call ['??1COutFile@NIO@NFile@NWindows@@QAE@XZ']
lea ['ecx,', '[ebp+var_78]']
call ['??0COutFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
push ['2200000h']
push ['3']
push ['2']
mov ['ecx,', '[ebp+this]']
push ['ecx']
lea ['ecx,', '[ebp+var_78]']
call ['?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_B9B']
mov ['[ebp+var_8C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_78]']
call ['??1COutFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_8C]']
jmp ['short', 'loc_C16']
push ['0']
lea ['eax,', '[ebp+BytesReturned]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+nInBufferSize]']
push ['ecx']
mov ['edx,', '[ebp+lpInBuffer]']
push ['edx']
push ['900A4h']
lea ['ecx,', '[ebp+var_78]']
call ['?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_BEE']
mov ['[ebp+var_8D],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_78]']
call ['??1COutFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_8D]']
jmp ['short', 'loc_C16']
mov ['[ebp+var_8E],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_78]']
call ['??1COutFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['al,', '[ebp+var_8E]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '90h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['?ReverseFind_PathSepar@UString@@QBEHXZ']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jge ['short', 'loc_D1B']
mov ['byte', 'ptr', '[ebp+var_28+3],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['al,', 'byte', 'ptr', '[ebp+var_28+3]']
jmp ['short', 'loc_D79']
cmp ['[ebp+var_24],', '2']
jnz ['short', 'loc_D4A']
lea ['ecx,', '[ebp+var_1C]']
call ['??BUString@@QBEPB_WXZ']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
cmp ['ecx,', '3Ah']
jnz ['short', 'loc_D4A']
mov ['byte', 'ptr', '[ebp+var_28+2],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['al,', 'byte', 'ptr', '[ebp+var_28+2]']
jmp ['short', 'loc_D79']
mov ['edx,', '[ebp+var_24]']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['?DeleteFrom@UString@@QAEXI@Z']
lea ['ecx,', '[ebp+var_1C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z']
mov ['byte', 'ptr', '[ebp+var_28+1],', 'al']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['al,', 'byte', 'ptr', '[ebp+var_28+1]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyStringLen@@YGIPB_W@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_DE9']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
test ['eax,', 'eax']
jz ['short', 'loc_DF9']
jmp ['short', 'loc_DE0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetBuf@UString@@QAEPA_WI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_E29']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReAlloc2@UString@@AAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReleaseBuf_SetLen@UString@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Ptr@UString@@QBEPB_WI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ$1 proc near
mov ['eax,', '[ebp-28h]']
and ['eax,', '1']
jz ['locret_ED8']
and ['dword', 'ptr', '[ebp-28h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__ehhandler$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1CInFile@NIO@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z$1 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1?$CObjArray@E@@QAE@XZ']
endp
__ehhandler$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-40h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z$0 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z$1 proc near
lea ['ecx,', '[ebp-60h]']
jmp ['??1COutFile@NIO@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z$2 proc near
lea ['ecx,', '[ebp-78h]']
jmp ['??1COutFile@NIO@NFile@NWindows@@QAE@XZ']
endp
__ehhandler$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-90h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReplaceOneCharAtPos@UString@@QAEXI_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[ebp+arg_4]']
mov ['[ecx+edx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+lpBytesReturned]']
push ['eax']
mov ['ecx,', '[ebp+nOutBufferSize]']
push ['ecx']
mov ['edx,', '[ebp+lpOutBuffer]']
push ['edx']
push ['0']
push ['0']
mov ['eax,', '[ebp+dwIoControlCode]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpOverlapped]']
push ['eax']
mov ['ecx,', '[ebp+lpBytesReturned]']
push ['ecx']
mov ['edx,', '[ebp+nOutBufferSize]']
push ['edx']
mov ['eax,', '[ebp+lpOutBuffer]']
push ['eax']
mov ['ecx,', '[ebp+nInBufferSize]']
push ['ecx']
mov ['edx,', '[ebp+lpInBuffer]']
push ['edx']
mov ['eax,', '[ebp+dwIoControlCode]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DeviceIoControl@32']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['?BOOLToBool@@YG_NH@Z']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
?BOOLToBool@@YG_NH@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0']
setnz ['al']
pop ['ebp']
retn ['4']
endp
?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpFileInformation]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetFileInformationByHandle@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['?BOOLToBool@@YG_NH@Z']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['2200000h']
push ['3']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CInFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFileBase@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CInFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFileBase@NIO@NFile@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['10h']
mov ['ecx,', '[ebp+var_4]']
call ['?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+20h]']
and ['eax,', '[ebp+arg_0]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?DeleteFrom@UString@@QAEXI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_12CC']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFileBase@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFileBase@NIO@NFile@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Free@?$CBuffer@E@@QAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_13E0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QAEPAEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@?$CBuffer@E@@QAEXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_1460']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@?$CBuffer@E@@QAEXXZ']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1460']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_14A6']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0?$CObjArray@E@@QAE@I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_14F5']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjArray@E@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@E@@QAEPAEXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

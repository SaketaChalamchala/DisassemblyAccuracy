?Free@CDecoder@NZ@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_MyFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_MyFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_MyFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CDecoder@NZ@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NZ@NCompress@@6B@']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CDecoder@NZ@NCompress@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CodeReal@CDecoder@NZ@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CodeReal@CDecoder@NZ@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '124h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_40]']
call ['??0CInBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??0COutBuffer@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
push ['100000h']
lea ['ecx,', '[ebp+var_40]']
call ['?Create@CInBuffer@@QAE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_144']
mov ['[ebp+var_FC],', '8007000Eh']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_FC]']
jmp ['loc_8D4']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+var_40]']
call ['?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z']
lea ['ecx,', '[ebp+var_40]']
call ['?Init@CInBufferBase@@QAEXXZ']
push ['100000h']
lea ['ecx,', '[ebp+var_70]']
call ['?Create@COutBuffer@@QAE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_19C']
mov ['[ebp+var_100],', '8007000Eh']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_100]']
jmp ['loc_8D4']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_70]']
call ['?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z']
lea ['ecx,', '[ebp+var_70]']
call ['?Init@COutBuffer@@QAEXXZ']
push ['3']
lea ['edx,', '[ebp+var_8C]']
push ['edx']
lea ['ecx,', '[ebp+var_40]']
call ['?ReadBytes@CInBufferBase@@QAEIPAEI@Z']
cmp ['eax,', '3']
jnb ['short', 'loc_1F6']
mov ['[ebp+var_104],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_104]']
jmp ['loc_8D4']
movzx ['eax,', '[ebp+var_8C]']
cmp ['eax,', '1Fh']
jnz ['short', 'loc_211']
movzx ['ecx,', '[ebp+var_8B]']
cmp ['ecx,', '9Dh']
jz ['short', 'loc_241']
mov ['[ebp+var_108],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_108]']
jmp ['loc_8D4']
mov ['dl,', '[ebp+var_8A]']
mov ['[ebp+var_91],', 'dl']
movzx ['eax,', '[ebp+var_91]']
and ['eax,', '60h']
jz ['short', 'loc_289']
mov ['[ebp+var_10C],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_10C]']
jmp ['loc_8D4']
movzx ['ecx,', '[ebp+var_91]']
and ['ecx,', '1Fh']
mov ['[ebp+var_98],', 'ecx']
cmp ['[ebp+var_98],', '9']
jb ['short', 'loc_2AB']
cmp ['[ebp+var_98],', '10h']
jbe ['short', 'loc_2DB']
mov ['[ebp+var_110],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_110]']
jmp ['loc_8D4']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_98]']
shl ['edx,', 'cl']
mov ['[ebp+var_9C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_98]']
cmp ['ecx,', '[eax+14h]']
jnz ['short', 'loc_31B']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jz ['short', 'loc_31B']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_31B']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jnz ['loc_412']
mov ['ecx,', '[ebp+var_14]']
call ['?Free@CDecoder@NZ@NCompress@@QAEXXZ']
mov ['edx,', '[ebp+var_9C]']
shl ['edx,', '1']
push ['edx']
call ['_MyAlloc@4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jnz ['short', 'loc_370']
mov ['[ebp+var_114],', '8007000Eh']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_114]']
jmp ['loc_8D4']
mov ['eax,', '[ebp+var_9C]']
push ['eax']
call ['_MyAlloc@4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jnz ['short', 'loc_3BB']
mov ['[ebp+var_118],', '8007000Eh']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_118]']
jmp ['loc_8D4']
mov ['eax,', '[ebp+var_9C]']
push ['eax']
call ['_MyAlloc@4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[edx+10h],', '0']
jnz ['short', 'loc_406']
mov ['[ebp+var_11C],', '8007000Eh']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_11C]']
jmp ['loc_8D4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax+14h],', 'ecx']
mov ['[ebp+var_A4],', '0']
mov ['[ebp+var_A0],', '0']
movzx ['edx,', '[ebp+var_91]']
and ['edx,', '80h']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '0FFFF0100h']
add ['edx,', '10000h']
mov ['[ebp+var_A8],', 'edx']
mov ['[ebp+var_AC],', '9']
xor ['eax,', 'eax']
cmp ['[ebp+var_A8],', '100h']
setz ['al']
add ['eax,', '100h']
mov ['[ebp+var_B0],', 'eax']
mov ['[ebp+var_B1],', '0']
mov ['[ebp+var_B8],', '0']
mov ['[ebp+var_BC],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8]']
xor ['eax,', 'eax']
mov ['[edx+200h],', 'ax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+0Ch]']
mov ['byte', 'ptr', '[edx+100h],', '0']
mov ['[ebp+var_C0],', '0']
mov ['eax,', '[ebp+var_BC]']
cmp ['eax,', '[ebp+var_B8]']
jnz ['loc_5D6']
mov ['ecx,', '[ebp+var_AC]']
push ['ecx']
lea ['edx,', '[ebp+var_8C]']
push ['edx']
lea ['ecx,', '[ebp+var_40]']
call ['?ReadBytes@CInBufferBase@@QAEIPAEI@Z']
shl ['eax,', '3']
mov ['[ebp+var_BC],', 'eax']
mov ['[ebp+var_B8],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
mov ['[ebp+var_CC],', 'eax']
mov ['[ebp+var_C8],', 'edx']
cmp ['[ebp+arg_10],', '0']
jz ['loc_5D6']
mov ['eax,', '[ebp+var_CC]']
sub ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_C8]']
sbb ['ecx,', '[ebp+var_A0]']
mov ['[ebp+var_12C],', 'eax']
mov ['[ebp+var_128],', 'ecx']
cmp ['[ebp+var_128],', '0']
ja ['short', 'loc_544']
cmp ['[ebp+var_12C],', '2000h']
jb ['loc_5D6']
mov ['edx,', '[ebp+var_CC]']
mov ['[ebp+var_A4],', 'edx']
mov ['eax,', '[ebp+var_C8]']
mov ['[ebp+var_A0],', 'eax']
lea ['ecx,', '[ebp+var_40]']
call ['?GetProcessedSize@CInBufferBase@@QBE_KXZ']
mov ['[ebp+var_DC],', 'eax']
mov ['[ebp+var_D8],', 'edx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_CC]']
push ['ecx']
lea ['edx,', '[ebp+var_DC]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ecx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E4],', 'eax']
cmp ['[ebp+var_E4],', '0']
jz ['short', 'loc_5D6']
mov ['ecx,', '[ebp+var_E4]']
mov ['[ebp+var_120],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_120]']
jmp ['loc_8D4']
mov ['edx,', '[ebp+var_B8]']
shr ['edx,', '3']
mov ['[ebp+var_E8],', 'edx']
mov ['eax,', '[ebp+var_E8]']
movzx ['ecx,', '[ebp+eax+var_8C]']
mov ['edx,', '[ebp+var_E8]']
movzx ['eax,', '[ebp+edx+var_8B]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_E8]']
movzx ['eax,', '[ebp+edx+var_8A]']
shl ['eax,', '10h']
or ['ecx,', 'eax']
mov ['[ebp+var_EC],', 'ecx']
mov ['ecx,', '[ebp+var_B8]']
and ['ecx,', '7']
mov ['edx,', '[ebp+var_EC]']
shr ['edx,', 'cl']
mov ['[ebp+var_EC],', 'edx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_AC]']
shl ['eax,', 'cl']
sub ['eax,', '1']
and ['eax,', '[ebp+var_EC]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+var_B8]']
add ['ecx,', '[ebp+var_AC]']
mov ['[ebp+var_B8],', 'ecx']
mov ['edx,', '[ebp+var_B8]']
cmp ['edx,', '[ebp+var_BC]']
jbe ['short', 'loc_677']
jmp ['loc_865']
mov ['eax,', '[ebp+var_EC]']
cmp ['eax,', '[ebp+var_B0]']
jb ['short', 'loc_694']
mov ['[ebp+var_C0],', '1']
jmp ['loc_865']
mov ['ecx,', '[ebp+var_EC]']
cmp ['ecx,', '[ebp+var_A8]']
jnz ['short', 'loc_6D8']
mov ['[ebp+var_B8],', '0']
mov ['edx,', '[ebp+var_B8]']
mov ['[ebp+var_BC],', 'edx']
mov ['[ebp+var_AC],', '9']
mov ['[ebp+var_B0],', '101h']
mov ['[ebp+var_B1],', '0']
jmp ['loc_4AE']
mov ['eax,', '[ebp+var_EC]']
mov ['[ebp+var_F0],', 'eax']
mov ['[ebp+var_F4],', '0']
cmp ['[ebp+var_F0],', '100h']
jb ['short', 'loc_73F']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
mov ['eax,', '[ebp+var_F4]']
mov ['esi,', '[ebp+var_F0]']
mov ['dl,', '[edx+esi]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_F4]']
add ['eax,', '1']
mov ['[ebp+var_F4],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_F0]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*2]']
mov ['[ebp+var_F0],', 'ecx']
jmp ['short', 'loc_6EE']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+10h]']
mov ['ecx,', '[ebp+var_F4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_F0]']
mov ['[eax+ecx],', 'dl']
mov ['eax,', '[ebp+var_F4]']
add ['eax,', '1']
mov ['[ebp+var_F4],', 'eax']
movzx ['ecx,', '[ebp+var_B1]']
test ['ecx,', 'ecx']
jz ['short', 'loc_7A3']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_B0]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_F0]']
mov ['[ecx+eax-1],', 'dl']
mov ['eax,', '[ebp+var_B0]']
sub ['eax,', '1']
cmp ['[ebp+var_EC],', 'eax']
jnz ['short', 'loc_7A3']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+10h]']
mov ['al,', 'byte', 'ptr', '[ebp+var_F0]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_F4]']
sub ['ecx,', '1']
mov ['[ebp+var_F4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+10h]']
mov ['ecx,', '[ebp+var_F4]']
movzx ['edx,', 'byte', 'ptr', '[eax+ecx]']
push ['edx']
lea ['ecx,', '[ebp+var_70]']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
cmp ['[ebp+var_F4],', '0']
ja ['short', 'loc_7A3']
mov ['eax,', '[ebp+var_B0]']
cmp ['eax,', '[ebp+var_9C]']
jnb ['short', 'loc_859']
mov ['[ebp+var_B1],', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_B0]']
mov ['cx,', 'word', 'ptr', '[ebp+var_EC]']
mov ['[edx+eax*2],', 'cx']
mov ['edx,', '[ebp+var_B0]']
add ['edx,', '1']
mov ['[ebp+var_B0],', 'edx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_AC]']
shl ['eax,', 'cl']
cmp ['[ebp+var_B0],', 'eax']
jbe ['short', 'loc_857']
mov ['ecx,', '[ebp+var_AC]']
cmp ['ecx,', '[ebp+var_98]']
jnb ['short', 'loc_857']
mov ['[ebp+var_B8],', '0']
mov ['edx,', '[ebp+var_B8]']
mov ['[ebp+var_BC],', 'edx']
mov ['eax,', '[ebp+var_AC]']
add ['eax,', '1']
mov ['[ebp+var_AC],', 'eax']
jmp ['short', 'loc_860']
mov ['[ebp+var_B1],', '0']
jmp ['loc_4AE']
lea ['ecx,', '[ebp+var_40]']
call ['?GetProcessedSize@CInBufferBase@@QBE_KXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+18h],', 'eax']
mov ['[ecx+1Ch],', 'edx']
lea ['ecx,', '[ebp+var_70]']
call ['?Flush@COutBuffer@@QAEJXZ']
mov ['[ebp+var_F8],', 'eax']
cmp ['[ebp+var_C0],', '0']
jnz ['short', 'loc_89B']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_130],', 'edx']
jmp ['short', 'loc_8A7']
mov ['eax,', '[ebp+var_C0]']
mov ['[ebp+var_130],', 'eax']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+var_124],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_124]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN48']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?Code@CDecoder@NZ@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Code@CDecoder@NZ@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '28h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?CodeReal@CDecoder@NZ@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
jmp ['short', 'loc_A50']
endp
__catch$?Code@CDecoder@NZ@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0 proc near
mov ['edx,', '[ebp-18h]']
mov ['eax,', '[edx]']
mov ['[ebp-2Ch],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN9']
retn
endp
__catch$?Code@CDecoder@NZ@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1 proc near
mov ['ecx,', '[ebp-24h]']
mov ['edx,', '[ecx]']
mov ['[ebp-30h],', 'edx']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN11']
retn
endp
__catch$?Code@CDecoder@NZ@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2 proc near
mov ['dword', 'ptr', '[ebp-34h],', '1']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN13']
retn
endp
?CheckStream@NZ@NCompress@@YG_NPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '3']
jnb ['short', 'loc_ADD']
xor ['al,', 'al']
jmp ['loc_CCB']
mov ['eax,', '[ebp+Src]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1Fh']
jnz ['short', 'loc_AF6']
mov ['edx,', '[ebp+Src]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '9Dh']
jz ['short', 'loc_AFD']
xor ['al,', 'al']
jmp ['loc_CCB']
mov ['ecx,', '[ebp+Src]']
mov ['dl,', '[ecx+2]']
mov ['[ebp+var_5],', 'dl']
movzx ['eax,', '[ebp+var_5]']
and ['eax,', '60h']
jz ['short', 'loc_B16']
xor ['al,', 'al']
jmp ['loc_CCB']
movzx ['ecx,', '[ebp+var_5]']
and ['ecx,', '1Fh']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '9']
jb ['short', 'loc_B2C']
cmp ['[ebp+var_C],', '10h']
jbe ['short', 'loc_B33']
xor ['al,', 'al']
jmp ['loc_CCB']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_C]']
shl ['edx,', 'cl']
mov ['[ebp+var_10],', 'edx']
movzx ['eax,', '[ebp+var_5]']
and ['eax,', '80h']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '0FFFF0100h']
add ['eax,', '10000h']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_18],', '9']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_14],', '100h']
setz ['cl']
add ['ecx,', '100h']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+Src]']
add ['edx,', '3']
mov ['[ebp+Src],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '3']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_BF0']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+arg_4]']
jnb ['short', 'loc_BAE']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_BB4']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_50]']
mov ['[ebp+Size],', 'edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+Src],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+Size]']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+Size]']
shl ['edx,', '3']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '3']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
movzx ['edx,', '[ebp+ecx+Dst]']
mov ['eax,', '[ebp+var_48]']
movzx ['ecx,', '[ebp+eax+var_3B]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_48]']
movzx ['ecx,', '[ebp+eax+var_3A]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['[ebp+var_4C],', 'edx']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '7']
mov ['edx,', '[ebp+var_4C]']
shr ['edx,', 'cl']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
shl ['eax,', 'cl']
sub ['eax,', '1']
and ['eax,', '[ebp+var_4C]']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_24]']
jbe ['short', 'loc_C54']
mov ['al,', '1']
jmp ['short', 'loc_CCB']
mov ['eax,', '[ebp+var_4C]']
cmp ['eax,', '[ebp+var_1C]']
jb ['short', 'loc_C60']
xor ['al,', 'al']
jmp ['short', 'loc_CCB']
mov ['ecx,', '[ebp+var_4C]']
cmp ['ecx,', '[ebp+var_14]']
jnz ['short', 'loc_C88']
mov ['[ebp+var_20],', '0']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_18],', '9']
mov ['[ebp+var_1C],', '101h']
jmp ['loc_B96']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_10]']
jnb ['short', 'loc_CC6']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_18]']
shl ['edx,', 'cl']
cmp ['[ebp+var_1C],', 'edx']
jbe ['short', 'loc_CC6']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_CC6']
mov ['[ebp+var_20],', '0']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
jmp ['loc_B96']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?QueryInterface@CDecoder@NZ@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_EDC']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_EFF']
push ['offset', '_IID_ICompressCoder']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_EF8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_EFF']
mov ['eax,', '80004002h']
jmp ['short', 'loc_F10']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CDecoder@NZ@NCompress@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@NZ@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_FC6']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_FF0']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_FE7']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCDecoder@NZ@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_FEE']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCDecoder@NZ@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDecoder@NZ@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_102A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?CodeReal@CDecoder@NZ@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0 proc near
lea ['ecx,', '[ebp-40h]']
jmp ['??1CInBuffer@@QAE@XZ']
endp
__unwindfunclet$?CodeReal@CDecoder@NZ@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1 proc near
lea ['ecx,', '[ebp-70h]']
jmp ['??1COutBuffer@@QAE@XZ']
endp
__ehhandler$?CodeReal@CDecoder@NZ@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-130h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CodeReal@CDecoder@NZ@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Code@CDecoder@NZ@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Code@CDecoder@NZ@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
?GetProcessedSize@CInBufferBase@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
xor ['esi,', 'esi']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
adc ['esi,', '[edx+14h]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[eax]']
sub ['eax,', '[edx+8]']
cdq
add ['ecx,', 'eax']
adc ['esi,', 'edx']
mov ['eax,', 'ecx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CInBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteByte@COutBuffer@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_1284']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CInBufferBase@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

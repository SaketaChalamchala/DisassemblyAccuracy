_IsArc_Gz@8     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0Ah']
jnb ['short', 'loc_194']
mov ['eax,', '2']
jmp ['loc_415']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1Fh']
jnz ['short', 'loc_1B9']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '8Bh']
jnz ['short', 'loc_1B9']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
cmp ['edx,', '8']
jz ['short', 'loc_1C0']
xor ['eax,', 'eax']
jmp ['loc_415']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+3]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4+3]']
and ['edx,', '0E0h']
jz ['short', 'loc_1DC']
xor ['eax,', 'eax']
jmp ['loc_415']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+8]']
mov ['byte', 'ptr', '[ebp+var_4+2],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4+2]']
test ['edx,', 'edx']
jz ['short', 'loc_206']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_4+2]']
cmp ['eax,', '2']
jz ['short', 'loc_206']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4+2]']
cmp ['ecx,', '4']
jz ['short', 'loc_206']
xor ['eax,', 'eax']
jmp ['loc_415']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '0Ah']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ah']
mov ['[ebp+arg_0],', 'eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4+3]']
and ['ecx,', '4']
jz ['loc_2DD']
cmp ['[ebp+arg_4],', '2']
jnb ['short', 'loc_235']
mov ['eax,', '2']
jmp ['loc_415']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '2']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['loc_2DD']
cmp ['[ebp+var_8],', '4']
jnb ['short', 'loc_267']
xor ['eax,', 'eax']
jmp ['loc_415']
cmp ['[ebp+arg_4],', '4']
jnb ['short', 'loc_277']
mov ['eax,', '2']
jmp ['loc_415']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '4']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_8]']
jbe ['short', 'loc_2AB']
xor ['eax,', 'eax']
jmp ['loc_415']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+arg_4]']
jbe ['short', 'loc_2BD']
mov ['eax,', '2']
jmp ['loc_415']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+var_C]']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+arg_0],', 'eax']
jmp ['loc_250']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4+3]']
and ['ecx,', '8']
jz ['short', 'loc_362']
mov ['edx,', 'ds:_kNameMaxLen']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+arg_4]']
jbe ['short', 'loc_2FD']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_30F']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_10]']
jnb ['short', 'loc_326']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_326']
jmp ['short', 'loc_306']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_338']
mov ['eax,', '2']
jmp ['loc_415']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_10]']
jnz ['short', 'loc_347']
xor ['eax,', 'eax']
jmp ['loc_415']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'ecx']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4+3]']
and ['edx,', '10h']
jz ['short', 'loc_3E0']
mov ['eax,', 'ds:_kCommentMaxLen']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+arg_4]']
jbe ['short', 'loc_381']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_393']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_18]']
jnb ['short', 'loc_3AA']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_3AA']
jmp ['short', 'loc_38A']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+arg_4]']
jnz ['short', 'loc_3B9']
mov ['eax,', '2']
jmp ['short', 'loc_415']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_18]']
jnz ['short', 'loc_3C5']
xor ['eax,', 'eax']
jmp ['short', 'loc_415']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_1C]']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_1C]']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_4+3]']
and ['eax,', '2']
jz ['short', 'loc_408']
cmp ['[ebp+arg_4],', '2']
jnb ['short', 'loc_3F6']
mov ['eax,', '2']
jmp ['short', 'loc_415']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?Is_Deflate@NGz@NArchive@@YGIPBEI@Z']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Is_Deflate@NGz@NArchive@@YGIPBEI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_4],', '1']
jnb ['short', 'loc_458']
mov ['eax,', '2']
jmp ['loc_4F3']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'cl']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4+3]']
shr ['ecx,', '1']
and ['ecx,', '3']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '3']
jnz ['short', 'loc_488']
xor ['eax,', 'eax']
jmp ['short', 'loc_4F3']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_4C6']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4+3]']
sar ['edx,', '3']
test ['edx,', 'edx']
jz ['short', 'loc_49D']
xor ['eax,', 'eax']
jmp ['short', 'loc_4F3']
cmp ['[ebp+arg_4],', '4']
jnb ['short', 'loc_4AA']
mov ['eax,', '2']
jmp ['short', 'loc_4F3']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
not ['eax']
movzx ['edx,', 'ax']
cmp ['ecx,', 'edx']
jz ['short', 'loc_4C4']
xor ['eax,', 'eax']
jmp ['short', 'loc_4F3']
jmp ['short', 'loc_4EE']
cmp ['[ebp+var_8],', '2']
jnz ['short', 'loc_4EE']
cmp ['[ebp+arg_4],', '1']
jnb ['short', 'loc_4D9']
mov ['eax,', '2']
jmp ['short', 'loc_4F3']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '1Fh']
add ['ecx,', '1']
cmp ['ecx,', '1Eh']
jle ['short', 'loc_4EE']
xor ['eax,', 'eax']
jmp ['short', 'loc_4F3']
mov ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadHeader@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4Ch']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?Clear@CItem@NGz@NArchive@@QAEXXZ']
push ['0Ah']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ReadBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@PAEI@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_551']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_6A1']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_18]']
cmp ['edx,', '1Fh']
jnz ['short', 'loc_56E']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_18+1]']
cmp ['eax,', '8Bh']
jnz ['short', 'loc_56E']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_18+2]']
cmp ['ecx,', '8']
jz ['short', 'loc_578']
mov ['eax,', '1']
jmp ['loc_6A1']
mov ['edx,', '[ebp+var_8]']
mov ['al,', 'byte', 'ptr', '[ebp+var_18+3]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_8]']
call ['?IsSupported@CItem@NGz@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_599']
mov ['eax,', '1']
jmp ['loc_6A1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+var_10]']
mov ['[ecx+1],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_F]']
mov ['[eax+2],', 'cl']
mov ['ecx,', '[ebp+var_8]']
call ['?ExtraFieldIsPresent@CItem@NGz@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5FF']
lea ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ReadUInt16@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAI@Z']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_5E1']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_6A1']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?SkipBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@I@Z']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_5FF']
mov ['eax,', '[ebp+var_34]']
jmp ['loc_6A1']
mov ['ecx,', '[ebp+var_8]']
call ['?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_633']
mov ['edx,', 'ds:_kNameMaxLen']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ReadString@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAVAString@@I@Z']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_633']
mov ['eax,', '[ebp+var_38]']
jmp ['short', 'loc_6A1']
mov ['ecx,', '[ebp+var_8]']
call ['?CommentIsPresent@CItem@NGz@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_666']
mov ['eax,', 'ds:_kCommentMaxLen']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1Ch']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?ReadString@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAVAString@@I@Z']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_666']
mov ['eax,', '[ebp+var_3C]']
jmp ['short', 'loc_6A1']
mov ['ecx,', '[ebp+var_8]']
call ['?HeaderCrcIsPresent@CItem@NGz@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_690']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?ReadUInt16@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAI@Z']
mov ['[ebp+var_4C],', 'eax']
cmp ['[ebp+var_4C],', '0']
jz ['short', 'loc_690']
mov ['eax,', '[ebp+var_4C]']
jmp ['short', 'loc_6A1']
mov ['ecx,', '[ebp+arg_0]']
call ['?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ']
movzx ['eax,', 'al']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@PAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_731']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_74B']
mov ['ecx,', '[ebp+arg_0]']
call ['?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_4]']
mov ['[edx],', 'al']
jmp ['short', 'loc_728']
mov ['ecx,', '[ebp+arg_0]']
call ['?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ']
movzx ['eax,', 'al']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SkipBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_791']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_7A3']
mov ['ecx,', '[ebp+arg_0]']
call ['?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ']
jmp ['short', 'loc_788']
mov ['ecx,', '[ebp+arg_0]']
call ['?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ']
movzx ['eax,', 'al']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadUInt16@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_7F3']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '2']
jge ['short', 'loc_832']
mov ['ecx,', '[ebp+arg_0]']
call ['?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
mov ['ecx,', '[ebp+arg_0]']
call ['?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_81A']
mov ['eax,', '1']
jmp ['short', 'loc_834']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
mov ['ecx,', '[ebp+var_4]']
shl ['ecx,', '3']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+arg_4]']
or ['eax,', '[ecx]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_7EA']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadString@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAVAString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_4]']
call ['?Empty@AString@@QAEXXZ']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_872']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_8B6']
mov ['ecx,', '[ebp+arg_0]']
call ['?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
mov ['ecx,', '[ebp+arg_0]']
call ['?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_89B']
mov ['eax,', '1']
jmp ['short', 'loc_8BB']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_8A7']
xor ['eax,', 'eax']
jmp ['short', 'loc_8BB']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??YAString@@QAEAAV0@D@Z']
jmp ['short', 'loc_869']
mov ['eax,', '1']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ReadFooter1@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
push ['8']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ReadBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@PAEI@Z']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_91E']
mov ['eax,', '[ebp+var_1C]']
jmp ['short', 'loc_941']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ']
movzx ['eax,', 'al']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadFooter2@CItem@NGz@NArchive@@QAEJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
push ['8']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_9CE']
mov ['eax,', '[ebp+var_1C]']
jmp ['short', 'loc_9E2']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+0Ch],', 'edx']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteHeader@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_18],', '1Fh']
mov ['byte', 'ptr', '[ebp+var_18+1],', '8Bh']
mov ['byte', 'ptr', '[ebp+var_18+2],', '8']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '8']
mov ['byte', 'ptr', '[ebp+var_18+3],', 'cl']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx+1]']
mov ['byte', 'ptr', '[ebp+var_10],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+2]']
mov ['byte', 'ptr', '[ebp+var_10+1],', 'cl']
push ['0Ah']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_AB7']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_AFA']
mov ['ecx,', '[ebp+var_8]']
call ['?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_AF8']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?Len@AString@@QBEIXZ']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_AF8']
mov ['eax,', '[ebp+var_24]']
jmp ['short', 'loc_AFA']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteFooter@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_10],', 'eax']
push ['8']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetNumberOfProperties@CHandler@NGz@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '6']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetPropertyInfo@CHandler@NGz@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '6']
jb ['short', 'loc_C04']
mov ['eax,', '80070057h']
jmp ['short', 'loc_C31']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_kProps[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
movzx ['dx,', 'byte', 'ptr', 'ds:?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['14h']
endp
?GetNumberOfArchiveProperties@CHandler@NGz@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '2']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetArchivePropertyInfo@CHandler@NGz@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '2']
jb ['short', 'loc_C74']
mov ['eax,', '80070057h']
jmp ['short', 'loc_CA1']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_kArcProps[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
movzx ['dx,', 'byte', 'ptr', 'ds:?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['14h']
endp
?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '4Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_5C]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_4C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
sub ['ecx,', '4']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_50],', '4Ah']
ja ['$LN15']
mov ['edx,', '[ebp+var_50]']
movzx ['eax,', 'ds:$LN27[edx]']
jmp ['ds:$LN33[eax*4]']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+40h]']
test ['edx,', 'edx']
jz ['short', 'loc_D4D']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
mov ['edx,', '[eax+48h]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN15']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+41h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_D70']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+54h]']
push ['eax']
mov ['ecx,', '[edx+50h]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN15']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+42h]']
test ['eax,', 'eax']
jz ['short', 'loc_D93']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+5Ch]']
push ['edx']
mov ['eax,', '[ecx+58h]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN15']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_54],', 'ecx']
mov ['edx,', '[ebp+var_54]']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[edx+60h]']
or ['ecx,', '[eax+64h]']
jz ['short', 'loc_DBF']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+64h]']
push ['eax']
mov ['ecx,', '[edx+60h]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN15']
mov ['[ebp+var_2C],', '0']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Ch]']
test ['eax,', 'eax']
jnz ['short', 'loc_DDF']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Fh]']
test ['eax,', 'eax']
jz ['short', 'loc_DF3']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '20h']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Eh]']
test ['eax,', 'eax']
jz ['short', 'loc_E07']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '40h']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['short', '$LN15']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '14h']
call ['?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ']
mov ['[ebp+var_55],', 'al']
movzx ['eax,', '[ebp+var_55]']
test ['eax,', 'eax']
jz ['short', '$LN15']
push ['0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '24h']
push ['ecx']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
call ['?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z']
mov ['[ebp+var_5C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
push ['offset', '$SG71319']
lea ['ecx,', '[ebp+var_3C]']
call ['?AddAscii@UString@@QAEXPBD@Z']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_44],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_44]']
jmp ['short', 'loc_EB3']
endp
__catch$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-48h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN25']
retn
endp
?GetNumberOfItems@CHandler@NGz@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '60h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_70]']
mov ['ecx,', '18h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_50],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_54]']
sub ['ecx,', '3']
mov ['[ebp+var_54],', 'ecx']
cmp ['[ebp+var_54],', '14h']
ja ['$LN15_0']
mov ['edx,', '[ebp+var_54]']
movzx ['eax,', 'ds:$LN29_0[edx]']
jmp ['ds:$LN35[eax*4]']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '14h']
call ['?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ']
mov ['[ebp+var_55],', 'al']
movzx ['ecx,', '[ebp+var_55]']
test ['ecx,', 'ecx']
jz ['short', 'loc_105C']
push ['0']
mov ['edx,', '[ebp+this]']
add ['edx,', '24h']
push ['edx']
lea ['eax,', '[ebp+var_44]']
push ['eax']
call ['?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ebp+var_60],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edx,', '[ebp+var_60]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1UString@@QAE@XZ']
jmp ['$LN15_0']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_1086']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['?UnixTimeToFileTime@NTime@NWindows@@YGXIAAU_FILETIME@@@Z']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z']
jmp ['$LN15_0']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+41h]']
test ['eax,', 'eax']
jz ['short', 'loc_10AB']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+54h]']
push ['edx']
mov ['eax,', '[ecx+50h]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['short', 'loc_10D1']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '68h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_64],', 'eax']
cmp ['[ebp+var_64],', '0']
jz ['short', 'loc_10D1']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+20h]']
xor ['eax,', 'eax']
push ['eax']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN15_0']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+40h]']
test ['edx,', 'edx']
jnz ['short', 'loc_10F5']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '68h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_1108']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
mov ['edx,', '[eax+48h]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['short', '$LN15_0']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+16h]']
cmp ['ecx,', '14h']
jnb ['short', 'loc_1129']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+16h]']
mov ['ecx,', '_kHostOSes[eax*4]']
mov ['[ebp+var_6C],', 'ecx']
jmp ['short', 'loc_1132']
mov ['edx,', 'ds:_kUnknownOS']
mov ['[ebp+var_6C],', 'edx']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z']
jmp ['short', '$LN15_0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '68h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '0']
jz ['short', '$LN15_0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_48],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_48]']
jmp ['short', 'loc_11AD']
endp
__catch$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-4Ch],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN27_0']
retn
endp
?SetRatioInfo@CCompressProgressInfoImp@NGz@NArchive@@UAGJPB_K0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_12CE']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+10h]']
add ['edx,', '[ecx]']
mov ['eax,', '[eax+14h]']
adc ['eax,', '[ecx+4]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ']
mov ['[ebp+var_24],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_12D0']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '2Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_34],', 'eax']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_139C']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_1457']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+3Ch],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
push ['2']
push ['0FFFFFFFFh']
push ['0FFFFFFF8h']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_13D8']
mov ['eax,', '[ebp+var_28]']
jmp ['short', 'loc_1457']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '8']
mov ['edx,', '[ebp+var_1C]']
adc ['edx,', '0']
mov ['eax,', '[ebp+this]']
mov ['[eax+48h],', 'ecx']
mov ['[eax+4Ch],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '14h']
call ['?ReadFooter2@CItem@NGz@NArchive@@QAEJPAUISequentialInStream@@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_1410']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_1457']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '68h']
call ['??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+3Ch],', '1']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+3Dh],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_1457']
endp
__catch$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-30h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN10_1']
retn
endp
?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '28h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+this]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx-4]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+6Ch]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+6Ch]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['1']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+6Ch]']
call ['?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?ReadHeader@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1560']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_15F9']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+6Ch]']
call ['?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ']
mov ['[ebp+var_2D],', 'al']
movzx ['ecx,', '[ebp+var_2D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_157D']
mov ['eax,', '1']
jmp ['short', 'loc_15F9']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+6Ch]']
call ['?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+5Ch],', 'ecx']
mov ['edx,', '[ebp+var_34]']
mov ['[eax+60h],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+38h],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_15F9']
endp
__catch$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$0 proc near
mov ['ecx,', '[ebp-1Ch]']
mov ['edx,', '[ecx]']
mov ['[ebp-24h],', 'edx']
mov ['dword', 'ptr', '[ebp-4],', '0']
mov ['eax,', 'offset', '$LN12_2']
retn
endp
__catch$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$2 proc near
mov ['dword', 'ptr', '[ebp-28h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN14_2']
retn
endp
?Close@CHandler@NGz@NArchive@@UAGJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+3Ch],', '0']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+3Dh],', '0']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+3Eh],', '0']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+3Fh],', '0']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+40h],', '0']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+41h],', '0']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+42h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+48h],', '0']
mov ['dword', 'ptr', '[ecx+4Ch],', '0']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+60h],', '0']
mov ['dword', 'ptr', '[edx+64h],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '68h']
call ['?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+70h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+70h]']
add ['eax,', '8']
mov ['ecx,', '[ecx+8]']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '190h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1A0]']
mov ['ecx,', '64h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_1739']
xor ['eax,', 'eax']
jmp ['loc_21C0']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jz ['short', 'loc_1757']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_174D']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_1757']
mov ['eax,', '80070057h']
jmp ['loc_21C0']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+40h]']
test ['edx,', 'edx']
jz ['short', 'loc_1784']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
mov ['edx,', '[eax+48h]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_100],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_C],', '0']
setnz ['cl']
mov ['[ebp+var_20],', 'ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
mov ['[ebp+var_104],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_104]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+14h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_108],', 'eax']
mov ['edx,', '[ebp+var_108]']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_1809']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_C0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_C0]']
jmp ['loc_21C0']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_1849']
lea ['ecx,', '[ebp+var_18]']
call ['??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ']
mov ['[ebp+var_109],', 'al']
movzx ['ecx,', '[ebp+var_109]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1849']
mov ['[ebp+var_C4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_C4]']
jmp ['loc_21C0']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_110],', 'eax']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+var_CC],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_CC],', '0']
jz ['short', 'loc_18AC']
mov ['ecx,', '[ebp+var_CC]']
call ['??0COutStreamWithCRC@@QAE@XZ']
mov ['[ebp+var_114],', 'eax']
mov ['edx,', '[ebp+var_114]']
mov ['[ebp+var_118],', 'edx']
jmp ['short', 'loc_18B6']
mov ['[ebp+var_118],', '0']
mov ['eax,', '[ebp+var_118]']
mov ['[ebp+var_C8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
push ['edx']
lea ['ecx,', '[ebp+var_30]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_11C]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
call ['?SetStream@COutStreamWithCRC@@QAEXPAUISequentialOutStream@@@Z']
push ['1']
mov ['ecx,', '[ebp+var_28]']
call ['?Init@COutStreamWithCRC@@QAEX_N@Z']
lea ['ecx,', '[ebp+var_18]']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_120],', 'eax']
mov ['ecx,', '[ebp+var_120]']
mov ['[ebp+var_D4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_1956']
mov ['ecx,', '[ebp+var_D4]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_124],', 'eax']
mov ['edx,', '[ebp+var_124]']
mov ['[ebp+var_128],', 'edx']
jmp ['short', 'loc_1960']
mov ['[ebp+var_128],', '0']
mov ['eax,', '[ebp+var_128]']
mov ['[ebp+var_D0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_D0]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
lea ['ecx,', '[ebp+var_40]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
push ['1']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
mov ['ecx,', '[ebp+this]']
mov ['dl,', '[ecx+3Dh]']
mov ['[ebp+var_45],', 'dl']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Dh]']
test ['ecx,', 'ecx']
jz ['loc_1AA2']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '68h']
call ['??7?$CMyComPtr@UIInStream@@@@QBE_NXZ']
mov ['[ebp+var_129],', 'al']
movzx ['edx,', '[ebp+var_129]']
test ['edx,', 'edx']
jz ['short', 'loc_1A04']
mov ['[ebp+var_D8],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_D8]']
jmp ['loc_21C0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '68h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_130],', 'eax']
mov ['eax,', '[ebp+var_130]']
mov ['[ebp+var_134],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_134]']
push ['ecx']
mov ['edx,', '[ebp+var_134]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_138],', 'eax']
mov ['edx,', '[ebp+var_138]']
mov ['[ebp+var_4C],', 'edx']
cmp ['[ebp+var_4C],', '0']
jz ['short', 'loc_1A93']
mov ['eax,', '[ebp+var_4C]']
mov ['[ebp+var_DC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_DC]']
jmp ['loc_21C0']
push ['1']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+70h]']
call ['?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z']
jmp ['short', 'loc_1AA9']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+3Dh],', '1']
mov ['[ebp+var_4D],', '1']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+70h]']
call ['?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ']
mov ['[ebp+var_140],', 'eax']
mov ['[ebp+var_13C],', 'edx']
mov ['ecx,', '[ebp+var_140]']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[ebp+var_13C]']
mov ['[ebp+var_54],', 'edx']
mov ['[ebp+var_60],', '0']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_64],', '0']
mov ['[ebp+var_69],', '0']
mov ['[ebp+var_70],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_58]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+var_54]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_60]']
mov ['[eax+28h],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
mov ['[eax+2Ch],', 'edx']
mov ['ecx,', '[ebp+var_38]']
call ['?SetCur@CLocalProgress@@QAEJXZ']
mov ['[ebp+var_144],', 'eax']
mov ['eax,', '[ebp+var_144]']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_1B74']
mov ['ecx,', '[ebp+var_74]']
mov ['[ebp+var_E0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_E0]']
jmp ['loc_21C0']
lea ['ecx,', '[ebp+var_A0]']
call ['??0CItem@NGz@NArchive@@QAE@XZ']
mov ['[ebp+var_148],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
movzx ['edx,', '[ebp+var_4D]']
test ['edx,', 'edx']
jz ['short', 'loc_1B9D']
movzx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jz ['loc_1CC6']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+70h]']
push ['edx']
lea ['ecx,', '[ebp+var_A0]']
call ['?ReadHeader@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z']
mov ['[ebp+var_14C],', 'eax']
mov ['eax,', '[ebp+var_14C]']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_1C11']
cmp ['[ebp+var_70],', '1']
jz ['short', 'loc_1C11']
mov ['ecx,', '[ebp+var_70]']
mov ['[ebp+var_E4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_E4]']
jmp ['loc_21C0']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+70h]']
call ['?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ']
mov ['[ebp+var_14D],', 'al']
movzx ['eax,', '[ebp+var_14D]']
test ['eax,', 'eax']
jz ['short', 'loc_1C34']
mov ['[ebp+var_70],', '1']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_1C5D']
movzx ['ecx,', '[ebp+var_4D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1C5D']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+3Ch],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
jmp ['loc_1FC6']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+70h]']
call ['?GetStreamSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ']
mov ['[ebp+var_158],', 'eax']
mov ['[ebp+var_154],', 'edx']
mov ['ecx,', '[ebp+var_58]']
cmp ['ecx,', '[ebp+var_158]']
jnz ['short', 'loc_1CA5']
mov ['edx,', '[ebp+var_54]']
cmp ['edx,', '[ebp+var_154]']
jnz ['short', 'loc_1CA5']
mov ['[ebp+var_70],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
jmp ['loc_1FC6']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_1CC6']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+3Eh],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
jmp ['loc_1FC6']
mov ['ecx,', '[ebp+var_68]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_64]']
adc ['edx,', '0']
mov ['[ebp+var_68],', 'ecx']
mov ['[ebp+var_64],', 'edx']
mov ['[ebp+var_4D],', '0']
mov ['ecx,', '[ebp+var_28]']
call ['?GetSize@COutStreamWithCRC@@QBE_KXZ']
mov ['[ebp+var_160],', 'eax']
mov ['[ebp+var_15C],', 'edx']
mov ['eax,', '[ebp+var_160]']
mov ['[ebp+var_AC],', 'eax']
mov ['ecx,', '[ebp+var_15C]']
mov ['[ebp+var_A8],', 'ecx']
mov ['ecx,', '[ebp+var_28]']
call ['?InitCRC@COutStreamWithCRC@@QAEXXZ']
lea ['ecx,', '[ebp+var_40]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_164],', 'eax']
lea ['ecx,', '[ebp+var_30]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_168],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_164]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_168]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+70h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+70h]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_16C],', 'eax']
mov ['ecx,', '[ebp+var_16C]']
mov ['[ebp+var_70],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+70h]']
call ['?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ']
mov ['[ebp+var_174],', 'eax']
mov ['[ebp+var_170],', 'edx']
mov ['eax,', '[ebp+var_174]']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['[ebp+var_54],', 'ecx']
mov ['ecx,', '[ebp+var_28]']
call ['?GetSize@COutStreamWithCRC@@QBE_KXZ']
mov ['[ebp+var_17C],', 'eax']
mov ['[ebp+var_178],', 'edx']
mov ['edx,', '[ebp+var_17C]']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_178]']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_1E0A']
cmp ['[ebp+var_70],', '1']
jz ['short', 'loc_1E0A']
mov ['ecx,', '[ebp+var_70]']
mov ['[ebp+var_E8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_E8]']
jmp ['loc_21C0']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+70h]']
call ['?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ']
mov ['[ebp+var_17D],', 'al']
movzx ['eax,', '[ebp+var_17D]']
test ['eax,', 'eax']
jz ['short', 'loc_1E5D']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+70h]']
call ['?GetStreamSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ']
mov ['[ebp+var_188],', 'eax']
mov ['[ebp+var_184],', 'edx']
mov ['edx,', '[ebp+var_188]']
mov ['[ebp+var_58],', 'edx']
mov ['eax,', '[ebp+var_184]']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+3Fh],', '1']
mov ['[ebp+var_70],', '1']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_1E77']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
jmp ['loc_1FC6']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+70h]']
call ['?AlignToByte@CCoder@NDecoder@NDeflate@NCompress@@QAEXXZ']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+70h]']
push ['ecx']
lea ['ecx,', '[ebp+var_A0]']
call ['?ReadFooter1@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z']
mov ['[ebp+var_18C],', 'eax']
mov ['edx,', '[ebp+var_18C]']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+70h]']
call ['?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ']
mov ['[ebp+var_194],', 'eax']
mov ['[ebp+var_190],', 'edx']
mov ['ecx,', '[ebp+var_194]']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[ebp+var_190]']
mov ['[ebp+var_54],', 'edx']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_1F1F']
cmp ['[ebp+var_70],', '1']
jz ['short', 'loc_1F1F']
mov ['eax,', '[ebp+var_70]']
mov ['[ebp+var_EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_EC]']
jmp ['loc_21C0']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_1F60']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+70h]']
call ['?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ']
mov ['[ebp+var_195],', 'al']
movzx ['edx,', '[ebp+var_195]']
test ['edx,', 'edx']
jz ['short', 'loc_1F4F']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+3Fh],', '1']
mov ['[ebp+var_70],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
jmp ['short', 'loc_1FC6']
mov ['ecx,', '[ebp+var_28]']
call ['?GetCRC@COutStreamWithCRC@@QBEIXZ']
mov ['[ebp+var_19C],', 'eax']
mov ['ecx,', '[ebp+var_98]']
cmp ['ecx,', '[ebp+var_19C]']
jnz ['short', 'loc_1F96']
mov ['edx,', '[ebp+var_60]']
sub ['edx,', '[ebp+var_AC]']
mov ['eax,', '[ebp+var_5C]']
sbb ['eax,', '[ebp+var_A8]']
cmp ['[ebp+var_94],', 'edx']
jz ['short', 'loc_1FB2']
mov ['[ebp+var_69],', '1']
mov ['[ebp+var_70],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
jmp ['short', 'loc_1FC6']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
jmp ['loc_1B01']
jmp ['short', '$LN51']
endp
__catch$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$0 proc near
mov ['ecx,', '[ebp-0B4h]']
mov ['edx,', '[ecx]']
mov ['[ebp-0F0h],', 'edx']
mov ['dword', 'ptr', '[ebp-4],', '5']
mov ['eax,', 'offset', '$LN61']
retn
endp
$LN61           proc near               
mov ['byte', 'ptr', '[ebp-4],', '3']
lea ['ecx,', '[ebp-40h]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp-4],', '1']
lea ['ecx,', '[ebp-30h]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp-4],', '0']
lea ['ecx,', '[ebp-18h]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp-0F0h]']
jmp ['loc_21C0']
endp
__catch$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$2 proc near
mov ['dword', 'ptr', '[ebp-0FCh],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN63']
retn
endp
?GetFileTimeType@CHandler@NGz@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '1ECh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1FC]']
mov ['ecx,', '7Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_8],', '1']
jz ['short', 'loc_22DC']
mov ['eax,', '80070057h']
jmp ['loc_2BE4']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_22EC']
mov ['eax,', '80004005h']
jmp ['loc_2BE4']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_18]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_178],', 'eax']
mov ['ecx,', '[ebp+var_178]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_232E']
mov ['eax,', '[ebp+var_38]']
jmp ['loc_2BE4']
lea ['ecx,', '[ebp+var_64]']
call ['??0CItem@NGz@NArchive@@QAE@XZ']
mov ['[ebp+var_17C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_17D],', 'al']
movzx ['eax,', '[ebp+var_17D]']
test ['eax,', 'eax']
jnz ['short', 'loc_236E']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
push ['ecx']
lea ['ecx,', '[ebp+var_64]']
call ['?CopyMetaPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z']
jmp ['loc_26DA']
mov ['[ebp+var_62],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_184],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_7C]']
push ['edx']
push ['0Ch']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_188],', 'eax']
mov ['ecx,', '[ebp+var_188]']
mov ['[ebp+var_84],', 'ecx']
cmp ['[ebp+var_84],', '0']
jz ['short', 'loc_23ED']
mov ['edx,', '[ebp+var_84]']
mov ['[ebp+var_128],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_7C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_128]']
jmp ['loc_2BE4']
movzx ['eax,', '[ebp+var_7C]']
cmp ['eax,', '40h']
jnz ['short', 'loc_2405']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
lea ['edx,', '[ebp+var_74]']
push ['edx']
call ['?FileTimeToUnixTime@NTime@NWindows@@YG_NABU_FILETIME@@AAI@Z']
jmp ['short', 'loc_2443']
movzx ['eax,', '[ebp+var_7C]']
test ['eax,', 'eax']
jnz ['short', 'loc_2416']
mov ['[ebp+var_60.dwLowDateTime],', '0']
jmp ['short', 'loc_2443']
mov ['[ebp+var_12C],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_7C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_12C]']
jmp ['loc_2BE4']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_7C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
lea ['ecx,', '[ebp+var_98]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_18C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_98]']
push ['ecx']
push ['3']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_190],', 'eax']
mov ['eax,', '[ebp+var_190]']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0']
jz ['short', 'loc_24D3']
mov ['ecx,', '[ebp+var_A0]']
mov ['[ebp+var_130],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_98]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_130]']
jmp ['loc_2BE4']
movzx ['edx,', '[ebp+var_98]']
cmp ['edx,', '8']
jnz ['loc_25AB']
mov ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_B0]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_194],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_B0]']
call ['?ReverseFind_PathSepar@UString@@QBEHXZ']
mov ['[ebp+var_B8],', 'eax']
cmp ['[ebp+var_B8],', '0']
jl ['short', 'loc_252E']
mov ['ecx,', '[ebp+var_B8]']
add ['ecx,', '1']
push ['ecx']
lea ['ecx,', '[ebp+var_B0]']
call ['?DeleteFrontal@UString@@QAEXI@Z']
push ['0']
lea ['edx,', '[ebp+var_B0]']
push ['edx']
lea ['eax,', '[ebp+var_13C]']
push ['eax']
call ['?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z']
mov ['[ebp+var_198],', 'eax']
mov ['ecx,', '[ebp+var_198]']
mov ['[ebp+var_19C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['edx,', '[ebp+var_19C]']
push ['edx']
lea ['ecx,', '[ebp+var_54]']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_13C]']
call ['??1AString@@QAE@XZ']
lea ['ecx,', '[ebp+var_54]']
call ['?IsEmpty@AString@@QBE_NXZ']
mov ['[ebp+var_19D],', 'al']
movzx ['eax,', '[ebp+var_19D]']
test ['eax,', 'eax']
jnz ['short', 'loc_259A']
movzx ['ecx,', '[ebp+var_64]']
or ['ecx,', '8']
mov ['[ebp+var_64],', 'cl']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_B0]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_25E6']
movzx ['edx,', '[ebp+var_98]']
test ['edx,', 'edx']
jz ['short', 'loc_25E6']
mov ['[ebp+var_140],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_98]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_140]']
jmp ['loc_2BE4']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_98]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
lea ['ecx,', '[ebp+var_CC]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_1A4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_CC]']
push ['eax']
push ['6']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1A8],', 'eax']
mov ['edx,', '[ebp+var_1A8]']
mov ['[ebp+var_D4],', 'edx']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_2679']
mov ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_144],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_CC]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_144]']
jmp ['loc_2BE4']
movzx ['ecx,', '[ebp+var_CC]']
test ['ecx,', 'ecx']
jz ['short', 'loc_26CB']
movzx ['edx,', '[ebp+var_CC]']
cmp ['edx,', '0Bh']
jnz ['short', 'loc_269B']
movsx ['eax,', '[ebp+var_C4]']
test ['eax,', 'eax']
jz ['short', 'loc_26CB']
mov ['[ebp+var_148],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_CC]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_148]']
jmp ['loc_2BE4']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_CC]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_1A9],', 'al']
movzx ['edx,', '[ebp+var_1A9]']
test ['edx,', 'edx']
jz ['loc_282E']
lea ['ecx,', '[ebp+var_F0]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_1B0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_F0]']
push ['eax']
push ['7']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1B4],', 'eax']
mov ['edx,', '[ebp+var_1B4]']
mov ['[ebp+var_F8],', 'edx']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_277C']
mov ['eax,', '[ebp+var_F8]']
mov ['[ebp+var_14C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_F0]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_14C]']
jmp ['loc_2BE4']
movzx ['ecx,', '[ebp+var_F0]']
cmp ['ecx,', '15h']
jz ['short', 'loc_27B8']
mov ['[ebp+var_150],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_F0]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_150]']
jmp ['loc_2BE4']
mov ['edx,', '[ebp+var_E8]']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+var_E4]']
mov ['[ebp+var_D8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_F0]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+this]']
add ['edx,', '6Ch']
push ['edx']
lea ['eax,', '[ebp+var_64]']
push ['eax']
mov ['ecx,', '[ebp+var_D8]']
push ['ecx']
mov ['edx,', '[ebp+var_DC]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z']
mov ['[ebp+var_1B8],', 'eax']
mov ['ecx,', '[ebp+var_1B8]']
mov ['[ebp+var_154],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_154]']
jmp ['loc_2BE4']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_2855']
mov ['[ebp+var_158],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_158]']
jmp ['loc_2BE4']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '60h']
call ['??7?$CMyComPtr@UIInStream@@@@QBE_NXZ']
mov ['[ebp+var_1B9],', 'al']
movzx ['edx,', '[ebp+var_1B9]']
test ['edx,', 'edx']
jz ['short', 'loc_2892']
mov ['[ebp+var_15C],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_15C]']
jmp ['loc_2BE4']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C0],', 'eax']
mov ['eax,', '[ebp+var_1C0]']
mov ['[ebp+var_164],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
cmp ['[ebp+var_164],', '0']
jz ['short', 'loc_28DA']
mov ['ecx,', '[ebp+var_164]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_1C4],', 'eax']
mov ['ecx,', '[ebp+var_1C4]']
mov ['[ebp+var_1C8],', 'ecx']
jmp ['short', 'loc_28E4']
mov ['[ebp+var_1C8],', '0']
mov ['edx,', '[ebp+var_1C8]']
mov ['[ebp+var_160],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_160]']
mov ['[ebp+var_FC],', 'eax']
mov ['ecx,', '[ebp+var_FC]']
push ['ecx']
lea ['ecx,', '[ebp+var_104]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
push ['offset', 'unk_1']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+var_FC]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
lea ['ecx,', '[ebp+var_110]']
call ['??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['[ebp+var_1CC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_110]']
call ['??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_1D0],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
push ['offset', '_IID_IArchiveUpdateCallbackFile']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_110]']
call ['??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_1D4],', 'eax']
cmp ['[ebp+var_1D4],', '0']
jz ['loc_2A29']
lea ['ecx,', '[ebp+var_110]']
call ['??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_1D8],', 'eax']
mov ['edx,', '[ebp+var_1D8]']
mov ['[ebp+var_1DC],', 'edx']
mov ['esi,', 'esp']
push ['3']
push ['0']
push ['1']
mov ['eax,', '[ebp+var_1DC]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1E0],', 'eax']
mov ['ecx,', '[ebp+var_1E0]']
mov ['[ebp+var_118],', 'ecx']
cmp ['[ebp+var_118],', '0']
jz ['short', 'loc_2A29']
mov ['edx,', '[ebp+var_118]']
mov ['[ebp+var_168],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_110]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_104]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_168]']
jmp ['loc_2BE4']
mov ['eax,', '[ebp+this]']
add ['eax,', '0Ch']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['?CopyDataPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z']
mov ['[ebp+var_120],', '0']
mov ['[ebp+var_11C],', '0']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_1E1],', 'al']
movzx ['edx,', '[ebp+var_1E1]']
test ['edx,', 'edx']
jz ['short', 'loc_2A93']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['?WriteHeader@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_120]']
add ['edx,', '[ecx+58h]']
mov ['eax,', '[ebp+var_11C]']
adc ['eax,', '[ecx+5Ch]']
mov ['[ebp+var_120],', 'edx']
mov ['[ebp+var_11C],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '60h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_1E8],', 'eax']
mov ['ecx,', '[ebp+var_1E8]']
mov ['[ebp+var_1EC],', 'ecx']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_11C]']
push ['edx']
mov ['eax,', '[ebp+var_120]']
push ['eax']
mov ['ecx,', '[ebp+var_1EC]']
push ['ecx']
mov ['edx,', '[ebp+var_1EC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1F0],', 'eax']
mov ['edx,', '[ebp+var_1F0]']
mov ['[ebp+var_124],', 'edx']
cmp ['[ebp+var_124],', '0']
jz ['short', 'loc_2B3B']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+var_16C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_110]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_104]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_16C]']
jmp ['loc_2BE4']
lea ['ecx,', '[ebp+var_104]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_1F4],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '60h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_1F8],', 'eax']
mov ['ecx,', '[ebp+var_1F4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_1F8]']
push ['eax']
call ['?CopyStream@NCompress@@YGJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_1FC],', 'eax']
mov ['ecx,', '[ebp+var_1FC]']
mov ['[ebp+var_170],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_110]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_104]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_170]']
jmp ['short', 'loc_2BE4']
endp
__catch$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-174h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN48']
retn
endp
?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0ACh']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_B8]']
mov ['ecx,', '2Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_14],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_2D7E']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_3195']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[edx+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_2DAA']
mov ['eax,', '[ebp+var_24]']
jmp ['loc_3195']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[eax+1Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_2E01']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_78],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_78]']
jmp ['loc_3195']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_80],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_2E28']
mov ['ecx,', '[ebp+var_80]']
call ['??0CSequentialInStreamWithCRC@@QAE@XZ']
mov ['[ebp+var_A8],', 'eax']
jmp ['short', 'loc_2E32']
mov ['[ebp+var_A8],', '0']
mov ['ecx,', '[ebp+var_A8]']
mov ['[ebp+var_7C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_7C]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+var_40]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_2C]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?SetStream@CSequentialInStreamWithCRC@@QAEXPAUISequentialInStream@@@Z']
mov ['ecx,', '[ebp+var_38]']
call ['?Init@CSequentialInStreamWithCRC@@QAEXXZ']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_88],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_88],', '0']
jz ['short', 'loc_2E9E']
mov ['ecx,', '[ebp+var_88]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_AC],', 'eax']
jmp ['short', 'loc_2EA8']
mov ['[ebp+var_AC],', '0']
mov ['ecx,', '[ebp+var_AC]']
mov ['[ebp+var_84],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edx,', '[ebp+var_84]']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_48]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
push ['1']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_48]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
mov ['ecx,', '[ebp+arg_10]']
call ['?GetLevel@CSingleMethodProps@NArchive@@QBEHXZ']
cmp ['eax,', '7']
setl ['dl']
lea ['edx,', '[edx+edx+2]']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[ecx+2],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['?WriteHeader@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0']
jz ['short', 'loc_2F4E']
mov ['eax,', '[ebp+var_58]']
mov ['[ebp+var_8C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_8C]']
jmp ['loc_3195']
push ['9B00h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_94],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
cmp ['[ebp+var_94],', '0']
jz ['short', 'loc_2F81']
mov ['ecx,', '[ebp+var_94]']
call ['??0CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ']
mov ['[ebp+var_B0],', 'eax']
jmp ['short', 'loc_2F8B']
mov ['[ebp+var_B0],', '0']
mov ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_90],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['edx,', '[ebp+var_90]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_2FC8']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '4']
mov ['[ebp+var_B4],', 'ecx']
jmp ['short', 'loc_2FD2']
mov ['[ebp+var_B4],', '0']
push ['0']
mov ['edx,', '[ebp+var_B4]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z']
mov ['[ebp+var_6C],', 'eax']
cmp ['[ebp+var_6C],', '0']
jz ['short', 'loc_3033']
mov ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_98],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_98]']
jmp ['loc_3195']
lea ['ecx,', '[ebp+var_64]']
call ['??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
mov ['[ebp+var_B8],', 'eax']
lea ['ecx,', '[ebp+var_50]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_40]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_B8]']
push ['edx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_30C8']
mov ['eax,', '[ebp+var_70]']
mov ['[ebp+var_9C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_9C]']
jmp ['loc_3195']
mov ['ecx,', '[ebp+var_38]']
call ['?GetCRC@CSequentialInStreamWithCRC@@QBEIXZ']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+var_38]']
call ['?GetSize@CSequentialInStreamWithCRC@@QBE_KXZ']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?WriteFooter@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_313D']
mov ['ecx,', '[ebp+var_74]']
mov ['[ebp+var_A0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_A0]']
jmp ['short', 'loc_3195']
mov ['esi,', 'esp']
push ['0']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[eax+20h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_A4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_A4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN32_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '0B8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?SetProperties@CHandler@NGz@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '68h']
call ['?SetProperties@CSingleMethodProps@NArchive@@QAEJPBQB_WPBUtagPROPVARIANT@@I@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['0A8h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_32E8']
mov ['ecx,', '[ebp+var_14]']
call ['??0CHandler@NGz@NArchive@@QAE@XZ']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_32EF']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['0A8h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3384']
mov ['ecx,', '[ebp+var_14]']
call ['??0CHandler@NGz@NArchive@@QAE@XZ']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_338B']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_33A9']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_33B0']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CItem@NGz@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?Empty@AString@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['?Empty@AString@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@AString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?HeaderCrcIsPresent@CItem@NGz@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['2']
mov ['ecx,', '[ebp+var_4]']
call ['?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
movzx ['ecx,', '[ebp+arg_0]']
and ['eax,', 'ecx']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ExtraFieldIsPresent@CItem@NGz@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['4']
mov ['ecx,', '[ebp+var_4]']
call ['?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['8']
mov ['ecx,', '[ebp+var_4]']
call ['?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CommentIsPresent@CItem@NGz@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['10h']
mov ['ecx,', '[ebp+var_4]']
call ['?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsSupported@CItem@NGz@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
and ['eax,', '0E0h']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YAString@@QAEAAV0@D@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_3574']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@AString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$2 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$3 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-60h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$2 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$3 proc near
lea ['ecx,', '[ebp-44h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-74h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-40h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$5 proc near
mov ['eax,', '[ebp-0CCh]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$6 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$7 proc near
mov ['eax,', '[ebp-0D4h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$8 proc near
lea ['ecx,', '[ebp-40h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$9 proc near
lea ['ecx,', '[ebp-0A0h]']
jmp ['??1CItem@NGz@NArchive@@QAE@XZ']
endp
__ehhandler$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1A4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1CItem@NGz@NArchive@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$3 proc near
lea ['ecx,', '[ebp-7Ch]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-98h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$5 proc near
lea ['ecx,', '[ebp-0B0h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$6 proc near
lea ['ecx,', '[ebp-13Ch]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$7 proc near
lea ['ecx,', '[ebp-0CCh]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$8 proc near
lea ['ecx,', '[ebp-0F0h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$9 proc near
mov ['eax,', '[ebp-164h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$10 proc near
lea ['ecx,', '[ebp-104h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$11 proc near
lea ['ecx,', '[ebp-110h]']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
endp
__ehhandler$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-200h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$1 proc near
mov ['eax,', '[ebp-80h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-40h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$3 proc near
mov ['eax,', '[ebp-88h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$5 proc near
mov ['eax,', '[ebp-94h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$6 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
endp
__ehhandler$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0B8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['20000h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_3CC0']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_3CDF']
movzx ['ecx,', '[ebp+arg_0]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3CDD']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0D5Ah],', '0']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AlignToByte@CCoder@NDecoder@NDeflate@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetStreamSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?GetStreamSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@COutStreamWithCRC@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@COutStreamWithCRC@@QAEX_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+1Ch],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?InitCRC@COutStreamWithCRC@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetSize@COutStreamWithCRC@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+10h]']
mov ['edx,', '[ecx+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetCRC@COutStreamWithCRC@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+18h]']
xor ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CItem@NGz@NArchive@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+2],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CItem@NGz@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0CItem@NGz@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CItem@NGz@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CItem@NGz@NArchive@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CItem@NGz@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1AString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CItem@NGz@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1CItem@NGz@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CItem@NGz@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0COutStreamWithCRC@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COutStreamWithCRC@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@COutStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4240']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4247']
mov ['eax,', '80004002h']
jmp ['short', 'loc_4258']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@COutStreamWithCRC@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@COutStreamWithCRC@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_430E']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_4338']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_432F']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCOutStreamWithCRC@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_4336']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCOutStreamWithCRC@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutStreamWithCRC@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4372']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1COutStreamWithCRC@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IntToBool@@YG_NH@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0']
setnz ['al']
pop ['ebp']
retn ['4']
endp
?IsEmpty@AString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CopyMetaPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+2]']
mov ['[eax+2],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??4AString@@QAEAAV0@ABV0@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CopyDataPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+1]']
mov ['[eax+1],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0ICompressSetCoderProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CMyUnknownImp@@QAE@XZ']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressSetCoderProperties@@@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4875']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_4864']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_486B']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_48B0']
push ['offset', '_IID_ICompressSetCoderProperties']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_48A9']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_4898']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_489F']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_48B0']
mov ['eax,', '80004002h']
jmp ['short', 'loc_48C1']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+8],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_493A']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
jmp ['short', 'loc_4964']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_495B']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCCOMCoder@NEncoder@NDeflate@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_4962']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCCOMCoder@NEncoder@NDeflate@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_499E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ICompressSetCoderProperties@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetCoderProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetLevel@CSingleMethodProps@NArchive@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+24h],', '0FFFFFFFFh']
jnz ['short', 'loc_4A5D']
mov ['[ebp+var_8],', '5']
jmp ['short', 'loc_4A66']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@CSequentialInStreamWithCRC@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CSequentialInStreamWithCRC@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetCRC@CSequentialInStreamWithCRC@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+18h]']
xor ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetSize@CSequentialInStreamWithCRC@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+10h]']
mov ['edx,', '[ecx+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CSequentialInStreamWithCRC@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CSequentialInStreamWithCRC@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CSequentialInStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4CC4']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4CCB']
mov ['eax,', '80004002h']
jmp ['short', 'loc_4CDC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CSequentialInStreamWithCRC@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CSequentialInStreamWithCRC@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4D4E']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_4D78']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_4D6F']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCSequentialInStreamWithCRC@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_4D76']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCSequentialInStreamWithCRC@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CSequentialInStreamWithCRC@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4DB2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CSequentialInStreamWithCRC@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CHandler@NGz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CHandler@NGz@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IInArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0IArchiveOpenSeq@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0IOutArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0ISetProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CHandler@NGz@NArchive@@6BIInArchive@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CHandler@NGz@NArchive@@6BIArchiveOpenSeq@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CHandler@NGz@NArchive@@6BIOutArchive@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CHandler@NGz@NArchive@@6BISetProperties@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0CItem@NGz@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['??0?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '74h']
call ['??0CSingleMethodProps@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
push ['0D70h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_4EEA']
mov ['ecx,', '[ebp+var_18]']
call ['??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_4EF1']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+70h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+70h]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1CItem@NGz@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '68h']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '6Ch']
jmp ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '74h']
jmp ['??1CSingleMethodProps@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$4 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0CHandler@NGz@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CHandler@NGz@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_57A2']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_578E']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_5795']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['loc_587C']
push ['offset', '_IID_ICompressGetInStreamProcessedSize']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_57D9']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_57C5']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_57CC']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['loc_587C']
push ['offset', '_IID_ICompressSetInStream']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_580D']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_57FC']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_5803']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_587C']
push ['offset', '_IID_ICompressSetOutStreamSize']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5841']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_5830']
mov ['edx,', '[ebp+this]']
add ['edx,', '0Ch']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_5837']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_587C']
push ['offset', '_IID_ISequentialInStream']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5875']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_5864']
mov ['eax,', '[ebp+this]']
add ['eax,', '10h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_586B']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_587C']
mov ['eax,', '80004002h']
jmp ['short', 'loc_588D']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+14h],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+14h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_5907']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+14h]']
jmp ['short', 'loc_593F']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_5936']
mov ['esi,', 'esp']
push ['1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_593D']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCCOMCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_597A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1CLzOutWindow@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1CLzOutWindow@@QAE@XZ']
endp
__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??_GCCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5BC6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CLzOutWindow@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutBuffer@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CInBuffer@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CInBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CSingleMethodProps@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CSingleMethodProps@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0COneMethodInfo@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Init@CSingleMethodProps@NArchive@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CSingleMethodProps@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1COneMethodInfo@@QAE@XZ']
endp
__ehhandler$??0CSingleMethodProps@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CSingleMethodProps@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0COneMethodInfo@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COneMethodInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CMethodProps@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMethodProps@@QAE@XZ']
endp
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0COneMethodInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COneMethodInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1COneMethodInfo@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COneMethodInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CMethodProps@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMethodProps@@QAE@XZ']
endp
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1COneMethodInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COneMethodInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCProp@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5FE3']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_60A5']
push ['offset', '_IID_IInArchive']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6002']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_60A5']
push ['offset', '_IID_IArchiveOpenSeq']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6036']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_6025']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_602C']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_60A5']
push ['offset', '_IID_IOutArchive']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_606A']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_6059']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_6060']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_60A5']
push ['offset', '_IID_ISetProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_609E']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_608D']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_6094']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_60A5']
mov ['eax,', '80004002h']
jmp ['short', 'loc_60B6']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CHandler@NGz@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CHandler@NGz@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+10h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_612E']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+10h]']
jmp ['short', 'loc_6158']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_614F']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCHandler@NGz@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_6156']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCHandler@NGz@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CHandler@NGz@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6192']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0IInArchive@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IArchiveOpenSeq@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IArchiveOpenSeq@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IOutArchive@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISetProperties@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISetProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CSingleMethodProps@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COneMethodInfo@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CHandler@NGz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CHandler@NGz@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '74h']
call ['??1CSingleMethodProps@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1CItem@NGz@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CHandler@NGz@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1CItem@NGz@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@NGz@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '68h']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@NGz@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '6Ch']
jmp ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
endp
__ehhandler$??1CHandler@NGz@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CHandler@NGz@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6488']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_64CE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_654C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6592']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6600']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_6623']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+30h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '20h']
sub ['ecx,', '[eax]']
and ['ecx,', '7']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Create@CInBuffer@@QAE_NI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetStreamSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?GetStreamSize@CInBufferBase@@QBE_KXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetStreamSize@CInBufferBase@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax]']
sub ['eax,', '[ecx+8]']
cdq
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+10h]']
adc ['edx,', '[ecx+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?GetProcessedSize@CInBufferBase@@QBE_KXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '20h']
sub ['esi,', '[ecx]']
shr ['esi,', '3']
xor ['ecx,', 'ecx']
sub ['eax,', 'esi']
sbb ['edx,', 'ecx']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessedSize@CInBufferBase@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
xor ['esi,', 'esi']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
adc ['esi,', '[edx+14h]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[eax]']
sub ['eax,', '[edx+8]']
cdq
add ['ecx,', 'eax']
adc ['esi,', 'edx']
mov ['eax,', 'ecx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+28h],', '4']
ja ['short', 'loc_67DC']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '20h']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
shl ['ecx,', '3']
cmp ['edx,', 'ecx']
jb ['short', 'loc_67DC']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_67E3']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_68A6']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_689D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_68A4']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_6862']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6972']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_69BF']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6A2C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_6A4F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UIInStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6AE0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6B26']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6B73']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6BE0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_6C03']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6C94']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6CDA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6D30']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_6D53']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6DF2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCProp@@QAEPAXI@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6E76']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+30h]']
mov ['ecx,', '[ebp+arg_0]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+30h],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Init@CInBufferBase@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '20h']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CHandler@NGz@NArchive@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?AddRef@CHandler@NGz@NArchive@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CHandler@NGz@NArchive@@UAGKXZ']
endp
?QueryInterface@CHandler@NGz@NArchive@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?QueryInterface@CHandler@NGz@NArchive@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CHandler@NGz@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CHandler@NGz@NArchive@@UAGKXZ']
endp
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CHandler@NGz@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CHandler@NGz@NArchive@@UAGKXZ']
endp
?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ']
endp
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '10h']
jmp ['?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?Release@CHandler@NGz@NArchive@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CHandler@NGz@NArchive@@UAGKXZ']
endp
?AddRef@CHandler@NGz@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CHandler@NGz@NArchive@@UAGKXZ']
endp
?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?AddRef@CHandler@NGz@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CHandler@NGz@NArchive@@UAGKXZ']
endp
?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ']
endp
??__Eg_RegisterArc@NGz@NArchive@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_RegisterArc']
call ['??0CRegisterArc@NGz@NArchive@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CRegisterArc@NGz@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '_g_ArcInfo']
call ['?RegisterArc@@YGXPBUCArcInfo@@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

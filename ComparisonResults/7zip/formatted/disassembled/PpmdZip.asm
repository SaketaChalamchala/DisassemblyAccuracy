??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NPpmdZip@NCompress@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CByteInBufWrap@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0CBuf@NPpmdZip@NCompress@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+1CECh],', 'dl']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '8']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+88h],', 'eax']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '34h']
push ['edx']
call ['_Ppmd8_Construct@4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CDecoder@NPpmdZip@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NPpmdZip@NCompress@@6B@']
mov ['[ebp+var_4],', '0']
push ['offset', '_g_BigAlloc']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
push ['ecx']
call ['_Ppmd8_Free@8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1CBuf@NPpmdZip@NCompress@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CByteInBufWrap@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Code@CDecoder@NPpmdZip@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '80h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_80]']
mov ['ecx,', '20h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '30h']
call ['?Alloc@CBuf@NPpmdZip@NCompress@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_186']
mov ['eax,', '8007000Eh']
jmp ['loc_4BB']
push ['100000h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?Alloc@CByteInBufWrap@@QAE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1A7']
mov ['eax,', '8007000Eh']
jmp ['loc_4BB']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?Init@CByteInBufWrap@@QAEXXZ']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1CD']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '2']
jge ['short', 'loc_1E7']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?ReadByte@CByteInBufWrap@@QAEEXZ']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ebp+edx+var_8],', 'al']
jmp ['short', 'loc_1C4']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+28h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1FC']
mov ['eax,', '1']
jmp ['loc_4BB']
movzx ['edx,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0Fh']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
shr ['ecx,', '4']
and ['ecx,', '0FFh']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
shr ['edx,', '0Ch']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_18],', '2']
jb ['short', 'loc_236']
cmp ['[ebp+var_20],', '2']
jbe ['short', 'loc_240']
mov ['eax,', '1']
jmp ['loc_4BB']
cmp ['[ebp+var_20],', '2']
jnz ['short', 'loc_250']
mov ['eax,', '80004001h']
jmp ['loc_4BB']
push ['offset', '_g_BigAlloc']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '14h']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '34h']
push ['ecx']
call ['_Ppmd8_Alloc@12']
test ['eax,', 'eax']
jnz ['short', 'loc_276']
mov ['eax,', '8007000Eh']
jmp ['loc_4BB']
mov ['edx,', '[ebp+this]']
add ['edx,', '34h']
push ['edx']
call ['_Ppmd8_RangeDec_Init@4']
test ['eax,', 'eax']
jnz ['short', 'loc_290']
mov ['eax,', '1']
jmp ['loc_4BB']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+this]']
add ['edx,', '34h']
push ['edx']
call ['_Ppmd8_Init@12']
mov ['[ebp+var_21],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_2C],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_2E1']
mov ['eax,', '[ebp+arg_10]']
mov ['[ebp+var_78],', 'eax']
mov ['ecx,', '[ebp+var_78]']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ecx+4]']
ja ['loc_441']
jb ['short', 'loc_2E1']
mov ['eax,', '[ebp+var_78]']
mov ['ecx,', '[ebp+var_30]']
cmp ['ecx,', '[eax]']
jnb ['loc_441']
mov ['[ebp+var_38],', '100000h']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_325']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+var_30]']
mov ['ecx,', '[edx+4]']
sbb ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_40],', 'eax']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_38]']
xor ['eax,', 'eax']
mov ['[ebp+var_80],', 'edx']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
cmp ['ecx,', '[ebp+var_3C]']
jb ['short', 'loc_325']
ja ['short', 'loc_31F']
mov ['edx,', '[ebp+var_80]']
cmp ['edx,', '[ebp+var_40]']
jbe ['short', 'loc_325']
mov ['eax,', '[ebp+var_40]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+30h]']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_48],', '0']
mov ['[ebp+var_4C],', '0']
mov ['eax,', '[ebp+this]']
add ['eax,', '34h']
push ['eax']
call ['_Ppmd8_DecodeSymbol@4']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+28h]']
test ['edx,', 'edx']
jnz ['short', 'loc_35C']
cmp ['[ebp+var_4C],', '0']
jge ['short', 'loc_35E']
jmp ['short', 'loc_37A']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_48]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_4C]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_48]']
add ['edx,', '1']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_38]']
jnz ['short', 'loc_33C']
mov ['ecx,', '[ebp+var_48]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_30]']
adc ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_30],', 'ecx']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+30h]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_3B0']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_4BB']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+2Ch]']
mov ['[ebp+var_54],', 'edx']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_3C7']
mov ['eax,', '[ebp+var_54]']
jmp ['loc_4BB']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+28h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3DC']
mov ['eax,', '1']
jmp ['loc_4BB']
cmp ['[ebp+var_4C],', '0']
jge ['short', 'loc_3F8']
cmp ['[ebp+var_4C],', '0FFFFFFFFh']
jz ['short', 'loc_3F2']
mov ['eax,', '1']
jmp ['loc_4BB']
mov ['[ebp+var_21],', '1']
jmp ['short', 'loc_441']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_43C']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?GetProcessed@CByteInBufWrap@@QBE_KXZ']
mov ['[ebp+var_60],', 'eax']
mov ['[ebp+var_5C],', 'edx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_30]']
push ['edx']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_43C']
mov ['eax,', '[ebp+var_68]']
jmp ['short', 'loc_4BB']
jmp ['loc_2B6']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+2Ch]']
mov ['[ebp+var_6C],', 'eax']
cmp ['[ebp+var_6C],', '0']
jz ['short', 'loc_455']
mov ['eax,', '[ebp+var_6C]']
jmp ['short', 'loc_4BB']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1CECh]']
test ['edx,', 'edx']
jz ['short', 'loc_4B9']
movzx ['eax,', '[ebp+var_21]']
test ['eax,', 'eax']
jnz ['short', 'loc_4A6']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '34h']
push ['ecx']
call ['_Ppmd8_DecodeSymbol@4']
mov ['[ebp+var_70],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+2Ch]']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_48E']
mov ['eax,', '[ebp+var_74]']
jmp ['short', 'loc_4BB']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+28h]']
test ['edx,', 'edx']
jnz ['short', 'loc_49F']
cmp ['[ebp+var_70],', '0FFFFFFFFh']
jz ['short', 'loc_4A6']
mov ['eax,', '1']
jmp ['short', 'loc_4BB']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+80h],', '0']
jz ['short', 'loc_4B9']
mov ['eax,', '1']
jmp ['short', 'loc_4BB']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN44']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '80h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?Normalize@CEncProps@NPpmdZip@NCompress@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_557']
mov ['[ebp+arg_0],', '5']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_564']
mov ['[ebp+arg_0],', '1']
cmp ['[ebp+arg_0],', '9']
jle ['short', 'loc_571']
mov ['[ebp+arg_0],', '9']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jnz ['short', 'loc_5A0']
cmp ['[ebp+arg_0],', '8']
jle ['short', 'loc_588']
mov ['[ebp+var_10],', '8']
jmp ['short', 'loc_58E']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '1']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'edx']
mov ['[ebp+var_8],', '10h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
shl ['edx,', '14h']
shr ['edx,', '4']
mov ['eax,', '[ebp+var_4]']
cmp ['edx,', '[eax+4]']
jbe ['short', 'loc_601']
mov ['[ebp+var_C],', '100000h']
jmp ['short', 'loc_5CB']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '10000000h']
ja ['short', 'loc_601']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '4']
mov ['eax,', '[ebp+var_4]']
cmp ['[eax+4],', 'edx']
ja ['short', 'loc_5FF']
mov ['ecx,', '[ebp+var_C]']
shr ['ecx,', '14h']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_C]']
jbe ['short', 'loc_5FD']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_601']
jmp ['short', 'loc_5C3']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
jnz ['short', 'loc_616']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '3']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
jnz ['short', 'loc_62E']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_0],', '7']
setnl ['cl']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CEncoder@NPpmdZip@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CEncoder@NPpmdZip@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CEncoder@NPpmdZip@NCompress@@6BICompressSetCoderProperties@@@']
mov ['[ebp+var_4],', '0']
push ['offset', '_g_BigAlloc']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '3Ch']
push ['edx']
call ['_Ppmd8_Free@8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1CBuf@NPpmdZip@NCompress@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1CByteOutBufWrap@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetCoderProperties@CEncoder@NPpmdZip@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??0CEncProps@NPpmdZip@NCompress@@QAE@XZ']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_707']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['loc_81B']
mov ['edx,', '[ebp+var_20]']
shl ['edx,', '4']
add ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_28],', 'edx']
cmp ['[ebp+var_28],', '10h']
jbe ['short', 'loc_733']
jmp ['short', 'loc_6FE']
cmp ['[ebp+var_28],', '10h']
jnz ['short', 'loc_769']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '15h']
jnz ['short', 'loc_767']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
ja ['short', 'loc_767']
jb ['short', 'loc_75E']
mov ['ecx,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[ecx+8],', '0FFFFFFFFh']
jnb ['short', 'loc_767']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_6FE']
mov ['ecx,', '[ebp+var_24]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '13h']
jz ['short', 'loc_77E']
mov ['eax,', '80070057h']
jmp ['loc_849']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
sub ['eax,', '2']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0Dh']
ja ['short', '$LN1']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'ds:$LN24[ecx]']
jmp ['ds:$LN28[edx*4]']
cmp ['[ebp+var_2C],', '100000h']
jb ['short', 'loc_7BF']
cmp ['[ebp+var_2C],', '10000000h']
jbe ['short', 'loc_7C9']
mov ['eax,', '80070057h']
jmp ['loc_849']
mov ['eax,', '[ebp+var_2C]']
shr ['eax,', '14h']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_816']
cmp ['[ebp+var_2C],', '2']
jb ['short', 'loc_7E0']
cmp ['[ebp+var_2C],', '10h']
jbe ['short', 'loc_7E7']
mov ['eax,', '80070057h']
jmp ['short', 'loc_849']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_2C]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_816']
jmp ['short', 'loc_816']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_816']
cmp ['[ebp+var_2C],', '1']
jbe ['short', 'loc_807']
mov ['eax,', '80070057h']
jmp ['short', 'loc_849']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_816']
mov ['eax,', '80070057h']
jmp ['short', 'loc_849']
jmp ['loc_6FE']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['?Normalize@CEncProps@NPpmdZip@NCompress@@QAEXH@Z']
mov ['edx,', '[ebp+this]']
add ['edx,', '1CF0h']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[edx+0Ch],', 'ecx']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??0CEncoder@NPpmdZip@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0ICompressSetCoderProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CEncoder@NPpmdZip@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CEncoder@NPpmdZip@NCompress@@6BICompressSetCoderProperties@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0CByteOutBufWrap@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0CBuf@NPpmdZip@NCompress@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1CF4h']
call ['??0CEncProps@NPpmdZip@NCompress@@QAE@XZ']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1CF4h']
call ['?Normalize@CEncProps@NPpmdZip@NCompress@@QAEXH@Z']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '10h']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+90h],', 'edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
push ['ecx']
call ['_Ppmd8_Construct@4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Code@CEncoder@NPpmdZip@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '38h']
call ['?Alloc@CBuf@NPpmdZip@NCompress@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_9C3']
mov ['eax,', '8007000Eh']
jmp ['loc_BE2']
push ['100000h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?Alloc@CByteOutBufWrap@@QAE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_9E4']
mov ['eax,', '8007000Eh']
jmp ['loc_BE2']
push ['offset', '_g_BigAlloc']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1CF4h]']
shl ['eax,', '14h']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '3Ch']
push ['ecx']
call ['_Ppmd8_Alloc@12']
test ['eax,', 'eax']
jnz ['short', 'loc_A10']
mov ['eax,', '8007000Eh']
jmp ['loc_BE2']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+24h],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?Init@CByteOutBufWrap@@QAEXXZ']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+8Ch],', '0']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+84h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+1D00h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1CFCh]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '3Ch']
push ['ecx']
call ['_Ppmd8_Init@12']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1CFCh]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+1CF4h]']
sub ['edx,', '1']
shl ['edx,', '4']
lea ['eax,', '[eax+edx-1]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+1D00h]']
shl ['edx,', '0Ch']
add ['eax,', 'edx']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
and ['eax,', '0FFh']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?WriteByte@CByteOutBufWrap@@QAEXE@Z']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '8']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?WriteByte@CByteOutBufWrap@@QAEXE@Z']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+30h]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_AC8']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_BE2']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
push ['100000h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+38h]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_B0E']
mov ['eax,', '[ebp+var_28]']
jmp ['loc_BE2']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_B3E']
push ['0FFFFFFFFh']
mov ['edx,', '[ebp+this]']
add ['edx,', '3Ch']
push ['edx']
call ['_Ppmd8_EncodeSymbol@8']
mov ['eax,', '[ebp+this]']
add ['eax,', '3Ch']
push ['eax']
call ['_Ppmd8_RangeEnc_FlushData@4']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?Flush@CByteOutBufWrap@@QAEJXZ']
jmp ['loc_BE2']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_B50']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_20]']
jnb ['short', 'loc_B88']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+38h]']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[ecx+edx]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '3Ch']
push ['ecx']
call ['_Ppmd8_EncodeSymbol@8']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+30h]']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_B86']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_BE2']
jmp ['short', 'loc_B47']
mov ['ecx,', '[ebp+var_20]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_14]']
adc ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_BDD']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?GetProcessed@CByteOutBufWrap@@QBE_KXZ']
mov ['[ebp+var_3C],', 'eax']
mov ['[ebp+var_38],', 'edx']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_BDD']
mov ['eax,', '[ebp+var_44]']
jmp ['short', 'loc_BE2']
jmp ['loc_AD6']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
__unwindfunclet$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CByteInBufWrap@@QAE@XZ']
endp
__ehhandler$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CByteInBufWrap@@QAE@XZ']
endp
__ehhandler$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1CByteOutBufWrap@@QAE@XZ']
endp
__ehhandler$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1CByteOutBufWrap@@QAE@XZ']
endp
__unwindfunclet$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1CBuf@NPpmdZip@NCompress@@QAE@XZ']
endp
__ehhandler$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CByteInBufWrap@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CByteInBufWrap@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBuf@NPpmdZip@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CDecoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_FE0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_FE7']
mov ['eax,', '80004002h']
jmp ['short', 'loc_FF8']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CDecoder@NPpmdZip@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?Release@CDecoder@NPpmdZip@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_10AE']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_10D8']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_10CF']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCDecoder@NPpmdZip@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_10D6']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCDecoder@NPpmdZip@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDecoder@NPpmdZip@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1112']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBuf@NPpmdZip@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_MidFree@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CByteInBufWrap@@QAEXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+20h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessed@CByteInBufWrap@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
sub ['eax,', '[ecx+0Ch]']
cdq
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+18h]']
adc ['edx,', '[ecx+1Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadByte@CByteInBufWrap@@QAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jz ['short', 'loc_1278']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['dl,', '[ecx]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
jmp ['short', 'loc_1280']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByteFromNewBlock@CByteInBufWrap@@QAEEXZ']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@CBuf@NPpmdZip@NCompress@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_12B5']
push ['100000h']
call ['_MidAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', '[edx],', '0']
setnz ['al']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CByteOutBufWrap@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CByteOutBufWrap@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CEncoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_14DD']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_14CC']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_14D3']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_1518']
push ['offset', '_IID_ICompressSetCoderProperties']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1511']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1500']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1507']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_1518']
mov ['eax,', '80004002h']
jmp ['short', 'loc_1529']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+8],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CEncoder@NPpmdZip@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CEncoder@NPpmdZip@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_15A2']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
jmp ['short', 'loc_15CC']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_15C3']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCEncoder@NPpmdZip@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_15CA']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCEncoder@NPpmdZip@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CEncoder@NPpmdZip@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1606']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CEncProps@NPpmdZip@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetCoderProperties@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetCoderProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CByteOutBufWrap@@QAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessed@CByteOutBufWrap@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
sub ['eax,', '[ecx+0Ch]']
cdq
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+18h]']
adc ['edx,', '[ecx+1Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WriteByte@CByteOutBufWrap@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_1762']
mov ['ecx,', '[ebp+var_4]']
call ['?Flush@CByteOutBufWrap@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?QueryInterface@CEncoder@NPpmdZip@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CEncoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CEncoder@NPpmdZip@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CEncoder@NPpmdZip@NCompress@@UAGKXZ']
endp
?AddRef@CEncoder@NPpmdZip@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CEncoder@NPpmdZip@NCompress@@UAGKXZ']
endp

??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0ICompressGetInStreamProcessedSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0ICompressSetInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0ICompressSetOutStreamSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0CLzOutWindow@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
mov ['edx,', '[ebp+var_10]']
mov ['al,', '[ebp+arg_4]']
mov ['[edx+0D56h],', 'al']
mov ['ecx,', '[ebp+var_10]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+0D57h],', 'dl']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0D58h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0D59h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+0D5Ah],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0D64h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ReadAlignedByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeCodeLevelTable@CCoder@NDecoder@NDeflate@NCompress@@AAE_NPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '48h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0A80h']
call ['??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '10h']
jnb ['short', 'loc_31F']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_3DE']
cmp ['[ebp+var_C],', '13h']
jnb ['loc_3DA']
cmp ['[ebp+var_C],', '10h']
jnz ['short', 'loc_383']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_33C']
xor ['al,', 'al']
jmp ['loc_3EC']
push ['2']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z']
add ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_360']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_10],', '0']
jbe ['short', 'loc_381']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_381']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_8]']
mov ['al,', '[edx-1]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_34E']
jmp ['short', 'loc_3D8']
cmp ['[ebp+var_C],', '11h']
jnz ['short', 'loc_39B']
push ['3']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z']
add ['eax,', '3']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_3AB']
push ['7']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z']
add ['eax,', '0Bh']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_3B6']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jbe ['short', 'loc_3D8']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_4]']
jnb ['short', 'loc_3D8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_3AD']
jmp ['short', 'loc_3DE']
xor ['al,', 'al']
jmp ['short', 'loc_3EC']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_4]']
jb ['loc_2E8']
mov ['al,', '1']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadTables@CCoder@NDecoder@NDeflate@NCompress@@AAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2C8h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_2C8]']
mov ['ecx,', '0B2h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z']
sub ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0D54h],', 'al']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '48h']
call ['?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_465']
xor ['al,', 'al']
jmp ['loc_702']
push ['2']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '2']
jbe ['short', 'loc_47F']
xor ['al,', 'al']
jmp ['loc_702']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '48h']
call ['?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_498']
xor ['al,', 'al']
jmp ['loc_702']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_4FB']
mov ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx+0D55h],', '1']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '48h']
call ['?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadAligned_UInt16@CCoder@NDecoder@NDeflate@NCompress@@QAEIXZ']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0D4Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0D56h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4D9']
mov ['al,', '1']
jmp ['loc_702']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadAligned_UInt16@CCoder@NDecoder@NDeflate@NCompress@@QAEIXZ']
not ['eax']
movzx ['edx,', 'ax']
mov ['eax,', '[ebp+var_8]']
xor ['ecx,', 'ecx']
cmp ['[eax+0D4Ch],', 'edx']
setz ['cl']
mov ['al,', 'cl']
jmp ['loc_702']
mov ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx+0D55h],', '0']
cmp ['[ebp+var_C],', '1']
jnz ['short', 'loc_538']
lea ['ecx,', '[ebp+Dst]']
call ['?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0D57h]']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '2']
add ['ecx,', '1Eh']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0D50h],', 'ecx']
jmp ['loc_6D0']
push ['5']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z']
add ['eax,', '101h']
mov ['[ebp+Size],', 'eax']
push ['5']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0D50h],', 'eax']
push ['4']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z']
add ['eax,', '4']
mov ['[ebp+var_15C],', 'eax']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+0D57h]']
test ['eax,', 'eax']
jnz ['short', 'loc_597']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+0D50h],', '1Eh']
jbe ['short', 'loc_597']
xor ['al,', 'al']
jmp ['loc_702']
mov ['[ebp+var_17C],', '0']
jmp ['short', 'loc_5B2']
mov ['edx,', '[ebp+var_17C]']
add ['edx,', '1']
mov ['[ebp+var_17C],', 'edx']
cmp ['[ebp+var_17C],', '13h']
jnb ['short', 'loc_605']
mov ['eax,', '[ebp+var_17C]']
movzx ['ecx,', '_kCodeLengthAlphabetOrder[eax]']
mov ['[ebp+var_180],', 'ecx']
mov ['edx,', '[ebp+var_17C]']
cmp ['edx,', '[ebp+var_15C]']
jnb ['short', 'loc_5F5']
push ['3']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z']
mov ['ecx,', '[ebp+var_180]']
mov ['[ebp+ecx+var_174],', 'al']
jmp ['short', 'loc_603']
mov ['edx,', '[ebp+var_180]']
mov ['[ebp+edx+var_174],', '0']
jmp ['short', 'loc_5A3']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '48h']
call ['?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_61E']
xor ['al,', 'al']
jmp ['loc_702']
lea ['ecx,', '[ebp+var_174]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0A80h']
call ['?SetCodeLengths@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAE_NPBE@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_641']
xor ['al,', 'al']
jmp ['loc_702']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Size]']
add ['ecx,', '[eax+0D50h]']
push ['ecx']
lea ['edx,', '[ebp+Src]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?DeCodeLevelTable@CCoder@NDecoder@NDeflate@NCompress@@AAE_NPAEI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_66E']
xor ['al,', 'al']
jmp ['loc_702']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '48h']
call ['?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_684']
xor ['al,', 'al']
jmp ['short', 'loc_702']
lea ['ecx,', '[ebp+Dst]']
call ['?SubClear@CLevels@NDeflate@NCompress@@QAEXXZ']
mov ['edx,', '[ebp+Size]']
push ['edx']
lea ['eax,', '[ebp+Src]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0D50h]']
push ['eax']
mov ['ecx,', '[ebp+Size]']
lea ['edx,', '[ebp+ecx+Src]']
push ['edx']
lea ['eax,', '[ebp+var_30]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '80h']
call ['?SetCodeLengths@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAE_NPBE@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_6F0']
xor ['al,', 'al']
jmp ['short', 'loc_702']
lea ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '780h']
call ['?SetCodeLengths@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAE_NPBE@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2C8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CodeSpec@CCoder@NDecoder@NDeflate@NCompress@@AAEJI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0D5Ch],', '0FFFFFFFFh']
jnz ['short', 'loc_7BD']
xor ['eax,', 'eax']
jmp ['loc_C7B']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+0D5Ch],', '0FFFFFFFEh']
jnz ['loc_86D']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+0D58h]']
test ['eax,', 'eax']
jnz ['short', 'loc_812']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0D57h]']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '8000h']
add ['edx,', '8000h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?Create@COutBuffer@@QAE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_812']
mov ['eax,', '8007000Eh']
jmp ['loc_C7B']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0D5Ah]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_836']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_C7B']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0D58h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?Init@CLzOutWindow@@QAEX_N@Z']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0D54h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0D5Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0D5Bh],', '1']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0D5Ch],', '0']
jle ['short', 'loc_8C7']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_8C7']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0D5Ch]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0D5Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0D60h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?GetByte@CLzOutWindow@@QBEEI@Z']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'al']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_C+3]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?PutByte@CLzOutWindow@@QAEXE@Z']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_86D']
cmp ['[ebp+arg_0],', '0']
ja ['short', 'loc_8D9']
movzx ['ecx,', '[ebp+arg_4]']
test ['ecx,', 'ecx']
jz ['loc_C60']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8F5']
mov ['eax,', '1']
jmp ['loc_C7B']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0D5Bh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_962']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+0D54h]']
test ['eax,', 'eax']
jz ['short', 'loc_923']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0D5Ch],', '0FFFFFFFFh']
jmp ['loc_C60']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadTables@CCoder@NDecoder@NDeflate@NCompress@@AAE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_93C']
mov ['eax,', '1']
jmp ['loc_C7B']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_958']
mov ['eax,', '1']
jmp ['loc_C7B']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0D5Bh],', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+0D55h]']
test ['eax,', 'eax']
jz ['loc_A60']
movzx ['ecx,', '[ebp+arg_4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_998']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_998']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0D4Ch],', '0']
jz ['short', 'loc_998']
mov ['eax,', '1']
jmp ['loc_C7B']
jmp ['short', 'loc_9B8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0D4Ch]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0D4Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+0D4Ch],', '0']
jbe ['short', 'loc_9F5']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_9F5']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ThereAreDataInBitsBuffer@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9F5']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?PutByte@CLzOutWindow@@QAEXE@Z']
jmp ['short', 'loc_99A']
jmp ['short', 'loc_A15']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0D4Ch]']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+0D4Ch],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0D4Ch],', '0']
jbe ['short', 'loc_A43']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_A43']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ReadDirectByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?PutByte@CLzOutWindow@@QAEXE@Z']
jmp ['short', 'loc_9F7']
mov ['ecx,', '[ebp+var_4]']
xor ['edx,', 'edx']
cmp ['dword', 'ptr', '[ecx+0D4Ch],', '0']
setz ['dl']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+0D5Bh],', 'dl']
jmp ['loc_8C7']
cmp ['[ebp+arg_0],', '0']
jbe ['loc_C20']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ExtraBitsWereRead_Fast@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A86']
mov ['eax,', '1']
jmp ['loc_C7B']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '48h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '80h']
call ['??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '100h']
jnb ['short', 'loc_AC7']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?PutByte@CLzOutWindow@@QAEXE@Z']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_A60']
jmp ['loc_C1B']
cmp ['[ebp+var_10],', '100h']
jnz ['short', 'loc_AE4']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0D5Bh],', '1']
jmp ['loc_C20']
jmp ['loc_C1B']
cmp ['[ebp+var_10],', '11Eh']
jnb ['loc_C14']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '101h']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0D57h]']
test ['edx,', 'edx']
jz ['short', 'loc_B26']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', '_kLenStart64[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', '_kLenDirectBits64[edx]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_B40']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', '_kLenStart32[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', '_kLenDirectBits32[eax]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax+3]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+arg_0]']
jbe ['short', 'loc_B6D']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '48h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '780h']
call ['??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ecx+0D50h]']
jb ['short', 'loc_B9D']
mov ['eax,', '1']
jmp ['loc_C7B']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', '_kDistDirectBits[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
mov ['edx,', '[ebp+var_10]']
add ['eax,', '_kDistStart[edx*4]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?CopyBlock@CLzOutWindow@@QAE_NII@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_BE4']
mov ['eax,', '1']
jmp ['loc_C7B']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+var_1C]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
jz ['short', 'loc_C12']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+0D5Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx+0D60h],', 'edx']
jmp ['short', 'loc_C20']
jmp ['short', 'loc_C1B']
mov ['eax,', '1']
jmp ['short', 'loc_C7B']
jmp ['loc_A60']
movzx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jz ['short', 'loc_C5B']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_C5B']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '80h']
call ['??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z']
cmp ['eax,', '100h']
jz ['short', 'loc_C51']
mov ['eax,', '1']
jmp ['short', 'loc_C7B']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0D5Bh],', '1']
jmp ['loc_8C7']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_C79']
mov ['eax,', '1']
jmp ['short', 'loc_C7B']
xor ['eax,', 'eax']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??0CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@PAV1234@@Z']
mov ['[ebp+var_9C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+0D5Ah]']
test ['eax,', 'eax']
jz ['short', 'loc_D2A']
mov ['[ebp+var_A4],', '0']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_D59']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '48h']
call ['?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ']
mov ['[ebp+var_AC],', 'eax']
mov ['[ebp+var_A8],', 'edx']
mov ['ecx,', '[ebp+var_AC]']
mov ['[ebp+var_A4],', 'ecx']
mov ['edx,', '[ebp+var_A8]']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_A0]']
mov ['[ebp+var_2C],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_34],', 'edx']
mov ['[ebp+var_3C],', '40000h']
mov ['[ebp+var_3D],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_DFF']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
sub ['eax,', '[ebp+var_38]']
sbb ['edx,', '[ebp+var_34]']
mov ['ecx,', '[ebp+arg_4]']
mov ['esi,', '[ecx]']
sub ['esi,', 'eax']
mov ['eax,', '[ecx+4]']
sbb ['eax,', 'edx']
mov ['[ebp+var_48],', 'esi']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
xor ['edx,', 'edx']
mov ['[ebp+var_B4],', 'ecx']
mov ['[ebp+var_B0],', 'edx']
mov ['eax,', '[ebp+var_B0]']
cmp ['eax,', '[ebp+var_44]']
jb ['short', 'loc_DFF']
ja ['short', 'loc_DD9']
mov ['ecx,', '[ebp+var_B4]']
cmp ['ecx,', '[ebp+var_48]']
jb ['short', 'loc_DFF']
mov ['edx,', '[ebp+var_48]']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0D64h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_DFB']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+0D59h]']
test ['eax,', 'eax']
jz ['short', 'loc_DFF']
mov ['[ebp+var_3D],', '1']
movzx ['ecx,', '[ebp+var_3D]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_E12']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_E12']
jmp ['loc_F12']
movzx ['edx,', '[ebp+var_3D]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?CodeSpec@CCoder@NDecoder@NDeflate@NCompress@@AAEJI_N@Z']
mov ['[ebp+var_B8],', 'eax']
mov ['ecx,', '[ebp+var_B8]']
mov ['[ebp+var_4C],', 'ecx']
cmp ['[ebp+var_4C],', '0']
jz ['short', 'loc_E58']
mov ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_90],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+var_90]']
jmp ['loc_102E']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+0D5Ch],', '0FFFFFFFFh']
jnz ['short', 'loc_E69']
jmp ['loc_F12']
cmp ['[ebp+arg_8],', '0']
jz ['loc_F0D']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '48h']
call ['?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ']
mov ['[ebp+var_C0],', 'eax']
mov ['[ebp+var_BC],', 'edx']
mov ['ecx,', '[ebp+var_C0]']
sub ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_BC]']
sbb ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_58],', 'ecx']
mov ['[ebp+var_54],', 'edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
sub ['eax,', '[ebp+var_38]']
sbb ['edx,', '[ebp+var_34]']
mov ['[ebp+var_68],', 'eax']
mov ['[ebp+var_64],', 'edx']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_68]']
push ['eax']
lea ['ecx,', '[ebp+var_58]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C4],', 'eax']
mov ['eax,', '[ebp+var_C4]']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_F0D']
mov ['ecx,', '[ebp+var_70]']
mov ['[ebp+var_94],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+var_94]']
jmp ['loc_102E']
jmp ['loc_D7C']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[edx+0D5Ch],', '0FFFFFFFFh']
jnz ['short', 'loc_F71']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0D64h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_F71']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '48h']
call ['?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_F49']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '1']
mov ['[ebp+var_74],', 'edx']
cmp ['[ebp+var_74],', '4']
jnb ['short', 'loc_F71']
mov ['ecx,', '[ebp+var_14]']
call ['?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ']
mov ['[ebp+var_C5],', 'al']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_74]']
mov ['cl,', '[ebp+var_C5]']
mov ['[eax+0D65h],', 'cl']
jmp ['short', 'loc_F40']
mov ['[ebp+var_20],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?Flush@CCoder@NDecoder@NDeflate@NCompress@@AAEJXZ']
mov ['[ebp+var_CC],', 'eax']
mov ['edx,', '[ebp+var_CC]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_FD5']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+0D5Ch],', '0FFFFFFFEh']
jz ['short', 'loc_FD5']
mov ['ecx,', '[ebp+var_14]']
call ['?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ']
mov ['[ebp+var_CD],', 'al']
movzx ['ecx,', '[ebp+var_CD]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FD5']
mov ['[ebp+var_98],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+var_98]']
jmp ['short', 'loc_102E']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ']
jmp ['short', 'loc_1024']
endp
__catch$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$0 proc near
mov ['edx,', '[ebp-7Ch]']
mov ['eax,', '[edx]']
mov ['[ebp-18h],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$3']
retn
endp
__catch$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$1 proc near
mov ['ecx,', '[ebp-88h]']
mov ['edx,', '[ecx]']
mov ['[ebp-18h],', 'edx']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$3']
retn
endp
__catch$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$2 proc near
mov ['dword', 'ptr', '[ebp-18h],', '1']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$3']
retn
endp
?Code@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['ecx']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '0Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['eax']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
mov ['esi,', 'esp']
push ['ecx']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?GetInStreamProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_1164']
mov ['eax,', '80070057h']
jmp ['short', 'loc_1179']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '44h']
call ['?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['[ecx+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?SetInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '38h']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '40h']
call ['?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?ReleaseInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '38h']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?SetOutStreamSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+0D50h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+0D4Eh],', '1']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+0D4Ch]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['?Init@CLzOutWindow@@QAEX_N@Z']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '2Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1265']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?SetMemStream@COutBuffer@@QAEXPAE@Z']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '10h']
call ['?CodeSpec@CCoder@NDecoder@NDeflate@NCompress@@AAEJI_N@Z']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_12D5']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '10h']
call ['?Flush@CCoder@NDecoder@NDeflate@NCompress@@AAEJXZ']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_12D5']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
sub ['eax,', '[ebp+var_1C]']
sbb ['edx,', '[ebp+var_18]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_1315']
endp
__catch$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$0 proc near
mov ['eax,', '[ebp-24h]']
mov ['ecx,', '[eax]']
mov ['[ebp-14h],', 'ecx']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$3']
retn
endp
__catch$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$1 proc near
mov ['edx,', '[ebp-30h]']
mov ['eax,', '[edx]']
mov ['[ebp-14h],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$3']
retn
endp
__catch$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$2 proc near
mov ['dword', 'ptr', '[ebp-14h],', '1']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$3']
retn
endp
?CodeResume@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+0D5Ch],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0D58h]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Init@CLzOutWindow@@QAEX_N@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
__unwindfunclet$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1CLzOutWindow@@QAE@XZ']
endp
__ehhandler$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$4 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ']
endp
__ehhandler$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0D4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-40h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1ACE']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1ABA']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_1AC1']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['loc_1BA8']
push ['offset', '_IID_ICompressGetInStreamProcessedSize']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1B05']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1AF1']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1AF8']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['loc_1BA8']
push ['offset', '_IID_ICompressSetInStream']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1B39']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1B28']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_1B2F']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_1BA8']
push ['offset', '_IID_ICompressSetOutStreamSize']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1B6D']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1B5C']
mov ['edx,', '[ebp+this]']
add ['edx,', '0Ch']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_1B63']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_1BA8']
push ['offset', '_IID_ISequentialInStream']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1BA1']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1B90']
mov ['eax,', '[ebp+this]']
add ['eax,', '10h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1B97']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_1BA8']
mov ['eax,', '80004002h']
jmp ['short', 'loc_1BB9']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+14h],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+14h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1C77']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+14h]']
jmp ['short', 'loc_1CAF']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1CA6']
mov ['esi,', 'esp']
push ['1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_1CAD']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1CEA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1CLzOutWindow@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1CLzOutWindow@@QAE@XZ']
endp
__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CLzOutWindow@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutBuffer@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CInBuffer@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CInBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressGetInStreamProcessedSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressGetInStreamProcessedSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetOutStreamSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetOutStreamSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CLzOutWindow@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0COutBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CInBufferBase@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SubClear@CLevels@NDeflate@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '101h']
jmp ['short', 'loc_21A9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '120h']
jnb ['short', 'loc_21BD']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '0']
jmp ['short', 'loc_21A0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_21CF']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '20h']
jnb ['short', 'loc_21E4']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+120h],', '0']
jmp ['short', 'loc_21C6']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2211']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '90h']
jnb ['short', 'loc_2225']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '8']
jmp ['short', 'loc_2208']
jmp ['short', 'loc_2230']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '100h']
jnb ['short', 'loc_2244']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '9']
jmp ['short', 'loc_2227']
jmp ['short', 'loc_224F']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '118h']
jnb ['short', 'loc_2263']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx],', '7']
jmp ['short', 'loc_2246']
jmp ['short', 'loc_226E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '120h']
jnb ['short', 'loc_2282']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '8']
jmp ['short', 'loc_2265']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2294']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '20h']
jnb ['short', 'loc_22A9']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+120h],', '5']
jmp ['short', 'loc_228B']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadAligned_UInt16@CCoder@NDecoder@NDeflate@NCompress@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ReadAlignedByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ']
movzx ['eax,', 'al']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ReadAlignedByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ']
movzx ['eax,', 'al']
shl ['eax,', '8']
or ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CopyBlock@CLzOutWindow@@QAE_NII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[edx+4]']
jb ['short', 'loc_235D']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+24h]']
test ['edx,', 'edx']
jz ['short', 'loc_234A']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+10h]']
jb ['short', 'loc_2351']
xor ['al,', 'al']
jmp ['loc_2439']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[edx+10h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+8]']
sub ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_4]']
jbe ['short', 'loc_23CD']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
sub ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_4]']
jbe ['short', 'loc_23CD']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax]']
mov ['[edx],', 'cl']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
jnz ['short', 'loc_23A4']
jmp ['short', 'loc_2437']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+10h]']
jnz ['short', 'loc_23DF']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_14]']
mov ['esi,', '[ebp+var_8]']
mov ['cl,', '[ecx+esi]']
mov ['[eax+edx],', 'cl']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+8]']
jnz ['short', 'loc_242C']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
jnz ['short', 'loc_23CD']
mov ['al,', '1']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?PutByte@CLzOutWindow@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+arg_0]']
mov ['[eax+ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jnz ['short', 'loc_249F']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetByte@CLzOutWindow@@QBEEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[edx+4]']
jb ['short', 'loc_24ED']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ecx+10h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[ecx+edx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['20000h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_252C']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_254B']
movzx ['ecx,', '[ebp+arg_0]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2549']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0D5Ah],', '0']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Flush@CCoder@NDecoder@NDeflate@NCompress@@AAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?Flush@COutBuffer@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@PAV1234@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+4],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2637']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx]']
call ['?Flush@CCoder@NDecoder@NDeflate@NCompress@@AAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetMemStream@COutBuffer@@QAEXPAE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+20h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_26E2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_272F']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_276C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_278F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+30h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
shl ['eax,', 'cl']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
and ['eax,', '[ecx+30h]']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '20h']
sub ['ecx,', '[eax]']
and ['ecx,', '7']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadDirectByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ReadByte@CInBufferBase@@QAEEXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadByte@CInBufferBase@@QAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+4]']
jb ['short', 'loc_28BA']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ']
jmp ['short', 'loc_28D4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['dl,', '[ecx]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadAlignedByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '20h']
jnz ['short', 'loc_2910']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ReadByte@CInBufferBase@@QAEEXZ']
jmp ['short', 'loc_292C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+30h]']
and ['edx,', '0FFh']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'dl']
push ['8']
mov ['ecx,', '[ebp+var_4]']
call ['?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Create@CInBuffer@@QAE_NI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?GetProcessedSize@CInBufferBase@@QBE_KXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '20h']
sub ['esi,', '[ecx]']
shr ['esi,', '3']
xor ['ecx,', 'ecx']
sub ['eax,', 'esi']
sbb ['edx,', 'ecx']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessedSize@CInBufferBase@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
xor ['esi,', 'esi']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
adc ['esi,', '[edx+14h]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[eax]']
sub ['eax,', '[edx+8]']
cdq
add ['ecx,', 'eax']
adc ['esi,', 'edx']
mov ['eax,', 'ecx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ThereAreDataInBitsBuffer@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '20h']
setnz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+28h],', '4']
ja ['short', 'loc_2A94']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '20h']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
shl ['ecx,', '3']
cmp ['edx,', 'ecx']
jb ['short', 'loc_2A94']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2A9B']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ExtraBitsWereRead_Fast@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '4']
cmp ['ecx,', '[eax+28h]']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetCodeLengths@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAE_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0BCh']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_BC]']
mov ['ecx,', '2Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_9C],', '1']
jmp ['short', 'loc_2B0E']
mov ['eax,', '[ebp+var_9C]']
add ['eax,', '1']
mov ['[ebp+var_9C],', 'eax']
cmp ['[ebp+var_9C],', '0Fh']
ja ['short', 'loc_2B27']
mov ['ecx,', '[ebp+var_9C]']
mov ['[ebp+ecx*4+var_4C],', '0']
jmp ['short', 'loc_2AFF']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_2B42']
mov ['edx,', '[ebp+var_A0]']
add ['edx,', '1']
mov ['[ebp+var_A0],', 'edx']
cmp ['[ebp+var_A0],', '120h']
jnb ['short', 'loc_2B9D']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_A0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_A4],', 'ecx']
cmp ['[ebp+var_A4],', '0Fh']
jbe ['short', 'loc_2B70']
xor ['al,', 'al']
jmp ['loc_2D7D']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+edx*4+var_4C]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+ecx*4+var_4C],', 'eax']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4+80h],', '0FFFFFFFFh']
jmp ['short', 'loc_2B33']
mov ['[ebp+var_4C],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+40h],', '0']
mov ['[ebp+var_A8],', '0']
mov ['[ebp+var_AC],', '0']
mov ['[ebp+var_B0],', '8000h']
mov ['[ebp+var_9C],', '1']
jmp ['short', 'loc_2BF0']
mov ['eax,', '[ebp+var_9C]']
add ['eax,', '1']
mov ['[ebp+var_9C],', 'eax']
cmp ['[ebp+var_9C],', '0Fh']
ja ['loc_2CFD']
mov ['ecx,', '0Fh']
sub ['ecx,', '[ebp+var_9C]']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+edx*4+var_4C]']
shl ['eax,', 'cl']
add ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '8000h']
jbe ['short', 'loc_2C33']
xor ['al,', 'al']
jmp ['loc_2D7D']
cmp ['[ebp+var_9C],', '0Fh']
jnz ['short', 'loc_2C48']
mov ['[ebp+var_BC],', '8000h']
jmp ['short', 'loc_2C54']
mov ['ecx,', '[ebp+var_A8]']
mov ['[ebp+var_BC],', 'ecx']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_BC]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4+3Ch]']
mov ['edx,', '[ebp+var_9C]']
add ['ecx,', '[ebp+edx*4+var_50]']
mov ['eax,', '[ebp+var_9C]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+eax*4+40h],', 'ecx']
mov ['eax,', '[ebp+var_9C]']
mov ['ecx,', '[ebp+var_9C]']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+ecx*4+40h]']
mov ['[ebp+eax*4+var_94],', 'ecx']
cmp ['[ebp+var_9C],', '9']
ja ['short', 'loc_2CF8']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4]']
shr ['ecx,', '6']
mov ['[ebp+var_B4],', 'ecx']
jmp ['short', 'loc_2CD3']
mov ['edx,', '[ebp+var_AC]']
add ['edx,', '1']
mov ['[ebp+var_AC],', 'edx']
mov ['eax,', '[ebp+var_AC]']
cmp ['eax,', '[ebp+var_B4]']
jnb ['short', 'loc_2CF8']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_AC]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_9C]']
mov ['[ecx+500h],', 'dl']
jmp ['short', 'loc_2CC4']
jmp ['loc_2BE1']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_2D18']
mov ['eax,', '[ebp+var_A0]']
add ['eax,', '1']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '120h']
jnb ['short', 'loc_2D7B']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_A0]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_B8],', 'edx']
cmp ['[ebp+var_B8],', '0']
jz ['short', 'loc_2D79']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_94]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_A0]']
mov ['[edx+ecx*4+80h],', 'eax']
mov ['ecx,', '[ebp+var_B8]']
mov ['edx,', '[ebp+ecx*4+var_94]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_B8]']
mov ['[ebp+eax*4+var_94],', 'edx']
jmp ['short', 'loc_2D09']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetCodeLengths@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAE_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0BCh']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_BC]']
mov ['ecx,', '2Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_9C],', '1']
jmp ['short', 'loc_2E1E']
mov ['eax,', '[ebp+var_9C]']
add ['eax,', '1']
mov ['[ebp+var_9C],', 'eax']
cmp ['[ebp+var_9C],', '0Fh']
ja ['short', 'loc_2E37']
mov ['ecx,', '[ebp+var_9C]']
mov ['[ebp+ecx*4+var_4C],', '0']
jmp ['short', 'loc_2E0F']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_2E52']
mov ['edx,', '[ebp+var_A0]']
add ['edx,', '1']
mov ['[ebp+var_A0],', 'edx']
cmp ['[ebp+var_A0],', '20h']
jnb ['short', 'loc_2EAA']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_A0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_A4],', 'ecx']
cmp ['[ebp+var_A4],', '0Fh']
jbe ['short', 'loc_2E7D']
xor ['al,', 'al']
jmp ['loc_3087']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+edx*4+var_4C]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+ecx*4+var_4C],', 'eax']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4+80h],', '0FFFFFFFFh']
jmp ['short', 'loc_2E43']
mov ['[ebp+var_4C],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+40h],', '0']
mov ['[ebp+var_A8],', '0']
mov ['[ebp+var_AC],', '0']
mov ['[ebp+var_B0],', '8000h']
mov ['[ebp+var_9C],', '1']
jmp ['short', 'loc_2EFD']
mov ['eax,', '[ebp+var_9C]']
add ['eax,', '1']
mov ['[ebp+var_9C],', 'eax']
cmp ['[ebp+var_9C],', '0Fh']
ja ['loc_300A']
mov ['ecx,', '0Fh']
sub ['ecx,', '[ebp+var_9C]']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+edx*4+var_4C]']
shl ['eax,', 'cl']
add ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '8000h']
jbe ['short', 'loc_2F40']
xor ['al,', 'al']
jmp ['loc_3087']
cmp ['[ebp+var_9C],', '0Fh']
jnz ['short', 'loc_2F55']
mov ['[ebp+var_BC],', '8000h']
jmp ['short', 'loc_2F61']
mov ['ecx,', '[ebp+var_A8]']
mov ['[ebp+var_BC],', 'ecx']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_BC]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4+3Ch]']
mov ['edx,', '[ebp+var_9C]']
add ['ecx,', '[ebp+edx*4+var_50]']
mov ['eax,', '[ebp+var_9C]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+eax*4+40h],', 'ecx']
mov ['eax,', '[ebp+var_9C]']
mov ['ecx,', '[ebp+var_9C]']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+ecx*4+40h]']
mov ['[ebp+eax*4+var_94],', 'ecx']
cmp ['[ebp+var_9C],', '9']
ja ['short', 'loc_3005']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4]']
shr ['ecx,', '6']
mov ['[ebp+var_B4],', 'ecx']
jmp ['short', 'loc_2FE0']
mov ['edx,', '[ebp+var_AC]']
add ['edx,', '1']
mov ['[ebp+var_AC],', 'edx']
mov ['eax,', '[ebp+var_AC]']
cmp ['eax,', '[ebp+var_B4]']
jnb ['short', 'loc_3005']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_AC]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_9C]']
mov ['[ecx+100h],', 'dl']
jmp ['short', 'loc_2FD1']
jmp ['loc_2EEE']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_3025']
mov ['eax,', '[ebp+var_A0]']
add ['eax,', '1']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '20h']
jnb ['short', 'loc_3085']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_A0]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_B8],', 'edx']
cmp ['[ebp+var_B8],', '0']
jz ['short', 'loc_3083']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_94]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_A0]']
mov ['[edx+ecx*4+80h],', 'eax']
mov ['ecx,', '[ebp+var_B8]']
mov ['edx,', '[ebp+ecx*4+var_94]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_B8]']
mov ['[ebp+eax*4+var_94],', 'edx']
jmp ['short', 'loc_3016']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetCodeLengths@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAE_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0BCh']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_BC]']
mov ['ecx,', '2Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_9C],', '1']
jmp ['short', 'loc_312A']
mov ['eax,', '[ebp+var_9C]']
add ['eax,', '1']
mov ['[ebp+var_9C],', 'eax']
cmp ['[ebp+var_9C],', '0Fh']
ja ['short', 'loc_3143']
mov ['ecx,', '[ebp+var_9C]']
mov ['[ebp+ecx*4+var_4C],', '0']
jmp ['short', 'loc_311B']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_315E']
mov ['edx,', '[ebp+var_A0]']
add ['edx,', '1']
mov ['[ebp+var_A0],', 'edx']
cmp ['[ebp+var_A0],', '13h']
jnb ['short', 'loc_31B6']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_A0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_A4],', 'ecx']
cmp ['[ebp+var_A4],', '0Fh']
jbe ['short', 'loc_3189']
xor ['al,', 'al']
jmp ['loc_3393']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+edx*4+var_4C]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+ecx*4+var_4C],', 'eax']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4+80h],', '0FFFFFFFFh']
jmp ['short', 'loc_314F']
mov ['[ebp+var_4C],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+40h],', '0']
mov ['[ebp+var_A8],', '0']
mov ['[ebp+var_AC],', '0']
mov ['[ebp+var_B0],', '8000h']
mov ['[ebp+var_9C],', '1']
jmp ['short', 'loc_3209']
mov ['eax,', '[ebp+var_9C]']
add ['eax,', '1']
mov ['[ebp+var_9C],', 'eax']
cmp ['[ebp+var_9C],', '0Fh']
ja ['loc_3316']
mov ['ecx,', '0Fh']
sub ['ecx,', '[ebp+var_9C]']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+edx*4+var_4C]']
shl ['eax,', 'cl']
add ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '8000h']
jbe ['short', 'loc_324C']
xor ['al,', 'al']
jmp ['loc_3393']
cmp ['[ebp+var_9C],', '0Fh']
jnz ['short', 'loc_3261']
mov ['[ebp+var_BC],', '8000h']
jmp ['short', 'loc_326D']
mov ['ecx,', '[ebp+var_A8]']
mov ['[ebp+var_BC],', 'ecx']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_BC]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4+3Ch]']
mov ['edx,', '[ebp+var_9C]']
add ['ecx,', '[ebp+edx*4+var_50]']
mov ['eax,', '[ebp+var_9C]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+eax*4+40h],', 'ecx']
mov ['eax,', '[ebp+var_9C]']
mov ['ecx,', '[ebp+var_9C]']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+ecx*4+40h]']
mov ['[ebp+eax*4+var_94],', 'ecx']
cmp ['[ebp+var_9C],', '9']
ja ['short', 'loc_3311']
mov ['edx,', '[ebp+var_9C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4]']
shr ['ecx,', '6']
mov ['[ebp+var_B4],', 'ecx']
jmp ['short', 'loc_32EC']
mov ['edx,', '[ebp+var_AC]']
add ['edx,', '1']
mov ['[ebp+var_AC],', 'edx']
mov ['eax,', '[ebp+var_AC]']
cmp ['eax,', '[ebp+var_B4]']
jnb ['short', 'loc_3311']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_AC]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_9C]']
mov ['[ecx+0CCh],', 'dl']
jmp ['short', 'loc_32DD']
jmp ['loc_31FA']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_3331']
mov ['eax,', '[ebp+var_A0]']
add ['eax,', '1']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '13h']
jnb ['short', 'loc_3391']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_A0]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_B8],', 'edx']
cmp ['[ebp+var_B8],', '0']
jz ['short', 'loc_338F']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_94]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_A0]']
mov ['[edx+ecx*4+80h],', 'eax']
mov ['ecx,', '[ebp+var_B8]']
mov ['edx,', '[ebp+ecx*4+var_94]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_B8]']
mov ['[ebp+eax*4+var_94],', 'edx']
jmp ['short', 'loc_3322']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_3416']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '8']
jb ['short', 'loc_3466']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ReadByte@CInBufferBase@@QAEEXZ']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_8+3]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '20h']
sub ['ecx,', '[eax]']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+var_4]']
or ['edx,', '[ecx+30h]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+30h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
shl ['edx,', '8']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
movzx ['ecx,', 'byte', 'ptr', 'ds:?kInvertTable@NBitl@@3PAEA[eax]']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
jmp ['short', 'loc_3409']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+30h]']
mov ['ecx,', '[ebp+arg_0]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+30h],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Init@CInBufferBase@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '20h']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['0Fh']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetValue@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+24h]']
jnb ['short', 'loc_352C']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '6']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+0CCh]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_354E']
mov ['[ebp+var_8],', '0Ah']
jmp ['short', 'loc_353E']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+eax*4]']
jb ['short', 'loc_354E']
jmp ['short', 'loc_3535']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '0Fh']
sub ['ecx,', '[ebp+var_8]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+ecx*4+40h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '13h']
jb ['short', 'loc_3589']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_3596']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax*4+80h]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['0Fh']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetValue@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+24h]']
jnb ['short', 'loc_35F0']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '6']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+500h]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_3612']
mov ['[ebp+var_8],', '0Ah']
jmp ['short', 'loc_3602']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+eax*4]']
jb ['short', 'loc_3612']
jmp ['short', 'loc_35F9']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '0Fh']
sub ['ecx,', '[ebp+var_8]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+ecx*4+40h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '120h']
jb ['short', 'loc_3650']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_365D']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax*4+80h]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['0Fh']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetValue@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+24h]']
jnb ['short', 'loc_36B8']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '6']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+100h]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_36DA']
mov ['[ebp+var_8],', '0Ah']
jmp ['short', 'loc_36CA']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+eax*4]']
jb ['short', 'loc_36DA']
jmp ['short', 'loc_36C1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '0Fh']
sub ['ecx,', '[ebp+var_8]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+ecx*4+40h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '20h']
jb ['short', 'loc_3715']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_3722']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax*4+80h]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetValue@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '8']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shr ['eax,', 'cl']
and ['eax,', '0FFFFFFh']
mov ['ecx,', '18h']
sub ['ecx,', '[ebp+arg_0]']
shr ['eax,', 'cl']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '10h']
jmp ['?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp
?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ']
endp

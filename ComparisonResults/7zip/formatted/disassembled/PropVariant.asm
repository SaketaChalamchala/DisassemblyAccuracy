?PropVarEm_Alloc_Bstr@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+ui]']
push ['eax']
push ['0']
call ['dword', 'ptr', 'ds:__imp__SysAllocStringLen@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jnz ['short', 'loc_58']
mov ['eax,', '0Ah']
mov ['ecx,', '[ebp+this]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+8],', '8007000Eh']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_65']
mov ['eax,', '8']
mov ['ecx,', '[ebp+this]']
mov ['[ecx],', 'ax']
xor ['eax,', 'eax']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?PropVarEm_Set_Str@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+ui],', '0CCCCCCCCh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+ui],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+ui]']
push ['ecx']
push ['0']
call ['dword', 'ptr', 'ds:__imp__SysAllocStringLen@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+this]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_DF']
mov ['ecx,', '0Ah']
mov ['edx,', '[ebp+this]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+8],', '8007000Eh']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_125']
mov ['ecx,', '8']
mov ['edx,', '[ebp+this]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_105']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+ui]']
ja ['short', 'loc_123']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '[ebp+var_C]']
movzx ['dx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_FC']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CPropVariant@NCOM@NWindows@@QAE@ABUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CPropVariant@NCOM@NWindows@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CPropVariant@NCOM@NWindows@@QAE@PA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+psz]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PA_W@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CPropVariant@NCOM@NWindows@@QAE@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+psz]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PB_W@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@PA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+psz]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PB_W@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['eax,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+psz]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SysAllocString@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_347']
cmp ['[ebp+psz],', '0']
jz ['short', 'loc_347']
mov ['ecx,', 'ds:_kMemException']
mov ['[ebp+var_8],', 'ecx']
push ['offset', '__TI2CPAD']
lea ['edx,', '[ebp+var_8]']
push ['edx']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['eax,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SysAllocStringLen@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jnz ['short', 'loc_3DE']
mov ['eax,', 'ds:_kMemException']
mov ['[ebp+var_8],', 'eax']
push ['offset', '__TI2CPAD']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString2@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['eax,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString2@@QBEIXZ']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetRawPtr@UString2@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SysAllocStringLen@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jnz ['short', 'loc_46E']
mov ['eax,', 'ds:_kMemException']
mov ['[ebp+var_8],', 'eax']
push ['offset', '__TI2CPAD']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+ui],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['eax,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+ui],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+ui]']
push ['edx']
push ['0']
call ['dword', 'ptr', 'ds:__imp__SysAllocStringLen@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jnz ['short', 'loc_509']
mov ['eax,', 'ds:_kMemException']
mov ['[ebp+var_14],', 'eax']
push ['offset', '__TI2CPAD']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['__CxxThrowException@8']
jmp ['short', 'loc_542']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_524']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+ui]']
ja ['short', 'loc_542']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_10]']
movzx ['cx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+edx*2],', 'cx']
jmp ['short', 'loc_51B']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0Bh']
jz ['short', 'loc_590']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['edx,', '0Bh']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dx']
movzx ['ecx,', '[ebp+arg_0]']
neg ['ecx']
sbb ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'cx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AllocBstr@CPropVariant@NCOM@NWindows@@QAEPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5DE']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['edx,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+2],', 'cx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+ui]']
push ['eax']
push ['0']
call ['dword', 'ptr', 'ds:__imp__SysAllocStringLen@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jnz ['short', 'loc_62C']
mov ['eax,', 'ds:_kMemException']
mov ['[ebp+var_8],', 'eax']
push ['offset', '__TI2CPAD']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@E@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '11h']
jz ['short', 'loc_670']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['edx,', '11h']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+8],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '3']
jz ['short', 'loc_6C0']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['edx,', '3']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '13h']
jz ['short', 'loc_710']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['edx,', '13h']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '15h']
jz ['short', 'loc_760']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['edx,', '15h']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '14h']
jz ['short', 'loc_7B0']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['edx,', '14h']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '40h']
jz ['short', 'loc_800']
mov ['ecx,', '[ebp+var_4]']
call ['?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['edx,', '40h']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ecx+4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'edx']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+pvarg]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '40h']
ja ['short', '$LN2']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'ds:$LN6[edx]']
jmp ['ds:$LN7[eax*4]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+pvarg]']
mov ['[edx],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+pvarg]']
mov ['[ecx+2],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+pvarg]']
mov ['[eax+4],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+pvarg]']
mov ['[edx+6],', 'cx']
mov ['eax,', '[ebp+pvarg]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
xor ['eax,', 'eax']
jmp ['short', 'loc_89B']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+pvarg]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__VariantClear@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+pvarg],', '0CCCCCCCCh']
mov ['[ebp+pvarg],', 'ecx']
mov ['eax,', '[ebp+pvarg]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_920']
xor ['eax,', 'eax']
jmp ['short', 'loc_929']
mov ['edx,', '[ebp+pvarg]']
push ['edx']
call ['?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Copy@CPropVariant@NCOM@NWindows@@QAEJPBUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+pvarg],', '0CCCCCCCCh']
mov ['[ebp+pvarg],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+pvarg]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__VariantClear@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '3Eh']
ja ['short', '$LN2_0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'ds:$LN6_0[ecx]']
jmp ['ds:$LN7_0[edx*4]']
mov ['esi,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+pvarg]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jmp ['short', 'loc_9CF']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+pvarg]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__VariantCopy@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Attach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+Dst],', '0CCCCCCCCh']
mov ['[ebp+Dst],', 'ecx']
mov ['ecx,', '[ebp+Dst]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_A61']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_A7D']
push ['10h']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+Src]']
mov ['[eax],', 'dx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+Src],', '0CCCCCCCCh']
mov ['[ebp+Src],', 'ecx']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_ACC']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_ACC']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_AE8']
push ['10h']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+Src]']
mov ['[eax],', 'dx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_B29']
xor ['eax,', 'eax']
jmp ['short', 'loc_B51']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_B4E']
mov ['edx,', '0Ah']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Copy@CPropVariant@NCOM@NWindows@@QAEJPBUtagPROPVARIANT@@@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_BCB']
cmp ['[ebp+var_8],', '8007000Eh']
jnz ['short', 'loc_BB7']
mov ['ecx,', 'ds:_kMemException']
mov ['[ebp+var_C],', 'ecx']
push ['offset', '__TI2CPAD']
lea ['edx,', '[ebp+var_C]']
push ['edx']
call ['__CxxThrowException@8']
mov ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Compare@CPropVariant@NCOM@NWindows@@QAEHABV123@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_C24']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
call ['??$MyCompare@G@@YGHGG@Z']
jmp ['loc_D42']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '40h']
ja ['$LN1_1']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'ds:$LN18[ecx]']
jmp ['ds:$LN19[edx*4]']
xor ['eax,', 'eax']
jmp ['loc_D42']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
push ['eax']
call ['??$MyCompare@E@@YGHEE@Z']
jmp ['loc_D42']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
push ['ecx']
call ['??$MyCompare@F@@YGHFF@Z']
jmp ['loc_D42']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+8]']
push ['edx']
call ['??$MyCompare@G@@YGHGG@Z']
jmp ['loc_D42']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['??$MyCompare@J@@YGHJJ@Z']
jmp ['loc_D42']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['??$MyCompare@K@@YGHKK@Z']
jmp ['short', 'loc_D42']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[edx+8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[edx+8]']
push ['ecx']
call ['??$MyCompare@_J@@YGH_J0@Z']
jmp ['short', 'loc_D42']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[edx+8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[edx+8]']
push ['ecx']
call ['??$MyCompare@_K@@YGH_K0@Z']
jmp ['short', 'loc_D42']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+8]']
push ['edx']
call ['??$MyCompare@F@@YGHFF@Z']
neg ['eax']
jmp ['short', 'loc_D42']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CompareFileTime@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_D42']
xor ['eax,', 'eax']
jmp ['short', 'loc_D42']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@UString2@@QBEIXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetRawPtr@UString2@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$MyCompare@G@@YGHGG@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
movzx ['eax,', '[ebp+arg_0]']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_EC4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_ED6']
movzx ['edx,', '[ebp+arg_0]']
movzx ['eax,', '[ebp+arg_4]']
xor ['ecx,', 'ecx']
cmp ['edx,', 'eax']
setnz ['cl']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$MyCompare@E@@YGHEE@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
movzx ['eax,', '[ebp+arg_0]']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_F00']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_F12']
movzx ['edx,', '[ebp+arg_0]']
movzx ['eax,', '[ebp+arg_4]']
xor ['ecx,', 'ecx']
cmp ['edx,', 'eax']
setnz ['cl']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$MyCompare@F@@YGHFF@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
movsx ['eax,', '[ebp+arg_0]']
movsx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_F3C']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_F4E']
movsx ['edx,', '[ebp+arg_0]']
movsx ['eax,', '[ebp+arg_4]']
xor ['ecx,', 'ecx']
cmp ['edx,', 'eax']
setnz ['cl']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$MyCompare@J@@YGHJJ@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_F74']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_F82']
mov ['ecx,', '[ebp+arg_0]']
xor ['edx,', 'edx']
cmp ['ecx,', '[ebp+arg_4]']
setnz ['dl']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$MyCompare@K@@YGHKK@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_FA8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_FB6']
mov ['ecx,', '[ebp+arg_0]']
xor ['edx,', 'edx']
cmp ['ecx,', '[ebp+arg_4]']
setnz ['dl']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$MyCompare@_J@@YGH_J0@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jg ['short', 'loc_FEF']
jl ['short', 'loc_FE6']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_FEF']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_1015']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ebp+arg_8]']
jnz ['short', 'loc_1008']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_1008']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_100F']
mov ['[ebp+var_8],', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??$MyCompare@_K@@YGH_K0@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
ja ['short', 'loc_104F']
jb ['short', 'loc_1046']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_104F']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_1075']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ebp+arg_8]']
jnz ['short', 'loc_1068']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_1068']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_106F']
mov ['[ebp+var_8],', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp

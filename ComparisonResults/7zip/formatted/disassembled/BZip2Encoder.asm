?Alloc@CThreadInfo@NBZip2@NCompress@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_34']
push ['71DD00h']
call ['_BigAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jnz ['short', 'loc_34']
xor ['al,', 'al']
jmp ['short', 'loc_7C']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_7A']
push ['4659B0h']
call ['_MidAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_57']
xor ['al,', 'al']
jmp ['short', 'loc_7C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '0DBBA0h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1B7742h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'ecx']
mov ['al,', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Free@CThreadInfo@NBZip2@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_BigFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_MidFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@CThreadInfo@NBZip2@NCompress@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8CE8h']
call ['?Create@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_119']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_178']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8CECh']
call ['?Create@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_135']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_178']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8CF0h']
call ['?Create@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_151']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_178']
mov ['eax,', '[ebp+var_4]']
push ['eax']
push ['offset', '?MFThread@NBZip2@NCompress@@YGIPAX@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8CE4h']
call ['?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_176']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_178']
xor ['eax,', 'eax']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MFThread@NBZip2@NCompress@@YGIPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?FinishStream@CThreadInfo@NBZip2@NCompress@@QAEX_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8CE0h]']
mov ['byte', 'ptr', '[ecx+1A9h],', '1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8CE8h']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
movzx ['edx,', '[ebp+arg_0]']
test ['edx,', 'edx']
jz ['short', 'loc_1F8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8CE0h]']
add ['ecx,', '184h']
call ['?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+8CE0h]']
add ['ecx,', '1ACh']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8CECh']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '3Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8CE0h]']
add ['ecx,', '180h']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+8CE0h]']
add ['ecx,', '184h']
call ['?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+8CE0h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1A8h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C7']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+8CE0h]']
add ['ecx,', '184h']
call ['?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
xor ['eax,', 'eax']
jmp ['loc_467']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8CE0h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1A9h]']
test ['edx,', 'edx']
jz ['short', 'loc_2E7']
push ['1']
mov ['ecx,', '[ebp+var_14]']
call ['?FinishStream@CThreadInfo@NBZip2@NCompress@@QAEX_N@Z']
jmp ['short', 'loc_270']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_19],', '1']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+8CE0h]']
call ['?ReadRleBlock@CEncoder@NBZip2@NCompress@@QAEIPAE@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+8CE0h]']
add ['ecx,', '18h']
call ['?GetProcessedSize@CInBufferBase@@QBE_KXZ']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_40],', 'edx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_44]']
mov ['[edx+8CF8h],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['[edx+8CFCh],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+8CE0h]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+1A4h]']
mov ['[ecx+8CD8h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8CE0h]']
mov ['edx,', '[ecx+1A4h]']
add ['edx,', '1']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8CE0h]']
mov ['edx,', '[ebp+var_48]']
mov ['[ecx+1A4h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8CE0h]']
mov ['edx,', '[ebp+var_48]']
cmp ['edx,', '[ecx+19Ch]']
jnz ['short', 'loc_3A8']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8CE0h]']
mov ['dword', 'ptr', '[ecx+1A4h],', '0']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_3C4']
push ['1']
mov ['ecx,', '[ebp+var_14]']
call ['?FinishStream@CThreadInfo@NBZip2@NCompress@@QAEX_N@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['loc_270']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+8CE0h]']
add ['ecx,', '184h']
call ['?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
mov ['[ebp+var_19],', '0']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?EncodeBlock3@CThreadInfo@NBZip2@NCompress@@QAEJI@Z']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_431']
endp
__catch$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$0 proc near
mov ['edx,', '[ebp-28h]']
mov ['eax,', '[edx]']
mov ['[ebp-18h],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$3']
retn
endp
__catch$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$1 proc near
mov ['ecx,', '[ebp-34h]']
mov ['edx,', '[ecx]']
mov ['[ebp-18h],', 'edx']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$3']
retn
endp
__catch$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$2 proc near
mov ['dword', 'ptr', '[ebp-18h],', '80004005h']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$3']
retn
endp
?Normalize@CEncProps@NBZip2@NCompress@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_4E7']
mov ['[ebp+arg_0],', '5']
cmp ['[ebp+arg_0],', '9']
jle ['short', 'loc_4F4']
mov ['[ebp+arg_0],', '9']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
jnz ['short', 'loc_524']
cmp ['[ebp+arg_0],', '9']
jl ['short', 'loc_50C']
mov ['[ebp+var_8],', '7']
jmp ['short', 'loc_51B']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_0],', '7']
setnl ['cl']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '1']
jnb ['short', 'loc_537']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '1']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0Ah']
jbe ['short', 'loc_54A']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0Ah']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0FFFFFFFFh']
jnz ['short', 'loc_588']
cmp ['[ebp+arg_0],', '5']
jl ['short', 'loc_561']
mov ['[ebp+var_C],', '9']
jmp ['short', 'loc_580']
cmp ['[ebp+arg_0],', '1']
jl ['short', 'loc_573']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+eax-1]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_57A']
mov ['[ebp+var_10],', '1']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '1']
jnb ['short', 'loc_599']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '9']
jbe ['short', 'loc_5AA']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '9']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CEncoder@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CEncoder@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0ICompressSetCoderProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0ICompressSetCoderMt@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CEncoder@NBZip2@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderProperties@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0CInBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '140h']
call ['??0?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '170h']
call ['??0CEncProps@NBZip2@NCompress@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '178h']
call ['??0CBZip2CombinedCrc@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '180h']
call ['??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '184h']
call ['??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1ACh']
call ['??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '170h']
call ['?Normalize@CEncProps@NBZip2@NCompress@@QAEXH@Z']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+17Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+19Ch],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CEncoder@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CEncoder@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CEncoder@NBZip2@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderProperties@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@']
mov ['[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
call ['?Free@CEncoder@NBZip2@NCompress@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1ACh']
call ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '184h']
call ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '180h']
call ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '140h']
call ['??1?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1CInBuffer@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@CEncoder@NBZip2@NCompress@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '30h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '180h']
call ['?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_81F']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_9EE']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1ACh']
call ['?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_83E']
mov ['eax,', '[ebp+var_1C]']
jmp ['loc_9EE']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+17Ch],', '0']
jz ['short', 'loc_862']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+10h]']
cmp ['eax,', '[edx+19Ch]']
jnz ['short', 'loc_862']
xor ['eax,', 'eax']
jmp ['loc_9EE']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?Free@CEncoder@NBZip2@NCompress@@QAEXXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '1']
cmp ['edx,', '[ecx+19Ch]']
sbb ['eax,', 'eax']
neg ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+1A0h],', 'al']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+19Ch]']
mov ['[edx+10h],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+19Ch]']
mov ['[ebp+var_2C],', 'eax']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['edx,', '8E00h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
xor ['eax,', 'eax']
add ['ecx,', '4']
setb ['al']
neg ['eax']
or ['eax,', 'ecx']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_34],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_914']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx],', 'eax']
push ['offset', '??1CThreadInfo@NBZip2@NCompress@@QAE@XZ']
push ['offset', '??0CThreadInfo@NBZip2@NCompress@@QAE@XZ']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
push ['8E00h']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '4']
push ['edx']
call ['??_L@YGXPAXIHP6EX0@Z1@Z']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '4']
mov ['[ebp+var_40],', 'eax']
jmp ['short', 'loc_91B']
mov ['[ebp+var_40],', '0']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_30],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_30]']
mov ['[edx+17Ch],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+17Ch],', '0']
jnz ['short', 'loc_947']
mov ['eax,', '8007000Eh']
jmp ['loc_9EE']
jmp ['short', '$LN15']
endp
__catch$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ$0 proc near
mov ['dword', 'ptr', '[ebp-38h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN19']
retn
endp
$LN19           proc near               
mov ['eax,', '[ebp-38h]']
jmp ['short', 'loc_9EE']
endp
?Free@CEncoder@NBZip2@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+17Ch],', '0']
jnz ['short', 'loc_A41']
jmp ['loc_AEF']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1A8h],', '1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '180h']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_A6B']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+19Ch]']
jnb ['short', 'loc_AB4']
mov ['edx,', '[ebp+var_8]']
imul ['edx,', '8E00h']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+17Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1A0h]']
test ['edx,', 'edx']
jz ['short', 'loc_AAA']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '8CE4h']
call ['?Wait@CThread@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_C]']
call ['?Free@CThreadInfo@NBZip2@NCompress@@QAEXXZ']
jmp ['short', 'loc_A62']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+17Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_ADB']
push ['3']
mov ['ecx,', '[ebp+var_10]']
call ['??_ECThreadInfo@NBZip2@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_AE2']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+17Ch],', '0']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadRleBlock@CEncoder@NBZip2@NCompress@@QAEIPAE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_D]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?ReadByte@CInBufferBase@@QAE_NAAE@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_C4D']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+170h]']
imul ['eax,', '186A0h']
sub ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_1C],', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+var_D]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_18]']
jnb ['loc_C30']
lea ['edx,', '[ebp+var_21]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?ReadByte@CInBufferBase@@QAE_NAAE@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_B93']
jmp ['loc_C30']
movzx ['ecx,', '[ebp+var_21]']
movzx ['edx,', '[ebp+var_D]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_BDF']
cmp ['[ebp+var_1C],', '4']
jb ['short', 'loc_BBC']
mov ['eax,', '[ebp+var_1C]']
sub ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_21]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_1C],', '1']
mov ['al,', '[ebp+var_21]']
mov ['[ebp+var_D],', 'al']
jmp ['short', 'loc_B6C']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '4']
ja ['short', 'loc_C04']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_8]']
mov ['al,', '[ebp+var_21]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_C2B']
cmp ['[ebp+var_1C],', '103h']
jnz ['short', 'loc_C2B']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_1C],', '0']
jmp ['loc_B6C']
cmp ['[ebp+var_1C],', '4']
jb ['short', 'loc_C4D']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+10h]']
call ['?WriteBits@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['8']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['1']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteCrc2@CThreadInfo@NBZip2@NCompress@@AAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_D69']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '4']
jnb ['short', 'loc_D8E']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '3']
mov ['edx,', '18h']
sub ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'edx']
shr ['eax,', 'cl']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
jmp ['short', 'loc_D60']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteBits@CEncoder@NBZip2@NCompress@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?WriteBits@?$CBitmEncoder@VCOutBuffer@@@@QAEXII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['8']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CEncoder@NBZip2@NCompress@@QAEXII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteCrc@CEncoder@NBZip2@NCompress@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_E39']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '4']
jnb ['short', 'loc_E5E']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '3']
mov ['edx,', '18h']
sub ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'edx']
shr ['eax,', 'cl']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z']
jmp ['short', 'loc_E30']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?EncodeBlock@CThreadInfo@NBZip2@NCompress@@AAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '818h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_818]']
mov ['ecx,', '206h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_BlockSort@12']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[edx+eax*4],', 'ecx']
push ['18h']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z']
mov ['[ebp+var_118],', '0']
mov ['[ebp+var_23C],', '0']
jmp ['short', 'loc_EFE']
mov ['eax,', '[ebp+var_23C]']
add ['eax,', '1']
mov ['[ebp+var_23C],', 'eax']
cmp ['[ebp+var_23C],', '100h']
jnb ['short', 'loc_F1A']
mov ['ecx,', '[ebp+var_23C]']
mov ['[ebp+ecx+var_21C],', '0']
jmp ['short', 'loc_EEF']
mov ['[ebp+var_23C],', '0']
jmp ['short', 'loc_F35']
mov ['edx,', '[ebp+var_23C]']
add ['edx,', '1']
mov ['[ebp+var_23C],', 'edx']
cmp ['[ebp+var_23C],', '10h']
jnb ['short', 'loc_F4E']
mov ['eax,', '[ebp+var_23C]']
mov ['[ebp+eax+var_234],', '0']
jmp ['short', 'loc_F26']
mov ['[ebp+var_23C],', '0']
jmp ['short', 'loc_F69']
mov ['ecx,', '[ebp+var_23C]']
add ['ecx,', '1']
mov ['[ebp+var_23C],', 'ecx']
mov ['edx,', '[ebp+var_23C]']
cmp ['edx,', '[ebp+arg_4]']
jnb ['short', 'loc_F8A']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_23C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+ecx+var_21C],', '1']
jmp ['short', 'loc_F5A']
mov ['[ebp+var_23C],', '0']
jmp ['short', 'loc_FA5']
mov ['edx,', '[ebp+var_23C]']
add ['edx,', '1']
mov ['[ebp+var_23C],', 'edx']
cmp ['[ebp+var_23C],', '100h']
jnb ['short', 'loc_FF8']
mov ['eax,', '[ebp+var_23C]']
movzx ['ecx,', '[ebp+eax+var_21C]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FF6']
mov ['edx,', '[ebp+var_23C]']
shr ['edx,', '4']
mov ['[ebp+edx+var_234],', '1']
mov ['eax,', '[ebp+var_118]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_23C]']
mov ['[ebp+eax+var_110],', 'cl']
mov ['edx,', '[ebp+var_118]']
add ['edx,', '1']
mov ['[ebp+var_118],', 'edx']
jmp ['short', 'loc_F96']
mov ['[ebp+var_23C],', '0']
jmp ['short', 'loc_1013']
mov ['eax,', '[ebp+var_23C]']
add ['eax,', '1']
mov ['[ebp+var_23C],', 'eax']
cmp ['[ebp+var_23C],', '10h']
jnb ['short', 'loc_1035']
mov ['ecx,', '[ebp+var_23C]']
movzx ['edx,', '[ebp+ecx+var_234]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
jmp ['short', 'loc_1004']
mov ['[ebp+var_23C],', '0']
jmp ['short', 'loc_1050']
mov ['eax,', '[ebp+var_23C]']
add ['eax,', '1']
mov ['[ebp+var_23C],', 'eax']
cmp ['[ebp+var_23C],', '100h']
jnb ['short', 'loc_108A']
mov ['ecx,', '[ebp+var_23C]']
shr ['ecx,', '4']
movzx ['edx,', '[ebp+ecx+var_234]']
test ['edx,', 'edx']
jz ['short', 'loc_1088']
mov ['eax,', '[ebp+var_23C]']
movzx ['ecx,', '[ebp+eax+var_21C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
jmp ['short', 'loc_1041']
mov ['edx,', '[ebp+var_118]']
add ['edx,', '2']
mov ['[ebp+var_240],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_244],', 'ecx']
mov ['[ebp+var_248],', '0']
mov ['[ebp+var_65C],', '0']
jmp ['short', 'loc_10CA']
mov ['edx,', '[ebp+var_65C]']
add ['edx,', '1']
mov ['[ebp+var_65C],', 'edx']
cmp ['[ebp+var_65C],', '102h']
jnb ['short', 'loc_10E9']
mov ['eax,', '[ebp+var_65C]']
mov ['[ebp+eax*4+var_654],', '0']
jmp ['short', 'loc_10BB']
mov ['[ebp+var_660],', '0']
mov ['[ebp+var_664],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_668],', 'edx']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_664]']
mov ['edx,', '[ebp+var_668]']
mov ['eax,', '[edx+ecx*4]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
push ['edx']
lea ['ecx,', '[ebp+var_110]']
call ['?FindAndMove@CMtf8Encoder@NCompress@@QAEIE@Z']
mov ['[ebp+var_66C],', 'eax']
cmp ['[ebp+var_66C],', '0']
jnz ['short', 'loc_1157']
mov ['eax,', '[ebp+var_660]']
add ['eax,', '1']
mov ['[ebp+var_660],', 'eax']
jmp ['loc_1260']
cmp ['[ebp+var_660],', '0']
jz ['short', 'loc_11C8']
mov ['ecx,', '[ebp+var_660]']
sub ['ecx,', '1']
mov ['[ebp+var_660],', 'ecx']
mov ['edx,', '[ebp+var_660]']
and ['edx,', '1']
mov ['eax,', '[ebp+var_244]']
add ['eax,', '[ebp+var_248]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_248]']
add ['ecx,', '1']
mov ['[ebp+var_248],', 'ecx']
mov ['edx,', '[ebp+var_660]']
and ['edx,', '1']
mov ['eax,', '[ebp+edx*4+var_654]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_660]']
and ['ecx,', '1']
mov ['[ebp+ecx*4+var_654],', 'eax']
mov ['edx,', '[ebp+var_660]']
shr ['edx,', '1']
mov ['[ebp+var_660],', 'edx']
jmp ['short', 'loc_1157']
cmp ['[ebp+var_66C],', '0FEh']
jb ['short', 'loc_121D']
mov ['eax,', '[ebp+var_244]']
add ['eax,', '[ebp+var_248]']
mov ['byte', 'ptr', '[eax],', '0FFh']
mov ['ecx,', '[ebp+var_248]']
add ['ecx,', '1']
mov ['[ebp+var_248],', 'ecx']
mov ['edx,', '[ebp+var_66C]']
sub ['edx,', '0FEh']
mov ['eax,', '[ebp+var_244]']
add ['eax,', '[ebp+var_248]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_248]']
add ['ecx,', '1']
mov ['[ebp+var_248],', 'ecx']
jmp ['short', 'loc_1243']
mov ['edx,', '[ebp+var_66C]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_244]']
add ['eax,', '[ebp+var_248]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_248]']
add ['ecx,', '1']
mov ['[ebp+var_248],', 'ecx']
mov ['edx,', '[ebp+var_66C]']
mov ['eax,', '[ebp+edx*4+var_650]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_66C]']
mov ['[ebp+ecx*4+var_650],', 'eax']
mov ['edx,', '[ebp+var_664]']
add ['edx,', '1']
mov ['[ebp+var_664],', 'edx']
mov ['eax,', '[ebp+var_664]']
cmp ['eax,', '[ebp+arg_4]']
jb ['loc_1112']
cmp ['[ebp+var_660],', '0']
jz ['short', 'loc_12EF']
mov ['ecx,', '[ebp+var_660]']
sub ['ecx,', '1']
mov ['[ebp+var_660],', 'ecx']
mov ['edx,', '[ebp+var_660]']
and ['edx,', '1']
mov ['eax,', '[ebp+var_244]']
add ['eax,', '[ebp+var_248]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_248]']
add ['ecx,', '1']
mov ['[ebp+var_248],', 'ecx']
mov ['edx,', '[ebp+var_660]']
and ['edx,', '1']
mov ['eax,', '[ebp+edx*4+var_654]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_660]']
and ['ecx,', '1']
mov ['[ebp+ecx*4+var_654],', 'eax']
mov ['edx,', '[ebp+var_660]']
shr ['edx,', '1']
mov ['[ebp+var_660],', 'edx']
jmp ['short', 'loc_127E']
cmp ['[ebp+var_240],', '100h']
jnb ['short', 'loc_1323']
mov ['eax,', '[ebp+var_240]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_244]']
add ['ecx,', '[ebp+var_248]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_248]']
add ['edx,', '1']
mov ['[ebp+var_248],', 'edx']
jmp ['short', 'loc_136A']
mov ['eax,', '[ebp+var_244]']
add ['eax,', '[ebp+var_248]']
mov ['byte', 'ptr', '[eax],', '0FFh']
mov ['ecx,', '[ebp+var_248]']
add ['ecx,', '1']
mov ['[ebp+var_248],', 'ecx']
mov ['edx,', '[ebp+var_240]']
sub ['edx,', '100h']
mov ['eax,', '[ebp+var_244]']
add ['eax,', '[ebp+var_248]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_248]']
add ['ecx,', '1']
mov ['[ebp+var_248],', 'ecx']
mov ['edx,', '[ebp+var_240]']
mov ['eax,', '[ebp+edx*4+var_658]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_240]']
mov ['[ebp+ecx*4+var_658],', 'eax']
mov ['[ebp+var_670],', '0']
mov ['[ebp+var_674],', '0']
jmp ['short', 'loc_13AC']
mov ['edx,', '[ebp+var_674]']
add ['edx,', '1']
mov ['[ebp+var_674],', 'edx']
cmp ['[ebp+var_674],', '102h']
jnb ['short', 'loc_13D3']
mov ['eax,', '[ebp+var_674]']
mov ['ecx,', '[ebp+var_670]']
add ['ecx,', '[ebp+eax*4+var_654]']
mov ['[ebp+var_670],', 'ecx']
jmp ['short', 'loc_139D']
mov ['[ebp+var_678],', '2']
mov ['[ebp+var_67C],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+10h]']
call ['?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ']
mov ['[ebp+var_680],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
call ['?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ']
mov ['[ebp+var_681],', 'al']
mov ['[ebp+var_688],', '2']
jmp ['short', 'loc_1424']
mov ['ecx,', '[ebp+var_688]']
add ['ecx,', '1']
mov ['[ebp+var_688],', 'ecx']
cmp ['[ebp+var_688],', '7']
ja ['loc_1DF8']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8CDCh]']
test ['eax,', 'eax']
jz ['short', 'loc_1493']
mov ['ecx,', '[ebp+var_680]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+10h]']
call ['?SetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXI@Z']
movzx ['eax,', '[ebp+var_681]']
push ['eax']
mov ['ecx,', '[ebp+var_680]']
and ['ecx,', '7']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+10h]']
call ['?SetCurState@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXIE@Z']
cmp ['[ebp+var_688],', '6']
ja ['short', 'loc_1485']
mov ['eax,', '[ebp+var_688]']
mov ['[ebp+var_68C],', 'eax']
jmp ['short', 'loc_1491']
mov ['ecx,', '[ebp+var_678]']
mov ['[ebp+var_68C],', 'ecx']
jmp ['short', 'loc_14FD']
cmp ['[ebp+var_670],', '0C8h']
jnb ['short', 'loc_14AB']
mov ['[ebp+var_68C],', '2']
jmp ['short', 'loc_14FD']
cmp ['[ebp+var_670],', '258h']
jnb ['short', 'loc_14C3']
mov ['[ebp+var_68C],', '3']
jmp ['short', 'loc_14FD']
cmp ['[ebp+var_670],', '4B0h']
jnb ['short', 'loc_14DB']
mov ['[ebp+var_68C],', '4']
jmp ['short', 'loc_14FD']
cmp ['[ebp+var_670],', '960h']
jnb ['short', 'loc_14F3']
mov ['[ebp+var_68C],', '5']
jmp ['short', 'loc_14FD']
mov ['[ebp+var_68C],', '6']
push ['3']
mov ['edx,', '[ebp+var_68C]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z']
mov ['eax,', '[ebp+var_670]']
add ['eax,', '31h']
xor ['edx,', 'edx']
mov ['ecx,', '32h']
div ['ecx']
mov ['[ebp+var_690],', 'eax']
push ['0Fh']
mov ['edx,', '[ebp+var_690]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z']
mov ['eax,', '[ebp+var_670]']
mov ['[ebp+var_694],', 'eax']
mov ['[ebp+var_698],', '0']
mov ['ecx,', '[ebp+var_68C]']
mov ['[ebp+var_69C],', 'ecx']
mov ['eax,', '[ebp+var_694]']
xor ['edx,', 'edx']
div ['[ebp+var_69C]']
mov ['[ebp+var_6A0],', 'eax']
mov ['edx,', '[ebp+var_698]']
mov ['[ebp+var_6A4],', 'edx']
mov ['[ebp+var_6A8],', '0']
mov ['eax,', '[ebp+var_6A8]']
cmp ['eax,', '[ebp+var_6A0]']
jnb ['short', 'loc_15BB']
mov ['ecx,', '[ebp+var_6A4]']
mov ['edx,', '[ebp+var_6A8]']
add ['edx,', '[ebp+ecx*4+var_654]']
mov ['[ebp+var_6A8],', 'edx']
mov ['eax,', '[ebp+var_6A4]']
add ['eax,', '1']
mov ['[ebp+var_6A4],', 'eax']
jmp ['short', 'loc_1583']
mov ['ecx,', '[ebp+var_698]']
add ['ecx,', '1']
cmp ['[ebp+var_6A4],', 'ecx']
jbe ['short', 'loc_161C']
mov ['edx,', '[ebp+var_69C]']
cmp ['edx,', '[ebp+var_68C]']
jz ['short', 'loc_161C']
cmp ['[ebp+var_69C],', '1']
jz ['short', 'loc_161C']
mov ['eax,', '[ebp+var_68C]']
sub ['eax,', '[ebp+var_69C]']
and ['eax,', '1']
jz ['short', 'loc_161C']
mov ['ecx,', '[ebp+var_6A4]']
sub ['ecx,', '1']
mov ['[ebp+var_6A4],', 'ecx']
mov ['edx,', '[ebp+var_6A4]']
mov ['eax,', '[ebp+var_6A8]']
sub ['eax,', '[ebp+edx*4+var_654]']
mov ['[ebp+var_6A8],', 'eax']
mov ['ecx,', '[ebp+var_69C]']
sub ['ecx,', '1']
imul ['ecx,', '102h']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx+14h]']
mov ['[ebp+var_6AC],', 'eax']
mov ['[ebp+var_6B0],', '0']
mov ['ecx,', '[ebp+var_6B0]']
cmp ['ecx,', '[ebp+var_698]']
jb ['short', 'loc_166A']
mov ['edx,', '[ebp+var_6B0]']
cmp ['edx,', '[ebp+var_6A4]']
jnb ['short', 'loc_166A']
mov ['[ebp+var_818],', '0']
jmp ['short', 'loc_1674']
mov ['[ebp+var_818],', '1']
mov ['eax,', '[ebp+var_6AC]']
add ['eax,', '[ebp+var_6B0]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_818]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_6B0]']
add ['edx,', '1']
mov ['[ebp+var_6B0],', 'edx']
mov ['eax,', '[ebp+var_6B0]']
cmp ['eax,', '[ebp+var_240]']
jb ['short', 'loc_1642']
mov ['ecx,', '[ebp+var_6A4]']
mov ['[ebp+var_698],', 'ecx']
mov ['edx,', '[ebp+var_694]']
sub ['edx,', '[ebp+var_6A8]']
mov ['[ebp+var_694],', 'edx']
mov ['eax,', '[ebp+var_69C]']
sub ['eax,', '1']
mov ['[ebp+var_69C],', 'eax']
jnz ['loc_1559']
mov ['[ebp+var_6B4],', '0']
jmp ['short', 'loc_16F3']
mov ['ecx,', '[ebp+var_6B4]']
add ['ecx,', '1']
mov ['[ebp+var_6B4],', 'ecx']
cmp ['[ebp+var_6B4],', '4']
jnb ['loc_1A46']
mov ['[ebp+var_6B8],', '0']
push ['408h']
push ['0']
mov ['edx,', '[ebp+var_6B8]']
imul ['edx,', '408h']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx+620h]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_6B8]']
add ['edx,', '1']
mov ['[ebp+var_6B8],', 'edx']
mov ['eax,', '[ebp+var_6B8]']
cmp ['eax,', '[ebp+var_68C]']
jb ['short', 'loc_170A']
mov ['[ebp+var_6BC],', '0']
mov ['[ebp+var_6C0],', '0']
mov ['[ebp+var_794],', '0']
mov ['ecx,', '[ebp+var_244]']
add ['ecx,', '[ebp+var_6BC]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_798],', 'edx']
mov ['eax,', '[ebp+var_6BC]']
add ['eax,', '1']
mov ['[ebp+var_6BC],', 'eax']
cmp ['[ebp+var_798],', '0FFh']
jb ['short', 'loc_17C5']
mov ['ecx,', '[ebp+var_244]']
add ['ecx,', '[ebp+var_6BC]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
add ['edx,', '[ebp+var_798]']
mov ['[ebp+var_798],', 'edx']
mov ['eax,', '[ebp+var_6BC]']
add ['eax,', '1']
mov ['[ebp+var_6BC],', 'eax']
mov ['ecx,', '[ebp+var_794]']
mov ['edx,', '[ebp+var_798]']
mov ['[ebp+ecx*4+var_78C],', 'edx']
mov ['eax,', '[ebp+var_794]']
add ['eax,', '1']
mov ['[ebp+var_794],', 'eax']
cmp ['[ebp+var_794],', '32h']
jnb ['short', 'loc_1802']
mov ['ecx,', '[ebp+var_6BC]']
cmp ['ecx,', '[ebp+var_248]']
jb ['loc_176B']
mov ['[ebp+var_79C],', '0FFFFFFFFh']
mov ['[ebp+var_7A0],', '0']
mov ['edx,', '[ebp+var_7A0]']
imul ['edx,', '102h']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx+14h]']
mov ['[ebp+var_7A4],', 'ecx']
mov ['[ebp+var_7A8],', '0']
mov ['[ebp+var_7AC],', '0']
mov ['edx,', '[ebp+var_7AC]']
mov ['eax,', '[ebp+edx*4+var_78C]']
mov ['ecx,', '[ebp+var_7A4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
add ['edx,', '[ebp+var_7A8]']
mov ['[ebp+var_7A8],', 'edx']
mov ['eax,', '[ebp+var_7AC]']
add ['eax,', '1']
mov ['[ebp+var_7AC],', 'eax']
mov ['ecx,', '[ebp+var_7AC]']
cmp ['ecx,', '[ebp+var_794]']
jb ['short', 'loc_1843']
mov ['edx,', '[ebp+var_7A8]']
cmp ['edx,', '[ebp+var_79C]']
jnb ['short', 'loc_18B2']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_6C0]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_7A0]']
mov ['[eax+3680h],', 'cl']
mov ['edx,', '[ebp+var_7A8]']
mov ['[ebp+var_79C],', 'edx']
mov ['eax,', '[ebp+var_7A0]']
add ['eax,', '1']
mov ['[ebp+var_7A0],', 'eax']
mov ['ecx,', '[ebp+var_7A0]']
cmp ['ecx,', '[ebp+var_68C]']
jb ['loc_1816']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_6C0]']
movzx ['eax,', 'byte', 'ptr', '[edx+3680h]']
imul ['eax,', '408h']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+620h]']
mov ['[ebp+var_7B0],', 'edx']
mov ['eax,', '[ebp+var_6C0]']
add ['eax,', '1']
mov ['[ebp+var_6C0],', 'eax']
mov ['[ebp+var_7B4],', '0']
mov ['ecx,', '[ebp+var_7B4]']
mov ['edx,', '[ebp+ecx*4+var_78C]']
mov ['eax,', '[ebp+var_7B0]']
mov ['ecx,', '[eax+edx*4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_7B4]']
mov ['eax,', '[ebp+edx*4+var_78C]']
mov ['edx,', '[ebp+var_7B0]']
mov ['[edx+eax*4],', 'ecx']
mov ['eax,', '[ebp+var_7B4]']
add ['eax,', '1']
mov ['[ebp+var_7B4],', 'eax']
mov ['ecx,', '[ebp+var_7B4]']
cmp ['ecx,', '[ebp+var_794]']
jb ['short', 'loc_1912']
mov ['edx,', '[ebp+var_6BC]']
cmp ['edx,', '[ebp+var_248]']
jb ['loc_1761']
mov ['[ebp+var_7B8],', '0']
mov ['eax,', '[ebp+var_7B8]']
imul ['eax,', '408h']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+620h]']
mov ['[ebp+var_7BC],', 'edx']
mov ['[ebp+var_7C0],', '0']
mov ['eax,', '[ebp+var_7C0]']
mov ['ecx,', '[ebp+var_7BC]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jnz ['short', 'loc_19C5']
mov ['edx,', '[ebp+var_7C0]']
mov ['eax,', '[ebp+var_7BC]']
mov ['dword', 'ptr', '[eax+edx*4],', '1']
mov ['ecx,', '[ebp+var_7C0]']
add ['ecx,', '1']
mov ['[ebp+var_7C0],', 'ecx']
mov ['edx,', '[ebp+var_7C0]']
cmp ['edx,', '[ebp+var_240]']
jb ['short', 'loc_19A0']
push ['10h']
push ['102h']
mov ['eax,', '[ebp+var_7B8]']
imul ['eax,', '102h']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+14h]']
push ['edx']
mov ['eax,', '[ebp+var_7B8]']
imul ['eax,', '408h']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+1E50h]']
push ['edx']
mov ['eax,', '[ebp+var_7BC]']
push ['eax']
call ['_Huffman_Generate@20']
mov ['ecx,', '[ebp+var_7B8]']
add ['ecx,', '1']
mov ['[ebp+var_7B8],', 'ecx']
mov ['edx,', '[ebp+var_7B8]']
cmp ['edx,', '[ebp+var_68C]']
jb ['loc_197A']
jmp ['loc_16E4']
mov ['[ebp+var_7D4],', '0']
mov ['eax,', '[ebp+var_7D4]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_7D4]']
mov ['[ebp+eax+var_7CC],', 'cl']
mov ['edx,', '[ebp+var_7D4]']
add ['edx,', '1']
mov ['[ebp+var_7D4],', 'edx']
mov ['eax,', '[ebp+var_7D4]']
cmp ['eax,', '[ebp+var_68C]']
jb ['short', 'loc_1A50']
mov ['[ebp+var_7D8],', '0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_7D8]']
mov ['dl,', '[ecx+3680h]']
mov ['[ebp+var_7D9],', 'dl']
mov ['[ebp+var_7E0],', '0']
jmp ['short', 'loc_1ABA']
mov ['eax,', '[ebp+var_7E0]']
add ['eax,', '1']
mov ['[ebp+var_7E0],', 'eax']
mov ['ecx,', '[ebp+var_7E0]']
movzx ['edx,', '[ebp+ecx+var_7CC]']
movzx ['eax,', '[ebp+var_7D9]']
cmp ['edx,', 'eax']
jz ['short', 'loc_1ADF']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
jmp ['short', 'loc_1AAB']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
jmp ['short', 'loc_1AFA']
mov ['ecx,', '[ebp+var_7E0]']
sub ['ecx,', '1']
mov ['[ebp+var_7E0],', 'ecx']
cmp ['[ebp+var_7E0],', '0']
jbe ['short', 'loc_1B1F']
mov ['edx,', '[ebp+var_7E0]']
mov ['eax,', '[ebp+var_7E0]']
mov ['cl,', '[ebp+eax+var_7CD]']
mov ['[ebp+edx+var_7CC],', 'cl']
jmp ['short', 'loc_1AEB']
mov ['dl,', '[ebp+var_7D9]']
mov ['[ebp+var_7CC],', 'dl']
mov ['eax,', '[ebp+var_7D8]']
add ['eax,', '1']
mov ['[ebp+var_7D8],', 'eax']
mov ['ecx,', '[ebp+var_7D8]']
cmp ['ecx,', '[ebp+var_690]']
jb ['loc_1A8A']
mov ['[ebp+var_7E4],', '0']
mov ['edx,', '[ebp+var_7E4]']
imul ['edx,', '102h']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx+14h]']
mov ['[ebp+var_7E8],', 'ecx']
mov ['edx,', '[ebp+var_7E8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_7EC],', 'eax']
push ['5']
mov ['ecx,', '[ebp+var_7EC]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z']
mov ['[ebp+var_7F0],', '0']
mov ['edx,', '[ebp+var_7E8]']
add ['edx,', '[ebp+var_7F0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_7F4],', 'eax']
mov ['ecx,', '[ebp+var_7EC]']
cmp ['ecx,', '[ebp+var_7F4]']
jz ['short', 'loc_1C0A']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
mov ['edx,', '[ebp+var_7EC]']
cmp ['edx,', '[ebp+var_7F4]']
jnb ['short', 'loc_1BEF']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
mov ['eax,', '[ebp+var_7EC]']
add ['eax,', '1']
mov ['[ebp+var_7EC],', 'eax']
jmp ['short', 'loc_1C08']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
mov ['ecx,', '[ebp+var_7EC]']
sub ['ecx,', '1']
mov ['[ebp+var_7EC],', 'ecx']
jmp ['short', 'loc_1BAE']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
mov ['edx,', '[ebp+var_7F0]']
add ['edx,', '1']
mov ['[ebp+var_7F0],', 'edx']
mov ['eax,', '[ebp+var_7F0]']
cmp ['eax,', '[ebp+var_240]']
jb ['loc_1B99']
mov ['ecx,', '[ebp+var_7E4]']
add ['ecx,', '1']
mov ['[ebp+var_7E4],', 'ecx']
mov ['edx,', '[ebp+var_7E4]']
cmp ['edx,', '[ebp+var_68C]']
jb ['loc_1B56']
mov ['[ebp+var_7F8],', '0']
mov ['[ebp+var_7FC],', '0']
mov ['[ebp+var_800],', '0']
mov ['[ebp+var_804],', '0']
mov ['[ebp+var_808],', '0']
mov ['eax,', '[ebp+var_244]']
add ['eax,', '[ebp+var_808]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_80C],', 'ecx']
mov ['edx,', '[ebp+var_808]']
add ['edx,', '1']
mov ['[ebp+var_808],', 'edx']
cmp ['[ebp+var_80C],', '0FFh']
jb ['short', 'loc_1CE2']
mov ['eax,', '[ebp+var_244]']
add ['eax,', '[ebp+var_808]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '[ebp+var_80C]']
mov ['[ebp+var_80C],', 'ecx']
mov ['edx,', '[ebp+var_808]']
add ['edx,', '1']
mov ['[ebp+var_808],', 'edx']
cmp ['[ebp+var_7F8],', '0']
jnz ['short', 'loc_1D4F']
mov ['[ebp+var_7F8],', '32h']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_7FC]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3680h]']
mov ['[ebp+var_810],', 'ecx']
mov ['edx,', '[ebp+var_7FC]']
add ['edx,', '1']
mov ['[ebp+var_7FC],', 'edx']
mov ['eax,', '[ebp+var_810]']
imul ['eax,', '102h']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+14h]']
mov ['[ebp+var_800],', 'edx']
mov ['eax,', '[ebp+var_810]']
imul ['eax,', '408h']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+1E50h]']
mov ['[ebp+var_804],', 'edx']
mov ['eax,', '[ebp+var_7F8]']
sub ['eax,', '1']
mov ['[ebp+var_7F8],', 'eax']
mov ['ecx,', '[ebp+var_800]']
add ['ecx,', '[ebp+var_80C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_80C]']
mov ['ecx,', '[ebp+var_804]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
call ['?WriteBits@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXII@Z']
mov ['ecx,', '[ebp+var_808]']
cmp ['ecx,', '[ebp+var_248]']
jb ['loc_1C88']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8CDCh]']
test ['eax,', 'eax']
jnz ['short', 'loc_1DAB']
jmp ['short', 'loc_1DF8']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+10h]']
call ['?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ']
sub ['eax,', '[ebp+var_680]']
mov ['[ebp+var_814],', 'eax']
mov ['edx,', '[ebp+var_814]']
cmp ['edx,', '[ebp+var_67C]']
ja ['short', 'loc_1DF3']
cmp ['[ebp+var_688],', '6']
jnz ['short', 'loc_1DDB']
jmp ['short', 'loc_1DF8']
mov ['eax,', '[ebp+var_814]']
mov ['[ebp+var_67C],', 'eax']
mov ['ecx,', '[ebp+var_688]']
mov ['[ebp+var_678],', 'ecx']
jmp ['loc_1415']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN136']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '818h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?EncodeBlockWithHeaders@CThreadInfo@NBZip2@NCompress@@AAEIPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['31h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
push ['41h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
push ['59h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
push ['26h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
push ['53h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
push ['59h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z']
lea ['ecx,', '[ebp+var_C]']
call ['??0CBZip2Crc@@QAE@XZ']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_18+3],', 'cl']
mov ['[ebp+var_1C],', '0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_1C]']
mov ['al,', '[edx]']
mov ['byte', 'ptr', '[ebp+var_20+3],', 'al']
cmp ['[ebp+var_14],', '4']
jnz ['short', 'loc_1F6F']
jmp ['short', 'loc_1F4F']
mov ['cl,', 'byte', 'ptr', '[ebp+var_20+3]']
sub ['cl,', '1']
mov ['byte', 'ptr', '[ebp+var_20+3],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_20+3]']
test ['edx,', 'edx']
jle ['short', 'loc_1F66']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_18+3]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
call ['?UpdateByte@CBZip2Crc@@QAEXE@Z']
jmp ['short', 'loc_1F46']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1FA0']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_18+3]']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_20+3]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_1F86']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1F93']
mov ['[ebp+var_14],', '1']
mov ['cl,', 'byte', 'ptr', '[ebp+var_20+3]']
mov ['byte', 'ptr', '[ebp+var_18+3],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_20+3]']
push ['edx']
lea ['ecx,', '[ebp+var_C]']
call ['?UpdateByte@CBZip2Crc@@QAEXE@Z']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+arg_4]']
jb ['short', 'loc_1F33']
lea ['ecx,', '[ebp+var_C]']
call ['?GetDigest@CBZip2Crc@@QBEIXZ']
mov ['[ebp+var_24],', 'eax']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteCrc2@CThreadInfo@NBZip2@NCompress@@AAEXI@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?EncodeBlock@CThreadInfo@NBZip2@NCompress@@AAEXPBEI@Z']
mov ['eax,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?EncodeBlock2@CThreadInfo@NBZip2@NCompress@@AAEXPBEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8CD4h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_9],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+10h]']
call ['?GetBytePos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
call ['?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+10h]']
call ['?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ']
mov ['[ebp+var_15],', 'al']
mov ['[ebp+var_16],', '0']
mov ['[ebp+var_1C],', '0']
cmp ['[ebp+arg_8],', '1']
jbe ['loc_217B']
cmp ['[ebp+arg_4],', '400h']
jb ['loc_217B']
mov ['edx,', '[ebp+arg_4]']
shr ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_20AB']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['edx,', 'ecx']
jz ['short', 'loc_20DA']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_20]']
movzx ['eax,', 'byte', 'ptr', '[edx-1]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[ecx-2]']
cmp ['eax,', 'edx']
jnz ['short', 'loc_20E4']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_20E4']
jmp ['short', 'loc_20A2']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['loc_217B']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?EncodeBlock2@CThreadInfo@NBZip2@NCompress@@AAEXPBEII@Z']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?EncodeBlock2@CThreadInfo@NBZip2@NCompress@@AAEXPBEII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+10h]']
call ['?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
call ['?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ']
mov ['[ebp+var_16],', 'al']
mov ['ecx,', '[ebp+var_1C]']
and ['ecx,', '7']
jbe ['short', 'loc_2160']
mov ['edx,', '[ebp+var_1C]']
and ['edx,', '7']
mov ['eax,', '8']
sub ['eax,', 'edx']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z']
movzx ['ecx,', '[ebp+var_15]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
and ['edx,', '7']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
call ['?SetCurState@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXIE@Z']
mov ['[ebp+var_9],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+10h]']
call ['?GetBytePos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ']
mov ['[ebp+var_24],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+10h]']
call ['?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?EncodeBlockWithHeaders@CThreadInfo@NBZip2@NCompress@@AAEIPBEI@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+10h]']
call ['?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ']
mov ['[ebp+var_30],', 'eax']
movzx ['eax,', '[ebp+var_9]']
test ['eax,', 'eax']
jz ['loc_22A5']
mov ['ecx,', '[ebp+var_30]']
sub ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '[ebp+var_14]']
cmp ['[ebp+var_34],', 'edx']
jnb ['loc_227D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
call ['?GetBytePos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ']
sub ['eax,', '[ebp+var_24]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+10h]']
call ['?GetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QBEPAEXZ']
mov ['[ebp+var_3C],', 'eax']
mov ['[ebp+var_40],', '0']
jmp ['short', 'loc_220D']
mov ['edx,', '[ebp+var_40]']
add ['edx,', '1']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_40]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_222F']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_40]']
mov ['eax,', '[ebp+var_3C]']
mov ['esi,', '[ebp+var_3C]']
mov ['cl,', '[esi+ecx]']
mov ['[eax+edx],', 'cl']
jmp ['short', 'loc_2204']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ebp+var_30]']
sub ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
call ['?SetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+8CD4h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8CD4h]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx+ecx*4+7CD4h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8CD4h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8CD4h],', 'edx']
jmp ['short', 'loc_22A3']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+10h]']
call ['?SetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXI@Z']
movzx ['eax,', '[ebp+var_16]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
and ['ecx,', '7']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+10h]']
call ['?SetCurState@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXIE@Z']
jmp ['short', 'loc_22DC']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8CD4h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8CD4h]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_2C]']
mov ['[ecx+eax*4+7CD4h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8CD4h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8CD4h],', 'ecx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?EncodeBlock3@CThreadInfo@NBZip2@NCompress@@QAEJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '38h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['?SetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXPAE@Z']
lea ['ecx,', '[ebp+var_18]']
call ['?Init@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXXZ']
mov ['edx,', '[ebp+var_4]']
lea ['eax,', '[ebp+var_18]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8CD4h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8CE0h]']
mov ['ecx,', '[eax+174h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?EncodeBlock2@CThreadInfo@NBZip2@NCompress@@AAEXPBEII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8CE0h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1A0h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2399']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8CE0h]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8CD8h]']
imul ['edx,', '8E00h']
mov ['eax,', '[eax+17Ch]']
lea ['ecx,', '[eax+edx+8CF0h]']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_23AB']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[edx+8CD4h]']
jnb ['short', 'loc_23DD']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4+7CD4h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+8CE0h]']
add ['ecx,', '178h']
call ['?Update@CBZip2CombinedCrc@@QAEXI@Z']
jmp ['short', 'loc_23A2']
lea ['ecx,', '[ebp+var_18]']
call ['?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ']
movzx ['edx,', 'al']
push ['edx']
lea ['ecx,', '[ebp+var_18]']
call ['?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ']
push ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+8CE0h]']
call ['?WriteBytes@CEncoder@NBZip2@NCompress@@QAEXPBEIE@Z']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8CE0h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1A0h]']
test ['edx,', 'edx']
jz ['loc_24DF']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8CD8h]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8CE0h]']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[eax+19Ch]']
jnz ['short', 'loc_2450']
mov ['[ebp+var_28],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8CE0h]']
cmp ['dword', 'ptr', '[eax+1B4h],', '0']
jz ['short', 'loc_24BB']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+8CE0h]']
add ['ecx,', '140h']
call ['?GetProcessedSize@?$CBitmEncoder@VCOutBuffer@@@@QBE_KXZ']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_30],', 'edx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8CF8h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8CE0h]']
mov ['eax,', '[edx+1B4h]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8CE0h]']
mov ['ecx,', '[edx+1B4h]']
mov ['edx,', '[eax]']
push ['ecx']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8CE0h]']
mov ['eax,', '[ebp+var_28]']
imul ['eax,', '8E00h']
mov ['ecx,', '[edx+17Ch]']
lea ['ecx,', '[ecx+eax+8CF0h]']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['eax,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteBytes@CEncoder@NBZip2@NCompress@@QAEXPBEIE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_2589']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_25AD']
push ['8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?WriteBits@?$CBitmEncoder@VCOutBuffer@@@@QAEXII@Z']
jmp ['short', 'loc_2580']
mov ['edx,', '[ebp+arg_4]']
and ['edx,', '7']
push ['edx']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CEncoder@NBZip2@NCompress@@QAEXII@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?CodeReal@CEncoder@NBZip2@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '54h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+1B4h],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Create@CEncoder@NBZip2@NCompress@@QAEJXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2621']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_29F0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_2633']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+19Ch]']
jnb ['loc_26FA']
mov ['edx,', '[ebp+var_C]']
imul ['edx,', '8E00h']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+17Ch]']
mov ['[ebp+var_10],', 'edx']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1A0h]']
test ['edx,', 'edx']
jz ['short', 'loc_26C5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8CE8h']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2687']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_29F0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8CECh']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_26A6']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_29F0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8CF0h']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_26C5']
mov ['eax,', '[ebp+var_1C]']
jmp ['loc_29F0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '170h']
call ['?DoOptimizeNumTables@CEncProps@NBZip2@NCompress@@QBE_NXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+8CDCh],', 'al']
mov ['ecx,', '[ebp+var_10]']
call ['?Alloc@CThreadInfo@NBZip2@NCompress@@QAE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_26F5']
mov ['eax,', '8007000Eh']
jmp ['loc_29F0']
jmp ['loc_262A']
push ['20000h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?Create@CInBuffer@@QAE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_271B']
mov ['eax,', '8007000Eh']
jmp ['loc_29F0']
push ['20000h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?Create@?$CBitmEncoder@VCOutBuffer@@@@QAE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_273F']
mov ['eax,', '8007000Eh']
jmp ['loc_29F0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?Init@CInBufferBase@@QAEXXZ']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?SetStream@?$CBitmEncoder@VCOutBuffer@@@@QAEXPAUISequentialOutStream@@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?Init@?$CBitmEncoder@VCOutBuffer@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '178h']
call ['?Init@CBZip2CombinedCrc@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1A4h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+1A9h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+1A8h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1ACh']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
push ['42h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z']
push ['5Ah']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z']
push ['68h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+170h]']
add ['edx,', '30h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1A0h]']
test ['ecx,', 'ecx']
jz ['loc_28F3']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+17Ch]']
add ['ecx,', '8CF0h']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+1B0h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '180h']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_283C']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[edx+19Ch]']
jnb ['short', 'loc_286A']
mov ['ecx,', '[ebp+var_20]']
imul ['ecx,', '8E00h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+17Ch]']
lea ['ecx,', '[eax+ecx+8CE8h]']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
jmp ['short', 'loc_2833']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '180h']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1ACh']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_2898']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[edx+19Ch]']
jnb ['short', 'loc_28C6']
mov ['ecx,', '[ebp+var_20]']
imul ['ecx,', '8E00h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+17Ch]']
lea ['ecx,', '[eax+ecx+8CECh]']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
jmp ['short', 'loc_288F']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1ACh']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1B0h]']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_28EE']
mov ['eax,', '[ebp+var_24]']
jmp ['loc_29F0']
jmp ['loc_2992']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+17Ch]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadRleBlock@CEncoder@NBZip2@NCompress@@QAEIPAE@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_2918']
jmp ['short', 'loc_2992']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_28]']
call ['?EncodeBlock3@CThreadInfo@NBZip2@NCompress@@QAEJI@Z']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_2935']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_29F0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_298D']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?GetProcessedSize@CInBufferBase@@QBE_KXZ']
mov ['[ebp+var_3C],', 'eax']
mov ['[ebp+var_38],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?GetProcessedSize@?$CBitmEncoder@VCOutBuffer@@@@QBE_KXZ']
mov ['[ebp+var_4C],', 'eax']
mov ['[ebp+var_48],', 'edx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_4C]']
push ['edx']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_298D']
mov ['eax,', '[ebp+var_54]']
jmp ['short', 'loc_29F0']
jmp ['loc_28F3']
push ['17h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z']
push ['72h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z']
push ['45h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z']
push ['38h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z']
push ['50h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z']
push ['90h']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '178h']
call ['?GetDigest@CBZip2CombinedCrc@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteCrc@CEncoder@NBZip2@NCompress@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?Flush@CEncoder@NBZip2@NCompress@@QAEJXZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN32']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '54h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '28h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?CodeReal@CEncoder@NBZip2@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
jmp ['short', 'loc_2B20']
endp
__catch$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0 proc near
mov ['edx,', '[ebp-18h]']
mov ['eax,', '[edx]']
mov ['[ebp-2Ch],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN9']
retn
endp
__catch$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1 proc near
mov ['ecx,', '[ebp-24h]']
mov ['edx,', '[ecx]']
mov ['[ebp-30h],', 'edx']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN11_0']
retn
endp
__catch$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2 proc near
mov ['dword', 'ptr', '[ebp-34h],', '1']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN13_1']
retn
endp
?SetCoderProperties@CEncoder@NBZip2@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_10]']
call ['??0CEncProps@NBZip2@NCompress@@QAE@XZ']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_2BB8']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['loc_2C76']
mov ['edx,', '[ebp+var_18]']
shl ['edx,', '4']
add ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '10h']
jb ['short', 'loc_2BE4']
jmp ['short', 'loc_2BAF']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '13h']
jz ['short', 'loc_2BF9']
mov ['eax,', '80070057h']
jmp ['loc_2C99']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
cmp ['[ebp+var_28],', '0Eh']
ja ['short', '$LN1']
mov ['eax,', '[ebp+var_28]']
movzx ['ecx,', 'ds:$LN15_1[eax]']
jmp ['ds:$LN19_0[ecx*4]']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_2C71']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '186A0h']
div ['ecx']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_2C71']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_2C71']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '4']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+4]']
push ['ecx']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2C71']
mov ['eax,', '80070057h']
jmp ['short', 'loc_2C99']
jmp ['loc_2BAF']
mov ['edx,', '[ebp+var_4]']
push ['edx']
lea ['ecx,', '[ebp+var_10]']
call ['?Normalize@CEncProps@NBZip2@NCompress@@QAEXH@Z']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+16Ch],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[eax+170h],', 'edx']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?SetNumberOfThreads@CEncoder@NBZip2@NCompress@@UAGJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '40h']
cmp ['[ebp+arg_4],', '1']
jnb ['short', 'loc_2D1F']
mov ['[ebp+arg_4],', '1']
cmp ['[ebp+arg_4],', '40h']
jbe ['short', 'loc_2D2C']
mov ['[ebp+arg_4],', '40h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+194h],', 'ecx']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Create@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_AutoResetEvent_CreateNotSignaled@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_Thread_Create@12']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Event_Set@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_Handle_WaitObject@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LeaveCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__ehhandler$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-50h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1CInBuffer@@QAE@XZ']
endp
__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '140h']
jmp ['??1?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ']
endp
__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '180h']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '184h']
jmp ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1ACh']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??0CEncoder@NBZip2@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CEncoder@NBZip2@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1CInBuffer@@QAE@XZ']
endp
__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '140h']
jmp ['??1?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ']
endp
__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '180h']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '184h']
jmp ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1ACh']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??1CEncoder@NBZip2@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CEncoder@NBZip2@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ$2 proc near
mov ['eax,', '[ebp-34h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-44h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnterCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessedSize@CInBufferBase@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
xor ['esi,', 'esi']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
adc ['esi,', '[edx+14h]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[eax]']
sub ['eax,', '[edx+8]']
cdq
add ['ecx,', 'eax']
adc ['esi,', 'edx']
mov ['eax,', 'ecx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBZip2CombinedCrc@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_CriticalSection_Init@4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__DeleteCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CInBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CEncProps@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CEncoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_3668']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_3657']
mov ['edx,', '[ebp+this]']
add ['edx,', '8']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_365E']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_36D7']
push ['offset', '_IID_ICompressSetCoderMt']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_369C']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_368B']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_3692']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_36D7']
push ['offset', '_IID_ICompressSetCoderProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_36D0']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_36BF']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '4']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_36C6']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_36D7']
mov ['eax,', '80004002h']
jmp ['short', 'loc_36E8']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+0Ch],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CEncoder@NBZip2@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CEncoder@NBZip2@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_37A2']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+0Ch]']
jmp ['short', 'loc_37CC']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_37C3']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCEncoder@NBZip2@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_37CA']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCEncoder@NBZip2@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CEncoder@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3806']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetCoderProperties@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetCoderProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetCoderMt@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetCoderMt@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CInBufferBase@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0COutBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1COutBuffer@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3AF1']
xor ['eax,', 'eax']
jmp ['short', 'loc_3AFA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ManualResetEvent_CreateNotSignaled@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setnz ['cl']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CThreadInfo@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8CE4h']
call ['??0CThread@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8CE8h']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8CECh']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8CF0h']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8CE4h']
jmp ['??1CThread@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8CE8h']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8CECh']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CThread@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CThread@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CThread@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CThread@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CThreadInfo@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
call ['?Free@CThreadInfo@NBZip2@NCompress@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8CF0h']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8CECh']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8CE8h']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8CE4h']
call ['??1CThread@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8CE4h']
jmp ['??1CThread@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8CE8h']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8CECh']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8CF0h']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_ECThreadInfo@NBZip2@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_3E9F']
push ['offset', '??1CThreadInfo@NBZip2@NCompress@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx-4]']
push ['edx']
push ['8E00h']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1']
jz ['short', 'loc_3E97']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '4']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '4']
jmp ['short', 'loc_3EBE']
mov ['ecx,', '[ebp+var_4]']
call ['??1CThreadInfo@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3EBB']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Wait@CThread@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_Handle_WaitObject@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadByte@CInBufferBase@@QAE_NAAE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+4]']
jb ['short', 'loc_3F21']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte_FromNewBlock@CInBufferBase@@IAE_NAAE@Z']
jmp ['short', 'loc_3F3C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[edx]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['al,', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteBits@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jbe ['loc_4017']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??$MyMin@I@@YGIII@Z']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ecx+8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8]']
shl ['dl,', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8],', 'dl']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
shr ['edx,', 'cl']
mov ['[ebp+var_C],', 'edx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
or ['edx,', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8],', 'dl']
mov ['edx,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_4]']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', 'edx']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jnz ['short', 'loc_4012']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['cl,', '[ecx+8]']
mov ['[eax+edx],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '8']
jmp ['loc_3F6A']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '8']
sub ['eax,', '[edx+4]']
lea ['eax,', '[eax+ecx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax+8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '3']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
and ['edx,', '7']
mov ['eax,', '8']
sub ['eax,', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetCurState@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXIE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '8']
sub ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['al,', '[ebp+arg_4]']
mov ['[edx+8],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?FindAndMove@CMtf8Encoder@NCompress@@QAEIE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_40F8']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
movzx ['eax,', '[ebp+arg_0]']
cmp ['edx,', 'eax']
jz ['short', 'loc_410B']
jmp ['short', 'loc_40EF']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_411C']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '8']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '8']
jb ['loc_41BA']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-1]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-2]']
mov ['[eax-1],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-3]']
mov ['[eax-2],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-4]']
mov ['[eax-3],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-5]']
mov ['[eax-4],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-6]']
mov ['[eax-5],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-7]']
mov ['[eax-6],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-8]']
mov ['[eax-7],', 'dl']
jmp ['loc_4113']
jmp ['short', 'loc_41C5']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_41DE']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['al,', '[edx-1]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_41BC']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CBZip2Crc@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?UpdateByte@CBZip2Crc@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
shr ['ecx,', '18h']
movzx ['edx,', '[ebp+arg_0]']
xor ['ecx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
shl ['edx,', '8']
xor ['edx,', 'dword', 'ptr', 'ds:?Table@CBZip2Crc@@0PAIA[ecx*4]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetDigest@CBZip2Crc@@QBEIXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
xor ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QBEPAEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetBytePos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Update@CBZip2CombinedCrc@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
shr ['eax,', '1Fh']
or ['ecx,', 'eax']
xor ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXPAE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '8']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+8],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CBZip2CombinedCrc@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetDigest@CBZip2CombinedCrc@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Event_Reset@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?DoOptimizeNumTables@CEncProps@NBZip2@NCompress@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '1']
cmp ['ecx,', '[eax+4]']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Flush@CEncoder@NBZip2@NCompress@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?Flush@?$CBitmEncoder@VCOutBuffer@@@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@?$CBitmEncoder@VCOutBuffer@@@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Create@COutBuffer@@QAE_NI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@?$CBitmEncoder@VCOutBuffer@@@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetProcessedSize@?$CBitmEncoder@VCOutBuffer@@@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '8']
sub ['esi,', '[ecx]']
add ['esi,', '7']
shr ['esi,', '3']
xor ['ecx,', 'ecx']
add ['eax,', 'esi']
adc ['edx,', 'ecx']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@?$CBitmEncoder@VCOutBuffer@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Init@COutBuffer@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+4],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Flush@?$CBitmEncoder@VCOutBuffer@@@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '8']
jnb ['short', 'loc_44FA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@?$CBitmEncoder@VCOutBuffer@@@@QAEXII@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Flush@COutBuffer@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WriteBits@?$CBitmEncoder@VCOutBuffer@@@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jbe ['loc_45B9']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_4568']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
movzx ['edx,', 'byte', 'ptr', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+4]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'al']
jmp ['short', 'loc_45B9']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[edx]']
mov ['[ebp+arg_4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
shr ['edx,', 'cl']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', 'eax']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
or ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '8']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+4],', '0']
jmp ['loc_452B']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteByte@COutBuffer@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_4610']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$MyMin@I@@YGIII@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_463B']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_4641']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Release@CEncoder@NBZip2@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CEncoder@NBZip2@NCompress@@UAGKXZ']
endp
?AddRef@CEncoder@NBZip2@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CEncoder@NBZip2@NCompress@@UAGKXZ']
endp
?AddRef@CEncoder@NBZip2@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CEncoder@NBZip2@NCompress@@UAGKXZ']
endp
?QueryInterface@CEncoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CEncoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CEncoder@NBZip2@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CEncoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CEncoder@NBZip2@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CEncoder@NBZip2@NCompress@@UAGKXZ']
endp

?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+8]']
adc ['ecx,', '[edx+0Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteHeaderReal@COutArchive@NTar@NArchive@@AAEJABUCItem@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '248h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_248]']
mov ['ecx,', '92h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
push ['200h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+Dst]']
mov ['[ebp+var_214],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@AString@@QBEIXZ']
cmp ['eax,', '64h']
jbe ['short', 'loc_B4']
mov ['eax,', '80004005h']
jmp ['loc_642']
push ['64h']
mov ['ecx,', '[ebp+arg_0]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['edx,', '[ebp+var_214]']
push ['edx']
call ['?MyStrNCpy@NTar@NArchive@@YGXPADPBDI@Z']
mov ['eax,', '[ebp+var_214]']
add ['eax,', '64h']
mov ['[ebp+var_214],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_214]']
push ['eax']
call ['?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_FE']
mov ['eax,', '80004005h']
jmp ['loc_642']
mov ['edx,', '[ebp+var_214]']
add ['edx,', '8']
mov ['[ebp+var_214],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_214]']
push ['edx']
call ['?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_131']
mov ['eax,', '80004005h']
jmp ['loc_642']
mov ['ecx,', '[ebp+var_214]']
add ['ecx,', '8']
mov ['[ebp+var_214],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
push ['eax']
mov ['ecx,', '[ebp+var_214]']
push ['ecx']
call ['?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_164']
mov ['eax,', '80004005h']
jmp ['loc_642']
mov ['eax,', '[ebp+var_214]']
add ['eax,', '8']
mov ['[ebp+var_214],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ecx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_214]']
push ['ecx']
call ['?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z']
mov ['edx,', '[ebp+var_214]']
add ['edx,', '0Ch']
mov ['[ebp+var_214],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[eax+20h]']
push ['edx']
mov ['eax,', '[ebp+var_214]']
push ['eax']
call ['?WriteOctal_12_Signed@NTar@NArchive@@YGXPAD_J@Z']
mov ['ecx,', '[ebp+var_214]']
add ['ecx,', '0Ch']
mov ['[ebp+var_214],', 'ecx']
push ['8']
push ['20h']
mov ['edx,', '[ebp+var_214]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_214]']
add ['eax,', '8']
mov ['[ebp+var_214],', 'eax']
mov ['ecx,', '[ebp+var_214]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+68h]']
mov ['[ecx],', 'al']
mov ['ecx,', '[ebp+var_214]']
add ['ecx,', '1']
mov ['[ebp+var_214],', 'ecx']
push ['64h']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '3Ch']
push ['edx']
mov ['eax,', '[ebp+var_214]']
push ['eax']
call ['?CopyString@NTar@NArchive@@YG_NPADABVAString@@I@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_224']
mov ['eax,', '80004005h']
jmp ['loc_642']
mov ['edx,', '[ebp+var_214]']
add ['edx,', '64h']
mov ['[ebp+var_214],', 'edx']
push ['8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '60h']
push ['eax']
mov ['ecx,', '[ebp+var_214]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_214]']
add ['edx,', '8']
mov ['[ebp+var_214],', 'edx']
push ['20h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '48h']
push ['eax']
mov ['ecx,', '[ebp+var_214]']
push ['ecx']
call ['?CopyString@NTar@NArchive@@YG_NPADABVAString@@I@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_280']
mov ['eax,', '80004005h']
jmp ['loc_642']
mov ['eax,', '[ebp+var_214]']
add ['eax,', '20h']
mov ['[ebp+var_214],', 'eax']
push ['20h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '54h']
push ['ecx']
mov ['edx,', '[ebp+var_214]']
push ['edx']
call ['?CopyString@NTar@NArchive@@YG_NPADABVAString@@I@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_2B5']
mov ['eax,', '80004005h']
jmp ['loc_642']
mov ['ecx,', '[ebp+var_214]']
add ['ecx,', '20h']
mov ['[ebp+var_214],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+69h]']
test ['eax,', 'eax']
jz ['short', 'loc_2F3']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
push ['edx']
mov ['eax,', '[ebp+var_214]']
push ['eax']
call ['?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2F3']
mov ['eax,', '80004005h']
jmp ['loc_642']
mov ['edx,', '[ebp+var_214]']
add ['edx,', '8']
mov ['[ebp+var_214],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+6Ah]']
test ['ecx,', 'ecx']
jz ['short', 'loc_331']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
push ['eax']
mov ['ecx,', '[ebp+var_214]']
push ['ecx']
call ['?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_331']
mov ['eax,', '80004005h']
jmp ['loc_642']
mov ['eax,', '[ebp+var_214]']
add ['eax,', '8']
mov ['[ebp+var_214],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsSparse@CItem@NTar@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_420']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
mov ['edx,', '4']
cmp ['edx,', 'eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['[ebp+var_2A],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ecx+18h]']
push ['eax']
lea ['ecx,', '[ebp+var_29]']
push ['ecx']
call ['?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z']
mov ['[ebp+var_218],', '0']
jmp ['short', 'loc_39B']
mov ['edx,', '[ebp+var_218]']
add ['edx,', '1']
mov ['[ebp+var_218],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_218],', 'eax']
jnb ['short', 'loc_420']
cmp ['[ebp+var_218],', '4']
jnb ['short', 'loc_420']
mov ['eax,', '[ebp+var_218]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
call ['??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z']
mov ['[ebp+var_21C],', 'eax']
mov ['ecx,', '[ebp+var_218]']
imul ['ecx,', '18h']
lea ['edx,', '[ebp+ecx+var_8A]']
mov ['[ebp+var_220],', 'edx']
mov ['eax,', '[ebp+var_21C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[eax]']
push ['edx']
mov ['eax,', '[ebp+var_220]']
push ['eax']
call ['?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z']
mov ['ecx,', '[ebp+var_21C]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ecx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_220]']
add ['ecx,', '0Ch']
push ['ecx']
call ['?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z']
jmp ['loc_38C']
mov ['[ebp+var_224],', '0']
mov ['[ebp+var_228],', '0']
jmp ['short', 'loc_445']
mov ['edx,', '[ebp+var_228]']
add ['edx,', '1']
mov ['[ebp+var_228],', 'edx']
cmp ['[ebp+var_228],', '200h']
jnb ['short', 'loc_46D']
mov ['eax,', '[ebp+var_228]']
movzx ['ecx,', '[ebp+eax+Dst]']
add ['ecx,', '[ebp+var_224]']
mov ['[ebp+var_224],', 'ecx']
jmp ['short', 'loc_436']
mov ['[ebp+var_22C],', '6']
mov ['[ebp+var_230],', '0']
jmp ['short', 'loc_492']
mov ['edx,', '[ebp+var_230]']
add ['edx,', '1']
mov ['[ebp+var_230],', 'edx']
cmp ['[ebp+var_230],', '6']
jnb ['short', 'loc_4CA']
mov ['eax,', '[ebp+var_224]']
and ['eax,', '7']
add ['eax,', '30h']
mov ['ecx,', '99h']
sub ['ecx,', '[ebp+var_230]']
mov ['[ebp+ecx+Dst],', 'al']
mov ['edx,', '[ebp+var_224]']
shr ['edx,', '3']
mov ['[ebp+var_224],', 'edx']
jmp ['short', 'loc_483']
mov ['[ebp+var_172],', '0']
push ['200h']
lea ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z']
mov ['[ebp+var_234],', 'eax']
cmp ['[ebp+var_234],', '0']
jz ['short', 'loc_4FF']
mov ['eax,', '[ebp+var_234]']
jmp ['loc_642']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsSparse@CItem@NTar@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_640']
mov ['[ebp+var_238],', '4']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_238],', 'eax']
jnb ['loc_640']
push ['200h']
push ['0']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_23C],', '0']
jmp ['short', 'loc_573']
mov ['eax,', '[ebp+var_23C]']
add ['eax,', '1']
mov ['[ebp+var_23C],', 'eax']
mov ['ecx,', '[ebp+var_238]']
add ['ecx,', '1']
mov ['[ebp+var_238],', 'ecx']
cmp ['[ebp+var_23C],', '15h']
jnb ['short', 'loc_5F8']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_238],', 'eax']
jnb ['short', 'loc_5F8']
mov ['edx,', '[ebp+var_238]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
call ['??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z']
mov ['[ebp+var_240],', 'eax']
mov ['eax,', '[ebp+var_23C]']
imul ['eax,', '18h']
lea ['ecx,', '[ebp+eax+Dst]']
mov ['[ebp+var_244],', 'ecx']
mov ['edx,', '[ebp+var_240]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[edx]']
push ['ecx']
mov ['edx,', '[ebp+var_244]']
push ['edx']
call ['?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z']
mov ['eax,', '[ebp+var_240]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[eax+8]']
push ['edx']
mov ['eax,', '[ebp+var_244]']
add ['eax,', '0Ch']
push ['eax']
call ['?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z']
jmp ['loc_555']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_238],', 'eax']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['[ebp+var_14],', 'cl']
push ['200h']
lea ['edx,', '[ebp+Dst]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z']
mov ['[ebp+var_248],', 'eax']
cmp ['[ebp+var_248],', '0']
jz ['short', 'loc_63B']
mov ['eax,', '[ebp+var_248]']
jmp ['short', 'loc_642']
jmp ['loc_51C']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN34']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '248h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyStrNCpy@NTar@NArchive@@YGXPADPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_6B6']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_6E0']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_4]']
mov ['al,', '[edx]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_8+3]']
mov ['[ecx],', 'dl']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_6DE']
jmp ['short', 'loc_6E0']
jmp ['short', 'loc_6AD']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '7']
cmp ['[ebp+arg_4],', '200000h']
jb ['short', 'loc_718']
xor ['al,', 'al']
jmp ['short', 'loc_754']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_72A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '7']
jnb ['short', 'loc_752']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '7']
add ['ecx,', '30h']
mov ['edx,', '6']
sub ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+edx],', 'cl']
mov ['ecx,', '[ebp+arg_4]']
shr ['ecx,', '3']
mov ['[ebp+arg_4],', 'ecx']
jmp ['short', 'loc_721']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0Bh']
cmp ['[ebp+arg_8],', '2']
jb ['short', 'loc_7F0']
ja ['short', 'loc_790']
cmp ['[ebp+arg_4],', '0']
jb ['short', 'loc_7F0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax],', '80h']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+3],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+2],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+1],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_7D0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['cl,', '8']
call ['__allshl']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+var_8],', '8']
jnb ['short', 'loc_7EE']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['cl,', '38h']
call ['__aullshr']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'al']
jmp ['short', 'loc_7B4']
jmp ['short', 'loc_83D']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_802']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0Bh']
jnb ['short', 'loc_83D']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '7']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0']
add ['ecx,', '30h']
adc ['edx,', '0']
mov ['eax,', '0Ah']
sub ['eax,', '[ebp+var_C]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+eax],', 'cl']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['cl,', '3']
call ['__aullshr']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
jmp ['short', 'loc_7F9']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?WriteOctal_12_Signed@NTar@NArchive@@YGXPAD_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_87C']
jg ['short', 'loc_869']
cmp ['[ebp+arg_4],', '0']
jb ['short', 'loc_87C']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z']
jmp ['short', 'loc_8DA']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+3],', '0FFh']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+2],', '0FFh']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+1],', '0FFh']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax],', '0FFh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_8BC']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['cl,', '8']
call ['__allshl']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+var_4],', '8']
jnb ['short', 'loc_8DA']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['cl,', '38h']
call ['__allshr']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'al']
jmp ['short', 'loc_8A0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?CopyString@NTar@NArchive@@YG_NPADABVAString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@AString@@QBEIXZ']
cmp ['eax,', '[ebp+arg_8]']
jb ['short', 'loc_904']
xor ['al,', 'al']
jmp ['short', 'loc_918']
mov ['ecx,', '[ebp+arg_4]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringCopy@@YGXPADPBD@Z']
mov ['al,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0B8h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '2Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '3Ch']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_18],', '64h']
jnb ['short', 'loc_9A9']
cmp ['[ebp+var_1C],', '64h']
jnb ['short', 'loc_9A9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?WriteHeaderReal@COutArchive@NTar@NArchive@@AAEJABUCItem@23@@Z']
jmp ['loc_BD1']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_98]']
call ['??0CItem@NTar@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', 'dword', 'ptr', 'ds:?kLongLink@NFileHeader@NTar@NArchive@@3PBDB']
push ['edx']
lea ['ecx,', '[ebp+var_98]']
call ['??4AString@@QAEAAV0@PBD@Z']
lea ['ecx,', '[ebp+var_5C]']
call ['?Empty@AString@@QAEXXZ']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_9F4']
mov ['eax,', '[ebp+var_A0]']
add ['eax,', '1']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '2']
jge ['loc_B4C']
cmp ['[ebp+var_A0],', '0']
jnz ['short', 'loc_A1C']
mov ['[ebp+var_30],', '4Bh']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '3Ch']
mov ['[ebp+var_A8+4],', 'ecx']
jmp ['short', 'loc_A29']
mov ['[ebp+var_30],', '4Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_A8+4],', 'edx']
mov ['ecx,', '[ebp+var_A8+4]']
call ['?Len@AString@@QBEIXZ']
cmp ['eax,', '64h']
jnb ['short', 'loc_A3B']
jmp ['short', 'loc_9E5']
mov ['ecx,', '[ebp+var_A8+4]']
call ['?Len@AString@@QBEIXZ']
add ['eax,', '1']
mov ['[ebp+var_A8],', 'eax']
mov ['eax,', '[ebp+var_A8]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_88],', 'eax']
mov ['[ebp+var_84],', 'ecx']
lea ['edx,', '[ebp+var_98]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?WriteHeaderReal@COutArchive@NTar@NArchive@@AAEJABUCItem@23@@Z']
mov ['[ebp+var_AC],', 'eax']
cmp ['[ebp+var_AC],', '0']
jz ['short', 'loc_AAA']
mov ['eax,', '[ebp+var_AC]']
mov ['[ebp+var_B8],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_98]']
call ['??1CItem@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_B8]']
jmp ['loc_BD1']
mov ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['ecx,', '[ebp+var_A8+4]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '0']
jz ['short', 'loc_AFD']
mov ['edx,', '[ebp+var_B0]']
mov ['[ebp+var_BC],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_98]']
call ['??1CItem@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_BC]']
jmp ['loc_BD1']
mov ['eax,', '[ebp+var_A8]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?FillDataResidual@COutArchive@NTar@NArchive@@QAEJ_K@Z']
mov ['[ebp+var_B4],', 'eax']
cmp ['[ebp+var_B4],', '0']
jz ['short', 'loc_B47']
mov ['edx,', '[ebp+var_B4]']
mov ['[ebp+var_C0],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_98]']
call ['??1CItem@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_C0]']
jmp ['loc_BD1']
jmp ['loc_9E5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_98]']
call ['??4CItem@NTar@NArchive@@QAEAAU012@ABU012@@Z']
lea ['ecx,', '[ebp+var_98]']
call ['?Len@AString@@QBEIXZ']
cmp ['eax,', '64h']
jb ['short', 'loc_B81']
push ['63h']
mov ['ecx,', '[ebp+arg_0]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
lea ['ecx,', '[ebp+var_98]']
call ['?SetFrom@AString@@QAEXPBDI@Z']
lea ['ecx,', '[ebp+var_5C]']
call ['?Len@AString@@QBEIXZ']
cmp ['eax,', '64h']
jb ['short', 'loc_BA4']
push ['63h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '3Ch']
call ['??BAString@@QBEPBDXZ']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['?SetFrom@AString@@QAEXPBDI@Z']
lea ['ecx,', '[ebp+var_98]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?WriteHeaderReal@COutArchive@NTar@NArchive@@AAEJABUCItem@23@@Z']
mov ['[ebp+var_C4],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_98]']
call ['??1CItem@NTar@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_C4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?FillDataResidual@COutArchive@NTar@NArchive@@QAEJ_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '218h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_218]']
mov ['ecx,', '86h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
and ['eax,', '1FFh']
mov ['[ebp+var_C],', 'eax']
jnz ['short', 'loc_C6C']
xor ['eax,', 'eax']
jmp ['short', 'loc_C9F']
mov ['ecx,', '200h']
sub ['ecx,', '[ebp+var_C]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '218h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteFinishHeader@COutArchive@NTar@NArchive@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '218h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_218]']
mov ['ecx,', '86h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
push ['200h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_214],', '0']
jmp ['short', 'loc_D4C']
mov ['ecx,', '[ebp+var_214]']
add ['ecx,', '1']
mov ['[ebp+var_214],', 'ecx']
cmp ['[ebp+var_214],', '2']
jnb ['short', 'loc_D82']
push ['200h']
lea ['edx,', '[ebp+Dst]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z']
mov ['[ebp+var_218],', 'eax']
cmp ['[ebp+var_218],', '0']
jz ['short', 'loc_D80']
mov ['eax,', '[ebp+var_218]']
jmp ['short', 'loc_D84']
jmp ['short', 'loc_D3D']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '218h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsSparse@CItem@NTar@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+68h]']
xor ['eax,', 'eax']
cmp ['ecx,', '53h']
setz ['al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MyStringCopy@@YGXPADPBD@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
test ['ecx,', 'ecx']
jz ['short', 'loc_E66']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_E6D']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_E75']
jmp ['short', 'loc_E37']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z$0 proc near
lea ['ecx,', '[ebp-98h]']
jmp ['??1CItem@NTar@NArchive@@QAE@XZ']
endp
__ehhandler$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0C0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z']
jmp ['___CxxFrameHandler3']
endp
?Empty@AString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CItem@NTar@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CItem@NTar@NArchive@@QAE@ABU012@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0AString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[edx+14h]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['ecx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['[edx+20h],', 'ecx']
mov ['eax,', '[eax+24h]']
mov ['[edx+24h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['[ecx+28h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
mov ['[ecx+2Ch],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
mov ['[ecx+30h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
mov ['[ecx+34h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
mov ['[ecx+38h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '3Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??0AString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '48h']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??0AString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '54h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??0AString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
mov ['[ecx+60h],', 'eax']
mov ['edx,', '[edx+64h]']
mov ['[ecx+64h],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+68h]']
mov ['[eax+68h],', 'dl']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+69h]']
mov ['[eax+69h],', 'dl']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+6Ah]']
mov ['[eax+6Ah],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '6Ch']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??0?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '3Ch']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '54h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0CItem@NTar@NArchive@@QAE@ABU012@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CItem@NTar@NArchive@@QAE@ABU012@@Z']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CItem@NTar@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CItem@NTar@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??1?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '54h']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1AString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '3Ch']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '54h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1CItem@NTar@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CItem@NTar@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??4CItem@NTar@NArchive@@QAEAAU012@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[edx+14h]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['ecx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['[edx+20h],', 'ecx']
mov ['eax,', '[eax+24h]']
mov ['[edx+24h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['[ecx+28h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
mov ['[ecx+2Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
mov ['[ecx+30h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
mov ['[ecx+34h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
mov ['[ecx+38h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '3Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '3Ch']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '48h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '54h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '54h']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1321']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '8']
jnb ['short', 'loc_133B']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+60h]']
mov ['[edx+60h],', 'cl']
jmp ['short', 'loc_1318']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+68h]']
mov ['[edx+68h],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+69h]']
mov ['[edx+69h],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+6Ah]']
mov ['[edx+6Ah],', 'cl']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '6Ch']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['??4?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1424']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '10h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_14B6']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_155A']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jbe ['short', 'loc_152D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '10h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1557']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

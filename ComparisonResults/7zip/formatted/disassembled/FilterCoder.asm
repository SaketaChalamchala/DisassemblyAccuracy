?SetInBufSize@CFilterCoder@@UAGJII@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+2Ch],', 'ecx']
xor ['eax,', 'eax']
pop ['ebp']
retn ['0Ch']
endp
?SetOutBufSize@CFilterCoder@@UAGJII@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+30h],', 'ecx']
xor ['eax,', 'eax']
pop ['ebp']
retn ['0Ch']
endp
?Alloc@CFilterCoder@@AAEJXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+50h]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
call ['??$MyMin@I@@YGIII@Z']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', '1000h']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '0FFFFF000h']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '1000h']
jnb ['short', 'loc_97']
mov ['[ebp+var_8],', '1000h']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+44h],', '0']
jz ['short', 'loc_AB']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+48h]']
cmp ['ecx,', '[ebp+var_8]']
jz ['short', 'loc_D5']
push ['0Fh']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
call ['?AllocAlignedMask@CAlignedMidBuffer@@QAEXII@Z']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+44h],', '0']
jnz ['short', 'loc_CC']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_D7']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+48h],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init_and_Alloc@CFilterCoder@@AAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '94h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ecx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_145']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_14D']
mov ['ecx,', '[ebp+var_4]']
call ['?Alloc@CFilterCoder@@AAEJXZ']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFilterCoder@@QAE@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CFilterCoder@@QAE@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0ICompressSetOutStreamSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0ICompressInitEncoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0ICompressSetInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0ICompressSetOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0IOutStreamFinish@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0ICompressSetBufSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0ICryptoSetPassword@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0ICryptoProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0ICompressSetCoderProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0ICompressWriteCoderProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??0ICryptoResetInitVector@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0ICompressSetDecoderProperties2@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??0CAlignedMidBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CFilterCoder@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CFilterCoder@@6BICompressSetOutStreamSize@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CFilterCoder@@6BICompressInitEncoder@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CFilterCoder@@6BICompressSetInStream@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CFilterCoder@@6BISequentialInStream@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+14h],', 'offset', '??_7CFilterCoder@@6BICompressSetOutStream@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '??_7CFilterCoder@@6BISequentialOutStream@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+1Ch],', 'offset', '??_7CFilterCoder@@6BIOutStreamFinish@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+20h],', 'offset', '??_7CFilterCoder@@6BICompressSetBufSize@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+24h],', 'offset', '??_7CFilterCoder@@6BICryptoSetPassword@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+28h],', 'offset', '??_7CFilterCoder@@6BICryptoProperties@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+2Ch],', 'offset', '??_7CFilterCoder@@6BICompressSetCoderProperties@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+30h],', 'offset', '??_7CFilterCoder@@6BICompressWriteCoderProperties@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+34h],', 'offset', '??_7CFilterCoder@@6BICryptoResetInitVector@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+38h],', 'offset', '??_7CFilterCoder@@6BICompressSetDecoderProperties2@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+48h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4Ch],', '100000h']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+50h],', '100000h']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', '[ebp+arg_0]']
mov ['[eax+54h],', 'cl']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+55h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+58h],', '0']
mov ['dword', 'ptr', '[eax+5Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+60h],', '0']
mov ['dword', 'ptr', '[ecx+64h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??0?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '80h']
call ['??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '84h']
call ['??0?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '88h']
call ['??0?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8Ch']
call ['??0?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '90h']
call ['??0?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '94h']
call ['??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CFilterCoder@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CFilterCoder@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CFilterCoder@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CFilterCoder@@6BICompressSetOutStreamSize@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CFilterCoder@@6BICompressInitEncoder@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CFilterCoder@@6BICompressSetInStream@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CFilterCoder@@6BISequentialInStream@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+14h],', 'offset', '??_7CFilterCoder@@6BICompressSetOutStream@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '??_7CFilterCoder@@6BISequentialOutStream@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+1Ch],', 'offset', '??_7CFilterCoder@@6BIOutStreamFinish@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+20h],', 'offset', '??_7CFilterCoder@@6BICompressSetBufSize@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+24h],', 'offset', '??_7CFilterCoder@@6BICryptoSetPassword@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+28h],', 'offset', '??_7CFilterCoder@@6BICryptoProperties@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+2Ch],', 'offset', '??_7CFilterCoder@@6BICompressSetCoderProperties@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+30h],', 'offset', '??_7CFilterCoder@@6BICompressWriteCoderProperties@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+34h],', 'offset', '??_7CFilterCoder@@6BICryptoResetInitVector@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+38h],', 'offset', '??_7CFilterCoder@@6BICompressSetDecoderProperties2@@@']
mov ['[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '94h']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '90h']
call ['??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8Ch']
call ['??1?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '88h']
call ['??1?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '84h']
call ['??1?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '80h']
call ['??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1CAlignedMidBuffer@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Code@CFilterCoder@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '60h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '18h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '[ebp+this]']
call ['?Init_and_Alloc@CFilterCoder@@AAEJXZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_5B0']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_843']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_15],', '0']
mov ['[ebp+var_1C],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_5F4']
mov ['eax,', '[ebp+arg_10]']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+4]']
ja ['loc_841']
jb ['short', 'loc_5F4']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax]']
jnb ['loc_841']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'edx']
movzx ['eax,', '[ebp+var_15]']
test ['eax,', 'eax']
jnz ['short', 'loc_650']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+48h]']
sub ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_28],', 'edx']
lea ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+44h]']
add ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_636']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_843']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_20]']
xor ['ecx,', 'ecx']
cmp ['eax,', '[edx+48h]']
setnz ['cl']
mov ['[ebp+var_15],', 'cl']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '94h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_50],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+44h]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_20]']
jbe ['loc_724']
movzx ['ecx,', '[ebp+var_15]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6A5']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[edx+48h]']
jbe ['short', 'loc_6AF']
mov ['eax,', '80004005h']
jmp ['loc_843']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+54h]']
test ['edx,', 'edx']
jnz ['short', 'loc_6C4']
mov ['eax,', '1']
jmp ['loc_843']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+44h]']
mov ['edx,', '[ebp+var_20]']
mov ['byte', 'ptr', '[ecx+edx],', '0']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_1C]']
jnz ['short', 'loc_6C4']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '94h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_54],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+44h]']
push ['ecx']
mov ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_1C],', 'eax']
jz ['short', 'loc_724']
mov ['eax,', '80004005h']
jmp ['loc_843']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_731']
xor ['eax,', 'eax']
jmp ['loc_843']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_73F']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_58],', 'eax']
jmp ['short', 'loc_745']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[ebp+var_58]']
mov ['[ebp+var_34],', 'edx']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_788']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+4]']
sbb ['edx,', '[ebp+var_C]']
mov ['[ebp+var_3C],', 'ecx']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_34]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_60],', 'eax']
mov ['[ebp+var_5C],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
cmp ['edx,', '[ebp+var_38]']
jb ['short', 'loc_788']
ja ['short', 'loc_782']
mov ['eax,', '[ebp+var_60]']
cmp ['eax,', '[ebp+var_3C]']
jbe ['short', 'loc_788']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+44h]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_7AD']
mov ['eax,', '[ebp+var_40]']
jmp ['loc_843']
mov ['eax,', '[ebp+var_34]']
xor ['ecx,', 'ecx']
add ['eax,', '[ebp+var_10]']
adc ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_7C8']
xor ['eax,', 'eax']
jmp ['short', 'loc_843']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_7FB']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_10]']
push ['edx']
lea ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_7FB']
mov ['eax,', '[ebp+var_44]']
jmp ['short', 'loc_843']
mov ['[ebp+var_48],', '0']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_20]']
jnb ['short', 'loc_836']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+44h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+44h]']
mov ['edx,', '[ebp+var_48]']
mov ['esi,', '[ebp+var_1C]']
mov ['cl,', '[ecx+esi]']
mov ['[eax+edx],', 'cl']
mov ['edx,', '[ebp+var_48]']
add ['edx,', '1']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_802']
mov ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['loc_5C9']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN33']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?SetOutStream@CFilterCoder@@UAGJPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?ReleaseOutStream@CFilterCoder@@UAGJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?Flush2@CFilterCoder@@AAEJXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+78h],', '0']
jz ['loc_A1A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+78h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+55h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_968']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+58h]']
sub ['ecx,', '[eax+60h]']
mov ['edx,', '[edx+5Ch]']
sbb ['edx,', '[eax+64h]']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
cmp ['edx,', '[ebp+var_C]']
jb ['short', 'loc_958']
ja ['short', 'loc_952']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+var_10]']
jbe ['short', 'loc_958']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_968']
mov ['eax,', '20000010h']
jmp ['loc_A81']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_38],', 'eax']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+44h]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+74h]']
push ['edx']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_9CF']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_9C0']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_3C],', 'edx']
jmp ['short', 'loc_9C7']
mov ['[ebp+var_3C],', '80004005h']
mov ['eax,', '[ebp+var_3C]']
jmp ['loc_A81']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+74h]']
add ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+74h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+78h]']
sub ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+78h],', 'ecx']
mov ['eax,', '[ebp+var_18]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+60h]']
adc ['ecx,', '[edx+64h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+60h],', 'eax']
mov ['[edx+64h],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_A15']
mov ['eax,', '[ebp+var_24]']
jmp ['short', 'loc_A81']
jmp ['loc_8FC']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+74h],', '0']
jz ['short', 'loc_A7F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+70h]']
sub ['ecx,', '[eax+74h]']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_A44']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_28]']
jnb ['short', 'loc_A6C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+74h]']
add ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+44h]']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+44h]']
mov ['esi,', '[ebp+var_2C]']
mov ['cl,', '[edx+ecx]']
mov ['[eax+esi],', 'cl']
jmp ['short', 'loc_A3B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_28]']
mov ['[edx+70h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+74h],', '0']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Write@CFilterCoder@@UAGJPBXIPAI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_AFB']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['loc_C14']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '18h']
call ['?Flush2@CFilterCoder@@AAEJXZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_B21']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_C16']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+58h]']
cmp ['eax,', '[edx+30h]']
jz ['short', 'loc_BAC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+30h]']
sub ['eax,', '[edx+58h]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$MyMin@I@@YGIII@Z']
mov ['[ebp+Size],', 'eax']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+2Ch]']
mov ['eax,', '[ebp+this]']
add ['edx,', '[eax+58h]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+Size]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+Src]']
add ['edx,', '[ebp+Size]']
mov ['[ebp+Src],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_B8A']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+Size]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+58h]']
add ['ecx,', '[ebp+Size]']
mov ['edx,', '[ebp+this]']
mov ['[edx+58h],', 'ecx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+58h]']
cmp ['edx,', '[ecx+30h]']
jz ['short', 'loc_BAC']
jmp ['loc_AFB']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '7Ch']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+58h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+this]']
mov ['[edx+60h],', 'eax']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+60h],', '0']
jnz ['short', 'loc_BF0']
jmp ['short', 'loc_C14']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+60h]']
cmp ['eax,', '[edx+58h]']
jbe ['short', 'loc_C0F']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+60h],', '0']
mov ['eax,', '80004005h']
jmp ['short', 'loc_C16']
jmp ['loc_AFB']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?OutStreamFinish@CFilterCoder@@UAGJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '1Ch']
call ['?Flush2@CFilterCoder@@AAEJXZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_C73']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_E1C']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+54h],', '0']
jnz ['short', 'loc_C81']
jmp ['loc_DAB']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '78h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+54h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+5Ch],', 'eax']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+5Ch],', '0']
jnz ['short', 'loc_CD4']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+54h]']
mov ['[eax+5Ch],', 'edx']
jmp ['loc_DA6']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+5Ch]']
cmp ['edx,', '[ecx+54h]']
jbe ['loc_DA6']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+5Ch]']
cmp ['edx,', '[ecx+2Ch]']
jbe ['short', 'loc_D08']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+5Ch],', '0']
mov ['eax,', '80004005h']
jmp ['loc_E1C']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+38h]']
test ['edx,', 'edx']
jnz ['short', 'loc_D27']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+5Ch],', '0']
mov ['eax,', '1']
jmp ['loc_E1C']
jmp ['short', 'loc_D38']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+54h]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+54h],', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+54h]']
cmp ['eax,', '[edx+5Ch]']
jnb ['short', 'loc_D58']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+28h]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+54h]']
mov ['byte', 'ptr', '[edx+ecx],', '0']
jmp ['short', 'loc_D29']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '78h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+54h]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+5Ch],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+5Ch]']
cmp ['ecx,', '[eax+54h]']
jz ['short', 'loc_DA6']
mov ['eax,', '80004005h']
jmp ['short', 'loc_E1C']
jmp ['loc_C57']
lea ['ecx,', '[ebp+var_C]']
call ['??0?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ']
lea ['ecx,', '[ebp+var_C]']
call ['??I?$CMyComPtr@UIOutStreamFinish@@@@QAEPAPAUIOutStreamFinish@@XZ']
push ['eax']
push ['offset', '_IID_IOutStreamFinish']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '50h']
call ['??$QueryInterface@UIOutStreamFinish@@@?$CMyComPtr@UISequentialOutStream@@@@QBEJABU_GUID@@PAPAUIOutStreamFinish@@@Z']
lea ['ecx,', '[ebp+var_C]']
call ['??B?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_E0A']
lea ['ecx,', '[ebp+var_C]']
call ['??C?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ']
mov ['[ebp+var_24],', 'eax']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
lea ['ecx,', '[ebp+var_C]']
call ['??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_E1C']
mov ['[ebp+var_18],', '0']
lea ['ecx,', '[ebp+var_C]']
call ['??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?InitEncoder@CFilterCoder@@UAGJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '8']
call ['?InitSpecVars@CFilterCoder@@AAEXXZ']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '8']
call ['?Init_and_Alloc@CFilterCoder@@AAEJXZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?Init_NoSubFilterInit@CFilterCoder@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?InitSpecVars@CFilterCoder@@AAEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?Alloc@CFilterCoder@@AAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetOutStreamSize@CFilterCoder@@UAGJPB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '4']
call ['?InitSpecVars@CFilterCoder@@AAEXXZ']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_EEC']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[eax+54h],', 'edx']
mov ['ecx,', '[ecx+4]']
mov ['[eax+58h],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+51h],', '1']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '4']
call ['?Init_and_Alloc@CFilterCoder@@AAEJXZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?SetInStream@CFilterCoder@@UAGJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '5Ch']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?ReleaseInStream@CFilterCoder@@UAGJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '5Ch']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?Read@CFilterCoder@@UAGJPAXIPAI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '38h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_F76']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+Size],', '0']
jz ['loc_1231']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+68h],', '0']
jz ['loc_104C']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+Size]']
cmp ['eax,', '[edx+68h]']
jbe ['short', 'loc_FA1']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+68h]']
mov ['[ebp+Size],', 'edx']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+45h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FE7']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+48h]']
sub ['ecx,', '[eax+50h]']
mov ['edx,', '[edx+4Ch]']
sbb ['edx,', '[eax+54h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+Size]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_4]']
jb ['short', 'loc_FE7']
ja ['short', 'loc_FE1']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_8]']
jbe ['short', 'loc_FE7']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ebp+this]']
add ['ecx,', '[edx+64h]']
push ['ecx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+64h]']
add ['edx,', '[ebp+Size]']
mov ['eax,', '[ebp+this]']
mov ['[eax+64h],', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+68h]']
sub ['edx,', '[ebp+Size]']
mov ['eax,', '[ebp+this]']
mov ['[eax+68h],', 'edx']
mov ['ecx,', '[ebp+Size]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+50h]']
adc ['edx,', '[eax+54h]']
mov ['eax,', '[ebp+this]']
mov ['[eax+50h],', 'ecx']
mov ['[eax+54h],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1047']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+Size]']
mov ['[ecx],', 'edx']
jmp ['loc_1231']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_10B1']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+60h]']
sub ['eax,', '[edx+64h]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1076']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_C]']
jnb ['short', 'loc_109E']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+64h]']
add ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+34h]']
mov ['edx,', '[ebp+this]']
mov ['edx,', '[edx+34h]']
mov ['esi,', '[ebp+var_10]']
mov ['al,', '[ecx+eax]']
mov ['[edx+esi],', 'al']
jmp ['short', 'loc_106D']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+60h],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+64h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+38h]']
sub ['eax,', '[edx+60h]']
mov ['[ebp+var_18],', 'eax']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+34h]']
mov ['ecx,', '[ebp+this]']
add ['eax,', '[ecx+60h]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
call ['?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+60h]']
add ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+60h],', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_1108']
mov ['eax,', '[ebp+var_24]']
jmp ['loc_1233']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '84h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_30],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+60h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+34h]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+this]']
mov ['[edx+68h],', 'eax']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+68h],', '0']
jnz ['short', 'loc_116C']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+60h],', '0']
jnz ['short', 'loc_115B']
jmp ['loc_1231']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+60h]']
mov ['[edx+68h],', 'ecx']
jmp ['loc_F76']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+68h]']
cmp ['ecx,', '[eax+60h]']
jbe ['loc_122C']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+68h]']
cmp ['ecx,', '[eax+38h]']
jbe ['short', 'loc_1196']
mov ['eax,', '80004005h']
jmp ['loc_1233']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+44h]']
test ['eax,', 'eax']
jnz ['short', 'loc_11AB']
mov ['eax,', '1']
jmp ['loc_1233']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+60h]']
mov ['byte', 'ptr', '[edx+ecx],', '0']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+60h]']
add ['eax,', '1']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_34]']
mov ['[ecx+60h],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[eax+68h]']
jnz ['short', 'loc_11AB']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '84h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_38],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+68h]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+34h]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+68h],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+68h]']
cmp ['ecx,', '[eax+60h]']
jz ['short', 'loc_122C']
mov ['eax,', '80004005h']
jmp ['short', 'loc_1233']
jmp ['loc_F76']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?CryptoSetPassword@CFilterCoder@@UAGJPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['??C?$CMyComPtr@UICryptoSetPassword@@@@QBEPAUICryptoSetPassword@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SetKey@CFilterCoder@@UAGJPBEI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SetInitVector@CFilterCoder@@UAGJPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SetCoderProperties@CFilterCoder@@UAGJPBKPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['??C?$CMyComPtr@UICompressSetCoderProperties@@@@QBEPAUICompressSetCoderProperties@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?WriteCoderProperties@CFilterCoder@@UAGJPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['??C?$CMyComPtr@UICompressWriteCoderProperties@@@@QBEPAUICompressWriteCoderProperties@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ResetInitVector@CFilterCoder@@UAGJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['??C?$CMyComPtr@UICryptoResetInitVector@@@@QBEPAUICryptoResetInitVector@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ecx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetDecoderProperties2@CFilterCoder@@UAGJPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '58h']
call ['??C?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBEPAUICompressSetDecoderProperties2@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AllocAlignedMask@CAlignedMidBuffer@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_MidFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_MidAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_1505']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_4]']
not ['edx']
and ['ecx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1CAlignedMidBuffer@@QAE@XZ']
endp
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '68h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '6Ch']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ']
endp
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '80h']
jmp ['??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ']
endp
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '84h']
jmp ['??1?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ']
endp
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '88h']
jmp ['??1?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ']
endp
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8Ch']
jmp ['??1?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ']
endp
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '90h']
jmp ['??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ']
endp
__ehhandler$??0CFilterCoder@@QAE@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CFilterCoder@@QAE@_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1CFilterCoder@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1CAlignedMidBuffer@@QAE@XZ']
endp
__unwindfunclet$??1CFilterCoder@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '68h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CFilterCoder@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '6Ch']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CFilterCoder@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ']
endp
__unwindfunclet$??1CFilterCoder@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '80h']
jmp ['??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ']
endp
__unwindfunclet$??1CFilterCoder@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '84h']
jmp ['??1?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ']
endp
__unwindfunclet$??1CFilterCoder@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '88h']
jmp ['??1?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ']
endp
__unwindfunclet$??1CFilterCoder@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8Ch']
jmp ['??1?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ']
endp
__unwindfunclet$??1CFilterCoder@@QAE@XZ$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '90h']
jmp ['??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ']
endp
__ehhandler$??1CFilterCoder@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CFilterCoder@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CAlignedMidBuffer@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CAlignedMidBuffer@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_MidFree@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '68h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_68]']
mov ['ecx,', '1Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_24C3']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_2A3D']
push ['offset', '_IID_ICompressCoder']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_24E2']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_2A3D']
push ['offset', '_IID_ICompressSetOutStreamSize']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2519']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2505']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_250C']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax],', 'ecx']
jmp ['loc_2A3D']
push ['offset', '_IID_ICompressInitEncoder']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2550']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_253C']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_2543']
mov ['[ebp+var_20],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx],', 'edx']
jmp ['loc_2A3D']
push ['offset', '_IID_ICompressSetInStream']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2587']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2573']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_257A']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_24]']
mov ['[edx],', 'eax']
jmp ['loc_2A3D']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_25BE']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_25AA']
mov ['edx,', '[ebp+this]']
add ['edx,', '10h']
mov ['[ebp+var_28],', 'edx']
jmp ['short', 'loc_25B1']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_28]']
mov ['[eax],', 'ecx']
jmp ['loc_2A3D']
push ['offset', '_IID_ICompressSetOutStream']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_25F5']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_25E1']
mov ['eax,', '[ebp+this]']
add ['eax,', '14h']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_25E8']
mov ['[ebp+var_2C],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_2C]']
mov ['[ecx],', 'edx']
jmp ['loc_2A3D']
push ['offset', '_IID_ISequentialOutStream']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_262C']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2618']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
mov ['[ebp+var_30],', 'ecx']
jmp ['short', 'loc_261F']
mov ['[ebp+var_30],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_30]']
mov ['[edx],', 'eax']
jmp ['loc_2A3D']
push ['offset', '_IID_IOutStreamFinish']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2663']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_264F']
mov ['edx,', '[ebp+this]']
add ['edx,', '1Ch']
mov ['[ebp+var_34],', 'edx']
jmp ['short', 'loc_2656']
mov ['[ebp+var_34],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_34]']
mov ['[eax],', 'ecx']
jmp ['loc_2A3D']
push ['offset', '_IID_ICompressSetBufSize']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_269A']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2686']
mov ['eax,', '[ebp+this]']
add ['eax,', '20h']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_268D']
mov ['[ebp+var_38],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_38]']
mov ['[ecx],', 'edx']
jmp ['loc_2A3D']
push ['offset', '_IID_ICryptoSetPassword']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['loc_2730']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '7Ch']
call ['??7?$CMyComPtr@UICryptoSetPassword@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_270B']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '94h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '7Ch']
call ['??I?$CMyComPtr@UICryptoSetPassword@@@@QAEPAPAUICryptoSetPassword@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ICryptoSetPassword']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_270B']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_2A4E']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_271C']
mov ['eax,', '[ebp+this]']
add ['eax,', '24h']
mov ['[ebp+var_40],', 'eax']
jmp ['short', 'loc_2723']
mov ['[ebp+var_40],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_40]']
mov ['[ecx],', 'edx']
jmp ['loc_2A3D']
push ['offset', '_IID_ICryptoProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['loc_27CC']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '80h']
call ['??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_27A7']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '94h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '80h']
call ['??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ICryptoProperties']
mov ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_27A7']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_2A4E']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_27B8']
mov ['eax,', '[ebp+this]']
add ['eax,', '28h']
mov ['[ebp+var_48],', 'eax']
jmp ['short', 'loc_27BF']
mov ['[ebp+var_48],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_48]']
mov ['[ecx],', 'edx']
jmp ['loc_2A3D']
push ['offset', '_IID_ICompressSetCoderProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['loc_2868']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '84h']
call ['??7?$CMyComPtr@UICompressSetCoderProperties@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2843']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '94h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '84h']
call ['??I?$CMyComPtr@UICompressSetCoderProperties@@@@QAEPAPAUICompressSetCoderProperties@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ICompressSetCoderProperties']
mov ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2843']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_2A4E']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2854']
mov ['eax,', '[ebp+this]']
add ['eax,', '2Ch']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_285B']
mov ['[ebp+var_50],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_50]']
mov ['[ecx],', 'edx']
jmp ['loc_2A3D']
push ['offset', '_IID_ICompressWriteCoderProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['loc_2904']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '88h']
call ['??7?$CMyComPtr@UICompressWriteCoderProperties@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_28DF']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '94h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '88h']
call ['??I?$CMyComPtr@UICompressWriteCoderProperties@@@@QAEPAPAUICompressWriteCoderProperties@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ICompressWriteCoderProperties']
mov ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_28DF']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_2A4E']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_28F0']
mov ['eax,', '[ebp+this]']
add ['eax,', '30h']
mov ['[ebp+var_58],', 'eax']
jmp ['short', 'loc_28F7']
mov ['[ebp+var_58],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_58]']
mov ['[ecx],', 'edx']
jmp ['loc_2A3D']
push ['offset', '_IID_ICryptoResetInitVector']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['loc_29A0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8Ch']
call ['??7?$CMyComPtr@UICryptoResetInitVector@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_297B']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '94h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8Ch']
call ['??I?$CMyComPtr@UICryptoResetInitVector@@@@QAEPAPAUICryptoResetInitVector@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ICryptoResetInitVector']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_297B']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_2A4E']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_298C']
mov ['eax,', '[ebp+this]']
add ['eax,', '34h']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_2993']
mov ['[ebp+var_60],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_60]']
mov ['[ecx],', 'edx']
jmp ['loc_2A3D']
push ['offset', '_IID_ICompressSetDecoderProperties2']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['loc_2A36']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '90h']
call ['??7?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2A14']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '94h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '90h']
call ['??I?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAEPAPAUICompressSetDecoderProperties2@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_IID_ICompressSetDecoderProperties2']
mov ['edx,', '[ebp+var_64]']
push ['edx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_2A14']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_2A4E']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2A25']
mov ['eax,', '[ebp+this]']
add ['eax,', '38h']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_2A2C']
mov ['[ebp+var_68],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_68]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_2A3D']
mov ['eax,', '80004002h']
jmp ['short', 'loc_2A4E']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+3Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+3Ch],', 'ecx']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
add ['esp,', '68h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CFilterCoder@@UAGKXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+3Ch]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+3Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CFilterCoder@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+3Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+3Ch],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2B0A']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+3Ch]']
jmp ['short', 'loc_2B34']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2B2B']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCFilterCoder@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_2B32']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCFilterCoder@@QAEPAXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFilterCoder@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2B6E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetOutStreamSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetOutStreamSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressInitEncoder@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressInitEncoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IOutStreamFinish@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutStreamFinish@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetBufSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetBufSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICryptoSetPassword@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICryptoSetPassword@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICryptoProperties@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICryptoProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetCoderProperties@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetCoderProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressWriteCoderProperties@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressWriteCoderProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICryptoResetInitVector@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICryptoResetInitVector@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetDecoderProperties2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetDecoderProperties2@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InitSpecVars@CFilterCoder@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+70h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+74h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+78h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+55h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+58h],', '0']
mov ['dword', 'ptr', '[ecx+5Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+60h],', '0']
mov ['dword', 'ptr', '[edx+64h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3182']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_31CF']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3224']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_3247']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_32B6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3303']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3358']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_337B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_33EA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICryptoSetPassword@@@@QAEPAPAUICryptoSetPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICryptoSetPassword@@@@QBEPAUICryptoSetPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UICryptoSetPassword@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_349E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3552']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressSetCoderProperties@@@@QAEPAPAUICompressSetCoderProperties@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressSetCoderProperties@@@@QBEPAUICompressSetCoderProperties@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UICompressSetCoderProperties@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3606']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressWriteCoderProperties@@@@QAEPAPAUICompressWriteCoderProperties@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressWriteCoderProperties@@@@QBEPAUICompressWriteCoderProperties@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UICompressWriteCoderProperties@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_36BA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICryptoResetInitVector@@@@QAEPAPAUICryptoResetInitVector@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICryptoResetInitVector@@@@QBEPAUICryptoResetInitVector@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UICryptoResetInitVector@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_376E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAEPAPAUICompressSetDecoderProperties2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBEPAUICompressSetDecoderProperties2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3822']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_389E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIOutStreamFinish@@@@QAEPAPAUIOutStreamFinish@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$MyMin@I@@YGIII@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_3913']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_3919']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$QueryInterface@UIOutStreamFinish@@@?$CMyComPtr@UISequentialOutStream@@@@QBEJABU_GUID@@PAPAUIOutStreamFinish@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?QueryInterface@CFilterCoder@@WDA@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '30h']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CFilterCoder@@WCA@AGKXZ proc near 
sub ['[esp+arg_0],', '20h']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WBI@AGKXZ proc near 
sub ['[esp+arg_0],', '18h']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WDI@AGKXZ proc near 
sub ['[esp+arg_0],', '38h']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?QueryInterface@CFilterCoder@@WBE@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '14h']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CFilterCoder@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?QueryInterface@CFilterCoder@@WDE@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '34h']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CFilterCoder@@WCE@AGKXZ proc near 
sub ['[esp+arg_0],', '24h']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WBM@AGKXZ proc near 
sub ['[esp+arg_0],', '1Ch']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?QueryInterface@CFilterCoder@@WBI@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '18h']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CFilterCoder@@W7AGKXZ proc near 
sub ['[esp+arg_0],', '8']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?QueryInterface@CFilterCoder@@WDI@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '38h']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CFilterCoder@@WCI@AGKXZ proc near 
sub ['[esp+arg_0],', '28h']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WCA@AGKXZ proc near 
sub ['[esp+arg_0],', '20h']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?QueryInterface@CFilterCoder@@WBM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '1Ch']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CFilterCoder@@WM@AGKXZ proc near 
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?Release@CFilterCoder@@WCM@AGKXZ proc near 
sub ['[esp+arg_0],', '2Ch']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WCE@AGKXZ proc near 
sub ['[esp+arg_0],', '24h']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?QueryInterface@CFilterCoder@@WCA@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '20h']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CFilterCoder@@WBA@AGKXZ proc near 
sub ['[esp+arg_0],', '10h']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@W7AGKXZ proc near 
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?Release@CFilterCoder@@WDA@AGKXZ proc near 
sub ['[esp+arg_0],', '30h']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WCI@AGKXZ proc near 
sub ['[esp+arg_0],', '28h']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?QueryInterface@CFilterCoder@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CFilterCoder@@WCE@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '24h']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CFilterCoder@@WBE@AGKXZ proc near 
sub ['[esp+arg_0],', '14h']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WM@AGKXZ proc near 
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?Release@CFilterCoder@@WDE@AGKXZ proc near 
sub ['[esp+arg_0],', '34h']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WCM@AGKXZ proc near 
sub ['[esp+arg_0],', '2Ch']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?QueryInterface@CFilterCoder@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CFilterCoder@@WCI@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '28h']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CFilterCoder@@WBI@AGKXZ proc near 
sub ['[esp+arg_0],', '18h']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WBA@AGKXZ proc near 
sub ['[esp+arg_0],', '10h']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?Release@CFilterCoder@@WDI@AGKXZ proc near 
sub ['[esp+arg_0],', '38h']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WDA@AGKXZ proc near 
sub ['[esp+arg_0],', '30h']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?QueryInterface@CFilterCoder@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CFilterCoder@@WCM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '2Ch']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CFilterCoder@@WBM@AGKXZ proc near 
sub ['[esp+arg_0],', '1Ch']
jmp ['?Release@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WBE@AGKXZ proc near 
sub ['[esp+arg_0],', '14h']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?AddRef@CFilterCoder@@WDE@AGKXZ proc near 
sub ['[esp+arg_0],', '34h']
jmp ['?AddRef@CFilterCoder@@UAGKXZ']
endp
?QueryInterface@CFilterCoder@@WBA@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '10h']
jmp ['?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z']
endp

?Find_FileName_InSortedVector@@YGHABV?$CObjectVector@VUString@@@@ABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_8]']
jz ['short', 'loc_110']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
shr ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_F7']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_113']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_105']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_10E']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_B0']
or ['eax,', '0FFFFFFFFh']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '294h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2A0]']
mov ['ecx,', '0A5h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['ecx,', '[ebp+arg_2C]']
call ['?Clear@CDecompressStat@@QAEXXZ']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+24h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_19C']
mov ['[ebp+var_298],', '1']
jmp ['short', 'loc_1AA']
mov ['ecx,', '[ebp+arg_C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
mov ['[ebp+var_298],', 'eax']
mov ['edx,', '[ebp+var_298]']
mov ['[ebp+var_2C],', 'edx']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_1C5']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
cmp ['ecx,', '[ebp+var_2C]']
jnb ['loc_295']
lea ['ecx,', '[ebp+var_6C]']
call ['??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_6C],', '0']
mov ['[ebp+var_68],', '0']
mov ['edx,', '[ebp+arg_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+24h]']
test ['eax,', 'eax']
jnz ['short', 'loc_262']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_238']
mov ['[ebp+var_25C],', 'offset', '$SG73937']
push ['offset', '__TI2PAD']
lea ['eax,', '[ebp+var_25C]']
push ['eax']
call ['__CxxThrowException@8']
lea ['ecx,', '[ebp+var_6C]']
call ['?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_262']
mov ['[ebp+var_260],', 'offset', '$SG73940']
push ['offset', '__TI2PAD']
lea ['edx,', '[ebp+var_260]']
push ['edx']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ebp+var_6C]']
mov ['eax,', '[ebp+var_10]']
adc ['eax,', '[ebp+var_68]']
mov ['[ebp+var_14],', 'edx']
mov ['[ebp+var_10],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_6C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
jmp ['loc_1BC']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
lea ['ecx,', '[ebp+var_7C]']
call ['??0?$CObjArray@_N@@QAE@I@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_2B7']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_2D0']
lea ['ecx,', '[ebp+var_7C]']
call ['??B?$CObjArray@_N@@QAEPA_NXZ']
mov ['ecx,', '[ebp+var_30]']
mov ['byte', 'ptr', '[eax+ecx],', '0']
jmp ['short', 'loc_2AE']
push ['1B8h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_268],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_268],', '0']
jz ['short', 'loc_303']
mov ['ecx,', '[ebp+var_268]']
call ['??0CArchiveExtractCallback@@QAE@XZ']
mov ['[ebp+var_29C],', 'eax']
jmp ['short', 'loc_30D']
mov ['[ebp+var_29C],', '0']
mov ['edx,', '[ebp+var_29C]']
mov ['[ebp+var_264],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_264]']
mov ['[ebp+var_84],', 'eax']
mov ['ecx,', '[ebp+var_84]']
push ['ecx']
lea ['ecx,', '[ebp+var_8C]']
call ['??0?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@PAUIArchiveExtractCallback@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['edx,', '1']
cmp ['edx,', '[ebp+var_2C]']
sbb ['eax,', 'eax']
neg ['eax']
mov ['[ebp+var_91],', 'al']
mov ['ecx,', '[ebp+arg_18]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
movzx ['edx,', '[ebp+var_91]']
push ['edx']
mov ['ecx,', '[ebp+var_84]']
call ['?InitForMulti@CArchiveExtractCallback@@QAEX_NW4EEnum@NPathMode@NExtract@@W42NOverwriteMode@4@@Z']
mov ['eax,', '[ebp+arg_24]']
push ['eax']
mov ['ecx,', '[ebp+var_84]']
call ['?SetHashMethods@CArchiveExtractCallback@@QAEXPAUIHashCalc@@@Z']
movzx ['ecx,', '[ebp+var_91]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3FB']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_20]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_98],', 'eax']
cmp ['[ebp+var_98],', '0']
jz ['short', 'loc_3FB']
mov ['edx,', '[ebp+var_98]']
mov ['[ebp+var_26C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_8C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CObjArray@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_26C]']
jmp ['loc_EE4']
mov ['[ebp+var_A4],', '0']
mov ['[ebp+var_A0],', '0']
mov ['[ebp+var_A9],', '0']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_428']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
cmp ['ecx,', '[ebp+var_2C]']
jnb ['loc_CFF']
lea ['ecx,', '[ebp+var_7C]']
call ['??B?$CObjArray@_N@@QAEPA_NXZ']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[eax+edx]']
test ['eax,', 'eax']
jz ['short', 'loc_449']
jmp ['short', 'loc_41F']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['[ebp+var_B0],', 'eax']
lea ['ecx,', '[ebp+var_EC]']
call ['??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['edx,', '[ebp+arg_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+24h]']
test ['eax,', 'eax']
jz ['short', 'loc_495']
mov ['[ebp+var_EC],', '0']
mov ['[ebp+var_E8],', '0']
mov ['[ebp+var_CC],', '0']
jmp ['short', 'loc_4E0']
mov ['ecx,', '[ebp+var_B0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
lea ['ecx,', '[ebp+var_EC]']
call ['?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4C5']
lea ['ecx,', '[ebp+var_EC]']
call ['?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4E0']
mov ['[ebp+var_270],', 'offset', '$SG74025']
push ['offset', '__TI2PAD']
lea ['eax,', '[ebp+var_270]']
push ['eax']
call ['__CxxThrowException@8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_18]']
movzx ['edx,', 'byte', 'ptr', '[ecx+27h]']
push ['edx']
mov ['ecx,', '[ebp+var_B0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+arg_20]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_20]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
cmp ['[ebp+var_F4],', '0']
jz ['short', 'loc_569']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_274],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_EC]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_8C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CObjArray@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_274]']
jmp ['loc_EE4']
lea ['ecx,', '[ebp+var_158]']
call ['??0CArchiveLink@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['ecx,', '[ebp+var_16C]']
call ['??0?$CObjectVector@UCOpenType@@@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_1CC]']
call ['??0COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['eax,', '[ebp+arg_18]']
add ['eax,', '28h']
mov ['[ebp+var_18C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1CC],', 'ecx']
lea ['edx,', '[ebp+var_16C]']
mov ['[ebp+var_1A4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_1A0],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
mov ['dl,', '[ecx+24h]']
mov ['[ebp+var_188],', 'dl']
mov ['[ebp+var_19C],', '0']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
lea ['ecx,', '[ebp+var_184]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
lea ['edx,', '[ebp+var_1CC]']
push ['edx']
lea ['ecx,', '[ebp+var_158]']
call ['?Open3@CArchiveLink@@QAEJAAUCOpenOptions@@PAUIOpenCallbackUI@@@Z']
mov ['[ebp+var_1D4],', 'eax']
cmp ['[ebp+var_1D4],', '80004004h']
jnz ['short', 'loc_691']
mov ['eax,', '[ebp+var_1D4]']
mov ['[ebp+var_278],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_16C]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_158]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_EC]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_8C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CObjArray@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_278]']
jmp ['loc_EE4']
cmp ['[ebp+var_1D4],', '0']
jnz ['short', 'loc_6AD']
cmp ['[ebp+var_11C],', '0']
jl ['short', 'loc_6AD']
mov ['[ebp+var_1D4],', '1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_1D4]']
push ['ecx']
mov ['ecx,', '[ebp+var_B0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
lea ['edx,', '[ebp+var_158]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_20]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1D8],', 'eax']
cmp ['[ebp+var_1D8],', '0']
jz ['short', 'loc_76D']
mov ['ecx,', '[ebp+var_1D8]']
mov ['[ebp+var_27C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_16C]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_158]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_EC]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_8C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CObjArray@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_27C]']
jmp ['loc_EE4']
cmp ['[ebp+var_1D4],', '0']
jz ['loc_83F']
mov ['[ebp+var_A9],', '1']
mov ['edx,', '[ebp+arg_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+24h]']
test ['eax,', 'eax']
jnz ['short', 'loc_7FE']
lea ['ecx,', '[ebp+var_214]']
call ['??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['ecx,', '[ebp+var_B0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
lea ['ecx,', '[ebp+var_214]']
call ['?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_7EF']
lea ['ecx,', '[ebp+var_214]']
call ['?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_7EF']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '[ebp+var_214]']
mov ['ecx,', '[ebp+var_A0]']
adc ['ecx,', '[ebp+var_210]']
mov ['[ebp+var_A4],', 'eax']
mov ['[ebp+var_A0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_214]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_16C]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_158]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_EC]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
jmp ['loc_41F']
mov ['edx,', '[ebp+arg_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+24h]']
test ['eax,', 'eax']
jnz ['loc_A35']
lea ['ecx,', '[ebp+var_14C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
test ['eax,', 'eax']
jz ['loc_A35']
mov ['ecx,', '[ebp+var_140]']
mov ['[ebp+var_220],', 'ecx']
mov ['edx,', '[ebp+var_13C]']
mov ['[ebp+var_21C],', 'edx']
mov ['[ebp+var_224],', '0']
jmp ['short', 'loc_894']
mov ['eax,', '[ebp+var_224]']
add ['eax,', '1']
mov ['[ebp+var_224],', 'eax']
lea ['ecx,', '[ebp+var_14C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_224],', 'eax']
jnb ['short', 'loc_920']
mov ['ecx,', '[ebp+var_224]']
push ['ecx']
lea ['ecx,', '[ebp+var_14C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
push ['eax']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
call ['?Find_FileName_InSortedVector@@YGHABV?$CObjectVector@VUString@@@@ABVUString@@@Z']
mov ['[ebp+var_228],', 'eax']
cmp ['[ebp+var_228],', '0']
jl ['short', 'loc_91B']
mov ['eax,', '[ebp+var_228]']
cmp ['eax,', '[ebp+var_30]']
jbe ['short', 'loc_91B']
lea ['ecx,', '[ebp+var_7C]']
call ['??B?$CObjArray@_N@@QAEPA_NXZ']
mov ['ecx,', '[ebp+var_228]']
mov ['byte', 'ptr', '[eax+ecx],', '1']
mov ['edx,', '[ebp+var_228]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['ecx,', '[ebp+var_220]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_21C]']
sbb ['edx,', '[eax+4]']
mov ['[ebp+var_220],', 'ecx']
mov ['[ebp+var_21C],', 'edx']
jmp ['loc_885']
mov ['eax,', '[ebp+var_220]']
or ['eax,', '[ebp+var_21C]']
jz ['loc_A35']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[ebp+var_220]']
mov ['edx,', '[ebp+var_10]']
adc ['edx,', '[ebp+var_21C]']
mov ['[ebp+var_230],', 'ecx']
mov ['[ebp+var_22C],', 'edx']
cmp ['[ebp+var_22C],', '0']
jg ['short', 'loc_978']
jl ['short', 'loc_964']
cmp ['[ebp+var_230],', '0']
jnb ['short', 'loc_978']
mov ['[ebp+var_230],', '0']
mov ['[ebp+var_22C],', '0']
mov ['eax,', '[ebp+var_230]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_22C]']
mov ['[ebp+var_10],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_20]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_234],', 'eax']
cmp ['[ebp+var_234],', '0']
jz ['short', 'loc_A35']
mov ['edx,', '[ebp+var_234]']
mov ['[ebp+var_280],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_16C]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_158]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_EC]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_8C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CObjArray@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_280]']
jmp ['loc_EE4']
lea ['ecx,', '[ebp+var_158]']
call ['?Back@?$CObjectVector@VCArc@@@@QAEAAVCArc@@XZ']
mov ['[ebp+var_238],', 'eax']
mov ['eax,', '[ebp+arg_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+24h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A68']
movzx ['edx,', '[ebp+var_C7]']
test ['edx,', 'edx']
jnz ['short', 'loc_A68']
mov ['[ebp+var_2A0],', '1']
jmp ['short', 'loc_A72']
mov ['[ebp+var_2A0],', '0']
mov ['eax,', '[ebp+var_238]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_2A0]']
mov ['[eax+0A4h],', 'cl']
mov ['edx,', '[ebp+var_238]']
mov ['eax,', '[ebp+var_D4]']
mov ['[edx+9Ch],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['[edx+0A0h],', 'ecx']
xor ['edx,', 'edx']
cmp ['[ebp+arg_24],', '0']
setnz ['dl']
mov ['[ebp+var_249],', 'dl']
lea ['eax,', '[ebp+var_244]']
push ['eax']
mov ['ecx,', '[ebp+arg_28]']
push ['ecx']
mov ['edx,', '[ebp+var_84]']
push ['edx']
mov ['eax,', '[ebp+arg_20]']
push ['eax']
movzx ['ecx,', '[ebp+var_249]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_EC]']
add ['ecx,', '[ebp+var_140]']
mov ['edx,', '[ebp+var_E8]']
adc ['edx,', '[ebp+var_13C]']
push ['edx']
push ['ecx']
lea ['eax,', '[ebp+var_158]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z']
mov ['[ebp+var_250],', 'eax']
cmp ['[ebp+var_250],', '0']
jz ['short', 'loc_B8D']
mov ['edx,', '[ebp+var_250]']
mov ['[ebp+var_284],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_16C]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_158]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_EC]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_8C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CObjArray@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_284]']
jmp ['loc_EE4']
mov ['eax,', '[ebp+arg_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+24h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_BBC']
mov ['edx,', '[ebp+var_EC]']
add ['edx,', '[ebp+var_140]']
mov ['eax,', '[ebp+var_E8]']
adc ['eax,', '[ebp+var_13C]']
mov ['dword', 'ptr', '[ebp+var_244],', 'edx']
mov ['dword', 'ptr', '[ebp+var_244+4],', 'eax']
mov ['ecx,', '[ebp+var_A4]']
add ['ecx,', 'dword', 'ptr', '[ebp+var_244]']
mov ['edx,', '[ebp+var_A0]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_244+4]']
mov ['[ebp+var_A4],', 'ecx']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[eax+160h]']
mov ['edx,', '[ecx+20h]']
add ['edx,', 'dword', 'ptr', '[ebp+var_244]']
mov ['eax,', '[ecx+24h]']
adc ['eax,', 'dword', 'ptr', '[ebp+var_244+4]']
mov ['ecx,', '[ebp+var_84]']
mov ['ecx,', '[ecx+160h]']
mov ['[ecx+20h],', 'edx']
mov ['[ecx+24h],', 'eax']
mov ['edx,', '[ebp+var_84]']
mov ['eax,', '[edx+160h]']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[ecx+180h]']
mov ['[eax+28h],', 'edx']
mov ['ecx,', '[ecx+184h]']
mov ['[eax+2Ch],', 'ecx']
mov ['ecx,', '[ebp+arg_28]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_CBE']
mov ['[ebp+var_288],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_16C]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_158]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_EC]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_8C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CObjArray@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_288]']
jmp ['loc_EE4']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_16C]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_158]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_EC]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
jmp ['loc_41F']
movzx ['eax,', '[ebp+var_91]']
test ['eax,', 'eax']
jnz ['short', 'loc_D19']
movzx ['ecx,', '[ebp+var_A9]']
test ['ecx,', 'ecx']
jz ['loc_DF6']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_20]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_254],', 'eax']
cmp ['[ebp+var_254],', '0']
jz ['short', 'loc_D88']
mov ['edx,', '[ebp+var_254]']
mov ['[ebp+var_28C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_8C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CObjArray@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_28C]']
jmp ['loc_EE4']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_A4]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_20]']
push ['eax']
mov ['ecx,', '[edx+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_258],', 'eax']
cmp ['[ebp+var_258],', '0']
jz ['short', 'loc_DF6']
mov ['edx,', '[ebp+var_258]']
mov ['[ebp+var_290],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_8C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CObjArray@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_290]']
jmp ['loc_EE4']
mov ['eax,', '[ebp+arg_2C]']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[ecx+168h]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ecx+16Ch]']
mov ['[eax+24h],', 'ecx']
mov ['edx,', '[ebp+arg_2C]']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[eax+170h]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[eax+174h]']
mov ['[edx+2Ch],', 'eax']
mov ['ecx,', '[ebp+arg_2C]']
mov ['edx,', '[ebp+var_84]']
mov ['eax,', '[edx+178h]']
mov ['[ecx+30h],', 'eax']
mov ['edx,', '[edx+17Ch]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_2C]']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[ecx+180h]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ecx+184h]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_2C]']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[eax+188h]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[eax+18Ch]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_2C]']
mov ['[edx],', 'eax']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[eax+160h]']
mov ['edx,', '[ebp+arg_2C]']
mov ['eax,', '[ecx+20h]']
mov ['[edx+18h],', 'eax']
mov ['ecx,', '[ecx+24h]']
mov ['[edx+1Ch],', 'ecx']
mov ['[ebp+var_294],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_8C]']
call ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$CObjArray@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_294]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN77']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '2A0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['30h']
endp
?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '174h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_180]']
mov ['ecx,', '5Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Back@?$CObjectVector@VCArc@@@@QBEABVCArc@@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_28]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ']
mov ['[ebp+var_14],', 'eax']
lea ['ecx,', '[ebp+var_24]']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '0Ch']
push ['ecx']
lea ['ecx,', '[ebp+var_4C]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '88h']
push ['edx']
lea ['ecx,', '[ebp+var_60]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@VCArc@@@@QBEIXZ']
cmp ['eax,', '1']
jbe ['short', 'loc_1106']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z']
mov ['[ebp+var_68],', 'eax']
push ['offset', '$SG73813']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax+94h]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
call ['??A?$CObjectVector@UCArcInfoEx@@@@QAEAAUCArcInfoEx@@I@Z']
add ['eax,', '0Ch']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1106']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '88h']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
push ['offset', '$SG73816']
lea ['ecx,', '[ebp+var_158]']
call ['??0UString@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
lea ['edx,', '[ebp+var_14C]']
push ['edx']
call ['?Get_Correct_FsFile_Name@@YG?AVUString@@ABV1@@Z']
mov ['[ebp+var_178],', 'eax']
mov ['eax,', '[ebp+var_178]']
mov ['[ebp+var_17C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_17C]']
push ['ecx']
lea ['edx,', '[ebp+var_158]']
push ['edx']
lea ['ecx,', '[ebp+var_4C]']
call ['?Replace@UString@@QAEXABV1@0@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_14C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_158]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_69],', '0']
lea ['ecx,', '[ebp+var_7C]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+arg_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['loc_1238']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax+4],', '3']
jz ['loc_1238']
lea ['ecx,', '[ebp+var_A4]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
lea ['edx,', '[ebp+var_A4]']
push ['edx']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
call ['?SplitPathToParts_Smart@@YGXABVUString@@AAV1@1@Z']
lea ['ecx,', '[ebp+var_7C]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1229']
lea ['ecx,', '[ebp+var_7C]']
call ['?Back@UString@@QBE_WXZ']
movzx ['edx,', 'ax']
push ['edx']
call ['?IsPathSepar@@YG_N_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1204']
lea ['ecx,', '[ebp+var_7C]']
call ['?DeleteBack@UString@@QAEXXZ']
lea ['ecx,', '[ebp+var_7C]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1229']
lea ['edx,', '[ebp+var_A4]']
push ['edx']
lea ['ecx,', '[ebp+var_90]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['[ebp+var_69],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_A4]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+arg_10]']
call ['?AreAllAllowed@CCensorNode@NWildcard@@QBE_NXZ']
mov ['[ebp+var_A9],', 'al']
mov ['eax,', '[ebp+arg_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+24h]']
test ['ecx,', 'ecx']
jnz ['loc_1643']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_B4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ecx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jz ['short', 'loc_12E7']
mov ['ecx,', '[ebp+var_BC]']
mov ['[ebp+var_15C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_90]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_7C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_60]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_4C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['eax,', '[ebp+var_15C]']
jmp ['loc_19C3']
lea ['ecx,', '[ebp+var_100]']
call ['??0CReadArcItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['[ebp+var_108],', '0']
jmp ['short', 'loc_1311']
mov ['edx,', '[ebp+var_108]']
add ['edx,', '1']
mov ['[ebp+var_108],', 'edx']
mov ['eax,', '[ebp+var_108]']
cmp ['eax,', '[ebp+var_B4]']
jnb ['loc_1588']
movzx ['ecx,', '[ebp+var_69]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_133A']
movzx ['edx,', '[ebp+var_A9]']
test ['edx,', 'edx']
jnz ['loc_13D8']
lea ['eax,', '[ebp+var_100]']
push ['eax']
mov ['ecx,', '[ebp+var_108]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?GetItem@CArc@@QBEJIAAUCReadArcItem@@@Z']
mov ['[ebp+var_10C],', 'eax']
cmp ['[ebp+var_10C],', '0']
jz ['short', 'loc_13D3']
mov ['edx,', '[ebp+var_10C]']
mov ['[ebp+var_160],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_100]']
call ['??1CReadArcItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_90]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_7C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_60]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_4C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['eax,', '[ebp+var_160]']
jmp ['loc_19C3']
jmp ['loc_149F']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+arg_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Eh]']
test ['ecx,', 'ecx']
jnz ['loc_149F']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+0DCh]']
test ['eax,', 'eax']
jz ['loc_149F']
lea ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['edx,', '[ebp+var_108]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ']
push ['eax']
call ['?Archive_IsItem_AltStream@@YGJPAUIInArchive@@IAA_N@Z']
mov ['[ebp+var_110],', 'eax']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_149F']
mov ['eax,', '[ebp+var_110]']
mov ['[ebp+var_164],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_100]']
call ['??1CReadArcItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_90]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_7C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_60]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_4C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['eax,', '[ebp+var_164]']
jmp ['loc_19C3']
mov ['ecx,', '[ebp+arg_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Eh]']
test ['edx,', 'edx']
jnz ['short', 'loc_14BA']
movzx ['eax,', '[ebp+var_D0]']
test ['eax,', 'eax']
jz ['short', 'loc_14BA']
jmp ['loc_1302']
movzx ['ecx,', '[ebp+var_69]']
test ['ecx,', 'ecx']
jz ['loc_154D']
lea ['edx,', '[ebp+var_E8]']
mov ['[ebp+var_114],', 'edx']
lea ['ecx,', '[ebp+var_7C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_114]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?IsPath1PrefixedByPath2@@YG_NPB_W0@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_14F9']
mov ['[ebp+var_69],', '0']
jmp ['short', 'loc_154D']
mov ['ecx,', '[ebp+var_114]']
call ['??BUString@@QBEPB_WXZ']
mov ['esi,', 'eax']
lea ['ecx,', '[ebp+var_7C]']
call ['?Len@UString@@QBEIXZ']
mov ['cx,', '[esi+eax*2]']
mov ['[ebp+var_118],', 'cx']
movzx ['edx,', '[ebp+var_118]']
test ['edx,', 'edx']
jnz ['short', 'loc_1535']
movzx ['eax,', '[ebp+var_CD]']
test ['eax,', 'eax']
jnz ['short', 'loc_1533']
mov ['[ebp+var_69],', '0']
jmp ['short', 'loc_154D']
movzx ['ecx,', '[ebp+var_118]']
push ['ecx']
call ['?IsPathSepar@@YG_N_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_154D']
mov ['[ebp+var_69],', '0']
movzx ['eax,', '[ebp+var_A9]']
test ['eax,', 'eax']
jnz ['short', 'loc_1574']
lea ['ecx,', '[ebp+var_100]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
call ['?CensorNode_CheckPath@@YG_NABVCCensorNode@NWildcard@@ABUCReadArcItem@@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1574']
jmp ['loc_1302']
mov ['ecx,', '[ebp+var_108]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
jmp ['loc_1302']
lea ['ecx,', '[ebp+var_24]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
test ['eax,', 'eax']
jnz ['loc_1634']
mov ['edx,', '[ebp+arg_1C]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_1C]']
mov ['edx,', '[eax+2Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_1C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_168],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_100]']
call ['??1CReadArcItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_90]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_7C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_60]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_4C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['eax,', '[ebp+var_168]']
jmp ['loc_19C3']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_100]']
call ['??1CReadArcItem@@QAE@XZ']
movzx ['ecx,', '[ebp+var_69]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1657']
lea ['edx,', '[ebp+var_7C]']
push ['edx']
lea ['ecx,', '[ebp+var_38]']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
lea ['ecx,', '[ebp+var_4C]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1678']
push ['offset', '$SG73863']
lea ['ecx,', '[ebp+var_4C]']
call ['??4UString@@QAEAAV0@PB_W@Z']
jmp ['loc_1737']
lea ['ecx,', '[ebp+var_4C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_1737']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11C],', 'eax']
cmp ['[ebp+var_11C],', '0']
jnz ['short', 'loc_16B9']
mov ['[ebp+var_11C],', '80004005h']
push ['offset', '$SG73870']
mov ['ecx,', '[ebp+arg_24]']
call ['?SetFromAscii@UString@@QAEXPBD@Z']
lea ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['ecx,', '[ebp+arg_24]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_11C]']
mov ['[ebp+var_16C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_90]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_7C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_60]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_4C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['eax,', '[ebp+var_16C]']
jmp ['loc_19C3']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['0']
lea ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+27h]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+25h]']
push ['edx']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+24h]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '18h']
push ['ecx']
mov ['ecx,', '[ebp+arg_20]']
call ['?Init@CArchiveExtractCallback@@QAEXABUCExtractNtOptions@@PBVCCensorNode@NWildcard@@PBVCArc@@PAUIFolderArchiveExtractCallback@@_N4ABVUString@@ABV?$CObjectVector@VUString@@@@4_K@Z']
mov ['edx,', '[ebp+arg_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+24h]']
test ['eax,', 'eax']
jnz ['loc_182C']
mov ['ecx,', '[ebp+arg_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+27h]']
test ['edx,', 'edx']
jnz ['loc_182C']
mov ['eax,', '[ebp+arg_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Ch]']
test ['ecx,', 'ecx']
jz ['loc_182C']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', '[ebp+arg_20]']
call ['?PrepareHardLinks@CArchiveExtractCallback@@QAEJPBV?$CRecordVector@I@@@Z']
mov ['[ebp+var_120],', 'eax']
cmp ['[ebp+var_120],', '0']
jz ['short', 'loc_182C']
mov ['eax,', '[ebp+var_120]']
mov ['[ebp+var_170],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_90]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_7C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_60]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_4C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['eax,', '[ebp+var_170]']
jmp ['loc_19C3']
mov ['ecx,', '[ebp+arg_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+27h]']
test ['edx,', 'edx']
jz ['short', 'loc_184B']
movzx ['eax,', '[ebp+arg_18]']
test ['eax,', 'eax']
jnz ['short', 'loc_184B']
mov ['[ebp+var_180],', '1']
jmp ['short', 'loc_1855']
mov ['[ebp+var_180],', '0']
mov ['ecx,', '[ebp+var_180]']
mov ['[ebp+var_128],', 'ecx']
mov ['edx,', '[ebp+arg_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+24h]']
test ['eax,', 'eax']
jz ['loc_18F0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_20]']
push ['ecx']
mov ['edx,', '[ebp+var_128]']
push ['edx']
push ['0FFFFFFFFh']
push ['0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ecx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_124],', 'eax']
lea ['ecx,', '[ebp+var_13C]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_13C]']
push ['ecx']
push ['2Ch']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[eax+20h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_18DF']
mov ['eax,', '[ebp+arg_28]']
push ['eax']
lea ['ecx,', '[ebp+var_13C]']
push ['ecx']
call ['?ConvertPropVariantToUInt64@@YG_NABUtagPROPVARIANT@@AA_K@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_13C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
jmp ['short', 'loc_192A']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_20]']
push ['edx']
mov ['eax,', '[ebp+var_128]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['?Front@?$CRecordVector@I@@QAEAAIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[edx+1Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '0']
jnz ['short', 'loc_194C']
mov ['edx,', '[ebp+arg_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+24h]']
test ['eax,', 'eax']
jnz ['short', 'loc_194C']
mov ['ecx,', '[ebp+arg_20]']
call ['?SetDirsTimes@CArchiveExtractCallback@@QAEJXZ']
mov ['[ebp+var_124],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_124]']
push ['ecx']
mov ['edx,', '[ebp+arg_1C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['edx,', '[eax+30h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_174],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_90]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_7C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_60]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_4C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['eax,', '[ebp+var_174]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN67_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '180h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['2Ch']
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__unwindfunclet$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z$1 proc near
lea ['ecx,', '[ebp-6Ch]']
jmp ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z$2 proc near
lea ['ecx,', '[ebp-7Ch]']
jmp ['??1?$CObjArray@_N@@QAE@XZ']
endp
__unwindfunclet$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z$3 proc near
mov ['eax,', '[ebp-268h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z$4 proc near
lea ['ecx,', '[ebp-8Ch]']
jmp ['??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z$5 proc near
lea ['ecx,', '[ebp-0ECh]']
jmp ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z$6 proc near
lea ['ecx,', '[ebp-158h]']
jmp ['??1CArchiveLink@@QAE@XZ']
endp
__unwindfunclet$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z$7 proc near
lea ['ecx,', '[ebp-16Ch]']
jmp ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z$8 proc near
lea ['ecx,', '[ebp-1CCh]']
jmp ['??1COpenOptions@@QAE@XZ']
endp
__unwindfunclet$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z$9 proc near
lea ['ecx,', '[ebp-214h]']
jmp ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
endp
__ehhandler$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-2A0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__unwindfunclet$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z$1 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z$2 proc near
lea ['ecx,', '[ebp-4Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z$3 proc near
lea ['ecx,', '[ebp-60h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z$4 proc near
lea ['ecx,', '[ebp-158h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z$5 proc near
lea ['ecx,', '[ebp-14Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z$6 proc near
lea ['ecx,', '[ebp-7Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z$7 proc near
lea ['ecx,', '[ebp-90h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z$8 proc near
lea ['ecx,', '[ebp-0A4h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z$9 proc near
lea ['ecx,', '[ebp-100h]']
jmp ['??1CReadArcItem@@QAE@XZ']
endp
__unwindfunclet$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z$10 proc near
lea ['ecx,', '[ebp-13Ch]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__ehhandler$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-180h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?DecompressArchive@@YGJPAVCCodecs@@ABUCArchiveLink@@_KABVCCensorNode@NWildcard@@ABUCExtractOptions@@_NPAUIExtractCallbackUI@@PAVCArchiveExtractCallback@@AAVUString@@AA_K@Z']
jmp ['___CxxFrameHandler3']
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['10h']
mov ['ecx,', '[ebp+var_4]']
call ['?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+20h]']
and ['eax,', '[ebp+arg_0]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COpenOptions@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0COpenType@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+2Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+34h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+38h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+44h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COpenType@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ah']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Dh']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+10h],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+11h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+12h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+13h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+15h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+4],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+5],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+6],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+7],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0Eh],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0Fh],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0Dh],', '1']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COpenSpecFlags@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CArchiveLink@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CArchiveLink@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CObjectVector@VCArc@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+20h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+21h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0CArcErrorInfo@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CArchiveLink@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@VCArc@@@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveLink@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveLink@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CArchiveLink@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CArchiveLink@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CArcErrorInfo@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CArcErrorInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+2],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+3],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CArcErrorInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CArcErrorInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CArcErrorInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CArchiveLink@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArchiveLink@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
call ['?Release@CArchiveLink@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1CArcErrorInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@VCArc@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArchiveLink@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@VCArc@@@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveLink@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveLink@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveLink@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1CArcErrorInfo@@QAE@XZ']
endp
__ehhandler$??1CArchiveLink@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArchiveLink@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CArcErrorInfo@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArcErrorInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArcErrorInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CArcErrorInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArcErrorInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?InitForMulti@CArchiveExtractCallback@@QAEX_NW4EEnum@NPathMode@NExtract@@W42NOverwriteMode@4@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[ebp+arg_0]']
mov ['[eax+126h],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+54h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+58h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+188h],', '0']
mov ['dword', 'ptr', '[eax+18Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+180h],', '0']
mov ['dword', 'ptr', '[ecx+184h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+178h],', '0']
mov ['dword', 'ptr', '[edx+17Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+170h],', '0']
mov ['dword', 'ptr', '[eax+174h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+168h],', '0']
mov ['dword', 'ptr', '[ecx+16Ch],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SetHashMethods@CArchiveExtractCallback@@QAEXPAUIHashCalc@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetHashMethods@CArchiveExtractCallback@@QAEXPAUIHashCalc@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_24FD']
jmp ['short', 'loc_256B']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_2524']
mov ['ecx,', '[ebp+var_18]']
call ['??0COutStreamWithHash@@QAE@XZ']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_252B']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+104h],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+104h]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '108h']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+104h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+1Ch],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?SetHashMethods@CArchiveExtractCallback@@QAEXPAUIHashCalc@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?SetHashMethods@CArchiveExtractCallback@@QAEXPAUIHashCalc@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetHashMethods@CArchiveExtractCallback@@QAEXPAUIHashCalc@@@Z']
jmp ['___CxxFrameHandler3']
endp
??0COutStreamWithHash@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COutStreamWithHash@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@COutStreamWithHash@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_287C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_2883']
mov ['eax,', '80004002h']
jmp ['short', 'loc_2894']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@COutStreamWithHash@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@COutStreamWithHash@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_294A']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_2974']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_296B']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCOutStreamWithHash@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_2972']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCOutStreamWithHash@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutStreamWithHash@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_29AE']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1COutStreamWithHash@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CDecompressStat@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
mov ['dword', 'ptr', '[ecx+2Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsPathSepar@@YG_N_W@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '5Ch']
jz ['short', 'loc_2A9A']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '2Fh']
jz ['short', 'loc_2A9A']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_2AA1']
mov ['[ebp+var_4],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Back@UString@@QBE_WXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ax,', '[eax+ecx*2-2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteBack@UString@@QAEXXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[edx+ecx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ConvertPropVariantToUInt64@@YG_NABUtagPROPVARIANT@@AA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '15h']
ja ['short', '$LN1']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'ds:$LN11[edx]']
jmp ['ds:$LN12[eax*4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[edx+0Ch]']
mov ['[ecx+4],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_2C1A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['[eax+4],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_2C1A']
mov ['ecx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[ecx+8]']
cdq
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['[ecx+4],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_2C1A']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
cdq
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['[ecx+4],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_2C1A']
xor ['al,', 'al']
jmp ['short', 'loc_2C1A']
mov ['[ebp+var_4],', '24E9Fh']
push ['offset', '__TI1H']
lea ['edx,', '[ebp+var_4]']
push ['edx']
call ['__CxxThrowException@8']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CReadArcItem@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CReadArcItem@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+31h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+38h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+3Ch],', '0FFFFFFFFh']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CReadArcItem@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CReadArcItem@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??0CReadArcItem@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CReadArcItem@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CReadArcItem@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CReadArcItem@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CReadArcItem@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CReadArcItem@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CReadArcItem@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??1CReadArcItem@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CReadArcItem@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CReadArcItem@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1COpenOptions@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@VUString@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_2FE4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_2FEB']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3106']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_30FD']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_3104']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_30C2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??A?$CObjectVector@UCArcInfoEx@@@@QAEAAUCArcInfoEx@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@_K@@QAEI_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??A?$CRecordVector@_K@@QAEAA_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@VCArc@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VCArc@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Back@?$CObjectVector@VCArc@@@@QBEABVCArc@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Back@?$CObjectVector@VCArc@@@@QAEAAVCArc@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@VCArc@@@@QAEAAVCArc@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@VCArc@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VCArc@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3422']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3419']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCArc@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_3420']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_33DE']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VCArc@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VCArc@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VCArc@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@I@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@I@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Front@?$CRecordVector@I@@QAEAAIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_35EA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3628']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_364B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjArray@_N@@QAE@I@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_36A5']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjArray@_N@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@_N@@QAEPA_NXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@PAUIArchiveExtractCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3740']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3786']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCOpenType@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$CObjectVector@UCOpenType@@@@QAE@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCOpenType@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_3811']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_386F']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_3850']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCOpenType@@@@QBEABUCOpenType@@I@Z']
mov ['ecx,', '8']
mov ['esi,', 'eax']
mov ['edi,', '[ebp+var_20]']
rep ['movsd']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_3857']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_3808']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$CObjectVector@UCOpenType@@@@QAE@ABV0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__unwindfunclet$??0?$CObjectVector@UCOpenType@@@@QAE@ABV0@@Z$1 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0?$CObjectVector@UCOpenType@@@@QAE@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$CObjectVector@UCOpenType@@@@QAE@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCOpenType@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3979']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
jmp ['short', 'loc_394B']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCOpenType@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCOpenType@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??_GUString@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3A1E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCArc@@QAEPAXI@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CArc@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3A5E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CArc@@QAE@XZ proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArc@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '88h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1CArcErrorInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1CArcErrorInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CMyComPtr@UIInArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArc@@QAE@XZ$0 proc near 
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UIInArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$1 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$2 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$3 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$4 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1CArcErrorInfo@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$5 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1CArcErrorInfo@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$6 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '70h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$7 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CArc@@QAE@XZ proc near   
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArc@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CMyComPtr@UIInArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3C4E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3C92']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3CD6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3D1A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3DC5']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_3F98']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_3F73']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VCArc@@@@QAEAAVCArc@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_4088']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_4063']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCOpenType@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCOpenType@@@@QBEABUCOpenType@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_419C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_4177']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

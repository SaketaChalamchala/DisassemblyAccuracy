?AutoRenamePath@@YG_NAAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AutoRenamePath@@YG_NAAVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '54h']
push ['edi']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?ReverseFind_Dot@UString@@QBEHXZ']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?ReverseFind_PathSepar@UString@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
cmp ['[ebp+var_10],', 'ecx']
jle ['short', 'loc_96']
mov ['edx,', '[ebp+var_10]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['?DeleteFrom@UString@@QAEXI@Z']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
call ['??4UString@@QAEAAV0@PB_W@Z']
push ['5Fh']
lea ['ecx,', '[ebp+var_24]']
call ['??YUString@@QAEAAV0@_W@Z']
lea ['ecx,', '[ebp+var_4C]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['[ebp+var_54],', '1']
mov ['[ebp+var_58],', '40000000h']
mov ['ecx,', '[ebp+var_54]']
cmp ['ecx,', '[ebp+var_58]']
jz ['short', 'loc_FC']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '[ebp+var_58]']
shr ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
lea ['edx,', '[ebp+var_38]']
push ['edx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
call ['?MakeAutoName@@YG_NABVUString@@0IAAV1@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_F4']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
jmp ['short', 'loc_FA']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_58],', 'eax']
jmp ['short', 'loc_BA']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_58]']
push ['edx']
lea ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['?MakeAutoName@@YG_NABVUString@@0IAAV1@@Z']
movzx ['edx,', 'al']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['[ebp+var_5D],', 'dl']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_4C]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1UString@@QAE@XZ']
mov ['al,', '[ebp+var_5D]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MakeAutoName@@YG_NABVUString@@0IAAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?AddAscii@UString@@QAEXPBD@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
__unwindfunclet$?AutoRenamePath@@YG_NAAVUString@@@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?AutoRenamePath@@YG_NAAVUString@@@Z$1 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?AutoRenamePath@@YG_NAAVUString@@@Z$2 proc near
lea ['ecx,', '[ebp-4Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?AutoRenamePath@@YG_NAAVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-5Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AutoRenamePath@@YG_NAAVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Ptr@UString@@QBEPB_WI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??YUString@@QAEAAV0@_W@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_378']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+eax*2],', 'dx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReverseFind_Dot@UString@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['2Eh']
mov ['ecx,', '[ebp+var_4]']
call ['?ReverseFind@UString@@QBEH_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteFrom@UString@@QAEXI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_420']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

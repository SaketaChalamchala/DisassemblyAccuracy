?IsEqualTo@CKeyInfo@N7z@NCrypto@@QBE_NABV123@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_31']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jz ['short', 'loc_35']
xor ['al,', 'al']
jmp ['short', 'loc_83']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_47']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+4]']
jnb ['short', 'loc_70']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_6E']
xor ['al,', 'al']
jmp ['short', 'loc_83']
jmp ['short', 'loc_3E']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '18h']
push ['edx']
call ['??$?8E@@YG_NABV?$CBuffer@E@@0@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0A8h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_B4]']
mov ['ecx,', '2Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '3Fh']
jnz ['loc_190']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_102']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[edx+4]']
jnb ['short', 'loc_121']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ebp+var_18]']
mov ['al,', '[edx+8]']
mov ['[ecx+20h],', 'al']
jmp ['short', 'loc_F9']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_133']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
cmp ['[ebp+var_1C],', 'eax']
jnb ['short', 'loc_16E']
cmp ['[ebp+var_18],', '20h']
jnb ['short', 'loc_16E']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_1C]']
mov ['al,', '[eax+ecx]']
mov ['[edx+20h],', 'al']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_12A']
jmp ['short', 'loc_179']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '20h']
jnb ['short', 'loc_18B']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax+20h],', '0']
jmp ['short', 'loc_170']
jmp ['loc_352']
mov ['ecx,', '[ebp+var_14]']
mov ['esi,', '[ecx+4]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
lea ['edx,', '[esi+eax+8]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??0?$CObjArray@E@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '8']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
mov ['ecx,', '[ebp+var_14]']
add ['eax,', '[ecx+4]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+var_98]']
push ['edx']
call ['_Sha256_Init@4']
lea ['ecx,', '[ebp+var_28]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['esi,', '[eax+4]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
add ['esi,', 'eax']
mov ['[ebp+var_A0],', 'esi']
mov ['[ebp+var_A4],', '0']
jmp ['short', 'loc_253']
mov ['ecx,', '[ebp+var_A4]']
add ['ecx,', '1']
mov ['[ebp+var_A4],', 'ecx']
cmp ['[ebp+var_A4],', '8']
jnb ['short', 'loc_26D']
mov ['edx,', '[ebp+var_A0]']
add ['edx,', '[ebp+var_A4]']
mov ['byte', 'ptr', '[edx],', '0']
jmp ['short', 'loc_244']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '[ecx]']
call ['__allshl']
mov ['[ebp+var_AC],', 'eax']
mov ['[ebp+var_A8],', 'edx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
push ['eax']
lea ['eax,', '[ebp+var_98]']
push ['eax']
call ['_Sha256_Update@12']
mov ['[ebp+var_B0],', '0']
jmp ['short', 'loc_2BE']
mov ['ecx,', '[ebp+var_B0]']
add ['ecx,', '1']
mov ['[ebp+var_B0],', 'ecx']
cmp ['[ebp+var_B0],', '8']
jnb ['short', 'loc_300']
mov ['edx,', '[ebp+var_A0]']
add ['edx,', '[ebp+var_B0]']
mov ['al,', '[edx]']
add ['al,', '1']
mov ['[ebp+var_B1],', 'al']
mov ['ecx,', '[ebp+var_A0]']
add ['ecx,', '[ebp+var_B0]']
mov ['dl,', '[ebp+var_B1]']
mov ['[ecx],', 'dl']
movzx ['eax,', '[ebp+var_B1]']
test ['eax,', 'eax']
jz ['short', 'loc_2FE']
jmp ['short', 'loc_300']
jmp ['short', 'loc_2AF']
mov ['ecx,', '[ebp+var_AC]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_A8]']
sbb ['edx,', '0']
mov ['[ebp+var_AC],', 'ecx']
mov ['[ebp+var_A8],', 'edx']
mov ['eax,', '[ebp+var_AC]']
or ['eax,', '[ebp+var_A8]']
jnz ['loc_28A']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
push ['ecx']
lea ['edx,', '[ebp+var_98]']
push ['edx']
call ['_Sha256_Final@8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CObjArray@E@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0B4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetKey@CKeyInfoCache@N7z@NCrypto@@QAE_NAAVCKeyInfo@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3EC']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Size@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_46B']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??A?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEAAVCKeyInfo@N7z@NCrypto@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEqualTo@CKeyInfo@N7z@NCrypto@@QBE_NABV123@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_466']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_433']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '20h']
jnb ['short', 'loc_44D']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_10]']
mov ['cl,', '[eax+20h]']
mov ['[edx+20h],', 'cl']
jmp ['short', 'loc_42A']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_462']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?MoveToFront@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXI@Z']
mov ['al,', '1']
jmp ['short', 'loc_46D']
jmp ['loc_3E3']
xor ['al,', 'al']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?FindAndAdd@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_4B0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Size@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_4FE']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??A?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEAAVCKeyInfo@N7z@NCrypto@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEqualTo@CKeyInfo@N7z@NCrypto@@QBE_NABV123@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4FC']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_4FA']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?MoveToFront@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXI@Z']
jmp ['short', 'loc_50A']
jmp ['short', 'loc_4A7']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Add@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Size@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QBEIXZ']
mov ['ecx,', '[ebp+var_4]']
cmp ['eax,', '[ecx]']
jb ['short', 'loc_54B']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?DeleteBack@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CBase@N7z@NCrypto@@IAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CBase@N7z@NCrypto@@IAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['10h']
mov ['ecx,', '[ebp+var_10]']
call ['??0CKeyInfoCache@N7z@NCrypto@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0CKeyInfo@N7z@NCrypto@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+60h],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_5DE']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '10h']
jnb ['short', 'loc_5F0']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[edx+50h],', '0']
jmp ['short', 'loc_5D5']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['offset', '_g_GlobalKeyCacheCriticalSection']
lea ['ecx,', '[ebp+var_18]']
call ['??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z']
mov ['[ebp+var_4],', '0']
mov ['byte', 'ptr', '[ebp+var_20+3],', '0']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?GetKey@CKeyInfoCache@N7z@NCrypto@@QAE_NAAVCKeyInfo@23@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6C0']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '10h']
push ['edx']
mov ['ecx,', 'offset', '_g_GlobalKeyCache']
call ['?GetKey@CKeyInfoCache@N7z@NCrypto@@QAE_NAAVCKeyInfo@23@@Z']
mov ['byte', 'ptr', '[ebp+var_20+3],', 'al']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_20+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_6B1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_20+3]']
test ['edx,', 'edx']
jnz ['short', 'loc_6D9']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', 'offset', '_g_GlobalKeyCache']
call ['?FindAndAdd@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ResetInitVector@CEncoder@N7z@NCrypto@@UAGJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_74D']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '10h']
jnb ['short', 'loc_75F']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx-1Ch],', '0']
jmp ['short', 'loc_744']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx-0Ch],', '8']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax-0Ch]']
push ['ecx']
mov ['edx,', '[ebp+this]']
sub ['edx,', '1Ch']
push ['edx']
mov ['ecx,', 'offset', '?g_RandomGenerator@@3VCRandomGenerator@@A']
call ['?Generate@CRandomGenerator@@QAEXPAEI@Z']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteCoderProperties@CEncoder@N7z@NCrypto@@UAGJPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_34],', '1']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax-54h]']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '80h']
mov ['edx,', '[ebp+this]']
or ['ecx,', '[edx-58h]']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax-8]']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '40h']
or ['ecx,', 'edx']
mov ['[ebp+var_2C],', 'cl']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax-54h],', '0']
jnz ['short', 'loc_805']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx-8],', '0']
jz ['loc_89D']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx-54h],', '0']
jnz ['short', 'loc_817']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_823']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax-54h]']
sub ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx-8],', '0']
jnz ['short', 'loc_835']
mov ['[ebp+var_3C],', '0']
jmp ['short', 'loc_841']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax-8]']
sub ['ecx,', '1']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_38]']
shl ['edx,', '4']
or ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_2B],', 'dl']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax-54h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
sub ['edx,', '50h']
push ['edx']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx-54h]']
add ['edx,', '2']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax-8]']
push ['ecx']
mov ['edx,', '[ebp+this]']
sub ['edx,', '18h']
push ['edx']
mov ['eax,', '[ebp+var_34]']
lea ['ecx,', '[ebp+eax+var_2C]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '[edx-8]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CEncoder@N7z@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CEncoder@N7z@NCrypto@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CBaseCoder@N7z@NCrypto@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '74h']
call ['??0ICompressWriteCoderProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??0ICryptoResetInitVector@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CEncoder@N7z@NCrypto@@6BICompressFilter@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CEncoder@N7z@NCrypto@@6BICryptoSetPassword@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+74h],', 'offset', '??_7CEncoder@N7z@NCrypto@@6BICompressWriteCoderProperties@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+78h],', 'offset', '??_7CEncoder@N7z@NCrypto@@6BICryptoResetInitVector@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+1Ch],', '13h']
push ['14Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_9B8']
push ['20h']
mov ['ecx,', '[ebp+var_18]']
call ['??0CAesCbcEncoder@NCrypto@@QAE@I@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_9BF']
mov ['[ebp+var_1C],', '0']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDecoder@N7z@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CDecoder@N7z@NCrypto@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CBaseCoder@N7z@NCrypto@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '74h']
call ['??0ICompressSetDecoderProperties2@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@N7z@NCrypto@@6BICompressFilter@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@N7z@NCrypto@@6BICryptoSetPassword@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+74h],', 'offset', '??_7CDecoder@N7z@NCrypto@@6B@']
push ['14Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A99']
push ['20h']
mov ['ecx,', '[ebp+var_18]']
call ['??0CAesCbcDecoder@NCrypto@@QAE@I@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_AA0']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetDecoderProperties2@CDecoder@N7z@NCrypto@@UAGJPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '58h']
call ['?ClearProps@CKeyInfo@N7z@NCrypto@@QAEXXZ']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax-8],', '0']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_B21']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '10h']
jnb ['short', 'loc_B33']
mov ['edx,', '[ebp+this]']
add ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx-18h],', '0']
jmp ['short', 'loc_B18']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_B40']
xor ['eax,', 'eax']
jmp ['loc_C70']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_8+3]']
and ['edx,', '3Fh']
mov ['eax,', '[ebp+this]']
mov ['[eax-58h],', 'edx']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
and ['ecx,', '0C0h']
jnz ['short', 'loc_B75']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '80070057h']
jmp ['loc_C70']
cmp ['[ebp+arg_8],', '1']
ja ['short', 'loc_B85']
mov ['eax,', '80070057h']
jmp ['loc_C70']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', '[edx+1]']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'al']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
sar ['ecx,', '7']
and ['ecx,', '1']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_8+2]']
sar ['edx,', '4']
add ['ecx,', 'edx']
mov ['[ebp+var_C],', 'ecx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
sar ['eax,', '6']
and ['eax,', '1']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+2]']
and ['ecx,', '0Fh']
add ['eax,', 'ecx']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+edx+2]']
cmp ['[ebp+arg_8],', 'ecx']
jz ['short', 'loc_BD3']
mov ['eax,', '80070057h']
jmp ['loc_C70']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx-54h],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '2']
mov ['[ebp+arg_4],', 'ecx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_BF7']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_C18']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', '[edx]']
mov ['[ecx-50h],', 'al']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
jmp ['short', 'loc_BEE']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_C2A']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_10]']
jnb ['short', 'loc_C4B']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', '[edx]']
mov ['[ecx-18h],', 'al']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
jmp ['short', 'loc_C21']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx-58h],', '18h']
jbe ['short', 'loc_C66']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax-58h],', '3Fh']
jz ['short', 'loc_C66']
mov ['[ebp+var_14],', '80004001h']
jmp ['short', 'loc_C6D']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '30h']
call ['?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z']
xor ['eax,', 'eax']
jmp ['short', 'loc_CF5']
endp
__catch$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z$0 proc near
mov ['dword', 'ptr', '[ebp-14h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7_0']
retn
endp
?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '60h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_70]']
mov ['ecx,', '18h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ']
mov ['[ebp+var_44],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_18]']
call ['??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
push ['eax']
push ['offset', '_IID_ICryptoProperties']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '70h']
call ['??$QueryInterface@UICryptoProperties@@@?$CMyComPtr@UICompressFilter@@@@QBEJABU_GUID@@PAPAUICryptoProperties@@@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_DBE']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2C]']
jmp ['loc_F08']
lea ['ecx,', '[ebp+var_18]']
call ['??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ']
mov ['[ebp+var_49],', 'al']
movzx ['edx,', '[ebp+var_49]']
test ['edx,', 'edx']
jz ['short', 'loc_DEC']
mov ['[ebp+var_30],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_F08']
lea ['ecx,', '[ebp+var_18]']
call ['??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_54],', 'eax']
mov ['esi,', 'esp']
push ['20h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '3Ch']
push ['ecx']
mov ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_58],', 'eax']
mov ['eax,', '[ebp+var_58]']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_E46']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_34],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ']
mov ['eax,', '[ebp+var_34]']
jmp ['loc_F08']
lea ['ecx,', '[ebp+var_18]']
call ['??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ']
mov ['[ebp+var_5C],', 'eax']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_60],', 'edx']
mov ['esi,', 'esp']
push ['10h']
mov ['eax,', '[ebp+this]']
add ['eax,', '5Ch']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+var_60]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_64],', 'eax']
mov ['edx,', '[ebp+var_64]']
mov ['[ebp+var_28],', 'edx']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_E9D']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_38],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ']
mov ['eax,', '[ebp+var_38]']
jmp ['short', 'loc_F08']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '70h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_68]']
mov ['[ebp+var_6C],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_6C]']
push ['edx']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_70],', 'eax']
mov ['eax,', '[ebp+var_70]']
mov ['[ebp+var_3C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ']
mov ['eax,', '[ebp+var_3C]']
jmp ['short', 'loc_F08']
endp
__catch$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ$0 proc near
mov ['dword', 'ptr', '[ebp-40h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN12']
retn
endp
?Filter@CBaseCoder@N7z@NCrypto@@UAGIPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '70h']
call ['??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ$0 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1?$CObjArray@E@@QAE@XZ']
endp
__ehhandler$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0B4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0CBase@N7z@NCrypto@@IAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ']
endp
__ehhandler$??0CBase@N7z@NCrypto@@IAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CBase@N7z@NCrypto@@IAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0CEncoder@N7z@NCrypto@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CBaseCoder@N7z@NCrypto@@QAE@XZ']
endp
__unwindfunclet$??0CEncoder@N7z@NCrypto@@QAE@XZ$1 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0CEncoder@N7z@NCrypto@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CEncoder@N7z@NCrypto@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0CDecoder@N7z@NCrypto@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CBaseCoder@N7z@NCrypto@@QAE@XZ']
endp
__unwindfunclet$??0CDecoder@N7z@NCrypto@@QAE@XZ$1 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0CDecoder@N7z@NCrypto@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CDecoder@N7z@NCrypto@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ$2 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ']
endp
__ehhandler$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-74h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ']
jmp ['___CxxFrameHandler3']
endp
??0CKeyInfo@N7z@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CKeyInfo@N7z@NCrypto@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?ClearProps@CKeyInfo@N7z@NCrypto@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CKeyInfo@N7z@NCrypto@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$??0CKeyInfo@N7z@NCrypto@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CKeyInfo@N7z@NCrypto@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?ClearProps@CKeyInfo@N7z@NCrypto@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1354']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '10h']
jnb ['short', 'loc_1366']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
jmp ['short', 'loc_134B']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CKeyInfoCache@N7z@NCrypto@@QAE@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx]']
call ['?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnterCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
call ['?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LeaveCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1A07']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_19F3']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_19FA']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['loc_1AAA']
push ['offset', '_IID_ICryptoSetPassword']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1A3B']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1A2A']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1A31']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_1AAA']
push ['offset', '_IID_ICompressWriteCoderProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1A6F']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1A5E']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '74h']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_1A65']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_1AAA']
push ['offset', '_IID_ICryptoResetInitVector']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1AA3']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1A92']
mov ['edx,', '[ebp+this]']
add ['edx,', '78h']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_1A99']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_1AAA']
mov ['eax,', '80004002h']
jmp ['short', 'loc_1ABB']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+8],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CEncoder@N7z@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1B76']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
jmp ['short', 'loc_1BA0']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1B97']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCEncoder@N7z@NCrypto@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_1B9E']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCEncoder@N7z@NCrypto@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CEncoder@N7z@NCrypto@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1BDA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CEncoder@N7z@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseCoder@N7z@NCrypto@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseCoder@N7z@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CBaseCoder@N7z@NCrypto@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1CBase@N7z@NCrypto@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CBaseCoder@N7z@NCrypto@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CBase@N7z@NCrypto@@QAE@XZ']
endp
__ehhandler$??1CBaseCoder@N7z@NCrypto@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CBaseCoder@N7z@NCrypto@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CBase@N7z@NCrypto@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CBase@N7z@NCrypto@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1CKeyInfo@N7z@NCrypto@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CBase@N7z@NCrypto@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ']
endp
__ehhandler$??1CBase@N7z@NCrypto@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CBase@N7z@NCrypto@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CKeyInfo@N7z@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??1?$CBuffer@E@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CAesCbcEncoder@NCrypto@@QAE@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??0CAesCbcCoder@NCrypto@@QAE@_NI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7CAesCbcEncoder@NCrypto@@6BICompressFilter@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', 'offset', '??_7CAesCbcEncoder@NCrypto@@6BICryptoProperties@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', 'offset', '??_7CAesCbcEncoder@NCrypto@@6BICompressSetCoderProperties@@@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_20F4']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_20E3']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_20EA']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_2163']
push ['offset', '_IID_ICryptoProperties']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2128']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2117']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_211E']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_2163']
push ['offset', '_IID_ICompressSetCoderProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_215C']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_214B']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_2152']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_2163']
mov ['eax,', '80004002h']
jmp ['short', 'loc_2174']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+0Ch],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CAesCbcCoder@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_21E7']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+0Ch]']
jmp ['short', 'loc_21FB']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CBaseCoder@N7z@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CBaseCoder@N7z@NCrypto@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressFilter@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0ICryptoSetPassword@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CBase@N7z@NCrypto@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CBaseCoder@N7z@NCrypto@@6BICompressFilter@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CBaseCoder@N7z@NCrypto@@6BICryptoSetPassword@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CBaseCoder@N7z@NCrypto@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CBase@N7z@NCrypto@@QAE@XZ']
endp
__ehhandler$??0CBaseCoder@N7z@NCrypto@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CBaseCoder@N7z@NCrypto@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressWriteCoderProperties@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressWriteCoderProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICryptoResetInitVector@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICryptoResetInitVector@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressFilter@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressFilter@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICryptoSetPassword@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICryptoSetPassword@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CDecoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_26C4']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_26B3']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_26BA']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_2733']
push ['offset', '_IID_ICryptoSetPassword']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_26F8']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_26E7']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_26EE']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_2733']
push ['offset', '_IID_ICompressSetDecoderProperties2']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_272C']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_271B']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '74h']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_2722']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_2733']
mov ['eax,', '80004002h']
jmp ['short', 'loc_2744']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+8],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CDecoder@N7z@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@N7z@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_27BA']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
jmp ['short', 'loc_27E4']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_27DB']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCDecoder@N7z@NCrypto@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_27E2']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCDecoder@N7z@NCrypto@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDecoder@N7z@NCrypto@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_281E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CDecoder@N7z@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseCoder@N7z@NCrypto@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CAesCbcDecoder@NCrypto@@QAE@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['??0CAesCbcCoder@NCrypto@@QAE@_NI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7CAesCbcDecoder@NCrypto@@6BICompressFilter@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', 'offset', '??_7CAesCbcDecoder@NCrypto@@6BICryptoProperties@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', 'offset', '??_7CAesCbcDecoder@NCrypto@@6BICompressSetCoderProperties@@@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ICompressSetDecoderProperties2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetDecoderProperties2@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QAEPAEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_2AC2']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Size@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEAAVCKeyInfo@N7z@NCrypto@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MoveToFront@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveToFront@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['40h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_2BDC']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CKeyInfo@N7z@NCrypto@@QAE@ABV012@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_2BE3']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2D02']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_2CF9']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCKeyInfo@N7z@NCrypto@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_2D00']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_2CBE']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?DeleteBack@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2DCA']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['??_GCKeyInfo@N7z@NCrypto@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_2DD1']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?DeleteBack@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2E3A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2E90']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_2EB3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjArray@E@@QAE@I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2F0D']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjArray@E@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@E@@QAEPAEXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2FC6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CKeyInfo@N7z@NCrypto@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??0?$CBuffer@E@@QAE@ABV0@@Z']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '20h']
mov ['edi,', '[ebp+var_4]']
add ['edi,', '20h']
mov ['ecx,', '8']
rep ['movsd']
mov ['eax,', '[ebp+var_4]']
pop ['edi']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCKeyInfo@N7z@NCrypto@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CKeyInfo@N7z@NCrypto@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_30D6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteBack@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@PAX@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?MoveToFront@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_324E']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CBuffer@E@@QAE@ABV0@@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_32F8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Alloc@?$CBuffer@E@@QAEXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_335C']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@?$CBuffer@E@@QAEXXZ']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_335C']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_3478']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_3453']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Free@?$CBuffer@E@@QAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_34C4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$?8E@@YG_NABV?$CBuffer@E@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
cmp ['[ebp+Size],', 'eax']
jz ['short', 'loc_3503']
xor ['al,', 'al']
jmp ['short', 'loc_3532']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_350D']
mov ['al,', '1']
jmp ['short', 'loc_3532']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$QueryInterface@UICryptoProperties@@@?$CMyComPtr@UICompressFilter@@@@QBEJABU_GUID@@PAPAUICryptoProperties@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??B?$CBuffer@E@@QBEPBEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@CDecoder@N7z@NCrypto@@WHE@AGKXZ proc near
sub ['[esp+arg_0],', '74h']
jmp ['?Release@CDecoder@N7z@NCrypto@@UAGKXZ']
endp
?QueryInterface@CDecoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CDecoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CAesCbcCoder@NCrypto@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?QueryInterface@CEncoder@N7z@NCrypto@@WHI@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '78h']
jmp ['?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CEncoder@N7z@NCrypto@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ']
endp
?Release@CAesCbcCoder@NCrypto@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?AddRef@CDecoder@N7z@NCrypto@@WHE@AGKXZ proc near
sub ['[esp+arg_0],', '74h']
jmp ['?AddRef@CDecoder@N7z@NCrypto@@UAGKXZ']
endp
?AddRef@CAesCbcCoder@NCrypto@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?QueryInterface@CEncoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@N7z@NCrypto@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CDecoder@N7z@NCrypto@@UAGKXZ']
endp
?AddRef@CAesCbcCoder@NCrypto@@W7AGKXZ proc near 
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?Release@CEncoder@N7z@NCrypto@@WHE@AGKXZ proc near
sub ['[esp+arg_0],', '74h']
jmp ['?Release@CEncoder@N7z@NCrypto@@UAGKXZ']
endp
?QueryInterface@CAesCbcCoder@NCrypto@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CEncoder@N7z@NCrypto@@WHI@AGKXZ proc near
sub ['[esp+arg_0],', '78h']
jmp ['?Release@CEncoder@N7z@NCrypto@@UAGKXZ']
endp
?QueryInterface@CDecoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '74h']
jmp ['?QueryInterface@CDecoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CAesCbcCoder@NCrypto@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CDecoder@N7z@NCrypto@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CDecoder@N7z@NCrypto@@UAGKXZ']
endp
?AddRef@CEncoder@N7z@NCrypto@@WHE@AGKXZ proc near
sub ['[esp+arg_0],', '74h']
jmp ['?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ']
endp
?AddRef@CEncoder@N7z@NCrypto@@WHI@AGKXZ proc near
sub ['[esp+arg_0],', '78h']
jmp ['?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ']
endp
?Release@CEncoder@N7z@NCrypto@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CEncoder@N7z@NCrypto@@UAGKXZ']
endp
?QueryInterface@CEncoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '74h']
jmp ['?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
??__Eg_GlobalKeyCache@N7z@NCrypto@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['20h']
mov ['ecx,', 'offset', '_g_GlobalKeyCache']
call ['??0CKeyInfoCache@N7z@NCrypto@@QAE@I@Z']
push ['offset', '??__Fg_GlobalKeyCache@N7z@NCrypto@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??__Eg_GlobalKeyCacheCriticalSection@N7z@NCrypto@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_GlobalKeyCacheCriticalSection']
call ['??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
push ['offset', '??__Fg_GlobalKeyCacheCriticalSection@N7z@NCrypto@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_CriticalSection_Init@4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Fg_GlobalKeyCache@N7z@NCrypto@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_GlobalKeyCache']
call ['??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??__Fg_GlobalKeyCacheCriticalSection@N7z@NCrypto@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_GlobalKeyCacheCriticalSection']
call ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__DeleteCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

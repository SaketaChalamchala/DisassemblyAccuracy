@CrcUpdate@12   proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
push ['offset', '_g_CrcTable']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
call ['dword', 'ptr', 'ds:_g_CrcUpdate']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
@CrcCalc@8      proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
push ['offset', '_g_CrcTable']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['edx,', '[ebp+var_4]']
or ['ecx,', '0FFFFFFFFh']
call ['dword', 'ptr', 'ds:_g_CrcUpdate']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', '0FFFFFFFFh']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
@CrcUpdateT1@16 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_D7']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_10]']
jz ['short', 'loc_FF']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
xor ['edx,', '[ebp+var_4]']
and ['edx,', '0FFh']
mov ['eax,', '[ebp+var_4]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_4]']
xor ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_CE']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
@CrcGenerateTable@0 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_139']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '100h']
jnb ['short', 'loc_18C']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_15A']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '8']
jnb ['short', 'loc_17D']
mov ['eax,', '[ebp+var_8]']
shr ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '1']
sub ['ecx,', '1']
not ['ecx']
and ['ecx,', '0EDB88320h']
xor ['eax,', 'ecx']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_151']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', 'ds:_g_CrcTable[edx*4],', 'eax']
jmp ['short', 'loc_130']
jmp ['short', 'loc_197']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '800h']
jnb ['short', 'loc_1CF']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', 'dword', 'ptr', '(_g_CrcTable-400h)[edx*4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
and ['ecx,', '0FFh']
mov ['edx,', '[ebp+var_10]']
shr ['edx,', '8']
xor ['edx,', 'dword', 'ptr', 'ds:_g_CrcTable[ecx*4]']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', 'ds:_g_CrcTable[eax*4],', 'edx']
jmp ['short', 'loc_18E']
mov ['dword', 'ptr', 'ds:_g_CrcUpdateT4,', 'offset', '@CrcUpdateT4@16']
mov ['dword', 'ptr', 'ds:_g_CrcUpdate,', 'offset', '@CrcUpdateT4@16']
mov ['dword', 'ptr', 'ds:_g_CrcUpdateT8,', 'offset', '@CrcUpdateT8@16']
call ['_CPU_Is_InOrder@0']
test ['eax,', 'eax']
jnz ['short', 'loc_200']
mov ['dword', 'ptr', 'ds:_g_CrcUpdate,', 'offset', '@CrcUpdateT8@16']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

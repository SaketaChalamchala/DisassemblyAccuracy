??0CDecoder@NLzx@NCompress@@QAE@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CDecoder@NLzx@NCompress@@QAE@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NLzx@NCompress@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0CLzOutWindow@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1CB8h']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+1CC0h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+1CC8h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', '[ebp+arg_0]']
mov ['[eax+1CC9h],', 'cl']
push ['801Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_CF']
mov ['ecx,', '[ebp+var_18]']
call ['??0Cx86ConvertOutStream@NLzx@NCompress@@QAE@XZ']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_D6']
mov ['[ebp+var_1C],', '0']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+1CB4h],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+1CB4h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1CB8h']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Flush@CDecoder@NLzx@NCompress@@UAGJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '38h']
call ['?Flush@COutBuffer@@QAEJXZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_154']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_162']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+1CB4h]']
call ['?Flush@Cx86ConvertOutStream@NLzx@NCompress@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadTable@CDecoder@NLzx@NCompress@@AAE_NPAE0I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_1E7']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '14h']
jnb ['short', 'loc_200']
push ['4']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+ecx+var_20],', 'al']
jmp ['short', 'loc_1DE']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1650h']
call ['?SetCodeLengths@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAE_NPBE@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_220']
xor ['al,', 'al']
jmp ['loc_336']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_2D],', '0']
mov ['[ebp+var_28],', '0']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['loc_334']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_26E']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_28]']
mov ['al,', '[ebp+var_2D]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_28]']
mov ['dl,', '[ebp+var_2D]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_232']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '8']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1650h']
call ['??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '11h']
jnz ['short', 'loc_2A5']
push ['4']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
add ['eax,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_2D],', '0']
jmp ['loc_32F']
cmp ['[ebp+var_34],', '12h']
jnz ['short', 'loc_2C1']
push ['5']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
add ['eax,', '14h']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_2D],', '0']
jmp ['short', 'loc_32F']
cmp ['[ebp+var_34],', '13h']
jz ['short', 'loc_2CD']
cmp ['[ebp+var_34],', '10h']
ja ['short', 'loc_32B']
cmp ['[ebp+var_34],', '10h']
ja ['short', 'loc_2DC']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_30E']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
add ['eax,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1650h']
call ['??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '10h']
jbe ['short', 'loc_30E']
xor ['al,', 'al']
jmp ['short', 'loc_336']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_28]']
movzx ['eax,', 'byte', 'ptr', '[ecx]']
add ['eax,', '11h']
sub ['eax,', '[ebp+var_34]']
xor ['edx,', 'edx']
mov ['ecx,', '11h']
div ['ecx']
mov ['[ebp+var_2D],', 'dl']
jmp ['short', 'loc_32F']
xor ['al,', 'al']
jmp ['short', 'loc_336']
jmp ['loc_232']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ReadTables@CDecoder@NLzx@NCompress@@AAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2BCh']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_2BC]']
mov ['ecx,', '0AFh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1CC8h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3D4']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?DirectReadByte@CDecoder@NBitStream@NLzx@NCompress@@QAEEXZ']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?Normalize@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ']
push ['3']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
mov ['[ebp+var_2A4],', 'eax']
cmp ['[ebp+var_2A4],', '3']
jbe ['short', 'loc_3FF']
xor ['al,', 'al']
jmp ['loc_70B']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+1CC9h]']
test ['eax,', 'eax']
jz ['short', 'loc_440']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
cmp ['eax,', '1']
jnz ['short', 'loc_42B']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+1CBCh],', '8000h']
jmp ['short', 'loc_43E']
push ['10h']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+1CBCh],', 'eax']
jmp ['short', 'loc_456']
push ['18h']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?ReadBitsBig@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+1CBCh],', 'eax']
xor ['edx,', 'edx']
cmp ['[ebp+var_2A4],', '3']
setz ['dl']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+70h],', 'dl']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+70h]']
test ['edx,', 'edx']
jz ['short', 'loc_48D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1CBCh]']
and ['ecx,', '1']
jz ['short', 'loc_48D']
mov ['[ebp+var_2BC],', '1']
jmp ['short', 'loc_497']
mov ['[ebp+var_2BC],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['al,', 'byte', 'ptr', '[ebp+var_2BC]']
mov ['[edx+1CC8h],', 'al']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+70h]']
test ['edx,', 'edx']
jz ['loc_59A']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?GetBitPosition@CDecoder@NBitStream@NLzx@NCompress@@QBEIXZ']
mov ['ecx,', '10h']
sub ['ecx,', 'eax']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '60h']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?ReadUInt32@CDecoder@NBitStream@NLzx@NCompress@@QAE_NAAI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_4F0']
xor ['al,', 'al']
jmp ['loc_70B']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+60h]']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+60h],', 'edx']
mov ['[ebp+var_2A8],', '1']
jmp ['short', 'loc_51A']
mov ['ecx,', '[ebp+var_2A8]']
add ['ecx,', '1']
mov ['[ebp+var_2A8],', 'ecx']
cmp ['[ebp+var_2A8],', '3']
jnb ['short', 'loc_593']
mov ['[ebp+var_2AC],', '0']
mov ['[ebp+var_2B0],', '0']
jmp ['short', 'loc_548']
mov ['edx,', '[ebp+var_2B0]']
add ['edx,', '1']
mov ['[ebp+var_2B0],', 'edx']
cmp ['[ebp+var_2B0],', '4']
jnb ['short', 'loc_578']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?DirectReadByte@CDecoder@NBitStream@NLzx@NCompress@@QAEEXZ']
movzx ['eax,', 'al']
mov ['ecx,', '[ebp+var_2B0]']
shl ['ecx,', '3']
shl ['eax,', 'cl']
or ['eax,', '[ebp+var_2AC]']
mov ['[ebp+var_2AC],', 'eax']
jmp ['short', 'loc_539']
mov ['ecx,', '[ebp+var_2AC]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_2A8]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+edx*4+60h],', 'ecx']
jmp ['loc_50B']
mov ['al,', '1']
jmp ['loc_70B']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_2A4],', '2']
setz ['cl']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+71h],', 'cl']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+71h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_617']
mov ['[ebp+var_2B4],', '0']
jmp ['short', 'loc_5D2']
mov ['edx,', '[ebp+var_2B4]']
add ['edx,', '1']
mov ['[ebp+var_2B4],', 'edx']
cmp ['[ebp+var_2B4],', '8']
jnb ['short', 'loc_5F4']
push ['3']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
mov ['ecx,', '[ebp+var_2B4]']
mov ['[ebp+ecx+var_29C],', 'al']
jmp ['short', 'loc_5C3']
lea ['edx,', '[ebp+var_29C]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '13A8h']
call ['?SetCodeLengths@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAE_NPBE@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_617']
xor ['al,', 'al']
jmp ['loc_70B']
push ['100h']
lea ['ecx,', '[ebp+var_29C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1928h']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadTable@CDecoder@NLzx@NCompress@@AAE_NPAE0I@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_643']
xor ['al,', 'al']
jmp ['loc_70B']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+6Ch]']
push ['edx']
lea ['eax,', '[ebp+var_19C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1A28h']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadTable@CDecoder@NLzx@NCompress@@AAE_NPAE0I@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_671']
xor ['al,', 'al']
jmp ['loc_70B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+6Ch]']
add ['ecx,', '100h']
mov ['[ebp+var_2B8],', 'ecx']
jmp ['short', 'loc_694']
mov ['edx,', '[ebp+var_2B8]']
add ['edx,', '1']
mov ['[ebp+var_2B8],', 'edx']
cmp ['[ebp+var_2B8],', '290h']
jnb ['short', 'loc_6B0']
mov ['eax,', '[ebp+var_2B8]']
mov ['[ebp+eax+var_29C],', '0']
jmp ['short', 'loc_685']
lea ['ecx,', '[ebp+var_29C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '74h']
call ['?SetCodeLengths@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAE_NPBE@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_6CD']
xor ['al,', 'al']
jmp ['short', 'loc_70B']
push ['0F9h']
lea ['eax,', '[ebp+var_29C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1BB8h']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadTable@CDecoder@NLzx@NCompress@@AAE_NPAE0I@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_6F6']
xor ['al,', 'al']
jmp ['short', 'loc_70B']
lea ['eax,', '[ebp+var_29C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0D3Ch']
call ['?SetCodeLengths@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAE_NPBE@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN33']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2BCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearPrevLevels@CDecoder@NLzx@NCompress@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_789']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '290h']
jnb ['short', 'loc_7A1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx+1928h],', '0']
jmp ['short', 'loc_780']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_7B3']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0F9h']
jnb ['short', 'loc_7CB']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1BB8h],', '0']
jmp ['short', 'loc_7AA']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CodeSpec@CDecoder@NLzx@NCompress@@AAEJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+1CC4h],', '0FFFFFFFEh']
jnz ['loc_8FB']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1CC4h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Init@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+1CC0h]']
test ['eax,', 'eax']
jz ['short', 'loc_82C']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+70h]']
test ['edx,', 'edx']
jnz ['short', 'loc_837']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Normalize@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1CC0h]']
test ['ecx,', 'ecx']
jnz ['loc_8FB']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+1CC8h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+1CBCh],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearPrevLevels@CDecoder@NLzx@NCompress@@AAEXXZ']
mov ['[ebp+var_8],', '0B71B00h']
mov ['[ebp+var_9],', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1CC9h]']
test ['edx,', 'edx']
jnz ['short', 'loc_8BC']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['[ebp+var_9],', 'al']
movzx ['eax,', '[ebp+var_9]']
test ['eax,', 'eax']
jz ['short', 'loc_8BC']
push ['10h']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
shl ['eax,', '10h']
mov ['[ebp+var_8],', 'eax']
push ['10h']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z']
or ['eax,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
movzx ['edx,', '[ebp+var_9]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1CB4h]']
call ['?Init@Cx86ConvertOutStream@NLzx@NCompress@@QAEX_NI@Z']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_8E5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '3']
jnb ['short', 'loc_8FB']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+edx*4+60h],', '0']
jmp ['short', 'loc_8DC']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+1CC4h],', '0']
jle ['short', 'loc_94E']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_94E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+60h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?GetByte@CLzOutWindow@@QBEEI@Z']
movzx ['ecx,', 'al']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?PutByte@CLzOutWindow@@QAEXE@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1CC4h]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+1CC4h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
sub ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
jmp ['short', 'loc_8FB']
cmp ['[ebp+arg_0],', '0']
jbe ['loc_C18']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+1CBCh],', '0']
jnz ['short', 'loc_97D']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadTables@CDecoder@NLzx@NCompress@@AAE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_97D']
mov ['eax,', '1']
jmp ['loc_C1A']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1CBCh]']
push ['ecx']
call ['??$MyMin@I@@YGIII@Z']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+arg_0]']
sub ['edx,', '[ebp+var_14]']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1CBCh]']
sub ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+1CBCh],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+70h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_9EC']
cmp ['[ebp+var_14],', '0']
jbe ['short', 'loc_9E7']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?DirectReadByte@CDecoder@NBitStream@NLzx@NCompress@@QAEEXZ']
movzx ['edx,', 'al']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?PutByte@CLzOutWindow@@QAEXE@Z']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_9BC']
jmp ['loc_C13']
cmp ['[ebp+var_14],', '0']
jbe ['loc_C13']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '74h']
call ['??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '100h']
jnb ['short', 'loc_A32']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?PutByte@CLzOutWindow@@QAEXE@Z']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_C0E']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '100h']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[edx+6Ch]']
jb ['short', 'loc_A53']
mov ['eax,', '1']
jmp ['loc_C1A']
mov ['ecx,', '[ebp+var_1C]']
shr ['ecx,', '3']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_1C]']
xor ['edx,', 'edx']
mov ['ecx,', '8']
div ['ecx']
mov ['[ebp+var_24],', 'edx']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '2']
mov ['[ebp+var_28],', 'edx']
cmp ['[ebp+var_24],', '7']
jnz ['short', 'loc_AAE']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D3Ch']
call ['??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0F9h']
jb ['short', 'loc_AA5']
mov ['eax,', '1']
jmp ['loc_C1A']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_20],', '3']
jnb ['short', 'loc_ADF']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+edx*4+60h]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+60h]']
mov ['[eax+edx*4+60h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_30]']
mov ['[edx+60h],', 'eax']
jmp ['loc_BAE']
cmp ['[ebp+var_20],', '26h']
jnb ['short', 'loc_B03']
mov ['ecx,', '[ebp+var_20]']
shr ['ecx,', '1']
sub ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_20]']
and ['edx,', '1']
or ['edx,', '2']
mov ['ecx,', '[ebp+var_38]']
shl ['edx,', 'cl']
mov ['[ebp+var_34],', 'edx']
jmp ['short', 'loc_B16']
mov ['[ebp+var_38],', '11h']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '22h']
shl ['eax,', '11h']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+71h]']
test ['edx,', 'edx']
jz ['short', 'loc_B75']
cmp ['[ebp+var_38],', '3']
jb ['short', 'loc_B75']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z']
mov ['ecx,', '[ebp+var_34]']
lea ['edx,', '[ecx+eax*8]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '13A8h']
call ['??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '8']
jb ['short', 'loc_B6A']
mov ['eax,', '1']
jmp ['loc_C1A']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_34],', 'ecx']
jmp ['short', 'loc_B8A']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z']
add ['eax,', '[ebp+var_34]']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+64h]']
mov ['[eax+68h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+60h]']
mov ['[eax+64h],', 'edx']
mov ['eax,', '[ebp+var_34]']
sub ['eax,', '3']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+60h],', 'eax']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_40]']
cmp ['eax,', '[ebp+var_14]']
jbe ['short', 'loc_BC2']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+60h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?CopyBlock@CLzOutWindow@@QAE_NII@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_BE6']
mov ['eax,', '1']
jmp ['short', 'loc_C1A']
mov ['eax,', '[ebp+var_28]']
sub ['eax,', '[ebp+var_40]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_C0E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_28]']
mov ['[edx+1CC4h],', 'eax']
xor ['eax,', 'eax']
jmp ['short', 'loc_C1A']
jmp ['loc_9EC']
jmp ['loc_94E']
xor ['eax,', 'eax']
pop ['edi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '70h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_7C]']
mov ['ecx,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_C7B']
mov ['eax,', '80070057h']
jmp ['loc_E41']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?SetStream@CDecoder@NBitStream@NLzx@NCompress@@QAEXPAUISequentialInStream@@@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx+1CB4h]']
call ['?SetStream@Cx86ConvertOutStream@NLzx@NCompress@@QAEXPAUISequentialOutStream@@@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1CB8h']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[edx+14h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_CF0']
mov ['eax,', '[ebp+var_1C]']
jmp ['loc_E41']
mov ['edx,', '[ebp+var_10]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??0CDecoderFlusher@NLzx@NCompress@@QAE@PAVCDecoder@12@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_30],', 'edx']
mov ['[ebp+var_38],', '40000h']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
sub ['eax,', '[ebp+var_34]']
sbb ['edx,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', 'eax']
mov ['eax,', '[ebp+var_14]']
sbb ['eax,', 'edx']
mov ['[ebp+var_40],', 'ecx']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_38]']
xor ['edx,', 'edx']
mov ['[ebp+var_7C],', 'ecx']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_78]']
cmp ['eax,', '[ebp+var_3C]']
jb ['short', 'loc_D5F']
ja ['short', 'loc_D59']
mov ['ecx,', '[ebp+var_7C]']
cmp ['ecx,', '[ebp+var_40]']
jbe ['short', 'loc_D5F']
mov ['edx,', '[ebp+var_40]']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_D6A']
jmp ['loc_E11']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?CodeSpec@CDecoder@NLzx@NCompress@@AAEJI@Z']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_D9C']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_6C],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+var_6C]']
jmp ['loc_E41']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_E0C']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['?GetProcessedSize@CDecoder@NBitStream@NLzx@NCompress@@QBE_KXZ']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_4C],', 'edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
sub ['eax,', '[ebp+var_34]']
sbb ['edx,', '[ebp+var_30]']
mov ['[ebp+var_60],', 'eax']
mov ['[ebp+var_5C],', 'edx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_60]']
push ['edx']
lea ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_E0C']
mov ['edx,', '[ebp+var_68]']
mov ['[ebp+var_70],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+var_70]']
jmp ['short', 'loc_E41']
jmp ['loc_D14']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ecx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+var_74]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '7Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '18h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_28]']
jmp ['short', 'loc_F76']
endp
__catch$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0 proc near
mov ['edx,', '[ebp-18h]']
mov ['eax,', '[edx]']
mov ['[ebp-20h],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN8']
retn
endp
__catch$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1 proc near
mov ['dword', 'ptr', '[ebp-24h],', '1']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN10']
retn
endp
?SetOutStreamSize@CDecoder@NLzx@NCompress@@UAGJPB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_FD0']
mov ['eax,', '80004005h']
jmp ['short', 'loc_1015']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1CC0h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_FF0']
push ['0']
push ['0']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[edx+1CB4h]']
call ['?Init@Cx86ConvertOutStream@NLzx@NCompress@@QAEX_NI@Z']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+1CC4h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1CC0h]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '38h']
call ['?Init@CLzOutWindow@@QAEX_N@Z']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?SetParams@CDecoder@NLzx@NCompress@@QAEJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0Fh']
jb ['short', 'loc_1043']
cmp ['[ebp+arg_0],', '15h']
jbe ['short', 'loc_104A']
mov ['eax,', '80070057h']
jmp ['short', 'loc_10BA']
cmp ['[ebp+arg_0],', '14h']
jnb ['short', 'loc_105A']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1070']
cmp ['[ebp+arg_0],', '14h']
jnz ['short', 'loc_1069']
mov ['[ebp+var_8],', '2Ah']
jmp ['short', 'loc_1070']
mov ['[ebp+var_8],', '32h']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '3']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+6Ch],', 'ecx']
push ['200000h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?Create@COutBuffer@@QAE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_109A']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_10BA']
push ['10000h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Create@CDecoder@NBitStream@NLzx@NCompress@@QAE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_10B8']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_10BA']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ']
endp
__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1CLzOutWindow@@QAE@XZ']
endp
__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1CB8h']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$3 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0CDecoder@NLzx@NCompress@@QAE@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CDecoder@NLzx@NCompress@@QAE@_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ']
endp
__ehhandler$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-7Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-2Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CInBufferBase@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CDecoder@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1474']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_147B']
mov ['eax,', '80004002h']
jmp ['short', 'loc_148C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CDecoder@NLzx@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@NLzx@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1542']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_156C']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1563']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCDecoder@NLzx@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_156A']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCDecoder@NLzx@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDecoder@NLzx@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_15A6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CDecoder@NLzx@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDecoder@NLzx@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1CB8h']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1CLzOutWindow@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CDecoder@NLzx@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ']
endp
__unwindfunclet$??1CDecoder@NLzx@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1CLzOutWindow@@QAE@XZ']
endp
__ehhandler$??1CDecoder@NLzx@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDecoder@NLzx@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CInBuffer@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CInBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CLzOutWindow@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutBuffer@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CLzOutWindow@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0COutBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0Cx86ConvertOutStream@NLzx@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Cx86ConvertOutStream@NLzx@NCompress@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@Cx86ConvertOutStream@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1948']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_194F']
mov ['eax,', '80004002h']
jmp ['short', 'loc_1960']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_19CF']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_19E3']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '0Fh']
sub ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
shr ['eax,', 'cl']
and ['eax,', '1FFFFh']
mov ['ecx,', '11h']
sub ['ecx,', '[ebp+arg_0]']
shr ['eax,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+2Ch],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Normalize@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Normalize@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_1B44']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
sub ['ecx,', '10h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+2Ch],', '10h']
jb ['short', 'loc_1B8F']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte@CInBufferBase@@QAEEXZ']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte@CInBufferBase@@QAEEXZ']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
shl ['edx,', '8']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+2]']
or ['edx,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+28h],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
shl ['eax,', '8']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+28h],', 'eax']
jmp ['short', 'loc_1B35']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadByte@CInBufferBase@@QAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+4]']
jb ['short', 'loc_1BCE']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ']
jmp ['short', 'loc_1BE8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['dl,', '[ecx]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetBitPosition@CDecoder@NBitStream@NLzx@NCompress@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+2Ch]']
and ['eax,', '0Fh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadBitsBig@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z']
mov ['ecx,', '[ebp+var_C]']
shl ['eax,', 'cl']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z']
add ['eax,', '[ebp+var_10]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadUInt32@CDecoder@NBitStream@NLzx@NCompress@@QAE_NAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_1C8F']
xor ['al,', 'al']
jmp ['short', 'loc_1CC0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
shr ['edx,', '10h']
and ['edx,', '0FFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
shl ['ecx,', '10h']
and ['ecx,', '0FFFF0000h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+2Ch],', '20h']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?DirectReadByte@CDecoder@NBitStream@NLzx@NCompress@@QAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte@CInBufferBase@@QAEEXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CopyBlock@CLzOutWindow@@QAE_NII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[edx+4]']
jb ['short', 'loc_1D4D']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+24h]']
test ['edx,', 'edx']
jz ['short', 'loc_1D3A']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+10h]']
jb ['short', 'loc_1D41']
xor ['al,', 'al']
jmp ['loc_1E29']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[edx+10h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+8]']
sub ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_4]']
jbe ['short', 'loc_1DBD']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
sub ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_4]']
jbe ['short', 'loc_1DBD']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax]']
mov ['[edx],', 'cl']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
jnz ['short', 'loc_1D94']
jmp ['short', 'loc_1E27']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+10h]']
jnz ['short', 'loc_1DCF']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_14]']
mov ['esi,', '[ebp+var_8]']
mov ['cl,', '[ecx+esi]']
mov ['[eax+edx],', 'cl']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+8]']
jnz ['short', 'loc_1E1C']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
jnz ['short', 'loc_1DBD']
mov ['al,', '1']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?PutByte@CLzOutWindow@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+arg_0]']
mov ['[eax+ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jnz ['short', 'loc_1E8F']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetByte@CLzOutWindow@@QBEEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[edx+4]']
jb ['short', 'loc_1EDD']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ecx+10h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[ecx+edx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@Cx86ConvertOutStream@NLzx@NCompress@@QAEX_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[ebp+arg_0]']
mov ['[eax+18h],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Init@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Init@CInBufferBase@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+2Ch],', '20h']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@Cx86ConvertOutStream@NLzx@NCompress@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@CDecoder@NBitStream@NLzx@NCompress@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetProcessedSize@CDecoder@NBitStream@NLzx@NCompress@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetProcessedSize@CInBufferBase@@QBE_KXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '20h']
sub ['esi,', '[ecx+2Ch]']
shr ['esi,', '3']
xor ['ecx,', 'ecx']
sub ['eax,', 'esi']
sbb ['edx,', 'ecx']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessedSize@CInBufferBase@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
xor ['esi,', 'esi']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
adc ['esi,', '[edx+14h]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[eax]']
sub ['eax,', '[edx+8]']
cdq
add ['ecx,', 'eax']
adc ['esi,', 'edx']
mov ['eax,', 'ecx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDecoderFlusher@NLzx@NCompress@@QAE@PAVCDecoder@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+4],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_20BD']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@CDecoder@NBitStream@NLzx@NCompress@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Create@CInBuffer@@QAE_NI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetCodeLengths@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAE_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_2162']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '10h']
ja ['short', 'loc_217B']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+ecx*4+var_50],', '0']
jmp ['short', 'loc_2153']
mov ['[ebp+var_A8],', '0']
jmp ['short', 'loc_2196']
mov ['edx,', '[ebp+var_A8]']
add ['edx,', '1']
mov ['[ebp+var_A8],', 'edx']
cmp ['[ebp+var_A8],', '290h']
jnb ['short', 'loc_21F1']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_A8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_AC],', 'ecx']
cmp ['[ebp+var_AC],', '10h']
jbe ['short', 'loc_21C4']
xor ['al,', 'al']
jmp ['loc_23D1']
mov ['edx,', '[ebp+var_AC]']
mov ['eax,', '[ebp+edx*4+var_50]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_AC]']
mov ['[ebp+ecx*4+var_50],', 'eax']
mov ['edx,', '[ebp+var_A8]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4+88h],', '0FFFFFFFFh']
jmp ['short', 'loc_2187']
mov ['[ebp+var_50],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+44h],', '0']
mov ['[ebp+var_B0],', '0']
mov ['[ebp+var_B4],', '0']
mov ['[ebp+var_B8],', '10000h']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_2244']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '10h']
ja ['loc_2351']
mov ['ecx,', '10h']
sub ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+edx*4+var_50]']
shl ['eax,', 'cl']
add ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '10000h']
jbe ['short', 'loc_2287']
xor ['al,', 'al']
jmp ['loc_23D1']
cmp ['[ebp+var_A4],', '10h']
jnz ['short', 'loc_229C']
mov ['[ebp+var_C4],', '10000h']
jmp ['short', 'loc_22A8']
mov ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_C4],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C4]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4+40h]']
mov ['edx,', '[ebp+var_A4]']
add ['ecx,', '[ebp+edx*4+var_54]']
mov ['eax,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+eax*4+44h],', 'ecx']
mov ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+ecx*4+44h]']
mov ['[ebp+eax*4+var_9C],', 'ecx']
cmp ['[ebp+var_A4],', '9']
ja ['short', 'loc_234C']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4]']
shr ['ecx,', '7']
mov ['[ebp+var_BC],', 'ecx']
jmp ['short', 'loc_2327']
mov ['edx,', '[ebp+var_B4]']
add ['edx,', '1']
mov ['[ebp+var_B4],', 'edx']
mov ['eax,', '[ebp+var_B4]']
cmp ['eax,', '[ebp+var_BC]']
jnb ['short', 'loc_234C']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_B4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_A4]']
mov ['[ecx+0AC8h],', 'dl']
jmp ['short', 'loc_2318']
jmp ['loc_2235']
mov ['[ebp+var_A8],', '0']
jmp ['short', 'loc_236C']
mov ['eax,', '[ebp+var_A8]']
add ['eax,', '1']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '290h']
jnb ['short', 'loc_23CF']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_A8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_C0],', 'edx']
cmp ['[ebp+var_C0],', '0']
jz ['short', 'loc_23CD']
mov ['eax,', '[ebp+var_C0]']
mov ['ecx,', '[ebp+eax*4+var_9C]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_A8]']
mov ['[edx+ecx*4+88h],', 'eax']
mov ['ecx,', '[ebp+var_C0]']
mov ['edx,', '[ebp+ecx*4+var_9C]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_C0]']
mov ['[ebp+eax*4+var_9C],', 'edx']
jmp ['short', 'loc_235D']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetCodeLengths@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAE_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_2472']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '10h']
ja ['short', 'loc_248B']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+ecx*4+var_50],', '0']
jmp ['short', 'loc_2463']
mov ['[ebp+var_A8],', '0']
jmp ['short', 'loc_24A6']
mov ['edx,', '[ebp+var_A8]']
add ['edx,', '1']
mov ['[ebp+var_A8],', 'edx']
cmp ['[ebp+var_A8],', '0F9h']
jnb ['short', 'loc_2501']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_A8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_AC],', 'ecx']
cmp ['[ebp+var_AC],', '10h']
jbe ['short', 'loc_24D4']
xor ['al,', 'al']
jmp ['loc_26E1']
mov ['edx,', '[ebp+var_AC]']
mov ['eax,', '[ebp+edx*4+var_50]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_AC]']
mov ['[ebp+ecx*4+var_50],', 'eax']
mov ['edx,', '[ebp+var_A8]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4+88h],', '0FFFFFFFFh']
jmp ['short', 'loc_2497']
mov ['[ebp+var_50],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+44h],', '0']
mov ['[ebp+var_B0],', '0']
mov ['[ebp+var_B4],', '0']
mov ['[ebp+var_B8],', '10000h']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_2554']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '10h']
ja ['loc_2661']
mov ['ecx,', '10h']
sub ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+edx*4+var_50]']
shl ['eax,', 'cl']
add ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '10000h']
jbe ['short', 'loc_2597']
xor ['al,', 'al']
jmp ['loc_26E1']
cmp ['[ebp+var_A4],', '10h']
jnz ['short', 'loc_25AC']
mov ['[ebp+var_C4],', '10000h']
jmp ['short', 'loc_25B8']
mov ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_C4],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C4]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4+40h]']
mov ['edx,', '[ebp+var_A4]']
add ['ecx,', '[ebp+edx*4+var_54]']
mov ['eax,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+eax*4+44h],', 'ecx']
mov ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+ecx*4+44h]']
mov ['[ebp+eax*4+var_9C],', 'ecx']
cmp ['[ebp+var_A4],', '9']
ja ['short', 'loc_265C']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4]']
shr ['ecx,', '7']
mov ['[ebp+var_BC],', 'ecx']
jmp ['short', 'loc_2637']
mov ['edx,', '[ebp+var_B4]']
add ['edx,', '1']
mov ['[ebp+var_B4],', 'edx']
mov ['eax,', '[ebp+var_B4]']
cmp ['eax,', '[ebp+var_BC]']
jnb ['short', 'loc_265C']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_B4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_A4]']
mov ['[ecx+46Ch],', 'dl']
jmp ['short', 'loc_2628']
jmp ['loc_2545']
mov ['[ebp+var_A8],', '0']
jmp ['short', 'loc_267C']
mov ['eax,', '[ebp+var_A8]']
add ['eax,', '1']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '0F9h']
jnb ['short', 'loc_26DF']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_A8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_C0],', 'edx']
cmp ['[ebp+var_C0],', '0']
jz ['short', 'loc_26DD']
mov ['eax,', '[ebp+var_C0]']
mov ['ecx,', '[ebp+eax*4+var_9C]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_A8]']
mov ['[edx+ecx*4+88h],', 'eax']
mov ['ecx,', '[ebp+var_C0]']
mov ['edx,', '[ebp+ecx*4+var_9C]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_C0]']
mov ['[ebp+eax*4+var_9C],', 'edx']
jmp ['short', 'loc_266D']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetCodeLengths@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAE_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_2782']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '10h']
ja ['short', 'loc_279B']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+ecx*4+var_50],', '0']
jmp ['short', 'loc_2773']
mov ['[ebp+var_A8],', '0']
jmp ['short', 'loc_27B6']
mov ['edx,', '[ebp+var_A8]']
add ['edx,', '1']
mov ['[ebp+var_A8],', 'edx']
cmp ['[ebp+var_A8],', '8']
jnb ['short', 'loc_280E']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_A8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_AC],', 'ecx']
cmp ['[ebp+var_AC],', '10h']
jbe ['short', 'loc_27E1']
xor ['al,', 'al']
jmp ['loc_29EB']
mov ['edx,', '[ebp+var_AC]']
mov ['eax,', '[ebp+edx*4+var_50]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_AC]']
mov ['[ebp+ecx*4+var_50],', 'eax']
mov ['edx,', '[ebp+var_A8]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4+88h],', '0FFFFFFFFh']
jmp ['short', 'loc_27A7']
mov ['[ebp+var_50],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+44h],', '0']
mov ['[ebp+var_B0],', '0']
mov ['[ebp+var_B4],', '0']
mov ['[ebp+var_B8],', '10000h']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_2861']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '10h']
ja ['loc_296E']
mov ['ecx,', '10h']
sub ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+edx*4+var_50]']
shl ['eax,', 'cl']
add ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '10000h']
jbe ['short', 'loc_28A4']
xor ['al,', 'al']
jmp ['loc_29EB']
cmp ['[ebp+var_A4],', '10h']
jnz ['short', 'loc_28B9']
mov ['[ebp+var_C4],', '10000h']
jmp ['short', 'loc_28C5']
mov ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_C4],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C4]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4+40h]']
mov ['edx,', '[ebp+var_A4]']
add ['ecx,', '[ebp+edx*4+var_54]']
mov ['eax,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+eax*4+44h],', 'ecx']
mov ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+ecx*4+44h]']
mov ['[ebp+eax*4+var_9C],', 'ecx']
cmp ['[ebp+var_A4],', '9']
ja ['short', 'loc_2969']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4]']
shr ['ecx,', '7']
mov ['[ebp+var_BC],', 'ecx']
jmp ['short', 'loc_2944']
mov ['edx,', '[ebp+var_B4]']
add ['edx,', '1']
mov ['[ebp+var_B4],', 'edx']
mov ['eax,', '[ebp+var_B4]']
cmp ['eax,', '[ebp+var_BC]']
jnb ['short', 'loc_2969']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_B4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_A4]']
mov ['[ecx+0A8h],', 'dl']
jmp ['short', 'loc_2935']
jmp ['loc_2852']
mov ['[ebp+var_A8],', '0']
jmp ['short', 'loc_2989']
mov ['eax,', '[ebp+var_A8]']
add ['eax,', '1']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '8']
jnb ['short', 'loc_29E9']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_A8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_C0],', 'edx']
cmp ['[ebp+var_C0],', '0']
jz ['short', 'loc_29E7']
mov ['eax,', '[ebp+var_C0]']
mov ['ecx,', '[ebp+eax*4+var_9C]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_A8]']
mov ['[edx+ecx*4+88h],', 'eax']
mov ['ecx,', '[ebp+var_C0]']
mov ['edx,', '[ebp+ecx*4+var_9C]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_C0]']
mov ['[ebp+eax*4+var_9C],', 'edx']
jmp ['short', 'loc_297A']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetCodeLengths@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAE_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_2A8E']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '10h']
ja ['short', 'loc_2AA7']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+ecx*4+var_50],', '0']
jmp ['short', 'loc_2A7F']
mov ['[ebp+var_A8],', '0']
jmp ['short', 'loc_2AC2']
mov ['edx,', '[ebp+var_A8]']
add ['edx,', '1']
mov ['[ebp+var_A8],', 'edx']
cmp ['[ebp+var_A8],', '14h']
jnb ['short', 'loc_2B1A']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_A8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_AC],', 'ecx']
cmp ['[ebp+var_AC],', '10h']
jbe ['short', 'loc_2AED']
xor ['al,', 'al']
jmp ['loc_2CF7']
mov ['edx,', '[ebp+var_AC]']
mov ['eax,', '[ebp+edx*4+var_50]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_AC]']
mov ['[ebp+ecx*4+var_50],', 'eax']
mov ['edx,', '[ebp+var_A8]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4+88h],', '0FFFFFFFFh']
jmp ['short', 'loc_2AB3']
mov ['[ebp+var_50],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+44h],', '0']
mov ['[ebp+var_B0],', '0']
mov ['[ebp+var_B4],', '0']
mov ['[ebp+var_B8],', '10000h']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_2B6D']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '10h']
ja ['loc_2C7A']
mov ['ecx,', '10h']
sub ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+edx*4+var_50]']
shl ['eax,', 'cl']
add ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '10000h']
jbe ['short', 'loc_2BB0']
xor ['al,', 'al']
jmp ['loc_2CF7']
cmp ['[ebp+var_A4],', '10h']
jnz ['short', 'loc_2BC5']
mov ['[ebp+var_C4],', '10000h']
jmp ['short', 'loc_2BD1']
mov ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_C4],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C4]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4+40h]']
mov ['edx,', '[ebp+var_A4]']
add ['ecx,', '[ebp+edx*4+var_54]']
mov ['eax,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+eax*4+44h],', 'ecx']
mov ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+ecx*4+44h]']
mov ['[ebp+eax*4+var_9C],', 'ecx']
cmp ['[ebp+var_A4],', '9']
ja ['short', 'loc_2C75']
mov ['edx,', '[ebp+var_A4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4]']
shr ['ecx,', '7']
mov ['[ebp+var_BC],', 'ecx']
jmp ['short', 'loc_2C50']
mov ['edx,', '[ebp+var_B4]']
add ['edx,', '1']
mov ['[ebp+var_B4],', 'edx']
mov ['eax,', '[ebp+var_B4]']
cmp ['eax,', '[ebp+var_BC]']
jnb ['short', 'loc_2C75']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_B4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_A4]']
mov ['[ecx+0D8h],', 'dl']
jmp ['short', 'loc_2C41']
jmp ['loc_2B5E']
mov ['[ebp+var_A8],', '0']
jmp ['short', 'loc_2C95']
mov ['eax,', '[ebp+var_A8]']
add ['eax,', '1']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '14h']
jnb ['short', 'loc_2CF5']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_A8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_C0],', 'edx']
cmp ['[ebp+var_C0],', '0']
jz ['short', 'loc_2CF3']
mov ['eax,', '[ebp+var_C0]']
mov ['ecx,', '[ebp+eax*4+var_9C]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_A8]']
mov ['[edx+ecx*4+88h],', 'eax']
mov ['ecx,', '[ebp+var_C0]']
mov ['edx,', '[ebp+ecx*4+var_9C]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_C0]']
mov ['[ebp+eax*4+var_9C],', 'edx']
jmp ['short', 'loc_2C86']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2DA6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2DFC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_2E1F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['10h']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+24h]']
jnb ['short', 'loc_2E84']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '7']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+0D8h]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2EA6']
mov ['[ebp+var_8],', '0Ah']
jmp ['short', 'loc_2E96']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+eax*4]']
jb ['short', 'loc_2EA6']
jmp ['short', 'loc_2E8D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '10h']
sub ['ecx,', '[ebp+var_8]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+ecx*4+44h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '14h']
jb ['short', 'loc_2EE1']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_2EEE']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax*4+88h]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$MyMin@I@@YGIII@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_2F1B']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_2F21']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['10h']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+24h]']
jnb ['short', 'loc_2F74']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '7']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+0AC8h]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2F96']
mov ['[ebp+var_8],', '0Ah']
jmp ['short', 'loc_2F86']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+eax*4]']
jb ['short', 'loc_2F96']
jmp ['short', 'loc_2F7D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '10h']
sub ['ecx,', '[ebp+var_8]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+ecx*4+44h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '290h']
jb ['short', 'loc_2FD4']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_2FE1']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax*4+88h]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['10h']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+24h]']
jnb ['short', 'loc_303C']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '7']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+46Ch]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_305E']
mov ['[ebp+var_8],', '0Ah']
jmp ['short', 'loc_304E']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+eax*4]']
jb ['short', 'loc_305E']
jmp ['short', 'loc_3045']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '10h']
sub ['ecx,', '[ebp+var_8]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+ecx*4+44h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0F9h']
jb ['short', 'loc_309C']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_30A9']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax*4+88h]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['10h']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+24h]']
jnb ['short', 'loc_3104']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '7']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+0A8h]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_3126']
mov ['[ebp+var_8],', '0Ah']
jmp ['short', 'loc_3116']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+eax*4]']
jb ['short', 'loc_3126']
jmp ['short', 'loc_310D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '10h']
sub ['ecx,', '[ebp+var_8]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+ecx*4+44h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '8']
jb ['short', 'loc_3161']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_316E']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax*4+88h]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp

??0CHandler@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CHandler@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IInArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0IArchiveGetRawProps@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0ISetProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0IOutArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0COutHandler@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CHandler@N7z@NArchive@@6BIInArchive@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CHandler@N7z@NArchive@@6BIArchiveGetRawProps@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CHandler@N7z@NArchive@@6BISetProperties@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CHandler@N7z@NArchive@@6BIOutArchive@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '88h']
call ['??0?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '90h']
call ['??0CDbEx@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1CCh']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1D8h']
call ['??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+1C8h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+1C9h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetNumberOfItems@CHandler@N7z@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0E8h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?GetNumberOfArchiveProperties@CHandler@N7z@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '4']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetArchivePropertyInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '4']
jb ['short', 'loc_1EC']
mov ['eax,', '80070057h']
jmp ['short', 'loc_219']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_kArcProps[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
movzx ['dx,', 'byte', 'ptr', 'ds:?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['14h']
endp
?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
push ['edx']
call ['?FindMethod@@YG_N_KAAVAString@@@Z']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2AD']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?ConvertMethodIdToString@N7z@NArchive@@YGXAAVAString@@_K@Z']
jmp ['short', 'loc_2B9']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@ABV0@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ConvertMethodIdToString@N7z@NArchive@@YGXAAVAString@@_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '20h']
mov ['[ebp+var_34],', '1Fh']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+eax+var_2C],', '0']
mov ['ecx,', '[ebp+var_34]']
lea ['esi,', '[ebp+ecx+var_2C]']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
lea ['edx,', '[ebp+ecx+var_2C]']
push ['edx']
call ['?ConvertMethodIdToString_Back@N7z@NArchive@@YGIPAD_K@Z']
sub ['esi,', 'eax']
push ['esi']
mov ['ecx,', '[ebp+arg_0]']
call ['??YAString@@QAEAAV0@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ConvertMethodIdToString_Back@N7z@NArchive@@YGIPAD_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '0Fh']
push ['ecx']
call ['?GetHex@N7z@NArchive@@YGDI@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['cl,', '4']
call ['__aullshr']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '0Fh']
push ['ecx']
call ['?GetHex@N7z@NArchive@@YGDI@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['cl,', '4']
call ['__aullshr']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
or ['eax,', '[ebp+arg_8]']
jnz ['short', 'loc_3DE']
mov ['eax,', '[ebp+var_4]']
neg ['eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetHex@N7z@NArchive@@YGDI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0Ah']
jnb ['short', 'loc_478']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '30h']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_481']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '37h']
mov ['[ebp+var_4],', 'ecx']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '88h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_98]']
mov ['ecx,', '22h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_14],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_7C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_80]']
sub ['ecx,', '0Dh']
mov ['[ebp+var_80],', 'ecx']
cmp ['[ebp+var_80],', '3Bh']
ja ['$LN26']
mov ['edx,', '[ebp+var_80]']
movzx ['eax,', 'ds:$LN38[edx]']
jmp ['ds:$LN45[eax*4]']
lea ['ecx,', '[ebp+var_3C]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_84],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0D4h']
mov ['[ebp+var_44],', 'ecx']
mov ['[ebp+var_48],', '0']
jmp ['short', 'loc_540']
mov ['edx,', '[ebp+var_48]']
add ['edx,', '1']
mov ['[ebp+var_48],', 'edx']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '8']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
mov ['[ebp+var_88],', 'eax']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_88]']
jnb ['loc_646']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '8']
call ['??A?$CRecordVector@_K@@QBEAB_KI@Z']
mov ['[ebp+var_8C],', 'eax']
mov ['edx,', '[ebp+var_8C]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[ebp+var_50],', 'eax']
mov ['ecx,', '[edx+4]']
mov ['dword', 'ptr', '[ebp+var_50+4],', 'ecx']
lea ['ecx,', '[ebp+var_3C]']
call ['?Add_Space_if_NotEmpty@AString@@QAEXXZ']
cmp ['dword', 'ptr', '[ebp+var_50],', '21h']
jnz ['short', 'loc_5F3']
cmp ['dword', 'ptr', '[ebp+var_50+4],', '0']
jnz ['short', 'loc_5F3']
push ['offset', '$SG70958']
lea ['ecx,', '[ebp+var_3C]']
call ['??YAString@@QAEAAV0@PBD@Z']
mov ['edx,', '[ebp+var_44]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
and ['eax,', '1']
jnz ['short', 'loc_5C9']
lea ['ecx,', '[ebp+var_64]']
push ['ecx']
mov ['edx,', '[ebp+var_44]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
sar ['eax,', '1']
add ['eax,', '0Ch']
push ['eax']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
jmp ['short', 'loc_5E5']
mov ['ecx,', '[ebp+var_44]']
movzx ['ecx,', 'byte', 'ptr', '[ecx]']
sar ['ecx,', '1']
add ['ecx,', '0Bh']
mov ['edx,', '3']
shl ['edx,', 'cl']
push ['edx']
lea ['eax,', '[ebp+var_64]']
push ['eax']
call ['?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z']
lea ['ecx,', '[ebp+var_64]']
push ['ecx']
lea ['ecx,', '[ebp+var_3C]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['short', 'loc_641']
cmp ['dword', 'ptr', '[ebp+var_50],', '30101h']
jnz ['short', 'loc_62D']
cmp ['dword', 'ptr', '[ebp+var_50+4],', '0']
jnz ['short', 'loc_62D']
push ['offset', '$SG70963']
lea ['ecx,', '[ebp+var_3C]']
call ['??YAString@@QAEAAV0@PBD@Z']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
push ['ecx']
call ['?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z']
lea ['edx,', '[ebp+var_64]']
push ['edx']
lea ['ecx,', '[ebp+var_3C]']
call ['??YAString@@QAEAAV0@PBD@Z']
jmp ['short', 'loc_641']
mov ['eax,', 'dword', 'ptr', '[ebp+var_50+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_50]']
push ['ecx']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z']
jmp ['loc_537']
lea ['ecx,', '[ebp+var_3C]']
call ['??BAString@@QBEPBDXZ']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3C]']
call ['??1AString@@QAE@XZ']
jmp ['$LN26']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '90h']
call ['?IsSolid@CDatabase@N7z@NArchive@@QBE_NXZ']
mov ['[ebp+var_91],', 'al']
movzx ['ecx,', '[ebp+var_91]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
jmp ['$LN26']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+94h]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['$LN26']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+1B4h]']
push ['edx']
mov ['eax,', '[ecx+1B0h]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN26']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+1BCh]']
push ['edx']
mov ['eax,', '[ecx+1B8h]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN26']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_98],', 'ecx']
mov ['edx,', '[ebp+var_98]']
mov ['eax,', '[ebp+var_98]']
mov ['ecx,', '[edx+178h]']
or ['ecx,', '[eax+17Ch]']
jz ['short', 'loc_72C']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+17Ch]']
push ['eax']
mov ['ecx,', '[edx+178h]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN26']
mov ['[ebp+var_6C],', '0']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+1C4h]']
test ['eax,', 'eax']
jz ['short', 'loc_74F']
mov ['ecx,', '[ebp+var_6C]']
or ['ecx,', '2']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+1C5h]']
test ['eax,', 'eax']
jz ['short', 'loc_769']
mov ['ecx,', '[ebp+var_6C]']
or ['ecx,', '100h']
mov ['[ebp+var_6C],', 'ecx']
cmp ['[ebp+var_6C],', '0']
jz ['short', 'loc_77B']
mov ['edx,', '[ebp+var_6C]']
push ['edx']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['short', '$LN26']
mov ['[ebp+var_70],', '0']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1C0h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_79B']
mov ['edx,', '[ebp+var_70]']
or ['edx,', '1']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1C2h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_7B2']
mov ['edx,', '[ebp+var_70]']
or ['edx,', '2']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1C3h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_7C9']
mov ['edx,', '[ebp+var_70]']
or ['edx,', '20h']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1C6h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_7E3']
mov ['edx,', '[ebp+var_70]']
or ['edx,', '100h']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+var_70]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_74],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_74]']
jmp ['short', 'loc_839']
endp
__catch$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-78h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN36']
retn
endp
?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_949']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '1Fh']
ja ['loc_9DD']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
shl ['edx,', 'cl']
cmp ['edx,', '[ebp+arg_4]']
jnz ['short', 'loc_9D8']
cmp ['[ebp+var_4],', '0Ah']
jnb ['short', 'loc_984']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '30h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+1],', '0']
mov ['eax,', '1']
jmp ['loc_A4B']
cmp ['[ebp+var_4],', '14h']
jnb ['short', 'loc_99E']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax],', '31h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '26h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1],', 'cl']
jmp ['short', 'loc_9CA']
cmp ['[ebp+var_4],', '1Eh']
jnb ['short', 'loc_9B8']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax],', '32h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1],', 'cl']
jmp ['short', 'loc_9CA']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax],', '33h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '12h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+2],', '0']
mov ['eax,', '2']
jmp ['short', 'loc_A4B']
jmp ['loc_940']
mov ['byte', 'ptr', '[ebp+var_8+3],', '62h']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '0FFFFFh']
jnz ['short', 'loc_9FB']
mov ['edx,', '[ebp+arg_4]']
shr ['edx,', '14h']
mov ['[ebp+arg_4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_8+3],', '6Dh']
jmp ['short', 'loc_A12']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '3FFh']
jnz ['short', 'loc_A12']
mov ['ecx,', '[ebp+arg_4]']
shr ['ecx,', '0Ah']
mov ['[ebp+arg_4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_8+3],', '6Bh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?MyStringLen@@YGIPBD@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_C]']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsFolderEncrypted@CHandler@N7z@NArchive@@ABE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jnz ['short', 'loc_A85']
xor ['al,', 'al']
jmp ['loc_BB0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C8h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0CCh']
call ['??B?$CBuffer@E@@QBEPBEXZ']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C8h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4+4]']
sub ['edx,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z']
lea ['ecx,', '[ebp+var_20]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_AF1']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
cmp ['[ebp+var_28],', '0']
jz ['loc_BAE']
lea ['ecx,', '[ebp+var_20]']
call ['?ReadByte@CInByte2@N7z@NArchive@@QAEEXZ']
mov ['byte', 'ptr', '[ebp+var_30+7],', 'al']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_30+7]']
and ['eax,', '0Fh']
mov ['dword', 'ptr', '[ebp+var_30],', 'eax']
lea ['ecx,', '[ebp+var_20]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_40],', '0']
jmp ['short', 'loc_B3B']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '1']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
cmp ['edx,', 'dword', 'ptr', '[ebp+var_30]']
jnb ['short', 'loc_B6A']
mov ['eax,', '[ebp+var_3C]']
mov ['edx,', '[ebp+var_38]']
mov ['cl,', '8']
call ['__allshl']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '[ebp+var_40]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cdq
or ['ecx,', 'eax']
or ['esi,', 'edx']
mov ['[ebp+var_3C],', 'ecx']
mov ['[ebp+var_38],', 'esi']
jmp ['short', 'loc_B32']
mov ['eax,', 'dword', 'ptr', '[ebp+var_30]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z']
cmp ['[ebp+var_3C],', '6F10701h']
jnz ['short', 'loc_B8C']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_B8C']
mov ['al,', '1']
jmp ['short', 'loc_BB0']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_30+7]']
and ['edx,', '20h']
jz ['short', 'loc_BA9']
lea ['ecx,', '[ebp+var_20]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z']
jmp ['loc_AE8']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetNumRawProps@CHandler@N7z@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetRawPropInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx],', '3Eh']
xor ['eax,', 'eax']
pop ['ebp']
retn ['10h']
endp
?GetParent@CHandler@N7z@NArchive@@UAGJIPAI0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
xor ['eax,', 'eax']
pop ['ebp']
retn ['10h']
endp
?GetRawProp@CHandler@N7z@NArchive@@UAGJIKPAPBXPAI1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[edx],', '0']
cmp ['[ebp+arg_8],', '3']
jnz ['loc_D24']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '164h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_D20']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '15Ch']
call ['??B?$CBuffer@E@@QAEPAEXZ']
test ['eax,', 'eax']
jz ['short', 'loc_D20']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '164h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_4],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '164h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+ecx*4+4]']
sub ['edx,', '[ebp+var_4]']
shl ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '80000000h']
jnb ['short', 'loc_D20']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '15Ch']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '51h']
xor ['eax,', 'eax']
jmp ['short', 'loc_D26']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1E0h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1EC]']
mov ['ecx,', '78h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jnz ['short', 'loc_D96']
xor ['eax,', 'eax']
jmp ['loc_1623']
mov ['[ebp+var_18],', '100h']
mov ['[ebp+var_124],', '100h']
mov ['ecx,', '[ebp+var_124]']
sub ['ecx,', '1']
mov ['[ebp+var_124],', 'ecx']
mov ['edx,', '[ebp+var_124]']
mov ['byte', 'ptr', '[ebp+edx+var_11C.anonymous_0],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0C8h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_128],', 'edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0CCh']
call ['??B?$CBuffer@E@@QBEPBEXZ']
add ['eax,', '[ebp+var_128]']
mov ['[ebp+var_12C],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0C8h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4+4]']
sub ['edx,', '[ebp+var_128]']
mov ['[ebp+var_130],', 'edx']
mov ['eax,', '[ebp+var_130]']
push ['eax']
mov ['ecx,', '[ebp+var_12C]']
push ['ecx']
lea ['ecx,', '[ebp+var_140]']
call ['?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z']
lea ['ecx,', '[ebp+var_140]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['[ebp+var_148],', 'eax']
mov ['byte', 'ptr', '[ebp+var_150+7],', '0']
jmp ['short', 'loc_E62']
mov ['edx,', '[ebp+var_148]']
sub ['edx,', '1']
mov ['[ebp+var_148],', 'edx']
mov ['byte', 'ptr', '[ebp+var_150+7],', '1']
cmp ['[ebp+var_148],', '0']
jz ['loc_1586']
cmp ['[ebp+var_124],', '20h']
jnb ['short', 'loc_E7D']
jmp ['loc_1586']
lea ['ecx,', '[ebp+var_140]']
call ['?ReadByte@CInByte2@N7z@NArchive@@QAEEXZ']
mov ['byte', 'ptr', '[ebp+var_150+6],', 'al']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_150+6]']
and ['eax,', '0Fh']
mov ['dword', 'ptr', '[ebp+var_150],', 'eax']
lea ['ecx,', '[ebp+var_140]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
mov ['[ebp+var_154],', 'eax']
mov ['dword', 'ptr', '[ebp+var_15C],', '0']
mov ['dword', 'ptr', '[ebp+var_15C+4],', '0']
mov ['dword', 'ptr', '[ebp+var_164+4],', '0']
jmp ['short', 'loc_EDE']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_164+4]']
add ['ecx,', '1']
mov ['dword', 'ptr', '[ebp+var_164+4],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_164+4]']
cmp ['edx,', 'dword', 'ptr', '[ebp+var_150]']
jnb ['short', 'loc_F25']
mov ['eax,', 'dword', 'ptr', '[ebp+var_15C]']
mov ['edx,', 'dword', 'ptr', '[ebp+var_15C+4]']
mov ['cl,', '8']
call ['__allshl']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['edx,', '[ebp+var_154]']
add ['edx,', 'dword', 'ptr', '[ebp+var_164+4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cdq
or ['ecx,', 'eax']
or ['esi,', 'edx']
mov ['dword', 'ptr', '[ebp+var_15C],', 'ecx']
mov ['dword', 'ptr', '[ebp+var_15C+4],', 'esi']
jmp ['short', 'loc_ECF']
mov ['eax,', 'dword', 'ptr', '[ebp+var_150]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
lea ['ecx,', '[ebp+var_140]']
call ['?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_150+6]']
and ['edx,', '10h']
jz ['short', 'loc_F5C']
lea ['ecx,', '[ebp+var_140]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
lea ['ecx,', '[ebp+var_140]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['dword', 'ptr', '[ebp+var_164],', '0']
mov ['[ebp+var_168],', '0']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_150+6]']
and ['eax,', '20h']
jz ['short', 'loc_FB3']
lea ['ecx,', '[ebp+var_140]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['dword', 'ptr', '[ebp+var_164],', 'eax']
lea ['ecx,', '[ebp+var_140]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
mov ['[ebp+var_168],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_164]']
xor ['edx,', 'edx']
push ['edx']
push ['ecx']
lea ['ecx,', '[ebp+var_140]']
call ['?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z']
mov ['[ebp+var_16C],', '0']
mov ['[ebp+var_190],', '0']
cmp ['dword', 'ptr', '[ebp+var_15C+4],', '0']
ja ['loc_1313']
jb ['short', 'loc_FE0']
cmp ['dword', 'ptr', '[ebp+var_15C],', '0FFFFFFFFh']
ja ['loc_1313']
mov ['eax,', 'dword', 'ptr', '[ebp+var_15C]']
mov ['[ebp+var_198],', 'eax']
cmp ['[ebp+var_198],', '30101h']
jnz ['loc_112C']
mov ['[ebp+var_16C],', 'offset', '$SG71095']
cmp ['dword', 'ptr', '[ebp+var_164],', '5']
jnz ['loc_1127']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ecx+1]']
mov ['[ebp+var_19C],', 'edx']
mov ['eax,', '[ebp+var_19C]']
push ['eax']
lea ['ecx,', '[ebp+var_190]']
push ['ecx']
call ['?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z']
lea ['edx,', '[ebp+eax+var_190]']
mov ['[ebp+var_1A0],', 'edx']
mov ['eax,', '[ebp+var_168]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_1A4],', 'ecx']
cmp ['[ebp+var_1A4],', '5Dh']
jz ['loc_1127']
mov ['eax,', '[ebp+var_1A4]']
xor ['edx,', 'edx']
mov ['ecx,', '9']
div ['ecx']
mov ['[ebp+var_1A8],', 'edx']
mov ['eax,', '[ebp+var_1A4]']
xor ['edx,', 'edx']
mov ['ecx,', '9']
div ['ecx']
mov ['[ebp+var_1A4],', 'eax']
mov ['eax,', '[ebp+var_1A4]']
xor ['edx,', 'edx']
mov ['ecx,', '5']
div ['ecx']
mov ['[ebp+var_1AC],', 'eax']
mov ['eax,', '[ebp+var_1A4]']
xor ['edx,', 'edx']
mov ['ecx,', '5']
div ['ecx']
mov ['[ebp+var_1B0],', 'edx']
cmp ['[ebp+var_1A8],', '3']
jz ['short', 'loc_10D9']
mov ['edx,', '[ebp+var_1A8]']
push ['edx']
push ['offset', '$SG71108']
mov ['eax,', '[ebp+var_1A0]']
push ['eax']
call ['?AddProp32@N7z@NArchive@@YGPADPADPBDI@Z']
mov ['[ebp+var_1A0],', 'eax']
cmp ['[ebp+var_1B0],', '0']
jz ['short', 'loc_1100']
mov ['ecx,', '[ebp+var_1B0]']
push ['ecx']
push ['offset', '$SG71110']
mov ['edx,', '[ebp+var_1A0]']
push ['edx']
call ['?AddProp32@N7z@NArchive@@YGPADPADPBDI@Z']
mov ['[ebp+var_1A0],', 'eax']
cmp ['[ebp+var_1AC],', '2']
jz ['short', 'loc_1127']
mov ['eax,', '[ebp+var_1AC]']
push ['eax']
push ['offset', '$SG71112']
mov ['ecx,', '[ebp+var_1A0]']
push ['ecx']
call ['?AddProp32@N7z@NArchive@@YGPADPADPBDI@Z']
mov ['[ebp+var_1A0],', 'eax']
jmp ['loc_1313']
cmp ['[ebp+var_198],', '21h']
jnz ['short', 'loc_11A2']
mov ['[ebp+var_16C],', 'offset', '$SG71115']
cmp ['dword', 'ptr', '[ebp+var_164],', '1']
jnz ['short', 'loc_119D']
mov ['edx,', '[ebp+var_168]']
mov ['al,', '[edx]']
mov ['[ebp+var_1B1],', 'al']
movzx ['ecx,', '[ebp+var_1B1]']
and ['ecx,', '1']
jnz ['short', 'loc_117D']
lea ['edx,', '[ebp+var_190]']
push ['edx']
movzx ['eax,', '[ebp+var_1B1]']
sar ['eax,', '1']
add ['eax,', '0Ch']
push ['eax']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
jmp ['short', 'loc_119D']
movzx ['ecx,', '[ebp+var_1B1]']
sar ['ecx,', '1']
add ['ecx,', '0Bh']
mov ['edx,', '3']
shl ['edx,', 'cl']
push ['edx']
lea ['eax,', '[ebp+var_190]']
push ['eax']
call ['?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z']
jmp ['loc_1313']
cmp ['[ebp+var_198],', '30401h']
jnz ['loc_1259']
mov ['[ebp+var_16C],', 'offset', '$SG71123']
cmp ['dword', 'ptr', '[ebp+var_164],', '5']
jnz ['loc_1254']
mov ['ecx,', '[ebp+var_168]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_1B2],', 'dl']
lea ['eax,', '[ebp+var_190]']
mov ['[ebp+var_1B8],', 'eax']
mov ['ecx,', '[ebp+var_1B8]']
mov ['byte', 'ptr', '[ecx],', '6Fh']
mov ['edx,', '[ebp+var_1B8]']
add ['edx,', '1']
mov ['[ebp+var_1B8],', 'edx']
mov ['eax,', '[ebp+var_1B8]']
push ['eax']
movzx ['ecx,', '[ebp+var_1B2]']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
mov ['edx,', '[ebp+var_1B8]']
push ['edx']
call ['?MyStringLen@@YGIPBD@Z']
add ['eax,', '[ebp+var_1B8]']
mov ['[ebp+var_1B8],', 'eax']
push ['offset', '$SG71127']
mov ['eax,', '[ebp+var_1B8]']
push ['eax']
call ['?MyStpCpy@@YGPADPADPBD@Z']
mov ['[ebp+var_1B8],', 'eax']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ecx+1]']
push ['edx']
mov ['eax,', '[ebp+var_1B8]']
push ['eax']
call ['?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z']
jmp ['loc_1313']
cmp ['[ebp+var_198],', '3']
jnz ['short', 'loc_1293']
mov ['[ebp+var_16C],', 'offset', '$SG71132']
cmp ['dword', 'ptr', '[ebp+var_164],', '1']
jnz ['short', 'loc_128E']
lea ['ecx,', '[ebp+var_190]']
push ['ecx']
mov ['edx,', '[ebp+var_168]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
add ['eax,', '1']
push ['eax']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
jmp ['loc_1313']
cmp ['[ebp+var_198],', '303011Bh']
jnz ['short', 'loc_12AB']
mov ['[ebp+var_16C],', 'offset', '$SG71137']
jmp ['short', 'loc_1313']
cmp ['[ebp+var_198],', '3030103h']
jnz ['short', 'loc_12C3']
mov ['[ebp+var_16C],', 'offset', '$SG71140']
jmp ['short', 'loc_1313']
cmp ['[ebp+var_198],', '6F10701h']
jnz ['short', 'loc_1313']
mov ['[ebp+var_16C],', 'offset', '$SG71143']
cmp ['dword', 'ptr', '[ebp+var_164],', '1']
jb ['short', 'loc_1313']
mov ['ecx,', '[ebp+var_168]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_1B9],', 'dl']
movzx ['eax,', '[ebp+var_1B9]']
and ['eax,', '3Fh']
mov ['[ebp+var_1C0],', 'eax']
lea ['ecx,', '[ebp+var_190]']
push ['ecx']
mov ['edx,', '[ebp+var_1C0]']
push ['edx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
cmp ['[ebp+var_16C],', '0']
jz ['loc_143B']
mov ['eax,', '[ebp+var_16C]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
mov ['[ebp+var_1C4],', 'eax']
lea ['ecx,', '[ebp+var_190]']
push ['ecx']
call ['?MyStringLen@@YGIPBD@Z']
mov ['[ebp+var_1C8],', 'eax']
mov ['edx,', '[ebp+var_1C4]']
add ['edx,', '[ebp+var_1C8]']
mov ['[ebp+var_1CC],', 'edx']
cmp ['[ebp+var_1C8],', '0']
jz ['short', 'loc_136E']
mov ['eax,', '[ebp+var_1CC]']
add ['eax,', '1']
mov ['[ebp+var_1CC],', 'eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_150+7]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1388']
mov ['edx,', '[ebp+var_1CC]']
add ['edx,', '1']
mov ['[ebp+var_1CC],', 'edx']
mov ['eax,', '[ebp+var_1CC]']
add ['eax,', '5']
cmp ['eax,', '[ebp+var_124]']
jb ['short', 'loc_139E']
jmp ['loc_1586']
mov ['ecx,', '[ebp+var_124]']
sub ['ecx,', '[ebp+var_1CC]']
mov ['[ebp+var_124],', 'ecx']
mov ['edx,', '[ebp+var_16C]']
push ['edx']
mov ['eax,', '[ebp+var_124]']
lea ['ecx,', '[ebp+eax+var_11C]']
push ['ecx']
call ['?MyStringCopy@@YGXPADPBD@Z']
cmp ['[ebp+var_1C8],', '0']
jz ['short', 'loc_1417']
mov ['edx,', '[ebp+var_124]']
lea ['eax,', '[ebp+edx+var_11C]']
add ['eax,', '[ebp+var_1C4]']
mov ['[ebp+var_1D0],', 'eax']
mov ['ecx,', '[ebp+var_1D0]']
mov ['byte', 'ptr', '[ecx],', '3Ah']
mov ['edx,', '[ebp+var_1D0]']
add ['edx,', '1']
mov ['[ebp+var_1D0],', 'edx']
lea ['eax,', '[ebp+var_190]']
push ['eax']
mov ['ecx,', '[ebp+var_1D0]']
push ['ecx']
call ['?MyStringCopy@@YGXPADPBD@Z']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_150+7]']
test ['edx,', 'edx']
jz ['short', 'loc_1436']
mov ['eax,', '[ebp+var_124]']
add ['eax,', '[ebp+var_1CC]']
mov ['[ebp+eax+var_11D],', '20h']
jmp ['loc_1581']
lea ['ecx,', '[ebp+var_1E0]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1E0]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_15C+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_15C]']
push ['eax']
call ['?FindMethod@@YG_N_KAAVAString@@@Z']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_150+7]']
test ['ecx,', 'ecx']
jz ['short', 'loc_148F']
mov ['edx,', '[ebp+var_124]']
sub ['edx,', '1']
mov ['[ebp+var_124],', 'edx']
mov ['eax,', '[ebp+var_124]']
mov ['byte', 'ptr', '[ebp+eax+var_11C.anonymous_0],', '20h']
lea ['ecx,', '[ebp+var_1E0]']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_14D5']
mov ['edx,', 'dword', 'ptr', '[ebp+var_15C+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_15C]']
push ['eax']
mov ['ecx,', '[ebp+var_124]']
lea ['edx,', '[ebp+ecx+var_11C]']
push ['edx']
call ['?ConvertMethodIdToString_Back@N7z@NArchive@@YGIPAD_K@Z']
mov ['ecx,', '[ebp+var_124]']
sub ['ecx,', 'eax']
mov ['[ebp+var_124],', 'ecx']
jmp ['loc_156F']
lea ['ecx,', '[ebp+var_1E0]']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+var_1E8],', 'eax']
mov ['edx,', '[ebp+var_1E8]']
add ['edx,', '5']
cmp ['edx,', '[ebp+var_124]']
jbe ['short', 'loc_150B']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1E0]']
call ['??1AString@@QAE@XZ']
jmp ['short', 'loc_1586']
mov ['eax,', '[ebp+var_124]']
sub ['eax,', '[ebp+var_1E8]']
mov ['[ebp+var_124],', 'eax']
mov ['[ebp+var_1EC],', '0']
jmp ['short', 'loc_1538']
mov ['ecx,', '[ebp+var_1EC]']
add ['ecx,', '1']
mov ['[ebp+var_1EC],', 'ecx']
mov ['edx,', '[ebp+var_1EC]']
cmp ['edx,', '[ebp+var_1E8]']
jnb ['short', 'loc_156F']
lea ['ecx,', '[ebp+var_1E0]']
call ['??BAString@@QBEPBDXZ']
mov ['ecx,', '[ebp+var_124]']
add ['ecx,', '[ebp+var_1EC]']
mov ['edx,', '[ebp+var_1EC]']
mov ['al,', '[eax+edx]']
mov ['byte', 'ptr', '[ebp+ecx+var_11C.anonymous_0],', 'al']
jmp ['short', 'loc_1529']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1E0]']
call ['??1AString@@QAE@XZ']
jmp ['loc_E4C']
cmp ['[ebp+var_148],', '0']
jz ['short', 'loc_160C']
cmp ['[ebp+var_124],', '4']
jb ['short', 'loc_160C']
mov ['ecx,', '[ebp+var_124]']
sub ['ecx,', '1']
mov ['[ebp+var_124],', 'ecx']
mov ['edx,', '[ebp+var_124]']
mov ['byte', 'ptr', '[ebp+edx+var_11C.anonymous_0],', '20h']
mov ['eax,', '[ebp+var_124]']
sub ['eax,', '1']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+var_124]']
mov ['byte', 'ptr', '[ebp+ecx+var_11C.anonymous_0],', '2Eh']
mov ['edx,', '[ebp+var_124]']
sub ['edx,', '1']
mov ['[ebp+var_124],', 'edx']
mov ['eax,', '[ebp+var_124]']
mov ['byte', 'ptr', '[ebp+eax+var_11C.anonymous_0],', '2Eh']
mov ['ecx,', '[ebp+var_124]']
sub ['ecx,', '1']
mov ['[ebp+var_124],', 'ecx']
mov ['edx,', '[ebp+var_124]']
mov ['byte', 'ptr', '[ebp+edx+var_11C.anonymous_0],', '2Eh']
mov ['eax,', '[ebp+var_124]']
lea ['ecx,', '[ebp+eax+var_11C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?PropVarEm_Set_Str@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN61']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1ECh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?AddProp32@N7z@NArchive@@YGPADPADPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax],', '3Ah']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStpCpy@@YGPADPADPBD@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
add ['eax,', '[ebp+arg_0]']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?GetProperty@CHandler@N7z@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['dword', 'ptr', '[ebp+var_14],', 'eax']
mov ['dword', 'ptr', '[ebp+var_14+4],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0E8h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '3']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '1Ah']
ja ['$LN22']
mov ['edx,', '[ebp+var_24]']
movzx ['eax,', 'ds:$LN26_0[edx]']
jmp ['ds:$LN30[eax*4]']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+11h]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?PropVarEm_Set_Bool@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_N@Z']
jmp ['$LN22']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ecx]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z']
jmp ['$LN22']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1ACh']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0FFFFFFFFh']
jz ['short', 'loc_1803']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1A8h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax+ecx*4]']
cmp ['edx,', '[ebp+var_8]']
jnz ['short', 'loc_1801']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '90h']
call ['?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z']
jmp ['short', 'loc_1810']
push ['0']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z']
jmp ['$LN22']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '13Ch']
call ['?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1843']
mov ['eax,', 'dword', 'ptr', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z']
jmp ['$LN22']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0F4h']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['?SetFileTimeProp_From_UInt64Def@N7z@NArchive@@YGXPAUtagPROPVARIANT@@ABUCUInt64DefVector@12@H@Z']
jmp ['$LN22']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10Ch']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['?SetFileTimeProp_From_UInt64Def@N7z@NArchive@@YGXPAUtagPROPVARIANT@@ABUCUInt64DefVector@12@H@Z']
jmp ['$LN22']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '124h']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['?SetFileTimeProp_From_UInt64Def@N7z@NArchive@@YGXPAUtagPROPVARIANT@@ABUCUInt64DefVector@12@H@Z']
jmp ['$LN22']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+13h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_18B7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['?PropVarEm_Set_UInt32@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@I@Z']
jmp ['$LN22']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+12h]']
test ['eax,', 'eax']
jz ['short', 'loc_18D7']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?PropVarEm_Set_UInt32@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@I@Z']
jmp ['$LN22']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1ACh']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?IsFolderEncrypted@CHandler@N7z@NArchive@@ABE_NI@Z']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['?PropVarEm_Set_Bool@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_N@Z']
jmp ['$LN22']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '90h']
call ['?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['?PropVarEm_Set_Bool@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_N@Z']
jmp ['short', '$LN22']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '90h']
call ['?GetPath_Prop@CDatabase@N7z@NArchive@@QBEJIPAUtagPROPVARIANT@@@Z']
jmp ['short', 'loc_1993']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1ACh']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[eax+edx*4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z']
jmp ['short', 'loc_1993']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1ACh']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0FFFFFFFFh']
jz ['short', '$LN22']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['?PropVarEm_Set_UInt32@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@I@Z']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?SetFileTimeProp_From_UInt64Def@N7z@NArchive@@YGXPAUtagPROPVARIANT@@ABUCUInt64DefVector@12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_C+4],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1A6B']
mov ['eax,', '[ebp+var_C+4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?PropVarEm_Set_FileTime64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_14],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+this]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1E4h']
call ['?Clear@?$CRecordVector@_K@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@PAUIArchiveOpenCallback@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_28]']
call ['??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['[ebp+var_D4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1B6A']
lea ['ecx,', '[ebp+var_28]']
call ['??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ']
mov ['[ebp+var_D8],', 'eax']
mov ['edx,', '[ebp+var_D8]']
push ['edx']
push ['offset', '_IID_ICryptoGetTextPassword']
lea ['ecx,', '[ebp+var_1C]']
call ['??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+83h]']
push ['ecx']
lea ['ecx,', '[ebp+var_B0]']
call ['??0CInArchive@N7z@NArchive@@QAE@_N@Z']
mov ['[ebp+var_DC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+1C0h],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_B0]']
call ['?Open@CInArchive@N7z@NArchive@@QAEJPAUIInStream@@PB_K@Z']
mov ['[ebp+var_E0],', 'eax']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_B8],', 'edx']
cmp ['[ebp+var_B8],', '0']
jz ['short', 'loc_1C00']
mov ['eax,', '[ebp+var_B8]']
mov ['[ebp+var_C4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CInArchive@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_C4]']
jmp ['loc_1D6D']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+1C0h],', '1']
lea ['ecx,', '[ebp+var_28]']
call ['??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ']
mov ['[ebp+var_E4],', 'eax']
mov ['edx,', '[ebp+this]']
add ['edx,', '1CCh']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '1C9h']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1C8h']
push ['ecx']
mov ['edx,', '[ebp+var_E4]']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '90h']
push ['eax']
lea ['ecx,', '[ebp+var_B0]']
call ['?ReadDatabase@CInArchive@N7z@NArchive@@QAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
mov ['[ebp+var_BC],', 'ecx']
mov ['edx,', '[ebp+var_BC]']
mov ['[ebp+var_C0],', 'edx']
cmp ['[ebp+var_C0],', '0']
jz ['short', 'loc_1CB5']
mov ['eax,', '[ebp+var_C0]']
mov ['[ebp+var_C8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CInArchive@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ']
mov ['eax,', '[ebp+var_C8]']
jmp ['loc_1D6D']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '88h']
call ['??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_B0]']
call ['??1CInArchive@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ']
jmp ['short', '$LN9_1']
endp
__catch$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['edx,', '[ebp+8]']
push ['edx']
mov ['eax,', '[ebp+8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['dword', 'ptr', '[ebp-0CCh],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0']
mov ['eax,', 'offset', '$LN16']
retn
endp
$LN16           proc near               
mov ['eax,', '[ebp-0CCh]']
jmp ['short', 'loc_1D6D']
endp
__catch$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$2 proc near
mov ['dword', 'ptr', '[ebp-0D0h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN18']
retn
endp
?Close@CHandler@N7z@NArchive@@UAGJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Close@CHandler@N7z@NArchive@@UAGJXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '88h']
call ['?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '90h']
call ['?Clear@CDbEx@N7z@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+1C8h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+1C9h],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1CCh']
call ['?Empty@UString@@QAEXXZ']
xor ['eax,', 'eax']
jmp ['short', 'loc_1EAC']
endp
__catch$?Close@CHandler@N7z@NArchive@@UAGJXZ$0 proc near
mov ['dword', 'ptr', '[ebp-14h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7']
retn
endp
__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1COutHandler@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '88h']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '90h']
jmp ['??1CDbEx@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1CCh']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1D8h']
jmp ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??0CHandler@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CHandler@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$2 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$3 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-9Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z$0 proc near
lea ['ecx,', '[ebp-1E0h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1ECh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ']
endp
__unwindfunclet$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$5 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ']
endp
__unwindfunclet$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$6 proc near
lea ['ecx,', '[ebp-0B0h]']
jmp ['??1CInArchive@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0ECh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Close@CHandler@N7z@NArchive@@UAGJXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Close@CHandler@N7z@NArchive@@UAGJXZ']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutHandler@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COutHandler@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CMultiMethodProps@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '65h']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '67h']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '69h']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
call ['?InitProps@COutHandler@N7z@NArchive@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COutHandler@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMultiMethodProps@NArchive@@QAE@XZ']
endp
__ehhandler$??0COutHandler@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COutHandler@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CBoolPair@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMultiMethodProps@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CMultiMethodProps@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0COneMethodInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
call ['?Init@CMultiMethodProps@NArchive@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CMultiMethodProps@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
endp
__unwindfunclet$??0CMultiMethodProps@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1COneMethodInfo@@QAE@XZ']
endp
__ehhandler$??0CMultiMethodProps@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CMultiMethodProps@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0COneMethodInfo@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COneMethodInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CMethodProps@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMethodProps@@QAE@XZ']
endp
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0COneMethodInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COneMethodInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COneMethodInfo@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COneMethodInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CMethodProps@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMethodProps@@QAE@XZ']
endp
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1COneMethodInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COneMethodInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCProp@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMultiMethodProps@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CMultiMethodProps@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1COneMethodInfo@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CMultiMethodProps@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
endp
__ehhandler$??1CMultiMethodProps@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CMultiMethodProps@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2D1F']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_2DE1']
push ['offset', '_IID_IInArchive']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2D3E']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_2DE1']
push ['offset', '_IID_IArchiveGetRawProps']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2D72']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2D61']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_2D68']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_2DE1']
push ['offset', '_IID_ISetProperties']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2DA6']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2D95']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2D9C']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_2DE1']
push ['offset', '_IID_IOutArchive']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2DDA']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2DC9']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_2DD0']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_2DE1']
mov ['eax,', '80004002h']
jmp ['short', 'loc_2DF2']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CHandler@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CHandler@N7z@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+10h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2EAE']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+10h]']
jmp ['short', 'loc_2ED8']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2ECF']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCHandler@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_2ED6']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCHandler@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CHandler@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2F12']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CHandler@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CHandler@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1D8h']
call ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1CCh']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '90h']
call ['??1CDbEx@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '88h']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1COutHandler@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1COutHandler@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '88h']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '90h']
jmp ['??1CDbEx@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1CCh']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1D8h']
jmp ['??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ']
endp
__ehhandler$??1CHandler@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CHandler@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1COutHandler@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMultiMethodProps@NArchive@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CDbEx@N7z@NArchive@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDbEx@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '11Ch']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '118h']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0E0h']
call ['??1CInArchiveInfo@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CDatabase@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CDbEx@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CDatabase@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CDbEx@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0E0h']
jmp ['??1CInArchiveInfo@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CDbEx@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '118h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__ehhandler$??1CDbEx@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDbEx@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CDatabase@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDatabase@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0D8h']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0D0h']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0C4h']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0ACh']
call ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '94h']
call ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '64h']
call ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '58h']
call ['??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CFolders@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CFolders@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '58h']
jmp ['??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '64h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '94h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0ACh']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0C4h']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0D0h']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$??1CDatabase@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDatabase@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CInArchiveInfo@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFolders@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CFolders@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??1CParsedMethods@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CObjArray@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CObjArray@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1?$CObjArray@_K@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CObjArray@_K@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CObjArray@_K@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '34h']
jmp ['??1?$CObjArray@E@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '3Ch']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$??1CFolders@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CFolders@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CUInt64DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CParsedMethods@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CRecordVector@_K@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IInArchive@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IArchiveGetRawProps@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IArchiveGetRawProps@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISetProperties@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISetProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IOutArchive@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDbEx@N7z@NArchive@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CDbEx@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CDatabase@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0E0h']
call ['??0CInArchiveInfo@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '118h']
call ['??0?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '11Ch']
call ['??0?$CObjArray@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CDbEx@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CDatabase@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CDbEx@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0E0h']
jmp ['??1CInArchiveInfo@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CDbEx@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '118h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__ehhandler$??0CDbEx@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CDbEx@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDatabase@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CDatabase@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CFolders@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '58h']
call ['??0?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '64h']
call ['??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '94h']
call ['??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0ACh']
call ['??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0C4h']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0D0h']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0D8h']
call ['??0?$CObjArray@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CFolders@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '58h']
jmp ['??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '64h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '94h']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0ACh']
jmp ['??1CUInt64DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0C4h']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0D0h']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$??0CDatabase@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CDatabase@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CInArchiveInfo@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFolders@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CFolders@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0?$CObjArray@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0?$CObjArray@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??0?$CObjArray@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??0CParsedMethods@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CObjArray@_K@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CObjArray@_K@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '34h']
jmp ['??1?$CObjArray@E@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '3Ch']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$??0CFolders@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CFolders@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CParsedMethods@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CUInt64DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?IsEmpty@AString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsSolid@CDatabase@N7z@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3FF5']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+4]']
jnb ['short', 'loc_401A']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+ecx*4],', '1']
jbe ['short', 'loc_4018']
mov ['al,', '1']
jmp ['short', 'loc_401C']
jmp ['short', 'loc_3FEC']
xor ['al,', 'al']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MyStringLen@@YGIPBD@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_4049']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_4058']
jmp ['short', 'loc_4040']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?MyStringCopy@@YGXPADPBD@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
test ['ecx,', 'ecx']
jz ['short', 'loc_4112']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_4119']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_4121']
jmp ['short', 'loc_40E3']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?MyStpCpy@@YGPADPADPBD@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'cl']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['[edx],', 'al']
movsx ['ecx,', 'byte', 'ptr', '[ebp+var_4+3]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4150']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_4164']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_4133']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?PropVarEm_Set_UInt32@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '13h']
mov ['ecx,', '[ebp+this]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
pop ['ebp']
retn ['8']
endp
?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '15h']
mov ['ecx,', '[ebp+this]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_8]']
mov ['[edx+0Ch],', 'ecx']
pop ['ebp']
retn ['0Ch']
endp
?PropVarEm_Set_Bool@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '0Bh']
mov ['ecx,', '[ebp+this]']
mov ['[ecx],', 'ax']
movzx ['edx,', 'byte', 'ptr', '[ebp+arg_4]']
neg ['edx']
sbb ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
mov ['[eax+8],', 'dx']
pop ['ebp']
retn ['8']
endp
?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_4236']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4236']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@_K@@QBEAB_KI@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['eax,', '[eax+4]']
mov ['[ecx+4],', 'eax']
mov ['al,', '1']
jmp ['short', 'loc_4248']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['dword', 'ptr', '[ecx+4],', '0']
xor ['al,', 'al']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C4h']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_42A4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C4h']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_42A4']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_42AB']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QBEPB_KXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edi,', '[eax+ecx*4+4]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QBEPB_KXZ']
mov ['ebx,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[eax+edx*4]']
mov ['ecx,', '[esi+edi*8]']
sub ['ecx,', '[ebx+eax*8]']
mov ['edx,', '[esi+edi*8+4]']
sbb ['edx,', '[ebx+eax*8+4]']
mov ['eax,', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?PropVarEm_Set_FileTime64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '40h']
mov ['ecx,', '[ebp+this]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+this]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_8]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+0Ch],', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
??0CInArchive@N7z@NArchive@@QAE@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+78h],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CInArchive@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CDbEx@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+130h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+131h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+132h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+133h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+134h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+136h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+135h],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CDatabase@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0E0h']
call ['?Clear@CInArchiveInfo@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '118h']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '11Ch']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+120h],', '0']
mov ['dword', 'ptr', '[ecx+124h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+128h],', '0']
mov ['dword', 'ptr', '[edx+12Ch],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CDatabase@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CFolders@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D0h']
call ['?Free@?$CBuffer@E@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '58h']
call ['?Clear@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '64h']
call ['?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7Ch']
call ['?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '94h']
call ['?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0ACh']
call ['?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C4h']
call ['?Clear@?$CRecordVector@_N@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@_N@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Clear@?$CRecordVector@_K@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CFolders@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Free@?$CObjArray@_K@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Clear@CUInt32DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['?Free@?$CObjArray@_K@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['?Free@?$CObjArray@E@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '3Ch']
call ['?Free@?$CBuffer@E@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CUInt32DefVector@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@_N@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Clear@?$CRecordVector@I@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CInArchiveInfo@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['?Clear@?$CRecordVector@_K@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_475E']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_4755']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_475C']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_471A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4892']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_4889']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCOneMethodInfo@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4890']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_484E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Free@?$CBuffer@E@@QAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_49B8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QAEPAEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QBEPBEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_N@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@_N@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@_N@@QBEAB_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@I@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_K@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@_K@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@_K@@QBEAB_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Free@?$CObjArray@_K@@QAEXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray@_K@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray@_K@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@_K@@QBEPB_KXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Free@?$CObjArray@I@@QAEXXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray@I@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray@I@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@I@@QAEPAIXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@I@@QBEPBIXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Free@?$CObjArray@E@@QAEXXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray@E@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray@E@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4FB2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4FFF']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_503C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_505F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@PAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_50B0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_50F6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_515A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCProp@@QAEPAXI@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_51C6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCOneMethodInfo@@QAEPAXI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COneMethodInfo@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5206']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Release@CHandler@N7z@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CHandler@N7z@NArchive@@UAGKXZ']
endp
?Release@CHandler@N7z@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CHandler@N7z@NArchive@@UAGKXZ']
endp
?Release@CHandler@N7z@NArchive@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CHandler@N7z@NArchive@@UAGKXZ']
endp
?AddRef@CHandler@N7z@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CHandler@N7z@NArchive@@UAGKXZ']
endp
?AddRef@CHandler@N7z@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CHandler@N7z@NArchive@@UAGKXZ']
endp
?QueryInterface@CHandler@N7z@NArchive@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CHandler@N7z@NArchive@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CHandler@N7z@NArchive@@UAGKXZ']
endp
?QueryInterface@CHandler@N7z@NArchive@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CHandler@N7z@NArchive@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp

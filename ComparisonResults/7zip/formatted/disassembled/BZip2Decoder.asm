?Alloc@CState@NBZip2@NCompress@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_425']
push ['36F280h']
call ['_BigAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', '[edx],', '0']
setnz ['al']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Free@CState@NBZip2@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_BigFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadByte@CDecoder@NBZip2@NCompress@@AAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '138h']
call ['?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitm@@QAEII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ReadBits@?$CDecoder@VCInBuffer@@@NBitm@@QAEII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadBlock@CBase@NBZip2@NCompress@@QAEJPAIIPAUCBlockProps@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2A0h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_2A0]']
mov ['ecx,', '0A8h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+6EB0h]']
add ['ecx,', '1']
mov ['edx,', '[eax+6EB4h]']
adc ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+6EB0h],', 'ecx']
mov ['[eax+6EB4h],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
test ['edx,', 'edx']
jz ['short', 'loc_56D']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ']
test ['eax,', 'eax']
setnz ['al']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+8],', 'al']
push ['18h']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+arg_4]']
jb ['short', 'loc_592']
mov ['eax,', '1']
jmp ['loc_BD0']
lea ['ecx,', '[ebp+var_10C]']
call ['?StartInit@CMtf8Decoder@NCompress@@QAEXXZ']
mov ['[ebp+var_114],', '0']
mov ['[ebp+var_130],', '0']
jmp ['short', 'loc_5C2']
mov ['edx,', '[ebp+var_130]']
add ['edx,', '1']
mov ['[ebp+var_130],', 'edx']
cmp ['[ebp+var_130],', '10h']
jnb ['short', 'loc_5E2']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+ecx+var_128],', 'al']
jmp ['short', 'loc_5B3']
mov ['[ebp+var_130],', '0']
jmp ['short', 'loc_5FD']
mov ['edx,', '[ebp+var_130]']
add ['edx,', '1']
mov ['[ebp+var_130],', 'edx']
cmp ['[ebp+var_130],', '100h']
jnb ['short', 'loc_661']
mov ['eax,', '[ebp+var_130]']
shr ['eax,', '4']
movzx ['ecx,', '[ebp+eax+var_128]']
test ['ecx,', 'ecx']
jz ['short', 'loc_65F']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_65F']
mov ['edx,', '[ebp+var_114]']
mov ['[ebp+var_2A0],', 'edx']
mov ['eax,', '[ebp+var_114]']
add ['eax,', '1']
mov ['[ebp+var_114],', 'eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_130]']
push ['ecx']
mov ['edx,', '[ebp+var_2A0]']
push ['edx']
lea ['ecx,', '[ebp+var_10C]']
call ['?Add@CMtf8Decoder@NCompress@@QAEXIE@Z']
jmp ['short', 'loc_5EE']
cmp ['[ebp+var_114],', '0']
jnz ['short', 'loc_674']
mov ['eax,', '1']
jmp ['loc_BD0']
mov ['eax,', '[ebp+var_114]']
add ['eax,', '2']
mov ['[ebp+var_134],', 'eax']
push ['3']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z']
mov ['[ebp+var_138],', 'eax']
cmp ['[ebp+var_138],', '2']
jb ['short', 'loc_6A5']
cmp ['[ebp+var_138],', '6']
jbe ['short', 'loc_6AF']
mov ['eax,', '1']
jmp ['loc_BD0']
push ['0Fh']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z']
mov ['[ebp+var_13C],', 'eax']
cmp ['[ebp+var_13C],', '1']
jb ['short', 'loc_6D4']
cmp ['[ebp+var_13C],', '4652h']
jbe ['short', 'loc_6DE']
mov ['eax,', '1']
jmp ['loc_BD0']
mov ['[ebp+var_150],', '0']
mov ['ecx,', '[ebp+var_150]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_150]']
mov ['[ebp+ecx+var_148],', 'dl']
mov ['eax,', '[ebp+var_150]']
add ['eax,', '1']
mov ['[ebp+var_150],', 'eax']
mov ['ecx,', '[ebp+var_150]']
cmp ['ecx,', '[ebp+var_138]']
jb ['short', 'loc_6E8']
mov ['[ebp+var_154],', '0']
mov ['[ebp+var_158],', '0']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_761']
mov ['edx,', '[ebp+var_158]']
add ['edx,', '1']
mov ['[ebp+var_158],', 'edx']
mov ['eax,', '[ebp+var_158]']
cmp ['eax,', '[ebp+var_138]']
jb ['short', 'loc_75F']
mov ['eax,', '1']
jmp ['loc_BD0']
jmp ['short', 'loc_72C']
mov ['ecx,', '[ebp+var_158]']
mov ['dl,', '[ebp+ecx+var_148]']
mov ['[ebp+var_159],', 'dl']
jmp ['short', 'loc_785']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '1']
mov ['[ebp+var_158],', 'eax']
cmp ['[ebp+var_158],', '0']
jbe ['short', 'loc_7AA']
mov ['ecx,', '[ebp+var_158]']
mov ['edx,', '[ebp+var_158]']
mov ['al,', '[ebp+edx+var_149]']
mov ['[ebp+ecx+var_148],', 'al']
jmp ['short', 'loc_776']
mov ['cl,', '[ebp+var_159]']
mov ['[ebp+var_148],', 'cl']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_154]']
mov ['al,', '[ebp+var_148]']
mov ['[edx+38h],', 'al']
mov ['ecx,', '[ebp+var_154]']
add ['ecx,', '1']
mov ['[ebp+var_154],', 'ecx']
mov ['edx,', '[ebp+var_154]']
cmp ['edx,', '[ebp+var_13C]']
jb ['loc_722']
mov ['[ebp+var_160],', '0']
push ['5']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z']
mov ['[ebp+var_270],', 'eax']
mov ['[ebp+var_274],', '0']
jmp ['short', 'loc_81E']
mov ['eax,', '[ebp+var_274]']
add ['eax,', '1']
mov ['[ebp+var_274],', 'eax']
mov ['ecx,', '[ebp+var_274]']
cmp ['ecx,', '[ebp+var_134]']
jnb ['short', 'loc_897']
cmp ['[ebp+var_270],', '1']
jb ['short', 'loc_83E']
cmp ['[ebp+var_270],', '14h']
jbe ['short', 'loc_848']
mov ['eax,', '1']
jmp ['loc_BD0']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_856']
jmp ['short', 'loc_87F']
mov ['edx,', '[ebp+var_270]']
add ['edx,', '1']
mov ['[ebp+var_270],', 'edx']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_270]']
sub ['ecx,', 'eax']
mov ['[ebp+var_270],', 'ecx']
jmp ['short', 'loc_82C']
mov ['edx,', '[ebp+var_274]']
mov ['al,', 'byte', 'ptr', '[ebp+var_270]']
mov ['[ebp+edx+var_268],', 'al']
jmp ['loc_80F']
jmp ['short', 'loc_8A8']
mov ['ecx,', '[ebp+var_274]']
add ['ecx,', '1']
mov ['[ebp+var_274],', 'ecx']
cmp ['[ebp+var_274],', '102h']
jnb ['short', 'loc_8C4']
mov ['edx,', '[ebp+var_274]']
mov ['[ebp+edx+var_268],', '0']
jmp ['short', 'loc_899']
lea ['eax,', '[ebp+var_268]']
push ['eax']
mov ['ecx,', '[ebp+var_160]']
imul ['ecx,', '6B0h']
mov ['edx,', '[ebp+var_8]']
lea ['ecx,', '[edx+ecx+468Ch]']
call ['?SetCodeLengths@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAE_NPBE@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_8F7']
mov ['eax,', '1']
jmp ['loc_BD0']
mov ['ecx,', '[ebp+var_160]']
add ['ecx,', '1']
mov ['[ebp+var_160],', 'ecx']
mov ['edx,', '[ebp+var_160]']
cmp ['edx,', '[ebp+var_138]']
jb ['loc_7F3']
mov ['[ebp+var_278],', '0']
jmp ['short', 'loc_933']
mov ['eax,', '[ebp+var_278]']
add ['eax,', '1']
mov ['[ebp+var_278],', 'eax']
cmp ['[ebp+var_278],', '100h']
jnb ['short', 'loc_951']
mov ['ecx,', '[ebp+var_278]']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0']
jmp ['short', 'loc_924']
mov ['[ebp+var_27C],', '0']
mov ['[ebp+var_280],', '0']
mov ['[ebp+var_284],', '0']
mov ['[ebp+var_288],', '0']
mov ['[ebp+var_28C],', '0']
mov ['[ebp+var_290],', '0']
cmp ['[ebp+var_284],', '0']
jnz ['short', 'loc_9EA']
mov ['eax,', '[ebp+var_280]']
cmp ['eax,', '[ebp+var_13C]']
jb ['short', 'loc_9AE']
mov ['eax,', '1']
jmp ['loc_BD0']
mov ['[ebp+var_284],', '32h']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_280]']
movzx ['edx,', 'byte', 'ptr', '[ecx+38h]']
imul ['edx,', '6B0h']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx+468Ch]']
mov ['[ebp+var_288],', 'ecx']
mov ['edx,', '[ebp+var_280]']
add ['edx,', '1']
mov ['[ebp+var_280],', 'edx']
mov ['eax,', '[ebp+var_284]']
sub ['eax,', '1']
mov ['[ebp+var_284],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?ExtraBitsWereRead_Fast@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A10']
jmp ['loc_B9C']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '8']
push ['edx']
mov ['ecx,', '[ebp+var_288]']
call ['??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitm@@@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitm@@@Z']
mov ['[ebp+var_294],', 'eax']
cmp ['[ebp+var_294],', '2']
jnb ['short', 'loc_A7D']
mov ['eax,', '[ebp+var_294]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_28C]']
shl ['eax,', 'cl']
add ['eax,', '[ebp+var_290]']
mov ['[ebp+var_290],', 'eax']
mov ['ecx,', '[ebp+var_28C]']
add ['ecx,', '1']
mov ['[ebp+var_28C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_27C]']
cmp ['edx,', '[ebp+var_290]']
jnb ['short', 'loc_A78']
mov ['eax,', '1']
jmp ['loc_BD0']
jmp ['loc_98D']
cmp ['[ebp+var_290],', '0']
jz ['short', 'loc_AF8']
lea ['ecx,', '[ebp+var_10C]']
call ['?GetHead@CMtf8Decoder@NCompress@@QBEEXZ']
movzx ['eax,', 'al']
mov ['[ebp+var_298],', 'eax']
mov ['ecx,', '[ebp+var_298]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4]']
add ['eax,', '[ebp+var_290]']
mov ['ecx,', '[ebp+var_298]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+var_27C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_298]']
mov ['[ecx+eax*4+400h],', 'edx']
mov ['eax,', '[ebp+var_27C]']
add ['eax,', '1']
mov ['[ebp+var_27C],', 'eax']
mov ['ecx,', '[ebp+var_290]']
sub ['ecx,', '1']
mov ['[ebp+var_290],', 'ecx']
jnz ['short', 'loc_AB8']
mov ['[ebp+var_28C],', '0']
mov ['edx,', '[ebp+var_294]']
cmp ['edx,', '[ebp+var_114]']
ja ['short', 'loc_B7B']
mov ['eax,', '[ebp+var_294]']
sub ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_10C]']
call ['?GetAndMove@CMtf8Decoder@NCompress@@QAEEI@Z']
movzx ['ecx,', 'al']
mov ['[ebp+var_29C],', 'ecx']
mov ['edx,', '[ebp+var_27C]']
cmp ['edx,', '[ebp+arg_4]']
jb ['short', 'loc_B39']
mov ['eax,', '1']
jmp ['loc_BD0']
mov ['eax,', '[ebp+var_29C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_29C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*4],', 'edx']
mov ['edx,', '[ebp+var_27C]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_29C]']
mov ['[eax+edx*4+400h],', 'ecx']
mov ['edx,', '[ebp+var_27C]']
add ['edx,', '1']
mov ['[ebp+var_27C],', 'edx']
jmp ['short', 'loc_B97']
mov ['eax,', '[ebp+var_114]']
add ['eax,', '1']
cmp ['[ebp+var_294],', 'eax']
jnz ['short', 'loc_B90']
jmp ['short', 'loc_B9C']
jmp ['short', 'loc_B97']
mov ['eax,', '1']
jmp ['short', 'loc_BD0']
jmp ['loc_98D']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_BB5']
mov ['eax,', '1']
jmp ['short', 'loc_BD0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_27C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ecx+4]']
cmp ['eax,', '[edx]']
sbb ['eax,', 'eax']
add ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN71']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2A0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??0CDecoder@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CDecoder@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0ICompressSetCoderMt@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NBZip2@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0COutBuffer@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '138h']
call ['??0CBase@NBZip2@NCompress@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6FFCh']
call ['??0CBZip2CombinedCrc@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '700Ch']
call ['??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7010h']
call ['??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7038h']
call ['??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+7004h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+7008h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+7028h],', '1']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+6FF8h],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CDecoder@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDecoder@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NBZip2@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@']
mov ['[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
call ['?Free@CDecoder@NBZip2@NCompress@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7038h']
call ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7010h']
call ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '700Ch']
call ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '138h']
call ['??1CBase@NBZip2@NCompress@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1COutBuffer@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@CDecoder@NBZip2@NCompress@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '30h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '700Ch']
call ['?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_E9F']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_1071']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '7038h']
call ['?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_EBE']
mov ['eax,', '[ebp+var_1C]']
jmp ['loc_1071']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+7004h],', '0']
jz ['short', 'loc_EE5']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+7008h]']
cmp ['eax,', '[edx+7028h]']
jnz ['short', 'loc_EE5']
xor ['eax,', 'eax']
jmp ['loc_1071']
mov ['ecx,', '[ebp+var_14]']
call ['?Free@CDecoder@NBZip2@NCompress@@QAEXXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '1']
cmp ['edx,', '[ecx+7028h]']
sbb ['eax,', 'eax']
neg ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+702Ch],', 'al']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+7028h]']
mov ['[edx+7008h],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+7028h]']
mov ['[ebp+var_2C],', 'eax']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['edx,', '11Ch']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
xor ['eax,', 'eax']
add ['ecx,', '4']
setb ['al']
neg ['eax']
or ['eax,', 'ecx']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_34],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_F9A']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx],', 'eax']
push ['offset', '??1CState@NBZip2@NCompress@@QAE@XZ']
push ['offset', '??0CState@NBZip2@NCompress@@QAE@XZ']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
push ['11Ch']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '4']
push ['edx']
call ['??_L@YGXPAXIHP6EX0@Z1@Z']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '4']
mov ['[ebp+var_40],', 'eax']
jmp ['short', 'loc_FA1']
mov ['[ebp+var_40],', '0']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_30],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_30]']
mov ['[edx+7004h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+7004h],', '0']
jnz ['short', 'loc_FCD']
mov ['eax,', '8007000Eh']
jmp ['loc_1071']
jmp ['short', '$LN15']
endp
__catch$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ$0 proc near
mov ['dword', 'ptr', '[ebp-38h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN19']
retn
endp
$LN19           proc near               
mov ['eax,', '[ebp-38h]']
jmp ['short', 'loc_1071']
endp
?Free@CDecoder@NBZip2@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+7004h],', '0']
jnz ['short', 'loc_10C1']
jmp ['loc_116C']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+7034h],', '1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '700Ch']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_10EB']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+7028h]']
jnb ['short', 'loc_1131']
mov ['edx,', '[ebp+var_8]']
imul ['edx,', '11Ch']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+7004h]']
mov ['[ebp+var_C],', 'edx']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+702Ch]']
test ['edx,', 'edx']
jz ['short', 'loc_1127']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '8']
call ['?Wait@CThread@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_C]']
call ['?Free@CState@NBZip2@NCompress@@QAEXXZ']
jmp ['short', 'loc_10E2']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+7004h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1158']
push ['3']
mov ['ecx,', '[ebp+var_10]']
call ['??_ECState@NBZip2@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_115F']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+7004h],', '0']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEndSig@NBZip2@NCompress@@YG_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '17h']
jnz ['short', 'loc_11DE']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '72h']
jnz ['short', 'loc_11DE']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
cmp ['edx,', '45h']
jnz ['short', 'loc_11DE']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
cmp ['ecx,', '38h']
jnz ['short', 'loc_11DE']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
cmp ['eax,', '50h']
jnz ['short', 'loc_11DE']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5]']
cmp ['edx,', '90h']
jnz ['short', 'loc_11DE']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_11E5']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsBlockSig@NBZip2@NCompress@@YG_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jnz ['short', 'loc_124B']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '41h']
jnz ['short', 'loc_124B']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
cmp ['edx,', '59h']
jnz ['short', 'loc_124B']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
cmp ['ecx,', '26h']
jnz ['short', 'loc_124B']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
cmp ['eax,', '53h']
jnz ['short', 'loc_124B']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5]']
cmp ['edx,', '59h']
jnz ['short', 'loc_124B']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_1252']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadSignature@CDecoder@NBZip2@NCompress@@QAEJAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+7049h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_12B8']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0Ah']
jnb ['short', 'loc_12CF']
mov ['ecx,', '[ebp+var_8]']
call ['?ReadByte@CDecoder@NBZip2@NCompress@@AAEEXZ']
mov ['ecx,', '[ebp+var_20]']
mov ['byte', 'ptr', '[ebp+ecx+var_18],', 'al']
jmp ['short', 'loc_12AF']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '140h']
call ['?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_12EE']
mov ['eax,', '1']
jmp ['loc_13B3']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_1307']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '4']
jnb ['short', 'loc_1326']
mov ['ecx,', '[ebp+var_24]']
shl ['ecx,', '8']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'byte', 'ptr', '[ebp+edx+var_14+2]']
or ['eax,', '[ebp+var_24]']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_12FE']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_24]']
mov ['[ecx],', 'edx']
lea ['eax,', '[ebp+var_18]']
push ['eax']
call ['?IsBlockSig@NBZip2@NCompress@@YG_NPBE@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1360']
mov ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx+7048h],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '6FFCh']
call ['?Update@CBZip2CombinedCrc@@QAEXI@Z']
xor ['eax,', 'eax']
jmp ['short', 'loc_13B3']
lea ['edx,', '[ebp+var_18]']
push ['edx']
call ['?IsEndSig@NBZip2@NCompress@@YG_NPBE@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1377']
mov ['eax,', '1']
jmp ['short', 'loc_13B3']
mov ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx+7048h],', '1']
mov ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx+7049h],', '1']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '6FFCh']
call ['?GetDigest@CBZip2CombinedCrc@@QBEIXZ']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx],', 'eax']
jz ['short', 'loc_13B1']
mov ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx+704Ah],', '1']
mov ['eax,', '1']
jmp ['short', 'loc_13B3']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?DecodeFile@CDecoder@NBZip2@NCompress@@AAEJPAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '6Ch']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_6C]']
mov ['ecx,', '1Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+7000h],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Create@CDecoder@NBZip2@NCompress@@QAEJXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1440']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_1808']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_1452']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+7028h]']
jnb ['loc_14F9']
mov ['edx,', '[ebp+var_C]']
imul ['edx,', '11Ch']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+7004h]']
mov ['[ebp+var_10],', 'edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Alloc@CState@NBZip2@NCompress@@QAE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1492']
mov ['eax,', '8007000Eh']
jmp ['loc_1808']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+702Ch]']
test ['eax,', 'eax']
jz ['short', 'loc_14F4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_14BC']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_1808']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_14D8']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_1808']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_14F4']
mov ['eax,', '[ebp+var_1C]']
jmp ['loc_1808']
jmp ['loc_1449']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+7048h],', '0']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_1515']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_2C],', '4']
jnb ['short', 'loc_152C']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte@CDecoder@NBZip2@NCompress@@AAEEXZ']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+ecx+var_24],', 'al']
jmp ['short', 'loc_150C']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_154B']
mov ['eax,', '1']
jmp ['loc_1808']
movzx ['eax,', '[ebp+var_24]']
cmp ['eax,', '42h']
jnz ['short', 'loc_1578']
movzx ['ecx,', '[ebp+var_23]']
cmp ['ecx,', '5Ah']
jnz ['short', 'loc_1578']
movzx ['edx,', '[ebp+var_22]']
cmp ['edx,', '68h']
jnz ['short', 'loc_1578']
movzx ['eax,', '[ebp+var_21]']
cmp ['eax,', '30h']
jle ['short', 'loc_1578']
movzx ['ecx,', '[ebp+var_21]']
cmp ['ecx,', '39h']
jbe ['short', 'loc_1582']
mov ['eax,', '1']
jmp ['loc_1808']
movzx ['edx,', '[ebp+var_21]']
sub ['edx,', '30h']
imul ['edx,', '186A0h']
mov ['[ebp+var_30],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6FFCh']
call ['?Init@CBZip2CombinedCrc@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+702Ch]']
test ['ecx,', 'ecx']
jz ['loc_170D']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+7030h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+7036h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+7035h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+7034h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7038h']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+7004h]']
add ['ecx,', '18h']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_30]']
mov ['[ecx+7044h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+7040h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+703Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '700Ch']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_1642']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '1']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[eax+7028h]']
jnb ['short', 'loc_166D']
mov ['edx,', '[ebp+var_34]']
imul ['edx,', '11Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+7004h]']
lea ['ecx,', '[ecx+edx+10h]']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
jmp ['short', 'loc_1639']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '700Ch']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7038h']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_169B']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '1']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[eax+7028h]']
jnb ['short', 'loc_16C6']
mov ['edx,', '[ebp+var_34]']
imul ['edx,', '11Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+7004h]']
lea ['ecx,', '[ecx+edx+14h]']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
jmp ['short', 'loc_1692']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7038h']
call ['?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+7040h]']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_16EE']
mov ['eax,', '[ebp+var_38]']
jmp ['loc_1808']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+703Ch]']
mov ['[ebp+var_3C],', 'edx']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_1708']
mov ['eax,', '[ebp+var_3C]']
jmp ['loc_1808']
jmp ['loc_17F0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+7004h]']
mov ['[ebp+var_40],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetRatioProgress@CDecoder@NBZip2@NCompress@@QAEJ_K@Z']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_1742']
mov ['eax,', '[ebp+var_44]']
jmp ['loc_1808']
lea ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadSignature@CDecoder@NBZip2@NCompress@@QAEJAAI@Z']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_175F']
mov ['eax,', '[ebp+var_54]']
jmp ['loc_1808']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7049h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1774']
xor ['eax,', 'eax']
jmp ['loc_1808']
lea ['ecx,', '[ebp+var_64]']
call ['??0CBlockProps@NBZip2@NCompress@@QAE@XZ']
mov ['[ebp+var_5C],', '1']
lea ['edx,', '[ebp+var_64]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '138h']
call ['?ReadBlock@CBase@NBZip2@NCompress@@QAEJPAIIPAUCBlockProps@23@@Z']
mov ['[ebp+var_6C],', 'eax']
cmp ['[ebp+var_6C],', '0']
jz ['short', 'loc_17AA']
mov ['eax,', '[ebp+var_6C]']
jmp ['short', 'loc_1808']
mov ['eax,', '[ebp+var_64]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?DecodeBlock1@NBZip2@NCompress@@YGXPAII@Z']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ecx]']
add ['edx,', '400h']
push ['edx']
lea ['eax,', '[ebp+var_64]']
push ['eax']
call ['?DecodeBlock@NBZip2@NCompress@@YGIABUCBlockProps@12@PAIAAVCOutBuffer@@@Z']
cmp ['eax,', '[ebp+var_4C]']
jz ['short', 'loc_17EB']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+704Ah],', '1']
mov ['eax,', '1']
jmp ['short', 'loc_1808']
jmp ['loc_1719']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetRatioProgress@CDecoder@NBZip2@NCompress@@QAEJ_K@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN39']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '6Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?DecodeBlock1@NBZip2@NCompress@@YGXPAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_18A0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '100h']
jnb ['short', 'loc_18CF']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '[edx+ecx*4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_1897']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '400h']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+ecx*4]']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+var_10]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_C]']
or ['eax,', '[ecx+edx*4]']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+edx*4]']
and ['edx,', '0FFh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+edx*4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+edx*4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+edx*4]']
and ['ecx,', '0FFh']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['ecx,', '[edx+ecx*4]']
and ['ecx,', '0FFh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+arg_4]']
jb ['short', 'loc_18E1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?DecodeBlock@NBZip2@NCompress@@YGIABUCBlockProps@12@PAIAAVCOutBuffer@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_198C']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?DecodeBlock2Rand@NBZip2@NCompress@@YGIPBIIIAAVCOutBuffer@@@Z']
jmp ['short', 'loc_19A6']
jmp ['short', 'loc_19A6']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?DecodeBlock2@NBZip2@NCompress@@YGIPBIIIAAVCOutBuffer@@@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?DecodeBlock2@NBZip2@NCompress@@YGIPBIIIAAVCOutBuffer@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['ecx,', '[ebp+var_8]']
call ['??0CBZip2Crc@@QAE@XZ']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
shr ['edx,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
and ['edx,', '0FFh']
mov ['[ebp+var_14],', 'edx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_10]']
and ['eax,', '0FFh']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_10]']
shr ['ecx,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_18],', '4']
jnz ['short', 'loc_1A65']
jmp ['short', 'loc_1A3B']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jbe ['short', 'loc_1A5C']
mov ['edx,', '[ebp+var_14]']
push ['edx']
lea ['ecx,', '[ebp+var_8]']
call ['?UpdateByte@CBZip2Crc@@QAEXI@Z']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
jmp ['short', 'loc_1A32']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_1A9C']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_14]']
jz ['short', 'loc_1A74']
mov ['[ebp+var_18],', '0']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
lea ['ecx,', '[ebp+var_8]']
call ['?UpdateByte@CBZip2Crc@@QAEXI@Z']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
jnz ['loc_1A10']
lea ['ecx,', '[ebp+var_8]']
call ['?GetDigest@CBZip2Crc@@QBEIXZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?DecodeBlock2Rand@NBZip2@NCompress@@YGIPBIIIAAVCOutBuffer@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['ecx,', '[ebp+var_8]']
call ['??0CBZip2Crc@@QAE@XZ']
mov ['[ebp+var_10],', '1']
movzx ['eax,', '_kRandNums']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
and ['eax,', '0FFh']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
and ['ecx,', '0FFh']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
shr ['edx,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_1BA5']
mov ['edx,', '[ebp+var_24]']
xor ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', '_kRandNums[eax*2]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
and ['eax,', '1FFh']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_18],', '4']
jnz ['short', 'loc_1BE9']
jmp ['short', 'loc_1BBF']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '0']
jbe ['short', 'loc_1BE0']
mov ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
call ['?UpdateByte@CBZip2Crc@@QAEXI@Z']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
jmp ['short', 'loc_1BB6']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_1C20']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+var_20]']
jz ['short', 'loc_1BF8']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
lea ['ecx,', '[ebp+var_8]']
call ['?UpdateByte@CBZip2Crc@@QAEXI@Z']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
jnz ['loc_1B59']
lea ['ecx,', '[ebp+var_8]']
call ['?GetDigest@CBZip2Crc@@QBEIXZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '5Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_6C]']
mov ['ecx,', '17h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+7048h],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[ecx+7049h],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[edx+704Ah],', '0']
mov ['[ebp+var_4],', '0']
push ['20000h']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '140h']
call ['?Create@?$CDecoder@VCInBuffer@@@NBitm@@QAE_NI@Z']
mov ['[ebp+var_55],', 'al']
movzx ['eax,', '[ebp+var_55]']
test ['eax,', 'eax']
jnz ['short', 'loc_1CFD']
mov ['eax,', '8007000Eh']
jmp ['loc_1E85']
push ['20000h']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['?Create@COutBuffer@@QAE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1D1E']
mov ['eax,', '8007000Eh']
jmp ['loc_1E85']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1D36']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '140h']
call ['?SetStream@?$CDecoder@VCInBuffer@@@NBitm@@QAEXPAUISequentialInStream@@@Z']
mov ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@PAV123@@Z']
mov ['[ebp+var_5C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+6FF8h]']
test ['edx,', 'edx']
jz ['short', 'loc_1D6F']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '140h']
call ['?Init@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+6FF8h],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '140h']
call ['?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ']
mov ['[ebp+var_64],', 'eax']
mov ['[ebp+var_60],', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_64]']
mov ['[ecx+6FF0h],', 'edx']
mov ['eax,', '[ebp+var_60]']
mov ['[ecx+6FF4h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '140h']
call ['?AlignToByte@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['?Init@COutBuffer@@QAEXXZ']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?DecodeFile@CDecoder@NBZip2@NCompress@@AAEJPAUICompressProgressInfo@@@Z']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_1DF5']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_44],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+var_44]']
jmp ['loc_1E85']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?Flush@CDecoder@NBZip2@NCompress@@QAEJXZ']
mov ['[ebp+var_6C],', 'eax']
mov ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_48],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+var_48]']
jmp ['short', 'loc_1E85']
endp
__catch$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$0 proc near
mov ['eax,', '[ebp-30h]']
mov ['ecx,', '[eax]']
mov ['[ebp-4Ch],', 'ecx']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN15_1']
retn
endp
__catch$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$1 proc near
mov ['edx,', '[ebp-3Ch]']
mov ['eax,', '[edx]']
mov ['[ebp-50h],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN17']
retn
endp
__catch$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$2 proc near
mov ['dword', 'ptr', '[ebp-54h],', '80004005h']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN19_0']
retn
endp
?Code@CDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+6FF8h],', '1']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['18h']
endp
?CodeResume@CDecoder@NBZip2@NCompress@@QAEJPAUISequentialOutStream@@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetInStream@CDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '138h']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '140h']
call ['?SetStream@?$CDecoder@VCInBuffer@@@NBitm@@QAEXPAUISequentialInStream@@@Z']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?ReleaseInStream@CDecoder@NBZip2@NCompress@@UAGJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '138h']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?Create@CState@NBZip2@NCompress@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1FE6']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_203C']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1FFF']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_203C']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2018']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_203C']
mov ['eax,', '[ebp+var_4]']
push ['eax']
push ['offset', '?MFThread@NBZip2@NCompress@@YGIPAX@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_203A']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_203C']
xor ['eax,', 'eax']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MFThread@NBZip2@NCompress@@YGIPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?FinishStream@CState@NBZip2@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['byte', 'ptr', '[ecx+7035h],', '1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+4]']
add ['ecx,', '7010h']
call ['?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '7038h']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '6Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_7C]']
mov ['ecx,', '1Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '700Ch']
call ['?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+4]']
add ['ecx,', '7010h']
call ['?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7034h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2169']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+4]']
add ['ecx,', '7010h']
call ['?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ']
jmp ['loc_24A6']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+7035h]']
test ['edx,', 'edx']
jz ['short', 'loc_2184']
mov ['ecx,', '[ebp+var_14]']
call ['?FinishStream@CState@NBZip2@NCompress@@QAEXXZ']
jmp ['short', 'loc_2120']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+7030h]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[edx+7028h]']
jnz ['short', 'loc_21BB']
mov ['[ebp+var_20],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+7030h],', 'eax']
mov ['dword', 'ptr', '[ebp+var_34],', '0']
mov ['dword', 'ptr', '[ebp+var_34+4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??0CBlockProps@NBZip2@NCompress@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+4]']
call ['?ReadSignature@CDecoder@NBZip2@NCompress@@QAEJAAI@Z']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_2228']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+703Ch],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?FinishStream@CState@NBZip2@NCompress@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['loc_2120']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
movzx ['eax,', 'byte', 'ptr', '[edx+7049h]']
test ['eax,', 'eax']
jz ['short', 'loc_225C']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+703Ch],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?FinishStream@CState@NBZip2@NCompress@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['loc_2120']
mov ['[ebp+var_3C],', '1']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax+7044h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+4]']
add ['ecx,', '138h']
call ['?ReadBlock@CBase@NBZip2@NCompress@@QAEJPAIIPAUCBlockProps@23@@Z']
mov ['[ebp+var_6C],', 'eax']
mov ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_22BA']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+703Ch],', 'edx']
mov ['ecx,', '[ebp+var_14]']
call ['?FinishStream@CState@NBZip2@NCompress@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['loc_2120']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '140h']
call ['?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_70],', 'edx']
mov ['ecx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_70]']
mov ['dword', 'ptr', '[ebp+var_34+4],', 'edx']
jmp ['short', 'loc_2315']
endp
__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$0 proc near
mov ['eax,', '[ebp-50h]']
mov ['ecx,', '[eax]']
mov ['[ebp-18h],', 'ecx']
cmp ['dword', 'ptr', '[ebp-18h],', '0']
jz ['short', 'loc_22F4']
mov ['dword', 'ptr', '[ebp-18h],', '80004005h']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$2']
retn
endp
__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$1 proc near
mov ['dword', 'ptr', '[ebp-18h],', '80004005h']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$2']
retn
endp
__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$3 proc near
mov ['eax,', '[ebp-60h]']
mov ['ecx,', '[eax]']
mov ['[ebp-18h],', 'ecx']
cmp ['dword', 'ptr', '[ebp-18h],', '0']
jz ['short', 'loc_2404']
mov ['dword', 'ptr', '[ebp-18h],', '80004005h']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$5']
retn
endp
__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$4 proc near
mov ['dword', 'ptr', '[ebp-18h],', '80004005h']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '__tryend$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$5']
retn
endp
?SetNumberOfThreads@CDecoder@NBZip2@NCompress@@UAGJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+7024h],', 'ecx']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+7024h],', '1']
jnb ['short', 'loc_2548']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+7024h],', '1']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+7024h],', '4']
jbe ['short', 'loc_2561']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+7024h],', '4']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?SetRatioProgress@CDecoder@NBZip2@NCompress@@QAEJ_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+7000h],', '0']
jnz ['short', 'loc_259E']
xor ['eax,', 'eax']
jmp ['short', 'loc_25F5']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0]']
sub ['edx,', '[ecx+6FF0h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
sbb ['eax,', '[ecx+6FF4h]']
mov ['dword', 'ptr', '[ebp+arg_0],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_0+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+7000h]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+7000h]']
mov ['ecx,', '[ecx]']
push ['eax']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetInStream@CNsisDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '14h']
call ['?SetStream@?$CDecoder@VCInBuffer@@@NBitm@@QAEXPAUISequentialInStream@@@Z']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?ReleaseInStream@CNsisDecoder@NBZip2@NCompress@@UAGJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?SetOutStreamSize@CNsisDecoder@NBZip2@NCompress@@UAGJPB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+6FDCh],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '5Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_6C]']
mov ['ecx,', '17h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+6FE4h],', '3']
jnz ['short', 'loc_270E']
xor ['eax,', 'eax']
jmp ['loc_2ABB']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+6FE4h],', '4']
jnz ['short', 'loc_2724']
mov ['eax,', '1']
jmp ['loc_2ABB']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_2731']
xor ['eax,', 'eax']
jmp ['loc_2ABB']
mov ['eax,', '[ebp+this]']
add ['eax,', '6EC8h']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+6FE4h],', '0']
jnz ['short', 'loc_27A2']
push ['20000h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Create@?$CDecoder@VCInBuffer@@@NBitm@@QAE_NI@Z']
mov ['[ebp+var_61],', 'al']
movzx ['edx,', '[ebp+var_61]']
test ['edx,', 'edx']
jnz ['short', 'loc_276D']
mov ['eax,', '8007000Eh']
jmp ['loc_2ABB']
mov ['ecx,', '[ebp+var_14]']
call ['?Alloc@CState@NBZip2@NCompress@@QAE_NXZ']
mov ['[ebp+var_62],', 'al']
movzx ['eax,', '[ebp+var_62]']
test ['eax,', 'eax']
jnz ['short', 'loc_278A']
mov ['eax,', '8007000Eh']
jmp ['loc_2ABB']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Init@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+6FE4h],', '1']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+6FE4h],', '1']
jnz ['loc_28C4']
push ['8']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z']
mov ['[ebp+var_68],', 'eax']
mov ['al,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[ebp+var_15],', 'al']
movzx ['ecx,', '[ebp+var_15]']
cmp ['ecx,', '17h']
jnz ['short', 'loc_27E5']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+6FE4h],', '3']
xor ['eax,', 'eax']
jmp ['loc_2ABB']
movzx ['eax,', '[ebp+var_15]']
cmp ['eax,', '31h']
jz ['short', 'loc_2805']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+6FE4h],', '4']
mov ['eax,', '1']
jmp ['loc_2ABB']
lea ['ecx,', '[ebp+var_28]']
call ['??0CBlockProps@NBZip2@NCompress@@QAE@XZ']
mov ['[ebp+var_20],', '0']
lea ['edx,', '[ebp+var_28]']
push ['edx']
push ['0DBBA0h']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?ReadBlock@CBase@NBZip2@NCompress@@QAEJPAIIPAUCBlockProps@23@@Z']
mov ['[ebp+var_6C],', 'eax']
mov ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_30],', 'edx']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_2842']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_2ABB']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_28]']
mov ['[eax+6FF8h],', 'ecx']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?DecodeBlock1@NBZip2@NCompress@@YGXPAII@Z']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
add ['eax,', '400h']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+ecx*4]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+eax*4]']
mov ['[ecx+6FE8h],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+6FE8h]']
and ['edx,', '0FFh']
mov ['eax,', '[ebp+this]']
mov ['[eax+6FECh],', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+6FF4h],', '0']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+6FF0h],', '0']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+6FE4h],', '2']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+6FE8h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+6FECh]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+6FF4h]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+6FF8h]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
add ['ecx,', '400h']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+6FF0h],', '0']
jz ['short', 'loc_2955']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+6FF0h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+6FF0h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_3C]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jnz ['short', 'loc_2953']
xor ['eax,', 'eax']
jmp ['loc_2ABB']
jmp ['short', 'loc_2902']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_296F']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+6FE4h],', '1']
xor ['eax,', 'eax']
jmp ['loc_2ABB']
mov ['edx,', '[ebp+var_38]']
and ['edx,', '0FFh']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '[ebp+var_38]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_40],', '4']
jnz ['short', 'loc_29EA']
mov ['[ebp+var_40],', '0']
cmp ['[ebp+var_4C],', '0']
jz ['short', 'loc_29DC']
mov ['ecx,', '[ebp+var_4C]']
sub ['ecx,', '1']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', 'byte', 'ptr', '[ebp+var_3C]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
jnz ['short', 'loc_29DA']
jmp ['short', 'loc_29DC']
jmp ['short', 'loc_29A0']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_4C]']
mov ['[eax+6FF0h],', 'ecx']
jmp ['short', 'loc_2A2F']
mov ['edx,', '[ebp+var_4C]']
cmp ['edx,', '[ebp+var_3C]']
jz ['short', 'loc_29F9']
mov ['[ebp+var_40],', '0']
mov ['eax,', '[ebp+var_40]']
add ['eax,', '1']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', 'byte', 'ptr', '[ebp+var_4C]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2A3F']
cmp ['[ebp+var_44],', '0']
jnz ['loc_296F']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+6FE8h],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_3C]']
mov ['[edx+6FECh],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_40]']
mov ['[ecx+6FF4h],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+6FF8h],', 'ecx']
xor ['eax,', 'eax']
jmp ['short', 'loc_2ABB']
endp
__catch$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z$0 proc near
mov ['edx,', '[ebp-54h]']
mov ['eax,', '[edx]']
mov ['[ebp-5Ch],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN31']
retn
endp
__catch$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z$1 proc near
mov ['dword', 'ptr', '[ebp-60h],', '1']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN33']
retn
endp
?StartInit@CMtf8Decoder@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+Dst],', '0CCCCCCCCh']
mov ['[ebp+Dst],', 'ecx']
push ['100h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@CMtf8Decoder@NCompress@@QAEXIE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '2']
movzx ['edx,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '3']
shl ['ecx,', '3']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+var_4]']
or ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+eax*4],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetHead@CMtf8Decoder@NCompress@@QBEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetAndMove@CMtf8Decoder@NCompress@@QAEEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '3']
shl ['ecx,', '3']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+edx*4]']
mov ['ecx,', '[ebp+arg_0]']
shr ['edx,', 'cl']
and ['edx,', '0FFh']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '1']
jz ['short', 'loc_2C33']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '8']
or ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_14]']
shr ['edx,', '18h']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_10],', '1']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2C3E']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_2C94']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4+4]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_18]']
shl ['eax,', '8']
or ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_18]']
shr ['ecx,', '18h']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+edx*4+4],', 'eax']
mov ['edx,', '[ebp+var_1C]']
shr ['edx,', '18h']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_2C35']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '100h']
mov ['ecx,', '[ebp+arg_0]']
shl ['eax,', 'cl']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
not ['ecx']
and ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_20]']
shl ['edx,', '8']
or ['edx,', '[ebp+var_C]']
and ['edx,', '[ebp+var_24]']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+eax*4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1COutBuffer@@QAE@XZ']
endp
__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '138h']
jmp ['??1CBase@NBZip2@NCompress@@QAE@XZ']
endp
__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '700Ch']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7010h']
jmp ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??0CDecoder@NBZip2@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CDecoder@NBZip2@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1COutBuffer@@QAE@XZ']
endp
__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '138h']
jmp ['??1CBase@NBZip2@NCompress@@QAE@XZ']
endp
__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '700Ch']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7010h']
jmp ['??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7038h']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??1CDecoder@NBZip2@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDecoder@NBZip2@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ$2 proc near
mov ['eax,', '[ebp-34h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-44h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$4 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@XZ']
endp
__ehhandler$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-70h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-80h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-70h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z']
jmp ['___CxxFrameHandler3']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_CriticalSection_Init@4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__DeleteCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBZip2CombinedCrc@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBase@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+6EB0h],', '0']
mov ['dword', 'ptr', '[eax+6EB4h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CInBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CInBufferBase@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CDecoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_34E4']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_353B']
push ['offset', '_IID_ICompressCoder']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_3500']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_353B']
push ['offset', '_IID_ICompressSetCoderMt']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_3534']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_3523']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_352A']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_353B']
mov ['eax,', '80004002h']
jmp ['short', 'loc_354C']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+8],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CDecoder@NBZip2@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@NBZip2@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_3606']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
jmp ['short', 'loc_3630']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3627']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCDecoder@NBZip2@NCompress@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_362E']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCDecoder@NBZip2@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDecoder@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_366A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CBase@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CBase@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CBase@NBZip2@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$??1CBase@NBZip2@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CBase@NBZip2@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CInBuffer@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CInBuffer@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CInBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetCoderMt@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetCoderMt@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3925']
xor ['eax,', 'eax']
jmp ['short', 'loc_392E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ManualResetEvent_CreateNotSignaled@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setnz ['cl']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CState@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CState@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CThread@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CState@NBZip2@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CThread@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CState@NBZip2@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??0CState@NBZip2@NCompress@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??0CState@NBZip2@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CState@NBZip2@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CThread@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CThread@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CThread@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CThread@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CState@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CState@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
call ['?Free@CState@NBZip2@NCompress@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CThread@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CThread@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__ehhandler$??1CState@NBZip2@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CState@NBZip2@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_ECState@NBZip2@NCompress@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_3C97']
push ['offset', '??1CState@NBZip2@NCompress@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx-4]']
push ['edx']
push ['11Ch']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1']
jz ['short', 'loc_3C8F']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '4']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '4']
jmp ['short', 'loc_3CB6']
mov ['ecx,', '[ebp+var_4]']
call ['??1CState@NBZip2@NCompress@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3CB3']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Event_Set@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Wait@CThread@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_Handle_WaitObject@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Update@CBZip2CombinedCrc@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
shr ['eax,', '1Fh']
or ['ecx,', 'eax']
xor ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetDigest@CBZip2CombinedCrc@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Event_Reset@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_Handle_WaitObject@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CBZip2CombinedCrc@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBlockProps@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WriteByte@COutBuffer@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_3E40']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CBZip2Crc@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?UpdateByte@CBZip2Crc@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
shr ['ecx,', '18h']
xor ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
shl ['eax,', '8']
xor ['eax,', 'dword', 'ptr', 'ds:?Table@CBZip2Crc@@0PAIA[ecx*4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetDigest@CBZip2Crc@@QBEIXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
xor ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@PAV123@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+4],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3F73']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx]']
call ['?Flush@CDecoder@NBZip2@NCompress@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Flush@CDecoder@NBZip2@NCompress@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?Flush@COutBuffer@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3FCD']
xor ['eax,', 'eax']
jmp ['short', 'loc_3FD6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_AutoResetEvent_CreateNotSignaled@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_Thread_Create@12']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LeaveCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+lpCriticalSection],', '0CCCCCCCCh']
mov ['[ebp+lpCriticalSection],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpCriticalSection]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnterCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_40CE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_411B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_4158']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_417B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Create@?$CDecoder@VCInBuffer@@@NBitm@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Create@CInBuffer@@QAE_NI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@?$CDecoder@VCInBuffer@@@NBitm@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Init@CInBufferBase@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '20h']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?Normalize@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?GetProcessedSize@CInBufferBase@@QBE_KXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '20h']
sub ['esi,', '[ecx]']
shr ['esi,', '3']
xor ['ecx,', 'ecx']
sub ['eax,', 'esi']
sbb ['edx,', 'ecx']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessedSize@CInBufferBase@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
xor ['esi,', 'esi']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
adc ['esi,', '[edx+14h]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[eax]']
sub ['eax,', '[edx+8]']
cdq
add ['ecx,', 'eax']
adc ['esi,', 'edx']
mov ['eax,', 'ecx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+28h],', '4']
ja ['short', 'loc_4314']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '20h']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
shl ['ecx,', '3']
cmp ['edx,', 'ecx']
jb ['short', 'loc_4314']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_431B']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ExtraBitsWereRead_Fast@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '4']
cmp ['ecx,', '[eax+28h]']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadBits@?$CDecoder@VCInBuffer@@@NBitm@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?GetValue@?$CDecoder@VCInBuffer@@@NBitm@@QBEII@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MovePos@?$CDecoder@VCInBuffer@@@NBitm@@QAEXI@Z']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AlignToByte@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '20h']
sub ['ecx,', '[eax]']
and ['ecx,', '7']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MovePos@?$CDecoder@VCInBuffer@@@NBitm@@QAEXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetCodeLengths@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAE_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_C4],', '1']
jmp ['short', 'loc_440A']
mov ['eax,', '[ebp+var_C4]']
add ['eax,', '1']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '14h']
ja ['short', 'loc_4423']
mov ['ecx,', '[ebp+var_C4]']
mov ['[ebp+ecx*4+var_60],', '0']
jmp ['short', 'loc_43FB']
mov ['[ebp+var_C8],', '0']
jmp ['short', 'loc_443E']
mov ['edx,', '[ebp+var_C8]']
add ['edx,', '1']
mov ['[ebp+var_C8],', 'edx']
cmp ['[ebp+var_C8],', '102h']
jnb ['short', 'loc_4499']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_C8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_CC],', 'ecx']
cmp ['[ebp+var_CC],', '14h']
jbe ['short', 'loc_446C']
xor ['al,', 'al']
jmp ['loc_4679']
mov ['edx,', '[ebp+var_CC]']
mov ['eax,', '[ebp+edx*4+var_60]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_CC]']
mov ['[ebp+ecx*4+var_60],', 'eax']
mov ['edx,', '[ebp+var_C8]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4+0A8h],', '0FFFFFFFFh']
jmp ['short', 'loc_442F']
mov ['[ebp+var_60],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+54h],', '0']
mov ['[ebp+var_D0],', '0']
mov ['[ebp+var_D4],', '0']
mov ['[ebp+var_D8],', '100000h']
mov ['[ebp+var_C4],', '1']
jmp ['short', 'loc_44EC']
mov ['eax,', '[ebp+var_C4]']
add ['eax,', '1']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '14h']
ja ['loc_45F9']
mov ['ecx,', '14h']
sub ['ecx,', '[ebp+var_C4]']
mov ['edx,', '[ebp+var_C4]']
mov ['eax,', '[ebp+edx*4+var_60]']
shl ['eax,', 'cl']
add ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_D0],', 'eax']
cmp ['[ebp+var_D0],', '100000h']
jbe ['short', 'loc_452F']
xor ['al,', 'al']
jmp ['loc_4679']
cmp ['[ebp+var_C4],', '14h']
jnz ['short', 'loc_4544']
mov ['[ebp+var_E4],', '100000h']
jmp ['short', 'loc_4550']
mov ['ecx,', '[ebp+var_D0]']
mov ['[ebp+var_E4],', 'ecx']
mov ['edx,', '[ebp+var_C4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_E4]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_C4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4+50h]']
mov ['edx,', '[ebp+var_C4]']
add ['ecx,', '[ebp+edx*4+var_64]']
mov ['eax,', '[ebp+var_C4]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+eax*4+54h],', 'ecx']
mov ['eax,', '[ebp+var_C4]']
mov ['ecx,', '[ebp+var_C4]']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+ecx*4+54h]']
mov ['[ebp+eax*4+var_BC],', 'ecx']
cmp ['[ebp+var_C4],', '9']
ja ['short', 'loc_45F4']
mov ['edx,', '[ebp+var_C4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4]']
shr ['ecx,', '0Bh']
mov ['[ebp+var_DC],', 'ecx']
jmp ['short', 'loc_45CF']
mov ['edx,', '[ebp+var_D4]']
add ['edx,', '1']
mov ['[ebp+var_D4],', 'edx']
mov ['eax,', '[ebp+var_D4]']
cmp ['eax,', '[ebp+var_DC]']
jnb ['short', 'loc_45F4']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_D4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_C4]']
mov ['[ecx+4B0h],', 'dl']
jmp ['short', 'loc_45C0']
jmp ['loc_44DD']
mov ['[ebp+var_C8],', '0']
jmp ['short', 'loc_4614']
mov ['eax,', '[ebp+var_C8]']
add ['eax,', '1']
mov ['[ebp+var_C8],', 'eax']
cmp ['[ebp+var_C8],', '102h']
jnb ['short', 'loc_4677']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_C8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_E0],', 'edx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_4675']
mov ['eax,', '[ebp+var_E0]']
mov ['ecx,', '[ebp+eax*4+var_BC]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C8]']
mov ['[edx+ecx*4+0A8h],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[ebp+ecx*4+var_BC]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_E0]']
mov ['[ebp+eax*4+var_BC],', 'edx']
jmp ['short', 'loc_4605']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Normalize@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_46F2']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '8']
jb ['short', 'loc_471B']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '[ecx+4]']
shl ['esi,', '8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ReadByte@CInBufferBase@@QAEEXZ']
movzx ['edx,', 'al']
or ['esi,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'esi']
jmp ['short', 'loc_46E5']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadByte@CInBufferBase@@QAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+4]']
jb ['short', 'loc_475A']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ']
jmp ['short', 'loc_4774']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['dl,', '[ecx]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetValue@?$CDecoder@VCInBuffer@@@NBitm@@QBEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '8']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shr ['eax,', 'cl']
and ['eax,', '0FFFFFFh']
mov ['ecx,', '18h']
sub ['ecx,', '[ebp+arg_0]']
shr ['eax,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MovePos@?$CDecoder@VCInBuffer@@@NBitm@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Normalize@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitm@@@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitm@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['14h']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetValue@?$CDecoder@VCInBuffer@@@NBitm@@QBEII@Z']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+24h]']
jnb ['short', 'loc_4838']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '0Bh']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+4B0h]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_485A']
mov ['[ebp+var_8],', '0Ah']
jmp ['short', 'loc_484A']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+eax*4]']
jb ['short', 'loc_485A']
jmp ['short', 'loc_4841']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?MovePos@?$CDecoder@VCInBuffer@@@NBitm@@QAEXI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '14h']
sub ['ecx,', '[ebp+var_8]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+ecx*4+54h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '102h']
jb ['short', 'loc_4898']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_48A5']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax*4+0A8h]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?QueryInterface@CDecoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CDecoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NBZip2@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CDecoder@NBZip2@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NBZip2@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CDecoder@NBZip2@NCompress@@UAGKXZ']
endp

?SetFromLastError@CUpdateErrorInfo@@QAEXPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??4AString@@QAEAAV0@PBD@Z']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetFromLastError@CUpdateErrorInfo@@QAEJPBDABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetFromLastError@CUpdateErrorInfo@@QAEXPBD@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?Get_HRESULT_Error@CUpdateErrorInfo@@QBEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Close@COutMultiVolStream@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_392']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['?Size@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['short', 'loc_3D5']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??A?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEAAUCAltStreamInfo@COutMultiVolStream@@I@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_3D3']
mov ['ecx,', '[ebp+var_10]']
call ['?Close@COutFileStream@@QAEJXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3D3']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_389']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetMTime@COutMultiVolStream@@QAE_NPBU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_8+3],', '1']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_41C']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['?Size@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['short', 'loc_45F']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??A?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEAAUCAltStreamInfo@COutMultiVolStream@@I@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_45D']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?SetMTime@COutFileStream@@QAE_NPBU_FILETIME@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_45D']
mov ['byte', 'ptr', '[ebp+var_8+3],', '0']
jmp ['short', 'loc_413']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Write@COutMultiVolStream@@UAGJPBXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_4B2']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_8],', '0']
jbe ['loc_969']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['?Size@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QBEIXZ']
mov ['ecx,', '[ebp+this]']
cmp ['[ecx+8],', 'eax']
jb ['loc_620']
lea ['ecx,', '[ebp+var_30]']
call ['??0CAltStreamInfo@COutMultiVolStream@@QAE@XZ']
lea ['edx,', '[ebp+var_58]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPA_W@Z']
lea ['edx,', '[ebp+var_58]']
push ['edx']
lea ['ecx,', '[ebp+var_6C]']
call ['??0UString@@QAE@PB_W@Z']
lea ['ecx,', '[ebp+var_6C]']
call ['?Len@UString@@QBEIXZ']
cmp ['eax,', '3']
jnb ['short', 'loc_513']
push ['30h']
lea ['ecx,', '[ebp+var_6C]']
call ['?InsertAtFront@UString@@QAEX_W@Z']
jmp ['short', 'loc_4FA']
mov ['eax,', '[ebp+this]']
add ['eax,', '40h']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_6C]']
call ['?Insert@UString@@QAEXIABV1@@Z']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0']
jz ['short', 'loc_550']
mov ['ecx,', '[ebp+var_A0]']
call ['??0COutFileStream@@QAE@XZ']
mov ['[ebp+var_A8],', 'eax']
jmp ['short', 'loc_55A']
mov ['[ebp+var_A8],', '0']
mov ['ecx,', '[ebp+var_A8]']
mov ['[ebp+var_9C],', 'ecx']
mov ['edx,', '[ebp+var_9C]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z']
push ['0']
lea ['ecx,', '[ebp+var_6C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
call ['?Create@COutFileStream@@QAE_NPB_W_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5C5']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_A4],', 'eax']
lea ['ecx,', '[ebp+var_6C]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_30]']
call ['??1CAltStreamInfo@COutMultiVolStream@@QAE@XZ']
mov ['eax,', '[ebp+var_A4]']
jmp ['loc_96B']
lea ['edx,', '[ebp+var_6C]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4Ch]']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_C],', '0']
lea ['ecx,', '[ebp+var_6C]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['?Add@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEIABUCAltStreamInfo@COutMultiVolStream@@@Z']
lea ['ecx,', '[ebp+var_6C]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_30]']
call ['??1CAltStreamInfo@COutMultiVolStream@@QAE@XZ']
jmp ['loc_4B2']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['??A?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEAAUCAltStreamInfo@COutMultiVolStream@@I@Z']
mov ['[ebp+var_74],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_78],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '34h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+var_78],', 'eax']
jb ['short', 'loc_65F']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '34h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
sub ['eax,', '1']
mov ['[ebp+var_78],', 'eax']
mov ['ecx,', '[ebp+var_78]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '34h']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_80],', 'edx']
mov ['eax,', '[eax+4]']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_AC],', 'ecx']
mov ['edx,', '[ebp+var_AC]']
mov ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+var_7C]']
jb ['short', 'loc_6CC']
ja ['short', 'loc_6A0']
mov ['ecx,', '[ebp+var_AC]']
mov ['edx,', '[ecx+10h]']
cmp ['edx,', '[ebp+var_80]']
jb ['short', 'loc_6CC']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '[ebp+var_80]']
mov ['edx,', '[eax+14h]']
sbb ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+8],', 'edx']
jmp ['loc_4B2']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_74]']
mov ['[ebp+var_B0],', 'ecx']
mov ['[ebp+var_B4],', 'edx']
mov ['eax,', '[ebp+var_B0]']
mov ['ecx,', '[ebp+var_B4]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+18h]']
jnz ['short', 'loc_706']
mov ['eax,', '[ebp+var_B0]']
mov ['ecx,', '[ebp+var_B4]']
mov ['edx,', '[eax+14h]']
cmp ['edx,', '[ecx+1Ch]']
jz ['short', 'loc_76F']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '4']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_B8],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
mov ['eax,', '[ebp+var_B8]']
push ['eax']
mov ['ecx,', '[ebp+var_B8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_84],', 'eax']
cmp ['[ebp+var_84],', '0']
jz ['short', 'loc_75D']
mov ['eax,', '[ebp+var_84]']
jmp ['loc_96B']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+18h],', 'eax']
mov ['edx,', '[edx+14h]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_80]']
sub ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_7C]']
sbb ['edx,', '[eax+1Ch]']
push ['edx']
push ['ecx']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
call ['??$MyMin@_K@@YG_K_K0@Z']
mov ['[ebp+var_88],', 'eax']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '4']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_BC],', 'eax']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_90]']
push ['edx']
mov ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_BC]']
push ['edx']
mov ['eax,', '[ebp+var_BC]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_98],', 'eax']
cmp ['[ebp+var_98],', '0']
jz ['short', 'loc_7EC']
mov ['eax,', '[ebp+var_98]']
jmp ['loc_96B']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_90]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_90]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+var_90]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_74]']
add ['edx,', '[ecx+18h]']
adc ['eax,', '[ecx+1Ch]']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx+18h],', 'edx']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+var_90]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+10h]']
adc ['eax,', '[ecx+14h]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+10h],', 'edx']
mov ['[ecx+14h],', 'eax']
mov ['edx,', '[ebp+var_90]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+18h]']
adc ['eax,', '[ecx+1Ch]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+18h],', 'edx']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['[ebp+var_C0],', 'edx']
mov ['[ebp+var_C4],', 'eax']
mov ['ecx,', '[ebp+var_C0]']
mov ['edx,', '[ebp+var_C4]']
mov ['eax,', '[ecx+1Ch]']
cmp ['eax,', '[edx+24h]']
jb ['short', 'loc_8A0']
ja ['short', 'loc_88E']
mov ['ecx,', '[ebp+var_C0]']
mov ['edx,', '[ebp+var_C4]']
mov ['eax,', '[ecx+18h]']
cmp ['eax,', '[edx+20h]']
jbe ['short', 'loc_8A0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+18h]']
mov ['[ecx+20h],', 'eax']
mov ['edx,', '[edx+1Ch]']
mov ['[ecx+24h],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_74]']
mov ['[ebp+var_C8],', 'eax']
mov ['[ebp+var_CC],', 'ecx']
mov ['edx,', '[ebp+var_C8]']
mov ['eax,', '[ebp+var_CC]']
mov ['ecx,', '[edx+14h]']
cmp ['ecx,', '[eax+24h]']
jb ['short', 'loc_8EE']
ja ['short', 'loc_8DC']
mov ['edx,', '[ebp+var_C8]']
mov ['eax,', '[ebp+var_CC]']
mov ['ecx,', '[edx+10h]']
cmp ['ecx,', '[eax+20h]']
jbe ['short', 'loc_8EE']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
mov ['[edx+20h],', 'ecx']
mov ['eax,', '[eax+14h]']
mov ['[edx+24h],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_904']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+var_90]']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_74]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_D0]']
mov ['eax,', '[edx+18h]']
cmp ['eax,', '[ebp+var_80]']
jnz ['short', 'loc_949']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ecx+1Ch]']
cmp ['edx,', '[ebp+var_7C]']
jnz ['short', 'loc_949']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
cmp ['[ebp+var_90],', '0']
jnz ['short', 'loc_962']
cmp ['[ebp+var_88],', '0']
jz ['short', 'loc_962']
mov ['eax,', '80004005h']
jmp ['short', 'loc_96B']
jmp ['short', 'loc_969']
jmp ['loc_4B2']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN32']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@COutMultiVolStream@@UAGJ_JIPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_C],', '3']
jb ['short', 'loc_A17']
mov ['eax,', '80030001h']
jmp ['loc_AA9']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_A31']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_A42']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_A5C']
jmp ['short', 'loc_A74']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+1Ch],', 'eax']
jmp ['short', 'loc_A74']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+18h]']
add ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['eax,', '[ecx+1Ch]']
adc ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+18h],', 'edx']
mov ['[ecx+1Ch],', 'eax']
jmp ['short', 'loc_A74']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+20h]']
add ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['ecx,', '[edx+24h]']
adc ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['edx,', '[ebp+this]']
mov ['[edx+18h],', 'eax']
mov ['[edx+1Ch],', 'ecx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ecx+1Ch]']
mov ['[eax+14h],', 'ecx']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_A9D']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+18h]']
mov ['[edx],', 'ecx']
mov ['eax,', '[eax+1Ch]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+8],', '0']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?SetSize@COutMultiVolStream@@UAGJ_K@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
ja ['short', 'loc_AF5']
jb ['short', 'loc_AEB']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_AF5']
mov ['eax,', '80070057h']
jmp ['loc_C2C']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['?Size@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jnb ['loc_BB8']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['??A?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEAAUCAltStreamInfo@COutMultiVolStream@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
cmp ['edx,', '[ecx+24h]']
ja ['short', 'loc_B9E']
jb ['short', 'loc_B4F']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
cmp ['ecx,', '[eax+20h]']
jnb ['short', 'loc_B9E']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+14h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_B8D']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_C2C']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[edx+24h],', 'ecx']
jmp ['short', 'loc_BB8']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
sub ['eax,', '[edx+20h]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
sbb ['ecx,', '[edx+24h]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'eax']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'ecx']
jmp ['loc_AFC']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['?Size@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jnb ['short', 'loc_BFF']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['?Back@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEAAUCAltStreamInfo@COutMultiVolStream@@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['?Release@?$CMyComPtr@UIOutStream@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
call ['?DeleteBack@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEXXZ']
jmp ['short', 'loc_BB8']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+18h]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[eax+1Ch]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+this]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[edx+24h],', 'ecx']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ParseFromPath@CArchivePath@@QAEXABVUString@@W4EArcNameMode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ParseFromPath@CArchivePath@@QAEXABVUString@@W4EArcNameMode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '0Ch']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?SplitPathToParts_2@@YGXABVUString@@AAV1@1@Z']
cmp ['[ebp+arg_4],', '2']
jnz ['short', 'loc_CBC']
jmp ['loc_D8D']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_CD2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['?Empty@UString@@QAEXXZ']
jmp ['loc_D8D']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['?ReverseFind_Dot@UString@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_CEB']
jmp ['loc_D8D']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['?Len@UString@@QBEIXZ']
sub ['eax,', '1']
cmp ['[ebp+var_14],', 'eax']
jnz ['short', 'loc_D16']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['?DeleteBack@UString@@QAEXXZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['?Empty@UString@@QAEXXZ']
jmp ['short', 'loc_D8D']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_D73']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['?DeleteFrom@UString@@QAEXI@Z']
jmp ['short', 'loc_D7E']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['?Empty@UString@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1UString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_28],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?GetPathWithoutExt@CArchivePath@@QBE?AVUString@@XZ']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_E63']
push ['2Eh']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@_W@Z']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '24h']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_28]']
or ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetFinalVolPath@CArchivePath@@QBE?AVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetFinalVolPath@CArchivePath@@QBE?AVUString@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_28],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?GetPathWithoutExt@CArchivePath@@QBE?AVUString@@XZ']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_F63']
push ['2Eh']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@_W@Z']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '30h']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_28]']
or ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetTempPathA@CArchivePath@@QBE?AVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetTempPathA@CArchivePath@@QBE?AVUString@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '40h']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1075']
push ['2Eh']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@_W@Z']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '24h']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
push ['offset', '$SG74378']
lea ['ecx,', '[ebp+var_20]']
call ['?AddAscii@UString@@QAEXPBD@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_28]']
or ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?InitFormatIndex@CUpdateOptions@@QAE_NPBVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@UCOpenType@@@@QBEIXZ']
cmp ['eax,', '1']
jbe ['short', 'loc_1148']
xor ['al,', 'al']
jmp ['short', 'loc_11C2']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@UCOpenType@@@@QBEIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_1173']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@UCOpenType@@@@QBEABUCOpenType@@I@Z']
mov ['edi,', '[ebp+var_4]']
add ['edi,', '8']
mov ['ecx,', '8']
mov ['esi,', 'eax']
rep ['movsd']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jge ['short', 'loc_11C0']
lea ['ecx,', '[ebp+var_24]']
call ['??0COpenType@@QAE@XZ']
mov ['edi,', '[ebp+var_4]']
add ['edi,', '8']
mov ['ecx,', '8']
mov ['esi,', 'eax']
rep ['movsd']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0A0h],', '2']
jz ['short', 'loc_11C0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?FindFormatForArchiveName@CCodecs@@QBEHABVUString@@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jl ['short', 'loc_11C0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '1']
mov ['al,', '1']
pop ['edi']
pop ['esi']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SetArcPath@CUpdateOptions@@QAE_NPBVCCodecs@@ABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetArcPath@CUpdateOptions@@QAE_NPBVCCodecs@@ABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '58h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_64]']
mov ['ecx,', '16h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_28],', '0']
jge ['short', 'loc_1245']
mov ['edx,', 'ds:_kDefaultArcExt']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['??4UString@@QAEAAV0@PB_W@Z']
jmp ['short', 'loc_12AE']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
call ['??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+28h]']
test ['edx,', 'edx']
jnz ['short', 'loc_127D']
mov ['[ebp+var_49],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['al,', '[ebp+var_49]']
jmp ['loc_13A0']
lea ['eax,', '[ebp+var_58]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?GetMainExt@CArcInfoEx@@QBE?AVUString@@XZ']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_60]']
mov ['[ebp+var_64],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_64]']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_58]']
call ['??1UString@@QAE@XZ']
lea ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0A4h]']
test ['edx,', 'edx']
jz ['short', 'loc_12DA']
mov ['eax,', 'ds:_kSFXExtension']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
call ['?SetFromAscii@UString@@QAEXPBD@Z']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??4UString@@QAEAAV0@ABV0@@Z']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '78h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+0A0h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['?ParseFromPath@CArchivePath@@QAEXABVUString@@W4EArcNameMode@@@Z']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_1323']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['?Size@?$CObjectVector@UCUpdateArchiveCommand@@@@QBEIXZ']
cmp ['[ebp+var_44],', 'eax']
jnb ['short', 'loc_137E']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??A?$CObjectVector@UCUpdateArchiveCommand@@@@QAEAAUCUpdateArchiveCommand@@I@Z']
mov ['[ebp+var_48],', 'eax']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '30h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '3Ch']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0A0h]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '0Ch']
call ['?ParseFromPath@CArchivePath@@QAEXABVUString@@W4EArcNameMode@@@Z']
jmp ['short', 'loc_131A']
mov ['[ebp+var_59],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['al,', '[ebp+var_59]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '64h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ShowDeleteFile@CUpdateProduceCallbackImp@@UAEJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+4]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Prepare@CRenamePair@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+1Ch],', '2']
jz ['short', 'loc_1487']
xor ['al,', 'al']
jmp ['short', 'loc_14A9']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+18h]']
test ['edx,', 'edx']
jnz ['short', 'loc_1496']
mov ['al,', '1']
jmp ['short', 'loc_14A9']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?DoesNameContainWildcard@@YG_NABVUString@@@Z']
movzx ['eax,', 'al']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetNewPath@CRenamePair@@QBE_N_NABVUString@@AAV2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetNewPath@CRenamePair@@QBE_N_NABVUString@@AAV2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CompareTwoNames@@YGIPB_W0@Z']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
test ['edx,', 'edx']
jnz ['short', 'loc_1586']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
test ['edx,', 'edx']
jz ['short', 'loc_1584']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
push ['edx']
call ['?IsPathSepar@@YG_N_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1584']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1584']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2-2]']
push ['edx']
call ['?IsPathSepar@@YG_N_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1584']
xor ['al,', 'al']
jmp ['loc_161F']
jmp ['short', 'loc_15D5']
movzx ['ecx,', '[ebp+arg_0]']
test ['ecx,', 'ecx']
jz ['short', 'loc_15D1']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[eax+edx*2]']
test ['eax,', 'eax']
jnz ['short', 'loc_15D1']
mov ['ecx,', '[ebp+var_10]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
push ['edx']
call ['?IsPathSepar@@YG_N_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_15D1']
mov ['ecx,', '[ebp+var_10]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2+2]']
test ['edx,', 'edx']
jz ['short', 'loc_15D5']
xor ['al,', 'al']
jmp ['short', 'loc_161F']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
call ['??H@YG?AVUString@@ABV0@PB_W@Z']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['al,', '1']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?CompareTwoNames@@YGIPB_W0@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_166A']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx+ecx*2]']
mov ['word', 'ptr', '[ebp+var_8],', 'ax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[edx+ecx*2]']
mov ['word', 'ptr', '[ebp+var_C],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1696']
movzx ['edx,', 'word', 'ptr', '[ebp+var_C]']
test ['edx,', 'edx']
jnz ['short', 'loc_169B']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_1705']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_C]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_16A9']
jmp ['short', 'loc_1661']
movzx ['edx,', 'byte', 'ptr', 'ds:?g_CaseSensitive@@3_NA']
test ['edx,', 'edx']
jnz ['short', 'loc_16D4']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
push ['eax']
call ['?MyCharUpper@@YG_W_W@Z']
movzx ['esi,', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_C]']
push ['ecx']
call ['?MyCharUpper@@YG_W_W@Z']
movzx ['edx,', 'ax']
cmp ['esi,', 'edx']
jnz ['short', 'loc_16D4']
jmp ['short', 'loc_1661']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
push ['eax']
call ['?IsPathSepar@@YG_N_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_16FB']
movzx ['edx,', 'word', 'ptr', '[ebp+var_C]']
push ['edx']
call ['?IsPathSepar@@YG_N_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_16FB']
jmp ['loc_1661']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_1705']
jmp ['loc_1661']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '718h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_728]']
mov ['ecx,', '1C6h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['eax,', '[ebp+arg_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0C4h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1783']
mov ['edx,', '[ebp+arg_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+0C5h]']
test ['eax,', 'eax']
jz ['short', 'loc_1783']
mov ['eax,', '80004005h']
jmp ['loc_3FA0']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@UCOpenType@@@@QBEIXZ']
cmp ['eax,', '1']
jbe ['short', 'loc_179A']
mov ['eax,', '80004001h']
jmp ['loc_3FA0']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '0FCh']
call ['?IsEmpty@?$CObjectVector@UCRenamePair@@@@QBE_NXZ']
movzx ['ecx,', 'al']
neg ['ecx']
sbb ['ecx,', 'ecx']
add ['ecx,', '1']
mov ['[ebp+var_11],', 'cl']
movzx ['edx,', '[ebp+var_11]']
test ['edx,', 'edx']
jz ['short', 'loc_17D7']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '38h']
call ['?Size@?$CObjectVector@UCUpdateArchiveCommand@@@@QBEIXZ']
cmp ['eax,', '1']
jz ['short', 'loc_17D7']
mov ['eax,', '80004005h']
jmp ['loc_3FA0']
mov ['eax,', '[ebp+arg_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0F8h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1842']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '38h']
call ['?Size@?$CObjectVector@UCUpdateArchiveCommand@@@@QBEIXZ']
cmp ['eax,', '1']
jz ['short', 'loc_17FF']
mov ['eax,', '80004001h']
jmp ['loc_3FA0']
push ['0']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '38h']
call ['??A?$CObjectVector@UCUpdateArchiveCommand@@@@QAEAAUCUpdateArchiveCommand@@I@Z']
add ['eax,', '64h']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_1C],', '2']
jmp ['short', 'loc_1824']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_1C],', '7']
jnb ['short', 'loc_1842']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '2']
jz ['short', 'loc_1840']
mov ['eax,', '80004001h']
jmp ['loc_3FA0']
jmp ['short', 'loc_181B']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx+0E0h]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?AddPathsToCensor@CCensor@NWildcard@@QAEXW4ECensorPathMode@2@@Z']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['?ConvertToLongNames@@YGXAAVCCensor@NWildcard@@@Z']
mov ['ecx,', '[ebp+arg_C]']
call ['?ExtendExclude@CCensor@NWildcard@@QAEXXZ']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '108h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
test ['eax,', 'eax']
jbe ['short', 'loc_188F']
mov ['edx,', '[ebp+arg_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+0C5h]']
test ['eax,', 'eax']
jz ['short', 'loc_188F']
mov ['eax,', '80004001h']
jmp ['loc_3FA0']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0A4h]']
test ['edx,', 'edx']
jz ['loc_1A1C']
lea ['ecx,', '[ebp+var_38]']
call ['??0CProperty@@QAE@XZ']
mov ['[ebp+var_4],', '0']
push ['offset', '$SG75347']
lea ['ecx,', '[ebp+var_38]']
call ['?SetFromAscii@UString@@QAEXPBD@Z']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '28h']
call ['?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '0A8h']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1915']
push ['offset', '$SG75349']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '4']
call ['??4AString@@QAEAAV0@PBD@Z']
mov ['[ebp+var_630],', '80004005h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_38]']
call ['??1CProperty@@QAE@XZ']
mov ['eax,', '[ebp+var_630]']
jmp ['loc_3FA0']
mov ['[ebp+var_3D],', '0']
push ['5Ch']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '0A8h']
call ['?Find@UString@@QBEH_W@Z']
test ['eax,', 'eax']
jge ['loc_19B3']
lea ['edx,', '[ebp+var_63C]']
push ['edx']
call ['?GetModuleDirPrefix@NDLL@NWindows@@YG?AVUString@@XZ']
mov ['[ebp+var_6E4],', 'eax']
mov ['eax,', '[ebp+var_6E4]']
mov ['[ebp+var_6E8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '0A8h']
push ['ecx']
mov ['edx,', '[ebp+var_6E8]']
push ['edx']
lea ['eax,', '[ebp+var_50]']
push ['eax']
call ['??H@YG?AVUString@@ABV0@0@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_63C]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_50]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_19A7']
lea ['edx,', '[ebp+var_50]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '0A8h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['[ebp+var_3D],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
call ['??1UString@@QAE@XZ']
movzx ['eax,', '[ebp+var_3D]']
test ['eax,', 'eax']
jnz ['short', 'loc_1A0D']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '0A8h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1A0D']
mov ['edx,', '[ebp+arg_10]']
add ['edx,', '0A8h']
push ['edx']
push ['offset', '$SG75361']
mov ['ecx,', '[ebp+arg_14]']
call ['?SetFromLastError@CUpdateErrorInfo@@QAEJPBDABVUString@@@Z']
mov ['[ebp+var_640],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_38]']
call ['??1CProperty@@QAE@XZ']
mov ['eax,', '[ebp+var_640]']
jmp ['loc_3FA0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_38]']
call ['??1CProperty@@QAE@XZ']
lea ['ecx,', '[ebp+var_B8]']
call ['??0CArchiveLink@@QAE@XZ']
mov ['[ebp+var_4],', '4']
movzx ['eax,', '[ebp+arg_20]']
test ['eax,', 'eax']
jz ['short', 'loc_1A8F']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
call ['?InitFormatIndex@CUpdateOptions@@QAE_NPBVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1A68']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
call ['?SetArcPath@CUpdateOptions@@QAE_NPBVCCodecs@@ABVUString@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1A8F']
mov ['[ebp+var_644],', '80004001h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_644]']
jmp ['loc_3FA0']
lea ['edx,', '[ebp+var_CC]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '48h']
call ['?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+arg_8]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1ADD']
mov ['ecx,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jge ['short', 'loc_1AD8']
mov ['[ebp+var_648],', 'offset', '$SG75374']
push ['offset', '__TI2PAD']
lea ['edx,', '[ebp+var_648]']
push ['edx']
call ['__CxxThrowException@8']
jmp ['loc_221C']
lea ['ecx,', '[ebp+var_10C]']
call ['??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_CC]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
lea ['ecx,', '[ebp+var_10C]']
call ['?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['loc_1B9B']
movzx ['ecx,', '[ebp+var_11]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1B31']
mov ['[ebp+var_64C],', 'offset', '$SG75380']
push ['offset', '__TI2PAD']
lea ['edx,', '[ebp+var_64C]']
push ['edx']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jge ['short', 'loc_1B96']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?SetArcPath@CUpdateOptions@@QAE_NPBVCCodecs@@ABVUString@@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1B96']
mov ['[ebp+var_650],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_650]']
jmp ['loc_3FA0']
jmp ['loc_220D']
lea ['ecx,', '[ebp+var_10C]']
call ['?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1BC8']
mov ['[ebp+var_654],', 'offset', '$SG75388']
push ['offset', '__TI2PAD']
lea ['edx,', '[ebp+var_654]']
push ['edx']
call ['__CxxThrowException@8']
movzx ['eax,', '[ebp+var_E7]']
test ['eax,', 'eax']
jz ['short', 'loc_1C18']
mov ['[ebp+var_658],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_658]']
jmp ['loc_3FA0']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '108h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
test ['eax,', 'eax']
jbe ['short', 'loc_1C6F']
mov ['[ebp+var_65C],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_65C]']
jmp ['loc_3FA0']
lea ['ecx,', '[ebp+var_120]']
call ['??0?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_1C9A']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '8']
push ['eax']
lea ['ecx,', '[ebp+var_120]']
call ['?Add@?$CObjectVector@UCOpenType@@@@QAEIABUCOpenType@@@Z']
lea ['ecx,', '[ebp+var_134]']
call ['??0?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_194]']
call ['??0COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '28h']
mov ['[ebp+var_154],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_194],', 'edx']
lea ['eax,', '[ebp+var_120]']
mov ['[ebp+var_16C],', 'eax']
lea ['ecx,', '[ebp+var_134]']
mov ['[ebp+var_168],', 'ecx']
mov ['[ebp+var_150],', '0']
mov ['[ebp+var_164],', '0']
lea ['edx,', '[ebp+var_CC]']
push ['edx']
lea ['ecx,', '[ebp+var_14C]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
lea ['ecx,', '[ebp+var_CC]']
call ['??BUString@@QBEPB_WXZ']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['eax,', '[edx+48h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_19C],', 'eax']
cmp ['[ebp+var_19C],', '0']
jz ['short', 'loc_1DAD']
mov ['ecx,', '[ebp+var_19C]']
mov ['[ebp+var_660],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_194]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_134]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_660]']
jmp ['loc_3FA0']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
lea ['eax,', '[ebp+var_194]']
push ['eax']
lea ['ecx,', '[ebp+var_B8]']
call ['?Open3@CArchiveLink@@QAEJAAUCOpenOptions@@PAUIOpenCallbackUI@@@Z']
mov ['[ebp+var_1A0],', 'eax']
cmp ['[ebp+var_1A0],', '80004004h']
jnz ['short', 'loc_1E49']
mov ['ecx,', '[ebp+var_1A0]']
mov ['[ebp+var_664],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_194]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_134]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_664]']
jmp ['loc_3FA0']
cmp ['[ebp+var_1A0],', '0']
jnz ['short', 'loc_1E62']
cmp ['[ebp+var_7C],', '0']
jl ['short', 'loc_1E62']
mov ['[ebp+var_1A0],', '1']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_1A0]']
push ['edx']
lea ['ecx,', '[ebp+var_CC]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
lea ['eax,', '[ebp+var_B8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_1C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['edx,', '[eax+3Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1A4],', 'eax']
mov ['eax,', '[ebp+var_1A4]']
mov ['[ebp+var_1A8],', 'eax']
cmp ['[ebp+var_1A8],', '0']
jz ['short', 'loc_1F25']
mov ['ecx,', '[ebp+var_1A8]']
mov ['[ebp+var_668],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_194]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_134]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_668]']
jmp ['loc_3FA0']
mov ['edx,', '[ebp+var_1A0]']
mov ['[ebp+var_1AC],', 'edx']
cmp ['[ebp+var_1AC],', '0']
jz ['short', 'loc_1FAE']
mov ['eax,', '[ebp+var_1AC]']
mov ['[ebp+var_66C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_194]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_134]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_66C]']
jmp ['loc_3FA0']
lea ['ecx,', '[ebp+var_AC]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['eax,', '1']
jbe ['loc_204D']
mov ['ecx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[ecx],', '80004001h']
push ['offset', '$SG75420']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '4']
call ['??4AString@@QAEAAV0@PBD@Z']
mov ['[ebp+var_670],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_194]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_134]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_670]']
jmp ['loc_3FA0']
lea ['ecx,', '[ebp+var_B8]']
call ['?Back@?$CObjectVector@VCArc@@@@QAEAAVCArc@@XZ']
mov ['[ebp+var_1B0],', 'eax']
movzx ['edx,', '[ebp+var_E7]']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['eax,', '[ebp+var_1B0]']
mov ['[eax+0A4h],', 'dl']
mov ['ecx,', '[ebp+var_1B0]']
mov ['edx,', '[ebp+var_F4]']
mov ['[ecx+9Ch],', 'edx']
mov ['eax,', '[ebp+var_F0]']
mov ['[ecx+0A0h],', 'eax']
mov ['ecx,', '[ebp+var_1B0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+10h]']
test ['edx,', 'edx']
jz ['loc_2133']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '80004001h']
push ['offset', '$SG75427']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '4']
call ['??4AString@@QAEAAV0@PBD@Z']
mov ['[ebp+var_674],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_194]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_134]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_674]']
jmp ['loc_3FA0']
mov ['ecx,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jge ['loc_21E0']
lea ['ecx,', '[ebp+var_B8]']
call ['?GetArc@CArchiveLink@@QBEPBVCArc@@XZ']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[eax+94h]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?SetArcPath@CUpdateOptions@@QAE_NPBVCCodecs@@ABVUString@@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_21E0']
mov ['[ebp+var_678],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_194]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_134]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_678]']
jmp ['loc_3FA0']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_194]']
call ['??1COpenOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_134]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jge ['short', 'loc_229E']
mov ['edx,', 'ds:_kDefaultArcType']
push ['edx']
lea ['ecx,', '[ebp+var_684]']
call ['??0UString@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['eax,', '[ebp+var_684]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?FindFormatForArchiveType@CCodecs@@QBEHABVUString@@@Z']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx+8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_684]']
call ['??1UString@@QAE@XZ']
mov ['edx,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jge ['short', 'loc_229E']
mov ['[ebp+var_688],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_688]']
jmp ['loc_3FA0']
mov ['al,', '[ebp+var_98]']
mov ['[ebp+var_1B1],', 'al']
movzx ['ecx,', '[ebp+var_1B1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_22F3']
movzx ['edx,', '[ebp+var_11]']
test ['edx,', 'edx']
jz ['short', 'loc_22F3']
mov ['[ebp+var_68C],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_68C]']
jmp ['loc_3FA0']
lea ['ecx,', '[ebp+var_258]']
call ['??0CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
cmp ['[ebp+arg_1C],', '0']
jz ['short', 'loc_2316']
mov ['eax,', '[ebp+arg_1C]']
add ['eax,', '4']
mov ['[ebp+var_6EC],', 'eax']
jmp ['short', 'loc_2320']
mov ['[ebp+var_6EC],', '0']
mov ['ecx,', '[ebp+var_6EC]']
mov ['[ebp+var_1C0],', 'ecx']
lea ['ecx,', '[ebp+var_2B0]']
call ['??0CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
mov ['[ebp+var_2B8],', '0']
mov ['edx,', '[ebp+arg_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+0B5h]']
test ['eax,', 'eax']
jz ['loc_23FB']
lea ['ecx,', '[ebp+var_30C]']
call ['??0CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '0B8h']
push ['ecx']
lea ['ecx,', '[ebp+var_2EC]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['[ebp+var_30C],', '0FFFFFFFFh']
mov ['[ebp+var_308],', '0FFFFFFFFh']
mov ['[ebp+var_2D0],', '0']
lea ['edx,', '[ebp+var_2F4]']
push ['edx']
call ['?GetCurUtcFileTime@NTime@NWindows@@YGXAAU_FILETIME@@@Z']
mov ['eax,', '[ebp+var_2F4]']
mov ['[ebp+var_2FC],', 'eax']
mov ['ecx,', '[ebp+var_2F0]']
mov ['[ebp+var_2F8],', 'ecx']
mov ['edx,', '[ebp+var_2FC]']
mov ['[ebp+var_304],', 'edx']
mov ['eax,', '[ebp+var_2F8]']
mov ['[ebp+var_300],', 'eax']
lea ['ecx,', '[ebp+var_30C]']
push ['ecx']
lea ['ecx,', '[ebp+var_234]']
call ['?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_30C]']
call ['??1CDirItem@@QAE@XZ']
jmp ['loc_279F']
mov ['[ebp+var_311],', '0']
movzx ['edx,', '[ebp+var_11]']
test ['edx,', 'edx']
jnz ['short', 'loc_2464']
mov ['[ebp+var_318],', '0']
jmp ['short', 'loc_2425']
mov ['eax,', '[ebp+var_318]']
add ['eax,', '1']
mov ['[ebp+var_318],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '38h']
call ['?Size@?$CObjectVector@UCUpdateArchiveCommand@@@@QBEIXZ']
cmp ['[ebp+var_318],', 'eax']
jnb ['short', 'loc_2464']
mov ['ecx,', '[ebp+var_318]']
push ['ecx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '38h']
call ['??A?$CObjectVector@UCUpdateArchiveCommand@@@@QAEAAUCUpdateArchiveCommand@@I@Z']
add ['eax,', '64h']
mov ['ecx,', 'eax']
call ['?NeedScanning@CActionSet@NUpdateArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2462']
mov ['[ebp+var_311],', '1']
jmp ['short', 'loc_2416']
movzx ['eax,', '[ebp+var_311]']
test ['eax,', 'eax']
jz ['loc_279F']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_1C]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['eax,', '[edx+40h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_31C],', 'eax']
cmp ['[ebp+var_31C],', '0']
jz ['short', 'loc_24EE']
mov ['ecx,', '[ebp+var_31C]']
mov ['[ebp+var_690],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_258]']
call ['??1CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_690]']
jmp ['loc_3FA0']
mov ['edx,', '[ebp+arg_10]']
mov ['al,', '[edx+0F6h]']
mov ['[ebp+var_228],', 'al']
mov ['ecx,', '[ebp+arg_10]']
mov ['dl,', '[ecx+0F0h]']
mov ['[ebp+var_1C3],', 'dl']
mov ['eax,', '[ebp+arg_10]']
mov ['cl,', '[eax+0F2h]']
mov ['[ebp+var_227],', 'cl']
lea ['edx,', '[ebp+var_258]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '0E4h']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx+0E0h]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z']
mov ['[ebp+var_320],', 'eax']
cmp ['[ebp+var_320],', '0']
jz ['short', 'loc_25BF']
cmp ['[ebp+var_320],', '80004004h']
jz ['short', 'loc_2569']
push ['offset', '$SG75467']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '4']
call ['??4AString@@QAEAAV0@PBD@Z']
mov ['ecx,', '[ebp+var_320]']
mov ['[ebp+var_694],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_258]']
call ['??1CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_694]']
jmp ['loc_3FA0']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_220]']
push ['edx']
mov ['eax,', '[ebp+arg_1C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['eax,', '[edx+44h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_324],', 'eax']
cmp ['[ebp+var_324],', '0']
jz ['short', 'loc_2641']
mov ['ecx,', '[ebp+var_324]']
mov ['[ebp+var_698],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_258]']
call ['??1CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_698]']
jmp ['loc_3FA0']
mov ['ecx,', '[ebp+arg_C]']
call ['?Size@?$CObjectVector@UCPair@NWildcard@@@@QBEIXZ']
cmp ['eax,', '1']
jnz ['loc_279F']
lea ['ecx,', '[ebp+var_360]']
call ['??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
call ['??A?$CObjectVector@UCPair@NWildcard@@@@QAEAAUCPair@NWildcard@@I@Z']
push ['eax']
lea ['ecx,', '[ebp+var_374]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
push ['2Eh']
lea ['ecx,', '[ebp+var_374]']
call ['??YUString@@QAEAAV0@_W@Z']
lea ['ecx,', '[ebp+var_374]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
lea ['ecx,', '[ebp+var_360]']
call ['?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2781']
lea ['ecx,', '[ebp+var_360]']
call ['?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_2781']
mov ['ecx,', '[ebp+var_360]']
mov ['[ebp+var_2B0],', 'ecx']
mov ['edx,', '[ebp+var_35C]']
mov ['[ebp+var_2AC],', 'edx']
mov ['eax,', '[ebp+var_358]']
mov ['[ebp+var_2A8],', 'eax']
mov ['ecx,', '[ebp+var_354]']
mov ['[ebp+var_2A4],', 'ecx']
mov ['edx,', '[ebp+var_350]']
mov ['[ebp+var_2A0],', 'edx']
mov ['eax,', '[ebp+var_34C]']
mov ['[ebp+var_29C],', 'eax']
mov ['ecx,', '[ebp+var_348]']
mov ['[ebp+var_298],', 'ecx']
mov ['edx,', '[ebp+var_344]']
mov ['[ebp+var_294],', 'edx']
mov ['eax,', '[ebp+var_340]']
mov ['[ebp+var_274],', 'eax']
lea ['ecx,', '[ebp+var_2B0]']
mov ['[ebp+var_2B8],', 'ecx']
mov ['[ebp+var_380],', '0FFFFFFFFh']
mov ['edx,', '[ebp+arg_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+0F0h]']
test ['eax,', 'eax']
jz ['short', 'loc_2769']
lea ['ecx,', '[ebp+var_380]']
push ['ecx']
lea ['edx,', '[ebp+var_374]']
push ['edx']
lea ['ecx,', '[ebp+var_258]']
call ['?AddSecurityItem@CDirItems@@QAEJABVUString@@AAH@Z']
mov ['eax,', '[ebp+var_380]']
mov ['[ebp+var_268],', 'eax']
lea ['ecx,', '[ebp+var_2B0]']
mov ['[ebp+var_2B8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
lea ['ecx,', '[ebp+var_374]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_360]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
lea ['ecx,', '[ebp+var_394]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
mov ['[ebp+var_399],', '0']
lea ['ecx,', '[ebp+var_3B0]']
call ['??0CTempDir@NDir@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
mov ['edx,', '[ebp+arg_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+0C5h]']
test ['eax,', 'eax']
jz ['short', 'loc_281B']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C6h]']
test ['edx,', 'edx']
jz ['short', 'loc_281B']
mov ['eax,', 'ds:_kTempFolderPrefix']
push ['eax']
lea ['ecx,', '[ebp+var_3B0]']
call ['?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z']
lea ['ecx,', '[ebp+var_3B0]']
call ['?GetPath@CTempDir@NDir@NFile@NWindows@@QBEABVUString@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_394]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
lea ['ecx,', '[ebp+var_394]']
push ['ecx']
call ['?NormalizeDirPathPrefix@NName@NFile@NWindows@@YGXAAVUString@@@Z']
mov ['[ebp+var_399],', '1']
lea ['ecx,', '[ebp+var_3C4]']
call ['??0CTempFiles@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
mov ['[ebp+var_3C9],', '0']
mov ['edx,', '[ebp+arg_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+0C4h]']
test ['eax,', 'eax']
jnz ['loc_2921']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+44h]']
test ['edx,', 'edx']
jz ['loc_2921']
push ['0']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '38h']
call ['??A?$CObjectVector@UCUpdateArchiveCommand@@@@QAEAAUCUpdateArchiveCommand@@I@Z']
add ['eax,', '0Ch']
mov ['[ebp+var_3D0],', 'eax']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '48h']
push ['eax']
mov ['ecx,', '[ebp+var_3D0]']
call ['??4CArchivePath@@QAEAAU0@ABU0@@Z']
movzx ['ecx,', '[ebp+var_1B1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_289E']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '0D4h']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_2921']
movzx ['eax,', '[ebp+var_399]']
test ['eax,', 'eax']
jnz ['short', 'loc_2921']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '108h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_2921']
mov ['[ebp+var_3C9],', '1']
mov ['ecx,', '[ebp+var_3D0]']
mov ['byte', 'ptr', '[ecx+3Ch],', '1']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '0D4h']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_28FA']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '0D4h']
push ['eax']
mov ['ecx,', '[ebp+var_3D0]']
add ['ecx,', '40h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
jmp ['short', 'loc_2912']
mov ['ecx,', '[ebp+var_3D0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_3D0]']
add ['ecx,', '40h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+var_3D0]']
add ['edx,', '40h']
push ['edx']
call ['?NormalizeDirPathPrefix@NName@NFile@NWindows@@YGXAAVUString@@@Z']
mov ['[ebp+var_3D4],', '0']
jmp ['short', 'loc_293C']
mov ['eax,', '[ebp+var_3D4]']
add ['eax,', '1']
mov ['[ebp+var_3D4],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '38h']
call ['?Size@?$CObjectVector@UCUpdateArchiveCommand@@@@QBEIXZ']
cmp ['[ebp+var_3D4],', 'eax']
jnb ['loc_2ABD']
mov ['ecx,', '[ebp+var_3D4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '38h']
call ['??A?$CObjectVector@UCUpdateArchiveCommand@@@@QAEAAUCUpdateArchiveCommand@@I@Z']
add ['eax,', '0Ch']
mov ['[ebp+var_3D8],', 'eax']
movzx ['edx,', '[ebp+var_399]']
test ['edx,', 'edx']
jz ['short', 'loc_298E']
lea ['eax,', '[ebp+var_394]']
push ['eax']
mov ['ecx,', '[ebp+var_3D8]']
add ['ecx,', '0Ch']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C4h]']
test ['edx,', 'edx']
jnz ['loc_2AB8']
cmp ['[ebp+var_3D4],', '0']
ja ['short', 'loc_29B8']
movzx ['eax,', '[ebp+var_3C9]']
test ['eax,', 'eax']
jnz ['loc_2AB8']
lea ['ecx,', '[ebp+var_3E8]']
push ['ecx']
mov ['ecx,', '[ebp+var_3D8]']
call ['?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2AA9']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '50h']
push ['offset', '$SG75502']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '4']
call ['??4AString@@QAEAAV0@PBD@Z']
lea ['ecx,', '[ebp+var_3E8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '10h']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['ecx,', '[ebp+arg_14]']
call ['?Get_HRESULT_Error@CUpdateErrorInfo@@QBEJXZ']
mov ['[ebp+var_69C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_3C4]']
call ['??1CTempFiles@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3B0]']
call ['??1CTempDir@NDir@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_394]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_258]']
call ['??1CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_69C]']
jmp ['loc_3FA0']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_3E8]']
call ['??1UString@@QAE@XZ']
jmp ['loc_292D']
lea ['ecx,', '[ebp+var_3FC]']
call ['??0?$CObjectVector@UCArcItem@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
movzx ['edx,', '[ebp+var_1B1]']
test ['edx,', 'edx']
jz ['loc_2B9C']
lea ['eax,', '[ebp+var_3FC]']
push ['eax']
lea ['ecx,', '[ebp+var_B8]']
call ['?Back@?$CObjectVector@VCArc@@@@QAEAAVCArc@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['?EnumerateInArchiveItems@@YGJABVCCensor@NWildcard@@ABVCArc@@AAV?$CObjectVector@UCArcItem@@@@@Z']
mov ['[ebp+var_404],', 'eax']
cmp ['[ebp+var_404],', '0']
jz ['loc_2B9C']
mov ['edx,', '[ebp+var_404]']
mov ['[ebp+var_6A0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_3FC]']
call ['??1?$CObjectVector@UCArcItem@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_3C4]']
call ['??1CTempFiles@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3B0]']
call ['??1CTempDir@NDir@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_394]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_258]']
call ['??1CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_6A0]']
jmp ['loc_3FA0']
lea ['ecx,', '[ebp+var_410]']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
mov ['eax,', '[ebp+arg_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0F8h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C1C']
lea ['ecx,', '[ebp+var_234]']
call ['?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ']
mov ['[ebp+var_418],', 'eax']
mov ['edx,', '[ebp+var_418]']
push ['edx']
lea ['ecx,', '[ebp+var_410]']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
mov ['[ebp+var_3D4],', '0']
jmp ['short', 'loc_2BF7']
mov ['eax,', '[ebp+var_3D4]']
add ['eax,', '1']
mov ['[ebp+var_3D4],', 'eax']
mov ['ecx,', '[ebp+var_3D4]']
cmp ['ecx,', '[ebp+var_418]']
jnb ['short', 'loc_2C1C']
lea ['ecx,', '[ebp+var_410]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['edx,', '[ebp+var_3D4]']
mov ['byte', 'ptr', '[eax+edx],', '0']
jmp ['short', 'loc_2BE8']
mov ['[ebp+var_3D4],', '0']
jmp ['short', 'loc_2C37']
mov ['eax,', '[ebp+var_3D4]']
add ['eax,', '1']
mov ['[ebp+var_3D4],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '38h']
call ['?Size@?$CObjectVector@UCUpdateArchiveCommand@@@@QBEIXZ']
cmp ['[ebp+var_3D4],', 'eax']
jnb ['loc_30A1']
movzx ['ecx,', '[ebp+var_1B1]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C6C']
lea ['ecx,', '[ebp+var_B8]']
call ['?GetArc@CArchiveLink@@QBEPBVCArc@@XZ']
mov ['[ebp+var_6F0],', 'eax']
jmp ['short', 'loc_2C76']
mov ['[ebp+var_6F0],', '0']
mov ['edx,', '[ebp+var_6F0]']
mov ['[ebp+var_41C],', 'edx']
mov ['eax,', '[ebp+var_3D4]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '38h']
call ['??A?$CObjectVector@UCUpdateArchiveCommand@@@@QAEAAUCUpdateArchiveCommand@@I@Z']
mov ['[ebp+var_420],', 'eax']
lea ['ecx,', '[ebp+var_430]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C4h]']
test ['edx,', 'edx']
jz ['short', 'loc_2CD8']
push ['offset', '$SG75524']
lea ['ecx,', '[ebp+var_430]']
call ['?SetFromAscii@UString@@QAEXPBD@Z']
mov ['al,', '[ebp+var_1B1]']
mov ['[ebp+var_435],', 'al']
jmp ['loc_2D65']
lea ['ecx,', '[ebp+var_6AC]']
push ['ecx']
mov ['ecx,', '[ebp+var_420]']
add ['ecx,', '0Ch']
call ['?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ']
mov ['[ebp+var_6F4],', 'eax']
mov ['edx,', '[ebp+var_6F4]']
mov ['[ebp+var_6F8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '17h']
mov ['eax,', '[ebp+var_6F8]']
push ['eax']
lea ['ecx,', '[ebp+var_430]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
lea ['ecx,', '[ebp+var_6AC]']
call ['??1UString@@QAE@XZ']
cmp ['[ebp+var_3D4],', '0']
jnz ['short', 'loc_2D4F']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+44h]']
test ['edx,', 'edx']
jz ['short', 'loc_2D4F']
movzx ['eax,', '[ebp+var_1B1]']
test ['eax,', 'eax']
jz ['short', 'loc_2D4F']
mov ['[ebp+var_6FC],', '1']
jmp ['short', 'loc_2D59']
mov ['[ebp+var_6FC],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_6FC]']
mov ['[ebp+var_435],', 'cl']
mov ['esi,', 'esp']
movzx ['edx,', '[ebp+var_435]']
push ['edx']
lea ['ecx,', '[ebp+var_430]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['eax,', '[edx+4Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_43C],', 'eax']
cmp ['[ebp+var_43C],', '0']
jz ['loc_2E52']
mov ['ecx,', '[ebp+var_43C]']
mov ['[ebp+var_6B0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_430]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
lea ['ecx,', '[ebp+var_410]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_3FC]']
call ['??1?$CObjectVector@UCArcItem@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_3C4]']
call ['??1CTempFiles@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3B0]']
call ['??1CTempDir@NDir@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_394]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_258]']
call ['??1CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_6B0]']
jmp ['loc_3FA0']
lea ['ecx,', '[ebp+var_448]']
call ['??0CFinishArchiveStat@@QAE@XZ']
mov ['edx,', '[ebp+arg_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+0F8h]']
test ['eax,', 'eax']
jz ['short', 'loc_2E7E']
lea ['ecx,', '[ebp+var_410]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['[ebp+var_700],', 'eax']
jmp ['short', 'loc_2E88']
mov ['[ebp+var_700],', '0']
lea ['ecx,', '[ebp+var_448]']
push ['ecx']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_3C4]']
push ['ecx']
mov ['edx,', '[ebp+var_2B8]']
push ['edx']
lea ['eax,', '[ebp+var_258]']
push ['eax']
mov ['ecx,', '[ebp+var_700]']
push ['ecx']
lea ['edx,', '[ebp+var_3FC]']
push ['edx']
mov ['eax,', '[ebp+var_420]']
add ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+var_41C]']
push ['ecx']
mov ['edx,', '[ebp+var_420]']
add ['edx,', '64h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
movzx ['ecx,', '[ebp+var_435]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
call ['?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z']
mov ['[ebp+var_450],', 'eax']
cmp ['[ebp+var_450],', '0']
jz ['loc_2FAD']
mov ['eax,', '[ebp+var_450]']
mov ['[ebp+var_6B4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_430]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
lea ['ecx,', '[ebp+var_410]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_3FC]']
call ['??1?$CObjectVector@UCArcItem@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_3C4]']
call ['??1CTempFiles@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3B0]']
call ['??1CTempDir@NDir@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_394]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_258]']
call ['??1CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_6B4]']
jmp ['loc_3FA0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_448]']
push ['ecx']
mov ['edx,', '[ebp+arg_1C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['edx,', '[eax+50h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_454],', 'eax']
cmp ['[ebp+var_454],', '0']
jz ['loc_308D']
mov ['eax,', '[ebp+var_454]']
mov ['[ebp+var_6B8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_430]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
lea ['ecx,', '[ebp+var_410]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_3FC]']
call ['??1?$CObjectVector@UCArcItem@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_3C4]']
call ['??1CTempFiles@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3B0]']
call ['??1CTempDir@NDir@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_394]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_258]']
call ['??1CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_6B8]']
jmp ['loc_3FA0']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_430]']
call ['??1UString@@QAE@XZ']
jmp ['loc_2C28']
movzx ['ecx,', '[ebp+var_1B1]']
test ['ecx,', 'ecx']
jz ['loc_317A']
lea ['ecx,', '[ebp+var_B8]']
call ['?Close@CArchiveLink@@QAEJXZ']
mov ['[ebp+var_458],', 'eax']
cmp ['[ebp+var_458],', '0']
jz ['loc_316F']
mov ['edx,', '[ebp+var_458]']
mov ['[ebp+var_6BC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
lea ['ecx,', '[ebp+var_410]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_3FC]']
call ['??1?$CObjectVector@UCArcItem@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_3C4]']
call ['??1CTempFiles@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3B0]']
call ['??1CTempDir@NDir@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_394]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_258]']
call ['??1CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_6BC]']
jmp ['loc_3FA0']
lea ['ecx,', '[ebp+var_B8]']
call ['?Release@CArchiveLink@@QAEXXZ']
lea ['ecx,', '[ebp+var_3C4]']
call ['?Clear@?$CObjectVector@VUString@@@@QAEXXZ']
movzx ['eax,', '[ebp+var_3C9]']
test ['eax,', 'eax']
jz ['$LN32_0']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
push ['0']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '38h']
call ['??A?$CObjectVector@UCUpdateArchiveCommand@@@@QAEAAUCUpdateArchiveCommand@@I@Z']
mov ['[ebp+var_704],', 'eax']
mov ['ecx,', '[ebp+var_704]']
add ['ecx,', '0Ch']
mov ['[ebp+var_45C],', 'ecx']
lea ['edx,', '[ebp+var_470]']
push ['edx']
mov ['ecx,', '[ebp+var_45C]']
call ['?GetTempPathA@CArchivePath@@QBE?AVUString@@XZ']
mov ['[ebp+var_708],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '19h']
lea ['eax,', '[ebp+var_470]']
mov ['[ebp+var_460],', 'eax']
movzx ['ecx,', '[ebp+var_1B1]']
test ['ecx,', 'ecx']
jz ['loc_32ED']
lea ['ecx,', '[ebp+var_CC]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_70C],', 'eax']
mov ['edx,', '[ebp+var_70C]']
push ['edx']
call ['?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z']
mov ['[ebp+var_70D],', 'al']
movzx ['eax,', '[ebp+var_70D]']
test ['eax,', 'eax']
jnz ['loc_32ED']
lea ['ecx,', '[ebp+var_CC]']
push ['ecx']
push ['offset', '$SG75551']
mov ['ecx,', '[ebp+arg_14]']
call ['?SetFromLastError@CUpdateErrorInfo@@QAEJPBDABVUString@@@Z']
mov ['[ebp+var_714],', 'eax']
mov ['edx,', '[ebp+var_714]']
mov ['[ebp+var_6C0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
lea ['ecx,', '[ebp+var_470]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
lea ['ecx,', '[ebp+var_410]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_3FC]']
call ['??1?$CObjectVector@UCArcItem@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_3C4]']
call ['??1CTempFiles@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3B0]']
call ['??1CTempDir@NDir@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_394]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_258]']
call ['??1CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_6C0]']
jmp ['loc_3FA0']
lea ['ecx,', '[ebp+var_CC]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_718],', 'eax']
mov ['ecx,', '[ebp+var_460]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_71C],', 'eax']
mov ['eax,', '[ebp+var_718]']
push ['eax']
mov ['ecx,', '[ebp+var_71C]']
push ['ecx']
call ['?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z']
mov ['[ebp+var_71D],', 'al']
movzx ['edx,', '[ebp+var_71D]']
test ['edx,', 'edx']
jnz ['loc_341B']
mov ['eax,', '[ebp+var_460]']
push ['eax']
push ['offset', '$SG75553']
mov ['ecx,', '[ebp+arg_14]']
call ['?SetFromLastError@CUpdateErrorInfo@@QAEJPBDABVUString@@@Z']
lea ['ecx,', '[ebp+var_CC]']
push ['ecx']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '10h']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['ecx,', '[ebp+arg_14]']
call ['?Get_HRESULT_Error@CUpdateErrorInfo@@QBEJXZ']
mov ['[ebp+var_724],', 'eax']
mov ['edx,', '[ebp+var_724]']
mov ['[ebp+var_6C4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
lea ['ecx,', '[ebp+var_470]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
lea ['ecx,', '[ebp+var_410]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['ecx,', '[ebp+var_3FC]']
call ['??1?$CObjectVector@UCArcItem@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_3C4]']
call ['??1CTempFiles@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_3B0]']
call ['??1CTempDir@NDir@NFile@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_394]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1CDirItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_258]']
call ['??1CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_CC]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CArchiveLink@@QAE@XZ']
mov ['eax,', '[ebp+var_6C4]']
jmp ['loc_3FA0']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
lea ['ecx,', '[ebp+var_470]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_3442']
endp
__catch$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$0 proc near
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '358h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_364]']
mov ['ecx,', '0D6h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+arg_10],', '0']
jz ['loc_43FD']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx+94h]']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jge ['short', 'loc_43A3']
mov ['[ebp+var_23C],', '80004001h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_23C]']
jmp ['loc_5E99']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??0?$CMyComPtr@UIInArchive@@@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_18]']
call ['??I?$CMyComPtr@UIOutArchive@@@@QAEPAPAUIOutArchive@@XZ']
push ['eax']
push ['offset', '_IID_IOutArchive']
lea ['ecx,', '[ebp+var_28]']
call ['??$QueryInterface@UIOutArchive@@@?$CMyComPtr@UIInArchive@@@@QBEJABU_GUID@@PAPAUIOutArchive@@@Z']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_43EF']
mov ['edx,', 'ds:_kUpdateIsNotSupoorted']
mov ['[ebp+var_240],', 'edx']
push ['offset', '__TI2CPAD']
lea ['eax,', '[ebp+var_240]']
push ['eax']
call ['__CxxThrowException@8']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CMyComPtr@UIInArchive@@@@QAE@XZ']
jmp ['short', 'loc_4439']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?CreateOutArchive@CCodecs@@QBEJIAAV?$CMyComPtr@UIOutArchive@@@@@Z']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_4439']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_244],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_244]']
jmp ['loc_5E99']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UIOutArchive@@@@QBEPAUIOutArchive@@XZ']
test ['eax,', 'eax']
jnz ['short', 'loc_4462']
mov ['ecx,', 'ds:_kUpdateIsNotSupoorted']
mov ['[ebp+var_248],', 'ecx']
push ['offset', '__TI2CPAD']
lea ['edx,', '[ebp+var_248]']
push ['edx']
call ['__CxxThrowException@8']
lea ['ecx,', '[ebp+var_18]']
call ['??C?$CMyComPtr@UIOutArchive@@@@QBEPAUIOutArchive@@XZ']
mov ['[ebp+var_310],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_310]']
push ['ecx']
mov ['edx,', '[ebp+var_310]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_44BD']
mov ['edx,', '[ebp+var_48]']
mov ['[ebp+var_24C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_24C]']
jmp ['loc_5E99']
mov ['eax,', '[ebp+var_40]']
mov ['[ebp+var_314],', 'eax']
cmp ['[ebp+var_314],', '0']
jb ['short', 'loc_44E2']
cmp ['[ebp+var_314],', '2']
jbe ['short', 'loc_44DA']
jmp ['short', 'loc_44E2']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_4506']
mov ['[ebp+var_250],', '80004005h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_250]']
jmp ['loc_5E99']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '8']
call ['??A?$CObjectVector@UCArcInfoEx@@@@QAEAAUCArcInfoEx@@I@Z']
mov ['[ebp+var_4C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0F2h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4559']
mov ['ecx,', '[ebp+var_4C]']
call ['?Flags_AltStreams@CArcInfoEx@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_4559']
mov ['[ebp+var_254],', '80004001h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_254]']
jmp ['loc_5E99']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0F0h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_459A']
mov ['ecx,', '[ebp+var_4C]']
call ['?Flags_NtSecure@CArcInfoEx@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_459A']
mov ['[ebp+var_258],', '80004001h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_258]']
jmp ['loc_5E99']
lea ['ecx,', '[ebp+var_5C]']
call ['??0?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0FCh']
call ['?Size@?$CObjectVector@UCRenamePair@@@@QBEIXZ']
test ['eax,', 'eax']
jz ['loc_4869']
mov ['[ebp+var_78],', '0']
jmp ['short', 'loc_45DA']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '1']
mov ['[ebp+var_78],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
call ['?Size@?$CObjectVector@UCArcItem@@@@QBEIXZ']
cmp ['[ebp+var_78],', 'eax']
jnb ['loc_4867']
mov ['ecx,', '[ebp+var_78]']
push ['ecx']
mov ['ecx,', '[ebp+arg_18]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
mov ['[ebp+var_7C],', 'eax']
mov ['[ebp+var_7D],', '0']
lea ['ecx,', '[ebp+var_90]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['edx,', '[ebp+var_7C]']
movzx ['eax,', 'byte', 'ptr', '[edx+20h]']
test ['eax,', 'eax']
jz ['loc_4766']
mov ['[ebp+var_98],', '0']
jmp ['short', 'loc_4637']
mov ['ecx,', '[ebp+var_98]']
add ['ecx,', '1']
mov ['[ebp+var_98],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0FCh']
call ['?Size@?$CObjectVector@UCRenamePair@@@@QBEIXZ']
cmp ['[ebp+var_98],', 'eax']
jnb ['loc_4766']
mov ['edx,', '[ebp+var_98]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0FCh']
call ['??A?$CObjectVector@UCRenamePair@@@@QBEABUCRenamePair@@I@Z']
mov ['[ebp+var_9C],', 'eax']
lea ['eax,', '[ebp+var_90]']
push ['eax']
mov ['ecx,', '[ebp+var_7C]']
add ['ecx,', '10h']
push ['ecx']
mov ['edx,', '[ebp+var_7C]']
movzx ['eax,', 'byte', 'ptr', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_9C]']
call ['?GetNewPath@CRenamePair@@QBE_N_NABVUString@@AAV2@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_469D']
mov ['[ebp+var_7D],', '1']
jmp ['loc_4766']
mov ['edx,', '[ebp+var_7C]']
movzx ['eax,', 'byte', 'ptr', '[edx+1Dh]']
test ['eax,', 'eax']
jz ['loc_4761']
mov ['ecx,', '[ebp+var_7C]']
add ['ecx,', '10h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?FindAltStreamColon_in_Path@@YGHPB_W@Z']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0']
jl ['loc_4761']
mov ['ecx,', '[ebp+var_A0]']
push ['ecx']
lea ['edx,', '[ebp+var_B0]']
push ['edx']
mov ['ecx,', '[ebp+var_7C]']
add ['ecx,', '10h']
call ['?Left@UString@@QBE?AV1@I@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_B0]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_9C]']
call ['?GetNewPath@CRenamePair@@QBE_N_NABVUString@@AAV2@@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4752']
mov ['[ebp+var_7D],', '1']
push ['3Ah']
lea ['ecx,', '[ebp+var_90]']
call ['??YUString@@QAEAAV0@_W@Z']
mov ['eax,', '[ebp+var_A0]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_7C]']
add ['ecx,', '10h']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
call ['??YUString@@QAEAAV0@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_B0]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_4766']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_B0]']
call ['??1UString@@QAE@XZ']
jmp ['loc_4628']
lea ['ecx,', '[ebp+var_CC]']
call ['??0CUpdatePair2@@QAE@XZ']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ecx+24h]']
push ['edx']
lea ['ecx,', '[ebp+var_CC]']
call ['?SetAs_NoChangeArcItem@CUpdatePair2@@QAEXH@Z']
movzx ['eax,', '[ebp+var_7D]']
test ['eax,', 'eax']
jz ['loc_481A']
mov ['[ebp+var_CC+1],', '1']
lea ['ecx,', '[ebp+var_CC+3]']
push ['ecx']
mov ['edx,', '[ebp+var_78]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?IsItemAnti@CArc@@QBEJIAA_N@Z']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_4805']
mov ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_25C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_90]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_25C]']
jmp ['loc_5E99']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
lea ['ecx,', '[ebp+var_70]']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['[ebp+var_C0],', 'eax']
sub ['esp,', '14h']
mov ['edx,', 'esp']
mov ['eax,', 'dword', 'ptr', '[ebp+var_CC]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_C4]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_C0]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_BC]']
mov ['[edx+10h],', 'eax']
lea ['ecx,', '[ebp+var_5C]']
call ['?Add@?$CRecordVector@UCUpdatePair2@@@@QAEIUCUpdatePair2@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_90]']
call ['??1UString@@QAE@XZ']
jmp ['loc_45D1']
jmp ['short', 'loc_48D7']
lea ['ecx,', '[ebp+var_E4]']
call ['??0?$CRecordVector@UCUpdatePair@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_E4]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
push ['ecx']
call ['?GetUpdatePairInfoList@@YGXABVCDirItems@@ABV?$CObjectVector@UCArcItem@@@@W4EEnum@NFileTimeType@@AAV?$CRecordVector@UCUpdatePair@@@@@Z']
mov ['edx,', '[ebp+arg_30]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
lea ['ecx,', '[ebp+var_F8]']
call ['??0CUpdateProduceCallbackImp@@QAE@PBV?$CObjectVector@UCArcItem@@@@PAUIUpdateCallbackUI@@@Z']
movzx ['ecx,', '[ebp+arg_4]']
neg ['ecx']
sbb ['ecx,', 'ecx']
lea ['edx,', '[ebp+var_F8]']
and ['ecx,', 'edx']
push ['ecx']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['edx,', '[ebp+var_E4]']
push ['edx']
call ['?UpdateProduce@@YGXABV?$CRecordVector@UCUpdatePair@@@@ABUCActionSet@NUpdateArchive@@AAV?$CRecordVector@UCUpdatePair2@@@@PAUIUpdateProduceCallback@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_E4]']
call ['??1?$CRecordVector@UCUpdatePair@@@@QAE@XZ']
mov ['[ebp+var_100],', '0']
mov ['[ebp+var_104],', '0']
jmp ['short', 'loc_48FC']
mov ['eax,', '[ebp+var_104]']
add ['eax,', '1']
mov ['[ebp+var_104],', 'eax']
lea ['ecx,', '[ebp+var_5C]']
call ['?Size@?$CRecordVector@UCUpdatePair2@@@@QBEIXZ']
cmp ['[ebp+var_104],', 'eax']
jnb ['short', 'loc_4933']
mov ['ecx,', '[ebp+var_104]']
push ['ecx']
lea ['ecx,', '[ebp+var_5C]']
call ['??A?$CRecordVector@UCUpdatePair2@@@@QAEAAUCUpdatePair2@@I@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['short', 'loc_4931']
mov ['eax,', '[ebp+var_100]']
add ['eax,', '1']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_48ED']
mov ['ecx,', '[ebp+var_100]']
xor ['edx,', 'edx']
mov ['esi,', 'esp']
push ['edx']
push ['ecx']
mov ['eax,', '[ebp+arg_30]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_30]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_108],', 'eax']
cmp ['[ebp+var_108],', '0']
jz ['short', 'loc_49A0']
mov ['ecx,', '[ebp+var_108]']
mov ['[ebp+var_260],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_260]']
jmp ['loc_5E99']
push ['0A8h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_268],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
cmp ['[ebp+var_268],', '0']
jz ['short', 'loc_49D3']
mov ['ecx,', '[ebp+var_268]']
call ['??0CArchiveUpdateCallback@@QAE@XZ']
mov ['[ebp+var_318],', 'eax']
jmp ['short', 'loc_49DD']
mov ['[ebp+var_318],', '0']
mov ['edx,', '[ebp+var_318]']
mov ['[ebp+var_264],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['eax,', '[ebp+var_264]']
mov ['[ebp+var_10C],', 'eax']
mov ['ecx,', '[ebp+var_10C]']
push ['ecx']
lea ['ecx,', '[ebp+var_114]']
call ['??0?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@PAUIArchiveUpdateCallback@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['edx,', '[ebp+var_10C]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+0B4h]']
mov ['[edx+9Ch],', 'cl']
mov ['edx,', '[ebp+var_10C]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+0B5h]']
mov ['[edx+9Dh],', 'cl']
mov ['edx,', '[ebp+var_10C]']
mov ['eax,', '[ebp+arg_30]']
mov ['[edx+7Ch],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_4A60']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_10C]']
add ['ecx,', '8Ch']
call ['??4?$CMyComPtr@UIInArchive@@@@QAEPAUIInArchive@@ABV0@@Z']
mov ['edx,', '[ebp+var_10C]']
mov ['eax,', '[ebp+arg_20]']
mov ['[edx+80h],', 'eax']
mov ['ecx,', '[ebp+var_10C]']
mov ['edx,', '[ebp+arg_24]']
mov ['[ecx+84h],', 'edx']
mov ['eax,', '[ebp+var_10C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+0F0h]']
mov ['[eax+9Fh],', 'dl']
mov ['eax,', '[ebp+var_10C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+0F4h]']
mov ['[eax+0A0h],', 'dl']
mov ['eax,', '[ebp+var_10C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+0F6h]']
mov ['[eax+0A1h],', 'dl']
mov ['eax,', '[ebp+var_10C]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+88h],', 'ecx']
mov ['edx,', '[ebp+var_10C]']
mov ['eax,', '[ebp+arg_18]']
mov ['[edx+90h],', 'eax']
mov ['ecx,', '[ebp+var_10C]']
lea ['edx,', '[ebp+var_5C]']
mov ['[ecx+94h],', 'edx']
mov ['eax,', '[ebp+var_10C]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['[eax+0A4h],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0FCh']
call ['?Size@?$CObjectVector@UCRenamePair@@@@QBEIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_4B1A']
mov ['edx,', '[ebp+var_10C]']
lea ['eax,', '[ebp+var_70]']
mov ['[edx+98h],', 'eax']
lea ['ecx,', '[ebp+var_120]']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C4h]']
test ['edx,', 'edx']
jnz ['loc_4BFB']
lea ['ecx,', '[ebp+var_140]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['eax,', '[ebp+var_140]']
push ['eax']
lea ['ecx,', '[ebp+var_278]']
push ['ecx']
mov ['ecx,', '[ebp+arg_14]']
call ['?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ']
mov ['[ebp+var_31C],', 'eax']
mov ['edx,', '[ebp+var_31C]']
mov ['[ebp+var_320],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
mov ['ecx,', '[ebp+var_320]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z']
movzx ['eax,', 'al']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['[ebp+var_269],', 'al']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_278]']
call ['??1UString@@QAE@XZ']
movzx ['ecx,', '[ebp+var_269]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4BDB']
mov ['[ebp+var_27C],', '159FC9h']
push ['offset', '__TI1H']
lea ['edx,', '[ebp+var_27C]']
push ['edx']
call ['__CxxThrowException@8']
lea ['ecx,', '[ebp+var_140]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_140]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_148],', '0']
mov ['[ebp+var_14C],', '0']
mov ['[ebp+var_150],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '108h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
test ['eax,', 'eax']
jnz ['loc_4F3C']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0C4h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4CAA']
push ['10h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_284],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
cmp ['[ebp+var_284],', '0']
jz ['short', 'loc_4C6D']
mov ['ecx,', '[ebp+var_284]']
call ['??0CStdOutFileStream@@QAE@XZ']
mov ['[ebp+var_324],', 'eax']
jmp ['short', 'loc_4C77']
mov ['[ebp+var_324],', '0']
mov ['edx,', '[ebp+var_324]']
mov ['[ebp+var_280],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['eax,', '[ebp+var_280]']
mov ['[ebp+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_14C]']
push ['ecx']
lea ['ecx,', '[ebp+var_12C]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
jmp ['loc_4F37']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_28C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
cmp ['[ebp+var_28C],', '0']
jz ['short', 'loc_4CDA']
mov ['ecx,', '[ebp+var_28C]']
call ['??0COutFileStream@@QAE@XZ']
mov ['[ebp+var_328],', 'eax']
jmp ['short', 'loc_4CE4']
mov ['[ebp+var_328],', '0']
mov ['edx,', '[ebp+var_328]']
mov ['[ebp+var_288],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['eax,', '[ebp+var_288]']
mov ['[ebp+var_148],', 'eax']
mov ['ecx,', '[ebp+var_148]']
push ['ecx']
lea ['ecx,', '[ebp+var_120]']
call ['??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z']
lea ['ecx,', '[ebp+var_120]']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_12C]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
mov ['[ebp+var_151],', '0']
lea ['ecx,', '[ebp+var_164]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
mov ['[ebp+var_16C],', '0']
jmp ['short', 'loc_4D5A']
mov ['edx,', '[ebp+var_16C]']
add ['edx,', '1']
mov ['[ebp+var_16C],', 'edx']
cmp ['[ebp+var_16C],', '10000h']
jnb ['loc_4E91']
mov ['eax,', '[ebp+arg_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4DEB']
cmp ['[ebp+var_16C],', '0']
jbe ['short', 'loc_4DA3']
lea ['edx,', '[ebp+var_190]']
push ['edx']
mov ['eax,', '[ebp+var_16C]']
push ['eax']
call ['?ConvertUInt32ToString@@YGXIPA_W@Z']
lea ['ecx,', '[ebp+var_190]']
push ['ecx']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '4Ch']
call ['??4UString@@QAEAAV0@PB_W@Z']
lea ['edx,', '[ebp+var_298]']
push ['edx']
mov ['ecx,', '[ebp+arg_14]']
call ['?GetTempPathA@CArchivePath@@QBE?AVUString@@XZ']
mov ['[ebp+var_32C],', 'eax']
mov ['eax,', '[ebp+var_32C]']
mov ['[ebp+var_330],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
mov ['ecx,', '[ebp+var_330]']
push ['ecx']
lea ['ecx,', '[ebp+var_164]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
lea ['ecx,', '[ebp+var_298]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_4E31']
lea ['edx,', '[ebp+var_2A4]']
push ['edx']
mov ['ecx,', '[ebp+arg_14]']
call ['?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ']
mov ['[ebp+var_334],', 'eax']
mov ['eax,', '[ebp+var_334]']
mov ['[ebp+var_338],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
mov ['ecx,', '[ebp+var_338]']
push ['ecx']
lea ['ecx,', '[ebp+var_164]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1UString@@QAE@XZ']
push ['0']
lea ['ecx,', '[ebp+var_164]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_148]']
call ['?Create@COutFileStream@@QAE_NPB_W_N@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4E69']
lea ['eax,', '[ebp+var_164]']
push ['eax']
mov ['ecx,', '[ebp+arg_28]']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['[ebp+var_151],', '1']
jmp ['short', 'loc_4E91']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '50h']
jz ['short', 'loc_4E7F']
jmp ['short', 'loc_4E91']
mov ['ecx,', '[ebp+arg_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3Ch]']
test ['edx,', 'edx']
jnz ['short', 'loc_4E8C']
jmp ['short', 'loc_4E91']
jmp ['loc_4D4B']
movzx ['eax,', '[ebp+var_151]']
test ['eax,', 'eax']
jnz ['loc_4F28']
lea ['ecx,', '[ebp+var_164]']
push ['ecx']
push ['offset', '$SG74931']
mov ['ecx,', '[ebp+arg_2C]']
call ['?SetFromLastError@CUpdateErrorInfo@@QAEJPBDABVUString@@@Z']
mov ['[ebp+var_2A8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_164]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2A8]']
jmp ['loc_5E99']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_164]']
call ['??1UString@@QAE@XZ']
jmp ['loc_5155']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0C4h]']
test ['eax,', 'eax']
jz ['short', 'loc_4FB3']
mov ['[ebp+var_2AC],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2AC]']
jmp ['loc_5E99']
cmp ['[ebp+arg_10],', '0']
jz ['loc_504E']
mov ['ecx,', '[ebp+arg_10]']
call ['?GetGlobalOffset@CArc@@QBE_JXZ']
mov ['[ebp+var_340],', 'eax']
mov ['[ebp+var_33C],', 'edx']
cmp ['[ebp+var_33C],', '0']
jl ['short', 'loc_504E']
jg ['short', 'loc_4FE5']
cmp ['[ebp+var_340],', '0']
jbe ['short', 'loc_504E']
mov ['[ebp+var_2B0],', '80004001h']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2B0]']
jmp ['loc_5E99']
push ['50h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_2B8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
cmp ['[ebp+var_2B8],', '0']
jz ['short', 'loc_507E']
mov ['ecx,', '[ebp+var_2B8]']
call ['??0COutMultiVolStream@@QAE@XZ']
mov ['[ebp+var_344],', 'eax']
jmp ['short', 'loc_5088']
mov ['[ebp+var_344],', '0']
mov ['ecx,', '[ebp+var_344]']
mov ['[ebp+var_2B4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['edx,', '[ebp+var_2B4]']
mov ['[ebp+var_150],', 'edx']
mov ['eax,', '[ebp+var_150]']
push ['eax']
lea ['ecx,', '[ebp+var_120]']
call ['??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z']
lea ['ecx,', '[ebp+var_120]']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_12C]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '108h']
push ['ecx']
mov ['ecx,', '[ebp+var_150]']
add ['ecx,', '34h']
call ['??4?$CRecordVector@_K@@QAEAAV0@ABV0@@Z']
lea ['edx,', '[ebp+var_2C4]']
push ['edx']
mov ['ecx,', '[ebp+arg_14]']
call ['?GetFinalVolPath@CArchivePath@@QBE?AVUString@@XZ']
mov ['[ebp+var_348],', 'eax']
mov ['eax,', '[ebp+var_348]']
mov ['[ebp+var_34C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
mov ['ecx,', '[ebp+var_34C]']
push ['ecx']
mov ['ecx,', '[ebp+var_150]']
add ['ecx,', '40h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_2C4]']
call ['??1UString@@QAE@XZ']
push ['2Eh']
mov ['ecx,', '[ebp+var_150]']
add ['ecx,', '40h']
call ['??YUString@@QAEAAV0@_W@Z']
mov ['edx,', '[ebp+var_150]']
mov ['eax,', '[ebp+arg_28]']
mov ['[edx+4Ch],', 'eax']
mov ['ecx,', '[ebp+var_150]']
call ['?Init@COutMultiVolStream@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '28h']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UIOutArchive@@@@QBEPAUIOutArchive@@XZ']
push ['eax']
call ['?SetProperties@@YGJPAUIUnknown@@ABV?$CObjectVector@UCProperty@@@@@Z']
mov ['[ebp+var_198],', 'eax']
cmp ['[ebp+var_198],', '0']
jz ['short', 'loc_51E4']
mov ['edx,', '[ebp+var_198]']
mov ['[ebp+var_2C8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2C8]']
jmp ['loc_5E99']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0A4h]']
test ['ecx,', 'ecx']
jz ['loc_57C6']
push ['58h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_2D0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
cmp ['[ebp+var_2D0],', '0']
jz ['short', 'loc_5226']
mov ['ecx,', '[ebp+var_2D0]']
call ['??0CInFileStream@@QAE@XZ']
mov ['[ebp+var_350],', 'eax']
jmp ['short', 'loc_5230']
mov ['[ebp+var_350],', '0']
mov ['edx,', '[ebp+var_350]']
mov ['[ebp+var_2CC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['eax,', '[ebp+var_2CC]']
mov ['[ebp+var_19C],', 'eax']
mov ['ecx,', '[ebp+var_19C]']
push ['ecx']
lea ['ecx,', '[ebp+var_1A4]']
call ['??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0A8h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_19C]']
call ['?Open@CInFileStream@@QAE_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_5311']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0A8h']
push ['eax']
push ['offset', '$SG74957']
mov ['ecx,', '[ebp+arg_2C]']
call ['?SetFromLastError@CUpdateErrorInfo@@QAEJPBDABVUString@@@Z']
mov ['[ebp+var_2D4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1A4]']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2D4]']
jmp ['loc_5E99']
lea ['ecx,', '[ebp+var_1B0]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
mov ['[ebp+var_1B8],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '108h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_5353']
lea ['ecx,', '[ebp+var_12C]']
push ['ecx']
lea ['ecx,', '[ebp+var_1B0]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@ABV0@@Z']
jmp ['loc_54A7']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_2DC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '17h']
cmp ['[ebp+var_2DC],', '0']
jz ['short', 'loc_5383']
mov ['ecx,', '[ebp+var_2DC]']
call ['??0COutFileStream@@QAE@XZ']
mov ['[ebp+var_354],', 'eax']
jmp ['short', 'loc_538D']
mov ['[ebp+var_354],', '0']
mov ['edx,', '[ebp+var_354]']
mov ['[ebp+var_2D8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
mov ['eax,', '[ebp+var_2D8]']
mov ['[ebp+var_1B8],', 'eax']
mov ['ecx,', '[ebp+var_1B8]']
push ['ecx']
lea ['ecx,', '[ebp+var_1B0]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
lea ['edx,', '[ebp+var_1C8]']
push ['edx']
mov ['ecx,', '[ebp+arg_14]']
call ['?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
push ['0']
lea ['ecx,', '[ebp+var_1C8]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_1B8]']
call ['?Create@COutFileStream@@QAE_NPB_W_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['loc_5498']
lea ['ecx,', '[ebp+var_1C8]']
push ['ecx']
push ['offset', '$SG74971']
mov ['ecx,', '[ebp+arg_2C]']
call ['?SetFromLastError@CUpdateErrorInfo@@QAEJPBDABVUString@@@Z']
mov ['[ebp+var_2E0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
lea ['ecx,', '[ebp+var_1C8]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_1B0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1A4]']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2E0]']
jmp ['loc_5E99']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
lea ['ecx,', '[ebp+var_1C8]']
call ['??1UString@@QAE@XZ']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_1D8]']
push ['edx']
mov ['eax,', '[ebp+var_19C]']
add ['eax,', '4']
mov ['ecx,', '[ebp+var_19C]']
mov ['edx,', '[ecx+4]']
push ['eax']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1E0],', 'eax']
cmp ['[ebp+var_1E0],', '0']
jz ['loc_556B']
mov ['ecx,', '[ebp+var_1E0]']
mov ['[ebp+var_2E4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_1B0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1A4]']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2E4]']
jmp ['loc_5E99']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_1D4]']
push ['edx']
mov ['eax,', '[ebp+var_1D8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0A8h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_30]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_30]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1E4],', 'eax']
cmp ['[ebp+var_1E4],', '0']
jz ['loc_5639']
mov ['ecx,', '[ebp+var_1E4]']
mov ['[ebp+var_2E8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_1B0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1A4]']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2E8]']
jmp ['loc_5E99']
push ['0']
lea ['ecx,', '[ebp+var_1B0]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_1A4]']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
call ['?CopyStream@NCompress@@YGJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_1E8],', 'eax']
cmp ['[ebp+var_1E8],', '0']
jz ['loc_56F4']
mov ['edx,', '[ebp+var_1E8]']
mov ['[ebp+var_2EC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_1B0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1A4]']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2EC]']
jmp ['loc_5E99']
cmp ['[ebp+var_1B8],', '0']
jz ['loc_57A8']
mov ['ecx,', '[ebp+var_1B8]']
call ['?Close@COutFileStream@@QAEJXZ']
mov ['[ebp+var_1EC],', 'eax']
cmp ['[ebp+var_1EC],', '0']
jz ['loc_57A8']
mov ['eax,', '[ebp+var_1EC]']
mov ['[ebp+var_2F0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_1B0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1A4]']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2F0]']
jmp ['loc_5E99']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
lea ['ecx,', '[ebp+var_1B0]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1A4]']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
lea ['ecx,', '[ebp+var_1F4]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '19h']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0A4h]']
test ['edx,', 'edx']
jnz ['short', 'loc_580C']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_580C']
mov ['eax,', '[ebp+arg_10]']
mov ['[ebp+var_358],', 'eax']
mov ['ecx,', '[ebp+var_358]']
mov ['edx,', '[ebp+var_358]']
mov ['eax,', '[ecx+0D0h]']
or ['eax,', '[edx+0D4h]']
jnz ['short', 'loc_5823']
lea ['ecx,', '[ebp+var_12C]']
push ['ecx']
lea ['ecx,', '[ebp+var_1F4]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@ABV0@@Z']
jmp ['loc_5A63']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '4']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_35C],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_35C]']
push ['edx']
mov ['eax,', '[ebp+var_35C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1FC],', 'eax']
cmp ['[ebp+var_1FC],', '0']
jz ['short', 'loc_58E2']
mov ['eax,', '[ebp+var_1FC]']
mov ['[ebp+var_2F4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1F4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2F4]']
jmp ['loc_5E99']
push ['0']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx+0D4h]']
push ['edx']
mov ['eax,', '[ecx+0D0h]']
push ['eax']
lea ['ecx,', '[ebp+var_12C]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '4']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
call ['?CopyStream_ExactSize@NCompress@@YGJPAUISequentialInStream@@PAUISequentialOutStream@@_KPAUICompressProgressInfo@@@Z']
mov ['[ebp+var_200],', 'eax']
cmp ['[ebp+var_200],', '0']
jz ['short', 'loc_599B']
mov ['ecx,', '[ebp+var_200]']
mov ['[ebp+var_2F8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1F4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2F8]']
jmp ['loc_5E99']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0C4h]']
test ['eax,', 'eax']
jz ['short', 'loc_59C0']
lea ['ecx,', '[ebp+var_12C]']
push ['ecx']
lea ['ecx,', '[ebp+var_1F4]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@ABV0@@Z']
jmp ['loc_5A63']
push ['28h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_300],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1Ah']
cmp ['[ebp+var_300],', '0']
jz ['short', 'loc_59F0']
mov ['ecx,', '[ebp+var_300]']
call ['??0CTailOutStream@@QAE@XZ']
mov ['[ebp+var_360],', 'eax']
jmp ['short', 'loc_59FA']
mov ['[ebp+var_360],', '0']
mov ['edx,', '[ebp+var_360]']
mov ['[ebp+var_2FC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '19h']
mov ['eax,', '[ebp+var_2FC]']
mov ['[ebp+var_204],', 'eax']
mov ['ecx,', '[ebp+var_204]']
push ['ecx']
lea ['ecx,', '[ebp+var_1F4]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
lea ['edx,', '[ebp+var_120]']
push ['edx']
mov ['ecx,', '[ebp+var_204]']
add ['ecx,', '18h']
call ['??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@ABV0@@Z']
mov ['eax,', '[ebp+var_204]']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx+0D0h]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ecx+0D4h]']
mov ['[eax+24h],', 'ecx']
mov ['ecx,', '[ebp+var_204]']
call ['?Init@CTailOutStream@@QAEXXZ']
lea ['ecx,', '[ebp+var_18]']
call ['??C?$CMyComPtr@UIOutArchive@@@@QBEPAUIOutArchive@@XZ']
mov ['[ebp+var_364],', 'eax']
lea ['ecx,', '[ebp+var_114]']
call ['??B?$CMyComPtr@UIArchiveUpdateCallback@@@@QBEPAUIArchiveUpdateCallback@@XZ']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['?Size@?$CRecordVector@UCUpdatePair2@@@@QBEIXZ']
push ['eax']
lea ['ecx,', '[ebp+var_1F4]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_364]']
push ['edx']
mov ['eax,', '[ebp+var_364]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_208],', 'eax']
mov ['eax,', '[ebp+var_208]']
mov ['[ebp+var_20C],', 'eax']
cmp ['[ebp+var_20C],', '0']
jz ['short', 'loc_5B44']
mov ['ecx,', '[ebp+var_20C]']
mov ['[ebp+var_304],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1F4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_304]']
jmp ['loc_5E99']
mov ['ecx,', '[ebp+var_10C]']
call ['?AreAllFilesClosed@CArchiveUpdateCallback@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_5BF7']
push ['offset', '$SG75009']
mov ['ecx,', '[ebp+arg_2C]']
add ['ecx,', '4']
call ['??4AString@@QAEAAV0@PBD@Z']
mov ['eax,', '[ebp+var_10C]']
add ['eax,', '4Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_2C]']
add ['ecx,', '10h']
call ['??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z']
mov ['[ebp+var_308],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1F4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_308]']
jmp ['loc_5E99']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0F9h]']
test ['edx,', 'edx']
jz ['loc_5D6A']
mov ['[ebp+FileTime1.dwLowDateTime],', '0']
mov ['[ebp+FileTime1.dwHighDateTime],', '0']
mov ['[ebp+var_220],', '0']
jmp ['short', 'loc_5C38']
mov ['eax,', '[ebp+var_220]']
add ['eax,', '1']
mov ['[ebp+var_220],', 'eax']
lea ['ecx,', '[ebp+var_5C]']
call ['?Size@?$CRecordVector@UCUpdatePair2@@@@QBEIXZ']
cmp ['[ebp+var_220],', 'eax']
jnb ['loc_5D20']
mov ['ecx,', '[ebp+var_220]']
push ['ecx']
lea ['ecx,', '[ebp+var_5C]']
call ['??A?$CRecordVector@UCUpdatePair2@@@@QAEAAUCUpdatePair2@@I@Z']
mov ['[ebp+var_224],', 'eax']
mov ['[ebp+lpFileTime2],', '0']
mov ['edx,', '[ebp+var_224]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
test ['eax,', 'eax']
jz ['short', 'loc_5CA5']
mov ['ecx,', '[ebp+var_224]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jl ['short', 'loc_5CA5']
mov ['edx,', '[ebp+var_224]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
add ['ecx,', '24h']
call ['??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z']
add ['eax,', '18h']
mov ['[ebp+lpFileTime2],', 'eax']
jmp ['short', 'loc_5CDA']
mov ['ecx,', '[ebp+var_224]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
test ['edx,', 'edx']
jz ['short', 'loc_5CDA']
mov ['eax,', '[ebp+var_224]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jl ['short', 'loc_5CDA']
mov ['ecx,', '[ebp+var_224]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+arg_18]']
call ['??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z']
add ['eax,', '8']
mov ['[ebp+lpFileTime2],', 'eax']
cmp ['[ebp+lpFileTime2],', '0']
jz ['short', 'loc_5D1B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpFileTime2]']
push ['eax']
lea ['ecx,', '[ebp+FileTime1]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CompareFileTime@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jge ['short', 'loc_5D1B']
mov ['edx,', '[ebp+lpFileTime2]']
mov ['eax,', '[edx]']
mov ['ecx,', '[edx+4]']
mov ['[ebp+FileTime1.dwLowDateTime],', 'eax']
mov ['[ebp+FileTime1.dwHighDateTime],', 'ecx']
jmp ['loc_5C29']
cmp ['[ebp+FileTime1.dwLowDateTime],', '0']
jnz ['short', 'loc_5D32']
cmp ['[ebp+FileTime1.dwHighDateTime],', '0']
jz ['short', 'loc_5D6A']
cmp ['[ebp+var_148],', '0']
jz ['short', 'loc_5D4F']
lea ['edx,', '[ebp+FileTime1]']
push ['edx']
mov ['ecx,', '[ebp+var_148]']
call ['?SetMTime@COutFileStream@@QAE_NPBU_FILETIME@@@Z']
jmp ['short', 'loc_5D6A']
cmp ['[ebp+var_150],', '0']
jz ['short', 'loc_5D6A']
lea ['eax,', '[ebp+FileTime1]']
push ['eax']
mov ['ecx,', '[ebp+var_150]']
call ['?SetMTime@COutMultiVolStream@@QAE_NPBU_FILETIME@@@Z']
cmp ['[ebp+arg_30],', '0']
jz ['short', 'loc_5DEE']
mov ['dword', 'ptr', '[ebp+var_234],', '0']
mov ['dword', 'ptr', '[ebp+var_234+4],', '0']
cmp ['[ebp+var_148],', '0']
jz ['short', 'loc_5DA1']
lea ['ecx,', '[ebp+var_234]']
push ['ecx']
mov ['ecx,', '[ebp+var_148]']
call ['?GetSize@COutFileStream@@QAEJPA_K@Z']
jmp ['short', 'loc_5DDA']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_5DC3']
mov ['ecx,', '[ebp+var_14C]']
call ['?GetSize@CStdOutFileStream@@QBE_KXZ']
mov ['dword', 'ptr', '[ebp+var_234],', 'eax']
mov ['dword', 'ptr', '[ebp+var_234+4],', 'edx']
jmp ['short', 'loc_5DDA']
mov ['ecx,', '[ebp+var_150]']
call ['?GetSize@COutMultiVolStream@@QBE_KXZ']
mov ['dword', 'ptr', '[ebp+var_234],', 'eax']
mov ['dword', 'ptr', '[ebp+var_234+4],', 'edx']
mov ['edx,', '[ebp+arg_34]']
mov ['eax,', 'dword', 'ptr', '[ebp+var_234]']
mov ['[edx],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_234+4]']
mov ['[edx+4],', 'ecx']
cmp ['[ebp+var_148],', '0']
jz ['short', 'loc_5E0A']
mov ['ecx,', '[ebp+var_148]']
call ['?Close@COutFileStream@@QAEJXZ']
mov ['[ebp+var_208],', 'eax']
jmp ['short', 'loc_5E24']
cmp ['[ebp+var_150],', '0']
jz ['short', 'loc_5E24']
mov ['ecx,', '[ebp+var_150]']
call ['?Close@COutMultiVolStream@@QAEJXZ']
mov ['[ebp+var_208],', 'eax']
mov ['edx,', '[ebp+var_208]']
mov ['[ebp+var_30C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_1F4]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_12C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_120]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_30C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN165']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '364h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['38h']
endp
?EnumerateInArchiveItems@@YGJABVCCensor@NWildcard@@ABVCArc@@AAV?$CObjectVector@UCArcItem@@@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?EnumerateInArchiveItems@@YGJABVCCensor@NWildcard@@ABVCArc@@AAV?$CObjectVector@UCArcItem@@@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0DCh']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?Clear@?$CObjectVector@UCArcItem@@@@QAEXXZ']
mov ['ecx,', '[ebp+arg_4]']
call ['??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[edx+14h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6147']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_6420']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?ClearAndReserve@?$CObjectVector@UCArcItem@@@@QAEXI@Z']
lea ['ecx,', '[ebp+var_64]']
call ['??0CReadArcItem@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_6C],', '0']
jmp ['short', 'loc_6174']
mov ['eax,', '[ebp+var_6C]']
add ['eax,', '1']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['loc_6401']
lea ['ecx,', '[ebp+var_A0]']
call ['??0CArcItem@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['edx,', '[ebp+var_64]']
push ['edx']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetItem@CArc@@QBEJIAAUCReadArcItem@@@Z']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '0']
jz ['short', 'loc_61E3']
mov ['ecx,', '[ebp+var_A8]']
mov ['[ebp+var_D0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CArcItem@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_64]']
call ['??1CReadArcItem@@QAE@XZ']
mov ['eax,', '[ebp+var_D0]']
jmp ['loc_6420']
lea ['edx,', '[ebp+var_64]']
push ['edx']
lea ['ecx,', '[ebp+var_90]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['al,', '[ebp+var_32]']
mov ['[ebp+var_84],', 'al']
mov ['cl,', '[ebp+var_34]']
mov ['[ebp+var_83],', 'cl']
lea ['edx,', '[ebp+var_64]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?Censor_CheckPath@@YG_NABVCCensor@NWildcard@@ABUCReadArcItem@@@Z']
mov ['[ebp+var_80],', 'al']
lea ['ecx,', '[ebp+var_81]']
push ['ecx']
lea ['edx,', '[ebp+var_98]']
push ['edx']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetItemMTime@CArc@@QBEJIAAU_FILETIME@@AA_N@Z']
mov ['[ebp+var_AC],', 'eax']
cmp ['[ebp+var_AC],', '0']
jz ['short', 'loc_6272']
mov ['ecx,', '[ebp+var_AC]']
mov ['[ebp+var_D4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CArcItem@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_64]']
call ['??1CReadArcItem@@QAE@XZ']
mov ['eax,', '[ebp+var_D4]']
jmp ['loc_6420']
lea ['edx,', '[ebp+var_82]']
push ['edx']
lea ['eax,', '[ebp+var_A0]']
push ['eax']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetItemSize@CArc@@QBEJIAA_KAA_N@Z']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '0']
jz ['short', 'loc_62D0']
mov ['edx,', '[ebp+var_B0]']
mov ['[ebp+var_D8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CArcItem@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_64]']
call ['??1CReadArcItem@@QAE@XZ']
mov ['eax,', '[ebp+var_D8]']
jmp ['loc_6420']
lea ['ecx,', '[ebp+var_C4]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_C4]']
push ['eax']
push ['28h']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_CC],', 'eax']
cmp ['[ebp+var_CC],', '0']
jz ['short', 'loc_6356']
mov ['eax,', '[ebp+var_CC]']
mov ['[ebp+var_DC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_C4]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CArcItem@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_64]']
call ['??1CReadArcItem@@QAE@XZ']
mov ['eax,', '[ebp+var_DC]']
jmp ['loc_6420']
movzx ['ecx,', '[ebp+var_C4]']
cmp ['ecx,', '13h']
jnz ['short', 'loc_63C9']
mov ['edx,', '[ebp+var_BC]']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_E8],', 'eax']
cmp ['[ebp+var_E8],', '0']
jl ['short', 'loc_638A']
cmp ['[ebp+var_E8],', '2']
jle ['short', 'loc_6388']
jmp ['short', 'loc_638A']
jmp ['short', 'loc_63C9']
mov ['[ebp+var_E0],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_C4]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CArcItem@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_64]']
call ['??1CReadArcItem@@QAE@XZ']
mov ['eax,', '[ebp+var_E0]']
jmp ['short', 'loc_6420']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_C4]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_7C],', 'ecx']
lea ['edx,', '[ebp+var_A0]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?AddInReserved@?$CObjectVector@UCArcItem@@@@QAEXABUCArcItem@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CArcItem@@QAE@XZ']
jmp ['loc_616B']
mov ['[ebp+var_E4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_64]']
call ['??1CReadArcItem@@QAE@XZ']
mov ['eax,', '[ebp+var_E4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Censor_CheckPath@@YG_NABVCCensor@NWildcard@@ABUCReadArcItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['dword', 'ptr', '[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_64DC']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCPair@NWildcard@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_651F']
lea ['ecx,', '[ebp+var_10+3]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCPair@NWildcard@@@@QBEABUCPair@NWildcard@@I@Z']
add ['eax,', '0Ch']
push ['eax']
call ['?CensorNode_CheckPath2@@YG_NABVCCensorNode@NWildcard@@ABUCReadArcItem@@AA_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_651D']
movzx ['edx,', '[ebp+var_10+3]']
test ['edx,', 'edx']
jnz ['short', 'loc_6519']
xor ['al,', 'al']
jmp ['short', 'loc_6522']
mov ['byte', 'ptr', '[ebp+var_4+3],', '1']
jmp ['short', 'loc_64D3']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?CompareRefSortPair@@YGHPBUCRefSortPair@@0PAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['??$MyCompare@I@@YGHII@Z']
neg ['eax']
mov ['[ebp+var_4],', 'eax']
jz ['short', 'loc_6594']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_65A7']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['??$MyCompare@I@@YGHII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetNumSlashes@@YGIPB_W@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_8],', 'cx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
test ['eax,', 'eax']
jnz ['short', 'loc_65F7']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_6614']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['ecx,', '5Ch']
jz ['short', 'loc_6609']
movzx ['edx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['edx,', '2Fh']
jnz ['short', 'loc_6612']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_65D7']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Get_HRESULT_Error@CUpdateErrorInfo@@QBEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_664C']
mov ['[ebp+var_8],', '80004005h']
jmp ['short', 'loc_665A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_HRESULT_FROM_WIN32@4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_HRESULT_FROM_WIN32@4 proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jg ['short', 'loc_6685']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_669D']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FFFFh']
or ['ecx,', '70000h']
or ['ecx,', '80000000h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetMTime@COutFileStream@@QAE_NPBU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?SetMTime@COutFile@NIO@NFile@NWindows@@QAE_NPBU_FILETIME@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@COutFileStream@@QAE_NPB_W_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CAltStreamInfo@COutMultiVolStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CAltStreamInfo@COutMultiVolStream@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CAltStreamInfo@COutMultiVolStream@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$??0CAltStreamInfo@COutMultiVolStream@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CAltStreamInfo@COutMultiVolStream@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CAltStreamInfo@COutMultiVolStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CAltStreamInfo@COutMultiVolStream@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CAltStreamInfo@COutMultiVolStream@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$??1CAltStreamInfo@COutMultiVolStream@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CAltStreamInfo@COutMultiVolStream@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0COutFileStream@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COutFileStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0COutFile@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@COutFileStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6BA0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_6BC3']
push ['offset', '_IID_IOutStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6BBC']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_6BC3']
mov ['eax,', '80004002h']
jmp ['short', 'loc_6BD4']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@COutFileStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@COutFileStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_6C8B']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_6CC3']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_6CBA']
mov ['esi,', 'esp']
push ['1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_6CC1']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCOutFileStream@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutFileStream@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6CFE']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1COutFileStream@@UAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COutFileStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1COutFile@NIO@NFile@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CFileBase@NIO@NFile@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IOutStream@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutFile@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFileBase@NIO@NFile@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?ParseFromPath@CArchivePath@@QAEXABVUString@@W4EArcNameMode@@@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ParseFromPath@CArchivePath@@QAEXABVUString@@W4EArcNameMode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ParseFromPath@CArchivePath@@QAEXABVUString@@W4EArcNameMode@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ$1 proc near
mov ['eax,', '[ebp-28h]']
and ['eax,', '1']
jz ['locret_6EE7']
and ['dword', 'ptr', '[ebp-28h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__ehhandler$?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetFinalPath@CArchivePath@@QBE?AVUString@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetFinalVolPath@CArchivePath@@QBE?AVUString@@XZ$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetFinalVolPath@CArchivePath@@QBE?AVUString@@XZ$1 proc near
mov ['eax,', '[ebp-28h]']
and ['eax,', '1']
jz ['locret_6F23']
and ['dword', 'ptr', '[ebp-28h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__ehhandler$?GetFinalVolPath@CArchivePath@@QBE?AVUString@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetFinalVolPath@CArchivePath@@QBE?AVUString@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetTempPathA@CArchivePath@@QBE?AVUString@@XZ$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetTempPathA@CArchivePath@@QBE?AVUString@@XZ$1 proc near
mov ['eax,', '[ebp-28h]']
and ['eax,', '1']
jz ['locret_6F5F']
and ['dword', 'ptr', '[ebp-28h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__ehhandler$?GetTempPathA@CArchivePath@@QBE?AVUString@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetTempPathA@CArchivePath@@QBE?AVUString@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetArcPath@CUpdateOptions@@QAE_NPBVCCodecs@@ABVUString@@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?SetArcPath@CUpdateOptions@@QAE_NPBVCCodecs@@ABVUString@@@Z$1 proc near
lea ['ecx,', '[ebp-58h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?SetArcPath@CUpdateOptions@@QAE_NPBVCCodecs@@ABVUString@@@Z$2 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?SetArcPath@CUpdateOptions@@QAE_NPBVCCodecs@@ABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-60h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetArcPath@CUpdateOptions@@QAE_NPBVCCodecs@@ABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetNewPath@CRenamePair@@QBE_N_NABVUString@@AAV2@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?GetNewPath@CRenamePair@@QBE_N_NABVUString@@AAV2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetNewPath@CRenamePair@@QBE_N_NABVUString@@AAV2@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$2 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1CProperty@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$3 proc near
lea ['ecx,', '[ebp-63Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$4 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$5 proc near
lea ['ecx,', '[ebp-0B8h]']
jmp ['??1CArchiveLink@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$6 proc near
lea ['ecx,', '[ebp-0CCh]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$7 proc near
lea ['ecx,', '[ebp-10Ch]']
jmp ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$8 proc near
lea ['ecx,', '[ebp-120h]']
jmp ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$9 proc near
lea ['ecx,', '[ebp-134h]']
jmp ['??1?$CRecordVector@H@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$10 proc near
lea ['ecx,', '[ebp-194h]']
jmp ['??1COpenOptions@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$11 proc near
lea ['ecx,', '[ebp-684h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$12 proc near
lea ['ecx,', '[ebp-258h]']
jmp ['??1CDirItems@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$13 proc near
lea ['ecx,', '[ebp-2B0h]']
jmp ['??1CDirItem@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$14 proc near
lea ['ecx,', '[ebp-30Ch]']
jmp ['??1CDirItem@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$15 proc near
lea ['ecx,', '[ebp-360h]']
jmp ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$16 proc near
lea ['ecx,', '[ebp-374h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$17 proc near
lea ['ecx,', '[ebp-394h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$18 proc near
lea ['ecx,', '[ebp-3B0h]']
jmp ['??1CTempDir@NDir@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$19 proc near
lea ['ecx,', '[ebp-3C4h]']
jmp ['??1CTempFiles@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$20 proc near
lea ['ecx,', '[ebp-3E8h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$21 proc near
lea ['ecx,', '[ebp-3FCh]']
jmp ['??1?$CObjectVector@UCArcItem@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$22 proc near
lea ['ecx,', '[ebp-410h]']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$23 proc near
lea ['ecx,', '[ebp-430h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$24 proc near
lea ['ecx,', '[ebp-6ACh]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$25 proc near
lea ['ecx,', '[ebp-470h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$26 proc near
lea ['ecx,', '[ebp-47Ch]']
jmp ['??1CLibrary@NDLL@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$27 proc near
lea ['ecx,', '[ebp-494h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$28 proc near
lea ['ecx,', '[ebp-4B0h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$29 proc near
lea ['ecx,', '[ebp-4C4h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$30 proc near
lea ['ecx,', '[ebp-4DCh]']
jmp ['??1CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$31 proc near
lea ['ecx,', '[ebp-4F0h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$32 proc near
lea ['ecx,', '[ebp-504h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$33 proc near
lea ['ecx,', '[ebp-518h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$34 proc near
lea ['ecx,', '[ebp-52Ch]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$35 proc near
lea ['ecx,', '[ebp-598h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$36 proc near
lea ['ecx,', '[ebp-5CCh]']
jmp ['??1?$CRecordVector@UCRefSortPair@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$37 proc near
lea ['ecx,', '[ebp-5E0h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$38 proc near
lea ['ecx,', '[ebp-5F8h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z$39 proc near
lea ['ecx,', '[ebp-620h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-72Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$1 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1?$CMyComPtr@UIInArchive@@@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$2 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$3 proc near
lea ['ecx,', '[ebp-70h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$4 proc near
lea ['ecx,', '[ebp-90h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$5 proc near
lea ['ecx,', '[ebp-0B0h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$6 proc near
lea ['ecx,', '[ebp-0E4h]']
jmp ['??1?$CRecordVector@UCUpdatePair@@@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$7 proc near
mov ['eax,', '[ebp-268h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$8 proc near
lea ['ecx,', '[ebp-114h]']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$9 proc near
lea ['ecx,', '[ebp-120h]']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$10 proc near
lea ['ecx,', '[ebp-12Ch]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$11 proc near
lea ['ecx,', '[ebp-140h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$12 proc near
lea ['ecx,', '[ebp-278h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$13 proc near
mov ['eax,', '[ebp-284h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$14 proc near
mov ['eax,', '[ebp-28Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$15 proc near
lea ['ecx,', '[ebp-164h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$16 proc near
lea ['ecx,', '[ebp-298h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$17 proc near
lea ['ecx,', '[ebp-2A4h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$18 proc near
mov ['eax,', '[ebp-2B8h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$19 proc near
lea ['ecx,', '[ebp-2C4h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$20 proc near
mov ['eax,', '[ebp-2D0h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$21 proc near
lea ['ecx,', '[ebp-1A4h]']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$22 proc near
lea ['ecx,', '[ebp-1B0h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$23 proc near
mov ['eax,', '[ebp-2DCh]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$24 proc near
lea ['ecx,', '[ebp-1C8h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$25 proc near
lea ['ecx,', '[ebp-1F4h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z$26 proc near
mov ['eax,', '[ebp-300h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-364h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Compress@@YGJABUCUpdateOptions@@_NPAVCCodecs@@ABUCActionSet@NUpdateArchive@@PBVCArc@@AAUCArchivePath@@ABV?$CObjectVector@UCArcItem@@@@PAEABVCDirItems@@PBUCDirItem@@AAVCTempFiles@@AAUCUpdateErrorInfo@@PAUIUpdateCallbackUI@@AAUCFinishArchiveStat@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?EnumerateInArchiveItems@@YGJABVCCensor@NWildcard@@ABVCArc@@AAV?$CObjectVector@UCArcItem@@@@@Z$0 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1CReadArcItem@@QAE@XZ']
endp
__unwindfunclet$?EnumerateInArchiveItems@@YGJABVCCensor@NWildcard@@ABVCArc@@AAV?$CObjectVector@UCArcItem@@@@@Z$1 proc near
lea ['ecx,', '[ebp-0A0h]']
jmp ['??1CArcItem@@QAE@XZ']
endp
__unwindfunclet$?EnumerateInArchiveItems@@YGJABVCCensor@NWildcard@@ABVCArc@@AAV?$CObjectVector@UCArcItem@@@@@Z$2 proc near
lea ['ecx,', '[ebp-0C4h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__ehhandler$?EnumerateInArchiveItems@@YGJABVCCensor@NWildcard@@ABVCArc@@AAV?$CObjectVector@UCArcItem@@@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?EnumerateInArchiveItems@@YGJABVCCensor@NWildcard@@ABVCArc@@AAV?$CObjectVector@UCArcItem@@@@@Z']
jmp ['___CxxFrameHandler3']
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Ptr@UString@@QBEPB_WI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?StringsAreEqualNoCase@@YG_NPB_W0@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReverseFind_Dot@UString@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['2Eh']
mov ['ecx,', '[ebp+var_4]']
call ['?ReverseFind@UString@@QBEH_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteBack@UString@@QAEXXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[edx+ecx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteFrom@UString@@QAEXI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_782C']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YUString@@QAEAAV0@_W@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_7888']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+eax*2],', 'dx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetPathWithoutExt@CArchivePath@@QBE?AVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '18h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??H@YG?AVUString@@ABV0@0@Z']
mov ['eax,', '[ebp+var_8]']
or ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0COpenType@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ah']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Dh']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+10h],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+11h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+12h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+13h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+15h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+4],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+5],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+6],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+7],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0Eh],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0Fh],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0Dh],', '1']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COpenSpecFlags@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetMainExt@CArcInfoEx@@QBE?AVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?IsEmpty@?$CObjectVector@UCArcExtInfo@@@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_7A5E']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
or ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_7A80']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??A?$CObjectVector@UCArcExtInfo@@@@QBEABUCArcExtInfo@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['edx,', '[ebp+var_8]']
or ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsPathSepar@@YG_N_W@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '5Ch']
jz ['short', 'loc_7AB6']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '2Fh']
jz ['short', 'loc_7AB6']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_7ABD']
mov ['[ebp+var_4],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyCharUpper@@YG_W_W@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '61h']
jge ['short', 'loc_7ADA']
mov ['ax,', '[ebp+arg_0]']
jmp ['short', 'loc_7B05']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '7Ah']
jg ['short', 'loc_7AEC']
movzx ['eax,', '[ebp+arg_0]']
sub ['eax,', '20h']
jmp ['short', 'loc_7B05']
movzx ['edx,', '[ebp+arg_0]']
cmp ['edx,', '7Fh']
jg ['short', 'loc_7AFB']
mov ['ax,', '[ebp+arg_0]']
jmp ['short', 'loc_7B05']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?MyCharUpper_WIN@@YG_W_W@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@AString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Find@UString@@QBEH_W@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?FindCharPosInString@@YGHPB_W_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['10h']
mov ['ecx,', '[ebp+var_4]']
call ['?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+20h]']
and ['eax,', '[ebp+arg_0]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COpenOptions@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0COpenType@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+2Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+34h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+38h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+44h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CArchiveLink@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CArchiveLink@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CObjectVector@VCArc@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+20h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+21h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0CArcErrorInfo@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CArchiveLink@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@VCArc@@@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveLink@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??0CArchiveLink@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CArchiveLink@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CArchiveLink@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CArcErrorInfo@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CArcErrorInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+2],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+3],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CArcErrorInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CArcErrorInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CArcErrorInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CArchiveLink@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArchiveLink@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
call ['?Release@CArchiveLink@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1CArcErrorInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@VCArc@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArchiveLink@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@VCArc@@@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveLink@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveLink@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchiveLink@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1CArcErrorInfo@@QAE@XZ']
endp
__ehhandler$??1CArchiveLink@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArchiveLink@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CArcErrorInfo@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArcErrorInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArcErrorInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CArcErrorInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArcErrorInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?GetArc@CArchiveLink@@QBEPBVCArc@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Back@?$CObjectVector@VCArc@@@@QBEABVCArc@@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?NeedScanning@CActionSet@NUpdateArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_81D1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '7']
jnb ['short', 'loc_81E9']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '2']
jnz ['short', 'loc_81E7']
mov ['al,', '1']
jmp ['short', 'loc_8215']
jmp ['short', 'loc_81C8']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_81FB']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '7']
jnb ['short', 'loc_8213']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jz ['short', 'loc_8211']
mov ['al,', '1']
jmp ['short', 'loc_8215']
jmp ['short', 'loc_81F2']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDirItem@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CDirItem@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+40h],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+44h],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+48h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+4Ch],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CDirItem@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CDirItem@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$??0CDirItem@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CDirItem@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?IsDir@CDirItem@@QBE_NXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+3Ch]']
and ['eax,', '10h']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFinishArchiveStat@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetAnsiString@@YG?AVAString@@ABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z']
mov ['edx,', '[ebp+var_4]']
or ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CLibrary@NDLL@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CLibrary@NDLL@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CLibrary@NDLL@NWindows@@QAE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProc@CLibrary@NDLL@NWindows@@QBEP6GHXZPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpProcName]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetProcAddress@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CTempDir@NDir@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CTempDir@NDir@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CTempDir@NDir@NFile@NWindows@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Remove@CTempDir@NDir@NFile@NWindows@@QAE_NXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CTempDir@NDir@NFile@NWindows@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CTempDir@NDir@NFile@NWindows@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CTempDir@NDir@NFile@NWindows@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?GetPath@CTempDir@NDir@NFile@NWindows@@QBEABVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0Ch],', '1']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['dword', 'ptr', '[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_864B']
jmp ['short', 'loc_8695']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['edx,', '[ebp+var_20]']
push ['edx']
call ['?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_8689']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
call ['??9@YG_NABVUString@@0@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_8689']
mov ['ecx,', '[ebp+var_10]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ$1 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCurrentDirRestorer@NDir@NFile@NWindows@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??9@YG_NABVUString@@0@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@UString@@QBEIXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_879B']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcscmp']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_879B']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_87A2']
mov ['[ebp+var_4],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??1CTempFiles@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CTempFiles@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Clear@CTempFiles@@AAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CTempFiles@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__ehhandler$??1CTempFiles@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CTempFiles@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Left@UString@@QBE?AV1@I@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@AAE@IABV0@@Z']
mov ['edx,', '[ebp+var_8]']
or ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Flags_AltStreams@CArcInfoEx@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
and ['eax,', '2']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Flags_NtSecure@CArcInfoEx@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
and ['eax,', '4']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateOutArchive@CCodecs@@QBEJIAAV?$CMyComPtr@UIOutArchive@@@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CreateOutArchive@CCodecs@@QBEJIAAV?$CMyComPtr@UIOutArchive@@@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '8']
call ['??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_18]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx+24h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??4?$CMyComPtr@UIOutArchive@@@@QAEPAUIOutArchive@@PAU1@@Z']
xor ['eax,', 'eax']
jmp ['short', 'loc_89EB']
endp
__catch$?CreateOutArchive@CCodecs@@QBEJIAAV?$CMyComPtr@UIOutArchive@@@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-1Ch],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN7_2']
retn
endp
__ehhandler$?CreateOutArchive@CCodecs@@QBEJIAAV?$CMyComPtr@UIOutArchive@@@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CreateOutArchive@CCodecs@@QBEJIAAV?$CMyComPtr@UIOutArchive@@@@@Z']
jmp ['___CxxFrameHandler3']
endp
?GetGlobalOffset@CArc@@QBE_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+0D0h]']
add ['edx,', '[ecx+0A8h]']
mov ['esi,', '[eax+0D4h]']
adc ['esi,', '[ecx+0ACh]']
mov ['eax,', 'edx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsItemAnti@CArc@@QBEJIAA_N@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['15h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ']
push ['eax']
call ['?Archive_GetItemBoolProp@@YGJPAUIInArchive@@IKAA_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Open@CInFileStream@@QAE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetSize@CStdOutFileStream@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+8]']
mov ['edx,', '[ecx+0Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CStdOutFileStream@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CStdOutFileStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CStdOutFileStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_8C3C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_8C43']
mov ['eax,', '80004002h']
jmp ['short', 'loc_8C54']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CStdOutFileStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CStdOutFileStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_8CC7']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_8CFF']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_8CF6']
mov ['esi,', 'esp']
push ['1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_8CFD']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCStdOutFileStream@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CStdOutFileStream@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_8D3A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CStdOutFileStream@@UAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CStdOutFileStream@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetAs_NoChangeArcItem@CUpdatePair2@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+1],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+3],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CUpdatePair2@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+3],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+10h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AreAllFilesClosed@CArchiveUpdateCallback@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
call ['?IsEmpty@?$CRecordVector@I@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CTailOutStream@@QAEXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@COutMultiVolStream@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetSize@COutMultiVolStream@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+20h]']
mov ['edx,', '[ecx+24h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CUpdateProduceCallbackImp@@QAE@PBV?$CObjectVector@UCArcItem@@@@PAUIUpdateCallbackUI@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUpdateProduceCallback@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CUpdateProduceCallbackImp@@6B@']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0IUpdateProduceCallback@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IUpdateProduceCallback@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutMultiVolStream@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COutMultiVolStream@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COutMultiVolStream@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COutMultiVolStream@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAE@XZ']
endp
__unwindfunclet$??0COutMultiVolStream@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '34h']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__ehhandler$??0COutMultiVolStream@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COutMultiVolStream@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?QueryInterface@COutMultiVolStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_91DC']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_91FF']
push ['offset', '_IID_IOutStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_91F8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_91FF']
mov ['eax,', '80004002h']
jmp ['short', 'loc_9210']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@COutMultiVolStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@COutMultiVolStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_9282']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_92AC']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_92A3']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCOutMultiVolStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_92AA']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCOutMultiVolStream@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutMultiVolStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_92E6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1COutMultiVolStream@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COutMultiVolStream@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COutMultiVolStream@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAE@XZ']
endp
__unwindfunclet$??1COutMultiVolStream@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '34h']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__ehhandler$??1COutMultiVolStream@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COutMultiVolStream@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CTailOutStream@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CTailOutStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CTailOutStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_94E8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_9527']
push ['offset', '_IID_ISequentialOutStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_9504']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_9527']
push ['offset', '_IID_IOutStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_9520']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_9527']
mov ['eax,', '80004002h']
jmp ['short', 'loc_9538']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CTailOutStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CTailOutStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_95AB']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_95E3']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_95DA']
mov ['esi,', 'esp']
push ['1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_95E1']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCTailOutStream@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CTailOutStream@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_961E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CTailOutStream@@UAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CTailOutStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CReadArcItem@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CReadArcItem@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+31h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+38h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+3Ch],', '0FFFFFFFFh']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CReadArcItem@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CReadArcItem@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??0CReadArcItem@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CReadArcItem@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CReadArcItem@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CArcItem@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1Dh],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+1Eh],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+1Fh],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+20h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+28h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CReadArcItem@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CReadArcItem@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CReadArcItem@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CReadArcItem@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??1CReadArcItem@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CReadArcItem@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CReadArcItem@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CArcItem@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProperty@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CProperty@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CProperty@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CProperty@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CProperty@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CProperty@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CProperty@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CProperty@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CProperty@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CProperty@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1COpenOptions@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '48h']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CDirItems@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDirItems@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8Ch']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['??1CUniqBlocks@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1?$CObjectVector@UCDirItem@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CDirItems@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??1CDirItems@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@H@@QAE@XZ']
endp
__unwindfunclet$??1CDirItems@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@H@@QAE@XZ']
endp
__unwindfunclet$??1CDirItems@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$CObjectVector@UCDirItem@@@@QAE@XZ']
endp
__unwindfunclet$??1CDirItems@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '68h']
jmp ['??1CUniqBlocks@@QAE@XZ']
endp
__ehhandler$??1CDirItems@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDirItems@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CDirItem@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDirItem@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CDirItem@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CDirItem@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$??1CDirItem@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDirItem@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CTempFiles@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4CArchivePath@@QAEAAU0@ABU0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '18h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '24h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+3Ch]']
mov ['[edx+3Ch],', 'cl']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '40h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4Ch']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4Ch']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CUniqBlocks@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUniqBlocks@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUniqBlocks@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
endp
__unwindfunclet$??1CUniqBlocks@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??1CUniqBlocks@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUniqBlocks@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@VUString@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_9F5B']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_9FED']
mov ['ecx,', '[ebp+var_10]']
call ['?Clear@?$CObjectVector@VUString@@@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Reserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_9F8C']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_9FEA']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_9FC8']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_9FCF']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_9F83']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A118']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_A11F']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_A23A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A231']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_A238']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_A1F6']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@VUString@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_A320']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_A317']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_A31E']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_A2DC']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCPair@NWildcard@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCPair@NWildcard@@@@QBEABUCPair@NWildcard@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCPair@NWildcard@@@@QAEAAUCPair@NWildcard@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_K@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CRecordVector@_K@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_A466']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_A50A']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jbe ['short', 'loc_A4DD']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_A507']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@_K@@QAEAA_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsEmpty@?$CObjectVector@UCArcExtInfo@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCArcExtInfo@@@@QBEABUCArcExtInfo@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_A61E']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A615']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_G?$CBuffer@E@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_A61C']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_A5DA']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCArcInfoEx@@@@QAEAAUCArcInfoEx@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIInArchive@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_A72C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIInArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_A772']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIInArchive@@@@QAEPAUIInArchive@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UIInArchive@@@@QAEPAUIInArchive@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UIInArchive@@@@QAEPAUIInArchive@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_A7F4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_A817']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIOutArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIOutArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_A886']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIOutArchive@@@@QBEPAUIOutArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIOutArchive@@@@QAEPAPAUIOutArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIOutArchive@@@@QBEPAUIOutArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIOutArchive@@@@QAEPAUIOutArchive@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_A90C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_A92F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_A980']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_A9C6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VCArc@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Back@?$CObjectVector@VCArc@@@@QBEABVCArc@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Back@?$CObjectVector@VCArc@@@@QAEAAVCArc@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@VCArc@@@@QAEAAVCArc@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@VCArc@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VCArc@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_AB22']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_AB19']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCArc@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_AB20']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_AADE']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VCArc@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VCArc@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VCArc@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?IsEmpty@?$CRecordVector@I@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QAEPAEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@?$CBuffer@E@@QAEXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_ACC4']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@?$CBuffer@E@@QAEXXZ']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_ACC4']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@H@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@H@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['50h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_AE24']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CDirItem@@QAE@ABU0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_AE2B']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCDirItem@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCDirItem@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_AF46']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_AF3D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCDirItem@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_AF44']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_AF02']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCDirItem@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCDirItem@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCDirItem@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCArcItem@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CObjectVector@UCArcItem@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CObjectVector@UCArcItem@@@@QAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjectVector@UCArcItem@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CObjectVector@UCArcItem@@@@QAEXABUCArcItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddInReserved@?$CObjectVector@UCArcItem@@@@QAEXABUCArcItem@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['30h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_B0D0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CArcItem@@QAE@ABU0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_B0D7']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?AddInReserved@?$CObjectVector@UCArcItem@@@@QAEXABUCArcItem@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddInReserved@?$CObjectVector@UCArcItem@@@@QAEXABUCArcItem@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddInReserved@?$CObjectVector@UCArcItem@@@@QAEXABUCArcItem@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCArcItem@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCArcItem@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_B1F2']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_B1E9']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCArcItem@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_B1F0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_B1AE']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCArcItem@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCArcItem@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCArcItem@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@UCArcItem@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B2D8']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_B2CF']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCArcItem@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_B2D6']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_B294']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_B354']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CProperty@@QAE@ABU0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_B35B']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCUpdateArchiveCommand@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCUpdateArchiveCommand@@@@QAEAAUCUpdateArchiveCommand@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCRenamePair@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CObjectVector@UCRenamePair@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCRenamePair@@@@QBEABUCRenamePair@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B4FA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B550']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_B573']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B60E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UIOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_B65B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B6C8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_B6EB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEAAUCAltStreamInfo@COutMultiVolStream@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Back@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEAAUCAltStreamInfo@COutMultiVolStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEAAUCAltStreamInfo@COutMultiVolStream@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEIABUCAltStreamInfo@COutMultiVolStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEIABUCAltStreamInfo@COutMultiVolStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['28h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_B840']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CAltStreamInfo@COutMultiVolStream@@QAE@ABU01@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_B847']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEIABUCAltStreamInfo@COutMultiVolStream@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEIABUCAltStreamInfo@COutMultiVolStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEIABUCAltStreamInfo@COutMultiVolStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_B962']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_B959']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCAltStreamInfo@COutMultiVolStream@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_B960']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_B91E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?DeleteBack@?$CObjectVector@UCAltStreamInfo@COutMultiVolStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BA2A']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['??_GCAltStreamInfo@COutMultiVolStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_BA31']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?DeleteBack@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCOpenType@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCOpenType@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCOpenType@@@@QBEABUCOpenType@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@UCOpenType@@@@QAEIABUCOpenType@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
push ['edi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BB08']
mov ['esi,', '[ebp+arg_0]']
mov ['ecx,', '8']
mov ['edi,', '[ebp+var_8]']
rep ['movsd']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_BB0F']
mov ['[ebp+var_C],', '0']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
pop ['edi']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@UCOpenType@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_BBAD']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
jmp ['short', 'loc_BB7F']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCOpenType@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCOpenType@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@UCUpdatePair2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCUpdatePair2@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCUpdatePair2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@UCUpdatePair2@@@@QAEIUCUpdatePair2@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@UCUpdatePair2@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '14h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
??A?$CRecordVector@UCUpdatePair2@@@@QAEAAUCUpdatePair2@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '14h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@UCUpdatePair@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCUpdatePair@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@PAUIArchiveUpdateCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_BDEC']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_BE32']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIArchiveUpdateCallback@@@@QBEPAUIArchiveUpdateCallback@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@UCRefSortPair@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@UCRefSortPair@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCRefSortPair@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@UCRefSortPair@@@@QAEIUCRefSortPair@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@UCRefSortPair@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??A?$CRecordVector@UCRefSortPair@@@@QAEAAUCRefSortPair@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Sort@?$CRecordVector@UCRefSortPair@@@@QAEXP6GHPBUCRefSortPair@@0PAX@Z1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_BFA3']
jmp ['loc_C03B']
mov ['ecx,', '[ebp+var_4]']
call ['?Front@?$CRecordVector@UCRefSortPair@@@@QAEAAUCRefSortPair@@XZ']
sub ['eax,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['?SortRefDown@?$CRecordVector@UCRefSortPair@@@@SGXPAUCRefSortPair@@IIP6GHPBU2@1PAX@Z2@Z']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
jnz ['short', 'loc_BFB9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+eax*8]']
mov ['eax,', '[ecx+eax*8+4]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ecx+0Ch]']
mov ['ecx,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_C]']
mov ['[esi+ecx*8],', 'edx']
mov ['[esi+ecx*8+4],', 'eax']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['?SortRefDown@?$CRecordVector@UCRefSortPair@@@@SGXPAUCRefSortPair@@IIP6GHPBU2@1PAX@Z2@Z']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_BFDD']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??_GUString@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C0A6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G?$CBuffer@E@@QAEPAXI@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C0E6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCArc@@QAEPAXI@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CArc@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C126']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CDirItem@@QAE@ABU0@@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CDirItem@@QAE@ABU0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ecx+4]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[edx+0Ch]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+8],', 'eax']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[eax+14h]']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ecx+1Ch]']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+18h],', 'edx']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '20h']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2Ch']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0?$CBuffer@E@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '34h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??0?$CBuffer@E@@QAE@ABV0@@Z']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[edx+3Ch],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+40h]']
mov ['[edx+40h],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[edx+44h],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+48h]']
mov ['[edx+48h],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+4Ch]']
mov ['[edx+4Ch],', 'cl']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CDirItem@@QAE@ABU0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CDirItem@@QAE@ABU0@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$??0CDirItem@@QAE@ABU0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CDirItem@@QAE@ABU0@@Z']
jmp ['___CxxFrameHandler3']
endp
??_GCDirItem@@QAEPAXI@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDirItem@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C2E6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CArcItem@@QAE@ABU0@@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ecx+4]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[edx+0Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0UString@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+1Ch]']
mov ['[ecx+1Ch],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+1Dh]']
mov ['[ecx+1Dh],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+1Eh]']
mov ['[ecx+1Eh],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+1Fh]']
mov ['[ecx+1Fh],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+20h]']
mov ['[ecx+20h],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
mov ['[ecx+24h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['[ecx+28h],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCArcItem@@QAEPAXI@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CArcItem@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C3D2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CProperty@@QAE@ABU0@@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CProperty@@QAE@ABU0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CProperty@@QAE@ABU0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CProperty@@QAE@ABU0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CProperty@@QAE@ABU0@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CAltStreamInfo@COutMultiVolStream@@QAE@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CAltStreamInfo@COutMultiVolStream@@QAE@ABU01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0UString@@QAE@ABV0@@Z']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[eax+1Ch]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
mov ['[ecx+20h],', 'eax']
mov ['edx,', '[edx+24h]']
mov ['[ecx+24h],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CAltStreamInfo@COutMultiVolStream@@QAE@ABU01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$??0CAltStreamInfo@COutMultiVolStream@@QAE@ABU01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CAltStreamInfo@COutMultiVolStream@@QAE@ABU01@@Z']
jmp ['___CxxFrameHandler3']
endp
??_GCAltStreamInfo@COutMultiVolStream@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CAltStreamInfo@COutMultiVolStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C5DA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CArc@@QAE@XZ proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArc@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '88h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1CArcErrorInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1CArcErrorInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CMyComPtr@UIInArchive@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArc@@QAE@XZ$0 proc near 
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UIInArchive@@@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$1 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$2 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$3 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$4 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1CArcErrorInfo@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$5 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1CArcErrorInfo@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$6 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '70h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArc@@QAE@XZ$7 proc near 
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CArc@@QAE@XZ proc near   
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArc@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_C7CA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_C80E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Reserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_C920']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_C8FB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_C9B8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteBack@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VCArc@@@@QAEAAVCArc@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Free@?$CBuffer@E@@QAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_CBA8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBuffer@E@@QAE@ABV0@@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_CC38']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIOutStream@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_CC88']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@UCUpdatePair2@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReserveOnePosition@?$CRecordVector@UCUpdatePair2@@@@AAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_CDBB']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_1C]']
mov ['edx,', '14h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_CD57']
push ['offset', '??0CUpdatePair2@@QAE@XZ']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
push ['14h']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['??_H@YGXPAXIHP6EPAX0@Z@Z']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_CD5E']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+Dst],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jz ['short', 'loc_CD96']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '14h']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+Dst]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+8],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?ReserveOnePosition@?$CRecordVector@UCUpdatePair2@@@@AAEXXZ$0 proc near
mov ['eax,', '[ebp-24h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?ReserveOnePosition@?$CRecordVector@UCUpdatePair2@@@@AAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReserveOnePosition@?$CRecordVector@UCUpdatePair2@@@@AAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?ReserveOnePosition@?$CRecordVector@UCRefSortPair@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_CEDC']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_CEB7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Front@?$CRecordVector@UCRefSortPair@@@@QAEAAUCRefSortPair@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SortRefDown@?$CRecordVector@UCRefSortPair@@@@SGXPAUCRefSortPair@@IIP6GHPBU2@1PAX@Z2@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*8]']
mov ['eax,', '[ecx+eax*8+4]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+arg_8]']
jbe ['short', 'loc_CF47']
jmp ['loc_CFCA']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jnb ['short', 'loc_CF81']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*8]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*8+8]']
push ['ecx']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['short', 'loc_CF81']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*8]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jl ['short', 'loc_CFA5']
jmp ['short', 'loc_CFCA']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*8]']
mov ['edx,', '[eax+edx*8+4]']
mov ['eax,', '[ebp+arg_4]']
mov ['esi,', '[ebp+arg_0]']
mov ['[esi+eax*8],', 'ecx']
mov ['[esi+eax*8+4],', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'ecx']
jmp ['loc_CF32']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+edx*8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+edx*8+4],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
??_H@YGXPAXIHP6EPAX0@Z@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
js ['short', 'loc_D045']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_D020']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_D108']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_D0E3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$MyMin@_K@@YG_K_K0@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
ja ['short', 'loc_D14C']
jb ['short', 'loc_D13E']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_D14C']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_D158']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??$QueryInterface@UIOutArchive@@@?$CMyComPtr@UIInArchive@@@@QBEJABU_GUID@@PAPAUIOutArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$MyCompare@I@@YGHII@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_D1C4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_D1D2']
mov ['ecx,', '[ebp+arg_0]']
xor ['edx,', 'edx']
cmp ['ecx,', '[ebp+arg_4]']
setnz ['dl']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

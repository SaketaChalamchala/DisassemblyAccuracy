?Create@COutArchive@NZip@NArchive@@QAEJPAUIOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
push ['10000h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Create@COutBuffer@@QAE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_47']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_9C']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Init@COutBuffer@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
push ['ecx']
push ['1']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MoveCurPos@COutArchive@NZip@NArchive@@QAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
add ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['edx,', '[eax+3Ch]']
adc ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+38h],', 'ecx']
mov ['[eax+3Ch],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SeekToRelatPos@COutArchive@NZip@NArchive@@AAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+30h]']
add ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['edx,', '[eax+34h]']
adc ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['edx']
push ['ecx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_15D']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_10]']
call ['??0CSystemException@@QAE@J@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_C],', 'edx']
push ['offset', '__TI1?AUCSystemException@@']
lea ['eax,', '[ebp+var_C]']
push ['eax']
call ['__CxxThrowException@8']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?PrepareWriteCompressedDataZip64@COutArchive@NZip@NArchive@@AAEXI_N0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax+48h],', 'cl']
movzx ['edx,', '[ebp+arg_4]']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '14h']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+44h],', 'edx']
movzx ['ecx,', '[ebp+arg_8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1AF']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+44h]']
add ['eax,', '0Bh']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+44h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+44h]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+1Eh]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+40h],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?PrepareWriteCompressedData@COutArchive@NZip@NArchive@@QAEXI_K_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
ja ['short', 'loc_1F6']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0F8000000h']
jb ['short', 'loc_1FC']
mov ['byte', 'ptr', '[ebp+var_8+3],', '1']
jmp ['short', 'loc_200']
mov ['byte', 'ptr', '[ebp+var_8+3],', '0']
movzx ['eax,', '[ebp+arg_C]']
push ['eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?PrepareWriteCompressedDataZip64@COutArchive@NZip@NArchive@@AAEXI_N0@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?PrepareWriteCompressedData2@COutArchive@NZip@NArchive@@QAEXI_K0_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
ja ['short', 'loc_273']
jb ['short', 'loc_25C']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0FFFFFFFFh']
jnb ['short', 'loc_273']
cmp ['dword', 'ptr', '[ebp+arg_C+4],', '0']
ja ['short', 'loc_273']
jb ['short', 'loc_26A']
cmp ['dword', 'ptr', '[ebp+arg_C],', '0FFFFFFFFh']
jnb ['short', 'loc_273']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_27A']
mov ['[ebp+var_C],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
movzx ['ecx,', '[ebp+arg_14]']
push ['ecx']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_8+3]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?PrepareWriteCompressedDataZip64@COutArchive@NZip@NArchive@@AAEXI_N0@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?WriteBytes@COutBuffer@@QAEXPBXI@Z']
mov ['edx,', '[ebp+arg_4]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['edx,', '[ecx+38h]']
adc ['eax,', '[ecx+3Ch]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+38h],', 'edx']
mov ['[ecx+3Ch],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Write8@COutArchive@NZip@NArchive@@AAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
add ['edx,', '1']
mov ['eax,', '[ecx+3Ch]']
adc ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+38h],', 'edx']
mov ['[ecx+3Ch],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Write16@COutArchive@NZip@NArchive@@AAEXG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_379']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '2']
jge ['short', 'loc_39A']
movzx ['ecx,', 'byte', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write8@COutArchive@NZip@NArchive@@AAEXE@Z']
mov ['dx,', '[ebp+arg_0]']
shr ['dx,', '8']
mov ['[ebp+arg_0],', 'dx']
jmp ['short', 'loc_370']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Write32@COutArchive@NZip@NArchive@@AAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3D9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '4']
jge ['short', 'loc_3F7']
movzx ['ecx,', 'byte', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write8@COutArchive@NZip@NArchive@@AAEXE@Z']
mov ['edx,', '[ebp+arg_0]']
shr ['edx,', '8']
mov ['[ebp+arg_0],', 'edx']
jmp ['short', 'loc_3D0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_439']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '8']
jge ['short', 'loc_461']
movzx ['ecx,', 'byte', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write8@COutArchive@NZip@NArchive@@AAEXE@Z']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['cl,', '8']
call ['__aullshr']
mov ['dword', 'ptr', '[ebp+arg_0],', 'eax']
mov ['dword', 'ptr', '[ebp+arg_0+4],', 'edx']
jmp ['short', 'loc_430']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteExtra@COutArchive@NZip@NArchive@@AAEXABUCExtraBlock@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_51D']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_4BC']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_51D']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'word', 'ptr', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
call ['?Size@?$CBuffer@E@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
call ['?Size@?$CBuffer@E@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
call ['??B?$CBuffer@E@@QBEPBEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z']
jmp ['short', 'loc_4B3']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteCommonItemInfo@COutArchive@NZip@NArchive@@AAEXABVCLocalItem@23@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+4]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'cl']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_565']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
cmp ['eax,', '2Dh']
jge ['short', 'loc_565']
mov ['byte', 'ptr', '[ebp+var_8+3],', '2Dh']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write8@COutArchive@NZip@NArchive@@AAEXE@Z']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+5]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write8@COutArchive@NZip@NArchive@@AAEXE@Z']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteLocalHeader@COutArchive@NZip@NArchive@@QAEXABVCLocalItem@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?SeekToCurPos@COutArchive@NZip@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+48h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_63C']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
ja ['short', 'loc_63C']
jb ['short', 'loc_619']
mov ['ecx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[ecx+10h],', '0FFFFFFFFh']
jnb ['short', 'loc_63C']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
ja ['short', 'loc_63C']
jb ['short', 'loc_633']
mov ['ecx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[ecx+8],', '0FFFFFFFFh']
jnb ['short', 'loc_63C']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_643']
mov ['[ebp+var_20],', '1']
mov ['dl,', 'byte', 'ptr', '[ebp+var_20]']
mov ['[ebp+var_5],', 'dl']
push ['4034B50h']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
movzx ['eax,', '[ebp+var_5]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteCommonItemInfo@COutArchive@NZip@NArchive@@AAEXABVCLocalItem@23@_N@Z']
movzx ['edx,', '[ebp+var_5]']
test ['edx,', 'edx']
jz ['short', 'loc_678']
mov ['[ebp+var_24],', '0FFFFFFFFh']
jmp ['short', 'loc_681']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
movzx ['eax,', '[ebp+var_5]']
test ['eax,', 'eax']
jz ['short', 'loc_69E']
mov ['[ebp+var_28],', '0FFFFFFFFh']
jmp ['short', 'loc_6A7']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
movzx ['esi,', '[ebp+var_5]']
neg ['esi']
sbb ['esi,', 'esi']
and ['esi,', '14h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2Ch']
call ['?GetSize@CExtraBlock@NZip@NArchive@@QBEIXZ']
add ['esi,', 'eax']
mov ['[ebp+var_C],', 'si']
movzx ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_4]']
cmp ['ecx,', '[edx+44h]']
jz ['short', 'loc_70F']
push ['80004005h']
lea ['ecx,', '[ebp+var_14]']
call ['??0CSystemException@@QAE@J@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_10],', 'eax']
push ['offset', '__TI1?AUCSystemException@@']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx+44h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z']
movzx ['ecx,', '[ebp+var_5]']
test ['ecx,', 'ecx']
jz ['short', 'loc_781']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
push ['10h']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[edx+8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[edx+10h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2Ch']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteExtra@COutArchive@NZip@NArchive@@AAEXABUCExtraBlock@23@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveCurPos@COutArchive@NZip@NArchive@@QAEX_K@Z']
pop ['edi']
pop ['esi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteCentralHeader@COutArchive@NZip@NArchive@@AAEXABVCItemOut@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
ja ['short', 'loc_7F4']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx+8],', '0FFFFFFFFh']
jb ['short', 'loc_7FD']
mov ['[ebp+var_1C],', '1']
jmp ['short', 'loc_804']
mov ['[ebp+var_1C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_1C]']
mov ['[ebp+var_5],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[edx+14h],', '0']
ja ['short', 'loc_822']
mov ['eax,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[eax+10h],', '0FFFFFFFFh']
jb ['short', 'loc_82B']
mov ['[ebp+var_24],', '1']
jmp ['short', 'loc_832']
mov ['[ebp+var_24],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_24]']
mov ['[ebp+var_6],', 'cl']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[eax+44h],', '0']
ja ['short', 'loc_850']
mov ['ecx,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[ecx+40h],', '0FFFFFFFFh']
jb ['short', 'loc_859']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_860']
mov ['[ebp+var_2C],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_2C]']
mov ['[ebp+var_7],', 'dl']
movzx ['eax,', '[ebp+var_6]']
test ['eax,', 'eax']
jnz ['short', 'loc_887']
movzx ['ecx,', '[ebp+var_5]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_887']
movzx ['edx,', '[ebp+var_7]']
test ['edx,', 'edx']
jnz ['short', 'loc_887']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_88E']
mov ['[ebp+var_30],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_30]']
mov ['[ebp+var_8],', 'al']
push ['2014B50h']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+38h]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write8@COutArchive@NZip@NArchive@@AAEXE@Z']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+39h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write8@COutArchive@NZip@NArchive@@AAEXE@Z']
movzx ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteCommonItemInfo@COutArchive@NZip@NArchive@@AAEXABVCLocalItem@23@_N@Z']
movzx ['ecx,', '[ebp+var_6]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8E3']
mov ['[ebp+var_34],', '0FFFFFFFFh']
jmp ['short', 'loc_8EC']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
movzx ['edx,', '[ebp+var_5]']
test ['edx,', 'edx']
jz ['short', 'loc_909']
mov ['[ebp+var_38],', '0FFFFFFFFh']
jmp ['short', 'loc_912']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
movzx ['eax,', '[ebp+var_5]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '8']
movzx ['ecx,', '[ebp+var_6]']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '8']
add ['eax,', 'ecx']
movzx ['edx,', '[ebp+var_7]']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '8']
add ['eax,', 'edx']
mov ['[ebp+var_C],', 'ax']
mov ['eax,', '20h']
mov ['[ebp+var_10],', 'ax']
movzx ['ecx,', '[ebp+var_8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_978']
movzx ['edx,', '[ebp+var_C]']
add ['edx,', '4']
mov ['[ebp+var_3C],', 'edx']
jmp ['short', 'loc_97F']
mov ['[ebp+var_3C],', '0']
mov ['eax,', '[ebp+arg_0]']
movzx ['esi,', 'byte', 'ptr', '[eax+78h]']
neg ['esi']
sbb ['esi,', 'esi']
and ['esi,', '24h']
add ['esi,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '48h']
call ['?GetSize@CExtraBlock@NZip@NArchive@@QBEIXZ']
add ['esi,', 'eax']
mov ['[ebp+var_14],', 'si']
movzx ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '54h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+3Ah]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+3Ch]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
movzx ['eax,', '[ebp+var_7]']
test ['eax,', 'eax']
jz ['short', 'loc_9FC']
mov ['[ebp+var_40],', '0FFFFFFFFh']
jmp ['short', 'loc_A05']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+40h]']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
call ['?Len@AString@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z']
movzx ['ecx,', '[ebp+var_8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_AA1']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
movzx ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
movzx ['eax,', '[ebp+var_5]']
test ['eax,', 'eax']
jz ['short', 'loc_A6B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ecx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z']
movzx ['ecx,', '[ebp+var_6]']
test ['ecx,', 'ecx']
jz ['short', 'loc_A86']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[edx+10h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z']
movzx ['edx,', '[ebp+var_7]']
test ['edx,', 'edx']
jz ['short', 'loc_AA1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
push ['ecx']
mov ['edx,', '[eax+40h]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+78h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_B0B']
push ['0Ah']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
push ['20h']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
push ['18h']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '60h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteNtfsTime@COutArchive@NZip@NArchive@@AAEXABU_FILETIME@@@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '68h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteNtfsTime@COutArchive@NZip@NArchive@@AAEXABU_FILETIME@@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '70h']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteNtfsTime@COutArchive@NZip@NArchive@@AAEXABU_FILETIME@@@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '48h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteExtra@COutArchive@NZip@NArchive@@AAEXABUCExtraBlock@23@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '54h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
test ['eax,', 'eax']
jbe ['short', 'loc_B49']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '54h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '54h']
call ['??B?$CBuffer@E@@QBEPBEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteCentralDir@COutArchive@NZip@NArchive@@QAEXABV?$CObjectVector@VCItemOut@NZip@NArchive@@@@PBV?$CBuffer@E@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?SeekToCurPos@COutArchive@NZip@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ']
mov ['dword', 'ptr', '[ebp+var_C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_C+4],', 'edx']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_BA3']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_10],', 'eax']
jnb ['short', 'loc_BC7']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEABVCItemOut@NZip@NArchive@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteCentralHeader@COutArchive@NZip@NArchive@@AAEXABVCItemOut@23@@Z']
jmp ['short', 'loc_B9A']
mov ['ecx,', '[ebp+var_4]']
call ['?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ']
mov ['dword', 'ptr', '[ebp+var_18],', 'eax']
mov ['dword', 'ptr', '[ebp+var_18+4],', 'edx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_18]']
sub ['edx,', 'dword', 'ptr', '[ebp+var_C]']
mov ['eax,', 'dword', 'ptr', '[ebp+var_18+4]']
sbb ['eax,', 'dword', 'ptr', '[ebp+var_C+4]']
mov ['dword', 'ptr', '[ebp+var_20],', 'edx']
mov ['dword', 'ptr', '[ebp+var_20+4],', 'eax']
cmp ['dword', 'ptr', '[ebp+var_C+4],', '0']
ja ['short', 'loc_BF3']
cmp ['dword', 'ptr', '[ebp+var_C],', '0FFFFFFFFh']
jb ['short', 'loc_BFC']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_C03']
mov ['[ebp+var_2C],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_2C]']
mov ['[ebp+var_21],', 'cl']
cmp ['dword', 'ptr', '[ebp+var_20+4],', '0']
ja ['short', 'loc_C15']
cmp ['dword', 'ptr', '[ebp+var_20],', '0FFFFFFFFh']
jb ['short', 'loc_C1E']
mov ['[ebp+var_30],', '1']
jmp ['short', 'loc_C25']
mov ['[ebp+var_30],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_30]']
mov ['[ebp+var_22],', 'dl']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ']
cmp ['eax,', '0FFFFh']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['[ebp+var_23],', 'al']
movzx ['ecx,', '[ebp+var_21]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_C61']
movzx ['edx,', '[ebp+var_22]']
test ['edx,', 'edx']
jnz ['short', 'loc_C61']
movzx ['eax,', '[ebp+var_23]']
test ['eax,', 'eax']
jnz ['short', 'loc_C61']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_C68']
mov ['[ebp+var_34],', '1']
mov ['cl,', 'byte', 'ptr', '[ebp+var_34]']
mov ['[ebp+var_24],', 'cl']
movzx ['edx,', '[ebp+var_24]']
test ['edx,', 'edx']
jz ['loc_D34']
push ['6064B50h']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
push ['0']
push ['2Ch']
mov ['ecx,', '[ebp+var_4]']
call ['?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z']
push ['2Dh']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
push ['2Dh']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ']
xor ['edx,', 'edx']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z']
mov ['eax,', 'dword', 'ptr', '[ebp+var_20+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z']
mov ['edx,', 'dword', 'ptr', '[ebp+var_C+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z']
push ['7064B50h']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_18+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
push ['6054B50h']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
movzx ['eax,', '[ebp+var_23]']
test ['eax,', 'eax']
jz ['short', 'loc_D66']
mov ['[ebp+var_38],', '0FFFFh']
jmp ['short', 'loc_D71']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ']
mov ['[ebp+var_38],', 'eax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_38]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
movzx ['edx,', '[ebp+var_23]']
test ['edx,', 'edx']
jz ['short', 'loc_D8F']
mov ['[ebp+var_3C],', '0FFFFh']
jmp ['short', 'loc_D9A']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ']
mov ['[ebp+var_3C],', 'eax']
movzx ['eax,', 'word', 'ptr', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
movzx ['ecx,', '[ebp+var_22]']
test ['ecx,', 'ecx']
jz ['short', 'loc_DB8']
mov ['[ebp+var_40],', '0FFFFFFFFh']
jmp ['short', 'loc_DBE']
mov ['edx,', 'dword', 'ptr', '[ebp+var_20]']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
movzx ['ecx,', '[ebp+var_21]']
test ['ecx,', 'ecx']
jz ['short', 'loc_DDB']
mov ['[ebp+var_44],', '0FFFFFFFFh']
jmp ['short', 'loc_DE1']
mov ['edx,', 'dword', 'ptr', '[ebp+var_C]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_E00']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['[ebp+var_48],', 'eax']
jmp ['short', 'loc_E07']
mov ['[ebp+var_48],', '0']
mov ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_28],', 'ecx']
movzx ['edx,', 'word', 'ptr', '[ebp+var_28]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write16@COutArchive@NZip@NArchive@@AAEXG@Z']
cmp ['[ebp+var_28],', '0']
jbe ['short', 'loc_E35']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
pop ['edi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_ECD']
mov ['ecx,', '[ebp+var_28]']
call ['??0COffsetOutStream@@QAE@XZ']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_ED4']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@PAUIOutStream@@@Z']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+30h]']
add ['edx,', '[ecx+38h]']
mov ['eax,', '[eax+34h]']
adc ['eax,', '[ecx+3Ch]']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx+40h]']
xor ['esi,', 'esi']
add ['edx,', 'ecx']
adc ['eax,', 'esi']
push ['eax']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?Init@COffsetOutStream@@QAEJPAUIOutStream@@_K@Z']
lea ['ecx,', '[ebp+var_1C]']
call ['?Detach@?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@XZ']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['esi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SeekToCurPos@COutArchive@NZip@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
push ['ecx']
mov ['edx,', '[eax+38h]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?SeekToRelatPos@COutArchive@NZip@NArchive@@AAEX_K@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CSystemException@@QAE@J@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WriteBytes@COutBuffer@@QAEXPBXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1151']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_116D']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
jmp ['short', 'loc_1148']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteByte@COutBuffer@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_11C4']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetSize@CExtraBlock@NZip@NArchive@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_123B']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['short', 'loc_126A']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z']
add ['eax,', '4']
mov ['ecx,', 'eax']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+eax+4]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1232']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WriteNtfsTime@COutArchive@NZip@NArchive@@AAEXABU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Write32@COutArchive@NZip@NArchive@@AAEXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+38h]']
mov ['edx,', '[ecx+3Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z$0 proc near
mov ['eax,', '[ebp-28h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z$1 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
endp
__ehhandler$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__ehhandler$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
??0COffsetOutStream@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COffsetOutStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0?$CMyComPtr@UIOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@COffsetOutStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1618']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_161F']
mov ['eax,', '80004002h']
jmp ['short', 'loc_1630']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@COffsetOutStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@COffsetOutStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_16A2']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_16CC']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_16C3']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCOffsetOutStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_16CA']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCOffsetOutStream@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COffsetOutStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1706']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1COffsetOutStream@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??1?$CMyComPtr@UIOutStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
??0IOutStream@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIOutStream@@@@QAE@PAUIOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_18AC']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_18F2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1960']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_1983']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Detach@?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QBEPBEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEABVCItemOut@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1AD4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_1B1A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp

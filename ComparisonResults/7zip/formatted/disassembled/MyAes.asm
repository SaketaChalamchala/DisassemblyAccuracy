??0CAesCbcCoder@NCrypto@@QAE@_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressFilter@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0ICryptoProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0ICompressSetCoderProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CAesCbcCoder@NCrypto@@6BICompressFilter@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CAesCbcCoder@NCrypto@@6BICryptoProperties@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CAesCbcCoder@NCrypto@@6BICompressSetCoderProperties@@@']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[ebp+arg_0]']
mov ['[eax+1Dh],', 'cl']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '20h']
xor ['eax,', 'eax']
sub ['eax,', 'edx']
and ['eax,', '0Fh']
shr ['eax,', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+14h],', 'eax']
push ['10h']
push ['0']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '13Ch']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?SetFunctions@CAesCbcCoder@NCrypto@@AAE_NI@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Init@CAesCbcCoder@NCrypto@@UAGJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
add ['eax,', '13Ch']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[ebp+this]']
lea ['ecx,', '[eax+edx*4+20h]']
push ['ecx']
call ['_AesCbc_Init@8']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+1Ch]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '7FFFBFFBh']
add ['eax,', '80004005h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?Filter@CAesCbcCoder@NCrypto@@UAGIPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Ch]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_113']
xor ['eax,', 'eax']
jmp ['short', 'loc_15E']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_11D']
xor ['eax,', 'eax']
jmp ['short', 'loc_15E']
cmp ['[ebp+arg_8],', '10h']
jnb ['short', 'loc_12A']
mov ['eax,', '10h']
jmp ['short', 'loc_15E']
mov ['edx,', '[ebp+arg_8]']
shr ['edx,', '4']
mov ['[ebp+arg_8],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*4+20h]']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[eax+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '4']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?SetKey@CAesCbcCoder@NCrypto@@UAGJPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '7']
jnz ['short', 'loc_199']
cmp ['[ebp+arg_8],', '10h']
jb ['short', 'loc_199']
cmp ['[ebp+arg_8],', '20h']
jbe ['short', 'loc_1A0']
mov ['eax,', '80070057h']
jmp ['short', 'loc_205']
mov ['ecx,', '[ebp+this]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jz ['short', 'loc_1BB']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+14h]']
jz ['short', 'loc_1BB']
mov ['eax,', '80070057h']
jmp ['short', 'loc_205']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+19h]']
test ['edx,', 'edx']
jz ['short', 'loc_1CF']
mov ['[ebp+var_8],', 'offset', '@Aes_SetKey_Enc@12']
jmp ['short', 'loc_1D6']
mov ['[ebp+var_8],', 'offset', '@Aes_SetKey_Dec@12']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
mov ['ecx,', '[ebp+this]']
lea ['ecx,', '[ecx+eax*4+2Ch]']
mov ['edx,', '[ebp+arg_4]']
call ['[ebp+var_4]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+18h],', '1']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SetInitVector@CAesCbcCoder@NCrypto@@UAGJPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+Size],', '10h']
jz ['short', 'loc_230']
mov ['eax,', '80070057h']
jmp ['short', 'loc_258']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+this]']
add ['edx,', '138h']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+this]']
sub ['eax,', '4']
push ['eax']
call ['?Init@CAesCbcCoder@NCrypto@@UAGJXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?SetFunctions@CAesCbcCoder@NCrypto@@AAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Dh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2A4']
mov ['edx,', 'dword', 'ptr', 'ds:_g_AesCbc_Encode']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_2AC']
mov ['eax,', 'dword', 'ptr', 'ds:_g_AesCbc_Decode']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'edx']
cmp ['[ebp+arg_0],', '1']
jnz ['short', 'loc_2DF']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Dh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2CF']
mov ['[ebp+var_C],', 'offset', '@AesCbc_Encode@12']
jmp ['short', 'loc_2D6']
mov ['[ebp+var_C],', 'offset', '@AesCbc_Decode@12']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+10h],', 'eax']
cmp ['[ebp+arg_0],', '2']
jnz ['short', 'loc_2F5']
cmp ['dword', 'ptr', 'ds:_g_AesCbc_Encode,', 'offset', '@AesCbc_Encode_Intel@12']
jz ['short', 'loc_2F5']
xor ['al,', 'al']
jmp ['short', 'loc_2F7']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetCoderProperties@CAesCbcCoder@NCrypto@@UAGJPBKPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_326']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_37A']
mov ['edx,', '[ebp+var_4]']
shl ['edx,', '4']
add ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jnz ['short', 'loc_378']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '13h']
jz ['short', 'loc_358']
mov ['eax,', '80070057h']
jmp ['short', 'loc_37C']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '8']
call ['?SetFunctions@CAesCbcCoder@NCrypto@@AAE_NI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_378']
mov ['eax,', '80004001h']
jmp ['short', 'loc_37C']
jmp ['short', 'loc_31D']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_758']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_747']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_74E']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_7C7']
push ['offset', '_IID_ICryptoProperties']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_78C']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_77B']
mov ['eax,', '[ebp+this]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_782']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_7C7']
push ['offset', '_IID_ICompressSetCoderProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_7C0']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_7AF']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_7B6']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_7C7']
mov ['eax,', '80004002h']
jmp ['short', 'loc_7D8']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+0Ch],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CAesCbcCoder@NCrypto@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_84B']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+0Ch]']
jmp ['short', 'loc_85F']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
??0ICompressFilter@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressFilter@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICryptoProperties@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICryptoProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetCoderProperties@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetCoderProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@CAesCbcCoder@NCrypto@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?Release@CAesCbcCoder@NCrypto@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?AddRef@CAesCbcCoder@NCrypto@@W3AGKXZ proc near 
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?AddRef@CAesCbcCoder@NCrypto@@W7AGKXZ proc near 
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ']
endp
?QueryInterface@CAesCbcCoder@NCrypto@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CAesCbcCoder@NCrypto@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z']
endp
??__Eg_AesTabInit@NCrypto@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_AesTabInit']
call ['??0CAesTabInit@NCrypto@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CAesTabInit@NCrypto@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
call ['_AesGenTables@0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

_Xz_ReadHeader@8 proc near              
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+Buf1],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
push ['11h']
push ['0Ch']
lea ['eax,', '[ebp+Buf1]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_SeqInStream_Read2@16']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_49']
mov ['eax,', '[ebp+var_1C]']
jmp ['short', 'loc_74']
push ['6']
push ['offset', '_XZ_SIG']
lea ['edx,', '[ebp+Buf1]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_67']
mov ['eax,', '11h']
jmp ['short', 'loc_74']
lea ['eax,', '[ebp+Buf1]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_Xz_ParseHeader@8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
_XzBlock_ReadHeader@16 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '418h']
push ['edi']
lea ['edi,', '[ebp+var_418]']
mov ['ecx,', '106h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
lea ['ecx,', '[ebp+var_408]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_SeqInStream_ReadByte@8']
mov ['[ebp+var_414],', 'eax']
cmp ['[ebp+var_414],', '0']
jz ['short', 'loc_119']
mov ['eax,', '[ebp+var_414]']
jmp ['loc_1A1']
movzx ['eax,', '[ebp+var_408]']
lea ['ecx,', 'ds:4[eax*4]']
mov ['[ebp+var_410],', 'ecx']
cmp ['[ebp+var_410],', '0']
jnz ['short', 'loc_14C']
mov ['edx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[edx],', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_1A1']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_410]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_410]']
sub ['ecx,', '1']
push ['ecx']
lea ['edx,', '[ebp+var_407]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_SeqInStream_Read@12']
mov ['[ebp+var_418],', 'eax']
cmp ['[ebp+var_418],', '0']
jz ['short', 'loc_191']
mov ['eax,', '[ebp+var_418]']
jmp ['short', 'loc_1A1']
lea ['ecx,', '[ebp+var_408]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_XzBlock_Parse@8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '418h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
_Xz_GetUnpackSize@4 proc near           
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_22B']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+4]']
jnb ['short', 'loc_27D']
mov ['eax,', '[ebp+var_C]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[edx+eax]']
mov ['esi,', '[ebp+var_4]']
adc ['esi,', '[edx+eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', 'esi']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_4]']
ja ['short', 'loc_26F']
jb ['short', 'loc_267']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_26F']
or ['eax,', '0FFFFFFFFh']
or ['edx,', '0FFFFFFFFh']
jmp ['short', 'loc_283']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_222']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_Xz_GetPackSize@4 proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_2CA']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+4]']
jnb ['short', 'loc_326']
mov ['eax,', '[ebp+var_C]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['ecx,', '[edx+eax+8]']
add ['ecx,', '3']
mov ['edx,', '[edx+eax+0Ch]']
adc ['edx,', '0']
and ['ecx,', '0FFFFFFFCh']
add ['ecx,', '[ebp+var_8]']
adc ['edx,', '[ebp+var_4]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_4]']
ja ['short', 'loc_318']
jb ['short', 'loc_310']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['short', 'loc_318']
or ['eax,', '0FFFFFFFFh']
or ['edx,', '0FFFFFFFFh']
jmp ['short', 'loc_32C']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2C1']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_Xzs_Construct@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
pop ['ebp']
retn ['4']
endp
_Xzs_Free@8     proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_38E']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ecx]']
jnb ['short', 'loc_3B0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
imul ['ecx,', '18h']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+8]']
push ['ecx']
call ['_Xz_Free@8']
jmp ['short', 'loc_385']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+8],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
_Xzs_GetNumBlocks@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_43B']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx]']
jnb ['short', 'loc_465']
mov ['eax,', '[ebp+var_C]']
imul ['eax,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[edx+eax+4]']
xor ['ecx,', 'ecx']
add ['eax,', '[ebp+var_8]']
adc ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_432']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_Xzs_GetUnpackSize@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_4BA']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx]']
jnb ['short', 'loc_50A']
mov ['eax,', '[ebp+var_C]']
imul ['eax,', '18h']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+8]']
push ['eax']
call ['_Xz_GetUnpackSize@4']
add ['eax,', '[ebp+var_8]']
adc ['edx,', '[ebp+var_4]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'edx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_4]']
ja ['short', 'loc_4FC']
jb ['short', 'loc_4F4']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_4FC']
or ['eax,', '0FFFFFFFFh']
or ['edx,', '0FFFFFFFFh']
jmp ['short', 'loc_510']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_4B1']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_Xzs_ReadBackward@20 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_8],', '0']
mov ['esi,', 'esp']
push ['2']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_571']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_71D']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['_Xz_Construct@4']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_30]']
push ['edx']
call ['_Xz_ReadBackward@16']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_5C2']
mov ['eax,', '[ebp+var_3C]']
jmp ['loc_71D']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx+4]']
jnz ['loc_667']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
shr ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
lea ['edx,', '[ecx+edx+1]']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_40]']
imul ['eax,', '18h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_615']
mov ['eax,', '2']
jmp ['loc_71D']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_40]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_642']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
imul ['edx,', '18h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax+4]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+Dst]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
imul ['edx,', '18h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
add ['ecx,', 'edx']
mov ['edx,', '[ebp+var_30]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+var_4C]']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[edx]']
or ['ecx,', '[eax+4]']
jnz ['short', 'loc_6BC']
jmp ['short', 'loc_71B']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[edx]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_LookInStream_SeekTo@12']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_6DD']
mov ['eax,', '[ebp+var_48]']
jmp ['short', 'loc_71D']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_716']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
sbb ['edx,', '[eax+4]']
push ['edx']
push ['ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_716']
mov ['eax,', '0Ah']
jmp ['short', 'loc_71D']
jmp ['loc_57F']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
_Xz_ReadBackward@16 proc near           
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48Ch']
push ['edi']
lea ['edi,', '[ebp+var_48C]']
mov ['ecx,', '123h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_28]']
and ['eax,', '3']
mov ['ecx,', '[ebp+var_24]']
and ['ecx,', '0']
mov ['[ebp+var_480],', 'eax']
mov ['[ebp+var_47C],', 'ecx']
mov ['edx,', '[ebp+var_480]']
or ['edx,', '[ebp+var_47C]']
jnz ['short', 'loc_7D8']
cmp ['[ebp+var_24],', '0']
ja ['short', 'loc_7E2']
jb ['short', 'loc_7D8']
cmp ['[ebp+var_28],', '0Ch']
jnb ['short', 'loc_7E2']
mov ['eax,', '11h']
jmp ['loc_BD2']
mov ['eax,', '[ebp+var_28]']
sub ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_24]']
sbb ['ecx,', '0']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'ecx']
push ['0Ch']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_LookInStream_SeekRead_ForArc@20']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_81C']
mov ['eax,', '[ebp+var_2C]']
jmp ['loc_BD2']
push ['2']
push ['offset', '_XZ_FOOTER_SIG']
lea ['eax,', '[ebp+Buf1]']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['loc_9C0']
mov ['[ebp+var_30],', '0']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '0Ch']
mov ['edx,', '[ebp+var_24]']
adc ['edx,', '0']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '0']
ja ['short', 'loc_85F']
cmp ['[ebp+var_28],', '400h']
jbe ['short', 'loc_86B']
mov ['[ebp+var_484],', '400h']
jmp ['short', 'loc_874']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_484],', 'eax']
mov ['ecx,', '[ebp+var_484]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_34]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_28]']
sub ['ecx,', 'edx']
mov ['edx,', '[ebp+var_24]']
sbb ['edx,', 'eax']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
lea ['ecx,', '[ebp+var_438]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_LookInStream_SeekRead_ForArc@20']
mov ['[ebp+var_440],', 'eax']
cmp ['[ebp+var_440],', '0']
jz ['short', 'loc_8C8']
mov ['eax,', '[ebp+var_440]']
jmp ['loc_BD2']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '[ebp+var_34]']
mov ['[ebp+var_30],', 'edx']
jmp ['short', 'loc_8DC']
mov ['eax,', '[ebp+var_34]']
sub ['eax,', '1']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_8F5']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', '[ebp+ecx+var_439]']
test ['edx,', 'edx']
jz ['short', 'loc_8F3']
jmp ['short', 'loc_8F5']
jmp ['short', 'loc_8D3']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_920']
mov ['eax,', '[ebp+var_34]']
and ['eax,', '3']
jz ['short', 'loc_90D']
mov ['eax,', '11h']
jmp ['loc_BD2']
mov ['ecx,', '[ebp+var_34]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_28]']
adc ['edx,', '[ebp+var_24]']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_944']
cmp ['[ebp+var_24],', '0']
ja ['short', 'loc_92C']
cmp ['[ebp+var_28],', '0Ch']
jb ['short', 'loc_935']
cmp ['[ebp+var_30],', '10000h']
jbe ['short', 'loc_93F']
mov ['eax,', '11h']
jmp ['loc_BD2']
jmp ['loc_850']
cmp ['[ebp+var_24],', '0']
ja ['short', 'loc_95C']
jb ['short', 'loc_952']
cmp ['[ebp+var_28],', '0Ch']
jnb ['short', 'loc_95C']
mov ['eax,', '11h']
jmp ['loc_BD2']
mov ['eax,', '[ebp+var_28]']
sub ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_24]']
sbb ['ecx,', '0']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'ecx']
push ['0Ch']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_LookInStream_SeekRead_ForArc@20']
mov ['[ebp+var_444],', 'eax']
cmp ['[ebp+var_444],', '0']
jz ['short', 'loc_99F']
mov ['eax,', '[ebp+var_444]']
jmp ['loc_BD2']
push ['2']
push ['offset', '_XZ_FOOTER_SIG']
lea ['eax,', '[ebp+Buf1]']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_9C0']
mov ['eax,', '11h']
jmp ['loc_BD2']
movzx ['ecx,', '[ebp+var_14]']
shl ['ecx,', '8']
movzx ['edx,', '[ebp+var_13]']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'cx']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '0Fh']
jle ['short', 'loc_9E8']
mov ['eax,', '4']
jmp ['loc_BD2']
lea ['ecx,', '[ebp+var_18]']
mov ['edx,', '6']
call ['@CrcCalc@8']
cmp ['[ebp+var_1C],', 'eax']
jz ['short', 'loc_A04']
mov ['eax,', '10h']
jmp ['loc_BD2']
mov ['eax,', '[ebp+var_18]']
xor ['edx,', 'edx']
add ['eax,', '1']
adc ['edx,', '0']
mov ['cl,', '2']
call ['__allshl']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_8]']
ja ['short', 'loc_A38']
jb ['short', 'loc_A2E']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_A38']
mov ['eax,', '10h']
jmp ['loc_BD2']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_24]']
sbb ['eax,', '[ebp+var_8]']
mov ['[ebp+var_28],', 'edx']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_LookInStream_SeekTo@12']
mov ['[ebp+var_448],', 'eax']
cmp ['[ebp+var_448],', '0']
jz ['short', 'loc_A75']
mov ['eax,', '[ebp+var_448]']
jmp ['loc_BD2']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_Xz_ReadIndex@20']
mov ['[ebp+var_44C],', 'eax']
cmp ['[ebp+var_44C],', '0']
jz ['short', 'loc_AA8']
mov ['eax,', '[ebp+var_44C]']
jmp ['loc_BD2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Xz_GetPackSize@4']
mov ['[ebp+var_454],', 'eax']
mov ['[ebp+var_450],', 'edx']
mov ['ecx,', '[ebp+var_454]']
and ['ecx,', '[ebp+var_450]']
cmp ['ecx,', '0FFFFFFFFh']
jz ['short', 'loc_B1B']
cmp ['[ebp+var_450],', '80000000h']
ja ['short', 'loc_B1B']
jb ['short', 'loc_AE5']
cmp ['[ebp+var_454],', '0']
jnb ['short', 'loc_B1B']
mov ['edx,', '[ebp+var_454]']
add ['edx,', '0Ch']
mov ['eax,', '[ebp+var_450]']
adc ['eax,', '0']
mov ['[ebp+var_48C],', 'edx']
mov ['[ebp+var_488],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[ebp+var_488]']
ja ['short', 'loc_B25']
jb ['short', 'loc_B1B']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_48C]']
jnb ['short', 'loc_B25']
mov ['eax,', '10h']
jmp ['loc_BD2']
mov ['eax,', '[ebp+var_454]']
add ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_450]']
adc ['ecx,', '0']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', 'eax']
mov ['eax,', '[ebp+var_24]']
sbb ['eax,', 'ecx']
mov ['[ebp+var_28],', 'edx']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_LookInStream_SeekTo@12']
mov ['[ebp+var_458],', 'eax']
cmp ['[ebp+var_458],', '0']
jz ['short', 'loc_B6F']
mov ['eax,', '[ebp+var_458]']
jmp ['short', 'loc_BD2']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['[ecx+4],', 'eax']
lea ['ecx,', '[ebp+var_470]']
push ['ecx']
call ['_SecToRead_CreateVTable@4']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_46C],', 'edx']
lea ['eax,', '[ebp+var_470]']
push ['eax']
lea ['ecx,', '[ebp+var_460]']
push ['ecx']
call ['_Xz_ReadHeader@8']
mov ['[ebp+var_478],', 'eax']
cmp ['[ebp+var_478],', '0']
jz ['short', 'loc_BBC']
mov ['eax,', '[ebp+var_478]']
jmp ['short', 'loc_BD2']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx]']
movzx ['ecx,', '[ebp+var_460]']
sub ['eax,', 'ecx']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN44']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '48Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
_Xz_ReadIndex@20 proc near              
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
ja ['short', 'loc_C8A']
cmp ['[ebp+arg_8],', '80000000h']
jbe ['short', 'loc_C94']
mov ['eax,', '4']
jmp ['loc_D34']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
xor ['edx,', 'edx']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jnz ['short', 'loc_CB5']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+arg_C]']
jz ['short', 'loc_CBC']
mov ['eax,', '4']
jmp ['short', 'loc_D34']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_CE4']
mov ['eax,', '2']
jmp ['short', 'loc_D34']
push ['4']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_LookInStream_Read2@16']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_D18']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Xz_ReadIndex2@16']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax+4]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
_Xz_ReadIndex2@16 proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_C],', '1']
cmp ['[ebp+arg_8],', '5']
jb ['short', 'loc_D7E']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_D88']
mov ['eax,', '10h']
jmp ['loc_F78']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '4']
mov ['[ebp+arg_8],', 'edx']
mov ['edx,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
call ['@CrcCalc@8']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax]']
jz ['short', 'loc_DB6']
mov ['eax,', '10h']
jmp ['loc_F78']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_Xz_ReadVarInt@12']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_DE0']
mov ['eax,', '10h']
jmp ['loc_F78']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_24]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
xor ['edx,', 'edx']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_1C]']
jnz ['short', 'loc_E14']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[ebp+var_18]']
jnz ['short', 'loc_E14']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '1']
cmp ['edx,', '[ebp+arg_8]']
jbe ['short', 'loc_E1E']
mov ['eax,', '10h']
jmp ['loc_F78']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_Xz_Free@8']
cmp ['[ebp+var_8],', '0']
jz ['loc_F2E']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jnz ['short', 'loc_E7B']
mov ['eax,', '2']
jmp ['loc_F78']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_E8D']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['loc_F2E']
mov ['edx,', '[ebp+var_4]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+0Ch]']
mov ['[ebp+var_28],', 'edx']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_C]']
push ['eax']
call ['_Xz_ReadVarInt@12']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_ED5']
mov ['eax,', '10h']
jmp ['loc_F78']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_Xz_ReadVarInt@12']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_F05']
mov ['eax,', '10h']
jmp ['short', 'loc_F78']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_30]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ecx+8]']
or ['eax,', '[edx+0Ch]']
jnz ['short', 'loc_F29']
mov ['eax,', '10h']
jmp ['short', 'loc_F78']
jmp ['loc_E84']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '3']
jz ['short', 'loc_F6B']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
test ['eax,', 'eax']
jz ['short', 'loc_F55']
mov ['[ebp+var_40],', '1']
jmp ['short', 'loc_F5C']
mov ['[ebp+var_40],', '0']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_F69']
mov ['eax,', '10h']
jmp ['short', 'loc_F78']
jmp ['short', 'loc_F2E']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[ebp+arg_8]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
_LookInStream_SeekRead_ForArc@20 proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_LookInStream_SeekTo@12']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_FEA']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_FFB']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_LookInStream_Read@12']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp

?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_48],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+dwMessageId]']
push ['ecx']
call ['?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7A']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_EE']
mov ['[ebp+var_40],', '0']
jmp ['short', 'loc_8C']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '1']
mov ['[ebp+var_40],', 'ecx']
cmp ['[ebp+var_40],', '8']
jge ['short', 'loc_CF']
mov ['edx,', '[ebp+dwMessageId]']
and ['edx,', '0Fh']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+dwMessageId]']
shr ['eax,', '4']
mov ['[ebp+dwMessageId],', 'eax']
cmp ['[ebp+var_44],', '0Ah']
jnb ['short', 'loc_B5']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '30h']
mov ['[ebp+var_4C],', 'ecx']
jmp ['short', 'loc_BE']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '37h']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '7']
sub ['eax,', '[ebp+var_40]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_4C]']
mov ['[ebp+eax+var_38],', 'cl']
jmp ['short', 'loc_83']
mov ['[ebp+var_30],', '0']
push ['offset', '$SG67193']
lea ['ecx,', '[ebp+var_20]']
call ['?AddAscii@UString@@QAEXPBD@Z']
lea ['edx,', '[ebp+var_38]']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['?AddAscii@UString@@QAEXPBD@Z']
jmp ['short', 'loc_147']
lea ['ecx,', '[ebp+var_20]']
call ['?Len@UString@@QBEIXZ']
cmp ['eax,', '2']
jb ['short', 'loc_147']
lea ['ecx,', '[ebp+var_20]']
call ['??BUString@@QBEPB_WXZ']
mov ['esi,', 'eax']
lea ['ecx,', '[ebp+var_20]']
call ['?Len@UString@@QBEIXZ']
movzx ['eax,', 'word', 'ptr', '[esi+eax*2-2]']
cmp ['eax,', '0Ah']
jnz ['short', 'loc_147']
lea ['ecx,', '[ebp+var_20]']
call ['??BUString@@QBEPB_WXZ']
mov ['esi,', 'eax']
lea ['ecx,', '[ebp+var_20]']
call ['?Len@UString@@QBEIXZ']
movzx ['ecx,', 'word', 'ptr', '[esi+eax*2-4]']
cmp ['ecx,', '0Dh']
jnz ['short', 'loc_147']
lea ['ecx,', '[ebp+var_20]']
call ['?Len@UString@@QBEIXZ']
sub ['eax,', '2']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['?DeleteFrom@UString@@QAEXI@Z']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_48]']
or ['eax,', '1']
mov ['[ebp+var_48],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '2Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
movzx ['eax,', 'byte', 'ptr', 'ds:?g_IsNT@@3_NA']
test ['eax,', 'eax']
jnz ['loc_292']
mov ['esi,', 'esp']
push ['0']
push ['0']
lea ['ecx,', '[ebp+Buffer]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+dwMessageId]']
push ['edx']
push ['0']
push ['1300h']
call ['dword', 'ptr', 'ds:__imp__FormatMessageA@28']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_23C']
xor ['al,', 'al']
jmp ['loc_2DF']
mov ['eax,', 'dword', 'ptr', '[ebp+Buffer]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??0AString@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_30]']
push ['edx']
call ['?GetUnicodeString@@YG?AVUString@@ABVAString@@@Z']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_38],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1AString@@QAE@XZ']
jmp ['short', 'loc_2CA']
mov ['esi,', 'esp']
push ['0']
push ['0']
lea ['edx,', '[ebp+Buffer]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+dwMessageId]']
push ['eax']
push ['0']
push ['1300h']
call ['dword', 'ptr', 'ds:__imp__FormatMessageW@28']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_2BE']
xor ['al,', 'al']
jmp ['short', 'loc_2DF']
mov ['ecx,', 'dword', 'ptr', '[ebp+Buffer]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??4UString@@QAEAAV0@PB_W@Z']
mov ['esi,', 'esp']
mov ['edx,', 'dword', 'ptr', '[ebp+Buffer]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__LocalFree@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z$1 proc near
mov ['eax,', '[ebp-48h]']
and ['eax,', '1']
jz ['locret_34C']
and ['dword', 'ptr', '[ebp-48h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__ehhandler$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z$1 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-38h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteFrom@UString@@QAEXI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_4CC']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetUnicodeString@@YG?AVUString@@ABVAString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z']
mov ['edx,', '[ebp+var_4]']
or ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

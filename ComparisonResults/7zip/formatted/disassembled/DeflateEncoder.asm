?Normalize@CEncProps@NEncoder@NDeflate@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_167']
mov ['[ebp+var_8],', '5']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jge ['short', 'loc_187']
xor ['edx,', 'edx']
cmp ['[ebp+var_8],', '5']
setnl ['dl']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jge ['short', 'loc_1C0']
cmp ['[ebp+var_8],', '7']
jge ['short', 'loc_19F']
mov ['[ebp+var_C],', '20h']
jmp ['short', 'loc_1B7']
xor ['edx,', 'edx']
cmp ['[ebp+var_8],', '9']
setnl ['dl']
sub ['edx,', '1']
and ['edx,', '0FFFFFFC0h']
add ['edx,', '80h']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jge ['short', 'loc_1DB']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setnz ['cl']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_1F5']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
sar ['edx,', '1']
add ['edx,', '10h']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+14h],', '0FFFFFFFFh']
jnz ['short', 'loc_22B']
cmp ['[ebp+var_8],', '7']
jge ['short', 'loc_20D']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_222']
xor ['edx,', 'edx']
cmp ['[ebp+var_8],', '9']
setnl ['dl']
sub ['edx,', '1']
and ['edx,', '0FFFFFFF9h']
add ['edx,', '0Ah']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+14h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetProps@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBUCEncProps@234@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_1C],', 'edx']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[eax+14h]']
mov ['[ebp+var_C],', 'edx']
lea ['ecx,', '[ebp+var_20]']
call ['?Normalize@CEncProps@NEncoder@NDeflate@NCompress@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+9AECh],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'edx']
cmp ['[ebp+var_28],', '3']
jnb ['short', 'loc_2A0']
mov ['[ebp+var_28],', '3']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[eax+4D0h]']
jbe ['short', 'loc_2BA']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4D0h]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx+4A8h],', 'edx']
xor ['eax,', 'eax']
cmp ['[ebp+var_1C],', '0']
setz ['al']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4ACh],', 'al']
xor ['edx,', 'edx']
cmp ['[ebp+var_14],', '0']
setnz ['dl']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4ADh],', 'dl']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+4C0h],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4C0h],', '0']
jnz ['short', 'loc_30F']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4C0h],', '1']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+4C0h],', '1']
jnz ['short', 'loc_32A']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4BCh],', '1']
jmp ['short', 'loc_367']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4C0h],', '0Ah']
ja ['short', 'loc_345']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4BCh],', '2']
jmp ['short', 'loc_367']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4C0h]']
sub ['ecx,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4BCh],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4C0h],', '0Ah']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '2Ch']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '468h']
call ['??0CBitlEncoder@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+4A0h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4B0h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+4B4h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+4DCh],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+4DDh],', 'dl']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+12D8h],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??0CEncProps@NEncoder@NDeflate@NCompress@@QAE@XZ']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?SetProps@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBUCEncProps@234@@Z']
movzx ['edx,', '[ebp+arg_0]']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '102h']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+4D0h],', 'edx']
movzx ['ecx,', '[ebp+arg_0]']
neg ['ecx']
sbb ['ecx,', 'ecx']
add ['ecx,', '100h']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+4CCh],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jz ['short', 'loc_494']
mov ['[ebp+var_34],', 'offset', '_kLenStart64']
jmp ['short', 'loc_49B']
mov ['[ebp+var_34],', 'offset', '_kLenStart32']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_34]']
mov ['[ecx+4D4h],', 'edx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jz ['short', 'loc_4B8']
mov ['[ebp+var_38],', 'offset', '_kLenDirectBits64']
jmp ['short', 'loc_4BF']
mov ['[ebp+var_38],', 'offset', '_kLenDirectBits32']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_38]']
mov ['[ecx+4D8h],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_MatchFinder_Construct@4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Create@CCoder@NEncoder@NDeflate@NCompress@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4A0h],', '0']
jnz ['short', 'loc_56B']
push ['3FFFCh']
call ['_MyAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4A0h],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+4A0h],', '0']
jnz ['short', 'loc_56B']
mov ['eax,', '8007000Eh']
jmp ['loc_6FA']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+12D8h],', '0']
jnz ['short', 'loc_5A0']
push ['53000h']
call ['_MyAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+12D8h],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+12D8h],', '0']
jnz ['short', 'loc_5A0']
mov ['eax,', '8007000Eh']
jmp ['loc_6FA']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4C5h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5E5']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+4B0h],', '0']
jnz ['short', 'loc_5E3']
push ['13FFECh']
call ['_MidAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4B0h],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+4B0h],', '0']
jnz ['short', 'loc_5E3']
mov ['eax,', '8007000Eh']
jmp ['loc_6FA']
jmp ['short', 'loc_62C']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4B4h],', '0']
jnz ['short', 'loc_62C']
push ['410h']
call ['_MyAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4B4h],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+4B4h],', '0']
jnz ['short', 'loc_61A']
mov ['eax,', '8007000Eh']
jmp ['loc_6FA']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4B4h]']
mov ['[eax+4A4h],', 'edx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4DCh]']
test ['ecx,', 'ecx']
jnz ['loc_6D3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+4ADh]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+1Dh],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+48h],', '3']
push ['offset', '_g_Alloc']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4D0h]']
sub ['edx,', '[ecx+4A8h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4A8h]']
push ['ecx']
push ['11101h']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+4DDh]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '8000h']
add ['eax,', '8000h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_MatchFinder_Create@24']
test ['eax,', 'eax']
jnz ['short', 'loc_6B2']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_6FA']
push ['100000h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?Create@CBitlEncoder@@QAE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_6D3']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_6FA']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+9AECh],', '0']
jz ['short', 'loc_6EE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+9AECh]']
mov ['[ecx+30h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+4DCh],', '1']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?BaseSetEncoderProperties2@CCoder@NEncoder@NDeflate@NCompress@@QAEJPBKPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '38h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??0CEncProps@NEncoder@NDeflate@NCompress@@QAE@XZ']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_73D']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['loc_7D9']
mov ['edx,', '[ebp+var_28]']
shl ['edx,', '4']
add ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_30],', 'edx']
cmp ['[ebp+var_30],', '10h']
jb ['short', 'loc_769']
jmp ['short', 'loc_734']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '13h']
jz ['short', 'loc_77B']
mov ['eax,', '80070057h']
jmp ['short', 'loc_7E7']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
sub ['edx,', '8']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_38],', '7']
ja ['short', '$LN1']
mov ['eax,', '[ebp+var_38]']
jmp ['ds:$LN20[eax*4]']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_7D4']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_7D4']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_7D4']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_7D4']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_7D4']
jmp ['short', 'loc_7D4']
mov ['eax,', '80070057h']
jmp ['short', 'loc_7E7']
jmp ['loc_734']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetProps@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBUCEncProps@234@@Z']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Free@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4B0h]']
push ['ecx']
call ['_MidFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4B0h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4B4h]']
push ['ecx']
call ['_MyFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4B4h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4A0h]']
push ['ecx']
call ['_MyFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4A0h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+12D8h]']
push ['ecx']
call ['_MyFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+12D8h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Free@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ']
push ['offset', '_g_Alloc']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_MatchFinder_Free@8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '468h']
call ['??1CBitlEncoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetMatches@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '848h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_848]']
mov ['ecx,', '212h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4C5h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_9E4']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4B8h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4B0h]']
lea ['eax,', '[edx+eax*2]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4A4h],', 'eax']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+504h]']
test ['eax,', 'eax']
jz ['short', 'loc_9E4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4A4h]']
movzx ['eax,', 'word', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4B8h]']
lea ['eax,', '[eax+edx+1]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4B8h],', 'eax']
jmp ['loc_C07']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+4ADh]']
test ['eax,', 'eax']
jz ['short', 'loc_A0A']
lea ['ecx,', '[ebp+var_828]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_Bt3Zip_MatchFinder_GetMatches@8']
mov ['[ebp+var_848],', 'eax']
jmp ['short', 'loc_A20']
lea ['eax,', '[ebp+var_828]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_Hc3Zip_MatchFinder_GetMatches@8']
mov ['[ebp+var_848],', 'eax']
mov ['edx,', '[ebp+var_848]']
mov ['[ebp+var_830],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4A4h]']
mov ['dx,', 'word', 'ptr', '[ebp+var_830]']
mov ['[ecx],', 'dx']
cmp ['[ebp+var_830],', '0']
jbe ['loc_BBA']
mov ['[ebp+var_834],', '0']
jmp ['short', 'loc_A67']
mov ['eax,', '[ebp+var_834]']
add ['eax,', '2']
mov ['[ebp+var_834],', 'eax']
mov ['ecx,', '[ebp+var_834]']
cmp ['ecx,', '[ebp+var_830]']
jnb ['short', 'loc_ABB']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4A4h]']
mov ['ecx,', '[ebp+var_834]']
mov ['edx,', '[ebp+var_834]']
mov ['dx,', '[ebp+edx*4+var_828]']
mov ['[eax+ecx*2+2],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4A4h]']
mov ['edx,', '[ebp+var_834]']
mov ['eax,', '[ebp+var_834]']
mov ['ax,', '[ebp+eax*4+var_824]']
mov ['[ecx+edx*2+4],', 'ax']
jmp ['short', 'loc_A58']
mov ['ecx,', '[ebp+var_830]']
mov ['edx,', '[ebp+ecx*4+var_830]']
mov ['[ebp+var_838],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_838]']
cmp ['ecx,', '[eax+4A8h]']
jnz ['loc_BBA']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4A8h]']
cmp ['ecx,', '[eax+4D0h]']
jz ['loc_BBA']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+0Ch]']
sub ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_83C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
sub ['eax,', '1']
mov ['[ebp+var_840],', 'eax']
mov ['ecx,', '[ebp+var_830]']
mov ['edx,', '[ebp+ecx*4+var_82C]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_840]']
sub ['eax,', 'edx']
mov ['[ebp+var_844],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_83C]']
cmp ['edx,', '[ecx+4D0h]']
jbe ['short', 'loc_B5C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4D0h]']
mov ['[ebp+var_83C],', 'ecx']
jmp ['short', 'loc_B6D']
mov ['edx,', '[ebp+var_838]']
add ['edx,', '1']
mov ['[ebp+var_838],', 'edx']
mov ['eax,', '[ebp+var_838]']
cmp ['eax,', '[ebp+var_83C]']
jnb ['short', 'loc_B9F']
mov ['ecx,', '[ebp+var_840]']
add ['ecx,', '[ebp+var_838]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_844]']
add ['eax,', '[ebp+var_838]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['edx,', 'ecx']
jnz ['short', 'loc_B9F']
jmp ['short', 'loc_B5E']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4A4h]']
mov ['ecx,', '[ebp+var_834]']
mov ['dx,', 'word', 'ptr', '[ebp+var_838]']
mov ['[eax+ecx*2-2],', 'dx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4C5h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_BE4']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4B8h]']
mov ['ecx,', '[ebp+var_830]']
lea ['edx,', '[ecx+eax+1]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+4B8h],', 'edx']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+504h]']
test ['edx,', 'edx']
jnz ['short', 'loc_C07']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+508h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+508h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '848h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MovePos@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+504h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_CB9']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_CB9']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+4ADh]']
test ['eax,', 'eax']
jz ['short', 'loc_C97']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_Bt3Zip_MatchFinder_Skip@8']
jmp ['short', 'loc_CA4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_Hc3Zip_MatchFinder_Skip@8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+508h]']
add ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+508h],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Backward@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+50Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*8+12E0h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_4]']
mov ['cx,', '[eax+edx*8+12E2h]']
mov ['word', 'ptr', '[ebp+var_C],', 'cx']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'edx']
mov ['ax,', 'word', 'ptr', '[ebp+var_C]']
mov ['word', 'ptr', '[ebp+var_14],', 'ax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_4]']
mov ['ax,', '[edx+ecx*8+12E2h]']
mov ['word', 'ptr', '[ebp+var_C],', 'ax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*8+12E0h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_4]']
mov ['ax,', 'word', 'ptr', '[ebp+var_14]']
mov ['[edx+ecx*8+12E2h],', 'ax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_4]']
mov ['ax,', 'word', 'ptr', '[ebp+arg_4]']
mov ['[edx+ecx*8+12E0h],', 'ax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+arg_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
ja ['short', 'loc_D24']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx+12E2h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx+12E0h]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+510h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+510h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetOptimal@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+50Ch]']
cmp ['edx,', '[ecx+510h]']
jz ['short', 'loc_E46']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+510h]']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*8+12E0h]']
mov ['ecx,', '[ebp+var_4]']
sub ['eax,', '[ecx+510h]']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+510h]']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*8+12E2h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+510h]']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*8+12E0h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+510h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_125F']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+50Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+510h],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?GetMatches@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4A4h]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_E87']
mov ['eax,', '1']
jmp ['loc_125F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4A4h]']
add ['eax,', '2']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx+4A8h]']
jbe ['short', 'loc_ED9']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MovePos@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_125F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx]']
sub ['ecx,', '[eax+508h]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+514h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+12E4h],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+12E8h],', 'ax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+12ECh],', '0FFFFFFFh']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+12F0h],', 'ax']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_1C],', '3']
jmp ['short', 'loc_F3F']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_14]']
ja ['short', 'loc_FC4']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+2]']
mov ['[ebp+var_20],', 'eax']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+edx*8+12E0h],', 'cx']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_4]']
mov ['ax,', 'word', 'ptr', '[ebp+var_20]']
mov ['[edx+ecx*8+12E2h],', 'ax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_1C]']
movzx ['esi,', 'byte', 'ptr', '[ecx+611h]']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+714h]']
add ['esi,', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+eax*8+12DCh],', 'esi']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
cmp ['[ebp+var_1C],', 'ecx']
jnz ['short', 'loc_FBF']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '2']
mov ['[ebp+var_18],', 'edx']
jmp ['loc_F36']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+var_28]']
jz ['short', 'loc_FFA']
cmp ['[ebp+var_24],', '1000h']
jz ['short', 'loc_FFA']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4B8h],', '9F7E6h']
jb ['short', 'loc_100F']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Backward@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAII@Z']
jmp ['loc_125F']
mov ['ecx,', '[ebp+var_4]']
call ['?GetMatches@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4A4h]']
add ['ecx,', '2']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4A4h]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_30],', '0']
cmp ['[ebp+var_2C],', '0']
jz ['loc_10CC']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2-4]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[edx+4A8h]']
jbe ['short', 'loc_10CC']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Backward@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAII@Z']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_2C]']
mov ['esi,', '[ebp+var_10]']
mov ['dx,', '[esi+edx*2-2]']
mov ['[ecx+eax*8+12E2h],', 'dx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50Ch],', 'eax']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['cx,', '[ecx+50Ch]']
mov ['[eax+edx*8+12E0h],', 'cx']
mov ['edx,', '[ebp+var_30]']
sub ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?MovePos@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z']
mov ['eax,', '[ebp+var_34]']
jmp ['loc_125F']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*8+12DCh]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_4]']
sub ['ecx,', '[edx+508h]']
movzx ['eax,', 'byte', 'ptr', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+514h]']
add ['edx,', '[ebp+var_38]']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+eax*8+12E4h]']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[ebp+var_3C]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_112E']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[ebp+var_3C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['dx,', 'word', 'ptr', '[ebp+var_24]']
mov ['[ecx+4],', 'dx']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_1139']
jmp ['loc_FD1']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '[ebp+var_30]']
cmp ['[ebp+var_28],', 'eax']
jnb ['short', 'loc_1160']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+edx*8+12DCh],', '0FFFFFFFh']
jmp ['short', 'loc_1139']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+2]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax+714h]']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_48],', '3']
jmp ['short', 'loc_11A1']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '1']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_48]']
movzx ['eax,', 'byte', 'ptr', '[edx+611h]']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ebp+var_4]']
lea ['eax,', '[edx+ecx*8+12DCh]']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_4C]']
cmp ['edx,', '[ecx]']
jnb ['short', 'loc_11EF']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_4C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
mov ['ax,', 'word', 'ptr', '[ebp+var_24]']
mov ['[edx+4],', 'ax']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', 'word', 'ptr', '[ebp+var_44]']
mov ['[ecx+6],', 'dx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['[ebp+var_48],', 'edx']
jnz ['short', 'loc_1255']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '2']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_2C]']
jnz ['short', 'loc_1211']
jmp ['short', 'loc_125A']
mov ['edx,', '[ebp+var_44]']
push ['edx']
call ['?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+714h]']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', 'edx']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+2]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax+714h]']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_1198']
jmp ['loc_FD1']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetOptimalFast@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetMatches@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4A4h]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_12BA']
mov ['eax,', '1']
jmp ['short', 'loc_12F5']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4A4h]']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2-2]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4A4h]']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*2]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?MovePos@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?InitStructures@CTables@NEncoder@NDeflate@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1331']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '100h']
jnb ['short', 'loc_1345']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '8']
jmp ['short', 'loc_1328']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx],', '0Dh']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1362']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '120h']
jnb ['short', 'loc_1376']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx],', '5']
jmp ['short', 'loc_1359']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1388']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '20h']
jnb ['short', 'loc_139D']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx+120h],', '5']
jmp ['short', 'loc_137F']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?LevelTableDummy@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0FFh']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_14],', '7']
mov ['[ebp+var_18],', '4']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_140A']
mov ['[ebp+var_14],', '8Ah']
mov ['[ebp+var_18],', '3']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_141C']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['loc_1540']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '1']
cmp ['[ebp+var_1C],', 'edx']
jnb ['short', 'loc_1448']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_144F']
mov ['[ebp+var_24],', '0FFh']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['short', 'loc_1470']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_C]']
jnz ['short', 'loc_1470']
jmp ['short', 'loc_1413']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_18]']
jnb ['short', 'loc_148F']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+ecx*4]']
add ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_14F2']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_14CC']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_8]']
jz ['short', 'loc_14BB']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+ecx*4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+40h]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+40h],', 'edx']
jmp ['short', 'loc_14F2']
cmp ['[ebp+var_10],', '0Ah']
ja ['short', 'loc_14E3']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+44h]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+44h],', 'edx']
jmp ['short', 'loc_14F2']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+48h]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+48h],', 'edx']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_1515']
mov ['[ebp+var_14],', '8Ah']
mov ['[ebp+var_18],', '3']
jmp ['short', 'loc_153B']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_C]']
jnz ['short', 'loc_152D']
mov ['[ebp+var_14],', '6']
mov ['[ebp+var_18],', '3']
jmp ['short', 'loc_153B']
mov ['[ebp+var_14],', '7']
mov ['[ebp+var_18],', '4']
jmp ['loc_1413']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?WriteBits@CBitlEncoder@@QAEXII@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?LevelTableCode@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEI0PBI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0FFh']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_14],', '7']
mov ['[ebp+var_18],', '4']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_15DC']
mov ['[ebp+var_14],', '8Ah']
mov ['[ebp+var_18],', '3']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_15EE']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['loc_178A']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '1']
cmp ['[ebp+var_1C],', 'edx']
jnb ['short', 'loc_161A']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['[ebp+var_28],', 'ecx']
jmp ['short', 'loc_1621']
mov ['[ebp+var_28],', '0FFh']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['short', 'loc_1642']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_C]']
jnz ['short', 'loc_1642']
jmp ['short', 'loc_15E5']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_18]']
jnb ['short', 'loc_1687']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_165C']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+var_10]']
jnb ['short', 'loc_1682']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
jmp ['short', 'loc_1653']
jmp ['loc_173C']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_16E4']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_8]']
jz ['short', 'loc_16BA']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx+40h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
push ['2']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '3']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
jmp ['short', 'loc_173C']
cmp ['[ebp+var_10],', '0Ah']
ja ['short', 'loc_1714']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+11h]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx+44h]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
push ['3']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
jmp ['short', 'loc_173C']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+12h]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+48h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
push ['7']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '0Bh']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_175F']
mov ['[ebp+var_14],', '8Ah']
mov ['[ebp+var_18],', '3']
jmp ['short', 'loc_1785']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_C]']
jnz ['short', 'loc_1777']
mov ['[ebp+var_14],', '6']
mov ['[ebp+var_18],', '3']
jmp ['short', 'loc_1785']
mov ['[ebp+var_14],', '7']
mov ['[ebp+var_18],', '4']
jmp ['loc_15E5']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?MakeTables@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['120h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '734h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0D74h']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '874h']
push ['eax']
call ['_Huffman_Generate@20']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['20h']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '854h']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '11F4h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0CF4h']
push ['ecx']
call ['_Huffman_Generate@20']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Huffman_GetPrice@NEncoder@NDeflate@NCompress@@YGIPBIPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1855']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_1878']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+this]']
imul ['eax,', '[edx+ecx*4]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_184C']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Huffman_GetPrice_Spec@NEncoder@NDeflate@NCompress@@YGIPBIPBEI1I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+this]']
push ['edx']
call ['?Huffman_GetPrice@NEncoder@NDeflate@NCompress@@YGIPBIPBEI@Z']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+this]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
call ['?Huffman_GetPrice@NEncoder@NDeflate@NCompress@@YGIPBIPBEI@Z']
add ['eax,', 'esi']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['14h']
endp
?GetLzBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['offset', 'unk_101']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4D8h]']
push ['ecx']
push ['offset', '_kLevelDirectBits']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '734h']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '874h']
push ['eax']
call ['?Huffman_GetPrice_Spec@NEncoder@NDeflate@NCompress@@YGIPBIPBEI1I@Z']
mov ['esi,', 'eax']
push ['0']
push ['offset', '_kDistDirectBits']
push ['offset', '_kLenStart64']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '854h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0CF4h']
push ['edx']
call ['?Huffman_GetPrice_Spec@NEncoder@NDeflate@NCompress@@YGIPBIPBEI1I@Z']
add ['eax,', 'esi']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?TryBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['480h']
push ['0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '874h']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['80h']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0CF4h']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+500h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+12D4h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+12D4h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+510h]']
cmp ['edx,', '[ecx+50Ch]']
jnz ['short', 'loc_1A10']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4B8h],', '9F7E6h']
jnb ['short', 'loc_1A0B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+12D4h]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_1A0B']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+504h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1A10']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+0Ch]']
sub ['ecx,', '[eax+4]']
jz ['short', 'loc_1A0B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+500h]']
cmp ['ecx,', '[eax+4C8h]']
jb ['short', 'loc_1A10']
jmp ['loc_1B54']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+4ACh]']
test ['eax,', 'eax']
jz ['short', 'loc_1A2F']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetOptimalFast@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_1A3E']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetOptimal@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+500h]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4A0h]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+500h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+500h],', 'eax']
cmp ['[ebp+var_18],', '3']
jb ['short', 'loc_1ADF']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '3']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_20]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'ds:_g_LenSlots[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4+0C78h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'ds:_g_LenSlots[eax]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+ecx*4+0C78h],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
mov ['dx,', 'word', 'ptr', '[ebp+var_10]']
mov ['[ecx+2],', 'dx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+eax*4+0CF4h]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_28]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_1B25']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx+508h]']
mov ['al,', '[edx]']
mov ['[ebp+var_21],', 'al']
movzx ['ecx,', '[ebp+var_21]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4+874h]']
add ['eax,', '1']
movzx ['ecx,', '[ebp+var_21]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx*4+874h],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
call ['?SetAsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QAEXXZ']
movzx ['ax,', '[ebp+var_21]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ecx+2],', 'ax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+508h]']
sub ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+508h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+12D4h]']
add ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+12D4h],', 'eax']
jmp ['loc_19AA']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0C74h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0C74h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+508h]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+12D4h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+508h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+504h],', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetPrices@CCoder@NEncoder@NDeflate@NCompress@@QAEXABUCLevels@34@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4ACh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1BFB']
jmp ['loc_1D13']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1C0D']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '100h']
jnb ['short', 'loc_1C46']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_C+3]']
test ['edx,', 'edx']
jz ['short', 'loc_1C31']
mov ['al,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['byte', 'ptr', '[ebp+var_14+1],', 'al']
jmp ['short', 'loc_1C35']
mov ['byte', 'ptr', '[ebp+var_14+1],', '0Bh']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_14+1]']
mov ['[ecx+514h],', 'dl']
jmp ['short', 'loc_1C04']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1C58']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+4CCh]']
jnb ['short', 'loc_1CBA']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'ds:_g_LenSlots[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_10]']
mov ['al,', '[edx+101h]']
mov ['byte', 'ptr', '[ebp+var_14+3],', 'al']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_14+3]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1C92']
mov ['dl,', 'byte', 'ptr', '[ebp+var_14+3]']
mov ['byte', 'ptr', '[ebp+var_14],', 'dl']
jmp ['short', 'loc_1C96']
mov ['byte', 'ptr', '[ebp+var_14],', '0Bh']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4D8h]']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[edx+ecx]']
add ['eax,', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+614h],', 'al']
jmp ['short', 'loc_1C4F']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1CCC']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '20h']
jnb ['short', 'loc_1D13']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+120h]']
mov ['byte', 'ptr', '[ebp+var_14+2],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_14+2]']
test ['edx,', 'edx']
jz ['short', 'loc_1CF1']
mov ['al,', 'byte', 'ptr', '[ebp+var_14+2]']
mov ['byte', 'ptr', '[ebp+var_18+3],', 'al']
jmp ['short', 'loc_1CF5']
mov ['byte', 'ptr', '[ebp+var_18+3],', '6']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_18+3]']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', '_kDistDirectBits[edx]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+714h],', 'cl']
jmp ['short', 'loc_1CC3']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Huffman_ReverseBits@NEncoder@NDeflate@NCompress@@YGXPAIPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1D4E']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['loc_1DF2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
and ['edx,', '5555h']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0AAAAh']
shr ['eax,', '1']
or ['edx,', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '3333h']
shl ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
and ['edx,', '0CCCCh']
shr ['edx,', '2']
or ['ecx,', 'edx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0F0Fh']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '0F0F0h']
shr ['ecx,', '4']
or ['eax,', 'ecx']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
and ['edx,', '0FFh']
shl ['edx,', '8']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FF00h']
shr ['eax,', '8']
or ['edx,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx]']
mov ['ecx,', '10h']
sub ['ecx,', 'eax']
shr ['edx,', 'cl']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ebp+this]']
mov ['[eax+ecx*4],', 'edx']
jmp ['loc_1D45']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?WriteBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '_kLevelDirectBits']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '734h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D74h']
push ['ecx']
call ['?Huffman_ReverseBits@NEncoder@NDeflate@NCompress@@YGXPAIPBEI@Z']
push ['offset', '_kLenStart64']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '854h']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '11F4h']
push ['eax']
call ['?Huffman_ReverseBits@NEncoder@NDeflate@NCompress@@YGXPAIPBEI@Z']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1E64']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+500h]']
jnb ['loc_1FB0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4A0h]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
call ['?IsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1ECF']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx+734h]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+edx*4+0D74h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?WriteBits@CBitlEncoder@@QAEXII@Z']
jmp ['loc_1FAB']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'word', 'ptr', '[edx]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'ds:_g_LenSlots[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+835h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+edx*4+1178h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?WriteBits@CBitlEncoder@@QAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4D8h]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax+ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4D4h]']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[ecx+edx]']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?WriteBits@CBitlEncoder@@QAEXII@Z']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+854h]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4+11F4h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?WriteBits@CBitlEncoder@@QAEXII@Z']
mov ['ecx,', '[ebp+var_1C]']
movzx ['edx,', '_kDistDirectBits[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '_kDistStart[eax*4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?WriteBits@CBitlEncoder@@QAEXII@Z']
jmp ['loc_1E5B']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+834h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1174h]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?WriteBits@CBitlEncoder@@QAEXII@Z']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WriteStoreBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXII_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '10000h']
jnb ['short', 'loc_2019']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_2020']
mov ['[ebp+var_14],', '0FFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
sub ['edx,', '[ebp+var_8]']
mov ['[ebp+arg_0],', 'edx']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_2046']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2046']
mov ['[ebp+var_18],', '1']
jmp ['short', 'loc_204D']
mov ['[ebp+var_18],', '0']
push ['1']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
push ['2']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?FlushByte@CBitlEncoder@@QAEXXZ']
push ['10h']
movzx ['edx,', 'word', 'ptr', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
push ['10h']
mov ['eax,', '[ebp+var_8]']
not ['eax']
movzx ['ecx,', 'ax']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_20B4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_20D6']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?WriteByte@CBitlEncoder@@QAEXE@Z']
jmp ['short', 'loc_20AB']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_8]']
mov ['[ebp+arg_4],', 'edx']
cmp ['[ebp+arg_0],', '0']
jnz ['loc_2008']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?TryDynBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '7Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_7C]']
mov ['ecx,', '1Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '14Ch']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+12D8h]']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+144h]']
mov ['[edx+12D4h],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+148h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?SetPrices@CCoder@NEncoder@NDeflate@NCompress@@QAEXABUCLevels@34@@Z']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_217F']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['loc_2216']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+4B8h],', 'edx']
mov ['ecx,', '[ebp+var_8]']
call ['?TryBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+500h],', '4650h']
jbe ['short', 'loc_21B7']
mov ['[ebp+var_78],', '0Ch']
jmp ['short', 'loc_21ED']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+500h],', '1B58h']
jbe ['short', 'loc_21CF']
mov ['[ebp+var_7C],', '0Bh']
jmp ['short', 'loc_21E7']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '7D0h']
cmp ['eax,', '[edx+500h]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '9']
mov ['[ebp+var_7C],', 'ecx']
mov ['edx,', '[ebp+var_7C]']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?MakeTables@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '734h']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?SetPrices@CCoder@NEncoder@NDeflate@NCompress@@QAEXABUCLevels@34@@Z']
jmp ['loc_2176']
mov ['esi,', '[ebp+var_8]']
add ['esi,', '734h']
mov ['ecx,', '50h']
mov ['edi,', '[ebp+var_C]']
rep ['movsd']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4F4h],', '11Eh']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+4F4h],', '101h']
jbe ['short', 'loc_2274']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4F4h]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+733h]']
test ['edx,', 'edx']
jnz ['short', 'loc_2274']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4F4h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4F4h],', 'ecx']
jmp ['short', 'loc_2236']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4F8h],', '20h']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+4F8h],', '1']
jbe ['short', 'loc_22BC']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4F8h]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+853h]']
test ['edx,', 'edx']
jnz ['short', 'loc_22BC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4F8h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4F8h],', 'ecx']
jmp ['short', 'loc_2281']
push ['4Ch']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4F4h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '734h']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?LevelTableDummy@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEIPAI@Z']
lea ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4F8h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '854h']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?LevelTableDummy@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEIPAI@Z']
push ['7']
push ['13h']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '12C0h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1274h']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['_Huffman_Generate@20']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4FCh],', '4']
mov ['[ebp+var_70],', '0']
jmp ['short', 'loc_234B']
mov ['ecx,', '[ebp+var_70]']
add ['ecx,', '1']
mov ['[ebp+var_70],', 'ecx']
cmp ['[ebp+var_70],', '13h']
jnb ['short', 'loc_239E']
mov ['edx,', '[ebp+var_70]']
movzx ['eax,', '_kCodeLengthAlphabetOrder[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx+eax+12C0h]']
mov ['[ebp+var_71],', 'dl']
movzx ['eax,', '[ebp+var_71]']
test ['eax,', 'eax']
jle ['short', 'loc_238D']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_70]']
cmp ['edx,', '[ecx+4FCh]']
jb ['short', 'loc_238D']
mov ['eax,', '[ebp+var_70]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4FCh],', 'eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_70]']
mov ['al,', '[ebp+var_71]']
mov ['[edx+4DEh],', 'al']
jmp ['short', 'loc_2342']
mov ['ecx,', '[ebp+var_8]']
call ['?GetLzBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QBEIXZ']
mov ['esi,', 'eax']
push ['offset', 'byte_10']
push ['offset', '_kLevelDirectBits']
push ['offset', 'byte_13']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '12C0h']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['?Huffman_GetPrice_Spec@NEncoder@NDeflate@NCompress@@YGIPBIPBEI1I@Z']
add ['esi,', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4FCh]']
imul ['ecx,', '3']
lea ['eax,', '[esi+ecx+11h]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '7Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?TryFixedBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '14Ch']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+12D8h]']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+144h]']
mov ['[edx+12D4h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+148h]']
mov ['[edx+4B8h],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '734h']
call ['?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '734h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?SetPrices@CCoder@NEncoder@NDeflate@NCompress@@QAEXABUCLevels@34@@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?TryBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?GetLzBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QBEIXZ']
add ['eax,', '3']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '14Ch']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+12D8h]']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx+142h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4BCh]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?TryDynBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+12D4h]']
mov ['[eax+144h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+500h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4B8h]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+508h]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4C4h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_25A5']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+500h],', '100h']
ja ['short', 'loc_25A5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?TryFixedBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEII@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_C]']
sbb ['edx,', 'edx']
neg ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+142h],', 'dl']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+142h]']
test ['edx,', 'edx']
jz ['short', 'loc_25A5']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_C],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+12D4h]']
push ['edx']
call ['?GetStorePrice@NEncoder@NDeflate@NCompress@@YGIII@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['[ebp+var_C],', 'eax']
sbb ['ecx,', 'ecx']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+141h],', 'cl']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+141h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_25E1']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+140h],', '0']
cmp ['[ebp+arg_4],', '1']
jbe ['loc_2736']
cmp ['[ebp+var_10],', '80h']
jb ['loc_2736']
mov ['ecx,', '[ebp+arg_0]']
shl ['ecx,', '1']
imul ['ecx,', '14Ch']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+12D8h]']
mov ['[ebp+var_24],', 'ecx']
mov ['esi,', '[ebp+var_8]']
mov ['ecx,', '50h']
mov ['edi,', '[ebp+var_24]']
rep ['movsd']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+144h]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+144h],', 'ecx']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+148h]']
mov ['[eax+148h],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
shl ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z']
mov ['[ebp+var_28],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[edx+144h]']
sub ['ecx,', '[eax+144h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_24]']
cmp ['dword', 'ptr', '[edx+144h],', '40h']
jb ['loc_2736']
cmp ['[ebp+var_2C],', '40h']
jb ['loc_2736']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+eax+1]']
imul ['ecx,', '14Ch']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+12D8h]']
mov ['[ebp+var_30],', 'ecx']
mov ['esi,', '[ebp+var_8]']
mov ['ecx,', '50h']
mov ['edi,', '[ebp+var_30]']
rep ['movsd']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+144h],', 'ecx']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4B8h]']
mov ['[edx+148h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[edx+508h]']
sub ['ecx,', '[eax+144h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+508h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+ecx+1]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z']
add ['eax,', '[ebp+var_28]']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_C]']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+140h],', 'cl']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+140h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2736']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+508h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4B8h],', 'eax']
mov ['eax,', '[ebp+var_C]']
pop ['edi']
pop ['esi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetStorePrice@NEncoder@NDeflate@NCompress@@YGIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '3']
and ['eax,', '7']
mov ['[ebp+var_8],', 'eax']
jbe ['short', 'loc_27A7']
mov ['ecx,', '8']
sub ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_27AE']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+arg_0],', '10000h']
jnb ['short', 'loc_27C5']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_27CC']
mov ['[ebp+var_18],', '0FFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+edx+23h]']
mov ['edx,', '[ebp+var_10]']
lea ['eax,', '[ecx+edx*8]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+arg_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '[ebp+var_10]']
mov ['[ebp+arg_0],', 'ecx']
jnz ['short', 'loc_278C']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?CodeBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '14Ch']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+12D8h]']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+140h]']
test ['eax,', 'eax']
jz ['short', 'loc_2872']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
shl ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?CodeBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXI_N@Z']
movzx ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+eax+1]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?CodeBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXI_N@Z']
jmp ['loc_2AD5']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+141h]']
test ['eax,', 'eax']
jz ['short', 'loc_28A6']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+508h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+144h]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteStoreBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXII_N@Z']
jmp ['loc_2ABA']
push ['1']
movzx ['eax,', '[ebp+arg_4]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+142h]']
test ['edx,', 'edx']
jz ['loc_2984']
push ['2']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?TryFixedBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEII@Z']
mov ['[ebp+var_10],', '9']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_28FE']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '120h']
jnb ['short', 'loc_2931']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+734h]']
mov ['ecx,', '9']
sub ['ecx,', 'eax']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+eax*4+874h],', 'edx']
jmp ['short', 'loc_28F5']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_2943']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '20h']
jnb ['short', 'loc_2975']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+854h]']
mov ['edx,', '9']
sub ['edx,', 'ecx']
mov ['eax,', '1']
mov ['ecx,', 'edx']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx*4+0CF4h],', 'eax']
jmp ['short', 'loc_293A']
push ['9']
mov ['ecx,', '[ebp+var_4]']
call ['?MakeTables@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z']
jmp ['loc_2AB2']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4C0h],', '1']
ja ['short', 'loc_299E']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4C4h]']
test ['edx,', 'edx']
jz ['short', 'loc_29AC']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?TryDynBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z']
push ['2']
push ['2']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
push ['5']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4F4h]']
sub ['edx,', '101h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
push ['5']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4F8h]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
push ['4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4FCh]']
sub ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2A12']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[edx+4FCh]']
jnb ['short', 'loc_2A3A']
push ['3']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4DEh]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z']
jmp ['short', 'loc_2A09']
push ['offset', 'byte_13']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '12C0h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1274h']
push ['ecx']
call ['?Huffman_ReverseBits@NEncoder@NDeflate@NCompress@@YGXPAIPBEI@Z']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1274h']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '12C0h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4F4h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '734h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?LevelTableCode@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEI0PBI@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1274h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '12C0h']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4F8h]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '854h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?LevelTableCode@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEI0PBI@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+508h]']
sub ['edx,', '[ecx+144h]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+508h],', 'edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Read@NEncoder@NDeflate@NCompress@@YGHPAX0PAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '80000000h']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '80000000h']
jnb ['short', 'loc_2B22']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_2B29']
mov ['[ebp+var_18],', '80000000h']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[edx]']
push ['ecx']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?CodeReal@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '38h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4BCh],', '1']
jnz ['short', 'loc_2BE5']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4C0h],', '1']
jnz ['short', 'loc_2BE5']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_2BEC']
mov ['[ebp+var_34],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['al,', 'byte', 'ptr', '[ebp+var_34]']
mov ['[edx+4C4h],', 'al']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4C4h]']
test ['edx,', 'edx']
jnz ['short', 'loc_2C27']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4BCh],', '1']
jnz ['short', 'loc_2C27']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4C0h],', '1']
jnz ['short', 'loc_2C27']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_2C2E']
mov ['[ebp+var_38],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['al,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[edx+4C5h],', 'al']
mov ['ecx,', '[ebp+var_4]']
call ['?Create@CCoder@NEncoder@NDeflate@NCompress@@QAEJXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2C53']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_2DF8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4C0h]']
shl ['edx,', '0Ch']
add ['edx,', '1C00h']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4C8h],', 'edx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+49Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+498h],', 'offset', '?Read@NEncoder@NDeflate@NCompress@@YGHPAX0PAI@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '498h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+38h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_MatchFinder_Init@4']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?SetStream@CBitlEncoder@@QAEXPAUISequentialOutStream@@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?Init@CBitlEncoder@@QAEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+510h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+50Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+12D8h]']
add ['edx,', '14Ch']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[eax+148h],', '0']
mov ['ecx,', '[ebp+var_1C]']
call ['?InitStructures@CTables@NEncoder@NDeflate@NCompress@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+508h],', '0']
mov ['edx,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[edx+144h],', '0EDFBh']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+504h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4C0h]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?GetBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+0Ch]']
sub ['edx,', '[ecx+4]']
setz ['al']
movzx ['ecx,', 'al']
push ['ecx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?CodeBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXI_N@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+12D8h]']
mov ['ecx,', '[eax+290h]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_14]']
adc ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_2DC7']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?GetProcessedSize@CBitlEncoder@@QBE_KXZ']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'edx']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_28]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_2DC7']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_2DF8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+0Ch]']
sub ['edx,', '[ecx+4]']
jnz ['loc_2D1B']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+5Ch],', '0']
jz ['short', 'loc_2DEA']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+5Ch]']
jmp ['short', 'loc_2DF8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '468h']
call ['?Flush@CBitlEncoder@@QAEJXZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '1Ch']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?CodeReal@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_2F14']
endp
__catch$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0 proc near
mov ['edx,', '[ebp-1Ch]']
mov ['eax,', '[edx]']
mov ['[ebp-24h],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN8_0']
retn
endp
__catch$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1 proc near
mov ['dword', 'ptr', '[ebp-28h],', '80004005h']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN10_1']
retn
endp
?Code@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['18h']
endp
?SetCoderProperties@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['?BaseSetEncoderProperties2@CCoder@NEncoder@NDeflate@NCompress@@QAEJPBKPBUtagPROPVARIANT@@I@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
?Code@CCOMCoder64@NEncoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['18h']
endp
?SetCoderProperties@CCOMCoder64@NEncoder@NDeflate@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['?BaseSetEncoderProperties2@CCoder@NEncoder@NDeflate@NCompress@@QAEJPBKPBUtagPROPVARIANT@@I@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
__unwindfunclet$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '468h']
jmp ['??1CBitlEncoder@@QAE@XZ']
endp
__ehhandler$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-34h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '468h']
jmp ['??1CBitlEncoder@@QAE@XZ']
endp
__ehhandler$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CEncProps@NEncoder@NDeflate@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0Ch],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBitlEncoder@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0COutBuffer@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBitlEncoder@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COutBuffer@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COutBuffer@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Create@CBitlEncoder@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Create@COutBuffer@@QAE_NI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+this],', '200h']
jnb ['short', 'loc_3298']
mov ['eax,', '[ebp+this]']
movzx ['eax,', 'ds:_g_FastPos[eax]']
jmp ['short', 'loc_32A8']
mov ['ecx,', '[ebp+this]']
shr ['ecx,', '8']
movzx ['eax,', 'ds:_g_FastPos[ecx]']
add ['eax,', '10h']
pop ['ebp']
retn ['4']
endp
?WriteBits@CBitlEncoder@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jbe ['loc_3662']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+28h]']
jnb ['short', 'loc_3610']
mov ['edx,', '1']
mov ['ecx,', '[ebp+arg_4]']
shl ['edx,', 'cl']
sub ['edx,', '1']
and ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '8']
sub ['ecx,', '[eax+28h]']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+2Ch]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+2Ch],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+28h],', 'eax']
jmp ['short', 'loc_3662']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[edx+28h]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2Ch]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '8']
sub ['ecx,', '[eax+28h]']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', 'cl']
or ['edx,', 'eax']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+28h]']
shr ['edx,', 'cl']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+28h],', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+2Ch],', '0']
jmp ['loc_35BE']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WriteByte@COutBuffer@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_36B8']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushWithCheck@COutBuffer@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetAsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '8000h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
xor ['eax,', 'eax']
cmp ['ecx,', '8000h']
setnl ['al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?FlushByte@CBitlEncoder@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+28h],', '8']
jnb ['short', 'loc_3733']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2Ch]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+28h],', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+2Ch],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?WriteByte@CBitlEncoder@@QAEXE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?WriteByte@COutBuffer@@QAEXE@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_37A9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '90h']
jnb ['short', 'loc_37BD']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '8']
jmp ['short', 'loc_37A0']
jmp ['short', 'loc_37C8']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '100h']
jnb ['short', 'loc_37DC']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '9']
jmp ['short', 'loc_37BF']
jmp ['short', 'loc_37E7']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '118h']
jnb ['short', 'loc_37FB']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx],', '7']
jmp ['short', 'loc_37DE']
jmp ['short', 'loc_3806']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '120h']
jnb ['short', 'loc_381A']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '8']
jmp ['short', 'loc_37FD']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_382C']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '20h']
jnb ['short', 'loc_3841']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+120h],', '5']
jmp ['short', 'loc_3823']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@CBitlEncoder@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetProcessedSize@CBitlEncoder@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetProcessedSize@COutBuffer@@QBE_KXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '8']
sub ['esi,', '[ecx+28h]']
add ['esi,', '7']
shr ['esi,', '3']
xor ['ecx,', 'ecx']
add ['eax,', 'esi']
adc ['edx,', 'ecx']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CBitlEncoder@@QAEXXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Init@COutBuffer@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+28h],', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+2Ch],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Flush@CBitlEncoder@@QAEJXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?FlushByte@CBitlEncoder@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?Flush@COutBuffer@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Eg_FastPosInit@NEncoder@NDeflate@NCompress@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_FastPosInit']
call ['??0CFastPosInit@NEncoder@NDeflate@NCompress@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CFastPosInit@NEncoder@NDeflate@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_39A1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1Dh']
jnb ['short', 'loc_39FB']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', '_kLenStart32[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', '_kLenDirectBits32[eax]']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_39E3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_10]']
jnb ['short', 'loc_39F9']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8]']
mov ['ds:_g_LenSlots[eax],', 'cl']
jmp ['short', 'loc_39D1']
jmp ['short', 'loc_3998']
mov ['[ebp+var_18],', '12h']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_1D],', '0']
jmp ['short', 'loc_3A18']
mov ['dl,', '[ebp+var_1D]']
add ['dl,', '1']
mov ['[ebp+var_1D],', 'dl']
movzx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '12h']
jnb ['short', 'loc_3A69']
movzx ['ecx,', '[ebp+var_1D]']
movzx ['ecx,', '_kDistDirectBits[ecx]']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_3A51']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_24]']
jnb ['short', 'loc_3A67']
mov ['eax,', '[ebp+var_1C]']
mov ['cl,', '[ebp+var_1D]']
mov ['ds:_g_FastPos[eax],', 'cl']
jmp ['short', 'loc_3A3F']
jmp ['short', 'loc_3A0F']
mov ['eax,', '[ebp+var_4]']
pop ['edi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

??0CDecoder@NLzma2@NCompress@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ICompressCoder@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0ICompressSetDecoderProperties2@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0ICompressSetFinishMode@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??0ICompressGetInStreamProcessedSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0ICompressSetBufSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
call ['??0ICompressSetInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??0ICompressSetOutStreamSize@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressSetDecoderProperties2@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressSetFinishMode@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressGetInStreamProcessedSize@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressSetBufSize@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressSetInStream@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressSetOutStreamSize@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1Ch],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BISequentialInStream@@@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+34h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+35h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+50h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+54h],', '100000h']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+58h],', '400000h']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+70h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+6Ch],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetInBufSize@CDecoder@NLzma2@NCompress@@UAGJII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+44h],', 'ecx']
xor ['eax,', 'eax']
pop ['ebp']
retn ['0Ch']
endp
?SetOutBufSize@CDecoder@NLzma2@NCompress@@UAGJII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+48h],', 'ecx']
xor ['eax,', 'eax']
pop ['ebp']
retn ['0Ch']
endp
??1CDecoder@NLzma2@NCompress@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressCoder@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressSetDecoderProperties2@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressSetFinishMode@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressGetInStreamProcessedSize@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressSetBufSize@@@']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressSetInStream@@@']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BICompressSetOutStreamSize@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1Ch],', 'offset', '??_7CDecoder@NLzma2@NCompress@@6BISequentialInStream@@@']
push ['offset', '_g_Alloc']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '5Ch']
push ['edx']
call ['_LzmaDec_Free@8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['_MidFree@4']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetDecoderProperties2@CDecoder@NLzma2@NCompress@@UAGJPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_8],', '1']
jz ['short', 'loc_22B']
mov ['eax,', '80004001h']
jmp ['loc_2B4']
push ['offset', '_g_Alloc']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+this]']
add ['edx,', '58h']
push ['edx']
call ['_Lzma2Dec_Allocate@12']
push ['eax']
call ['?SResToHRESULT@@YGJH@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_257']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_2B4']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['short', 'loc_26E']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+4Ch]']
cmp ['eax,', '[edx+50h]']
jz ['short', 'loc_2B2']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+24h]']
push ['edx']
call ['_MidFree@4']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+50h]']
push ['edx']
call ['_MidAlloc@4']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+24h],', 'eax']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+24h],', '0']
jnz ['short', 'loc_2A6']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_2B4']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+50h]']
mov ['[eax+4Ch],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SResToHRESULT@@YGJH@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '5']
ja ['short', '$LN5']
mov ['ecx,', '[ebp+var_4]']
jmp ['ds:$LN9[ecx*4]']
xor ['eax,', 'eax']
jmp ['short', 'loc_30F']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_30F']
mov ['eax,', '80070057h']
jmp ['short', 'loc_30F']
mov ['eax,', '1']
jmp ['short', 'loc_30F']
mov ['eax,', '80004005h']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetInStreamProcessedSize@CDecoder@NLzma2@NCompress@@UAGJPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+34h]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ecx+38h]']
mov ['[eax+4],', 'ecx']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?SetInStream@CDecoder@NLzma2@NCompress@@UAGJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?ReleaseInStream@CDecoder@NLzma2@NCompress@@UAGJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?SetOutStreamSize@CDecoder@NLzma2@NCompress@@UAGJPB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_4],', '0']
setnz ['al']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+1Dh],', 'al']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Dh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3CF']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[edx+20h],', 'ecx']
mov ['eax,', '[eax+4]']
mov ['[edx+24h],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '44h']
push ['ecx']
call ['_Lzma2Dec_Init@4']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+30h],', '0']
mov ['dword', 'ptr', '[ecx+34h],', '0']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['dword', 'ptr', '[edx+2Ch],', '0']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?SetFinishMode@CDecoder@NLzma2@NCompress@@UAGJI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_4],', '0']
setnz ['al']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+2Ch],', 'al']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?Code@CDecoder@NLzma2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '84h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_84]']
mov ['ecx,', '21h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jnz ['short', 'loc_470']
mov ['eax,', '1']
jmp ['loc_8A6']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+this]']
add ['edx,', '18h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+18h]']
push ['edx']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+58h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '1000h']
cmp ['[ebp+var_4],', '1000h']
jnb ['short', 'loc_4AF']
mov ['[ebp+var_4],', '1000h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+80h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+84h]']
sub ['eax,', '[edx+80h]']
cmp ['eax,', '[ebp+var_4]']
jnb ['short', 'loc_4E0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+84h]']
mov ['[ebp+var_60],', 'edx']
jmp ['short', 'loc_4EF']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+80h]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_60]']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+2Ch]']
cmp ['edx,', '[ecx+30h]']
jnz ['short', 'loc_558']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+2Ch],', '0']
mov ['edx,', '[ebp+this]']
add ['edx,', '30h']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+50h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_558']
jmp ['loc_875']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+80h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+35h]']
test ['eax,', 'eax']
jz ['short', 'loc_5CC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+38h]']
sub ['eax,', '[edx+48h]']
mov ['ecx,', '[ecx+3Ch]']
sbb ['ecx,', '[edx+4Ch]']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
xor ['eax,', 'eax']
mov ['[ebp+var_68],', 'edx']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '[ebp+var_64]']
cmp ['ecx,', '[ebp+var_24]']
jb ['short', 'loc_5CC']
ja ['short', 'loc_5B4']
mov ['edx,', '[ebp+var_68]']
cmp ['edx,', '[ebp+var_28]']
jb ['short', 'loc_5CC']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+34h]']
test ['edx,', 'edx']
jz ['short', 'loc_5CC']
mov ['[ebp+var_20],', '1']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+30h]']
sub ['edx,', '[ecx+2Ch]']
mov ['[ebp+var_30],', 'edx']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+this]']
add ['ecx,', '[edx+2Ch]']
push ['ecx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '5Ch']
push ['ecx']
call ['_Lzma2Dec_DecodeToDic@24']
mov ['[ebp+var_44],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+2Ch]']
add ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+2Ch],', 'eax']
mov ['edx,', '[ebp+var_30]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+40h]']
adc ['eax,', '[ecx+44h]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+40h],', 'edx']
mov ['[ecx+44h],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+80h]']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+48h]']
adc ['edx,', '[eax+4Ch]']
mov ['eax,', '[ebp+this]']
mov ['[eax+48h],', 'ecx']
mov ['[eax+4Ch],', 'edx']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_662']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_671']
cmp ['[ebp+var_3C],', '1']
jz ['short', 'loc_671']
mov ['[ebp+var_6C],', '0']
jmp ['short', 'loc_678']
mov ['[ebp+var_6C],', '1']
mov ['cl,', 'byte', 'ptr', '[ebp+var_6C]']
mov ['[ebp+var_49],', 'cl']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+35h]']
test ['eax,', 'eax']
jz ['short', 'loc_6BC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_70],', 'ecx']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_70]']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[eax+4Ch]']
cmp ['edx,', '[ecx+3Ch]']
jb ['short', 'loc_6BC']
ja ['short', 'loc_6B3']
mov ['eax,', '[ebp+var_70]']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[eax+48h]']
cmp ['edx,', '[ecx+38h]']
jb ['short', 'loc_6BC']
mov ['[ebp+var_78],', '1']
jmp ['short', 'loc_6C3']
mov ['[ebp+var_78],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_78]']
mov ['[ebp+var_4A],', 'al']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_6F1']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+80h]']
cmp ['edx,', '[ebp+var_10]']
jnb ['short', 'loc_6F1']
movzx ['eax,', '[ebp+var_49]']
test ['eax,', 'eax']
jnz ['short', 'loc_6F1']
movzx ['ecx,', '[ebp+var_4A]']
test ['ecx,', 'ecx']
jz ['loc_837']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+80h]']
sub ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+70h]']
add ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+80h]']
cmp ['eax,', '[edx+84h]']
jnz ['short', 'loc_735']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+80h],', '0']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+80h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+84h]']
sub ['eax,', '[edx+80h]']
cmp ['eax,', '[ebp+var_4]']
jnb ['short', 'loc_766']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+84h]']
mov ['[ebp+var_7C],', 'edx']
jmp ['short', 'loc_775']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+80h]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_7C],', 'ecx']
mov ['edx,', '[ebp+var_7C]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_78B']
mov ['eax,', '1']
jmp ['loc_8A6']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_79F']
mov ['eax,', '[ebp+var_54]']
jmp ['loc_8A6']
movzx ['ecx,', '[ebp+var_49]']
test ['ecx,', 'ecx']
jz ['short', 'loc_825']
cmp ['[ebp+var_3C],', '1']
jnz ['short', 'loc_817']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+34h]']
test ['eax,', 'eax']
jz ['short', 'loc_7F8']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_7F8']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_80],', 'ecx']
mov ['[ebp+var_84],', 'edx']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+40h]']
jnz ['short', 'loc_7EE']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+44h]']
jz ['short', 'loc_7F8']
mov ['eax,', '1']
jmp ['loc_8A6']
cmp ['[ebp+var_20],', '1']
jnz ['short', 'loc_810']
movzx ['eax,', '[ebp+var_4A]']
test ['eax,', 'eax']
jnz ['short', 'loc_810']
mov ['eax,', '1']
jmp ['loc_8A6']
xor ['eax,', 'eax']
jmp ['loc_8A6']
xor ['eax,', 'eax']
cmp ['[ebp+var_20],', '1']
setz ['al']
jmp ['loc_8A6']
movzx ['ecx,', '[ebp+var_4A]']
test ['ecx,', 'ecx']
jz ['short', 'loc_837']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_837']
xor ['eax,', 'eax']
jmp ['short', 'loc_8A6']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_870']
mov ['edx,', '[ebp+this]']
add ['edx,', '48h']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '40h']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0']
jz ['short', 'loc_870']
mov ['eax,', '[ebp+var_58]']
jmp ['short', 'loc_8A6']
jmp ['loc_4FC']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+80h]']
sub ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+70h]']
add ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_8A3']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_8A6']
mov ['eax,', '[ebp+var_5C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN40']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '84h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?Read@CDecoder@NLzma2@NCompress@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_93D']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+10h]']
cmp ['eax,', '[edx+14h]']
jnz ['short', 'loc_9AA']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_40],', 'eax']
mov ['eax,', '[ebp+this]']
add ['eax,', '14h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+34h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_9AA']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_B26']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+19h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_A09']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+1Ch]']
sub ['ecx,', '[eax+2Ch]']
mov ['edx,', '[edx+20h]']
sbb ['edx,', '[eax+30h]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_48],', 'eax']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_44]']
ja ['short', 'loc_A09']
jb ['short', 'loc_9F1']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_48]']
ja ['short', 'loc_A09']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+18h]']
test ['eax,', 'eax']
jz ['short', 'loc_A09']
mov ['[ebp+var_C],', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+14h]']
sub ['ecx,', '[eax+10h]']
mov ['[ebp+var_28],', 'ecx']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+this]']
add ['eax,', '[ecx+10h]']
push ['eax']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '40h']
push ['ecx']
call ['_Lzma2Dec_DecodeToBuf@28']
mov ['[ebp+var_3C],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
add ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+var_28]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+24h]']
adc ['eax,', '[ecx+28h]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+24h],', 'edx']
mov ['[ecx+28h],', 'eax']
mov ['edx,', '[ebp+var_1C]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+2Ch]']
adc ['eax,', '[ecx+30h]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+2Ch],', 'edx']
mov ['[ecx+30h],', 'eax']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_1C]']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_1C]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_AB4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_ACF']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_AC4']
xor ['eax,', 'eax']
jmp ['short', 'loc_B26']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['?SResToHRESULT@@YGJH@Z']
jmp ['short', 'loc_B26']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_ADF']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_ADF']
xor ['eax,', 'eax']
jmp ['short', 'loc_B26']
cmp ['[ebp+var_34],', '1']
jnz ['short', 'loc_AE9']
xor ['eax,', 'eax']
jmp ['short', 'loc_B26']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_B21']
cmp ['[ebp+var_C],', '1']
jnz ['short', 'loc_B1D']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['[ebp+var_4C],', 'edx']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[ecx+1Ch]']
cmp ['eax,', '[edx+2Ch]']
jnz ['short', 'loc_B1D']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[ecx+20h]']
cmp ['eax,', '[edx+30h]']
jz ['short', 'loc_B21']
xor ['eax,', 'eax']
jmp ['short', 'loc_B26']
jmp ['loc_93D']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CDecoder@NLzma2@NCompress@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_134C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_14EA']
push ['offset', '_IID_ICompressCoder']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_136B']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_14EA']
push ['offset', '_IID_ICompressSetDecoderProperties2']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_13A2']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_138E']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_1395']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['loc_14EA']
push ['offset', '_IID_ICompressSetFinishMode']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_13D9']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_13C5']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_13CC']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['loc_14EA']
push ['offset', '_IID_ICompressGetInStreamProcessedSize']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1410']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_13FC']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_1403']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['loc_14EA']
push ['offset', '_IID_ICompressSetBufSize']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1447']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_1433']
mov ['edx,', '[ebp+this]']
add ['edx,', '10h']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_143A']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['loc_14EA']
push ['offset', '_IID_ICompressSetInStream']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_147B']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_146A']
mov ['eax,', '[ebp+this]']
add ['eax,', '14h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1471']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_14EA']
push ['offset', '_IID_ICompressSetOutStreamSize']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_14AF']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_149E']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_14A5']
mov ['[ebp+var_18],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_14EA']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_14E3']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_14D2']
mov ['edx,', '[ebp+this]']
add ['edx,', '1Ch']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_14D9']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_14EA']
mov ['eax,', '80004002h']
jmp ['short', 'loc_14FB']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+20h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+20h],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CDecoder@NLzma2@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+20h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+20h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@NLzma2@NCompress@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+20h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+20h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1573']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+20h]']
jmp ['short', 'loc_15AB']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_15A2']
mov ['esi,', 'esp']
push ['1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_15A9']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
??_GCDecoder@NLzma2@NCompress@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDecoder@NLzma2@NCompress@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_162A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ICompressCoder@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressCoder@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetDecoderProperties2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetDecoderProperties2@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetFinishMode@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetFinishMode@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressGetInStreamProcessedSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressGetInStreamProcessedSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetBufSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetBufSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ICompressSetOutStreamSize@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICompressSetOutStreamSize@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_1972']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_19BF']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1A14']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_1A37']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDecoder@NLzma2@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?Release@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NLzma2@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma2@NCompress@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CDecoder@NLzma2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NLzma2@NCompress@@WBE@AGKXZ proc near
sub ['[esp+arg_0],', '14h']
jmp ['?Release@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NLzma2@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma2@NCompress@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CDecoder@NLzma2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NLzma2@NCompress@@WBI@AGKXZ proc near
sub ['[esp+arg_0],', '18h']
jmp ['?Release@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NLzma2@NCompress@@WBA@AGKXZ proc near
sub ['[esp+arg_0],', '10h']
jmp ['?AddRef@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma2@NCompress@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CDecoder@NLzma2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NLzma2@NCompress@@WBM@AGKXZ proc near
sub ['[esp+arg_0],', '1Ch']
jmp ['?Release@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NLzma2@NCompress@@WBE@AGKXZ proc near
sub ['[esp+arg_0],', '14h']
jmp ['?AddRef@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma2@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '10h']
jmp ['?QueryInterface@CDecoder@NLzma2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?AddRef@CDecoder@NLzma2@NCompress@@WBI@AGKXZ proc near
sub ['[esp+arg_0],', '18h']
jmp ['?AddRef@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma2@NCompress@@WBE@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '14h']
jmp ['?QueryInterface@CDecoder@NLzma2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NLzma2@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NLzma2@NCompress@@WBM@AGKXZ proc near
sub ['[esp+arg_0],', '1Ch']
jmp ['?AddRef@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma2@NCompress@@WBI@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '18h']
jmp ['?QueryInterface@CDecoder@NLzma2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NLzma2@NCompress@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?QueryInterface@CDecoder@NLzma2@NCompress@@WBM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '1Ch']
jmp ['?QueryInterface@CDecoder@NLzma2@NCompress@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CDecoder@NLzma2@NCompress@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp
?AddRef@CDecoder@NLzma2@NCompress@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CDecoder@NLzma2@NCompress@@UAGKXZ']
endp

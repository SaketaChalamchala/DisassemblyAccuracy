?GetFileTimeType@CHandler@NZip@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '2']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '390h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3A0]']
mov ['ecx,', '0E4h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_2C4],', '0']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1Ch']
call ['?IsOpen@CInArchive@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_2C5],', 'al']
movzx ['eax,', '[ebp+var_2C5]']
test ['eax,', 'eax']
jz ['short', 'loc_17C']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1Ch']
call ['?CanUpdate@CInArchive@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_2C6],', 'al']
movzx ['ecx,', '[ebp+var_2C6]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_17C']
mov ['eax,', '80004001h']
jmp ['loc_1370']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['[ebp+var_2CC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_25],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_31],', '0']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_1B6']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+arg_8]']
jnb ['loc_E7D']
lea ['ecx,', '[ebp+var_84]']
call ['??0CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_2D0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_20D']
mov ['[ebp+var_22C],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_22C]']
jmp ['loc_1370']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
lea ['edx,', '[ebp+var_9C]']
push ['edx']
lea ['eax,', '[ebp+var_90]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+14h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2D4],', 'eax']
mov ['eax,', '[ebp+var_2D4]']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '0']
jz ['short', 'loc_28A']
mov ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_230],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_230]']
jmp ['loc_1370']
mov ['edx,', '[ebp+var_9C]']
push ['edx']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_2D5],', 'al']
mov ['al,', '[ebp+var_2D5]']
mov ['[ebp+var_83],', 'al']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_2D6],', 'al']
mov ['dl,', '[ebp+var_2D6]']
mov ['[ebp+var_84],', 'dl']
mov ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_78],', 'ecx']
xor ['edx,', 'edx']
cmp ['[ebp+var_A8],', '0FFFFFFFFh']
setnz ['dl']
mov ['[ebp+var_B1],', 'dl']
movzx ['eax,', '[ebp+var_B1]']
test ['eax,', 'eax']
jz ['short', 'loc_333']
cmp ['[ebp+var_90],', '0']
jz ['short', 'loc_333']
mov ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['??A?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAEAAVCItemEx@NZip@NArchive@@I@Z']
mov ['[ebp+var_2DC],', 'eax']
mov ['ecx,', '[ebp+var_2DC]']
call ['?IsAesEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_2DD],', 'al']
movzx ['edx,', '[ebp+var_2DD]']
test ['edx,', 'edx']
jz ['short', 'loc_333']
mov ['[ebp+var_25],', '1']
mov ['eax,', '[ebp+var_9C]']
push ['eax']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_2DE],', 'al']
movzx ['ecx,', '[ebp+var_2DE]']
test ['ecx,', 'ecx']
jz ['loc_CF2']
lea ['ecx,', '[ebp+var_C4]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_2E4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_DC]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_2E8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_DC]']
push ['edx']
push ['9']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2EC],', 'eax']
mov ['edx,', '[ebp+var_2EC]']
mov ['[ebp+var_E4],', 'edx']
cmp ['[ebp+var_E4],', '0']
jz ['short', 'loc_40D']
mov ['eax,', '[ebp+var_E4]']
mov ['[ebp+var_234],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_DC]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_234]']
jmp ['loc_1370']
movzx ['ecx,', '[ebp+var_DC]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_421']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_486']
movzx ['edx,', '[ebp+var_DC]']
cmp ['edx,', '13h']
jz ['short', 'loc_47D']
mov ['[ebp+var_238],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_DC]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_238]']
jmp ['loc_1370']
jmp ['short', 'loc_486']
mov ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_74],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_DC]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
lea ['ecx,', '[ebp+var_F8]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_2F0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F8]']
push ['ecx']
push ['3']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2F4],', 'eax']
mov ['ecx,', '[ebp+var_2F4]']
mov ['[ebp+var_100],', 'ecx']
cmp ['[ebp+var_100],', '0']
jz ['short', 'loc_539']
mov ['edx,', '[ebp+var_100]']
mov ['[ebp+var_23C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_F8]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_23C]']
jmp ['loc_1370']
movzx ['eax,', '[ebp+var_F8]']
test ['eax,', 'eax']
jnz ['short', 'loc_551']
lea ['ecx,', '[ebp+var_C4]']
call ['?Empty@UString@@QAEXXZ']
jmp ['short', 'loc_5BF']
movzx ['ecx,', '[ebp+var_F8]']
cmp ['ecx,', '8']
jz ['short', 'loc_5AD']
mov ['[ebp+var_240],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_F8]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_240]']
jmp ['loc_1370']
jmp ['short', 'loc_5BF']
mov ['edx,', '[ebp+var_F0]']
push ['edx']
lea ['ecx,', '[ebp+var_C4]']
call ['??4UString@@QAEAAV0@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_F8]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
lea ['ecx,', '[ebp+var_114]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_2F8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_114]']
push ['eax']
push ['6']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2FC],', 'eax']
mov ['eax,', '[ebp+var_2FC]']
mov ['[ebp+var_11C],', 'eax']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_672']
mov ['ecx,', '[ebp+var_11C]']
mov ['[ebp+var_244],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_244]']
jmp ['loc_1370']
movzx ['edx,', '[ebp+var_114]']
test ['edx,', 'edx']
jnz ['short', 'loc_686']
mov ['[ebp+var_82],', '0']
jmp ['short', 'loc_6F5']
movzx ['eax,', '[ebp+var_114]']
cmp ['eax,', '0Bh']
jz ['short', 'loc_6E2']
mov ['[ebp+var_248],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_248]']
jmp ['loc_1370']
jmp ['short', 'loc_6F5']
movsx ['ecx,', '[ebp+var_10C]']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['[ebp+var_82],', 'cl']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
lea ['ecx,', '[ebp+var_130]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_300],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_130]']
push ['edx']
push ['28h']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_304],', 'eax']
mov ['edx,', '[ebp+var_304]']
mov ['[ebp+var_138],', 'edx']
cmp ['[ebp+var_138],', '0']
jz ['short', 'loc_7A8']
mov ['eax,', '[ebp+var_138]']
mov ['[ebp+var_24C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_130]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_24C]']
jmp ['loc_1370']
movzx ['ecx,', '[ebp+var_130]']
cmp ['ecx,', '13h']
jnz ['short', 'loc_7C8']
xor ['edx,', 'edx']
cmp ['[ebp+var_128],', '0']
setz ['dl']
mov ['[ebp+var_81],', 'dl']
jmp ['short', 'loc_7D7']
mov ['eax,', '[ebp+this]']
mov ['cl,', '[eax+0C1h]']
mov ['[ebp+var_81],', 'cl']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_130]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
lea ['edx,', '[ebp+FileTime]']
push ['edx']
push ['0Ch']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['?GetTime@NZip@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAAU_FILETIME@@@Z']
mov ['[ebp+var_308],', 'eax']
mov ['edx,', '[ebp+var_308]']
mov ['[ebp+var_13C],', 'edx']
cmp ['[ebp+var_13C],', '0']
jz ['short', 'loc_855']
mov ['eax,', '[ebp+var_13C]']
mov ['[ebp+var_250],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_250]']
jmp ['loc_1370']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
push ['0Bh']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?GetTime@NZip@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAAU_FILETIME@@@Z']
mov ['[ebp+var_30C],', 'eax']
mov ['ecx,', '[ebp+var_30C]']
mov ['[ebp+var_140],', 'ecx']
cmp ['[ebp+var_140],', '0']
jz ['short', 'loc_8C4']
mov ['edx,', '[ebp+var_140]']
mov ['[ebp+var_254],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_254]']
jmp ['loc_1370']
lea ['eax,', '[ebp+var_48]']
push ['eax']
push ['0Ah']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['?GetTime@NZip@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAAU_FILETIME@@@Z']
mov ['[ebp+var_310],', 'eax']
mov ['eax,', '[ebp+var_310]']
mov ['[ebp+var_144],', 'eax']
cmp ['[ebp+var_144],', '0']
jz ['short', 'loc_933']
mov ['ecx,', '[ebp+var_144]']
mov ['[ebp+var_258],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_258]']
jmp ['loc_1370']
mov ['[ebp+LocalFileTime.dwLowDateTime],', '0']
mov ['[ebp+LocalFileTime.dwHighDateTime],', '0']
cmp ['[ebp+FileTime.dwHighDateTime],', '0']
jnz ['short', 'loc_953']
cmp ['[ebp+FileTime.dwLowDateTime],', '0']
jz ['short', 'loc_9B0']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+LocalFileTime]']
push ['edx']
lea ['eax,', '[ebp+FileTime]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__FileTimeToLocalFileTime@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_9B0']
mov ['[ebp+var_25C],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_25C]']
jmp ['loc_1370']
lea ['ecx,', '[ebp+var_70]']
push ['ecx']
lea ['edx,', '[ebp+LocalFileTime]']
push ['edx']
call ['?FileTimeToDosTime@NTime@NWindows@@YG_NABU_FILETIME@@AAI@Z']
lea ['eax,', '[ebp+var_C4]']
push ['eax']
lea ['ecx,', '[ebp+var_268]']
push ['ecx']
call ['?MakeLegalName@NItemName@NArchive@@YG?AVUString@@ABV3@@Z']
mov ['[ebp+var_314],', 'eax']
mov ['edx,', '[ebp+var_314]']
mov ['[ebp+var_318],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['eax,', '[ebp+var_318]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_268]']
call ['??1UString@@QAE@XZ']
mov ['cl,', '[ebp+var_82]']
mov ['[ebp+var_155],', 'cl']
mov ['edx,', '2Fh']
mov ['[ebp+var_15C],', 'dx']
lea ['ecx,', '[ebp+var_C4]']
call ['?IsEmpty@UString@@QBE_NXZ']
mov ['[ebp+var_319],', 'al']
movzx ['eax,', '[ebp+var_319]']
test ['eax,', 'eax']
jnz ['short', 'loc_AAD']
lea ['ecx,', '[ebp+var_C4]']
call ['?Back@UString@@QBE_WXZ']
mov ['[ebp+var_31C],', 'ax']
movzx ['ecx,', '[ebp+var_31C]']
cmp ['ecx,', '2Fh']
jnz ['short', 'loc_AAD']
movzx ['edx,', '[ebp+var_82]']
test ['edx,', 'edx']
jnz ['short', 'loc_AA6']
mov ['[ebp+var_26C],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_26C]']
jmp ['loc_1370']
mov ['[ebp+var_155],', '0']
movzx ['eax,', '[ebp+var_155]']
test ['eax,', 'eax']
jz ['short', 'loc_AC5']
push ['2Fh']
lea ['ecx,', '[ebp+var_C4]']
call ['??YUString@@QAEAAV0@_W@Z']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C5h]']
test ['edx,', 'edx']
jz ['short', 'loc_AE4']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0C8h]']
mov ['[ebp+var_320],', 'ecx']
jmp ['short', 'loc_AEE']
mov ['[ebp+var_320],', '1']
mov ['edx,', '[ebp+var_320]']
mov ['[ebp+var_160],', 'edx']
mov ['[ebp+var_161],', '1']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0C3h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_B21']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+0C4h]']
test ['eax,', 'eax']
jnz ['loc_C47']
cmp ['[ebp+var_160],', '0FDE9h']
jz ['loc_C47']
lea ['ecx,', '[ebp+var_169]']
push ['ecx']
push ['5Fh']
mov ['edx,', '[ebp+var_160]']
push ['edx']
lea ['eax,', '[ebp+var_C4]']
push ['eax']
lea ['ecx,', '[ebp+var_278]']
push ['ecx']
call ['?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z']
mov ['[ebp+var_324],', 'eax']
mov ['edx,', '[ebp+var_324]']
mov ['[ebp+var_328],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['eax,', '[ebp+var_328]']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_278]']
call ['??1AString@@QAE@XZ']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C3h]']
test ['edx,', 'edx']
jnz ['short', 'loc_C0D']
movzx ['eax,', '[ebp+var_169]']
test ['eax,', 'eax']
jnz ['short', 'loc_C01']
mov ['ecx,', '[ebp+var_160]']
push ['ecx']
lea ['edx,', '[ebp+var_64]']
push ['edx']
lea ['eax,', '[ebp+var_284]']
push ['eax']
call ['?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z']
mov ['[ebp+var_32C],', 'eax']
mov ['ecx,', '[ebp+var_32C]']
mov ['[ebp+var_330],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['edx,', '[ebp+var_2C4]']
or ['edx,', '1']
mov ['[ebp+var_2C4],', 'edx']
lea ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+var_330]']
push ['ecx']
call ['??9@YG_NABVUString@@0@Z']
mov ['[ebp+var_331],', 'al']
movzx ['edx,', '[ebp+var_331]']
test ['edx,', 'edx']
jz ['short', 'loc_C0D']
mov ['[ebp+var_338],', '1']
jmp ['short', 'loc_C17']
mov ['[ebp+var_338],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_338]']
mov ['[ebp+var_161],', 'al']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_2C4]']
and ['ecx,', '1']
jz ['short', 'loc_C47']
and ['[ebp+var_2C4],', '0FFFFFFFEh']
lea ['ecx,', '[ebp+var_284]']
call ['??1UString@@QAE@XZ']
movzx ['edx,', '[ebp+var_161]']
test ['edx,', 'edx']
jz ['short', 'loc_C84']
lea ['ecx,', '[ebp+var_C4]']
call ['?IsAscii@UString@@QBE_NXZ']
mov ['[ebp+var_339],', 'al']
movzx ['eax,', '[ebp+var_339]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['[ebp+var_80],', 'al']
lea ['ecx,', '[ebp+var_64]']
push ['ecx']
lea ['edx,', '[ebp+var_C4]']
push ['edx']
call ['?ConvertUnicodeToUTF8@@YGXABVUString@@AAVAString@@@Z']
lea ['ecx,', '[ebp+var_64]']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+var_340],', 'eax']
cmp ['[ebp+var_340],', '10000h']
jb ['short', 'loc_CDD']
mov ['[ebp+var_288],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_288]']
jmp ['loc_1370']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_78],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_C4]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_341],', 'al']
movzx ['edx,', '[ebp+var_341]']
test ['edx,', 'edx']
jz ['loc_E5A']
lea ['ecx,', '[ebp+var_18C]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_348],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_18C]']
push ['eax']
push ['7']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_34C],', 'eax']
mov ['eax,', '[ebp+var_34C]']
mov ['[ebp+var_194],', 'eax']
cmp ['[ebp+var_194],', '0']
jz ['short', 'loc_DA8']
mov ['ecx,', '[ebp+var_194]']
mov ['[ebp+var_28C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_18C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_28C]']
jmp ['loc_1370']
movzx ['edx,', '[ebp+var_18C]']
cmp ['edx,', '15h']
jz ['short', 'loc_DF3']
mov ['[ebp+var_290],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_18C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_290]']
jmp ['loc_1370']
mov ['eax,', '[ebp+var_184]']
mov ['[ebp+var_178],', 'eax']
mov ['ecx,', '[ebp+var_180]']
mov ['[ebp+var_174],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_174]']
ja ['short', 'loc_E35']
jb ['short', 'loc_E23']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[ebp+var_178]']
jnb ['short', 'loc_E35']
mov ['ecx,', '[ebp+var_178]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_174]']
mov ['[ebp+var_2C],', 'edx']
mov ['[ebp+var_31],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_18C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_178]']
mov ['[ebp+var_70.dwHighDateTime],', 'eax']
mov ['ecx,', '[ebp+var_174]']
mov ['[ebp+var_68],', 'ecx']
lea ['edx,', '[ebp+var_84]']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['?Add@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAEIABUCUpdateItem@NZip@NArchive@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_84]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
jmp ['loc_1AD']
lea ['ecx,', '[ebp+var_19C]']
call ['??0?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ']
mov ['[ebp+var_350],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_1A8]']
call ['??0?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@PAUIArchiveUpdateCallback@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
lea ['ecx,', '[ebp+var_19C]']
call ['??I?$CMyComPtr@UICryptoGetTextPassword2@@@@QAEPAPAUICryptoGetTextPassword2@@XZ']
mov ['[ebp+var_354],', 'eax']
mov ['ecx,', '[ebp+var_354]']
push ['ecx']
push ['offset', '_IID_ICryptoGetTextPassword2']
lea ['ecx,', '[ebp+var_1A8]']
call ['??$QueryInterface@UICryptoGetTextPassword2@@@?$CMyComPtr@UIArchiveUpdateCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword2@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_1A8]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
lea ['ecx,', '[ebp+var_1F8]']
call ['??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_358],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
mov ['edx,', '[ebp+this]']
add ['edx,', '0A4h']
push ['edx']
lea ['ecx,', '[ebp+var_1F8]']
call ['??4CBaseProps@NZip@NArchive@@QAEAAU012@ABU012@@Z']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_1C0],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_1BC],', 'ecx']
mov ['dl,', '[ebp+var_31]']
mov ['[ebp+var_1B8],', 'dl']
mov ['[ebp+var_1D4],', '0']
lea ['ecx,', '[ebp+var_1D0]']
call ['?Empty@AString@@QAEXXZ']
lea ['ecx,', '[ebp+var_19C]']
call ['??B?$CMyComPtr@UICryptoGetTextPassword2@@@@QBEPAUICryptoGetTextPassword2@@XZ']
mov ['[ebp+var_35C],', 'eax']
cmp ['[ebp+var_35C],', '0']
jz ['loc_1212']
lea ['ecx,', '[ebp+var_204]']
call ['??0CMyComBSTR@@QAE@XZ']
mov ['[ebp+var_360],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
lea ['ecx,', '[ebp+var_19C]']
call ['??C?$CMyComPtr@UICryptoGetTextPassword2@@@@QBEPAUICryptoGetTextPassword2@@XZ']
mov ['[ebp+var_364],', 'eax']
mov ['eax,', '[ebp+var_364]']
mov ['[ebp+var_368],', 'eax']
lea ['ecx,', '[ebp+var_204]']
call ['??ICMyComBSTR@@QAEPAPA_WXZ']
mov ['[ebp+var_36C],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_36C]']
push ['ecx']
lea ['edx,', '[ebp+var_210]']
push ['edx']
mov ['eax,', '[ebp+var_368]']
push ['eax']
mov ['ecx,', '[ebp+var_368]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_370],', 'eax']
mov ['ecx,', '[ebp+var_370]']
mov ['[ebp+var_218],', 'ecx']
cmp ['[ebp+var_218],', '0']
jz ['short', 'loc_102A']
mov ['edx,', '[ebp+var_218]']
mov ['[ebp+var_294],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
lea ['ecx,', '[ebp+var_204]']
call ['??1CMyComBSTR@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_1F8]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_19C]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_294]']
jmp ['loc_1370']
mov ['eax,', '[ebp+var_210]']
push ['eax']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_371],', 'al']
mov ['cl,', '[ebp+var_371]']
mov ['[ebp+var_1D4],', 'cl']
movzx ['edx,', '[ebp+var_1D4]']
test ['edx,', 'edx']
jz ['loc_1203']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0C0h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_106E']
mov ['dl,', '[ebp+var_25]']
mov ['[ebp+var_1E3],', 'dl']
lea ['ecx,', '[ebp+var_204]']
call ['??BCMyComBSTR@@QBEPB_WXZ']
mov ['[ebp+var_378],', 'eax']
mov ['eax,', '[ebp+var_378]']
push ['eax']
call ['?IsSimpleAsciiString@NZip@NArchive@@YG_NPB_W@Z']
mov ['[ebp+var_379],', 'al']
movzx ['ecx,', '[ebp+var_379]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_10EA']
mov ['[ebp+var_298],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
lea ['ecx,', '[ebp+var_204]']
call ['??1CMyComBSTR@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_1F8]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_19C]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_298]']
jmp ['loc_1370']
lea ['ecx,', '[ebp+var_204]']
call ['??BCMyComBSTR@@QBEPB_WXZ']
mov ['[ebp+var_380],', 'eax']
cmp ['[ebp+var_380],', '0']
jz ['loc_1190']
lea ['ecx,', '[ebp+var_204]']
call ['??BCMyComBSTR@@QBEPB_WXZ']
mov ['[ebp+var_384],', 'eax']
mov ['edx,', '[ebp+var_384]']
push ['edx']
lea ['ecx,', '[ebp+var_2A4]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_388],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
push ['1']
lea ['eax,', '[ebp+var_2A4]']
push ['eax']
lea ['ecx,', '[ebp+var_2B0]']
push ['ecx']
call ['?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z']
mov ['[ebp+var_38C],', 'eax']
mov ['edx,', '[ebp+var_38C]']
mov ['[ebp+var_390],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
mov ['eax,', '[ebp+var_390]']
push ['eax']
lea ['ecx,', '[ebp+var_1D0]']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_2B0]']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1UString@@QAE@XZ']
movzx ['ecx,', '[ebp+var_1E3]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1203']
lea ['ecx,', '[ebp+var_1D0]']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+var_394],', 'eax']
cmp ['[ebp+var_394],', '63h']
jbe ['short', 'loc_1203']
mov ['[ebp+var_2B4],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
lea ['ecx,', '[ebp+var_204]']
call ['??1CMyComBSTR@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_1F8]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_19C]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2B4]']
jmp ['loc_1370']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
lea ['ecx,', '[ebp+var_204]']
call ['??1CMyComBSTR@@QAE@XZ']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+0BCh],', '0']
jge ['short', 'loc_1236']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0B0h]']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '8']
mov ['[ebp+var_219],', 'cl']
jmp ['short', 'loc_1245']
mov ['edx,', '[ebp+this]']
mov ['al,', '[edx+0BCh]']
mov ['[ebp+var_219],', 'al']
movzx ['ecx,', '[ebp+var_219]']
push ['ecx']
lea ['ecx,', '[ebp+var_1E0]']
call ['?Add@?$CRecordVector@E@@QAEIE@Z']
movzx ['edx,', '[ebp+var_219]']
test ['edx,', 'edx']
jz ['short', 'loc_1270']
push ['0']
lea ['ecx,', '[ebp+var_1E0]']
call ['?Add@?$CRecordVector@E@@QAEIE@Z']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1Ch']
call ['?IsOpen@CInArchive@NZip@NArchive@@QBE_NXZ']
mov ['[ebp+var_395],', 'al']
movzx ['eax,', '[ebp+var_395]']
test ['eax,', 'eax']
jz ['short', 'loc_129A']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1Ch']
mov ['[ebp+var_39C],', 'ecx']
jmp ['short', 'loc_12A4']
mov ['[ebp+var_39C],', '0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
lea ['eax,', '[ebp+var_1F8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C2h]']
push ['edx']
mov ['eax,', '[ebp+var_39C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '0Ch']
push ['eax']
call ['?Update@NZip@NArchive@@YGJABV?$CObjectVector@VCItemEx@NZip@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@PAUISequentialOutStream@@PAVCInArchive@12@_NPAUCCompressionMethodMode@12@PAUIArchiveUpdateCallback@@@Z']
mov ['[ebp+var_3A0],', 'eax']
mov ['ecx,', '[ebp+var_3A0]']
mov ['[ebp+var_2B8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_1F8]']
call ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_19C]']
call ['??1?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2B8]']
jmp ['short', 'loc_1370']
endp
__catch$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$0 proc near
mov ['edx,', '[ebp-224h]']
mov ['eax,', '[edx]']
mov ['[ebp-2BCh],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN91']
retn
endp
__catch$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$1 proc near
mov ['dword', 'ptr', '[ebp-2C0h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN93']
retn
endp
?IsSimpleAsciiString@NZip@NArchive@@YG_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_4],', 'cx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_4]']
test ['eax,', 'eax']
jnz ['short', 'loc_1572']
mov ['al,', '1']
jmp ['short', 'loc_158A']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_4]']
cmp ['ecx,', '20h']
jl ['short', 'loc_1584']
movzx ['edx,', 'word', 'ptr', '[ebp+var_4]']
cmp ['edx,', '7Fh']
jle ['short', 'loc_1588']
xor ['al,', 'al']
jmp ['short', 'loc_158A']
jmp ['short', 'loc_1553']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetTime@NZip@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAAU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetTime@NZip@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAAU_FILETIME@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx+4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_1636']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_168B']
movzx ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '40h']
jnz ['short', 'loc_164F']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_1672']
movzx ['edx,', '[ebp+var_20]']
test ['edx,', 'edx']
jz ['short', 'loc_1672']
mov ['[ebp+var_30],', '80070057h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_168B']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_34]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?SetProperties@CHandler@NZip@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '110h']
push ['edi']
lea ['edi,', '[ebp+var_110]']
mov ['ecx,', '44h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '8']
call ['?InitMethodProps@CHandler@NZip@NArchive@@AAEXXZ']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0B0h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_171D']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_C]']
jnb ['loc_1EA5']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@PB_W@Z']
lea ['ecx,', '[ebp+var_18]']
call ['?MakeLower_Ascii@UString@@QAEXXZ']
lea ['ecx,', '[ebp+var_18]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_176F']
mov ['[ebp+var_B0],', '80070057h']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_B0]']
jmp ['loc_1EA7']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '4']
add ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_20],', 'edx']
lea ['ecx,', '[ebp+var_18]']
call ['??BUString@@QBEPB_WXZ']
movzx ['eax,', 'word', 'ptr', '[eax]']
cmp ['eax,', '78h']
jnz ['loc_1813']
mov ['[ebp+var_28],', '9']
push ['1']
lea ['ecx,', '[ebp+var_18]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
lea ['ecx,', '[ebp+var_BC]']
call ['??0UString@@QAE@PB_W@Z']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
lea ['eax,', '[ebp+var_BC]']
push ['eax']
call ['?ParsePropToUInt32@@YGJABVUString@@ABUtagPROPVARIANT@@AAI@Z']
mov ['[ebp+var_30],', 'eax']
lea ['ecx,', '[ebp+var_BC]']
call ['??1UString@@QAE@XZ']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_17F0']
mov ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_C0],', 'ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_C0]']
jmp ['loc_1EA7']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_28]']
mov ['[edx+0ACh],', 'eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0A0h']
call ['?AddProp_Level@CMethodProps@@QAEXI@Z']
jmp ['loc_1E98']
push ['offset', '$SG71322']
lea ['edx,', '[ebp+var_18]']
push ['edx']
call ['??8@YG_NABVUString@@PB_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_1A15']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '8']
jnz ['loc_1983']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+8]']
push ['ecx']
lea ['ecx,', '[ebp+var_40]']
call ['??0UString@@QAE@PB_W@Z']
lea ['ecx,', '[ebp+var_54]']
call ['??0UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_40]']
call ['?MakeLower_Ascii@UString@@QAEXXZ']
push ['3Ah']
lea ['ecx,', '[ebp+var_40]']
call ['?Find@UString@@QBEH_W@Z']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jl ['short', 'loc_1891']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
push ['edx']
lea ['ecx,', '[ebp+var_40]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
call ['??4UString@@QAEAAV0@PB_W@Z']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
lea ['ecx,', '[ebp+var_40]']
call ['?DeleteFrom@UString@@QAEXI@Z']
mov ['[ebp+var_60],', '0']
jmp ['short', 'loc_18A3']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
cmp ['[ebp+var_60],', '6']
jnb ['loc_193B']
mov ['edx,', '[ebp+var_60]']
lea ['eax,', '_k_SupportedMethods[edx*8]']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['ecx,', '[ebp+var_40]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1936']
lea ['ecx,', '[ebp+var_54]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1926']
lea ['edx,', '[ebp+var_54]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0A0h']
call ['?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_1926']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_C4],', 'eax']
lea ['ecx,', '[ebp+var_54]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_40]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_C4]']
jmp ['loc_1EA7']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_64]']
mov ['eax,', '[edx]']
mov ['[ecx+0B8h],', 'eax']
jmp ['short', 'loc_193B']
jmp ['loc_189A']
cmp ['[ebp+var_60],', '6']
jnz ['short', 'loc_196E']
mov ['[ebp+var_C8],', '80070057h']
lea ['ecx,', '[ebp+var_54]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_40]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_C8]']
jmp ['loc_1EA7']
lea ['ecx,', '[ebp+var_54]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_40]']
call ['??1UString@@QAE@XZ']
jmp ['loc_1A10']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '13h']
jnz ['short', 'loc_19F3']
mov ['[ebp+var_6C],', '0']
jmp ['short', 'loc_19A0']
mov ['eax,', '[ebp+var_6C]']
add ['eax,', '1']
mov ['[ebp+var_6C],', 'eax']
cmp ['[ebp+var_6C],', '6']
jnb ['short', 'loc_19CE']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '_k_SupportedMethods[ecx*8]']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+var_70]']
jnz ['short', 'loc_19CC']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_70]']
mov ['[edx+0B8h],', 'eax']
jmp ['short', 'loc_19CE']
jmp ['short', 'loc_1997']
cmp ['[ebp+var_6C],', '6']
jnz ['short', 'loc_19F1']
mov ['[ebp+var_CC],', '80070057h']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_CC]']
jmp ['loc_1EA7']
jmp ['short', 'loc_1A10']
mov ['[ebp+var_D0],', '80070057h']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_D0]']
jmp ['loc_1EA7']
jmp ['loc_1E98']
push ['offset', '$SG71357']
lea ['ecx,', '[ebp+var_18]']
call ['?IsPrefixedBy@UString@@QBE_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_1B98']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '8']
jz ['short', 'loc_1A55']
mov ['[ebp+var_D4],', '80070057h']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_D4]']
jmp ['loc_1EA7']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['ecx,', '[ebp+var_80]']
call ['??0UString@@QAE@PB_W@Z']
lea ['ecx,', '[ebp+var_80]']
call ['?MakeLower_Ascii@UString@@QAEXXZ']
push ['offset', '$SG71363']
lea ['ecx,', '[ebp+var_80]']
call ['?IsPrefixedBy@UString@@QBE_NPB_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_1B3B']
push ['3']
lea ['ecx,', '[ebp+var_80]']
call ['?DeleteFrontal@UString@@QAEXI@Z']
push ['offset', '$SG71365']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['??8@YG_NABVUString@@PB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1AAF']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+0B6h],', '1']
jmp ['short', 'loc_1B25']
push ['offset', '$SG71368']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['??8@YG_NABVUString@@PB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1AD0']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+0B6h],', '2']
jmp ['short', 'loc_1B25']
push ['offset', '$SG71372']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['??8@YG_NABVUString@@PB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1AF4']
lea ['ecx,', '[ebp+var_80]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1B00']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+0B6h],', '3']
jmp ['short', 'loc_1B25']
mov ['[ebp+var_D8],', '80070057h']
lea ['ecx,', '[ebp+var_80]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_D8]']
jmp ['loc_1EA7']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+0B5h],', '1']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+0BCh],', '1']
jmp ['short', 'loc_1B8B']
push ['offset', '$SG71378']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['??8@YG_NABVUString@@PB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1B66']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+0B5h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+0BCh],', '1']
jmp ['short', 'loc_1B8B']
mov ['[ebp+var_DC],', '80070057h']
lea ['ecx,', '[ebp+var_80]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_DC]']
jmp ['loc_1EA7']
lea ['ecx,', '[ebp+var_80]']
call ['??1UString@@QAE@XZ']
jmp ['loc_1E98']
push ['offset', '$SG71384']
lea ['ecx,', '[ebp+var_18]']
call ['?IsPrefixedBy@UString@@QBE_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1C27']
push ['2']
lea ['ecx,', '[ebp+var_18]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
lea ['ecx,', '[ebp+var_E8]']
call ['??0UString@@QAE@PB_W@Z']
mov ['eax,', '[ebp+this]']
add ['eax,', '0B0h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
lea ['eax,', '[ebp+var_E8]']
push ['eax']
call ['?ParseMtProp@@YGJABVUString@@ABUtagPROPVARIANT@@IAAI@Z']
mov ['[ebp+var_88],', 'eax']
lea ['ecx,', '[ebp+var_E8]']
call ['??1UString@@QAE@XZ']
cmp ['[ebp+var_88],', '0']
jz ['short', 'loc_1C18']
mov ['ecx,', '[ebp+var_88]']
mov ['[ebp+var_EC],', 'ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_EC]']
jmp ['loc_1EA7']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+0B4h],', '1']
jmp ['loc_1E98']
push ['offset', '$SG71391']
lea ['ecx,', '[ebp+var_18]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1C81']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0BDh']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+var_8C],', '0']
jz ['short', 'loc_1C7C']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_F0],', 'eax']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_F0]']
jmp ['loc_1EA7']
jmp ['loc_1E98']
push ['offset', '$SG71397']
lea ['ecx,', '[ebp+var_18]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1CF3']
mov ['edx,', '[ebp+this]']
add ['edx,', '0BFh']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_90],', '0']
jz ['short', 'loc_1CD6']
mov ['ecx,', '[ebp+var_90]']
mov ['[ebp+var_F4],', 'ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_F4]']
jmp ['loc_1EA7']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+0BFh]']
test ['eax,', 'eax']
jz ['short', 'loc_1CEE']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+0C0h],', '0']
jmp ['loc_1E98']
push ['offset', '$SG71404']
lea ['ecx,', '[ebp+var_18]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1D64']
mov ['eax,', '[ebp+this]']
add ['eax,', '0C0h']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['[ebp+var_94],', 'eax']
cmp ['[ebp+var_94],', '0']
jz ['short', 'loc_1D47']
mov ['edx,', '[ebp+var_94]']
mov ['[ebp+var_F8],', 'edx']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_F8]']
jmp ['loc_1EA7']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0C0h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1D5F']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+0BFh],', '0']
jmp ['loc_1E98']
push ['offset', '$SG71411']
lea ['ecx,', '[ebp+var_18]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_1E04']
mov ['[ebp+var_9C],', '1']
push ['offset', '$SG71415']
lea ['ecx,', '[ebp+var_104]']
call ['??0UString@@QAE@PB_W@Z']
lea ['ecx,', '[ebp+var_9C]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
lea ['eax,', '[ebp+var_104]']
push ['eax']
call ['?ParsePropToUInt32@@YGJABVUString@@ABUtagPROPVARIANT@@AAI@Z']
mov ['[ebp+var_A4],', 'eax']
lea ['ecx,', '[ebp+var_104]']
call ['??1UString@@QAE@XZ']
cmp ['[ebp+var_A4],', '0']
jz ['short', 'loc_1DE6']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+var_108],', 'ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_108]']
jmp ['loc_1EA7']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+0C1h],', '1']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_9C]']
mov ['[eax+0C4h],', 'ecx']
jmp ['loc_1E98']
push ['offset', '$SG71420']
lea ['ecx,', '[ebp+var_18]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1E57']
mov ['eax,', '[ebp+this]']
add ['eax,', '0BEh']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '0']
jz ['short', 'loc_1E55']
mov ['edx,', '[ebp+var_A8]']
mov ['[ebp+var_10C],', 'edx']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_10C]']
jmp ['short', 'loc_1EA7']
jmp ['short', 'loc_1E98']
mov ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0A0h']
call ['?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z']
mov ['[ebp+var_AC],', 'eax']
cmp ['[ebp+var_AC],', '0']
jz ['short', 'loc_1E98']
mov ['edx,', '[ebp+var_AC]']
mov ['[ebp+var_110],', 'edx']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_110]']
jmp ['short', 'loc_1EA7']
lea ['ecx,', '[ebp+var_18]']
call ['??1UString@@QAE@XZ']
jmp ['loc_1714']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN71']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '110h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$3 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-84h]']
jmp ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$5 proc near
lea ['ecx,', '[ebp-0C4h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$6 proc near
lea ['ecx,', '[ebp-0DCh]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$7 proc near
lea ['ecx,', '[ebp-0F8h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$8 proc near
lea ['ecx,', '[ebp-114h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$9 proc near
lea ['ecx,', '[ebp-130h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$10 proc near
lea ['ecx,', '[ebp-268h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$11 proc near
lea ['ecx,', '[ebp-278h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$12 proc near
mov ['eax,', '[ebp-2C4h]']
and ['eax,', '1']
jz ['locret_1FBD']
and ['dword', 'ptr', '[ebp-2C4h],', '0FFFFFFFEh']
lea ['ecx,', '[ebp-284h]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$13 proc near
lea ['ecx,', '[ebp-18Ch]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$14 proc near
lea ['ecx,', '[ebp-19Ch]']
jmp ['??1?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$15 proc near
lea ['ecx,', '[ebp-1A8h]']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$16 proc near
lea ['ecx,', '[ebp-1F8h]']
jmp ['??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$17 proc near
lea ['ecx,', '[ebp-204h]']
jmp ['??1CMyComBSTR@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$18 proc near
lea ['ecx,', '[ebp-2A4h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$19 proc near
lea ['ecx,', '[ebp-2B0h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3A4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?UpdateItems@CHandler@NZip@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetTime@NZip@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAAU_FILETIME@@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__ehhandler$?GetTime@NZip@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAAU_FILETIME@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-34h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetTime@NZip@NArchive@@YGJPAUIArchiveUpdateCallback@@HKAAU_FILETIME@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@AString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Back@UString@@QBE_WXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ax,', '[eax+ecx*2-2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YUString@@QAEAAV0@_W@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_22DC']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+eax*2],', 'dx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsAscii@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_236B']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_238A']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', '80h']
jl ['short', 'loc_2388']
xor ['al,', 'al']
jmp ['short', 'loc_238C']
jmp ['short', 'loc_2362']
mov ['al,', '1']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??9@YG_NABVUString@@0@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@UString@@QBEIXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_2407']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcscmp']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_2407']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_240E']
mov ['[ebp+var_4],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyComBSTR@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMyComBSTR@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SysFreeString@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??ICMyComBSTR@@QAEPAPA_WXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BCMyComBSTR@@QBEPB_WXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IntToBool@@YG_NH@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0']
setnz ['al']
pop ['ebp']
retn ['4']
endp
?IsAesEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_256E']
mov ['ecx,', '[ebp+var_4]']
call ['?IsStrongEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2565']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
cmp ['eax,', '63h']
jnz ['short', 'loc_256E']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_2575']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[eax]']
and ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsStrongEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEncrypted@CLocalItem@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_25E6']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
and ['edx,', '40h']
jz ['short', 'loc_25E6']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_25ED']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsOpen@CInArchive@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '80h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CanUpdate@CInArchive@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?AreThereErrors@CInArchive@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2666']
xor ['al,', 'al']
jmp ['loc_26E7']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+3Ch],', '0']
jg ['short', 'loc_2684']
jl ['short', 'loc_2680']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jnb ['short', 'loc_2684']
xor ['al,', 'al']
jmp ['short', 'loc_26E7']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+4Ch]']
cmp ['edx,', '[ecx+3Ch]']
jg ['short', 'loc_26B2']
jl ['short', 'loc_26AE']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+48h]']
cmp ['edx,', '[ecx+38h]']
jnb ['short', 'loc_26B2']
xor ['al,', 'al']
jmp ['short', 'loc_26E7']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?GetEmbeddedStubSize@CInArchiveInfo@NZip@NArchive@@QBE_KXZ']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '[ebp+var_14]']
jz ['short', 'loc_26CF']
xor ['al,', 'al']
jmp ['short', 'loc_26E7']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?ThereIsTail@CInArchiveInfo@NZip@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_26E5']
xor ['al,', 'al']
jmp ['short', 'loc_26E7']
mov ['al,', '1']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetEmbeddedStubSize@CInArchiveInfo@NZip@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+30h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_271D']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
mov ['edx,', '[edx+2Ch]']
jmp ['short', 'loc_2732']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+10h]']
sub ['edx,', '[ecx]']
mov ['esi,', '[eax+14h]']
sbb ['esi,', '[ecx+4]']
mov ['eax,', 'edx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ThereIsTail@CInArchiveInfo@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[edx+24h]']
cmp ['ecx,', '[eax+1Ch]']
jb ['short', 'loc_2785']
ja ['short', 'loc_277C']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[edx+20h]']
cmp ['ecx,', '[eax+18h]']
jbe ['short', 'loc_2785']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_278C']
mov ['[ebp+var_10],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_10]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AreThereErrors@CInArchive@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7Ah]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_27CA']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+7Dh]']
test ['eax,', 'eax']
jnz ['short', 'loc_27CA']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_27D1']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CBaseProps@NZip@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0?$CRecordVector@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0AString@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+40h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+38h],', '0']
mov ['dword', 'ptr', '[edx+3Ch],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CBaseProps@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@E@@QAE@XZ']
endp
__ehhandler$??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CBaseProps@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CMethodProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseProps@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CMethodProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCProp@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CUpdateItem@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+3],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??0AString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CUpdateItem@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??1AString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CBaseProps@NZip@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CBaseProps@NZip@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@E@@QAE@XZ']
endp
__ehhandler$??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCompressionMethodMode@NZip@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??4CBaseProps@NZip@NArchive@@QAEAAU012@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4CMethodProps@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+14h]']
mov ['[ecx+14h],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+15h]']
mov ['[ecx+15h],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+16h]']
mov ['[ecx+16h],', 'al']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CMethodProps@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4CProps@@QAEAAU0@ABU0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4CProps@@QAEAAU0@ABU0@@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Ptr@UString@@QBEPB_WI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MakeLower_Ascii@UString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?MyStringLower_Ascii@@YGXPA_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEqualTo@UString@@QBE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?StringsAreEqual_Ascii@@YG_NPB_WPBD@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsPrefixedBy@UString@@QBE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?IsString1PrefixedByString2@@YG_NPB_W0@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Find@UString@@QBEH_W@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?FindCharPosInString@@YGHPB_W_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?DeleteFrom@UString@@QAEXI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_2CDC']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8@YG_NABVUString@@PB_W@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcscmp']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddProp_Level@CMethodProps@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0Fh']
mov ['ecx,', '[ebp+var_4]']
call ['?AddProp32@CProps@@QAEXKI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?InitMethodProps@CHandler@NZip@NArchive@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0A8h']
call ['?Init@CBaseProps@NZip@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0C0h],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0C4h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0C5h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0C6h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0C7h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0C8h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0C9h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0CCh],', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CBaseProps@NZip@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CProps@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
call ['?GetNumberOfProcessors@NSystem@NWindows@@YGIXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+15h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+16h],', '3']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CProps@@QAEXXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CObjectVector@UCProp@@@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_2ECB']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_2F5D']
mov ['ecx,', '[ebp+var_10]']
call ['?Clear@?$CObjectVector@UCProp@@@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCProp@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Reserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_2EFC']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_2F5A']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_2F38']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CProp@@QAE@ABU0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_2F3F']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_2EF3']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4?$CObjectVector@UCProp@@@@QAEAAV0@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCProp@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_30AE']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_30A5']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_30AC']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_306A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@UCProp@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3194']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_318B']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_3192']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_3150']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@E@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@E@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@E@@QAEIE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@E@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VCItemEx@NZip@NArchive@@@@QAEAAVCItemEx@NZip@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAEIABUCUpdateItem@NZip@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAEIABUCUpdateItem@NZip@NArchive@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['48h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3330']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CUpdateItem@NZip@NArchive@@QAE@ABU012@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_3337']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAEIABUCUpdateItem@NZip@NArchive@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAEIABUCUpdateItem@NZip@NArchive@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAEIABUCUpdateItem@NZip@NArchive@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3452']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3449']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCUpdateItem@NZip@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_3450']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_340E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCUpdateItem@NZip@NArchive@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UICryptoGetTextPassword2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_351E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICryptoGetTextPassword2@@@@QBEPAUICryptoGetTextPassword2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UICryptoGetTextPassword2@@@@QAEPAPAUICryptoGetTextPassword2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICryptoGetTextPassword2@@@@QBEPAUICryptoGetTextPassword2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@PAUIArchiveUpdateCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_35AC']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIArchiveUpdateCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_35F2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProp@@QAE@ABU0@@Z proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+4]']
mov ['[eax+4],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CPropVariant@NCOM@NWindows@@QAE@ABV012@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCProp@@QAEPAXI@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_367A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CUpdateItem@NZip@NArchive@@QAE@ABU012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+1]']
mov ['[eax+1],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+2]']
mov ['[eax+2],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+3]']
mov ['[eax+3],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+4]']
mov ['[eax+4],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['ecx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '20h']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['??0AString@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[eax+30h]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2Ch],', 'ecx']
mov ['[eax+30h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[ecx+38h]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+34h],', 'edx']
mov ['[ecx+38h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3Ch]']
mov ['ecx,', '[edx+40h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+3Ch],', 'eax']
mov ['[edx+40h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCUpdateItem@NZip@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CUpdateItem@NZip@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_37A2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Reserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_38C0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_389B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@E@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_3A95']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_3A70']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_3B58']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_3B33']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$QueryInterface@UICryptoGetTextPassword2@@@?$CMyComPtr@UIArchiveUpdateCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword2@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
push ['edx']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

?DosTimeToFileTime@NTime@NWindows@@YG_NIAAU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpFileTime]']
push ['eax']
mov ['ecx,', '[ebp+this]']
and ['ecx,', '0FFFFh']
push ['ecx']
mov ['edx,', '[ebp+this]']
shr ['edx,', '10h']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DosDateTimeToFileTime@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['?BOOLToBool@@YG_NH@Z']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?FileTimeToDosTime@NTime@NWindows@@YG_NABU_FILETIME@@AAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['dword', 'ptr', '[ebp+FatTime],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['dword', 'ptr', '[ebp+FatDate],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+FatTime]']
push ['eax']
lea ['ecx,', '[ebp+FatDate]']
push ['ecx']
mov ['edx,', '[ebp+lpFileTime]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__FileTimeToDosDateTime@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_9E']
mov ['eax,', '[ebp+lpFileTime]']
cmp ['dword', 'ptr', '[eax+4],', '1C00000h']
sbb ['ecx,', 'ecx']
and ['ecx,', '814083h']
add ['ecx,', '0FF9FBF7Dh']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
xor ['al,', 'al']
jmp ['short', 'loc_B2']
movzx ['eax,', '[ebp+FatDate]']
shl ['eax,', '10h']
movzx ['ecx,', '[ebp+FatTime]']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?UnixTimeToFileTime@NTime@NWindows@@YGXIAAU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
xor ['ecx,', 'ecx']
add ['eax,', '0B6109100h']
adc ['ecx,', '2']
push ['0']
push ['989680h']
push ['ecx']
push ['eax']
call ['__allmul']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'edx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?UnixTime64ToFileTime@NTime@NWindows@@YG_N_JAAU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['dword', 'ptr', '[ebp+arg_4],', '1AAh']
jb ['short', 'loc_1B2']
ja ['short', 'loc_19B']
cmp ['[ebp+this],', '0C9191ACAh']
jbe ['short', 'loc_1B2']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
xor ['al,', 'al']
jmp ['short', 'loc_223']
mov ['edx,', '[ebp+this]']
add ['edx,', '0B6109100h']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
adc ['eax,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jg ['short', 'loc_1EC']
jl ['short', 'loc_1D5']
cmp ['[ebp+var_8],', '0']
jnb ['short', 'loc_1EC']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['al,', 'al']
jmp ['short', 'loc_223']
push ['0']
push ['989680h']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['__allmul']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+4],', 'eax']
mov ['al,', '1']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?FileTimeToUnixTime64@NTime@NWindows@@YG_JABU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['eax,', '[eax+4]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'edx']
push ['0']
push ['989680h']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['__aulldiv']
sub ['eax,', '0B6109100h']
sbb ['edx,', '2']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?FileTimeToUnixTime@NTime@NWindows@@YG_NABU_FILETIME@@AAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['eax,', '[eax+4]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'edx']
push ['0']
push ['989680h']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['__aulldiv']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '2']
ja ['short', 'loc_31D']
jb ['short', 'loc_310']
cmp ['[ebp+var_8],', '0B6109100h']
jnb ['short', 'loc_31D']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['al,', 'al']
jmp ['short', 'loc_355']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '0B6109100h']
mov ['eax,', '[ebp+var_4]']
sbb ['eax,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
ja ['short', 'loc_33E']
cmp ['[ebp+var_8],', '0FFFFFFFFh']
jbe ['short', 'loc_34B']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
xor ['al,', 'al']
jmp ['short', 'loc_355']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
mov ['al,', '1']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetSecondsSince1601@NTime@NWindows@@YG_NIIIIIIAA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
cmp ['[ebp+this],', '641h']
jb ['short', 'loc_3ED']
cmp ['[ebp+this],', '2710h']
jnb ['short', 'loc_3ED']
cmp ['[ebp+arg_4],', '1']
jb ['short', 'loc_3ED']
cmp ['[ebp+arg_4],', '0Ch']
ja ['short', 'loc_3ED']
cmp ['[ebp+arg_8],', '1']
jb ['short', 'loc_3ED']
cmp ['[ebp+arg_8],', '1Fh']
ja ['short', 'loc_3ED']
cmp ['[ebp+arg_C],', '17h']
ja ['short', 'loc_3ED']
cmp ['[ebp+arg_10],', '3Bh']
ja ['short', 'loc_3ED']
cmp ['[ebp+arg_14],', '3Bh']
jbe ['short', 'loc_3F4']
xor ['al,', 'al']
jmp ['loc_50B']
mov ['ecx,', '[ebp+this]']
sub ['ecx,', '641h']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
imul ['ecx,', '16Dh']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '2']
add ['ecx,', 'edx']
mov ['eax,', '[ebp+var_8]']
xor ['edx,', 'edx']
mov ['esi,', '64h']
div ['esi']
sub ['ecx,', 'eax']
mov ['eax,', '[ebp+var_8]']
xor ['edx,', 'edx']
mov ['esi,', '190h']
div ['esi']
add ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_1C],', '1Fh']
mov ['byte', 'ptr', '[ebp+var_1C+1],', '1Ch']
mov ['byte', 'ptr', '[ebp+var_1C+2],', '1Fh']
mov ['byte', 'ptr', '[ebp+var_1C+3],', '1Eh']
mov ['byte', 'ptr', '[ebp+var_18],', '1Fh']
mov ['byte', 'ptr', '[ebp+var_18+1],', '1Eh']
mov ['byte', 'ptr', '[ebp+var_18+2],', '1Fh']
mov ['byte', 'ptr', '[ebp+var_18+3],', '1Fh']
mov ['byte', 'ptr', '[ebp+var_14],', '1Eh']
mov ['byte', 'ptr', '[ebp+var_14+1],', '1Fh']
mov ['byte', 'ptr', '[ebp+var_14+2],', '1Eh']
mov ['byte', 'ptr', '[ebp+var_14+3],', '1Fh']
mov ['eax,', '[ebp+this]']
xor ['edx,', 'edx']
mov ['ecx,', '4']
div ['ecx']
test ['edx,', 'edx']
jnz ['short', 'loc_494']
mov ['eax,', '[ebp+this]']
xor ['edx,', 'edx']
mov ['ecx,', '64h']
div ['ecx']
test ['edx,', 'edx']
jnz ['short', 'loc_490']
mov ['eax,', '[ebp+this]']
xor ['edx,', 'edx']
mov ['ecx,', '190h']
div ['ecx']
test ['edx,', 'edx']
jnz ['short', 'loc_494']
mov ['byte', 'ptr', '[ebp+var_1C+1],', '1Dh']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_4AF']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_4C7']
mov ['edx,', '[ebp+var_24]']
movzx ['eax,', 'byte', 'ptr', '[ebp+edx+var_1C]']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_4A6']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_C]']
lea ['eax,', '[edx+ecx-1]']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
imul ['eax,', '18h']
add ['eax,', '[ebp+arg_C]']
mov ['ecx,', '3Ch']
mul ['ecx']
mov ['ecx,', '[ebp+arg_10]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
push ['0']
push ['3Ch']
push ['edx']
push ['eax']
call ['__allmul']
mov ['ecx,', '[ebp+arg_14]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ecx],', 'eax']
mov ['[ecx+4],', 'edx']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
?GetCurUtcFileTime@NTime@NWindows@@YGXAAU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpSystemTimeAsFileTime]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetSystemTimeAsFileTime@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?BOOLToBool@@YG_NH@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0']
setnz ['al']
pop ['ebp']
retn ['4']
endp

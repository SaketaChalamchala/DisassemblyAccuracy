?Remove@CStreamSwitch@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4C']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+38h]']
call ['?GetRem@CInByte2@N7z@NArchive@@QBEIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_33']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['byte', 'ptr', '[edx+3Ch],', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx]']
call ['?DeleteByteStream@CInArchive@N7z@NArchive@@AAEX_N@Z']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+4],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@PBEI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Remove@CStreamSwitch@N7z@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx]']
call ['?AddByteStream@CInArchive@N7z@NArchive@@AAEXPBEI@Z']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+4],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[ebp+arg_C]']
mov ['[eax+5],', 'cl']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@ABV?$CBuffer@E@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@PBEI_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@PBV?$CObjectVector@V?$CBuffer@E@@@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Remove@CStreamSwitch@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?ReadByte@CInArchive@N7z@NArchive@@AAEEXZ']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
test ['eax,', 'eax']
jz ['short', 'loc_15F']
mov ['ecx,', '[ebp+arg_0]']
call ['?ReadNum@CInArchive@N7z@NArchive@@AAEIXZ']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@V?$CBuffer@E@@@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jb ['short', 'loc_146']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@ABV?$CBuffer@E@@@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ThrowIncorrect@N7z@NArchive@@YGXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
call ['?ThrowException@N7z@NArchive@@YGXXZ']
endp
?ThrowException@N7z@NArchive@@YGXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
xor ['eax,', 'eax']
mov ['byte', 'ptr', '[ebp+var_4+2],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+var_4+2]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'cl']
push ['offset', '__TI1?AVCInArchiveException@N7z@NArchive@@']
lea ['edx,', '[ebp+var_4+3]']
push ['edx']
call ['__CxxThrowException@8']
endp
?AddByteStream@CInArchive@N7z@NArchive@@AAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '4']
jnz ['short', 'loc_1EC']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
imul ['edx,', '0Ch']
mov ['eax,', '[ebp+var_4]']
lea ['ecx,', '[eax+edx+8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+38h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+38h]']
call ['?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadByte@CInByte2@N7z@NArchive@@QAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jb ['short', 'loc_26A']
call ['?ThrowEndOfData@N7z@NArchive@@YGXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
mov ['cl,', '[ecx+eax]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ThrowEndOfData@N7z@NArchive@@YGXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
call ['?ThrowException@N7z@NArchive@@YGXXZ']
endp
?ReadBytes@CInByte2@N7z@NArchive@@QAEXPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_2D6']
jmp ['short', 'loc_317']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+8]']
cmp ['[ebp+Size],', 'edx']
jbe ['short', 'loc_2EC']
call ['?ThrowEndOfData@N7z@NArchive@@YGXXZ']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+8]']
push ['edx']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
add ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SkipData@CInByte2@N7z@NArchive@@QAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+8]']
xor ['eax,', 'eax']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0+4]']
cmp ['ecx,', '[ebp+var_8]']
jb ['short', 'loc_379']
ja ['short', 'loc_374']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0]']
cmp ['edx,', '[ebp+var_C]']
jbe ['short', 'loc_379']
call ['?ThrowEndOfData@N7z@NArchive@@YGXXZ']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SkipData@CInByte2@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadNumber@CInByte2@N7z@NArchive@@QAE_KXZ']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SkipData@CInByte2@N7z@NArchive@@QAEX_K@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadNumber@CInByte2@N7z@NArchive@@QAE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+4]']
sub ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+8]']
push ['edx']
call ['?ReadNumberSpec@N7z@NArchive@@YG_KPBEIAAI@Z']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_423']
call ['?ThrowEndOfData@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
add ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadNumberSpec@N7z@NArchive@@YG_KPBEIAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_4B8']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['loc_5F3']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
and ['edx,', '80h']
jnz ['short', 'loc_4F1']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_4]']
xor ['edx,', 'edx']
jmp ['loc_5F3']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_509']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['loc_5F3']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cdq
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_53A']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '8']
jnb ['loc_5E4']
mov ['eax,', '80h']
mov ['ecx,', '[ebp+var_10]']
shr ['eax,', 'cl']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
and ['ecx,', '[ebp+var_14]']
jnz ['short', 'loc_59A']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '1']
and ['edx,', '[ebp+var_4]']
xor ['eax,', 'eax']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_10]']
shl ['ecx,', '3']
mov ['eax,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_18]']
call ['__allshl']
or ['eax,', '[ebp+var_C]']
or ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
jmp ['short', 'loc_5F3']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_5AF']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['short', 'loc_5F3']
mov ['ecx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[ecx]']
cdq
mov ['ecx,', '[ebp+var_10]']
shl ['ecx,', '3']
call ['__allshl']
or ['eax,', '[ebp+var_C]']
or ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
jmp ['loc_531']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '9']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadNumber@CInByte2@N7z@NArchive@@QAE_KXZ']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
ja ['short', 'loc_64B']
cmp ['[ebp+var_C],', '7FFFFFFFh']
jbe ['short', 'loc_650']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ThrowUnsupported@N7z@NArchive@@YGXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+2]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'al']
push ['offset', '__TI2?AVCUnsupportedFeatureException@N7z@NArchive@@']
lea ['ecx,', '[ebp+var_4+3]']
push ['ecx']
call ['__CxxThrowException@8']
endp
?ReadUInt32@CInByte2@N7z@NArchive@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '4']
mov ['edx,', '[ebp+var_4]']
cmp ['ecx,', '[edx+4]']
jbe ['short', 'loc_6CD']
call ['?ThrowEndOfData@N7z@NArchive@@YGXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ecx+eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
add ['eax,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadUInt64@CInByte2@N7z@NArchive@@QAE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '8']
mov ['edx,', '[ebp+var_4]']
cmp ['ecx,', '[edx+4]']
jbe ['short', 'loc_734']
call ['?ThrowEndOfData@N7z@NArchive@@YGXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
mov ['edx,', '[ecx+eax]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ecx+eax+4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
add ['edx,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?FindAndReadSignature@CInArchive@N7z@NArchive@@AAEJPAUIInStream@@PB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?FindAndReadSignature@CInArchive@N7z@NArchive@@AAEJPAUIInStream@@PB_K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '64h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_70]']
mov ['ecx,', '19h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['20h']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '50h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_7CE']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_AB5']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '50h']
push ['edx']
call ['?TestSignature2@N7z@NArchive@@YG_NPBE@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_7E8']
xor ['eax,', 'eax']
jmp ['loc_AB5']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_80B']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[edx]']
or ['ecx,', '[eax+4]']
jnz ['short', 'loc_80B']
mov ['eax,', '1']
jmp ['loc_AB5']
mov ['[ebp+var_18],', '8000h']
push ['8000h']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$CObjArray@E@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
push ['20h']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '50h']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_30],', '7FE0h']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_8B6']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[eax+4]']
sbb ['edx,', '[ebp+var_28]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_30]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_70],', 'eax']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
cmp ['edx,', '[ebp+var_34]']
jb ['short', 'loc_892']
ja ['short', 'loc_88C']
mov ['eax,', '[ebp+var_70]']
cmp ['eax,', '[ebp+var_38]']
jbe ['short', 'loc_892']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_30],', 'ecx']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_8B6']
mov ['[ebp+var_58],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjArray@E@@QAE@XZ']
mov ['eax,', '[ebp+var_58]']
jmp ['loc_AB5']
mov ['[ebp+var_40],', '0']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
add ['eax,', '20h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[edx+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_90E']
mov ['edx,', '[ebp+var_48]']
mov ['[ebp+var_5C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjArray@E@@QAE@XZ']
mov ['eax,', '[ebp+var_5C]']
jmp ['loc_AB5']
cmp ['[ebp+var_40],', '0']
jnz ['short', 'loc_932']
mov ['[ebp+var_60],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjArray@E@@QAE@XZ']
mov ['eax,', '[ebp+var_60]']
jmp ['loc_AB5']
mov ['[ebp+var_4C],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
mov ['ecx,', '[ebp+var_4C]']
lea ['edx,', '[eax+ecx+1]']
mov ['[ebp+Src],', 'edx']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
add ['eax,', '[ebp+var_40]']
mov ['[ebp+var_54],', 'eax']
jmp ['short', 'loc_964']
mov ['eax,', '[ebp+Src]']
add ['eax,', '4']
mov ['[ebp+Src],', 'eax']
mov ['ecx,', '[ebp+Src]']
cmp ['ecx,', '[ebp+var_54]']
ja ['short', 'loc_9C0']
mov ['edx,', '[ebp+Src]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '37h']
jnz ['short', 'loc_979']
jmp ['short', 'loc_9C0']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
cmp ['edx,', '37h']
jnz ['short', 'loc_990']
mov ['eax,', '[ebp+Src]']
add ['eax,', '1']
mov ['[ebp+Src],', 'eax']
jmp ['short', 'loc_9C0']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
cmp ['edx,', '37h']
jnz ['short', 'loc_9A7']
mov ['eax,', '[ebp+Src]']
add ['eax,', '2']
mov ['[ebp+Src],', 'eax']
jmp ['short', 'loc_9C0']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
cmp ['edx,', '37h']
jnz ['short', 'loc_9BE']
mov ['eax,', '[ebp+Src]']
add ['eax,', '3']
mov ['[ebp+Src],', 'eax']
jmp ['short', 'loc_9C0']
jmp ['short', 'loc_95B']
mov ['ecx,', '[ebp+Src]']
cmp ['ecx,', '[ebp+var_54]']
jbe ['short', 'loc_9CD']
jmp ['loc_A67']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
mov ['edx,', '[ebp+Src]']
sub ['edx,', 'eax']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['?TestSignature@N7z@NArchive@@YG_NPBE@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A62']
push ['20h']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '50h']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4C]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_2C]']
adc ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_10]']
add ['ecx,', '[eax+40h]']
adc ['edx,', '[eax+44h]']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+40h],', 'ecx']
mov ['[eax+44h],', 'edx']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+40h]']
add ['edx,', '20h']
mov ['eax,', '[ecx+44h]']
adc ['eax,', '0']
push ['eax']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[edx+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_64],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjArray@E@@QAE@XZ']
mov ['eax,', '[ebp+var_64]']
jmp ['short', 'loc_AB5']
jmp ['loc_939']
mov ['edx,', '[ebp+var_40]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_2C]']
adc ['eax,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'edx']
mov ['[ebp+var_28],', 'eax']
mov ['esi,', 'esp']
push ['20h']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
add ['eax,', '[ebp+var_40]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??B?$CObjArray@E@@QAEPAEXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_84E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjArray@E@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN30']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '70h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?TestSignature@N7z@NArchive@@YG_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jnz ['short', 'loc_B70']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '7Ah']
jnz ['short', 'loc_B70']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
cmp ['edx,', '0BCh']
jnz ['short', 'loc_B70']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
cmp ['ecx,', '0AFh']
jnz ['short', 'loc_B70']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
cmp ['eax,', '27h']
jnz ['short', 'loc_B70']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5]']
cmp ['edx,', '1Ch']
jz ['short', 'loc_B74']
xor ['al,', 'al']
jmp ['short', 'loc_B91']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
mov ['edx,', '14h']
call ['@CrcCalc@8']
mov ['ecx,', '[ebp+arg_0]']
xor ['edx,', 'edx']
cmp ['eax,', '[ecx+8]']
setz ['dl']
mov ['al,', 'dl']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?TestSignature2@N7z@NArchive@@YG_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jnz ['short', 'loc_C01']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '7Ah']
jnz ['short', 'loc_C01']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
cmp ['edx,', '0BCh']
jnz ['short', 'loc_C01']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
cmp ['ecx,', '0AFh']
jnz ['short', 'loc_C01']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
cmp ['eax,', '27h']
jnz ['short', 'loc_C01']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5]']
cmp ['edx,', '1Ch']
jz ['short', 'loc_C05']
xor ['al,', 'al']
jmp ['short', 'loc_C75']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
mov ['edx,', '14h']
call ['@CrcCalc@8']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', '[ecx+8]']
jnz ['short', 'loc_C21']
mov ['al,', '1']
jmp ['short', 'loc_C75']
mov ['[ebp+var_4],', '8']
jmp ['short', 'loc_C33']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '20h']
jnb ['short', 'loc_C4C']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_C4A']
xor ['al,', 'al']
jmp ['short', 'loc_C75']
jmp ['short', 'loc_C2A']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+6]']
test ['eax,', 'eax']
jnz ['short', 'loc_C6B']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+7]']
test ['edx,', 'edx']
jnz ['short', 'loc_C6B']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_C72']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Open@CInArchive@N7z@NArchive@@QAEJPAUIInStream@@PB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+70h],', '0']
mov ['dword', 'ptr', '[eax+74h],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CInArchive@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
mov ['esi,', 'esp']
push ['ecx']
push ['1']
push ['0']
push ['0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_CFC']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_D8E']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '48h']
mov ['esi,', 'esp']
push ['eax']
push ['2']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[edx+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D2E']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_D8E']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+44h]']
push ['eax']
mov ['ecx,', '[edx+40h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_D62']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_D8E']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?FindAndReadSignature@CInArchive@N7z@NArchive@@AAEJPAUIInStream@@PB_K@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_D80']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_D8E']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Close@CInArchive@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+3Ch],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadArchiveProperties@CInArchive@N7z@NArchive@@AAEXAAUCInArchiveInfo@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
or ['eax,', '[ebp+var_8]']
jnz ['short', 'loc_E16']
jmp ['short', 'loc_E20']
mov ['ecx,', '[ebp+var_4]']
call ['?SkipData@CInArchive@N7z@NArchive@@AAEXXZ']
jmp ['short', 'loc_DFE']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ParseFolder@CInByte2@N7z@NArchive@@QAEXAAUCFolder@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_E62']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?SetSize@?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAEXI@Z']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_E87']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_8]']
jnb ['loc_FDF']
mov ['ecx,', '[ebp+arg_0]']
call ['??B?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAEPAUCCoderInfo@N7z@NArchive@@XZ']
mov ['ecx,', '[ebp+var_10]']
imul ['ecx,', '18h']
add ['eax,', 'ecx']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte@CInByte2@N7z@NArchive@@QAEEXZ']
mov ['byte', 'ptr', '[ebp+var_1C+7],', 'al']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_1C+7]']
and ['edx,', '0C0h']
jz ['short', 'loc_EC2']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_1C+7]']
and ['eax,', '0Fh']
mov ['dword', 'ptr', '[ebp+var_1C],', 'eax']
cmp ['dword', 'ptr', '[ebp+var_1C],', '8']
ja ['short', 'loc_EDF']
mov ['ecx,', '[ebp+var_4]']
call ['?GetRem@CInByte2@N7z@NArchive@@QBEIXZ']
cmp ['dword', 'ptr', '[ebp+var_1C],', 'eax']
jbe ['short', 'loc_EE4']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_F0F']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', 'dword', 'ptr', '[ebp+var_1C]']
jnb ['short', 'loc_F3E']
mov ['eax,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_24]']
mov ['cl,', '8']
call ['__allshl']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cdq
or ['ecx,', 'eax']
or ['esi,', 'edx']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_24],', 'esi']
jmp ['short', 'loc_F06']
mov ['eax,', 'dword', 'ptr', '[ebp+var_1C]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_28]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['[edx+4],', 'ecx']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_1C+7]']
and ['edx,', '10h']
jz ['short', 'loc_F7C']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
jmp ['short', 'loc_F86']
mov ['edx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[edx+10h],', '1']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_1C+7]']
and ['eax,', '20h']
jz ['short', 'loc_FC3']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '8']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '8']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBytes@CInByte2@N7z@NArchive@@QAEXPAEI@Z']
jmp ['short', 'loc_FCE']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '8']
call ['?Free@?$CBuffer@E@@QAEXXZ']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[eax+10h]']
mov ['[ebp+var_C],', 'ecx']
jmp ['loc_E7E']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
call ['?SetSize@?$CObjArray2@UCBond@N7z@NArchive@@@@QAEXI@Z']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1009']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_34]']
jnb ['short', 'loc_1042']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
call ['??B?$CObjArray2@UCBond@N7z@NArchive@@@@QAEPAUCBond@N7z@NArchive@@XZ']
mov ['ecx,', '[ebp+var_10]']
lea ['edx,', '[eax+ecx*8]']
mov ['[ebp+var_38],', 'edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['edx,', '[ebp+var_38]']
mov ['[edx+4],', 'eax']
jmp ['short', 'loc_1000']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_34]']
jnb ['short', 'loc_104F']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
call ['?SetSize@?$CObjArray2@I@@QAEXI@Z']
cmp ['[ebp+var_3C],', '1']
jnz ['short', 'loc_10BA']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_107F']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_10AB']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?FindBond_for_PackStream@CFolder@N7z@NArchive@@QBEHI@Z']
test ['eax,', 'eax']
jge ['short', 'loc_10A9']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
call ['??B?$CObjArray2@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_10AB']
jmp ['short', 'loc_1076']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_C]']
jnz ['short', 'loc_10B8']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
jmp ['short', 'loc_10F1']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_10CC']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_3C]']
jnb ['short', 'loc_10F1']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
call ['??B?$CObjArray2@I@@QAEPAIXZ']
mov ['edx,', '[ebp+var_10]']
mov ['[eax+edx*4],', 'esi']
jmp ['short', 'loc_10C3']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ParseFolderInfo@CFolders@N7z@NArchive@@QBEXIAAUCFolder@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4+4]']
sub ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '3Ch']
call ['??B?$CBuffer@E@@QBEPBEXZ']
add ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['?ParseFolder@CInByte2@N7z@NArchive@@QAEXAAUCFolder@23@@Z']
lea ['ecx,', '[ebp+var_18]']
call ['?GetRem@CInByte2@N7z@NArchive@@QBEIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_11A4']
mov ['[ebp+var_20],', '1330368h']
push ['offset', '__TI1H']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['__CxxThrowException@8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetPath@CDatabase@N7z@NArchive@@QBEXIAAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+Src],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Empty@UString@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_1239']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D0h']
call ['??B?$CBuffer@E@@QBEPBEXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_123E']
jmp ['loc_12C7']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4+4]']
sub ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '10000000h']
jb ['short', 'loc_127B']
jmp ['short', 'loc_12C7']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?GetBuf@UString@@QAEPA_WI@Z']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D0h']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[eax+ecx*2]']
mov ['[ebp+Src],', 'edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?ReleaseBuf_SetLen@UString@@QAEXI@Z']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetPath_Prop@CDatabase@N7z@NArchive@@QBEJIPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_1333']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D0h']
call ['??B?$CBuffer@E@@QBEPBEXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_133A']
xor ['eax,', 'eax']
jmp ['loc_1410']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4+4]']
sub ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '4000h']
jb ['short', 'loc_137C']
xor ['eax,', 'eax']
jmp ['loc_1410']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?PropVarEm_Alloc_Bstr@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@I@Z']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_139A']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_1410']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D0h']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[eax+ecx*2]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_13CC']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_140E']
mov ['edx,', '[ebp+var_18]']
mov ['ax,', '[edx]']
mov ['word', 'ptr', '[ebp+var_20],', 'ax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '2']
mov ['[ebp+var_18],', 'ecx']
movzx ['edx,', 'word', 'ptr', '[ebp+var_20]']
cmp ['edx,', '2Fh']
jnz ['short', 'loc_13F9']
mov ['eax,', '5Ch']
mov ['word', 'ptr', '[ebp+var_20],', 'ax']
mov ['ecx,', '[ebp+var_14]']
mov ['dx,', 'word', 'ptr', '[ebp+var_20]']
mov ['[ecx],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_13C3']
xor ['eax,', 'eax']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?WaitId@CInArchive@N7z@NArchive@@AAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
jnz ['short', 'loc_145E']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', 'dword', 'ptr', '[ebp+arg_0+4]']
jnz ['short', 'loc_145E']
jmp ['short', 'loc_1475']
mov ['edx,', '[ebp+var_C]']
or ['edx,', '[ebp+var_8]']
jnz ['short', 'loc_146B']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?SkipData@CInArchive@N7z@NArchive@@AAEXXZ']
jmp ['short', 'loc_143E']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadHashDigests@CInArchive@N7z@NArchive@@AAEXIAAUCUInt32DefVector@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBoolVector2@CInArchive@N7z@NArchive@@AAEXIAAV?$CRecordVector@_N@@@Z']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0Ch']
call ['?ClearAndSetSize@?$CRecordVector@I@@QAEXI@Z']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['[ebp+var_8],', 'eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_14FB']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_1530']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_1522']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadUInt32@CInArchive@N7z@NArchive@@AAEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_14F2']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadPackInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReadPackInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '44h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadNum@CInArchive@N7z@NArchive@@AAEIXZ']
mov ['[ebp+var_14],', 'eax']
push ['0']
push ['9']
mov ['ecx,', '[ebp+var_10]']
call ['?WaitId@CInArchive@N7z@NArchive@@AAEX_K@Z']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
call ['?Alloc@?$CObjArray@_K@@QAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_15CB']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['short', 'loc_1627']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QAEPA_KXZ']
mov ['edx,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+edx*8],', 'ecx']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+edx*8+4],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadNumber@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'edx']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_18]']
adc ['eax,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_24]']
ja ['short', 'loc_1625']
jb ['short', 'loc_1620']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_28]']
jnb ['short', 'loc_1625']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
jmp ['short', 'loc_15C2']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QAEPA_KXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_1C]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+var_18]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_30]']
or ['eax,', '[ebp+var_2C]']
jnz ['short', 'loc_165A']
jmp ['short', 'loc_16A0']
cmp ['[ebp+var_30],', '0Ah']
jnz ['short', 'loc_1696']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_1696']
lea ['ecx,', '[ebp+var_4C]']
call ['??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadHashDigests@CInArchive@N7z@NArchive@@AAEXIAAUCUInt32DefVector@23@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_4C]']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
jmp ['short', 'loc_1642']
mov ['ecx,', '[ebp+var_10]']
call ['?SkipData@CInArchive@N7z@NArchive@@AAEXXZ']
jmp ['short', 'loc_1642']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadUnpackInfo@CInArchive@N7z@NArchive@@AAEXPBV?$CObjectVector@V?$CBuffer@E@@@@AAUCFolders@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReadUnpackInfo@CInArchive@N7z@NArchive@@AAEXPBV?$CObjectVector@V?$CBuffer@E@@@@AAUCFolders@23@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0B0h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_BC]']
mov ['ecx,', '2Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0']
push ['0Bh']
mov ['ecx,', '[ebp+var_10]']
call ['?WaitId@CInArchive@N7z@NArchive@@AAEX_K@Z']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadNum@CInArchive@N7z@NArchive@@AAEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_18],', '0']
lea ['ecx,', '[ebp+var_24]']
call ['??0CStreamSwitch@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@PBV?$CObjectVector@V?$CBuffer@E@@@@@Z']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx+38h]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '30h']
call ['?Alloc@?$CObjArray@I@@QAEXI@Z']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '34h']
call ['?Alloc@?$CObjArray@E@@QAEXI@Z']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '38h']
call ['?Alloc@?$CObjArray@I@@QAEXI@Z']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '2Ch']
call ['?Alloc@?$CObjArray@I@@QAEXI@Z']
lea ['ecx,', '[ebp+var_3C]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['[ebp+var_58],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_60],', 'ecx']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_1804']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_14]']
jnb ['loc_1CF0']
mov ['[ebp+var_64],', '0']
mov ['[ebp+var_68],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx+38h]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
mov ['esi,', 'eax']
sub ['esi,', '[ebp+Src]']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '38h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['edx,', '[ebp+var_5C]']
mov ['[eax+edx*4],', 'esi']
mov ['[ebp+var_6C],', '0']
mov ['ecx,', '[ebp+var_60]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_185D']
cmp ['[ebp+var_70],', '40h']
jbe ['short', 'loc_1862']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_1874']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
cmp ['ecx,', '[ebp+var_70]']
jnb ['loc_1AB1']
mov ['ecx,', '[ebp+var_60]']
call ['?ReadByte@CInByte2@N7z@NArchive@@QAEEXZ']
mov ['byte', 'ptr', '[ebp+var_7C+7],', 'al']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_7C+7]']
and ['edx,', '0C0h']
jz ['short', 'loc_189C']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_7C+7]']
and ['eax,', '0Fh']
mov ['dword', 'ptr', '[ebp+var_7C],', 'eax']
cmp ['dword', 'ptr', '[ebp+var_7C],', '8']
jbe ['short', 'loc_18B1']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+var_60]']
call ['?GetRem@CInByte2@N7z@NArchive@@QBEIXZ']
cmp ['dword', 'ptr', '[ebp+var_7C],', 'eax']
jbe ['short', 'loc_18C3']
call ['?ThrowEndOfData@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+var_60]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_88],', '0']
mov ['[ebp+var_84],', '0']
mov ['[ebp+var_8C],', '0']
jmp ['short', 'loc_18FD']
mov ['ecx,', '[ebp+var_8C]']
add ['ecx,', '1']
mov ['[ebp+var_8C],', 'ecx']
mov ['edx,', '[ebp+var_8C]']
cmp ['edx,', 'dword', 'ptr', '[ebp+var_7C]']
jnb ['short', 'loc_193E']
mov ['eax,', '[ebp+var_88]']
mov ['edx,', '[ebp+var_84]']
mov ['cl,', '8']
call ['__allshl']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['edx,', '[ebp+var_80]']
add ['edx,', '[ebp+var_8C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cdq
or ['ecx,', 'eax']
or ['esi,', 'edx']
mov ['[ebp+var_88],', 'ecx']
mov ['[ebp+var_84],', 'esi']
jmp ['short', 'loc_18EE']
mov ['eax,', 'dword', 'ptr', '[ebp+var_7C]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
call ['?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '4Ch']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['eax,', '80h']
jnb ['short', 'loc_1978']
mov ['edx,', '[ebp+var_84]']
push ['edx']
mov ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '4Ch']
call ['?AddToUniqueSorted@?$CRecordVector@_K@@QAEI_K@Z']
mov ['dword', 'ptr', '[ebp+var_94+4],', '1']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_7C+7]']
and ['ecx,', '10h']
jz ['short', 'loc_19B9']
mov ['ecx,', '[ebp+var_60]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['dword', 'ptr', '[ebp+var_94+4],', 'eax']
cmp ['dword', 'ptr', '[ebp+var_94+4],', '40h']
jbe ['short', 'loc_19A7']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+var_60]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
cmp ['eax,', '1']
jz ['short', 'loc_19B9']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['edx,', '[ebp+var_6C]']
add ['edx,', 'dword', 'ptr', '[ebp+var_94+4]']
mov ['[ebp+var_6C],', 'edx']
cmp ['[ebp+var_6C],', '40h']
jbe ['short', 'loc_19D0']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_7C+7]']
and ['eax,', '20h']
jz ['loc_1AAC']
mov ['ecx,', '[ebp+var_60]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['dword', 'ptr', '[ebp+var_94],', 'eax']
mov ['ecx,', '[ebp+var_60]']
call ['?GetRem@CInByte2@N7z@NArchive@@QBEIXZ']
cmp ['dword', 'ptr', '[ebp+var_94],', 'eax']
jbe ['short', 'loc_1A00']
call ['?ThrowEndOfData@N7z@NArchive@@YGXXZ']
cmp ['[ebp+var_88],', '21h']
jnz ['short', 'loc_1A4E']
cmp ['[ebp+var_84],', '0']
jnz ['short', 'loc_1A4E']
cmp ['dword', 'ptr', '[ebp+var_94],', '1']
jnz ['short', 'loc_1A4E']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx+38h]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
mov ['dl,', '[eax]']
mov ['[ebp+var_95],', 'dl']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+44h]']
movzx ['edx,', '[ebp+var_95]']
cmp ['ecx,', 'edx']
jge ['short', 'loc_1A4C']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[ebp+var_95]']
mov ['[eax+44h],', 'cl']
jmp ['short', 'loc_1A9A']
cmp ['[ebp+var_88],', '30101h']
jnz ['short', 'loc_1A9A']
cmp ['[ebp+var_84],', '0']
jnz ['short', 'loc_1A9A']
cmp ['dword', 'ptr', '[ebp+var_94],', '5']
jnz ['short', 'loc_1A9A']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx+38h]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
mov ['eax,', '[eax+1]']
mov ['[ebp+var_9C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+48h]']
cmp ['edx,', '[ebp+var_9C]']
jnb ['short', 'loc_1A9A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_9C]']
mov ['[eax+48h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_94]']
xor ['eax,', 'eax']
push ['eax']
push ['edx']
mov ['ecx,', '[ebp+var_60]']
call ['?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z']
jmp ['loc_186B']
cmp ['[ebp+var_70],', '1']
jnz ['short', 'loc_1AD0']
cmp ['[ebp+var_6C],', '1']
jnz ['short', 'loc_1AD0']
mov ['[ebp+var_64],', '0']
mov ['[ebp+var_68],', '1']
jmp ['loc_1C9D']
mov ['ecx,', '[ebp+var_70]']
sub ['ecx,', '1']
mov ['[ebp+var_A4],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
cmp ['edx,', '[ebp+var_A4]']
jnb ['short', 'loc_1AEC']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['?BoolVector_Fill_False@N7z@NArchive@@YGXAAV?$CRecordVector@_N@@I@Z']
mov ['edx,', '[ebp+var_70]']
push ['edx']
lea ['eax,', '[ebp+var_50]']
push ['eax']
call ['?BoolVector_Fill_False@N7z@NArchive@@YGXAAV?$CRecordVector@_N@@I@Z']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_1B21']
mov ['ecx,', '[ebp+var_A0]']
add ['ecx,', '1']
mov ['[ebp+var_A0],', 'ecx']
mov ['edx,', '[ebp+var_A0]']
cmp ['edx,', '[ebp+var_A4]']
jnb ['loc_1BC4']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadNum@CInArchive@N7z@NArchive@@AAEIXZ']
mov ['[ebp+var_A8],', 'eax']
mov ['eax,', '[ebp+var_A8]']
cmp ['eax,', '[ebp+var_6C]']
jnb ['short', 'loc_1B62']
mov ['ecx,', '[ebp+var_A8]']
push ['ecx']
lea ['ecx,', '[ebp+var_3C]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['short', 'loc_1B67']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['eax,', '[ebp+var_A8]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['byte', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadNum@CInArchive@N7z@NArchive@@AAEIXZ']
mov ['[ebp+var_A8],', 'eax']
mov ['ecx,', '[ebp+var_A8]']
cmp ['ecx,', '[ebp+var_70]']
jnb ['short', 'loc_1BA8']
mov ['edx,', '[ebp+var_A8]']
push ['edx']
lea ['ecx,', '[ebp+var_50]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_1BAD']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+var_A8]']
push ['ecx']
lea ['ecx,', '[ebp+var_50]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['byte', 'ptr', '[eax],', '1']
jmp ['loc_1B12']
mov ['edx,', '[ebp+var_6C]']
sub ['edx,', '[ebp+var_A4]']
mov ['[ebp+var_68],', 'edx']
cmp ['[ebp+var_68],', '1']
jz ['short', 'loc_1C44']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_1BF1']
mov ['eax,', '[ebp+var_A0]']
add ['eax,', '1']
mov ['[ebp+var_A0],', 'eax']
mov ['ecx,', '[ebp+var_A0]']
cmp ['ecx,', '[ebp+var_68]']
jnb ['short', 'loc_1C44']
mov ['ecx,', '[ebp+var_60]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
mov ['[ebp+var_AC],', 'eax']
mov ['edx,', '[ebp+var_AC]']
cmp ['edx,', '[ebp+var_6C]']
jnb ['short', 'loc_1C2B']
mov ['eax,', '[ebp+var_AC]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1C30']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['edx,', '[ebp+var_AC]']
push ['edx']
lea ['ecx,', '[ebp+var_3C]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['byte', 'ptr', '[eax],', '1']
jmp ['short', 'loc_1BE2']
mov ['[ebp+var_A0],', '0']
jmp ['short', 'loc_1C5F']
mov ['eax,', '[ebp+var_A0]']
add ['eax,', '1']
mov ['[ebp+var_A0],', 'eax']
mov ['ecx,', '[ebp+var_A0]']
cmp ['ecx,', '[ebp+var_70]']
jnb ['short', 'loc_1C8D']
mov ['edx,', '[ebp+var_A0]']
push ['edx']
lea ['ecx,', '[ebp+var_50]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jnz ['short', 'loc_1C8B']
mov ['ecx,', '[ebp+var_A0]']
mov ['[ebp+var_64],', 'ecx']
jmp ['short', 'loc_1C8D']
jmp ['short', 'loc_1C50']
mov ['edx,', '[ebp+var_A0]']
cmp ['edx,', '[ebp+var_70]']
jnz ['short', 'loc_1C9D']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '2Ch']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_18]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+var_70]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '30h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_58]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_58]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '34h']
call ['??B?$CObjArray@E@@QAEPAEXZ']
mov ['ecx,', '[ebp+var_5C]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_64]']
mov ['[eax+ecx],', 'dl']
jmp ['loc_17FB']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+38h]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
sub ['eax,', '[ebp+Src]']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '2Ch']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_18]']
mov ['[eax+ecx*4],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '30h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_58]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+38h]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
mov ['esi,', 'eax']
sub ['esi,', '[ebp+Src]']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '38h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+ecx*4],', 'esi']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '3Ch']
call ['?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
push ['0']
push ['0Ch']
mov ['ecx,', '[ebp+var_10]']
call ['?WaitId@CInArchive@N7z@NArchive@@AAEX_K@Z']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['?Alloc@?$CObjArray@_K@@QAEXI@Z']
mov ['[ebp+var_B4],', '0']
jmp ['short', 'loc_1DC0']
mov ['edx,', '[ebp+var_B4]']
add ['edx,', '1']
mov ['[ebp+var_B4],', 'edx']
mov ['eax,', '[ebp+var_B4]']
cmp ['eax,', '[ebp+var_18]']
jnb ['short', 'loc_1DF1']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadNumber@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['esi,', 'eax']
mov ['edi,', 'edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
call ['??B?$CObjArray@_K@@QAEPA_KXZ']
mov ['ecx,', '[ebp+var_B4]']
mov ['[eax+ecx*8],', 'esi']
mov ['[eax+ecx*8+4],', 'edi']
jmp ['short', 'loc_1DB1']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_BC],', 'eax']
mov ['[ebp+var_B8],', 'edx']
mov ['edx,', '[ebp+var_BC]']
or ['edx,', '[ebp+var_B8]']
jnz ['short', 'loc_1E15']
jmp ['short', 'loc_1E46']
cmp ['[ebp+var_BC],', '0Ah']
jnz ['short', 'loc_1E3C']
cmp ['[ebp+var_B8],', '0']
jnz ['short', 'loc_1E3C']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadHashDigests@CInArchive@N7z@NArchive@@AAEXIAAUCUInt32DefVector@23@@Z']
jmp ['short', 'loc_1DF1']
mov ['ecx,', '[ebp+var_10]']
call ['?SkipData@CInArchive@N7z@NArchive@@AAEXXZ']
jmp ['short', 'loc_1DF1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN66']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '0BCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?BoolVector_Fill_False@N7z@NArchive@@YGXAAV?$CRecordVector@_N@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1F0F']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_4]']
jnb ['short', 'loc_1F22']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1F06']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadSubStreamsInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@AAV?$CRecordVector@_K@@AAUCUInt32DefVector@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReadSubStreamsInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@AAV?$CRecordVector@_K@@AAUCUInt32DefVector@23@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '78h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_84]']
mov ['ecx,', '1Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['?Alloc@?$CObjArray@I@@QAEXI@Z']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1FA2']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_1FC4']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['edx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+edx*4],', '1']
jmp ['short', 'loc_1F99']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_1C],', '0Dh']
jnz ['short', 'loc_201A']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_201A']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1FF0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx+4]']
jnb ['short', 'loc_2018']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadNum@CInArchive@N7z@NArchive@@AAEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+ecx*4],', 'esi']
jmp ['short', 'loc_1FE7']
jmp ['short', 'loc_1FC4']
cmp ['[ebp+var_1C],', '0Ah']
jnz ['short', 'loc_2026']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_203A']
cmp ['[ebp+var_1C],', '9']
jnz ['short', 'loc_2032']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_203A']
mov ['edx,', '[ebp+var_1C]']
or ['edx,', '[ebp+var_18]']
jnz ['short', 'loc_203C']
jmp ['short', 'loc_2049']
mov ['ecx,', '[ebp+var_10]']
call ['?SkipData@CInArchive@N7z@NArchive@@AAEXXZ']
jmp ['loc_1FC4']
cmp ['[ebp+var_1C],', '9']
jnz ['loc_215F']
cmp ['[ebp+var_18],', '0']
jnz ['loc_215F']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_206F']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx+4]']
jnb ['loc_214F']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_209A']
jmp ['short', 'loc_2066']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_20BA']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[ebp+var_20]']
jnb ['short', 'loc_210B']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadNumber@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_30],', 'edx']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ebp+var_24]']
adc ['edx,', '[ebp+var_30]']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_30]']
ja ['short', 'loc_2109']
jb ['short', 'loc_2104']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+var_34]']
jnb ['short', 'loc_2109']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
jmp ['short', 'loc_20B1']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetFolderUnpackSize@CFolders@N7z@NArchive@@QBE_KI@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_24]']
ja ['short', 'loc_2134']
jb ['short', 'loc_212F']
mov ['ecx,', '[ebp+var_3C]']
cmp ['ecx,', '[ebp+var_28]']
jnb ['short', 'loc_2134']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
mov ['edx,', '[ebp+var_3C]']
sub ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_38]']
sbb ['eax,', '[ebp+var_24]']
push ['eax']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
jmp ['loc_2066']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_21B9']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2171']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[edx+4]']
jnb ['short', 'loc_21B9']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_40],', 'edx']
cmp ['[ebp+var_40],', '1']
jbe ['short', 'loc_219B']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
cmp ['[ebp+var_40],', '1']
jnz ['short', 'loc_21B7']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?GetFolderUnpackSize@CFolders@N7z@NArchive@@QBE_KI@Z']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
jmp ['short', 'loc_2168']
mov ['[ebp+var_44],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_21D2']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[edx+4]']
jnb ['short', 'loc_2218']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_48],', 'edx']
cmp ['[ebp+var_48],', '1']
jnz ['short', 'loc_220D']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?ValidAndDefined@CUInt32DefVector@N7z@NArchive@@QBE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2216']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '[ebp+var_48]']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_21C9']
mov ['eax,', '[ebp+var_1C]']
or ['eax,', '[ebp+var_18]']
jnz ['short', 'loc_2225']
jmp ['loc_23C7']
cmp ['[ebp+var_1C],', '0Ah']
jnz ['loc_23AC']
cmp ['[ebp+var_18],', '0']
jnz ['loc_23AC']
lea ['ecx,', '[ebp+var_58]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_58]']
push ['ecx']
mov ['edx,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadBoolVector2@CInArchive@N7z@NArchive@@AAEXIAAV?$CRecordVector@_N@@@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?ClearAndSetSize@CUInt32DefVector@N7z@NArchive@@QAEXI@Z']
mov ['[ebp+var_60],', '0']
mov ['[ebp+var_64],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2289']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx+4]']
jnb ['loc_239B']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_68],', 'edx']
cmp ['[ebp+var_68],', '1']
jnz ['short', 'loc_2309']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?ValidAndDefined@CUInt32DefVector@N7z@NArchive@@QBE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2309']
mov ['edx,', '[ebp+var_60]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['byte', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['edx,', '[esi]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
jmp ['loc_2396']
mov ['[ebp+var_6C],', '0']
jmp ['short', 'loc_231B']
mov ['ecx,', '[ebp+var_6C]']
add ['ecx,', '1']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
cmp ['edx,', '[ebp+var_68]']
jnb ['short', 'loc_2396']
mov ['eax,', '[ebp+var_64]']
mov ['[ebp+var_84],', 'eax']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '1']
mov ['[ebp+var_64],', 'ecx']
mov ['edx,', '[ebp+var_84]']
push ['edx']
lea ['ecx,', '[ebp+var_58]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['al,', '[eax]']
mov ['[ebp+var_6D],', 'al']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['dl,', '[ebp+var_6D]']
mov ['[eax],', 'dl']
mov ['[ebp+var_74],', '0']
movzx ['eax,', '[ebp+var_6D]']
test ['eax,', 'eax']
jz ['short', 'loc_2374']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadUInt32@CInArchive@N7z@NArchive@@AAEIXZ']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['edx,', '[ebp+var_74]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
jmp ['loc_2312']
jmp ['loc_2280']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
jmp ['short', 'loc_23B4']
mov ['ecx,', '[ebp+var_10]']
call ['?SkipData@CInArchive@N7z@NArchive@@AAEXXZ']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
jmp ['loc_2218']
mov ['ecx,', '[ebp+arg_8]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['esi,', 'eax']
jz ['loc_24D6']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?ClearAndSetSize@CUInt32DefVector@N7z@NArchive@@QAEXI@Z']
mov ['[ebp+var_78],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_240B']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[edx+4]']
jnb ['loc_24D6']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_7C],', 'edx']
cmp ['[ebp+var_7C],', '1']
jnz ['short', 'loc_2488']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?ValidAndDefined@CUInt32DefVector@N7z@NArchive@@QBE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2488']
mov ['edx,', '[ebp+var_78]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['byte', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_78]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['edx,', '[esi]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '1']
mov ['[ebp+var_78],', 'eax']
jmp ['short', 'loc_24D1']
mov ['[ebp+var_80],', '0']
jmp ['short', 'loc_249A']
mov ['ecx,', '[ebp+var_80]']
add ['ecx,', '1']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+var_80]']
cmp ['edx,', '[ebp+var_7C]']
jnb ['short', 'loc_24D1']
mov ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_78]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['dword', 'ptr', '[eax],', '0']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '1']
mov ['[ebp+var_78],', 'edx']
jmp ['short', 'loc_2491']
jmp ['loc_2402']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN67']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '84h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ReadStreamsInfo@CInArchive@N7z@NArchive@@AAEXPBV?$CObjectVector@V?$CBuffer@E@@@@AA_KAAUCFolders@23@AAV?$CRecordVector@_K@@AAUCUInt32DefVector@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_C],', '6']
jnz ['short', 'loc_258E']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_258E']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadNumber@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadPackInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_C],', '7']
jnz ['short', 'loc_25B8']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_25B8']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadUnpackInfo@CInArchive@N7z@NArchive@@AAEXPBV?$CObjectVector@V?$CBuffer@E@@@@AAUCFolders@23@@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['edx,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jz ['short', 'loc_25F5']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QAEPA_KXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_25F5']
push ['1']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '8']
call ['?Alloc@?$CObjArray@_K@@QAEXI@Z']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '8']
call ['??B?$CObjArray@_K@@QAEPA_KXZ']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
cmp ['[ebp+var_C],', '8']
jnz ['short', 'loc_2625']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2625']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadSubStreamsInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@AAV?$CRecordVector@_K@@AAUCUInt32DefVector@23@@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_2681']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '24h']
call ['?Alloc@?$CObjArray@I@@QAEXI@Z']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_2649']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_2681']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+edx*4],', '1']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?GetFolderUnpackSize@CFolders@N7z@NArchive@@QBE_KI@Z']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
jmp ['short', 'loc_2640']
mov ['ecx,', '[ebp+var_C]']
or ['ecx,', '[ebp+var_8]']
jz ['short', 'loc_268E']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?ReadBoolVector@CInArchive@N7z@NArchive@@AAEXIAAV?$CRecordVector@_N@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z']
mov ['byte', 'ptr', '[ebp+var_8+3],', '0']
mov ['byte', 'ptr', '[ebp+var_8+2],', '0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_26ED']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+arg_0]']
jnb ['short', 'loc_272E']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+2]']
test ['eax,', 'eax']
jnz ['short', 'loc_270C']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte@CInArchive@N7z@NArchive@@AAEEXZ']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
mov ['byte', 'ptr', '[ebp+var_8+2],', '80h']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_8+2]']
and ['ecx,', 'edx']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_10]']
mov ['[eax],', 'cl']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8+2]']
shr ['cl,', '1']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'cl']
jmp ['short', 'loc_26E4']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadBoolVector2@CInArchive@N7z@NArchive@@AAEXIAAV?$CRecordVector@_N@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte@CInArchive@N7z@NArchive@@AAEEXZ']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_277F']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBoolVector@CInArchive@N7z@NArchive@@AAEXIAAV?$CRecordVector@_N@@@Z']
jmp ['short', 'loc_27BD']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_27AA']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+arg_0]']
jnb ['short', 'loc_27BD']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax],', '1']
jmp ['short', 'loc_27A1']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadUInt64DefVector@CInArchive@N7z@NArchive@@AAEXABV?$CObjectVector@V?$CBuffer@E@@@@AAUCUInt64DefVector@23@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReadUInt64DefVector@CInArchive@N7z@NArchive@@AAEXABV?$CObjectVector@V?$CBuffer@E@@@@AAUCUInt64DefVector@23@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadBoolVector2@CInArchive@N7z@NArchive@@AAEXIAAV?$CRecordVector@_N@@@Z']
lea ['ecx,', '[ebp+var_1C]']
call ['??0CStreamSwitch@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@PBV?$CObjectVector@V?$CBuffer@E@@@@@Z']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0Ch']
call ['?ClearAndSetSize@?$CRecordVector@_K@@QAEXI@Z']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['[ebp+var_24],', 'eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_2877']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_8]']
jnb ['short', 'loc_28BD']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_30],', '0']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_28A8']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadUInt64@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_34]']
mov ['[ecx+eax*8],', 'edx']
mov ['edx,', '[ebp+var_30]']
mov ['[ecx+eax*8+4],', 'edx']
jmp ['short', 'loc_286E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_158]']
mov ['ecx,', '53h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['ecx,', '[ebp+var_6C]']
call ['??0CFolders@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_80]']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_A0]']
call ['??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['eax,', '[ebp+var_A0]']
push ['eax']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
lea ['edx,', '[ebp+var_6C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadStreamsInfo@CInArchive@N7z@NArchive@@AAEXPBV?$CObjectVector@V?$CBuffer@E@@@@AA_KAAUCFolders@23@AAV?$CRecordVector@_K@@AAUCUInt32DefVector@23@@Z']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+78h]']
push ['edx']
lea ['ecx,', '[ebp+var_10C]']
call ['??0CDecoder@N7z@NArchive@@QAE@_N@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['[ebp+var_114],', '0']
jmp ['short', 'loc_29DA']
mov ['eax,', '[ebp+var_114]']
add ['eax,', '1']
mov ['[ebp+var_114],', 'eax']
mov ['ecx,', '[ebp+var_114]']
cmp ['ecx,', '[ebp+var_68]']
jnb ['loc_2C1A']
mov ['ecx,', '[ebp+arg_C]']
call ['?AddNew@?$CObjectVector@V?$CBuffer@E@@@@QAEAAV?$CBuffer@E@@XZ']
mov ['[ebp+var_118],', 'eax']
mov ['edx,', '[ebp+var_114]']
push ['edx']
lea ['ecx,', '[ebp+var_6C]']
call ['?GetFolderUnpackSize@CFolders@N7z@NArchive@@QBE_KI@Z']
mov ['[ebp+var_120],', 'eax']
mov ['[ebp+var_11C],', 'edx']
mov ['eax,', '[ebp+var_120]']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+var_124]']
xor ['edx,', 'edx']
mov ['[ebp+var_154],', 'ecx']
mov ['[ebp+var_150],', 'edx']
mov ['eax,', '[ebp+var_154]']
cmp ['eax,', '[ebp+var_120]']
jnz ['short', 'loc_2A4E']
mov ['ecx,', '[ebp+var_150]']
cmp ['ecx,', '[ebp+var_11C]']
jz ['short', 'loc_2A53']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['edx,', '[ebp+var_124]']
push ['edx']
mov ['ecx,', '[ebp+var_118]']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
push ['14h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_144],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
cmp ['[ebp+var_144],', '0']
jz ['short', 'loc_2A95']
mov ['ecx,', '[ebp+var_144]']
call ['??0CBufPtrSeqOutStream@@QAE@XZ']
mov ['[ebp+var_158],', 'eax']
jmp ['short', 'loc_2A9F']
mov ['[ebp+var_158],', '0']
mov ['eax,', '[ebp+var_158]']
mov ['[ebp+var_140],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_140]']
mov ['[ebp+var_128],', 'ecx']
mov ['edx,', '[ebp+var_128]']
push ['edx']
lea ['ecx,', '[ebp+var_130]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['eax,', '[ebp+var_124]']
push ['eax']
mov ['ecx,', '[ebp+var_118]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_128]']
call ['?Init@CBufPtrSeqOutStream@@QAEXPAEI@Z']
push ['1']
push ['0']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
push ['0']
push ['0']
lea ['ecx,', '[ebp+var_130]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+var_114]']
push ['edx']
lea ['eax,', '[ebp+var_6C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
adc ['eax,', '[ecx+4]']
push ['eax']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_10C]']
call ['?Decode@CDecoder@N7z@NArchive@@QAEJPAUIInStream@@_KABUCFolders@23@IPB_KPAUISequentialOutStream@@PAUICompressProgressInfo@@PAPAUISequentialInStream@@PAUICryptoGetTextPassword@@AA_N8AAVUString@@_NI@Z']
mov ['[ebp+var_138],', 'eax']
mov ['ecx,', '[ebp+var_138]']
mov ['[ebp+var_13C],', 'ecx']
cmp ['[ebp+var_13C],', '0']
jz ['short', 'loc_2BBE']
mov ['edx,', '[ebp+var_13C]']
mov ['[ebp+var_148],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_130]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_6C]']
call ['??1CFolders@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_148]']
jmp ['loc_2C87']
mov ['eax,', '[ebp+var_114]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?ValidAndDefined@CUInt32DefVector@N7z@NArchive@@QBE_NI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C06']
mov ['ecx,', '[ebp+var_118]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['edx,', '[ebp+var_124]']
mov ['ecx,', 'eax']
call ['@CrcCalc@8']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+var_114]']
push ['edx']
lea ['ecx,', '[ebp+var_54]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
cmp ['esi,', '[eax]']
jz ['short', 'loc_2C06']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_130]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
jmp ['loc_29CB']
lea ['ecx,', '[ebp+var_64]']
call ['??B?$CObjArray@_K@@QAEPA_KXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_6C]']
mov ['esi,', '[ecx+70h]']
add ['esi,', '[eax+edx*8]']
mov ['ecx,', '[ecx+74h]']
adc ['ecx,', '[eax+edx*8+4]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+70h],', 'esi']
mov ['[edx+74h],', 'ecx']
mov ['[ebp+var_14C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_10C]']
call ['??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_A0]']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_6C]']
call ['??1CFolders@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_14C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '158h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
endp
?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '148h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_154]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_18],', '2']
jnz ['short', 'loc_2DAA']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_2DAA']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0E0h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadArchiveProperties@CInArchive@N7z@NArchive@@AAEXAAUCInArchiveInfo@23@@Z']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
lea ['ecx,', '[ebp+var_28]']
call ['??0?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '3']
jnz ['loc_2E70']
cmp ['[ebp+var_14],', '0']
jnz ['loc_2E70']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '100h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0F4h]']
push ['edx']
mov ['eax,', '[ecx+0F0h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_34],', 'ecx']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_2E35']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_144],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['eax,', '[ebp+var_144]']
jmp ['loc_37FD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+100h]']
add ['edx,', '[ecx+0F0h]']
mov ['eax,', '[eax+104h]']
adc ['eax,', '[ecx+0F4h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+100h],', 'edx']
mov ['[ecx+104h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
lea ['ecx,', '[ebp+var_44]']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_64]']
call ['??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_18],', '4']
jnz ['short', 'loc_2EF1']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_2EF1']
lea ['edx,', '[ebp+var_64]']
push ['edx']
lea ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0F8h']
push ['edx']
lea ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadStreamsInfo@CInArchive@N7z@NArchive@@AAEXPBV?$CObjectVector@V?$CBuffer@E@@@@AA_KAAUCFolders@23@AAV?$CRecordVector@_K@@AAUCUInt32DefVector@23@@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+0F8h]']
add ['eax,', '[edx+0F0h]']
mov ['ecx,', '[ecx+0FCh]']
adc ['ecx,', '[edx+0F4h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0F8h],', 'eax']
mov ['[edx+0FCh],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '58h']
call ['?Clear@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ']
cmp ['[ebp+var_18],', '5']
jnz ['loc_37BE']
cmp ['[ebp+var_14],', '0']
jnz ['loc_37BE']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadNum@CInArchive@N7z@NArchive@@AAEIXZ']
mov ['[ebp+var_6C],', 'eax']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '58h']
call ['?ClearAndSetSize@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXI@Z']
push ['0']
push ['9']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '108h']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
push ['0']
push ['6']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '108h']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
cmp ['[ebp+var_6C],', '0']
jbe ['short', 'loc_2F75']
lea ['ecx,', '[ebp+var_64]']
call ['?IsEmpty@?$CRecordVector@_N@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2F75']
push ['0']
push ['0Ah']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '108h']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
lea ['ecx,', '[ebp+var_80]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['edx,', '[ebp+var_6C]']
push ['edx']
lea ['eax,', '[ebp+var_80]']
push ['eax']
call ['?BoolVector_Fill_False@N7z@NArchive@@YGXAAV?$CRecordVector@_N@@I@Z']
lea ['ecx,', '[ebp+var_94]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_A8]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['[ebp+var_B0],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_B8],', 'eax']
mov ['[ebp+var_B4],', 'edx']
mov ['ecx,', '[ebp+var_B8]']
or ['ecx,', '[ebp+var_B4]']
jnz ['short', 'loc_2FDD']
jmp ['loc_3589']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadNumber@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_C0],', 'eax']
mov ['[ebp+var_BC],', 'edx']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx+38h]']
call ['?GetRem@CInByte2@N7z@NArchive@@QBEIXZ']
xor ['ecx,', 'ecx']
mov ['[ebp+var_150],', 'eax']
mov ['[ebp+var_14C],', 'ecx']
mov ['edx,', '[ebp+var_BC]']
cmp ['edx,', '[ebp+var_14C]']
jb ['short', 'loc_302D']
ja ['short', 'loc_3028']
mov ['eax,', '[ebp+var_C0]']
cmp ['eax,', '[ebp+var_150]']
jbe ['short', 'loc_302D']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
lea ['ecx,', '[ebp+var_CC]']
call ['??0CStreamSwitch@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
push ['1']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx+38h]']
call ['?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ']
push ['eax']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_CC]']
call ['?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@PBEI_N@Z']
mov ['[ebp+var_D1],', '1']
mov ['[ebp+var_D2],', '1']
cmp ['[ebp+var_B4],', '0']
ja ['short', 'loc_3083']
cmp ['[ebp+var_B8],', '40000000h']
jbe ['short', 'loc_308F']
mov ['[ebp+var_D2],', '0']
jmp ['loc_3518']
mov ['ecx,', '[ebp+var_B8]']
mov ['[ebp+var_154],', 'ecx']
mov ['edx,', '[ebp+var_154]']
sub ['edx,', '0Eh']
mov ['[ebp+var_154],', 'edx']
cmp ['[ebp+var_154],', '0Bh']
ja ['$LN17_0']
mov ['eax,', '[ebp+var_154]']
jmp ['ds:$LN90[eax*4]']
lea ['ecx,', '[ebp+var_E0]']
call ['??0CStreamSwitch@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
lea ['ecx,', '[ebp+var_E0]']
call ['?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@PBV?$CObjectVector@V?$CBuffer@E@@@@@Z']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+38h]']
call ['?GetRem@CInByte2@N7z@NArchive@@QBEIXZ']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0D0h']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
mov ['edx,', '[ebp+var_E8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0D0h']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadBytes@CInArchive@N7z@NArchive@@AAEXPAEI@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '58h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0D8h']
call ['?Alloc@?$CObjArray@I@@QAEXI@Z']
mov ['[ebp+var_EC],', '0']
mov ['[ebp+var_F0],', '0']
jmp ['short', 'loc_316C']
mov ['eax,', '[ebp+var_F0]']
add ['eax,', '1']
mov ['[ebp+var_F0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '58h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_F0],', 'eax']
jnb ['loc_323D']
mov ['ecx,', '[ebp+var_E8]']
sub ['ecx,', '[ebp+var_EC]']
shr ['ecx,', '1']
mov ['[ebp+var_F4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0D0h']
call ['??B?$CBuffer@E@@QAEPAEXZ']
add ['eax,', '[ebp+var_EC]']
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_FC],', '0']
jmp ['short', 'loc_31CC']
mov ['edx,', '[ebp+var_FC]']
add ['edx,', '1']
mov ['[ebp+var_FC],', 'edx']
mov ['eax,', '[ebp+var_FC]']
cmp ['eax,', '[ebp+var_F4]']
jnb ['short', 'loc_31F0']
mov ['ecx,', '[ebp+var_FC]']
mov ['edx,', '[ebp+var_F8]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
test ['eax,', 'eax']
jz ['short', 'loc_31F0']
jmp ['short', 'loc_31BD']
mov ['ecx,', '[ebp+var_FC]']
cmp ['ecx,', '[ebp+var_F4]']
jnz ['short', 'loc_3203']
call ['?ThrowEndOfData@N7z@NArchive@@YGXXZ']
mov ['esi,', '[ebp+var_EC]']
shr ['esi,', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0D8h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['edx,', '[ebp+var_F0]']
mov ['[eax+edx*4],', 'esi']
mov ['eax,', '[ebp+var_FC]']
mov ['ecx,', '[ebp+var_EC]']
lea ['edx,', '[ecx+eax*2+2]']
mov ['[ebp+var_EC],', 'edx']
jmp ['loc_315D']
mov ['esi,', '[ebp+var_EC]']
shr ['esi,', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0D8h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_F0]']
mov ['[eax+ecx*4],', 'esi']
mov ['edx,', '[ebp+var_EC]']
cmp ['edx,', '[ebp+var_E8]']
jz ['short', 'loc_3271']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+3Ch],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_E0]']
call ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
jmp ['loc_3518']
lea ['ecx,', '[ebp+var_10C]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_10C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '58h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadBoolVector2@CInArchive@N7z@NArchive@@AAEXIAAV?$CRecordVector@_N@@@Z']
lea ['ecx,', '[ebp+var_11C]']
call ['??0CStreamSwitch@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_11C]']
call ['?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@PBV?$CObjectVector@V?$CBuffer@E@@@@@Z']
mov ['[ebp+var_70],', '0']
jmp ['short', 'loc_32E3']
mov ['ecx,', '[ebp+var_70]']
add ['ecx,', '1']
mov ['[ebp+var_70],', 'ecx']
mov ['edx,', '[ebp+var_70]']
cmp ['edx,', '[ebp+var_6C]']
jnb ['short', 'loc_333B']
mov ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
lea ['ecx,', '[ebp+var_10C]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['edx,', '[ebp+var_124]']
mov ['al,', '[eax]']
mov ['[edx+13h],', 'al']
mov ['ecx,', '[ebp+var_124]']
movzx ['edx,', 'byte', 'ptr', '[ecx+13h]']
test ['edx,', 'edx']
jz ['short', 'loc_3339']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadUInt32@CInArchive@N7z@NArchive@@AAEIXZ']
mov ['ecx,', '[ebp+var_124]']
mov ['[ecx+8],', 'eax']
jmp ['short', 'loc_32DA']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_11C]']
call ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_10C]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
jmp ['loc_3518']
lea ['edx,', '[ebp+var_80]']
push ['edx']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadBoolVector@CInArchive@N7z@NArchive@@AAEXIAAV?$CRecordVector@_N@@@Z']
mov ['[ebp+var_B0],', '0']
mov ['[ebp+var_70],', '0']
jmp ['short', 'loc_338A']
mov ['ecx,', '[ebp+var_70]']
add ['ecx,', '1']
mov ['[ebp+var_70],', 'ecx']
lea ['ecx,', '[ebp+var_80]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+var_70],', 'eax']
jnb ['short', 'loc_33BB']
mov ['edx,', '[ebp+var_70]']
push ['edx']
lea ['ecx,', '[ebp+var_80]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_33B9']
mov ['ecx,', '[ebp+var_B0]']
add ['ecx,', '1']
mov ['[ebp+var_B0],', 'ecx']
jmp ['short', 'loc_3381']
mov ['edx,', '[ebp+var_B0]']
push ['edx']
lea ['eax,', '[ebp+var_94]']
push ['eax']
call ['?BoolVector_Fill_False@N7z@NArchive@@YGXAAV?$CRecordVector@_N@@I@Z']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
lea ['edx,', '[ebp+var_A8]']
push ['edx']
call ['?BoolVector_Fill_False@N7z@NArchive@@YGXAAV?$CRecordVector@_N@@I@Z']
jmp ['loc_3518']
lea ['eax,', '[ebp+var_94]']
push ['eax']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadBoolVector@CInArchive@N7z@NArchive@@AAEXIAAV?$CRecordVector@_N@@@Z']
jmp ['loc_3518']
lea ['edx,', '[ebp+var_A8]']
push ['edx']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadBoolVector@CInArchive@N7z@NArchive@@AAEXIAAV?$CRecordVector@_N@@@Z']
jmp ['loc_3518']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0ACh']
push ['edx']
lea ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadUInt64DefVector@CInArchive@N7z@NArchive@@AAEXABV?$CObjectVector@V?$CBuffer@E@@@@AAUCUInt64DefVector@23@I@Z']
jmp ['loc_3518']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '64h']
push ['edx']
lea ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadUInt64DefVector@CInArchive@N7z@NArchive@@AAEXABV?$CObjectVector@V?$CBuffer@E@@@@AAUCUInt64DefVector@23@I@Z']
jmp ['loc_3518']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '7Ch']
push ['edx']
lea ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadUInt64DefVector@CInArchive@N7z@NArchive@@AAEXABV?$CObjectVector@V?$CBuffer@E@@@@AAUCUInt64DefVector@23@I@Z']
jmp ['loc_3518']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '94h']
push ['edx']
lea ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadUInt64DefVector@CInArchive@N7z@NArchive@@AAEXABV?$CObjectVector@V?$CBuffer@E@@@@AAUCUInt64DefVector@23@I@Z']
jmp ['loc_3518']
mov ['[ebp+var_12C],', '0']
mov ['[ebp+var_128],', '0']
jmp ['short', 'loc_34C6']
mov ['ecx,', '[ebp+var_12C]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_128]']
adc ['edx,', '0']
mov ['[ebp+var_12C],', 'ecx']
mov ['[ebp+var_128],', 'edx']
mov ['eax,', '[ebp+var_128]']
cmp ['eax,', '[ebp+var_BC]']
ja ['short', 'loc_34FC']
jb ['short', 'loc_34E4']
mov ['ecx,', '[ebp+var_12C]']
cmp ['ecx,', '[ebp+var_C0]']
jnb ['short', 'loc_34FC']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadByte@CInArchive@N7z@NArchive@@AAEEXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_34FA']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+3Ch],', '1']
jmp ['short', 'loc_34A8']
mov ['[ebp+var_D1],', '0']
jmp ['short', 'loc_3518']
mov ['[ebp+var_D2],', '0']
mov ['cl,', '[ebp+var_D2]']
mov ['[ebp+var_D1],', 'cl']
movzx ['edx,', '[ebp+var_D2]']
test ['edx,', 'edx']
jz ['short', 'loc_354C']
movzx ['eax,', '[ebp+var_D1]']
test ['eax,', 'eax']
jz ['short', 'loc_354A']
mov ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['edx,', '[ebp+var_B8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '108h']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
jmp ['short', 'loc_3561']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+135h],', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx+38h]']
call ['?SkipRem@CInByte2@N7z@NArchive@@QAEXXZ']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx+38h]']
call ['?GetRem@CInByte2@N7z@NArchive@@QBEIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_3575']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_CC]']
call ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
jmp ['loc_2FB6']
mov ['ecx,', '[ebp+var_10]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
mov ['esi,', '[ebp+var_6C]']
sub ['esi,', '[ebp+var_B0]']
lea ['ecx,', '[ebp+var_44]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['esi,', 'eax']
jz ['short', 'loc_35B1']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['[ebp+var_130],', '0']
mov ['[ebp+var_134],', '0']
mov ['[ebp+var_138],', '0']
mov ['[ebp+var_70],', '0']
jmp ['short', 'loc_35E1']
mov ['eax,', '[ebp+var_70]']
add ['eax,', '1']
mov ['[ebp+var_70],', 'eax']
mov ['ecx,', '[ebp+var_70]']
cmp ['ecx,', '[ebp+var_B0]']
jnb ['short', 'loc_3613']
mov ['edx,', '[ebp+var_70]']
push ['edx']
lea ['ecx,', '[ebp+var_A8]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_3611']
mov ['ecx,', '[ebp+var_138]']
add ['ecx,', '1']
mov ['[ebp+var_138],', 'ecx']
jmp ['short', 'loc_35D8']
mov ['[ebp+var_70],', '0']
jmp ['short', 'loc_3625']
mov ['edx,', '[ebp+var_70]']
add ['edx,', '1']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+var_70]']
cmp ['eax,', '[ebp+var_6C]']
jnb ['loc_3794']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z']
mov ['[ebp+var_13C],', 'eax']
mov ['edx,', '[ebp+var_70]']
push ['edx']
lea ['ecx,', '[ebp+var_80]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_13C]']
mov ['[ecx+10h],', 'al']
mov ['edx,', '[ebp+var_13C]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+var_13C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+10h]']
test ['ecx,', 'ecx']
jz ['loc_3705']
mov ['edx,', '[ebp+var_13C]']
mov ['byte', 'ptr', '[edx+11h],', '0']
mov ['[ebp+var_13D],', '0']
mov ['eax,', '[ebp+var_134]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['ecx,', '[ebp+var_13C]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['eax,', '[eax+4]']
mov ['[ecx+4],', 'eax']
mov ['ecx,', '[ebp+var_134]']
push ['ecx']
lea ['ecx,', '[ebp+var_64]']
call ['?ValidAndDefined@CUInt32DefVector@N7z@NArchive@@QBE_NI@Z']
mov ['edx,', '[ebp+var_13C]']
mov ['[edx+12h],', 'al']
mov ['eax,', '[ebp+var_13C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+12h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_36F4']
mov ['edx,', '[ebp+var_134]']
push ['edx']
lea ['ecx,', '[ebp+var_58]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['ecx,', '[ebp+var_13C]']
mov ['edx,', '[eax]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[ebp+var_134]']
add ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
jmp ['short', 'loc_3770']
mov ['ecx,', '[ebp+var_130]']
push ['ecx']
lea ['ecx,', '[ebp+var_94]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['eax,', '[ebp+var_13C]']
mov ['[eax+11h],', 'dl']
mov ['ecx,', '[ebp+var_130]']
push ['ecx']
lea ['ecx,', '[ebp+var_A8]']
call ['??A?$CRecordVector@_N@@QAEAA_NI@Z']
mov ['dl,', '[eax]']
mov ['[ebp+var_13D],', 'dl']
mov ['eax,', '[ebp+var_130]']
add ['eax,', '1']
mov ['[ebp+var_130],', 'eax']
mov ['ecx,', '[ebp+var_13C]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_13C]']
mov ['byte', 'ptr', '[edx+12h],', '0']
cmp ['[ebp+var_138],', '0']
jz ['short', 'loc_378F']
movzx ['eax,', '[ebp+var_13D]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0C4h']
call ['?Add@?$CRecordVector@_N@@QAEI_N@Z']
jmp ['loc_361C']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_A8]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_94]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?FillLinks@CDbEx@N7z@NArchive@@QAEXXZ']
mov ['[ebp+var_148],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_64]']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['eax,', '[ebp+var_148]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN89']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '154h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?FillLinks@CDbEx@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '118h']
call ['?Alloc@?$CObjArray@I@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '58h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '11Ch']
call ['?Alloc@?$CObjArray@I@@QAEXI@Z']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_39CC']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '58h']
call ['?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_10],', 'eax']
jnb ['loc_3AC5']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '58h']
call ['??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax+10h]']
neg ['ecx']
sbb ['ecx,', 'ecx']
add ['ecx,', '1']
mov ['byte', 'ptr', '[ebp+var_14+3],', 'cl']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_3A6D']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_14+3]']
test ['edx,', 'edx']
jz ['short', 'loc_3A25']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '11Ch']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+ecx*4],', '0FFFFFFFFh']
jmp ['short', 'loc_39C3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+4]']
jb ['short', 'loc_3A35']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '118h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_10]']
mov ['[eax+ecx*4],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+ecx*4],', '0']
jz ['short', 'loc_3A62']
jmp ['short', 'loc_3A6D']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_3A25']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '11Ch']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_8]']
mov ['[eax+ecx*4],', 'edx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_14+3]']
test ['eax,', 'eax']
jz ['short', 'loc_3A91']
jmp ['loc_39C3']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+edx*4]']
jb ['short', 'loc_3AC0']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_C],', '0']
jmp ['loc_39C3']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_3AD4']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+4]']
jb ['short', 'loc_3AE1']
jmp ['short', 'loc_3B03']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '118h']
call ['??B?$CObjArray@I@@QAEPAIXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_10]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_3AD4']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadDatabase2@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReadDatabase2@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '304h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_310]']
mov ['ecx,', '0C1h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Clear@CDbEx@N7z@NArchive@@QAEXXZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+40h]']
mov ['[eax+0E8h],', 'edx']
mov ['ecx,', '[ecx+44h]']
mov ['[eax+0ECh],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+56h]']
mov ['[edx+0E0h],', 'cl']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+57h]']
mov ['[edx+0E1h],', 'cl']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0E0h]']
test ['eax,', 'eax']
jz ['short', 'loc_3BBA']
mov ['eax,', '1']
jmp ['loc_43B2']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+5Ch]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ecx+60h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ecx+68h]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+6Ch]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+58h]']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jnz ['loc_3EDB']
mov ['edx,', '[ebp+var_1C]']
or ['edx,', '[ebp+var_18]']
jnz ['loc_3EDB']
mov ['eax,', '[ebp+var_24]']
or ['eax,', '[ebp+var_20]']
jnz ['loc_3EDB']
cmp ['[ebp+var_28],', '0']
jnz ['loc_3EDB']
mov ['ecx,', '[ebp+var_14]']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_2E0],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
push ['1']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_2E0]']
push ['edx']
mov ['eax,', '[ebp+var_2E0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_3C5C']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_43B2']
mov ['[ebp+var_54],', '200h']
mov ['ecx,', '[ebp+var_14]']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_2E4],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_48]']
push ['eax']
push ['2']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_2E4]']
push ['ecx']
mov ['edx,', '[ebp+var_2E4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_260],', 'eax']
cmp ['[ebp+var_260],', '0']
jz ['short', 'loc_3CB2']
mov ['eax,', '[ebp+var_260]']
jmp ['loc_43B2']
mov ['edx,', '[ebp+var_48]']
sub ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
sbb ['eax,', '[ebp+var_34]']
mov ['[ebp+var_268],', 'edx']
mov ['[ebp+var_264],', 'eax']
mov ['[ebp+var_26C],', '200h']
cmp ['[ebp+var_264],', '0']
ja ['short', 'loc_3CF7']
jb ['short', 'loc_3CEB']
cmp ['[ebp+var_268],', '200h']
jnb ['short', 'loc_3CF7']
mov ['ecx,', '[ebp+var_268]']
mov ['[ebp+var_26C],', 'ecx']
cmp ['[ebp+var_26C],', '3']
jnb ['short', 'loc_3D0A']
mov ['eax,', '1']
jmp ['loc_43B2']
mov ['ecx,', '[ebp+var_14]']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_2E8],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_26C]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_48]']
sub ['ecx,', 'edx']
mov ['edx,', '[ebp+var_44]']
sbb ['edx,', 'eax']
push ['edx']
push ['ecx']
mov ['eax,', '[ebp+var_2E8]']
push ['eax']
mov ['ecx,', '[ebp+var_2E8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_270],', 'eax']
cmp ['[ebp+var_270],', '0']
jz ['short', 'loc_3D67']
mov ['eax,', '[ebp+var_270]']
jmp ['loc_43B2']
mov ['ecx,', '[ebp+var_26C]']
push ['ecx']
lea ['edx,', '[ebp+var_258]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
call ['?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z']
mov ['[ebp+var_274],', 'eax']
cmp ['[ebp+var_274],', '0']
jz ['short', 'loc_3D9D']
mov ['eax,', '[ebp+var_274]']
jmp ['loc_43B2']
mov ['eax,', '[ebp+var_26C]']
movzx ['ecx,', '[ebp+eax+var_259]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3DB9']
mov ['eax,', '1']
jmp ['loc_43B2']
mov ['edx,', '[ebp+var_26C]']
sub ['edx,', '2']
mov ['[ebp+var_278],', 'edx']
jmp ['short', 'loc_3DD9']
mov ['eax,', '[ebp+var_278]']
sub ['eax,', '1']
mov ['[ebp+var_278],', 'eax']
mov ['ecx,', '[ebp+var_278]']
movzx ['edx,', '[ebp+ecx+var_258]']
cmp ['edx,', '17h']
jnz ['short', 'loc_3DFF']
mov ['eax,', '[ebp+var_278]']
movzx ['ecx,', '[ebp+eax+var_257]']
cmp ['ecx,', '6']
jz ['short', 'loc_3E25']
mov ['edx,', '[ebp+var_278]']
movzx ['eax,', '[ebp+edx+var_258]']
cmp ['eax,', '1']
jnz ['short', 'loc_3E27']
mov ['ecx,', '[ebp+var_278]']
movzx ['edx,', '[ebp+ecx+var_257]']
cmp ['edx,', '4']
jnz ['short', 'loc_3E27']
jmp ['short', 'loc_3E3C']
cmp ['[ebp+var_278],', '0']
jnz ['short', 'loc_3E3A']
mov ['eax,', '1']
jmp ['loc_43B2']
jmp ['short', 'loc_3DCA']
mov ['eax,', '[ebp+var_26C]']
sub ['eax,', '[ebp+var_278]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_268]']
sub ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_264]']
sbb ['eax,', '[ebp+var_20]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_278]']
lea ['ecx,', '[ebp+ecx+var_258]']
call ['@CrcCalc@8']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_2EC],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_2EC]']
push ['ecx']
mov ['edx,', '[ebp+var_2EC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_27C],', 'eax']
cmp ['[ebp+var_27C],', '0']
jz ['short', 'loc_3ED1']
mov ['eax,', '[ebp+var_27C]']
jmp ['loc_43B2']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+134h],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+40h]']
add ['ecx,', '20h']
mov ['edx,', '[eax+44h]']
adc ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+0F0h],', 'ecx']
mov ['[eax+0F4h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+128h],', '20h']
mov ['dword', 'ptr', '[ecx+12Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+130h],', '0']
cmp ['[ebp+var_18],', '0']
jl ['short', 'loc_3F39']
jg ['short', 'loc_3F28']
cmp ['[ebp+var_1C],', '0']
jb ['short', 'loc_3F39']
cmp ['[ebp+var_20],', '40000000h']
jb ['short', 'loc_3F43']
ja ['short', 'loc_3F39']
cmp ['[ebp+var_24],', '0']
jbe ['short', 'loc_3F43']
mov ['eax,', '1']
jmp ['loc_43B2']
mov ['eax,', '[ebp+var_24]']
or ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_3F6E']
mov ['ecx,', '[ebp+var_1C]']
or ['ecx,', '[ebp+var_18]']
jz ['short', 'loc_3F5D']
mov ['eax,', '1']
jmp ['loc_43B2']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+130h],', '1']
xor ['eax,', 'eax']
jmp ['loc_43B2']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+134h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3F86']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+130h],', '1']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '20h']
mov ['ecx,', '[ebp+var_20]']
adc ['ecx,', '0']
mov ['edx,', '[ebp+var_14]']
add ['eax,', '[edx+70h]']
adc ['ecx,', '[edx+74h]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+70h],', 'eax']
mov ['[edx+74h],', 'ecx']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '20h']
mov ['ecx,', '[ebp+var_18]']
adc ['ecx,', '0']
add ['eax,', '[ebp+var_24]']
adc ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+128h],', 'eax']
mov ['[edx+12Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+48h]']
sub ['edx,', '[ecx+0F0h]']
mov ['eax,', '[eax+4Ch]']
sbb ['eax,', '[ecx+0F4h]']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '[ebp+var_24]']
mov ['esi,', '[ebp+var_18]']
adc ['esi,', '[ebp+var_20]']
mov ['[ebp+var_2F4],', 'edx']
mov ['[ebp+var_2F0],', 'eax']
mov ['[ebp+var_2FC],', 'ecx']
mov ['[ebp+var_2F8],', 'esi']
mov ['edx,', '[ebp+var_2F0]']
cmp ['edx,', '[ebp+var_2F8]']
ja ['short', 'loc_4033']
jb ['short', 'loc_401F']
mov ['eax,', '[ebp+var_2F4]']
cmp ['eax,', '[ebp+var_2FC]']
jnb ['short', 'loc_4033']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+133h],', '1']
mov ['eax,', '1']
jmp ['loc_43B2']
mov ['ecx,', '[ebp+var_14]']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_300],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['1']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_300]']
push ['ecx']
mov ['edx,', '[ebp+var_300]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_280],', 'eax']
cmp ['[ebp+var_280],', '0']
jz ['short', 'loc_4084']
mov ['eax,', '[ebp+var_280]']
jmp ['loc_43B2']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_284],', 'edx']
mov ['eax,', '[ebp+var_284]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_308],', 'eax']
mov ['[ebp+var_304],', 'ecx']
mov ['edx,', '[ebp+var_308]']
cmp ['edx,', '[ebp+var_24]']
jnz ['short', 'loc_40B7']
mov ['eax,', '[ebp+var_304]']
cmp ['eax,', '[ebp+var_20]']
jz ['short', 'loc_40C1']
mov ['eax,', '8007000Eh']
jmp ['loc_43B2']
mov ['ecx,', '[ebp+var_284]']
push ['ecx']
lea ['ecx,', '[ebp+var_290]']
call ['??0?$CBuffer@E@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_284]']
push ['edx']
lea ['ecx,', '[ebp+var_290]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
call ['?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z']
mov ['[ebp+var_298],', 'eax']
cmp ['[ebp+var_298],', '0']
jz ['short', 'loc_4133']
mov ['eax,', '[ebp+var_298]']
mov ['[ebp+var_2D0],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_290]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_2D0]']
jmp ['loc_43B2']
lea ['ecx,', '[ebp+var_290]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['edx,', '[ebp+var_284]']
mov ['ecx,', 'eax']
call ['@CrcCalc@8']
cmp ['eax,', '[ebp+var_28]']
jz ['short', 'loc_4155']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+134h]']
test ['edx,', 'edx']
jnz ['short', 'loc_416D']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+131h],', '1']
lea ['ecx,', '[ebp+var_2A4]']
call ['??0CStreamSwitch@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_290]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
lea ['ecx,', '[ebp+var_2A4]']
call ['?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@ABV?$CBuffer@E@@@Z']
lea ['ecx,', '[ebp+var_2B8]']
call ['??0?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_14]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_2C4],', 'eax']
mov ['[ebp+var_2C0],', 'edx']
cmp ['[ebp+var_2C4],', '1']
jnz ['short', 'loc_41CB']
cmp ['[ebp+var_2C0],', '0']
jz ['loc_4338']
cmp ['[ebp+var_2C4],', '17h']
jnz ['short', 'loc_41DD']
cmp ['[ebp+var_2C0],', '0']
jz ['short', 'loc_41E2']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_2B8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '100h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0F4h]']
push ['ecx']
mov ['edx,', '[eax+0F0h]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z']
mov ['[ebp+var_2C8],', 'eax']
mov ['eax,', '[ebp+var_2C8]']
mov ['[ebp+var_2CC],', 'eax']
cmp ['[ebp+var_2CC],', '0']
jz ['short', 'loc_427E']
mov ['ecx,', '[ebp+var_2CC]']
mov ['[ebp+var_2D4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_290]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_2D4]']
jmp ['loc_43B2']
lea ['ecx,', '[ebp+var_2B8]']
call ['?Size@?$CObjectVector@V?$CBuffer@E@@@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_42D2']
mov ['[ebp+var_2D8],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_290]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_2D8]']
jmp ['loc_43B2']
lea ['ecx,', '[ebp+var_2B8]']
call ['?Size@?$CObjectVector@V?$CBuffer@E@@@@QBEIXZ']
cmp ['eax,', '1']
jbe ['short', 'loc_42E7']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
lea ['ecx,', '[ebp+var_2A4]']
call ['?Remove@CStreamSwitch@N7z@NArchive@@QAEXXZ']
lea ['ecx,', '[ebp+var_2B8]']
call ['?Front@?$CObjectVector@V?$CBuffer@E@@@@QAEAAV?$CBuffer@E@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_14]']
push ['edx']
lea ['ecx,', '[ebp+var_2A4]']
call ['?Set@CStreamSwitch@N7z@NArchive@@QAEXPAVCInArchive@23@ABV?$CBuffer@E@@@Z']
mov ['ecx,', '[ebp+var_14]']
call ['?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ']
mov ['[ebp+var_310],', 'eax']
mov ['[ebp+var_30C],', 'edx']
cmp ['[ebp+var_310],', '1']
jnz ['short', 'loc_4333']
cmp ['[ebp+var_30C],', '0']
jz ['short', 'loc_4338']
call ['?ThrowIncorrect@N7z@NArchive@@YGXXZ']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+130h],', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+70h]']
mov ['[ecx+120h],', 'eax']
mov ['edx,', '[edx+74h]']
mov ['[ecx+124h],', 'edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z']
mov ['[ebp+var_2DC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2B8]']
call ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2A4]']
call ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_290]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_2DC]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN57']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '310h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?ReadDatabase@CInArchive@N7z@NArchive@@QAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReadDatabase@CInArchive@N7z@NArchive@@QAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '14h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?ReadDatabase2@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z']
mov ['[ebp+var_24],', 'eax']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4504']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+132h],', '1']
cmp ['[ebp+var_18],', '80004001h']
jnz ['short', 'loc_4512']
call ['?ThrowUnsupported@N7z@NArchive@@YGXXZ']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_4572']
endp
__catch$?ReadDatabase@CInArchive@N7z@NArchive@@QAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$0 proc near
mov ['eax,', '[ebp+8]']
mov ['byte', 'ptr', '[eax+136h],', '1']
mov ['dword', 'ptr', '[ebp-1Ch],', '1']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN10_0']
retn
endp
__catch$?ReadDatabase@CInArchive@N7z@NArchive@@QAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$1 proc near
mov ['ecx,', '[ebp+8]']
mov ['byte', 'ptr', '[ecx+132h],', '1']
mov ['dword', 'ptr', '[ebp-20h],', '1']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN12']
retn
endp
?GetRem@CInByte2@N7z@NArchive@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
sub ['eax,', '[ecx+8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteByteStream@CInArchive@N7z@NArchive@@AAEX_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jbe ['short', 'loc_4621']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '1']
imul ['edx,', '0Ch']
mov ['eax,', '[ebp+var_4]']
lea ['ecx,', '[eax+edx+8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+38h],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jz ['short', 'loc_4621']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '0Ch']
mov ['edx,', '[edx+8]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+ecx+10h]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+38h]']
mov ['[eax+8],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadByte@CInArchive@N7z@NArchive@@AAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
call ['?ReadByte@CInByte2@N7z@NArchive@@QAEEXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadNum@CInArchive@N7z@NArchive@@AAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
call ['?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?FindAndReadSignature@CInArchive@N7z@NArchive@@AAEJPAUIInStream@@PB_K@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$CObjArray@E@@QAE@XZ']
endp
__ehhandler$?FindAndReadSignature@CInArchive@N7z@NArchive@@AAEJPAUIInStream@@PB_K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-70h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?FindAndReadSignature@CInArchive@N7z@NArchive@@AAEJPAUIInStream@@PB_K@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ReadPackInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@@Z$0 proc near
lea ['ecx,', '[ebp-4Ch]']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$?ReadPackInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReadPackInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ReadUnpackInfo@CInArchive@N7z@NArchive@@AAEXPBV?$CObjectVector@V?$CBuffer@E@@@@AAUCFolders@23@@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?ReadUnpackInfo@CInArchive@N7z@NArchive@@AAEXPBV?$CObjectVector@V?$CBuffer@E@@@@AAUCFolders@23@@Z$1 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$?ReadUnpackInfo@CInArchive@N7z@NArchive@@AAEXPBV?$CObjectVector@V?$CBuffer@E@@@@AAUCFolders@23@@Z$2 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$?ReadUnpackInfo@CInArchive@N7z@NArchive@@AAEXPBV?$CObjectVector@V?$CBuffer@E@@@@AAUCFolders@23@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0BCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReadUnpackInfo@CInArchive@N7z@NArchive@@AAEXPBV?$CObjectVector@V?$CBuffer@E@@@@AAUCFolders@23@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ReadSubStreamsInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@AAV?$CRecordVector@_K@@AAUCUInt32DefVector@23@@Z$0 proc near
lea ['ecx,', '[ebp-58h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$?ReadSubStreamsInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@AAV?$CRecordVector@_K@@AAUCUInt32DefVector@23@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-84h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReadSubStreamsInfo@CInArchive@N7z@NArchive@@AAEXAAUCFolders@23@AAV?$CRecordVector@_K@@AAUCUInt32DefVector@23@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ReadUInt64DefVector@CInArchive@N7z@NArchive@@AAEXABV?$CObjectVector@V?$CBuffer@E@@@@AAUCUInt64DefVector@23@I@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$?ReadUInt64DefVector@CInArchive@N7z@NArchive@@AAEXABV?$CObjectVector@V?$CBuffer@E@@@@AAUCUInt64DefVector@23@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReadUInt64DefVector@CInArchive@N7z@NArchive@@AAEXABV?$CObjectVector@V?$CBuffer@E@@@@AAUCUInt64DefVector@23@I@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z$0 proc near
lea ['ecx,', '[ebp-6Ch]']
jmp ['??1CFolders@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z$1 proc near
lea ['ecx,', '[ebp-80h]']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__unwindfunclet$?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z$2 proc near
lea ['ecx,', '[ebp-0A0h]']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z$3 proc near
lea ['ecx,', '[ebp-10Ch]']
jmp ['??1CDecoder@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z$4 proc near
mov ['eax,', '[ebp-144h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z$5 proc near
lea ['ecx,', '[ebp-130h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__ehhandler$?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-158h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReadAndDecodePackedStreams@CInArchive@N7z@NArchive@@AAEJ_KAA_KAAV?$CObjectVector@V?$CBuffer@E@@@@PAUICryptoGetTextPassword@@AA_N4AAVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$0 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
endp
__unwindfunclet$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$1 proc near
lea ['ecx,', '[ebp-44h]']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__unwindfunclet$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$2 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$3 proc near
lea ['ecx,', '[ebp-80h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$4 proc near
lea ['ecx,', '[ebp-94h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$5 proc near
lea ['ecx,', '[ebp-0A8h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$6 proc near
lea ['ecx,', '[ebp-0CCh]']
jmp ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$7 proc near
lea ['ecx,', '[ebp-0E0h]']
jmp ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$8 proc near
lea ['ecx,', '[ebp-10Ch]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__unwindfunclet$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$9 proc near
lea ['ecx,', '[ebp-11Ch]']
jmp ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-154h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReadHeader@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ReadDatabase2@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$0 proc near
lea ['ecx,', '[ebp-290h]']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__unwindfunclet$?ReadDatabase2@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$1 proc near
lea ['ecx,', '[ebp-2A4h]']
jmp ['??1CStreamSwitch@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$?ReadDatabase2@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z$2 proc near
lea ['ecx,', '[ebp-2B8h]']
jmp ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
endp
__ehhandler$?ReadDatabase2@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-310h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReadDatabase2@CInArchive@N7z@NArchive@@AAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?ReadDatabase@CInArchive@N7z@NArchive@@QAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReadDatabase@CInArchive@N7z@NArchive@@QAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
?ReadID@CInArchive@N7z@NArchive@@AAE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
call ['?ReadNumber@CInByte2@N7z@NArchive@@QAE_KXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SkipData@CInArchive@N7z@NArchive@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
call ['?SkipData@CInByte2@N7z@NArchive@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?FindBond_for_PackStream@CFolder@N7z@NArchive@@QBEHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_4C55']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Size@?$CObjArray2@UCBond@N7z@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_4C82']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??B?$CObjArray2@UCBond@N7z@NArchive@@@@QBEPBUCBond@N7z@NArchive@@XZ']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+ecx*8]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_4C80']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_4C85']
jmp ['short', 'loc_4C4C']
or ['eax,', '0FFFFFFFFh']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
_wmemcpy        proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetBuf@UString@@QAEPA_WI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_4D8D']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReAlloc2@UString@@AAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReleaseBuf_SetLen@UString@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadUInt32@CInArchive@N7z@NArchive@@AAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
call ['?ReadUInt32@CInByte2@N7z@NArchive@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadNumber@CInArchive@N7z@NArchive@@AAE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
call ['?ReadNumber@CInByte2@N7z@NArchive@@QAE_KXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@_N@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@_N@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@_N@@QAE@XZ']
endp
__ehhandler$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CStreamSwitch@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+5],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CStreamSwitch@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Remove@CStreamSwitch@N7z@NArchive@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndSetSize@CUInt32DefVector@N7z@NArchive@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?ClearAndSetSize@?$CRecordVector@I@@QAEXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ValidAndDefined@CUInt32DefVector@N7z@NArchive@@QBE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@_N@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_504C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@_N@@QBEAB_NI@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_504C']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_5053']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetFolderUnpackSize@CFolders@N7z@NArchive@@QBE_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??B?$CObjArray@_K@@QBEPB_KXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??B?$CObjArray@I@@QBEPBIXZ']
mov ['edi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['??B?$CObjArray@E@@QBEPBEXZ']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[eax+ecx]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[edi+eax*4]']
mov ['eax,', '[esi+edx*8]']
mov ['edx,', '[esi+edx*8+4]']
pop ['edi']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadUInt64@CInArchive@N7z@NArchive@@AAE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
call ['?ReadUInt64@CInByte2@N7z@NArchive@@QAE_KXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CBufPtrSeqOutStream@@QAEXPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CFolders@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CFolders@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0?$CObjArray@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0?$CObjArray@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??0?$CObjArray@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??0CParsedMethods@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CObjArray@_K@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CObjArray@_K@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '34h']
jmp ['??1?$CObjArray@E@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '3Ch']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$??0CFolders@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CFolders@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CParsedMethods@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFolders@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CFolders@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??1CParsedMethods@N7z@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '3Ch']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CObjArray@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CObjArray@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1?$CObjArray@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1?$CObjArray@_K@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$CObjArray@_K@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CUInt32DefVector@N7z@NArchive@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CObjArray@_K@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '34h']
jmp ['??1?$CObjArray@E@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1?$CObjArray@I@@QAE@XZ']
endp
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '3Ch']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$??1CFolders@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CFolders@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CDecoder@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDecoder@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CDecoder@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
endp
__ehhandler$??1CDecoder@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDecoder@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CBufPtrSeqOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CBufPtrSeqOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CBufPtrSeqOutStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_5850']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_5873']
push ['offset', '_IID_ISequentialOutStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_586C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_5873']
mov ['eax,', '80004002h']
jmp ['short', 'loc_5884']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CBufPtrSeqOutStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CBufPtrSeqOutStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5937']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_594B']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CParsedMethods@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CRecordVector@_K@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBindInfoEx@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CBindInfo@NCoderMixer2@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CBindInfoEx@N7z@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CBindInfo@NCoderMixer2@@QAE@XZ']
endp
__ehhandler$??1CBindInfoEx@N7z@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CBindInfoEx@N7z@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CBindInfo@NCoderMixer2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CBindInfo@NCoderMixer2@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__unwindfunclet$??1CBindInfo@NCoderMixer2@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??1CBindInfo@NCoderMixer2@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CBindInfo@NCoderMixer2@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?SkipRem@CInByte2@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[eax+8],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadBytes@CInArchive@N7z@NArchive@@AAEXPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+38h]']
call ['?ReadBytes@CInByte2@N7z@NArchive@@QAEXPAEI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Clear@CDbEx@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+130h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+131h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+132h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+133h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+134h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+136h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+135h],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CDatabase@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0E0h']
call ['?Clear@CInArchiveInfo@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '118h']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '11Ch']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+120h],', '0']
mov ['dword', 'ptr', '[ecx+124h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+128h],', '0']
mov ['dword', 'ptr', '[edx+12Ch],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CDatabase@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CFolders@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D0h']
call ['?Free@?$CBuffer@E@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0D8h']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '58h']
call ['?Clear@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '64h']
call ['?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7Ch']
call ['?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '94h']
call ['?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0ACh']
call ['?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0C4h']
call ['?Clear@?$CRecordVector@_N@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@_N@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Clear@?$CRecordVector@_K@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CFolders@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?Free@?$CObjArray@_K@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Clear@CUInt32DefVector@N7z@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['?Free@?$CObjArray@_K@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['?Free@?$CObjArray@E@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
call ['?Free@?$CObjArray@I@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '3Ch']
call ['?Free@?$CBuffer@E@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CUInt32DefVector@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@_N@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Clear@?$CRecordVector@I@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CInArchiveInfo@N7z@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['?Clear@?$CRecordVector@_K@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Free@?$CBuffer@E@@QAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5E98']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CBuffer@E@@QAE@I@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QAEPAEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QBEPBEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@?$CBuffer@E@@QAEXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_600C']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@?$CBuffer@E@@QAEXXZ']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_600C']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_6052']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??1?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6096']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_60DC']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6122']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCCoderStreamsInfo@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@UCBond@NCoderMixer2@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndSetSize@?$CRecordVector@I@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@I@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@I@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@I@@QAEAAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_K@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndSetSize@?$CRecordVector@_K@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@_K@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@_K@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@_K@@QAEI_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??A?$CRecordVector@_K@@QAEAA_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddToUniqueSorted@?$CRecordVector@_K@@QAEI_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_C]']
jz ['short', 'loc_6494']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_C]']
shr ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[eax+4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+var_18]']
jnz ['short', 'loc_646F']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+var_14]']
jnz ['short', 'loc_646F']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_64AB']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
ja ['short', 'loc_6489']
jb ['short', 'loc_6481']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+var_18]']
jnb ['short', 'loc_6489']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_6492']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_6430']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Insert@?$CRecordVector@_K@@QAEXI_K@Z']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@_N@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@_N@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndSetSize@?$CRecordVector@_N@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@_N@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@_N@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@_N@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@_N@@QAEI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['dl,', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@_N@@QBEAB_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@_N@@QAEAA_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAEPAUCCoderInfo@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetSize@?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetSize@?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAEXI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnz ['short', 'loc_66B8']
jmp ['loc_678B']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['loc_6750']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_18],', 'edx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '18h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
xor ['eax,', 'eax']
add ['ecx,', '4']
setb ['al']
neg ['eax']
or ['eax,', 'ecx']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6736']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
push ['offset', '??1CCoderInfo@N7z@NArchive@@QAE@XZ']
push ['offset', '??0CCoderInfo@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_18]']
push ['eax']
push ['18h']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '4']
push ['ecx']
call ['??_L@YGXPAXIHP6EX0@Z1@Z']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_673D']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_6773']
push ['3']
mov ['ecx,', '[ebp+var_24]']
call ['??_ECCoderInfo@N7z@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_677A']
mov ['[ebp+var_30],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?SetSize@?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAEXI@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?SetSize@?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAEXI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetSize@?$CObjArray2@UCCoderInfo@N7z@NArchive@@@@QAEXI@Z']
jmp ['___CxxFrameHandler3']
endp
??B?$CObjArray2@UCBond@N7z@NArchive@@@@QAEPAUCBond@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray2@UCBond@N7z@NArchive@@@@QBEPBUCBond@N7z@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjArray2@UCBond@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetSize@?$CObjArray2@UCBond@N7z@NArchive@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnz ['short', 'loc_686B']
jmp ['short', 'loc_68C2']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_689D']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CObjArray2@I@@QAEPAIXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetSize@?$CObjArray2@I@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnz ['short', 'loc_6913']
jmp ['short', 'loc_696A']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6945']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Free@?$CObjArray@_K@@QAEXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray@_K@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray@_K@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@_K@@QAEPA_KXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@_K@@QBEPB_KXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@?$CObjArray@_K@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Free@?$CObjArray@I@@QAEXXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray@I@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray@I@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@I@@QAEPAIXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@I@@QBEPBIXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@?$CObjArray@I@@QAEXI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Free@?$CObjArray@E@@QAEXXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjArray@E@@QAE@I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6C85']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjArray@E@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjArray@E@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@E@@QAEPAEXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CObjArray@E@@QBEPBEXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@?$CObjArray@E@@QAEXI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndSetSize@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXI@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clear@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6E4B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6EB8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_6EDB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@V?$CBuffer@E@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Front@?$CObjectVector@V?$CBuffer@E@@@@QAEAAV?$CBuffer@E@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@V?$CBuffer@E@@@@QAEAAV?$CBuffer@E@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AddNew@?$CObjectVector@V?$CBuffer@E@@@@QAEAAV?$CBuffer@E@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@V?$CBuffer@E@@@@QAEAAV?$CBuffer@E@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['8']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_6FFB']
mov ['ecx,', '[ebp+var_1C]']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_7002']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@V?$CBuffer@E@@@@QAEAAV?$CBuffer@E@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@V?$CBuffer@E@@@@QAEAAV?$CBuffer@E@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@V?$CBuffer@E@@@@QAEAAV?$CBuffer@E@@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_7126']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_711D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_G?$CBuffer@E@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_7124']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_70E2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??_ECCoderInfo@N7z@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_71EC']
push ['offset', '??1CCoderInfo@N7z@NArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx-4]']
push ['edx']
push ['18h']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1']
jz ['short', 'loc_71E4']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '4']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '4']
jmp ['short', 'loc_720B']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCoderInfo@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7208']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CCoderInfo@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCoderInfo@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CBuffer@E@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_G?$CBuffer@E@@QAEPAXI@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_729A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ClearAndReserve@?$CRecordVector@I@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@I@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_745C']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_7520']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_74FB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CRecordVector@_K@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@_K@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_75B8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Insert@?$CRecordVector@_K@@QAEXI_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@_K@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_8]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_76C5']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_76A0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CRecordVector@_N@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@_N@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_774C']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ClearAndReserve@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ClearAndReserve@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Clear@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['loc_784C']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_18],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '18h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_7827']
push ['offset', '??0CFileItem@N7z@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+var_18]']
push ['eax']
push ['18h']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['??_H@YGXPAXIHP6EPAX0@Z@Z']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_782E']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?ClearAndReserve@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXI@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?ClearAndReserve@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ClearAndReserve@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXI@Z']
jmp ['___CxxFrameHandler3']
endp
??0CFileItem@N7z@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+10h],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+11h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+12h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+13h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@V?$CBuffer@E@@@@QAEAAV?$CBuffer@E@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_H@YGXPAXIHP6EPAX0@Z@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
js ['short', 'loc_7945']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_7920']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_7A08']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_79E3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MoveItems@?$CRecordVector@_K@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '3']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

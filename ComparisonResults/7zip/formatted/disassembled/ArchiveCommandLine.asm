??0CArcCmdLineException@@QAE@PBDPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CArcCmdLineException@@QAE@PBDPB_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??0AString@@QAE@PBD@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
push ['0']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
lea ['edx,', '[ebp+var_28]']
push ['edx']
call ['?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_30],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??1AString@@QAE@XZ']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_925']
mov ['ecx,', '[ebp+var_10]']
call ['?Add_LF@UString@@QAEXXZ']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['??YUString@@QAEAAV0@PB_W@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsFromExtractGroup@CArcCommand@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '3']
jl ['short', 'loc_985']
cmp ['[ebp+var_8],', '5']
jle ['short', 'loc_981']
jmp ['short', 'loc_985']
mov ['al,', '1']
jmp ['short', 'loc_987']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetPathMode@CArcCommand@@QBE?AW4EEnum@NPathMode@NExtract@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '3']
jz ['short', 'loc_9C1']
cmp ['[ebp+var_8],', '5']
jz ['short', 'loc_9C1']
jmp ['short', 'loc_9C5']
xor ['eax,', 'eax']
jmp ['short', 'loc_9CA']
mov ['eax,', '2']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsFromUpdateGroup@CArcCommand@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_A0B']
cmp ['[ebp+var_8],', '2']
jle ['short', 'loc_A07']
cmp ['[ebp+var_8],', '0Ah']
jz ['short', 'loc_A07']
jmp ['short', 'loc_A0B']
mov ['al,', '1']
jmp ['short', 'loc_A0D']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ConvertToLongNames@@YGXAAVCCensor@NWildcard@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_A3A']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCPair@NWildcard@@@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jnb ['short', 'loc_A68']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCPair@NWildcard@@@@QAEAAUCPair@NWildcard@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '0Ch']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?ConvertToLongNames@@YGXABVUString@@AAVCCensorNode@NWildcard@@@Z']
jmp ['short', 'loc_A31']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ConvertToLongNames@@YGXABVUString@@AAVCCensorNode@NWildcard@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ConvertToLongNames@@YGXABVUString@@AAVCCensorNode@NWildcard@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '40h']
push ['edi']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ConvertToLongNames@@YGXABVUString@@AAV?$CObjectVector@UCItem@NWildcard@@@@@Z']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '28h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?ConvertToLongNames@@YGXABVUString@@AAV?$CObjectVector@UCItem@NWildcard@@@@@Z']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_AEB']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '10h']
call ['?Size@?$CObjectVector@VCCensorNode@NWildcard@@@@QBEIXZ']
cmp ['[ebp+var_10],', 'eax']
jnb ['short', 'loc_B45']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '10h']
call ['??A?$CObjectVector@VCCensorNode@NWildcard@@@@QAEAAVCCensorNode@NWildcard@@I@Z']
add ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_B36']
mov ['ecx,', '[ebp+var_14]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?IsDriveColonName@NWildcard@@YG_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_B36']
jmp ['short', 'loc_AE2']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?ConvertToLongName@@YGXABVUString@@AAV1@@Z']
jmp ['short', 'loc_AE2']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_B57']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '10h']
call ['?Size@?$CObjectVector@VCCensorNode@NWildcard@@@@QBEIXZ']
cmp ['[ebp+var_10],', 'eax']
jnb ['loc_C0B']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '10h']
call ['??A?$CObjectVector@VCCensorNode@NWildcard@@@@QAEAAVCCensorNode@NWildcard@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '10h']
call ['?Size@?$CObjectVector@VCCensorNode@NWildcard@@@@QBEIXZ']
cmp ['[ebp+var_1C],', 'eax']
jnb ['short', 'loc_C06']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '10h']
call ['??A?$CObjectVector@VCCensorNode@NWildcard@@@@QAEAAVCCensorNode@NWildcard@@I@Z']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '4']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '4']
call ['?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_BFB']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1Ch']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1Ch']
call ['??Y?$CObjectVector@UCItem@NWildcard@@@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '28h']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '28h']
call ['??Y?$CObjectVector@UCItem@NWildcard@@@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '10h']
call ['?Delete@?$CObjectVector@VCCensorNode@NWildcard@@@@QAEXI@Z']
jmp ['short', 'loc_C04']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_B86']
jmp ['loc_B4E']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_C1D']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '10h']
call ['?Size@?$CObjectVector@VCCensorNode@NWildcard@@@@QBEIXZ']
cmp ['[ebp+var_10],', 'eax']
jnb ['short', 'loc_CAC']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '10h']
call ['??A?$CObjectVector@VCCensorNode@NWildcard@@@@QAEAAVCCensorNode@NWildcard@@I@Z']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
push ['eax']
push ['5Ch']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+var_30]']
push ['eax']
call ['??H@YG?AVUString@@ABV0@0@Z']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_44],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_44]']
push ['edx']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
call ['??H@YG?AVUString@@ABV0@_W@Z']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_4C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_4C]']
push ['edx']
call ['?ConvertToLongNames@@YGXABVUString@@AAVCCensorNode@NWildcard@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_30]']
call ['??1UString@@QAE@XZ']
jmp ['loc_C14']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ConvertToLongName@@YGXABVUString@@AAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ConvertToLongName@@YGXABVUString@@AAV1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '54h']
push ['edi']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_D28']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?DoesNameContainWildcard@@YG_NABVUString@@@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_D2D']
jmp ['loc_DC2']
lea ['ecx,', '[ebp+var_48]']
call ['??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_5C]']
push ['edx']
call ['??H@YG?AVUString@@ABV0@0@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_5C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?IsDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_D83']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
jmp ['short', 'loc_DC2']
lea ['ecx,', '[ebp+var_5C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
call ['?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_DA7']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ConvertToLongNames@@YGXABVUString@@AAV?$CObjectVector@UCItem@NWildcard@@@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_E4A']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jnb ['short', 'loc_EB4']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@UCItem@NWildcard@@@@QAEAAUCItem@NWildcard@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
test ['eax,', 'eax']
jnz ['short', 'loc_E7E']
mov ['ecx,', '[ebp+var_8]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['eax,', '1']
jz ['short', 'loc_E80']
jmp ['short', 'loc_E41']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_EA0']
mov ['ecx,', '[ebp+var_8]']
call ['?IsDriveItem@CItem@NWildcard@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_EA0']
jmp ['short', 'loc_E41']
mov ['ecx,', '[ebp+var_8]']
call ['?Front@?$CObjectVector@VUString@@@@QAEAAVUString@@XZ']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?ConvertToLongName@@YGXABVUString@@AAV1@@Z']
jmp ['short', 'loc_E41']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CArcCmdLineParser@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['33h']
mov ['ecx,', '[ebp+var_4]']
call ['??0CParser@NCommandLineParser@@QAE@I@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Parse1@CArcCmdLineParser@@QAEXABV?$CObjectVector@VUString@@@@AAUCArcCmdLineOptions@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Parse1@CArcCmdLineParser@@QAEXABV?$CObjectVector@VUString@@@@AAUCArcCmdLineOptions@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '64h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_70]']
mov ['ecx,', '19h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '_kSwitchForms']
mov ['ecx,', '[ebp+var_10]']
call ['?ParseStrings@CParser@NCommandLineParser@@QAE_NPBUCSwitchForm@2@ABV?$CObjectVector@VUString@@@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_F75']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??BAString@@QBEPBDXZ']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['edx,', '[ebp+var_54]']
push ['edx']
call ['__CxxThrowException@8']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp___fileno']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp___isatty']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+4],', 'al']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp___fileno']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp___isatty']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+5],', 'al']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp___fileno']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp___isatty']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+6],', 'al']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jnz ['short', 'loc_107A']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jnz ['short', 'loc_107A']
push ['2']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_107A']
mov ['[ebp+var_70],', '0']
jmp ['short', 'loc_1081']
mov ['[ebp+var_70],', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', 'byte', 'ptr', '[ebp+var_70]']
mov ['[edx],', 'al']
push ['1Eh']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[eax]']
mov ['[ecx+7],', 'dl']
push ['1Fh']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[eax]']
mov ['[ecx+8],', 'dl']
push ['3']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+9],', 'al']
push ['23h']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', '[eax]']
mov ['[edx+44h],', 'al']
push ['5']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[eax]']
mov ['[ecx+45h],', 'dl']
push ['4']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jnz ['short', 'loc_1112']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
test ['edx,', 'edx']
jnz ['short', 'loc_1112']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_111F']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+204h],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1137']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+1FCh],', '0']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1FCh']
push ['eax']
push ['7']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
push ['eax']
call ['?SetStreamMode@@YGXABUCSwitchResult@NCommandLineParser@@AAI@Z']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '200h']
push ['ecx']
push ['8']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
push ['eax']
call ['?SetStreamMode@@YGXABUCSwitchResult@NCommandLineParser@@AAI@Z']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '204h']
push ['edx']
push ['9']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
push ['eax']
call ['?SetStreamMode@@YGXABUCSwitchResult@NCommandLineParser@@AAI@Z']
push ['6']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['loc_1219']
push ['0']
push ['6']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_11D0']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+208h],', '1']
jmp ['short', 'loc_1219']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?StringToUInt32@@YG_NPB_WAAI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_120D']
mov ['ecx,', '[ebp+var_14]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG77465']
lea ['ecx,', '[ebp+var_60]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['edx,', '[ebp+var_60]']
push ['edx']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+208h],', 'ecx']
push ['25h']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['short', 'loc_1256']
push ['25h']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax+1]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['byte', 'ptr', 'ds:?g_CaseSensitive@@3_NA,', 'al']
mov ['ecx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[ecx+2],', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', 'byte', 'ptr', 'ds:?g_CaseSensitive@@3_NA']
mov ['[edx+3],', 'al']
mov ['ecx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[ecx+1],', '0']
push ['20h']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['short', 'loc_1289']
push ['20h']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax+1]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+1],', 'al']
push ['1Ah']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['loc_138C']
push ['0']
push ['1Ah']
mov ['ecx,', '[ebp+var_10]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['loc_138C']
mov ['[ebp+dwProcessAffinityMask],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_24]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
call ['?SetFromWStr_if_Ascii@AString@@QAEXPB_W@Z']
lea ['ecx,', '[ebp+var_38]']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1327']
lea ['edx,', '[ebp+var_44]']
push ['edx']
lea ['ecx,', '[ebp+var_38]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
call ['?ConvertHexStringToUInt32@@YGIPBDPAPBD@Z']
mov ['[ebp+dwProcessAffinityMask],', 'eax']
mov ['eax,', '[ebp+var_44]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1327']
lea ['ecx,', '[ebp+var_38]']
call ['?Empty@AString@@QAEXXZ']
lea ['ecx,', '[ebp+var_38]']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_135A']
mov ['ecx,', '[ebp+var_24]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG77480']
lea ['ecx,', '[ebp+var_6C]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['eax,', '[ebp+var_6C]']
push ['eax']
call ['__CxxThrowException@8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+dwProcessAffinityMask]']
push ['ecx']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetCurrentProcess@0']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetProcessAffinityMask@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_38]']
call ['??1AString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '70h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StringToUInt32@@YG_NPB_WAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_141D']
xor ['al,', 'al']
jmp ['short', 'loc_143C']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?ConvertStringToUInt32@@YGIPB_WPAPB_W@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetStreamMode@@YGXABUCSwitchResult@NCommandLineParser@@AAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_149C']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[edx],', 'ecx']
pop ['ebp']
retn ['8']
endp
?EnumerateDirItemsAndSort@@YGJAAVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAV?$CObjectVector@VUString@@@@3AAUCDirItemsStat@@PAUIDirItemsCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?EnumerateDirItemsAndSort@@YGJAAVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAV?$CObjectVector@VUString@@@@3AAUCDirItemsStat@@PAUIDirItemsCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '144h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_150]']
mov ['ecx,', '51h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??0CDirItems@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_18]']
mov ['[ebp+var_2C],', 'eax']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z']
mov ['[ebp+var_CC],', 'eax']
mov ['ecx,', '0Ch']
lea ['esi,', '[ebp+var_8C]']
mov ['edi,', '[ebp+arg_14]']
rep ['movsd']
mov ['edx,', '[ebp+var_CC]']
mov ['[ebp+var_D0],', 'edx']
cmp ['[ebp+var_D0],', '0']
jz ['short', 'loc_157C']
mov ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_120],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??1CDirItems@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', '[ebp+var_120]']
jmp ['loc_187B']
mov ['[ebp+var_D4],', '0']
jmp ['short', 'loc_1597']
mov ['ecx,', '[ebp+var_D4]']
add ['ecx,', '1']
mov ['[ebp+var_D4],', 'ecx']
lea ['ecx,', '[ebp+var_A0]']
call ['?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ']
cmp ['[ebp+var_D4],', 'eax']
jnb ['short', 'loc_1626']
mov ['edx,', '[ebp+var_D4]']
push ['edx']
lea ['ecx,', '[ebp+var_A0]']
call ['??A?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@I@Z']
mov ['[ebp+var_D8],', 'eax']
mov ['ecx,', '[ebp+var_D8]']
call ['?IsDir@CDirItem@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1621']
mov ['ecx,', '[ebp+var_D4]']
push ['ecx']
lea ['edx,', '[ebp+var_12C]']
push ['edx']
lea ['ecx,', '[ebp+var_C4]']
call ['?GetPhyPath@CDirItems@@QBE?AVUString@@I@Z']
mov ['[ebp+var_14C],', 'eax']
mov ['eax,', '[ebp+var_14C]']
mov ['[ebp+var_150],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_150]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_12C]']
call ['??1UString@@QAE@XZ']
jmp ['loc_1588']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??1CDirItems@@QAE@XZ']
lea ['ecx,', '[ebp+var_1C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_1666']
push ['0']
mov ['edx,', 'ds:_kCannotFindArchive']
push ['edx']
lea ['ecx,', '[ebp+var_138]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['eax,', '[ebp+var_138]']
push ['eax']
call ['__CxxThrowException@8']
lea ['ecx,', '[ebp+var_E8]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['[ebp+var_F0],', '0']
jmp ['short', 'loc_1690']
mov ['ecx,', '[ebp+var_F0]']
add ['ecx,', '1']
mov ['[ebp+var_F0],', 'ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_F0],', 'eax']
jnb ['short', 'loc_16F5']
lea ['ecx,', '[ebp+var_100]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['edx,', '[ebp+var_100]']
push ['edx']
mov ['eax,', '[ebp+var_F0]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?MyGetFullPathName@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z']
lea ['ecx,', '[ebp+var_100]']
push ['ecx']
lea ['ecx,', '[ebp+var_E8]']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_100]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_1681']
lea ['ecx,', '[ebp+var_114]']
call ['??0?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['edx,', '[ebp+var_114]']
push ['edx']
lea ['eax,', '[ebp+var_E8]']
push ['eax']
call ['?SortFileNames@@YGXABV?$CObjectVector@VUString@@@@AAV?$CRecordVector@I@@@Z']
lea ['ecx,', '[ebp+var_114]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?ClearAndReserve@?$CObjectVector@VUString@@@@QAEXI@Z']
lea ['ecx,', '[ebp+var_114]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
call ['?ClearAndReserve@?$CObjectVector@VUString@@@@QAEXI@Z']
mov ['[ebp+var_F0],', '0']
jmp ['short', 'loc_175A']
mov ['ecx,', '[ebp+var_F0]']
add ['ecx,', '1']
mov ['[ebp+var_F0],', 'ecx']
lea ['ecx,', '[ebp+var_114]']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_F0],', 'eax']
jnb ['loc_183E']
mov ['edx,', '[ebp+var_F0]']
push ['edx']
lea ['ecx,', '[ebp+var_114]']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_11C],', 'eax']
mov ['ecx,', '[ebp+var_11C]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z']
mov ['edx,', '[ebp+var_11C]']
push ['edx']
lea ['ecx,', '[ebp+var_E8]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
call ['?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z']
cmp ['[ebp+var_F0],', '0']
jbe ['short', 'loc_1839']
mov ['eax,', '[ebp+var_F0]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_F0]']
push ['ecx']
mov ['ecx,', '[ebp+arg_10]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?CompareFileNames@@YGHPB_W0@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_1839']
mov ['edx,', '[ebp+var_F0]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG77562']
lea ['ecx,', '[ebp+var_144]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['eax,', '[ebp+var_144]']
push ['eax']
call ['__CxxThrowException@8']
jmp ['loc_174B']
mov ['[ebp+var_148],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_114]']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_E8]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', '[ebp+var_148]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '150h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
?Parse2@CArcCmdLineParser@@QAEXAAUCArcCmdLineOptions@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0ECh']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_EC]']
mov ['ecx,', '3Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '1']
jnb ['short', 'loc_197C']
push ['0']
push ['offset', '$SG77584']
lea ['ecx,', '[ebp+var_50]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '24h']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
call ['?ParseArchiveCommand@@YG_NABVUString@@AAUCArcCommand@@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_19C7']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG77588']
lea ['ecx,', '[ebp+var_5C]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['ecx,', '[ebp+var_5C]']
push ['ecx']
call ['__CxxThrowException@8']
push ['1Dh']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['short', 'loc_19F1']
push ['1Dh']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '48h']
call ['??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z']
push ['28h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_1A2A']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+89h],', '1']
push ['28h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['edx,', 'byte', 'ptr', '[eax+1]']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+88h],', 'dl']
mov ['[ebp+var_10],', '0']
push ['29h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['cl,', '[eax]']
mov ['[ebp+var_11],', 'cl']
movzx ['edx,', '[ebp+var_11]']
test ['edx,', 'edx']
jz ['short', 'loc_1AB9']
mov ['[ebp+var_10],', '2']
push ['0']
push ['29h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1AB9']
push ['offset', '$SG77597']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['??8@YG_NABVUString@@PB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1A95']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_1AB9']
mov ['ecx,', '[ebp+var_18]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG77601']
lea ['ecx,', '[ebp+var_68]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['eax,', '[ebp+var_68]']
push ['eax']
call ['__CxxThrowException@8']
push ['19h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1AE2']
push ['19h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['edx,', '[eax+4]']
push ['edx']
call ['?GetRecursedTypeFromIndex@@YG?AW4EEnum@NRecursedType@@H@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_1AE9']
mov ['[ebp+var_1C],', '2']
mov ['[ebp+var_1D],', '1']
push ['27h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_1B02']
mov ['[ebp+var_1D],', '0']
push ['0FFFFFFFFh']
push ['1']
push ['22h']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['?FindCharset@@YGHABVCParser@NCommandLineParser@@I_NH@Z']
mov ['ds:?g_CodePage@@3HA,', 'eax']
push ['0FDE9h']
push ['0']
push ['21h']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['?FindCharset@@YGHABVCParser@NCommandLineParser@@I_NH@Z']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_25],', '0']
push ['12h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_1B6D']
mov ['[ebp+var_25],', '1']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
movzx ['edx,', '[ebp+var_1D]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
push ['1']
push ['12h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
call ['?AddSwitchWildcardsToCensor@@YGXAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@_NW4EEnum@NRecursedType@@2H@Z']
push ['13h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['short', 'loc_1BA7']
mov ['eax,', '[ebp+var_24]']
push ['eax']
movzx ['ecx,', '[ebp+var_1D]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
push ['0']
push ['13h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
push ['eax']
call ['?AddSwitchWildcardsToCensor@@YGXAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@_NW4EEnum@NRecursedType@@2H@Z']
mov ['[ebp+var_2C],', '1']
push ['16h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1BE6']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+24h],', '7']
jz ['short', 'loc_1BE6']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+24h],', '8']
jz ['short', 'loc_1BE6']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+24h],', '9']
jz ['short', 'loc_1BE6']
mov ['[ebp+var_E0],', '1']
jmp ['short', 'loc_1BF0']
mov ['[ebp+var_E0],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_E0]']
mov ['[ebp+var_2D],', 'dl']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['?IsFromExtractGroup@CArcCommand@@QBE_NXZ']
mov ['[ebp+var_2E],', 'al']
movzx ['eax,', '[ebp+var_2E]']
test ['eax,', 'eax']
jnz ['short', 'loc_1C24']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+24h],', '6']
jz ['short', 'loc_1C24']
mov ['[ebp+var_E4],', '0']
jmp ['short', 'loc_1C2E']
mov ['[ebp+var_E4],', '1']
mov ['dl,', 'byte', 'ptr', '[ebp+var_E4]']
mov ['[ebp+var_2F],', 'dl']
mov ['eax,', '[ebp+arg_0]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+24h],', '0Ah']
setz ['cl']
mov ['[ebp+var_30],', 'cl']
movzx ['edx,', '[ebp+var_2F]']
test ['edx,', 'edx']
jnz ['short', 'loc_1C56']
movzx ['eax,', '[ebp+var_30]']
test ['eax,', 'eax']
jz ['short', 'loc_1C65']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+7]']
test ['edx,', 'edx']
jz ['short', 'loc_1C65']
mov ['[ebp+var_2D],', '0']
push ['26h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_1C92']
push ['26h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['?ParseArcNameMode@@YG?BW4EArcNameMode@@H@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+158h],', 'eax']
movzx ['eax,', '[ebp+var_2D]']
test ['eax,', 'eax']
jz ['loc_1D1F']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[ebp+var_C]']
jb ['short', 'loc_1CC3']
push ['0']
push ['offset', '$SG77623']
lea ['ecx,', '[ebp+var_74]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['edx,', '[ebp+var_74]']
push ['edx']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_E8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '28h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '28h']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1D1F']
push ['0']
push ['offset', '$SG77627']
lea ['ecx,', '[ebp+var_80]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['__CxxThrowException@8']
movzx ['edx,', '[ebp+var_30]']
test ['edx,', 'edx']
jz ['short', 'loc_1D37']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1B4h']
mov ['[ebp+var_EC],', 'eax']
jmp ['short', 'loc_1D41']
mov ['[ebp+var_EC],', '0']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
movzx ['edx,', '[ebp+var_25]']
push ['edx']
movzx ['eax,', '[ebp+var_1D]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_EC]']
push ['edx']
call ['?AddToCensorFromNonSwitchesStrings@@YGXPAV?$CObjectVector@UCRenamePair@@@@IAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@W4EEnum@NRecursedType@@_N4H@Z']
push ['0Ah']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[eax]']
mov ['[ecx+0Ah],', 'dl']
push ['32h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[eax]']
mov ['[ecx+34h],', 'dl']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+34h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1DBF']
push ['0']
push ['32h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '38h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
push ['0Bh']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[eax]']
mov ['[edx+0Bh],', 'al']
push ['0Dh']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1E07']
push ['0']
push ['0Dh']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1E4h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
push ['0Eh']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1F0h']
call ['??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '7Ch']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?SetMethodOptions@@YGXABVCParser@NCommandLineParser@@AAV?$CObjectVector@UCProperty@@@@@Z']
push ['2Ch']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1E52']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0ACh']
call ['?SetTrueTrue@CBoolPair@@QAEXXZ']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0AEh']
push ['edx']
push ['2Dh']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?SetBoolPair@@YGXAAVCParser@NCommandLineParser@@IAAUCBoolPair@@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0B0h']
push ['ecx']
push ['2Ah']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['?SetBoolPair@@YGXAAVCParser@NCommandLineParser@@IAAUCBoolPair@@@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0B2h']
push ['eax']
push ['2Bh']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['?SetBoolPair@@YGXAAVCParser@NCommandLineParser@@IAAUCBoolPair@@@Z']
movzx ['edx,', '[ebp+var_2F]']
test ['edx,', 'edx']
jz ['loc_21AE']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '88h']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '18h']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx+0ACh]']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx+0AEh]']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx+6],', 'ax']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0AFh]']
test ['eax,', 'eax']
jnz ['short', 'loc_1EE6']
mov ['ecx,', '[ebp+var_38]']
mov ['byte', 'ptr', '[ecx+6],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx+0B0h]']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx+4],', 'ax']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0B1h]']
test ['eax,', 'eax']
jnz ['short', 'loc_1F0C']
mov ['ecx,', '[ebp+var_38]']
mov ['byte', 'ptr', '[ecx+4],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx+0B2h]']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx+2],', 'ax']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0B3h]']
test ['eax,', 'eax']
jnz ['short', 'loc_1F32']
mov ['ecx,', '[ebp+var_38]']
mov ['byte', 'ptr', '[ecx+2],', '1']
push ['2Eh']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['edx,', '[ebp+var_38]']
mov ['al,', '[eax]']
mov ['[edx+8],', 'al']
push ['2Fh']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[ebp+var_38]']
mov ['dl,', '[eax]']
mov ['[ecx+9],', 'dl']
push ['2']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?AddPathsToCensor@CCensor@NWildcard@@QAEXW4ECensorPathMode@2@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?ExtendExclude@CCensor@NWildcard@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?AllAreRelative@CCensor@NWildcard@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1FA3']
push ['0']
push ['offset', '$SG77640']
lea ['ecx,', '[ebp+var_8C]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '58h']
mov ['[ebp+var_3C],', 'edx']
push ['14h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_1FE1']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
movzx ['edx,', '[ebp+var_1D]']
push ['edx']
push ['2']
push ['1']
push ['14h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['?AddSwitchWildcardsToCensor@@YGXAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@_NW4EEnum@NRecursedType@@2H@Z']
push ['15h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2016']
mov ['edx,', '[ebp+var_24]']
push ['edx']
movzx ['eax,', '[ebp+var_1D]']
push ['eax']
push ['2']
push ['0']
push ['15h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['?AddSwitchWildcardsToCensor@@YGXAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@_NW4EEnum@NRecursedType@@2H@Z']
movzx ['edx,', '[ebp+var_2D]']
test ['edx,', 'edx']
jz ['short', 'loc_2037']
movzx ['eax,', '[ebp+var_1D]']
push ['eax']
push ['2']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '28h']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
call ['?AddNameToCensor@@YGXAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z']
push ['0']
mov ['ecx,', '[ebp+var_3C]']
call ['?AddPathsToCensor@CCensor@NWildcard@@QAEXW4ECensorPathMode@2@@Z']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['?ConvertToLongNames@@YGXAAVCCensor@NWildcard@@@Z']
mov ['ecx,', '[ebp+var_3C]']
call ['?ExtendExclude@CCensor@NWildcard@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+7]']
test ['edx,', 'edx']
jz ['short', 'loc_207D']
push ['1Eh']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['?Front@?$CObjectVector@VUString@@@@QBEABVUString@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '70h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
movzx ['eax,', '[ebp+var_2E]']
test ['eax,', 'eax']
jz ['loc_2168']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
test ['edx,', 'edx']
jz ['short', 'loc_20CF']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5]']
test ['ecx,', 'ecx']
jz ['short', 'loc_20CF']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+6]']
test ['eax,', 'eax']
jz ['short', 'loc_20CF']
push ['0']
mov ['ecx,', 'ds:_kSameTerminalError']
push ['ecx']
lea ['ecx,', '[ebp+var_98]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['edx,', '[ebp+var_98]']
push ['edx']
call ['__CxxThrowException@8']
push ['10h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_210E']
push ['0']
push ['10h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '0Ch']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '0Ch']
push ['ecx']
call ['?NormalizeDirPathPrefix@NName@NFile@NWindows@@YGXAAVUString@@@Z']
mov ['edx,', '[ebp+var_34]']
mov ['dword', 'ptr', '[edx+8],', '0']
push ['0Ch']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_214C']
push ['0Ch']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '_k_OverwriteModes[ecx*4]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['byte', 'ptr', '[ecx+3],', '1']
jmp ['short', 'loc_2168']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ah]']
test ['eax,', 'eax']
jz ['short', 'loc_2168']
mov ['ecx,', '[ebp+var_34]']
mov ['dword', 'ptr', '[ecx+8],', '1']
mov ['edx,', '[ebp+var_34]']
mov ['byte', 'ptr', '[edx+3],', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['?GetPathMode@CArcCommand@@QBE?AW4EEnum@NPathMode@NExtract@@XZ']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+4],', 'eax']
cmp ['[ebp+var_10],', '2']
jnz ['short', 'loc_2192']
mov ['edx,', '[ebp+var_34]']
mov ['dword', 'ptr', '[edx+4],', '3']
mov ['eax,', '[ebp+var_34]']
mov ['byte', 'ptr', '[eax+2],', '1']
jmp ['short', 'loc_21A9']
cmp ['[ebp+var_10],', '1']
jnz ['short', 'loc_21A9']
mov ['ecx,', '[ebp+var_34]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_34]']
mov ['byte', 'ptr', '[edx+2],', '1']
jmp ['loc_2598']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
call ['?IsFromUpdateGroup@CArcCommand@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_245E']
push ['14h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_21F8']
push ['0']
push ['offset', '$SG77663']
lea ['ecx,', '[ebp+var_A4]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['edx,', '[ebp+var_A4]']
push ['edx']
call ['__CxxThrowException@8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0B8h']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
call ['?SetAddCommandOptions@@YGXW4EEnum@NCommandType@@ABVCParser@NCommandLineParser@@AAUCUpdateOptions@@@Z']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '7Ch']
push ['edx']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '28h']
call ['??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z']
push ['24h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_2244']
mov ['ecx,', '[ebp+var_40]']
mov ['byte', 'ptr', '[ecx+0B4h],', '1']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+0E0h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+0AEh]']
mov ['eax,', '[ebp+var_40]']
mov ['[eax+0F2h],', 'dx']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+0ACh]']
mov ['eax,', '[ebp+var_40]']
mov ['[eax+0F0h],', 'dx']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+0B0h]']
mov ['eax,', '[ebp+var_40]']
mov ['[eax+0F4h],', 'dx']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+0B2h]']
mov ['eax,', '[ebp+var_40]']
mov ['[eax+0F6h],', 'dx']
push ['1Ch']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[ebp+var_40]']
mov ['dl,', '[eax]']
mov ['[ecx+0C5h],', 'dl']
mov ['eax,', '[ebp+var_40]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0C5h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2328']
push ['1Ch']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['?Front@?$CObjectVector@VUString@@@@QBEABVUString@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '0C8h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '0C8h']
call ['?Len@UString@@QBEIXZ']
test ['eax,', 'eax']
jbe ['short', 'loc_2328']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '0C8h']
call ['??BUString@@QBEPB_WXZ']
movzx ['edx,', 'word', 'ptr', '[eax]']
cmp ['edx,', '2Eh']
jnz ['short', 'loc_2328']
mov ['eax,', '[ebp+var_40]']
mov ['byte', 'ptr', '[eax+0C6h],', '1']
push ['0']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '0C8h']
call ['?Delete@UString@@QAEXI@Z']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+8]']
mov ['[ecx+0C4h],', 'al']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+7]']
mov ['[ecx+0B5h],', 'al']
push ['30h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[ebp+var_40]']
mov ['dl,', '[eax]']
mov ['[ecx+0F8h],', 'dl']
push ['31h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[ebp+var_40]']
mov ['dl,', '[eax]']
mov ['[ecx+0F9h],', 'dl']
mov ['eax,', '[ebp+var_40]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0C4h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_23AF']
mov ['edx,', '[ebp+var_40]']
movzx ['eax,', 'byte', 'ptr', '[edx+0C5h]']
test ['eax,', 'eax']
jz ['short', 'loc_23AF']
push ['0']
push ['offset', '$SG77672']
lea ['ecx,', '[ebp+var_B0]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['ecx,', '[ebp+var_B0]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['edx,', '[ebp+var_40]']
movzx ['eax,', 'byte', 'ptr', '[edx+0C4h]']
test ['eax,', 'eax']
jz ['short', 'loc_23EC']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5]']
test ['edx,', 'edx']
jz ['short', 'loc_23EC']
push ['0']
mov ['eax,', 'ds:_kTerminalOutError']
push ['eax']
lea ['ecx,', '[ebp+var_BC]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['ecx,', '[ebp+var_BC]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['edx,', '[ebp+var_40]']
movzx ['eax,', 'byte', 'ptr', '[edx+0B5h]']
test ['eax,', 'eax']
jz ['short', 'loc_241D']
push ['1Eh']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['?Front@?$CObjectVector@VUString@@@@QBEABVUString@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '0B8h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+24h],', '0Ah']
jnz ['short', 'loc_2459']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '38h']
call ['?Size@?$CObjectVector@UCUpdateArchiveCommand@@@@QBEIXZ']
cmp ['eax,', '1']
jz ['short', 'loc_2459']
push ['0']
push ['offset', '$SG77681']
lea ['ecx,', '[ebp+var_C8]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['edx,', '[ebp+var_C8]']
push ['edx']
call ['__CxxThrowException@8']
jmp ['loc_2598']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+24h],', '7']
jnz ['loc_24EC']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+20Ch],', '1']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_C]']
jnb ['short', 'loc_24E7']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '20Ch']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?StringToUInt32@@YG_NPB_WAAI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_24DE']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG77688']
lea ['ecx,', '[ebp+var_D4]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['ecx,', '[ebp+var_D4]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
jmp ['loc_2598']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+24h],', '9']
jnz ['short', 'loc_2568']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?AddPathsToCensor@CCensor@NWildcard@@QAEXW4ECensorPathMode@2@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?ExtendExclude@CCensor@NWildcard@@QAEXXZ']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1D0h']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '48h']
push ['edx']
mov ['ecx,', '[ebp+var_44]']
call ['??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z']
push ['24h']
mov ['ecx,', '[ebp+var_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_254B']
mov ['ecx,', '[ebp+var_44]']
mov ['byte', 'ptr', '[ecx+0Ch],', '1']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+7]']
mov ['[edx+0Dh],', 'cl']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+0AEh]']
mov ['[edx+0Eh],', 'cl']
jmp ['short', 'loc_2598']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+24h],', '8']
jnz ['short', 'loc_2573']
jmp ['short', 'loc_2598']
mov ['[ebp+var_DC],', '490F5727h']
mov ['[ebp+var_D8],', '2']
push ['offset', '__TI1_J']
lea ['eax,', '[ebp+var_DC]']
push ['eax']
call ['__CxxThrowException@8']
pop ['edi']
add ['esp,', '0ECh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ParseArcNameMode@@YG?BW4EArcNameMode@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_25D3']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_25DA']
jmp ['short', 'loc_25E1']
mov ['eax,', '1']
jmp ['short', 'loc_25E3']
mov ['eax,', '2']
jmp ['short', 'loc_25E3']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetRecursedTypeFromIndex@@YG?AW4EEnum@NRecursedType@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2613']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_261A']
jmp ['short', 'loc_2621']
mov ['eax,', '1']
jmp ['short', 'loc_2623']
mov ['eax,', '2']
jmp ['short', 'loc_2623']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ParseArchiveCommand@@YG_NABVUString@@AAUCArcCommand@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ParseArchiveCommand@@YG_NABVUString@@AAUCArcCommand@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['?MakeLower_Ascii@UString@@QAEXXZ']
lea ['ecx,', '[ebp+var_1C]']
call ['?Len@UString@@QBEIXZ']
cmp ['eax,', '1']
jnz ['loc_2728']
lea ['ecx,', '[ebp+var_1C]']
call ['??BUString@@QBEPB_WXZ']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '7Fh']
jle ['short', 'loc_26CD']
mov ['byte', 'ptr', '[ebp+var_28+3],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['al,', 'byte', 'ptr', '[ebp+var_28+3]']
jmp ['loc_278D']
lea ['ecx,', '[ebp+var_1C]']
call ['??BUString@@QBEPB_WXZ']
movzx ['edx,', 'byte', 'ptr', '[eax]']
push ['edx']
mov ['eax,', 'ds:_g_Commands']
push ['eax']
call ['?FindCharPosInString@@YGHPBDD@Z']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jge ['short', 'loc_2708']
mov ['byte', 'ptr', '[ebp+var_28+2],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['al,', 'byte', 'ptr', '[ebp+var_28+2]']
jmp ['loc_278D']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_24]']
mov ['[ecx],', 'edx']
mov ['byte', 'ptr', '[ebp+var_28+1],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['al,', 'byte', 'ptr', '[ebp+var_28+1]']
jmp ['short', 'loc_278D']
lea ['ecx,', '[ebp+var_1C]']
call ['?Len@UString@@QBEIXZ']
cmp ['eax,', '2']
jnz ['short', 'loc_2777']
lea ['ecx,', '[ebp+var_1C]']
call ['??BUString@@QBEPB_WXZ']
movzx ['eax,', 'word', 'ptr', '[eax]']
cmp ['eax,', '72h']
jnz ['short', 'loc_2777']
lea ['ecx,', '[ebp+var_1C]']
call ['??BUString@@QBEPB_WXZ']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
cmp ['ecx,', '6Eh']
jnz ['short', 'loc_2777']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx],', '0Ah']
mov ['byte', 'ptr', '[ebp+var_28],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['al,', 'byte', 'ptr', '[ebp+var_28]']
jmp ['short', 'loc_278D']
mov ['byte', 'ptr', '[ebp+var_2C+3],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['al,', 'byte', 'ptr', '[ebp+var_2C+3]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?AddNameToCensor@@YGXAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_280E']
cmp ['[ebp+var_8],', '1']
jz ['short', 'loc_2800']
jmp ['short', 'loc_2812']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?DoesNameContainWildcard@@YG_NABVUString@@@Z']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'al']
jmp ['short', 'loc_2812']
mov ['byte', 'ptr', '[ebp+var_4+3],', '1']
movzx ['edx,', '[ebp+arg_10]']
push ['edx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_4+3]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?AddPreItem@CCensor@NWildcard@@QAEX_NABVUString@@00@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?AddToCensorFromNonSwitchesStrings@@YGXPAV?$CObjectVector@UCRenamePair@@@@IAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@W4EEnum@NRecursedType@@_N4H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddToCensorFromNonSwitchesStrings@@YGXPAV?$CObjectVector@UCRenamePair@@@@IAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@W4EEnum@NRecursedType@@_N4H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_288C']
mov ['ecx,', '[ebp+arg_C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_28CE']
movzx ['eax,', '[ebp+arg_18]']
test ['eax,', 'eax']
jnz ['short', 'loc_28CE']
mov ['ecx,', 'ds:_kUniversalWildcard']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
push ['1']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
push ['1']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?AddNameToCensor@@YGXAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_10],', '0FFFFFFFFh']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_28E6']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['loc_29C7']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2933']
push ['0']
mov ['eax,', 'ds:_kEmptyFilePath']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+var_18]']
call ['??BUString@@QBEPB_WXZ']
movzx ['edx,', 'word', 'ptr', '[eax]']
cmp ['edx,', '40h']
jnz ['short', 'loc_296C']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
movzx ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
push ['1']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?AddToCensorFromListFile@@YGXPAV?$CObjectVector@UCRenamePair@@@@AAVCCensor@NWildcard@@PB_W_NW4EEnum@NRecursedType@@3H@Z']
jmp ['short', 'loc_29C2']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_29AA']
cmp ['[ebp+var_10],', '0FFFFFFFFh']
jnz ['short', 'loc_2980']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_29A8']
movzx ['eax,', '[ebp+arg_14]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?AddRenamePair@@YGXPAV?$CObjectVector@UCRenamePair@@@@ABVUString@@1W4EEnum@NRecursedType@@_N@Z']
mov ['[ebp+var_10],', '0FFFFFFFFh']
jmp ['short', 'loc_29C2']
movzx ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?AddNameToCensor@@YGXAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z']
jmp ['loc_28DD']
cmp ['[ebp+var_10],', '0FFFFFFFFh']
jz ['short', 'loc_29FC']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG77143']
lea ['ecx,', '[ebp+var_3C]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
endp
?AddRenamePair@@YGXPAV?$CObjectVector@UCRenamePair@@@@ABVUString@@1W4EEnum@NRecursedType@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddRenamePair@@YGXPAV?$CObjectVector@UCRenamePair@@@@ABVUString@@1W4EEnum@NRecursedType@@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?AddNew@?$CObjectVector@UCRenamePair@@@@QAEAAUCRenamePair@@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_C]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['dl,', '[ebp+arg_10]']
mov ['[ecx+18h],', 'dl']
mov ['ecx,', '[ebp+var_10]']
call ['?Prepare@CRenamePair@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['loc_2B49']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
lea ['ecx,', '[ebp+var_20]']
call ['?Add_LF@UString@@QAEXXZ']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '0Ch']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
lea ['ecx,', '[ebp+var_20]']
call ['?Add_LF@UString@@QAEXXZ']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_2B03']
push ['offset', '$SG77063']
lea ['ecx,', '[ebp+var_20]']
call ['?AddAscii@UString@@QAEXPBD@Z']
jmp ['short', 'loc_2B16']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_2B16']
push ['offset', '$SG77066']
lea ['ecx,', '[ebp+var_20]']
call ['?AddAscii@UString@@QAEXPBD@Z']
lea ['ecx,', '[ebp+var_20]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG77075']
lea ['ecx,', '[ebp+var_30]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['eax,', '[ebp+var_30]']
push ['eax']
call ['__CxxThrowException@8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?AddToCensorFromListFile@@YGXPAV?$CObjectVector@UCRenamePair@@@@AAVCCensor@NWildcard@@PB_W_NW4EEnum@NRecursedType@@3H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddToCensorFromListFile@@YGXPAV?$CObjectVector@UCRenamePair@@@@AAVCCensor@NWildcard@@PB_W_NW4EEnum@NRecursedType@@3H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '40h']
push ['edi']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2C08']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', 'ds:_kCannotFindListFile']
push ['eax']
lea ['ecx,', '[ebp+var_34]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_2C41']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', 'ds:_kIncorrectListFile']
push ['ecx']
lea ['ecx,', '[ebp+var_40]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['edx,', '[ebp+var_40]']
push ['edx']
call ['__CxxThrowException@8']
cmp ['[ebp+arg_0],', '0']
jz ['loc_2CCB']
lea ['ecx,', '[ebp+var_1C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
and ['eax,', '1']
jz ['short', 'loc_2C79']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', 'ds:_kIncorrectListFile']
push ['ecx']
lea ['ecx,', '[ebp+var_4C]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['edx,', '[ebp+var_4C]']
push ['edx']
call ['__CxxThrowException@8']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_2C8B']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '2']
mov ['[ebp+var_24],', 'eax']
lea ['ecx,', '[ebp+var_1C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_24],', 'eax']
jnb ['short', 'loc_2CC9']
movzx ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?AddRenamePair@@YGXPAV?$CObjectVector@UCRenamePair@@@@ABVUString@@1W4EEnum@NRecursedType@@_N@Z']
jmp ['short', 'loc_2C82']
jmp ['short', 'loc_2D10']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_2CDD']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
lea ['ecx,', '[ebp+var_1C]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_28],', 'eax']
jnb ['short', 'loc_2D10']
movzx ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
movzx ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?AddNameToCensor@@YGXAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z']
jmp ['short', 'loc_2CD4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
?AddSwitchWildcardsToCensor@@YGXAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@_NW4EEnum@NRecursedType@@2H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddSwitchWildcardsToCensor@@YGXAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@_NW4EEnum@NRecursedType@@2H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '3Ch']
push ['edi']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2DC2']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jnb ['loc_2FA6']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_20],', '0']
mov ['ecx,', '[ebp+var_18]']
call ['?Len@UString@@QBEIXZ']
cmp ['eax,', '2']
jnb ['short', 'loc_2E02']
mov ['[ebp+var_10],', 'offset', '$SG77247']
jmp ['loc_2FA6']
mov ['ecx,', '[ebp+var_18]']
call ['??BUString@@QBEPB_WXZ']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[eax+edx*2]']
push ['eax']
call ['?MyCharLower_Ascii@@YG_W_W@Z']
movzx ['ecx,', 'ax']
cmp ['ecx,', '72h']
jnz ['short', 'loc_2E7C']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['ecx,', '[ebp+var_18]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_20]']
mov ['dx,', '[eax+ecx*2]']
mov ['[ebp+var_24],', 'dx']
mov ['[ebp+var_28],', '0FFFFFFFFh']
movzx ['eax,', '[ebp+var_24]']
cmp ['eax,', '7Fh']
jg ['short', 'loc_2E5F']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_24]']
push ['ecx']
mov ['edx,', 'ds:_kRecursedPostCharSet']
push ['edx']
call ['?FindCharPosInString@@YGHPBDD@Z']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_28]']
push ['eax']
call ['?GetRecursedTypeFromIndex@@YG?AW4EEnum@NRecursedType@@H@Z']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_28],', '0']
jl ['short', 'loc_2E7A']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_2E82']
mov ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_1C],', 'edx']
mov ['ecx,', '[ebp+var_18]']
call ['?Len@UString@@QBEIXZ']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '2']
cmp ['eax,', 'ecx']
jnb ['short', 'loc_2EA0']
mov ['[ebp+var_10],', 'offset', '$SG77256']
jmp ['loc_2FA6']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_18]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
cmp ['edx,', '21h']
jnz ['short', 'loc_2EF3']
movzx ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
movzx ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?AddNameToCensor@@YGXAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z']
jmp ['loc_2F92']
mov ['ecx,', '[ebp+var_18]']
call ['??BUString@@QBEPB_WXZ']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[eax+edx*2]']
cmp ['eax,', '40h']
jnz ['short', 'loc_2F2F']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
movzx ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
movzx ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_38]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['0']
call ['?AddToCensorFromListFile@@YGXPAV?$CObjectVector@UCRenamePair@@@@AAVCCensor@NWildcard@@PB_W_NW4EEnum@NRecursedType@@3H@Z']
jmp ['short', 'loc_2F92']
mov ['ecx,', '[ebp+var_18]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
cmp ['edx,', '23h']
jnz ['short', 'loc_2F7A']
movzx ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
movzx ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ParseMapWithPaths@@YGPBDAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2F78']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_38]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_2FA6']
jmp ['short', 'loc_2F92']
mov ['[ebp+var_10],', 'offset', '$SG77265']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_38]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_2FA6']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_38]']
call ['??1UString@@QAE@XZ']
jmp ['loc_2DB9']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_14],', 'eax']
jz ['short', 'loc_2FE1']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['__CxxThrowException@8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?ParseMapWithPaths@@YGPBDAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ParseMapWithPaths@@YGPBDAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0B4h']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '2Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
push ['3Ah']
lea ['ecx,', '[ebp+var_1C]']
call ['?Find@UString@@QBEH_W@Z']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jge ['short', 'loc_30BB']
mov ['ecx,', 'ds:?k_IncorrectMapCommand@@3PBDB']
mov ['[ebp+var_8C],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_8C]']
jmp ['loc_3451']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
push ['edx']
push ['3Ah']
lea ['ecx,', '[ebp+var_1C]']
call ['?Find@UString@@QBEH_WI@Z']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jge ['short', 'loc_30FA']
mov ['eax,', 'ds:?k_IncorrectMapCommand@@3PBDB']
mov ['[ebp+var_90],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_90]']
jmp ['loc_3451']
lea ['ecx,', '[ebp+var_1C]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_28]']
lea ['edx,', '[eax+ecx*2+2]']
push ['edx']
lea ['ecx,', '[ebp+var_38]']
call ['??0CEventSetEnd@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_28]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['?DeleteFrom@UString@@QAEXI@Z']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
call ['?StringToUInt32@@YG_NPB_WAAI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3161']
cmp ['[ebp+var_44],', '2']
jb ['short', 'loc_3161']
cmp ['[ebp+var_44],', '80000000h']
ja ['short', 'loc_3161']
mov ['eax,', '[ebp+var_44]']
xor ['edx,', 'edx']
mov ['ecx,', '2']
div ['ecx']
test ['edx,', 'edx']
jz ['short', 'loc_3191']
mov ['[ebp+var_94],', 'offset', '$SG77195']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1CEventSetEnd@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_94]']
jmp ['loc_3451']
mov ['edx,', '[ebp+var_24]']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['?DeleteFrom@UString@@QAEXI@Z']
lea ['ecx,', '[ebp+var_50]']
call ['??0CFileMapping@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
lea ['ecx,', '[ebp+var_A4]']
push ['ecx']
call ['?GetSystemString@@YG?AVAString@@ABVUString@@@Z']
mov ['[ebp+var_BC],', 'eax']
mov ['edx,', '[ebp+var_BC]']
mov ['[ebp+var_C0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_C0]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
push ['4']
lea ['ecx,', '[ebp+var_50]']
call ['?Open@CFileMapping@NWindows@@QAEIKPBD@Z']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['[ebp+var_95],', 'al']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_A4]']
call ['??1AString@@QAE@XZ']
movzx ['eax,', '[ebp+var_95]']
test ['eax,', 'eax']
jz ['short', 'loc_3247']
mov ['[ebp+var_A8],', 'offset', '$SG77201']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1CFileMapping@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1CEventSetEnd@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_A8]']
jmp ['loc_3451']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
push ['0']
push ['0']
push ['4']
lea ['ecx,', '[ebp+var_50]']
call ['?Map@CFileMapping@NWindows@@QAEPAXK_KK@Z']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0']
jnz ['short', 'loc_329E']
mov ['[ebp+var_AC],', 'offset', '$SG77205']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1CFileMapping@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1CEventSetEnd@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_AC]']
jmp ['loc_3451']
mov ['edx,', '[ebp+var_58]']
push ['edx']
lea ['ecx,', '[ebp+var_60]']
call ['??0CFileUnmapper@NWindows@@QAE@PBX@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_74]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['eax,', '[ebp+var_58]']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_331E']
mov ['[ebp+var_B0],', 'offset', '$SG77212']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_74]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_60]']
call ['??1CFileUnmapper@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1CFileMapping@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1CEventSetEnd@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_B0]']
jmp ['loc_3451']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_84],', '1']
jmp ['short', 'loc_3341']
mov ['ecx,', '[ebp+var_84]']
add ['ecx,', '1']
mov ['[ebp+var_84],', 'ecx']
mov ['edx,', '[ebp+var_84]']
cmp ['edx,', '[ebp+var_80]']
jnb ['short', 'loc_33A2']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[ebp+var_7C]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_88],', 'dx']
movzx ['eax,', '[ebp+var_88]']
test ['eax,', 'eax']
jnz ['short', 'loc_3390']
movzx ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?AddNameToCensor@@YGXAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z']
lea ['ecx,', '[ebp+var_74]']
call ['?Empty@UString@@QAEXXZ']
jmp ['short', 'loc_33A0']
movzx ['eax,', '[ebp+var_88]']
push ['eax']
lea ['ecx,', '[ebp+var_74]']
call ['??YUString@@QAEAAV0@_W@Z']
jmp ['short', 'loc_3332']
lea ['ecx,', '[ebp+var_74]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3402']
mov ['[ebp+var_B4],', 'offset', '$SG77224']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_74]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_60]']
call ['??1CFileUnmapper@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1CFileMapping@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1CEventSetEnd@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_B4]']
jmp ['short', 'loc_3451']
mov ['[ebp+var_B8],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_74]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_60]']
call ['??1CFileUnmapper@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1CFileMapping@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1CEventSetEnd@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_B8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN30']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?SetAddCommandOptions@@YGXW4EEnum@NCommandType@@ABVCParser@NCommandLineParser@@AAUCUpdateOptions@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetAddCommandOptions@@YGXW4EEnum@NCommandType@@ABVCParser@NCommandLineParser@@AAUCUpdateOptions@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0DCh']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_E8],', 'eax']
cmp ['[ebp+var_E8],', '0']
jz ['short', 'loc_3560']
cmp ['[ebp+var_E8],', '2']
jz ['short', 'loc_3571']
jmp ['short', 'loc_3582']
mov ['ecx,', '7']
mov ['esi,', 'offset', '?k_ActionSet_Add@NUpdateArchive@@3UCActionSet@1@B']
lea ['edi,', '[ebp+var_30]']
rep ['movsd']
jmp ['short', 'loc_3591']
mov ['ecx,', '7']
mov ['esi,', 'offset', '?k_ActionSet_Delete@NUpdateArchive@@3UCActionSet@1@B']
lea ['edi,', '[ebp+var_30]']
rep ['movsd']
jmp ['short', 'loc_3591']
mov ['ecx,', '7']
mov ['esi,', 'offset', '?k_ActionSet_Update@NUpdateArchive@@3UCActionSet@1@B']
lea ['edi,', '[ebp+var_30]']
rep ['movsd']
mov ['ecx,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[ecx+44h],', '1']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '38h']
call ['?Clear@?$CObjectVector@UCUpdateArchiveCommand@@@@QAEXXZ']
lea ['ecx,', '[ebp+var_B8]']
call ['??0CUpdateArchiveCommand@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '7']
lea ['esi,', '[ebp+var_30]']
lea ['edi,', '[ebp+var_54]']
rep ['movsd']
lea ['edx,', '[ebp+var_B8]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '38h']
call ['?Add@?$CObjectVector@UCUpdateArchiveCommand@@@@QAEIABUCUpdateArchiveCommand@@@Z']
push ['17h']
mov ['ecx,', '[ebp+arg_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_3600']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
push ['17h']
mov ['ecx,', '[ebp+arg_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['?ParseUpdateCommandString@@YGXAAUCUpdateOptions@@ABV?$CObjectVector@VUString@@@@ABUCActionSet@NUpdateArchive@@@Z']
push ['11h']
mov ['ecx,', '[ebp+arg_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['short', 'loc_3665']
push ['0']
push ['11h']
mov ['ecx,', '[ebp+arg_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['[ebp+var_C0],', 'eax']
mov ['ecx,', '[ebp+var_C0]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3650']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '0D4h']
push ['edx']
call ['?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z']
jmp ['short', 'loc_3665']
mov ['eax,', '[ebp+var_C0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '0D4h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
push ['1Bh']
mov ['ecx,', '[ebp+arg_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[ebp+arg_8]']
mov ['dl,', '[eax]']
mov ['[ecx+0A4h],', 'dl']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0A4h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_36AD']
push ['0']
push ['1Bh']
mov ['ecx,', '[ebp+arg_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '0A8h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
push ['18h']
mov ['ecx,', '[ebp+arg_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['edx,', 'byte', 'ptr', '[eax]']
test ['edx,', 'edx']
jz ['loc_379E']
push ['18h']
mov ['ecx,', '[ebp+arg_4]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['[ebp+var_C4],', 'eax']
mov ['[ebp+var_C8],', '0']
jmp ['short', 'loc_36F0']
mov ['eax,', '[ebp+var_C8]']
add ['eax,', '1']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_C8],', 'eax']
jnb ['loc_379E']
lea ['ecx,', '[ebp+var_D4]']
push ['ecx']
mov ['edx,', '[ebp+var_C8]']
push ['edx']
mov ['ecx,', '[ebp+var_C4]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?ParseComplexSize@@YG_NPB_WAA_K@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3742']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_D4]']
or ['ecx,', 'dword', 'ptr', '[ebp+var_D4+4]']
jnz ['short', 'loc_377D']
mov ['edx,', '[ebp+var_C8]']
push ['edx']
mov ['ecx,', '[ebp+var_C4]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG77420']
lea ['ecx,', '[ebp+var_E4]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['eax,', '[ebp+var_E4]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_D4+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_D4]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '108h']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
jmp ['loc_36E1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B8]']
call ['??1CUpdateArchiveCommand@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ParseUpdateCommandString@@YGXAAUCUpdateOptions@@ABV?$CObjectVector@VUString@@@@ABUCActionSet@NUpdateArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ParseUpdateCommandString@@YGXAAUCUpdateOptions@@ABV?$CObjectVector@VUString@@@@ABUCActionSet@NUpdateArchive@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F0h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'offset', '$SG77364']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_389C']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_18],', 'eax']
jnb ['loc_3A6A']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', 'ds:_kUpdateIgnoreItselfPostStringID']
push ['edx']
mov ['ecx,', '[ebp+var_1C]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_38F6']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+44h]']
test ['edx,', 'edx']
jz ['short', 'loc_38F1']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+44h],', '0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '38h']
call ['?Delete@?$CObjectVector@UCUpdateArchiveCommand@@@@QAEXI@Z']
jmp ['loc_3A65']
mov ['esi,', '[ebp+arg_8]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_3C]']
rep ['movsd']
lea ['ecx,', '[ebp+var_50]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['?ParseUpdateCommandString2@@YG_NABVUString@@AAUCActionSet@NUpdateArchive@@AAV1@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_393E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_50]']
call ['??1UString@@QAE@XZ']
jmp ['loc_3A6A']
lea ['ecx,', '[ebp+var_50]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3979']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+44h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3974']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '38h']
call ['??A?$CObjectVector@UCUpdateArchiveCommand@@@@QAEAAUCUpdateArchiveCommand@@I@Z']
add ['eax,', '64h']
mov ['ecx,', '7']
lea ['esi,', '[ebp+var_3C]']
mov ['edi,', 'eax']
rep ['movsd']
jmp ['loc_3A56']
lea ['ecx,', '[ebp+var_50]']
call ['??BUString@@QBEPB_WXZ']
movzx ['edx,', 'word', 'ptr', '[eax]']
cmp ['edx,', '21h']
jz ['short', 'loc_399D']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_50]']
call ['??1UString@@QAE@XZ']
jmp ['loc_3A6A']
lea ['ecx,', '[ebp+var_D8]']
call ['??0CUpdateArchiveCommand@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
push ['1']
lea ['ecx,', '[ebp+var_50]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
lea ['ecx,', '[ebp+var_EC]']
call ['??0UString@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_EC]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3A07']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_EC]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_D8]']
call ['??1CUpdateArchiveCommand@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_50]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_3A6A']
lea ['ecx,', '[ebp+var_EC]']
push ['ecx']
lea ['ecx,', '[ebp+var_D8]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '7']
lea ['esi,', '[ebp+var_3C]']
lea ['edi,', '[ebp+var_74]']
rep ['movsd']
lea ['edx,', '[ebp+var_D8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '38h']
call ['?Add@?$CObjectVector@UCUpdateArchiveCommand@@@@QAEIABUCUpdateArchiveCommand@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_EC]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_D8]']
call ['??1CUpdateArchiveCommand@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_50]']
call ['??1UString@@QAE@XZ']
jmp ['loc_3893']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_18],', 'eax']
jz ['short', 'loc_3AAB']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['ecx,', '[ebp+var_FC]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['edx,', '[ebp+var_FC]']
push ['edx']
call ['__CxxThrowException@8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ParseUpdateCommandString2@@YG_NABVUString@@AAUCActionSet@NUpdateArchive@@AAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jnb ['loc_3C3C']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
push ['edx']
call ['?MyCharLower_Ascii@@YG_W_W@Z']
mov ['word', 'ptr', '[ebp+var_8],', 'ax']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
push ['eax']
mov ['ecx,', 'ds:_kUpdatePairStateIDSet']
push ['ecx']
call ['?FindCharPosInString@@YGHPB_W_W@Z']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jge ['short', 'loc_3BC2']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??4UString@@QAEAAV0@PB_W@Z']
mov ['al,', '1']
jmp ['loc_3C46']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jb ['short', 'loc_3BDC']
xor ['al,', 'al']
jmp ['short', 'loc_3C46']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dx,', '[eax+ecx*2]']
mov ['word', 'ptr', '[ebp+var_8],', 'dx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
cmp ['eax,', '30h']
jl ['short', 'loc_3C01']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['ecx,', '34h']
jb ['short', 'loc_3C05']
xor ['al,', 'al']
jmp ['short', 'loc_3C46']
movzx ['edx,', 'word', 'ptr', '[ebp+var_8]']
sub ['edx,', '30h']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '_kUpdatePairStateNotSupportedActions[eax*4]']
cmp ['ecx,', '[ebp+var_10]']
jnz ['short', 'loc_3C2E']
xor ['al,', 'al']
jmp ['short', 'loc_3C46']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
jmp ['loc_3B62']
mov ['ecx,', '[ebp+arg_8]']
call ['?Empty@UString@@QAEXXZ']
mov ['al,', '1']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SetMethodOptions@@YGXABVCParser@NCommandLineParser@@AAV?$CObjectVector@UCProperty@@@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetMethodOptions@@YGXABVCParser@NCommandLineParser@@AAV?$CObjectVector@UCProperty@@@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['0Fh']
mov ['ecx,', '[ebp+arg_0]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
test ['eax,', 'eax']
jz ['loc_3D64']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_3CC0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
push ['0Fh']
mov ['ecx,', '[ebp+arg_0]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_10],', 'eax']
jnb ['loc_3D64']
lea ['ecx,', '[ebp+var_2C]']
call ['??0CProperty@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_10]']
push ['edx']
push ['0Fh']
mov ['ecx,', '[ebp+arg_0]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
push ['3Dh']
lea ['ecx,', '[ebp+var_2C]']
call ['?Find@UString@@QBEH_W@Z']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jl ['short', 'loc_3D44']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??4UString@@QAEAAV0@PB_W@Z']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['?DeleteFrom@UString@@QAEXI@Z']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1CProperty@@QAE@XZ']
jmp ['loc_3CB7']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?FindCharset@@YGHABVCParser@NCommandLineParser@@I_NH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?FindCharset@@YGHABVCParser@NCommandLineParser@@I_NH@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '40h']
push ['edi']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3E04']
mov ['eax,', '[ebp+arg_C]']
jmp ['loc_3F10']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['?Back@?$CObjectVector@VUString@@@@QBEABVUString@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_28]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?StringToUInt32@@YG_NPB_WAAI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3E69']
cmp ['[ebp+var_28],', '10000h']
jnb ['short', 'loc_3E69']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_3C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_3C]']
jmp ['loc_3F10']
lea ['ecx,', '[ebp+var_1C]']
call ['?MakeLower_Ascii@UString@@QAEXXZ']
movzx ['eax,', '[ebp+arg_8]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '0FFFFFFFEh']
add ['eax,', '5']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_3E94']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '1']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_34]']
cmp ['edx,', '[ebp+var_30]']
jnz ['short', 'loc_3EC0']
lea ['ecx,', '[ebp+var_1C]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG77519']
lea ['ecx,', '[ebp+var_48]']
call ['??0CArcCmdLineException@@QAE@PBDPB_W@Z']
push ['offset', '__TI2?AUCArcCmdLineException@@']
lea ['eax,', '[ebp+var_48]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+var_34]']
lea ['edx,', '_g_CodePagePairs[ecx*8]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['?IsEqualTo@UString@@QBE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3EFF']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4C],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4C]']
jmp ['short', 'loc_3F10']
jmp ['short', 'loc_3E8B']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?SetBoolPair@@YGXAAVCParser@NCommandLineParser@@IAAUCBoolPair@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
mov ['ecx,', '[ebp+arg_8]']
mov ['dl,', '[eax]']
mov ['[ecx+1],', 'dl']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3FB2']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z']
movzx ['eax,', 'byte', 'ptr', '[eax+1]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'al']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$??0CArcCmdLineException@@QAE@PBDPB_W@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineException@@QAE@PBDPB_W@Z$1 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineException@@QAE@PBDPB_W@Z$2 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CArcCmdLineException@@QAE@PBDPB_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CArcCmdLineException@@QAE@PBDPB_W@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ConvertToLongNames@@YGXABVUString@@AAVCCensorNode@NWildcard@@@Z$0 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?ConvertToLongNames@@YGXABVUString@@AAVCCensorNode@NWildcard@@@Z$1 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ConvertToLongNames@@YGXABVUString@@AAVCCensorNode@NWildcard@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-48h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ConvertToLongNames@@YGXABVUString@@AAVCCensorNode@NWildcard@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ConvertToLongName@@YGXABVUString@@AAV1@@Z$0 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ']
endp
__unwindfunclet$?ConvertToLongName@@YGXABVUString@@AAV1@@Z$1 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ConvertToLongName@@YGXABVUString@@AAV1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-5Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ConvertToLongName@@YGXABVUString@@AAV1@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Parse1@CArcCmdLineParser@@QAEXABV?$CObjectVector@VUString@@@@AAUCArcCmdLineOptions@@@Z$0 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?Parse1@CArcCmdLineParser@@QAEXABV?$CObjectVector@VUString@@@@AAUCArcCmdLineOptions@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-70h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Parse1@CArcCmdLineParser@@QAEXABV?$CObjectVector@VUString@@@@AAUCArcCmdLineOptions@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?EnumerateDirItemsAndSort@@YGJAAVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAV?$CObjectVector@VUString@@@@3AAUCDirItemsStat@@PAUIDirItemsCallback@@@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?EnumerateDirItemsAndSort@@YGJAAVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAV?$CObjectVector@VUString@@@@3AAUCDirItemsStat@@PAUIDirItemsCallback@@@Z$1 proc near
lea ['ecx,', '[ebp-0C4h]']
jmp ['??1CDirItems@@QAE@XZ']
endp
__unwindfunclet$?EnumerateDirItemsAndSort@@YGJAAVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAV?$CObjectVector@VUString@@@@3AAUCDirItemsStat@@PAUIDirItemsCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-12Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?EnumerateDirItemsAndSort@@YGJAAVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAV?$CObjectVector@VUString@@@@3AAUCDirItemsStat@@PAUIDirItemsCallback@@@Z$3 proc near
lea ['ecx,', '[ebp-0E8h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?EnumerateDirItemsAndSort@@YGJAAVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAV?$CObjectVector@VUString@@@@3AAUCDirItemsStat@@PAUIDirItemsCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-100h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?EnumerateDirItemsAndSort@@YGJAAVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAV?$CObjectVector@VUString@@@@3AAUCDirItemsStat@@PAUIDirItemsCallback@@@Z$5 proc near
lea ['ecx,', '[ebp-114h]']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$?EnumerateDirItemsAndSort@@YGJAAVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAV?$CObjectVector@VUString@@@@3AAUCDirItemsStat@@PAUIDirItemsCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-150h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?EnumerateDirItemsAndSort@@YGJAAVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAV?$CObjectVector@VUString@@@@3AAUCDirItemsStat@@PAUIDirItemsCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ParseArchiveCommand@@YG_NABVUString@@AAUCArcCommand@@@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ParseArchiveCommand@@YG_NABVUString@@AAUCArcCommand@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ParseArchiveCommand@@YG_NABVUString@@AAUCArcCommand@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?AddToCensorFromNonSwitchesStrings@@YGXPAV?$CObjectVector@UCRenamePair@@@@IAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@W4EEnum@NRecursedType@@_N4H@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?AddToCensorFromNonSwitchesStrings@@YGXPAV?$CObjectVector@UCRenamePair@@@@IAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@W4EEnum@NRecursedType@@_N4H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-38h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddToCensorFromNonSwitchesStrings@@YGXPAV?$CObjectVector@UCRenamePair@@@@IAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@W4EEnum@NRecursedType@@_N4H@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?AddRenamePair@@YGXPAV?$CObjectVector@UCRenamePair@@@@ABVUString@@1W4EEnum@NRecursedType@@_N@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?AddRenamePair@@YGXPAV?$CObjectVector@UCRenamePair@@@@ABVUString@@1W4EEnum@NRecursedType@@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddRenamePair@@YGXPAV?$CObjectVector@UCRenamePair@@@@ABVUString@@1W4EEnum@NRecursedType@@_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?AddToCensorFromListFile@@YGXPAV?$CObjectVector@UCRenamePair@@@@AAVCCensor@NWildcard@@PB_W_NW4EEnum@NRecursedType@@3H@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__ehhandler$?AddToCensorFromListFile@@YGXPAV?$CObjectVector@UCRenamePair@@@@AAVCCensor@NWildcard@@PB_W_NW4EEnum@NRecursedType@@3H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-48h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddToCensorFromListFile@@YGXPAV?$CObjectVector@UCRenamePair@@@@AAVCCensor@NWildcard@@PB_W_NW4EEnum@NRecursedType@@3H@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?AddSwitchWildcardsToCensor@@YGXAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@_NW4EEnum@NRecursedType@@2H@Z$0 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?AddSwitchWildcardsToCensor@@YGXAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@_NW4EEnum@NRecursedType@@2H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-44h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddSwitchWildcardsToCensor@@YGXAAVCCensor@NWildcard@@ABV?$CObjectVector@VUString@@@@_NW4EEnum@NRecursedType@@2H@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ParseMapWithPaths@@YGPBDAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?ParseMapWithPaths@@YGPBDAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z$1 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1CEventSetEnd@@QAE@XZ']
endp
__unwindfunclet$?ParseMapWithPaths@@YGPBDAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z$2 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1CFileMapping@NWindows@@QAE@XZ']
endp
__unwindfunclet$?ParseMapWithPaths@@YGPBDAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z$3 proc near
lea ['ecx,', '[ebp-0A4h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?ParseMapWithPaths@@YGPBDAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z$4 proc near
lea ['ecx,', '[ebp-60h]']
jmp ['??1CFileUnmapper@NWindows@@QAE@XZ']
endp
__unwindfunclet$?ParseMapWithPaths@@YGPBDAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z$5 proc near
lea ['ecx,', '[ebp-74h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ParseMapWithPaths@@YGPBDAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0BCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ParseMapWithPaths@@YGPBDAAVCCensor@NWildcard@@ABVUString@@_NW4EEnum@NRecursedType@@2@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetAddCommandOptions@@YGXW4EEnum@NCommandType@@ABVCParser@NCommandLineParser@@AAUCUpdateOptions@@@Z$0 proc near
lea ['ecx,', '[ebp-0B8h]']
jmp ['??1CUpdateArchiveCommand@@QAE@XZ']
endp
__ehhandler$?SetAddCommandOptions@@YGXW4EEnum@NCommandType@@ABVCParser@NCommandLineParser@@AAUCUpdateOptions@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetAddCommandOptions@@YGXW4EEnum@NCommandType@@ABVCParser@NCommandLineParser@@AAUCUpdateOptions@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ParseUpdateCommandString@@YGXAAUCUpdateOptions@@ABV?$CObjectVector@VUString@@@@ABUCActionSet@NUpdateArchive@@@Z$0 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?ParseUpdateCommandString@@YGXAAUCUpdateOptions@@ABV?$CObjectVector@VUString@@@@ABUCActionSet@NUpdateArchive@@@Z$1 proc near
lea ['ecx,', '[ebp-0D8h]']
jmp ['??1CUpdateArchiveCommand@@QAE@XZ']
endp
__unwindfunclet$?ParseUpdateCommandString@@YGXAAUCUpdateOptions@@ABV?$CObjectVector@VUString@@@@ABUCActionSet@NUpdateArchive@@@Z$2 proc near
lea ['ecx,', '[ebp-0ECh]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ParseUpdateCommandString@@YGXAAUCUpdateOptions@@ABV?$CObjectVector@VUString@@@@ABUCActionSet@NUpdateArchive@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0FCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ParseUpdateCommandString@@YGXAAUCUpdateOptions@@ABV?$CObjectVector@VUString@@@@ABUCActionSet@NUpdateArchive@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetMethodOptions@@YGXABVCParser@NCommandLineParser@@AAV?$CObjectVector@UCProperty@@@@@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1CProperty@@QAE@XZ']
endp
__ehhandler$?SetMethodOptions@@YGXABVCParser@NCommandLineParser@@AAV?$CObjectVector@UCProperty@@@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetMethodOptions@@YGXABVCParser@NCommandLineParser@@AAV?$CObjectVector@UCProperty@@@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?FindCharset@@YGHABVCParser@NCommandLineParser@@I_NH@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?FindCharset@@YGHABVCParser@NCommandLineParser@@I_NH@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-48h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?FindCharset@@YGHABVCParser@NCommandLineParser@@I_NH@Z']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??H@YG?AVUString@@ABV0@_W@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@AAE@ABV0@_W@Z']
mov ['edx,', '[ebp+var_4]']
or ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?StringsAreEqualNoCase@@YG_NPB_W0@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsDriveItem@CItem@NWildcard@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_47A9']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_47A9']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Eh]']
test ['eax,', 'eax']
jz ['short', 'loc_47A9']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?IsDriveColonName@NWildcard@@YG_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_47A9']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_47B0']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@AString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@AString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??ACParser@NCommandLineParser@@QBEABUCSwitchResult@1@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '14h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CArcCmdLineException@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CArcCmdLineException@@QAE@ABU0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsDir@CDirItem@@QBE_NXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+3Ch]']
and ['eax,', '10h']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CDirItems@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDirItems@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8Ch']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['??1CUniqBlocks@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1?$CObjectVector@UCDirItem@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CDirItems@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??1CDirItems@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@H@@QAE@XZ']
endp
__unwindfunclet$??1CDirItems@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CRecordVector@H@@QAE@XZ']
endp
__unwindfunclet$??1CDirItems@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$CObjectVector@UCDirItem@@@@QAE@XZ']
endp
__unwindfunclet$??1CDirItems@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '68h']
jmp ['??1CUniqBlocks@@QAE@XZ']
endp
__ehhandler$??1CDirItems@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDirItems@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CUniqBlocks@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUniqBlocks@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@I@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUniqBlocks@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
endp
__unwindfunclet$??1CUniqBlocks@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$CRecordVector@I@@QAE@XZ']
endp
__ehhandler$??1CUniqBlocks@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUniqBlocks@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?SetTrueTrue@CBoolPair@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1],', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??8@YG_NABVUString@@PB_W@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcscmp']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AllAreRelative@CCensor@NWildcard@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@UCPair@NWildcard@@@@QBEIXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_4C5B']
mov ['ecx,', '[ebp+var_4]']
call ['?Front@?$CObjectVector@UCPair@NWildcard@@@@QBEABUCPair@NWildcard@@XZ']
mov ['ecx,', 'eax']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4C5B']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_4C62']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MakeLower_Ascii@UString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?MyStringLower_Ascii@@YGXPA_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Ptr@UString@@QBEPB_WI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyCharLower_Ascii@@YG_W_W@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '41h']
jl ['short', 'loc_4CDA']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '5Ah']
jg ['short', 'loc_4CDA']
movzx ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
jmp ['short', 'loc_4CDE']
mov ['ax,', '[ebp+arg_0]']
pop ['ebp']
retn ['4']
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YUString@@QAEAAV0@_W@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_4D40']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+eax*2],', 'dx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Find@UString@@QBEH_W@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?FindCharPosInString@@YGHPB_W_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Find@UString@@QBEH_WI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
call ['?FindCharPosInString@@YGHPB_W_W@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_4E06']
mov ['[ebp+var_C],', '0FFFFFFFFh']
jmp ['short', 'loc_4E0F']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?DeleteFrom@UString@@QAEXI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_4E54']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetSystemString@@YG?AVAString@@ABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z']
mov ['edx,', '[ebp+var_4]']
or ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Open@CFileMapping@NWindows@@QAEIKPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpName]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+dwDesiredAccess]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__OpenFileMappingA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4ED5']
xor ['eax,', 'eax']
jmp ['short', 'loc_4EE4']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Map@CFileMapping@NWindows@@QAEPAXK_KK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+dwNumberOfBytesToMap]']
push ['eax']
mov ['ecx,', '[ebp+dwFileOffsetLow]']
push ['ecx']
mov ['eax,', '[ebp+dwFileOffsetLow]']
mov ['edx,', '[ebp+arg_8]']
mov ['cl,', '20h']
call ['__aullshr']
push ['eax']
mov ['edx,', '[ebp+dwDesiredAccess]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__MapViewOfFile@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??0CFileUnmapper@NWindows@@QAE@PBX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CFileUnmapper@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__UnmapViewOfFile@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CEventSetEnd@@QAE@PB_W@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0UString@@QAE@PB_W@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CEventSetEnd@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CEventSetEnd@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['?GetSystemString@@YG?AVAString@@ABVUString@@@Z']
mov ['[ebp+var_30],', 'eax']
mov ['edx,', '[ebp+var_30]']
mov ['[ebp+var_34],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_34]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
push ['0']
push ['2']
lea ['ecx,', '[ebp+var_18]']
call ['?Open@CBaseEvent@NSynchronization@NWindows@@QAEIK_NPBD@Z']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['[ebp+var_1D],', 'al']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2C]']
call ['??1AString@@QAE@XZ']
movzx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_506E']
lea ['ecx,', '[ebp+var_18]']
call ['?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CEventSetEnd@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CEventSetEnd@@QAE@XZ$1 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ']
endp
__unwindfunclet$??1CEventSetEnd@@QAE@XZ$2 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1CEventSetEnd@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CEventSetEnd@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Open@CBaseEvent@NSynchronization@NWindows@@QAEIK_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpName]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?BoolToBOOL@@YGH_N@Z']
push ['eax']
mov ['edx,', '[ebp+dwDesiredAccess]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__OpenEventA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_5182']
xor ['eax,', 'eax']
jmp ['short', 'loc_5191']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?BoolToBOOL@@YGH_N@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
movzx ['eax,', '[ebp+arg_0]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
pop ['ebp']
retn ['4']
endp
?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_Event_Set@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_HandlePtr_Close@4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CFileMapping@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CHandle@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CHandle@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CFileMapping@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CHandle@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CHandle@NWindows@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Close@CHandle@NWindows@@QAE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Close@CHandle@NWindows@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_5343']
mov ['al,', '1']
jmp ['short', 'loc_536B']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_5360']
xor ['al,', 'al']
jmp ['short', 'loc_536B']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['al,', '1']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CUpdateArchiveCommand@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CUpdateArchiveCommand@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CArchivePath@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CUpdateArchiveCommand@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CUpdateArchiveCommand@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CUpdateArchiveCommand@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CArchivePath@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CArchivePath@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+3Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CArchivePath@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CArchivePath@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CUpdateArchiveCommand@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUpdateArchiveCommand@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1CArchivePath@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUpdateArchiveCommand@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CUpdateArchiveCommand@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUpdateArchiveCommand@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CArchivePath@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArchivePath@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CArchivePath@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArchivePath@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?IsEqualTo@UString@@QBE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?StringsAreEqual_Ascii@@YG_NPB_WPBD@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CProperty@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CProperty@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CProperty@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CProperty@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CProperty@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CProperty@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CProperty@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CProperty@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CProperty@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CProperty@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@VUString@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CObjectVector@VUString@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CObjectVector@VUString@@@@QAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_5A33']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_5AC5']
mov ['ecx,', '[ebp+var_10]']
call ['?Clear@?$CObjectVector@VUString@@@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Reserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_5A64']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_5AC2']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_5AA0']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_5AA7']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_5A5B']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Front@?$CObjectVector@VUString@@@@QBEABVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Front@?$CObjectVector@VUString@@@@QAEAAVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Back@?$CObjectVector@VUString@@@@QBEABVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5C70']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_5C77']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5D64']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_5D6B']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddInReserved@?$CObjectVector@VUString@@@@QAEXABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_5E86']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_5E7D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_5E84']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_5E42']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@VUString@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5F6C']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_5F63']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_5F6A']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_5F28']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@VCCensorNode@NWildcard@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VCCensorNode@NWildcard@@@@QAEAAVCCensorNode@NWildcard@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Delete@?$CObjectVector@VCCensorNode@NWildcard@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_601A']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['??_GCCensorNode@NWildcard@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_6021']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Delete@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??Y?$CObjectVector@UCItem@NWildcard@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??Y?$CObjectVector@UCItem@NWildcard@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ']
add ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Reserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_60D4']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['short', 'loc_6132']
push ['10h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6110']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCItem@NWildcard@@@@QBEABUCItem@NWildcard@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CItem@NWildcard@@QAE@ABU01@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_6117']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_60CB']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??Y?$CObjectVector@UCItem@NWildcard@@@@QAEAAV0@ABV0@@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??Y?$CObjectVector@UCItem@NWildcard@@@@QAEAAV0@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??Y?$CObjectVector@UCItem@NWildcard@@@@QAEAAV0@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??A?$CObjectVector@UCItem@NWildcard@@@@QAEAAUCItem@NWildcard@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCPair@NWildcard@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCPair@NWildcard@@@@QAEAAUCPair@NWildcard@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Front@?$CObjectVector@UCPair@NWildcard@@@@QBEABUCPair@NWildcard@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCPair@NWildcard@@@@QBEABUCPair@NWildcard@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_62DA']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_62D1']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_G?$CBuffer@E@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_62D8']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_6296']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Add@?$CRecordVector@_K@@QAEI_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@I@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@I@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@I@@QAEAAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@H@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@UCDirItem@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCDirItem@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_65BA']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_65B1']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCDirItem@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_65B8']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_6576']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCDirItem@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCDirItem@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCDirItem@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_6683']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_6715']
mov ['ecx,', '[ebp+var_10]']
call ['?Clear@?$CObjectVector@UCProperty@@@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCProperty@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Reserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_66B4']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_6712']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_66F0']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCProperty@@@@QBEABUCProperty@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CProperty@@QAE@ABU0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_66F7']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_66AB']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_67E8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CProperty@@QAE@ABU0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_67EF']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCProperty@@@@QAEIABUCProperty@@@Z']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCUpdateArchiveCommand@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCUpdateArchiveCommand@@@@QAEAAUCUpdateArchiveCommand@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@UCUpdateArchiveCommand@@@@QAEIABUCUpdateArchiveCommand@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCUpdateArchiveCommand@@@@QAEIABUCUpdateArchiveCommand@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['80h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_692F']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CUpdateArchiveCommand@@QAE@ABU0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_6936']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCUpdateArchiveCommand@@@@QAEIABUCUpdateArchiveCommand@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCUpdateArchiveCommand@@@@QAEIABUCUpdateArchiveCommand@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCUpdateArchiveCommand@@@@QAEIABUCUpdateArchiveCommand@@@Z']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@UCUpdateArchiveCommand@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6A2C']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_6A23']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCUpdateArchiveCommand@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_6A2A']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_69E8']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Delete@?$CObjectVector@UCUpdateArchiveCommand@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6A8A']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['??_GCUpdateArchiveCommand@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_6A91']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Delete@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNew@?$CObjectVector@UCRenamePair@@@@QAEAAUCRenamePair@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@UCRenamePair@@@@QAEAAUCRenamePair@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_6B13']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CRenamePair@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_6B1A']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@UCRenamePair@@@@QAEAAUCRenamePair@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@UCRenamePair@@@@QAEAAUCRenamePair@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@UCRenamePair@@@@QAEAAUCRenamePair@@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CRenamePair@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CRenamePair@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+18h],', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+1Ch],', '2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CRenamePair@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CRenamePair@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CRenamePair@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??_GUString@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6CA2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCCensorNode@NWildcard@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCensorNode@NWildcard@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6CE2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCensorNode@NWildcard@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCensorNode@NWildcard@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCensorNode@NWildcard@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CCensorNode@NWildcard@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ']
endp
__unwindfunclet$??1CCensorNode@NWildcard@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ']
endp
__ehhandler$??1CCensorNode@NWildcard@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCensorNode@NWildcard@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_6E8A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_6E81']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCCensorNode@NWildcard@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_6E88']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_6E46']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_6F96']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_6F8D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCItem@NWildcard@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_6F94']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_6F52']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CItem@NWildcard@@QAE@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+0Ch]']
mov ['[ecx+0Ch],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+0Dh]']
mov ['[ecx+0Dh],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+0Eh]']
mov ['[ecx+0Eh],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+0Fh]']
mov ['[ecx+0Fh],', 'al']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCItem@NWildcard@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CItem@NWildcard@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_709A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G?$CBuffer@E@@QAEPAXI@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_70DA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCDirItem@@QAEPAXI@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDirItem@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_711A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CProperty@@QAE@ABU0@@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CProperty@@QAE@ABU0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CProperty@@QAE@ABU0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CProperty@@QAE@ABU0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CProperty@@QAE@ABU0@@Z']
jmp ['___CxxFrameHandler3']
endp
??0CUpdateArchiveCommand@@QAE@ABU0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CUpdateArchiveCommand@@QAE@ABU0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
push ['esi']
push ['edi']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CArchivePath@@QAE@ABU0@@Z']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '64h']
mov ['edi,', '[ebp+var_10]']
add ['edi,', '64h']
mov ['ecx,', '7']
rep ['movsd']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CUpdateArchiveCommand@@QAE@ABU0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CUpdateArchiveCommand@@QAE@ABU0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CUpdateArchiveCommand@@QAE@ABU0@@Z']
jmp ['___CxxFrameHandler3']
endp
??_GCUpdateArchiveCommand@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CUpdateArchiveCommand@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7302']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CItem@NWildcard@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CDirItem@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CDirItem@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '34h']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CDirItem@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CDirItem@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__ehhandler$??1CDirItem@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CDirItem@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CArchivePath@@QAE@ABU0@@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CArchivePath@@QAE@ABU0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0UString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '18h']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '24h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0UString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+3Ch]']
mov ['[edx+3Ch],', 'cl']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '40h']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??0UString@@QAE@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4Ch']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CArchivePath@@QAE@ABU0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@ABU0@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@ABU0@@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@ABU0@@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@ABU0@@Z$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@ABU0@@Z$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CArchivePath@@QAE@ABU0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CArchivePath@@QAE@ABU0@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Reserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_76A4']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_767F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_773C']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Delete@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@PAX@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_792B']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_7983']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_7964']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_796B']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_7922']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__unwindfunclet$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z$1 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??A?$CObjectVector@UCItem@NWildcard@@@@QBEABUCItem@NWildcard@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCPair@NWildcard@@@@QBEABUCPair@NWildcard@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_7B18']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_7AF3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCProperty@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCProperty@@@@QBEABUCProperty@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clear@?$CObjectVector@UCProperty@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7BE4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_7BDB']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCProperty@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_7BE2']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_7BA0']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCProperty@@QAEPAXI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProperty@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7C26']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_7D48']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_7D23']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_7DA5']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??__EkSwitchForms@@YAXXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'ds:_k_Stream_PostCharSet']
mov ['ds:dword_65C,', 'eax']
mov ['ds:dword_660,', 'offset', '$SG76900']
mov ['ds:byte_664,', '3']
mov ['ds:byte_665,', '0']
mov ['ds:byte_666,', '1']
mov ['ecx,', 'ds:_k_Stream_PostCharSet']
mov ['ds:dword_668,', 'ecx']
mov ['ds:dword_66C,', 'offset', '$SG76901']
mov ['ds:byte_670,', '3']
mov ['ds:byte_671,', '0']
mov ['ds:byte_672,', '1']
mov ['edx,', 'ds:_k_Stream_PostCharSet']
mov ['ds:dword_674,', 'edx']
mov ['ds:dword_678,', 'offset', '$SG76902']
xor ['eax,', 'eax']
mov ['ds:dword_67C,', 'eax']
mov ['ds:dword_680,', 'eax']
mov ['ds:dword_684,', 'offset', '$SG76903']
xor ['ecx,', 'ecx']
mov ['ds:dword_688,', 'ecx']
mov ['ds:dword_68C,', 'ecx']
mov ['ds:dword_690,', 'offset', '$SG76904']
mov ['ds:byte_694,', '3']
mov ['ds:byte_695,', '0']
mov ['ds:byte_696,', '1']
mov ['edx,', 'ds:_kOverwritePostCharSet']
mov ['ds:dword_698,', 'edx']
mov ['ds:dword_69C,', 'offset', '$SG76905']
mov ['ds:byte_6A0,', '2']
mov ['ds:byte_6A1,', '0']
mov ['ds:byte_6A2,', '1']
xor ['eax,', 'eax']
mov ['ds:dword_6A4,', 'eax']
mov ['ds:dword_6A8,', 'offset', '$SG76906']
mov ['ds:byte_6AC,', '2']
mov ['ds:byte_6AD,', '1']
mov ['ds:byte_6AE,', '1']
xor ['ecx,', 'ecx']
mov ['ds:dword_6B0,', 'ecx']
mov ['ds:dword_6B4,', 'offset', '$SG76907']
mov ['ds:byte_6B8,', '2']
mov ['ds:byte_6B9,', '1']
mov ['ds:byte_6BA,', '1']
xor ['edx,', 'edx']
mov ['ds:dword_6BC,', 'edx']
mov ['ds:dword_6C0,', 'offset', '$SG76908']
mov ['ds:byte_6C4,', '2']
mov ['ds:byte_6C5,', '0']
mov ['ds:byte_6C6,', '1']
xor ['eax,', 'eax']
mov ['ds:dword_6C8,', 'eax']
mov ['ds:dword_6CC,', 'offset', '$SG76909']
mov ['ds:byte_6D0,', '2']
xor ['ecx,', 'ecx']
mov ['ds:dword_6D1,', 'ecx']
mov ['ds:word_6D5,', 'cx']
mov ['ds:byte_6D7,', 'cl']
mov ['ds:dword_6D8,', 'offset', '$SG76910']
mov ['ds:byte_6DC,', '2']
mov ['ds:byte_6DD,', '1']
mov ['ds:byte_6DE,', '2']
xor ['edx,', 'edx']
mov ['ds:dword_6E0,', 'edx']
mov ['ds:dword_6E4,', 'offset', '$SG76911']
mov ['ds:byte_6E8,', '2']
mov ['ds:byte_6E9,', '1']
mov ['ds:byte_6EA,', '2']
xor ['eax,', 'eax']
mov ['ds:dword_6EC,', 'eax']
mov ['ds:dword_6F0,', 'offset', '$SG76912']
mov ['ds:byte_6F4,', '2']
mov ['ds:byte_6F5,', '1']
mov ['ds:byte_6F6,', '2']
xor ['ecx,', 'ecx']
mov ['ds:dword_6F8,', 'ecx']
mov ['ds:dword_6FC,', 'offset', '$SG76913']
mov ['ds:byte_700,', '2']
mov ['ds:byte_701,', '1']
mov ['ds:byte_702,', '2']
xor ['edx,', 'edx']
mov ['ds:dword_704,', 'edx']
mov ['ds:dword_708,', 'offset', '$SG76914']
xor ['eax,', 'eax']
mov ['ds:dword_70C,', 'eax']
mov ['ds:dword_710,', 'eax']
mov ['ds:dword_714,', 'offset', '$SG76915']
mov ['ds:byte_718,', '2']
mov ['ds:byte_719,', '1']
mov ['ds:byte_71A,', '1']
xor ['ecx,', 'ecx']
mov ['ds:dword_71C,', 'ecx']
mov ['ds:dword_720,', 'offset', '$SG76916']
mov ['ds:byte_724,', '2']
mov ['ds:byte_725,', '1']
mov ['ds:byte_726,', '1']
xor ['edx,', 'edx']
mov ['ds:dword_728,', 'edx']
mov ['ds:dword_72C,', 'offset', '$SG76917']
mov ['ds:byte_730,', '3']
mov ['ds:byte_731,', '0']
mov ['ds:byte_732,', '0']
mov ['eax,', 'ds:_kRecursedPostCharSet']
mov ['ds:dword_734,', 'eax']
mov ['ds:dword_738,', 'offset', '$SG76918']
mov ['ds:byte_73C,', '2']
xor ['ecx,', 'ecx']
mov ['ds:dword_73D,', 'ecx']
mov ['ds:word_741,', 'cx']
mov ['ds:byte_743,', 'cl']
mov ['ds:dword_744,', 'offset', '$SG76919']
mov ['ds:byte_748,', '2']
xor ['edx,', 'edx']
mov ['ds:dword_749,', 'edx']
mov ['ds:word_74D,', 'dx']
mov ['ds:byte_74F,', 'dl']
mov ['ds:dword_750,', 'offset', '$SG76920']
mov ['ds:byte_754,', '2']
mov ['ds:byte_755,', '0']
mov ['ds:byte_756,', '0']
xor ['eax,', 'eax']
mov ['ds:dword_758,', 'eax']
mov ['ds:dword_75C,', 'offset', '$SG76921']
mov ['ds:byte_760,', '2']
mov ['ds:byte_761,', '1']
mov ['ds:byte_762,', '0']
xor ['ecx,', 'ecx']
mov ['ds:dword_764,', 'ecx']
mov ['ds:dword_768,', 'offset', '$SG76922']
mov ['ds:byte_76C,', '2']
xor ['edx,', 'edx']
mov ['ds:dword_76D,', 'edx']
mov ['ds:word_771,', 'dx']
mov ['ds:byte_773,', 'dl']
mov ['ds:dword_774,', 'offset', '$SG76923']
xor ['eax,', 'eax']
mov ['ds:dword_778,', 'eax']
mov ['ds:dword_77C,', 'eax']
mov ['ds:dword_780,', 'offset', '$SG76924']
mov ['ds:byte_784,', '1']
xor ['ecx,', 'ecx']
mov ['ds:dword_785,', 'ecx']
mov ['ds:word_789,', 'cx']
mov ['ds:byte_78B,', 'cl']
mov ['ds:dword_78C,', 'offset', '$SG76925']
mov ['ds:byte_790,', '2']
xor ['edx,', 'edx']
mov ['ds:dword_791,', 'edx']
mov ['ds:word_795,', 'dx']
mov ['ds:byte_797,', 'dl']
mov ['ds:dword_798,', 'offset', '$SG76926']
mov ['ds:byte_79C,', '2']
xor ['eax,', 'eax']
mov ['ds:dword_79D,', 'eax']
mov ['ds:word_7A1,', 'ax']
mov ['ds:byte_7A3,', 'al']
mov ['ds:dword_7A4,', 'offset', '$SG76927']
xor ['ecx,', 'ecx']
mov ['ds:dword_7A8,', 'ecx']
mov ['ds:dword_7AC,', 'ecx']
mov ['ds:dword_7B0,', 'offset', '$SG76928']
xor ['edx,', 'edx']
mov ['ds:dword_7B4,', 'edx']
mov ['ds:dword_7B8,', 'edx']
mov ['ds:dword_7BC,', 'offset', '$SG76929']
mov ['ds:byte_7C0,', '1']
xor ['eax,', 'eax']
mov ['ds:dword_7C1,', 'eax']
mov ['ds:word_7C5,', 'ax']
mov ['ds:byte_7C7,', 'al']
mov ['ds:dword_7C8,', 'offset', '$SG76930']
mov ['ds:byte_7CC,', '3']
mov ['ds:byte_7CD,', '0']
mov ['ds:byte_7CE,', '1']
mov ['ecx,', 'ds:_k_ArcNameMode_PostCharSet']
mov ['ds:dword_7D0,', 'ecx']
mov ['ds:dword_7D4,', 'offset', '$SG76931']
xor ['edx,', 'edx']
mov ['ds:dword_7D8,', 'edx']
mov ['ds:dword_7DC,', 'edx']
mov ['ds:dword_7E0,', 'offset', '$SG76932']
mov ['ds:byte_7E4,', '1']
xor ['eax,', 'eax']
mov ['ds:dword_7E5,', 'eax']
mov ['ds:word_7E9,', 'ax']
mov ['ds:byte_7EB,', 'al']
mov ['ds:dword_7EC,', 'offset', '$SG76933']
mov ['ds:byte_7F0,', '2']
mov ['ds:byte_7F1,', '0']
mov ['ds:byte_7F2,', '0']
xor ['ecx,', 'ecx']
mov ['ds:dword_7F4,', 'ecx']
mov ['ds:dword_7F8,', 'offset', '$SG76934']
mov ['ds:byte_7FC,', '1']
xor ['edx,', 'edx']
mov ['ds:dword_7FD,', 'edx']
mov ['ds:word_801,', 'dx']
mov ['ds:byte_803,', 'dl']
mov ['ds:dword_804,', 'offset', '$SG76935']
mov ['ds:byte_808,', '1']
xor ['eax,', 'eax']
mov ['ds:dword_809,', 'eax']
mov ['ds:word_80D,', 'ax']
mov ['ds:byte_80F,', 'al']
mov ['ds:dword_810,', 'offset', '$SG76936']
xor ['ecx,', 'ecx']
mov ['ds:dword_814,', 'ecx']
mov ['ds:dword_818,', 'ecx']
mov ['ds:dword_81C,', 'offset', '$SG76937']
mov ['ds:byte_820,', '1']
xor ['edx,', 'edx']
mov ['ds:dword_821,', 'edx']
mov ['ds:word_825,', 'dx']
mov ['ds:byte_827,', 'dl']
mov ['ds:dword_828,', 'offset', '$SG76938']
xor ['eax,', 'eax']
mov ['ds:dword_82C,', 'eax']
mov ['ds:dword_830,', 'eax']
mov ['ds:dword_834,', 'offset', '$SG76939']
xor ['ecx,', 'ecx']
mov ['ds:dword_838,', 'ecx']
mov ['ds:dword_83C,', 'ecx']
mov ['ds:dword_840,', 'offset', '$SG76940']
xor ['edx,', 'edx']
mov ['ds:dword_844,', 'edx']
mov ['ds:dword_848,', 'edx']
mov ['ds:dword_84C,', 'offset', '$SG76941']
xor ['eax,', 'eax']
mov ['ds:dword_850,', 'eax']
mov ['ds:dword_854,', 'eax']
mov ['ds:dword_858,', 'offset', '$SG76942']
mov ['ds:byte_85C,', '2']
xor ['ecx,', 'ecx']
mov ['ds:dword_85D,', 'ecx']
mov ['ds:word_861,', 'cx']
mov ['ds:byte_863,', 'cl']
pop ['ebp']
retn
endp

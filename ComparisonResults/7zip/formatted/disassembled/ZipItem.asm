?ExtractNtfsTime@CExtraSubBlock@NZip@NArchive@@QBE_NIAAU_FILETIME@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '0Ah']
jnz ['short', 'loc_4F']
cmp ['[ebp+var_8],', '20h']
jnb ['short', 'loc_56']
xor ['al,', 'al']
jmp ['loc_102']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '4']
jbe ['loc_100']
mov ['eax,', '[ebp+var_C]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_10],', 'cx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jbe ['short', 'loc_B4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'ecx']
movzx ['edx,', 'word', 'ptr', '[ebp+var_10]']
cmp ['edx,', '1']
jnz ['short', 'loc_E9']
cmp ['[ebp+var_14],', '18h']
jb ['short', 'loc_E9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[ecx+eax*8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_102']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'ecx']
jmp ['loc_76']
xor ['al,', 'al']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ExtractUnixTime@CExtraSubBlock@NZip@NArchive@@QBE_N_NIAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '5455h']
jnz ['short', 'loc_168']
cmp ['[ebp+var_8],', '5']
jnb ['short', 'loc_16F']
xor ['al,', 'al']
jmp ['loc_226']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_10+3],', 'cl']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
movzx ['ecx,', '[ebp+arg_0]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1C6']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_1B4']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_10+3]']
and ['edx,', '1']
jz ['short', 'loc_1B4']
cmp ['[ebp+var_8],', '4']
jnb ['short', 'loc_1B8']
xor ['al,', 'al']
jmp ['short', 'loc_226']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_226']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1D8']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '3']
jnb ['short', 'loc_224']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_10+3]']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_14]']
shl ['eax,', 'cl']
and ['edx,', 'eax']
jz ['short', 'loc_222']
cmp ['[ebp+var_8],', '4']
jnb ['short', 'loc_1FA']
xor ['al,', 'al']
jmp ['short', 'loc_226']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_14]']
jnz ['short', 'loc_210']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
mov ['[edx],', 'ecx']
mov ['al,', '1']
jmp ['short', 'loc_226']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '4']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1CF']
xor ['al,', 'al']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?IsDir@CLocalItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetCodePage@CLocalItem@NZip@NArchive@@QBEIXZ']
push ['eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '20h']
push ['eax']
call ['?HasTailSlash@NItemName@NArchive@@YG_NABVAString@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsDir@CItem@NZip@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetCodePage@CItem@NZip@NArchive@@QBEIXZ']
push ['eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '20h']
push ['eax']
call ['?HasTailSlash@NItemName@NArchive@@YG_NABVAString@@I@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C0']
mov ['al,', '1']
jmp ['loc_368']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+5Dh]']
test ['eax,', 'eax']
jnz ['short', 'loc_2D2']
xor ['al,', 'al']
jmp ['loc_368']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+3Ch]']
shr ['edx,', '10h']
and ['edx,', '0FFFFh']
mov ['word', 'ptr', '[ebp+var_8],', 'dx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetHostOS@CItem@NZip@NArchive@@QBEEXZ']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'al']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0Fh']
ja ['short', '$LN1']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'ds:$LN17[ecx]']
jmp ['ds:$LN18[edx*4]']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
and ['eax,', '0C00h']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '400h']
jz ['short', 'loc_332']
cmp ['[ebp+var_14],', '800h']
jz ['short', 'loc_32E']
jmp ['short', 'loc_336']
mov ['al,', '1']
jmp ['short', 'loc_368']
xor ['al,', 'al']
jmp ['short', 'loc_368']
xor ['al,', 'al']
jmp ['short', 'loc_368']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+3Ch]']
and ['eax,', '10h']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
jmp ['short', 'loc_368']
xor ['al,', 'al']
jmp ['short', 'loc_368']
movzx ['edx,', 'word', 'ptr', '[ebp+var_8]']
and ['edx,', '0F000h']
xor ['eax,', 'eax']
cmp ['edx,', '4000h']
setz ['al']
jmp ['short', 'loc_368']
xor ['al,', 'al']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetWinAttrib@CItem@NZip@NArchive@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?GetHostOS@CItem@NZip@NArchive@@QBEEXZ']
mov ['byte', 'ptr', '[ebp+var_C],', 'al']
cmp ['byte', 'ptr', '[ebp+var_C],', '0']
jz ['short', 'loc_3E4']
cmp ['byte', 'ptr', '[ebp+var_C],', '3']
jz ['short', 'loc_3FA']
cmp ['byte', 'ptr', '[ebp+var_C],', '0Bh']
jz ['short', 'loc_3E4']
jmp ['short', 'loc_414']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5Dh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3F8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+3Ch]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_414']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5Dh]']
test ['edx,', 'edx']
jz ['short', 'loc_414']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
and ['ecx,', '0FFFF0000h']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsDir@CItem@NZip@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_42C']
mov ['eax,', '[ebp+var_8]']
or ['eax,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetPosixAttrib@CItem@NZip@NArchive@@QBE_NAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5Dh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_486']
mov ['ecx,', '[ebp+var_4]']
call ['?GetHostOS@CItem@NZip@NArchive@@QBEEXZ']
movzx ['edx,', 'al']
cmp ['edx,', '3']
jnz ['short', 'loc_486']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
shr ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setnz ['cl']
mov ['al,', 'cl']
jmp ['short', 'loc_4A9']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?IsDir@CItem@NZip@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4A7']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '4000h']
xor ['al,', 'al']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetCodePage@CLocalItem@NZip@NArchive@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetHostOS@CItem@NZip@NArchive@@QBEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5Dh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_509']
mov ['edx,', '[ebp+var_4]']
mov ['al,', '[edx+39h]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
jmp ['short', 'loc_512']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ecx+5]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'dl']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetCodePage@CItem@NZip@NArchive@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetHostOS@CItem@NZip@NArchive@@QBEEXZ']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
test ['eax,', 'eax']
jz ['short', 'loc_55F']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
cmp ['ecx,', '0Bh']
jz ['short', 'loc_55F']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_566']
mov ['[ebp+var_C],', '1']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QBEPBEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

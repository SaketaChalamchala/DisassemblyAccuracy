?Skip@CInArchive@NCab@NArchive@@AAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Skip@CInBufferBase@@QAEII@Z']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_55']
xor ['ecx,', 'ecx']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'cl']
mov ['dl,', 'byte', 'ptr', '[ebp+var_8+2]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'dl']
push ['offset', '__TI1?AUCUnexpectedEndException@NCab@NArchive@@']
lea ['eax,', '[ebp+var_8+3]']
push ['eax']
call ['__CxxThrowException@8']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Read@CInArchive@NCab@NArchive@@AAEXPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadBytes@CInBufferBase@@QAEIPAEI@Z']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_B9']
xor ['edx,', 'edx']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'dl']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+2]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
push ['offset', '__TI1?AUCUnexpectedEndException@NCab@NArchive@@']
lea ['ecx,', '[ebp+var_8+3]']
push ['ecx']
call ['__CxxThrowException@8']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadName@CInArchive@NCab@NArchive@@AAEXAAVAString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['dword', 'ptr', '[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['dword', 'ptr', '[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_10F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '2000h']
jnb ['loc_1AB']
lea ['ecx,', '[ebp+var_10+3]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte@CInBufferBase@@QAE_NAAE@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_148']
xor ['eax,', 'eax']
mov ['byte', 'ptr', '[ebp+var_24+2],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+var_24+2]']
mov ['byte', 'ptr', '[ebp+var_24+3],', 'cl']
push ['offset', '__TI1?AUCUnexpectedEndException@NCab@NArchive@@']
lea ['edx,', '[ebp+var_24+3]']
push ['edx']
call ['__CxxThrowException@8']
movzx ['eax,', '[ebp+var_10+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_16D']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?SetFrom@AString@@QAEXPBDI@Z']
jmp ['loc_1F7']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
cmp ['eax,', '[ebp+var_8]']
jnz ['short', 'loc_192']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['?ChangeSize_KeepData@?$CBuffer@E@@QAEXII@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+var_10+3]']
mov ['[eax+ecx],', 'dl']
jmp ['loc_106']
lea ['eax,', '[ebp+var_1C+3]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte@CInBufferBase@@QAE_NAAE@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1D7']
xor ['edx,', 'edx']
mov ['byte', 'ptr', '[ebp+var_24],', 'dl']
mov ['al,', 'byte', 'ptr', '[ebp+var_24]']
mov ['byte', 'ptr', '[ebp+var_24+1],', 'al']
push ['offset', '__TI1?AUCUnexpectedEndException@NCab@NArchive@@']
lea ['ecx,', '[ebp+var_24+1]']
push ['ecx']
call ['__CxxThrowException@8']
movzx ['edx,', '[ebp+var_1C+3]']
test ['edx,', 'edx']
jnz ['short', 'loc_1E1']
jmp ['short', 'loc_1E3']
jmp ['short', 'loc_1AB']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+31h],', '1']
push ['offset', '$SG69230']
mov ['ecx,', '[ebp+arg_0]']
call ['??4AString@@QAEAAV0@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadOtherArc@CInArchive@NCab@NArchive@@AAEXAAUCOtherArc@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadName@CInArchive@NCab@NArchive@@AAEXAAVAString@@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadName@CInArchive@NCab@NArchive@@AAEXAAVAString@@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Find@CSignatureFinder@NCab@NArchive@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_4]']
mov ['edx,', '[edx+8]']
mov ['cl,', '[ecx]']
mov ['[eax+edx],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+8]']
sub ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
cmp ['ecx,', '[edx+14h]']
jb ['loc_3B3']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_9],', 'dl']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_9]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_2F7']
jmp ['short', 'loc_31B']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
movzx ['eax,', '[ebp+var_9]']
cmp ['edx,', 'eax']
jnz ['short', 'loc_310']
jmp ['short', 'loc_31B']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2E7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+8]']
sub ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
cmp ['ecx,', '[edx+14h]']
jnb ['short', 'loc_354']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx+14h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
jmp ['short', 'loc_3B3']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_366']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx+10h]']
jnb ['short', 'loc_38D']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', 'ecx']
jnz ['short', 'loc_38D']
jmp ['short', 'loc_35D']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx+10h]']
jnz ['short', 'loc_39F']
xor ['eax,', 'eax']
jmp ['loc_575']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
jmp ['loc_2B6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+4]']
cmp ['eax,', '[edx+18h]']
jb ['short', 'loc_432']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
sub ['edx,', '1']
not ['edx']
mov ['eax,', '[ebp+var_4]']
and ['edx,', '[eax+4]']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+var_14]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['ecx,', '[eax+28h]']
adc ['edx,', '[eax+2Ch]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+28h],', 'ecx']
mov ['[eax+2Ch],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
sub ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8],', 'edx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+1Ch]']
sub ['eax,', '[edx+8]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+30h],', '0']
jz ['loc_4E4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+28h]']
adc ['ecx,', '[edx+2Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['edx,', '[edx+30h]']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_34],', 'ecx']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[eax+4]']
jb ['short', 'loc_48F']
ja ['short', 'loc_485']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[edx]']
jbe ['short', 'loc_48F']
mov ['eax,', '1']
jmp ['loc_575']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+30h]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
xor ['eax,', 'eax']
mov ['esi,', '[ebp+var_4]']
add ['ecx,', '[esi+28h]']
adc ['eax,', '[esi+2Ch]']
mov ['esi,', '[edx]']
sub ['esi,', 'ecx']
mov ['ecx,', '[edx+4]']
sbb ['ecx,', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
xor ['edx,', 'edx']
add ['esi,', 'eax']
adc ['ecx,', 'edx']
mov ['[ebp+var_20],', 'esi']
mov ['[ebp+var_1C],', 'ecx']
mov ['eax,', '[ebp+var_18]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
cmp ['edx,', '[ebp+var_1C]']
jb ['short', 'loc_4E4']
ja ['short', 'loc_4DE']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_20]']
jbe ['short', 'loc_4E4']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[eax+28h]']
or ['edx,', '[ecx+2Ch]']
jnz ['short', 'loc_515']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+1Ch]']
sub ['edx,', '[ecx+14h]']
cmp ['[ebp+var_18],', 'edx']
jnz ['short', 'loc_515']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[eax+18h]']
mov ['[ebp+var_18],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[edx]']
push ['ecx']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_554']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_575']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_561']
mov ['eax,', '1']
jmp ['short', 'loc_575']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
add ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8],', 'edx']
jmp ['loc_2A0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Parse@CInArcInfo@NCab@NArchive@@QAE_NPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_5E4']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jz ['short', 'loc_5EB']
xor ['al,', 'al']
jmp ['loc_678']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[edx+4Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+4Ch],', '24h']
jnb ['short', 'loc_604']
xor ['al,', 'al']
jmp ['short', 'loc_678']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+1Eh]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '7']
jbe ['short', 'loc_61E']
xor ['al,', 'al']
jmp ['short', 'loc_678']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+50h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+50h],', '0']
jz ['short', 'loc_645']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+50h]']
cmp ['ecx,', '[eax+4Ch]']
jbe ['short', 'loc_645']
xor ['al,', 'al']
jmp ['short', 'loc_678']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+18h]']
mov ['[edx],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+19h]']
mov ['[edx+1],', 'cl']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+1Ah]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+1Ch]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '158h']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_164]']
mov ['ecx,', '56h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+30h],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[ecx+31h],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[edx+32h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+33h],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Clear@CDatabase@NCab@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '78h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_140],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
mov ['esi,', 'esp']
push ['ecx']
push ['1']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_140]']
push ['edx']
mov ['eax,', '[ebp+var_140]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_738']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_FE3']
lea ['ecx,', '[ebp+var_24]']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_38],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_48],', '20h']
mov ['[ebp+var_74],', '8000h']
push ['20h']
lea ['ecx,', '[ebp+Buf1]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '78h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
call ['?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z']
mov ['[ebp+var_78],', 'eax']
cmp ['[ebp+var_78],', '0']
jz ['short', 'loc_7CE']
mov ['edx,', '[ebp+var_78]']
mov ['[ebp+var_114],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_114]']
jmp ['loc_FE3']
push ['8']
push ['offset', '?kMarker@NHeader@NCab@NArchive@@3QBEB']
lea ['eax,', '[ebp+Buf1]']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['loc_951']
lea ['ecx,', '[ebp+Buf1]']
push ['ecx']
mov ['ecx,', '[ebp+var_2C]']
call ['?Parse@CInArcInfo@NCab@NArchive@@QAE_NPBE@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_951']
push ['28h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_11C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_830']
mov ['ecx,', '[ebp+var_11C]']
call ['??0CLimitedSequentialInStream@@QAE@XZ']
mov ['[ebp+var_144],', 'eax']
jmp ['short', 'loc_83A']
mov ['[ebp+var_144],', '0']
mov ['eax,', '[ebp+var_144]']
mov ['[ebp+var_118],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_118]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
lea ['ecx,', '[ebp+var_40]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '78h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+4Ch]']
sub ['ecx,', '8']
xor ['edx,', 'edx']
push ['edx']
push ['ecx']
mov ['ecx,', '[ebp+var_38]']
call ['?Init@CLimitedSequentialInStream@@QAEX_K@Z']
push ['8000h']
lea ['ecx,', '[ebp+var_24]']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
push ['20h']
lea ['eax,', '[ebp+Buf1]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+var_40]']
call ['??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_148],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
push ['7FE0h']
lea ['ecx,', '[ebp+var_24]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
add ['eax,', '20h']
push ['eax']
mov ['edx,', '[ebp+var_148]']
push ['edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0']
jz ['short', 'loc_92D']
mov ['eax,', '[ebp+var_88]']
mov ['[ebp+var_120],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_120]']
jmp ['loc_FE3']
push ['20h']
mov ['ecx,', '[ebp+var_80]']
add ['ecx,', '20h']
push ['ecx']
push ['8000h']
lea ['ecx,', '[ebp+var_24]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?SetBuf@CInBufferBase@@QAEXPAEIII@Z']
jmp ['loc_BD9']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_9A3']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_14C],', 'edx']
mov ['eax,', '[ebp+var_14C]']
mov ['ecx,', '[ebp+var_14C]']
mov ['edx,', '[eax]']
or ['edx,', '[ecx+4]']
jnz ['short', 'loc_9A3']
mov ['[ebp+var_124],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_124]']
jmp ['loc_FE3']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '78h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_A4],', 'eax']
mov ['[ebp+var_B8],', 'offset', '?kMarker@NHeader@NCab@NArchive@@3QBEB']
mov ['[ebp+var_B4],', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_94],', 'eax']
push ['20h']
push ['8000h']
lea ['ecx,', '[ebp+var_C4]']
call ['?GetTotalCapacity@CSignatureFinder@NCab@NArchive@@QAEIII@Z']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
lea ['ecx,', '[ebp+var_24]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['[ebp+var_C4],', 'eax']
push ['20h']
lea ['ecx,', '[ebp+Buf1]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[ebp+var_9C],', 'eax']
mov ['ecx,', '[edx+1Ch]']
mov ['[ebp+var_98],', 'ecx']
mov ['[ebp+var_BC],', '20h']
mov ['[ebp+var_C0],', '1']
lea ['ecx,', '[ebp+var_C4]']
call ['?Find@CSignatureFinder@NCab@NArchive@@QAEJXZ']
mov ['[ebp+var_CC],', 'eax']
cmp ['[ebp+var_CC],', '0']
jz ['short', 'loc_A86']
mov ['edx,', '[ebp+var_CC]']
mov ['[ebp+var_128],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_128]']
jmp ['loc_FE3']
mov ['eax,', '[ebp+var_C4]']
add ['eax,', '[ebp+var_C0]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?Parse@CInArcInfo@NCab@NArchive@@QAE_NPBE@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_BC5']
mov ['edx,', '[ebp+var_C0]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_9C]']
adc ['eax,', '[ebp+var_98]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+18h],', 'edx']
mov ['[ecx+1Ch],', 'eax']
push ['28h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_130],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_130],', '0']
jz ['short', 'loc_AF3']
mov ['ecx,', '[ebp+var_130]']
call ['??0CLimitedSequentialInStream@@QAE@XZ']
mov ['[ebp+var_150],', 'eax']
jmp ['short', 'loc_AFD']
mov ['[ebp+var_150],', '0']
mov ['edx,', '[ebp+var_150]']
mov ['[ebp+var_12C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_12C]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '78h']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
lea ['ecx,', '[ebp+var_40]']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
mov ['edx,', '[ebp+var_BC]']
sub ['edx,', '[ebp+var_C0]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+4Ch]']
cmp ['ecx,', '[ebp+var_D0]']
ja ['short', 'loc_B76']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_38]']
call ['?Init@CLimitedSequentialInStream@@QAEX_K@Z']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_C0]']
add ['eax,', '[edx+4Ch]']
mov ['[ebp+var_BC],', 'eax']
jmp ['short', 'loc_B8E']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+4Ch]']
sub ['edx,', '[ebp+var_D0]']
xor ['eax,', 'eax']
push ['eax']
push ['edx']
mov ['ecx,', '[ebp+var_38]']
call ['?Init@CLimitedSequentialInStream@@QAEX_K@Z']
mov ['ecx,', '[ebp+var_C0]']
xor ['edx,', 'edx']
mov ['[ebp+var_34],', 'ecx']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_C0]']
add ['eax,', '20h']
push ['eax']
mov ['ecx,', '[ebp+var_BC]']
push ['ecx']
push ['8000h']
lea ['ecx,', '[ebp+var_24]']
call ['??B?$CBuffer@E@@QAEPAEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?SetBuf@CInBufferBase@@QAEXPAEIII@Z']
jmp ['short', 'loc_BD9']
mov ['edx,', '[ebp+var_C0]']
add ['edx,', '1']
mov ['[ebp+var_C0],', 'edx']
jmp ['loc_A3A']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+30h],', '1']
lea ['ecx,', '[ebp+var_40]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '28h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_C10']
push ['1000h']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '28h']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
mov ['ecx,', '[ebp+var_2C]']
call ['?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '4']
add ['ecx,', '4']
mov ['[ebp+var_EC],', 'ecx']
mov ['edx,', '[ebp+var_EC]']
push ['edx']
lea ['eax,', '[ebp+var_E4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?Read@CInArchive@NCab@NArchive@@AAEXPAEI@Z']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_E4]']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+10h],', 'ecx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_E4+2]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_CA0']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_E0]']
mov ['[eax+18h],', 'cx']
mov ['edx,', '[ebp+var_2C]']
mov ['al,', 'byte', 'ptr', '[ebp+var_E0+2]']
mov ['[edx+1Ah],', 'al']
mov ['ecx,', '[ebp+var_2C]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_E0+3]']
mov ['[ecx+1Bh],', 'dl']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax+18h]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?Skip@CInArchive@NCab@NArchive@@AAEXI@Z']
mov ['ecx,', '[ebp+var_2C]']
call ['?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_CBE']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1Ch']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?ReadOtherArc@CInArchive@NCab@NArchive@@AAEXAAUCOtherArc@23@@Z']
mov ['ecx,', '[ebp+var_2C]']
call ['?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_CDC']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '34h']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?ReadOtherArc@CInArchive@NCab@NArchive@@AAEXAAUCOtherArc@23@@Z']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?ClearAndReserve@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXI@Z']
mov ['[ebp+var_F0],', '0']
jmp ['short', 'loc_D06']
mov ['edx,', '[ebp+var_F0]']
add ['edx,', '1']
mov ['[ebp+var_F0],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_F0]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_D82']
push ['8']
lea ['edx,', '[ebp+var_E4]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?Read@CInArchive@NCab@NArchive@@AAEXPAEI@Z']
mov ['eax,', 'dword', 'ptr', '[ebp+var_E4]']
mov ['[ebp+var_FC],', 'eax']
mov ['cx,', 'word', 'ptr', '[ebp+var_E0]']
mov ['word', 'ptr', '[ebp+var_F8],', 'cx']
mov ['dl,', 'byte', 'ptr', '[ebp+var_E0+2]']
mov ['byte', 'ptr', '[ebp+var_F8+2],', 'dl']
mov ['al,', 'byte', 'ptr', '[ebp+var_E0+3]']
mov ['byte', 'ptr', '[ebp+var_F8+3],', 'al']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Ah]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?Skip@CInArchive@NCab@NArchive@@AAEXI@Z']
mov ['eax,', '[ebp+var_F8]']
push ['eax']
mov ['ecx,', '[ebp+var_FC]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?AddInReserved@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXUCFolder@NCab@NArchive@@@Z']
jmp ['loc_CF7']
mov ['ecx,', '[ebp+var_14]']
call ['?GetProcessedSize@CInBufferBase@@QBE_KXZ']
sub ['eax,', '[ebp+var_34]']
sbb ['edx,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_2C]']
mov ['ecx,', '[ecx+50h]']
xor ['esi,', 'esi']
mov ['[ebp+var_158],', 'eax']
mov ['[ebp+var_154],', 'edx']
mov ['[ebp+var_160],', 'ecx']
mov ['[ebp+var_15C],', 'esi']
mov ['edx,', '[ebp+var_158]']
cmp ['edx,', '[ebp+var_160]']
jnz ['short', 'loc_DD0']
mov ['eax,', '[ebp+var_154]']
cmp ['eax,', '[ebp+var_15C]']
jz ['loc_E76']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '78h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_164],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+50h]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+18h]']
adc ['eax,', '[ecx+1Ch]']
push ['eax']
push ['edx']
mov ['edx,', '[ebp+var_164]']
push ['edx']
mov ['eax,', '[ebp+var_164]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_104],', 'eax']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_E56']
mov ['eax,', '[ebp+var_104]']
mov ['[ebp+var_134],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_134]']
jmp ['loc_FE3']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ecx+4Ch]']
sub ['eax,', '[edx+50h]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?Init@CLimitedSequentialInStream@@QAEX_K@Z']
mov ['ecx,', '[ebp+var_14]']
call ['?Init@CInBufferBase@@QAEXXZ']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?ClearAndReserve@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXI@Z']
mov ['[ebp+var_F0],', '0']
jmp ['short', 'loc_EA3']
mov ['ecx,', '[ebp+var_F0]']
add ['ecx,', '1']
mov ['[ebp+var_F0],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_F0]']
cmp ['eax,', '[edx+8]']
jnb ['loc_FB8']
push ['10h']
lea ['ecx,', '[ebp+var_E4]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?Read@CInArchive@NCab@NArchive@@AAEXPAEI@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ']
mov ['[ebp+var_108],', 'eax']
mov ['edx,', '[ebp+var_108]']
mov ['eax,', 'dword', 'ptr', '[ebp+var_E4]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_108]']
mov ['edx,', '[ebp+var_E0]']
mov ['[ecx+0Ch],', 'edx']
movzx ['eax,', '[ebp+var_DC]']
mov ['ecx,', '[ebp+var_108]']
mov ['[ecx+18h],', 'eax']
mov ['dx,', '[ebp+var_DA]']
mov ['[ebp+var_10C],', 'dx']
mov ['ax,', '[ebp+var_D8]']
mov ['[ebp+var_110],', 'ax']
movzx ['ecx,', '[ebp+var_10C]']
shl ['ecx,', '10h']
movzx ['edx,', '[ebp+var_110]']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_108]']
mov ['[eax+14h],', 'ecx']
mov ['ecx,', '[ebp+var_108]']
mov ['dx,', '[ebp+var_D6]']
mov ['[ecx+1Eh],', 'dx']
mov ['eax,', '[ebp+var_108]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?ReadName@CInArchive@NCab@NArchive@@AAEXAAVAString@@@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_108]']
call ['?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ']
cmp ['esi,', 'eax']
jl ['short', 'loc_FB3']
mov ['ecx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[ecx+33h],', '1']
mov ['[ebp+var_138],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_138]']
jmp ['short', 'loc_FE3']
jmp ['loc_E94']
mov ['[ebp+var_13C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_13C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN46']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '164h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '1Ch']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_117B']
endp
__catch$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z$0 proc near
mov ['edx,', '[ebp-1Ch]']
mov ['eax,', '[edx]']
mov ['[ebp-24h],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN8']
retn
endp
__catch$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
mov ['byte', 'ptr', '[ecx+32h],', '1']
mov ['dword', 'ptr', '[ebp-28h],', '1']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN10']
retn
endp
?AreItemsEqual@CMvDatabaseEx@NCab@NArchive@@AAE_NII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0Ch']
call ['??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z']
cmp ['esi,', 'eax']
jnz ['short', 'loc_12B2']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+0Ch]']
jnz ['short', 'loc_12B2']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+10h]']
jnz ['short', 'loc_12B2']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['??8@YG_NABVAString@@0@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_12B2']
mov ['[ebp+var_20],', '1']
jmp ['short', 'loc_12B9']
mov ['[ebp+var_20],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_20]']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?FillSortAndShrink@CMvDatabaseEx@NCab@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?Clear@?$CRecordVector@H@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['?Clear@?$CRecordVector@I@@QAEXXZ']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_132A']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_C],', 'eax']
jnb ['loc_13CD']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+var_10]']
call ['?IsTherePrevFolder@CDatabase@NCab@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1368']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['?Add@?$CRecordVector@H@@QAEIH@Z']
mov ['ecx,', '[ebp+var_10]']
call ['?GetNumberOfNewFolders@CDatabase@NCab@NArchive@@QBEHXZ']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_139D']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_28],', 'eax']
jnb ['short', 'loc_13C8']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Add@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEIUCMvItem@NCab@NArchive@@@Z']
jmp ['short', 'loc_1394']
jmp ['loc_1321']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ']
cmp ['eax,', '1']
jbe ['loc_1482']
mov ['edx,', '[ebp+var_4]']
push ['edx']
push ['offset', '?CompareMvItems@NCab@NArchive@@YGHPBUCMvItem@12@0PAX@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Sort@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXP6GHPBUCMvItem@NCab@NArchive@@0PAX@Z1@Z']
mov ['[ebp+var_2C],', '1']
mov ['[ebp+var_30],', '1']
jmp ['short', 'loc_140E']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_30],', 'eax']
jnb ['short', 'loc_1473']
mov ['ecx,', '[ebp+var_30]']
sub ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?AreItemsEqual@CMvDatabaseEx@NCab@NArchive@@AAE_NII@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1471']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z']
mov ['edx,', '[eax]']
mov ['eax,', '[eax+4]']
mov ['[esi],', 'edx']
mov ['[esi+4],', 'eax']
jmp ['short', 'loc_1405']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?DeleteFrom@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXI@Z']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_1494']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '1']
mov ['[ebp+var_34],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_34],', 'eax']
jnb ['short', 'loc_14E0']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_38],', 'eax']
jl ['short', 'loc_14DE']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['?Add@?$CRecordVector@I@@QAEII@Z']
jmp ['short', 'loc_148B']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CompareMvItems@NCab@NArchive@@YGHPBUCMvItem@12@0PAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0Ch']
call ['??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '0Ch']
call ['??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['?IsDir@CItem@NCab@NArchive@@QBE_NXZ']
mov ['[ebp+var_15],', 'al']
mov ['ecx,', '[ebp+var_14]']
call ['?IsDir@CItem@NCab@NArchive@@QBE_NXZ']
mov ['[ebp+var_16],', 'al']
movzx ['eax,', '[ebp+var_15]']
test ['eax,', 'eax']
jz ['short', 'loc_15BA']
movzx ['ecx,', '[ebp+var_16]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_15BA']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_1681']
movzx ['edx,', '[ebp+var_16]']
test ['edx,', 'edx']
jz ['short', 'loc_15D4']
movzx ['eax,', '[ebp+var_15]']
test ['eax,', 'eax']
jnz ['short', 'loc_15D4']
mov ['eax,', '1']
jmp ['loc_1681']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['??$MyCompare@H@@YGHHH@Z']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_160D']
mov ['eax,', '[ebp+var_24]']
jmp ['short', 'loc_1681']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['??$MyCompare@I@@YGHII@Z']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_162E']
mov ['eax,', '[ebp+var_28]']
jmp ['short', 'loc_1681']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['??$MyCompare@I@@YGHII@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_164F']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_1681']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['??$MyCompare@I@@YGHII@Z']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_166E']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_1681']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$MyCompare@I@@YGHII@Z']
pop ['edi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Check@CMvDatabaseEx@NCab@NArchive@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4Ch']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_16C1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['loc_176D']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
call ['?IsTherePrevFolder@CDatabase@NCab@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1768']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['?IsEmpty@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1720']
mov ['ecx,', '[ebp+var_C]']
call ['?IsEmpty@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1727']
xor ['al,', 'al']
jmp ['loc_18A7']
mov ['ecx,', '[ebp+var_10]']
call ['?Back@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_C]']
call ['?Front@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+6]']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+6]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_1761']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+7]']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7]']
cmp ['edx,', 'ecx']
jz ['short', 'loc_1768']
xor ['al,', 'al']
jmp ['loc_18A7']
jmp ['loc_16B8']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_28],', '0FFFFFFFEh']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_179B']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_2C],', 'eax']
jnb ['loc_18A5']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['[ebp+var_34],', 'eax']
jl ['short', 'loc_17E7']
xor ['al,', 'al']
jmp ['loc_18A7']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z']
add ['eax,', '0Ch']
mov ['ecx,', 'eax']
call ['??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
call ['?IsDir@CItem@NCab@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_181D']
jmp ['loc_1792']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['edx,', '[ebp+var_3C]']
cmp ['edx,', '[ebp+var_28]']
jz ['short', 'loc_183C']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_1889']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx+0Ch]']
xor ['eax,', 'eax']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
cmp ['ecx,', '[ebp+var_20]']
ja ['short', 'loc_1889']
jb ['short', 'loc_185C']
mov ['edx,', '[ebp+var_44]']
cmp ['edx,', '[ebp+var_24]']
jnb ['short', 'loc_1889']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_1C]']
jnz ['short', 'loc_1885']
mov ['ecx,', '[ebp+var_38]']
call ['?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ']
mov ['[ebp+var_4C],', 'eax']
mov ['[ebp+var_48],', 'edx']
mov ['edx,', '[ebp+var_4C]']
cmp ['edx,', '[ebp+var_24]']
jnz ['short', 'loc_1885']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_20]']
jz ['short', 'loc_1889']
xor ['al,', 'al']
jmp ['short', 'loc_18A7']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_1C],', 'edx']
mov ['ecx,', '[ebp+var_38]']
call ['?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'edx']
jmp ['loc_1792']
mov ['al,', '1']
pop ['edi']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadByte@CInBufferBase@@QAE_NAAE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+4]']
jb ['short', 'loc_1951']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ReadByte_FromNewBlock@CInBufferBase@@IAE_NAAE@Z']
jmp ['short', 'loc_196C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[edx]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['al,', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1?$CBuffer@E@@QAE@XZ']
endp
__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$1 proc near
lea ['ecx,', '[ebp-40h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$2 proc near
mov ['eax,', '[ebp-11Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$3 proc near
mov ['eax,', '[ebp-130h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-164h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z']
jmp ['___CxxFrameHandler3']
endp
__ehhandler$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z']
jmp ['___CxxFrameHandler3']
endp
?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CLimitedSequentialInStream@@QAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+20h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetProcessedSize@CInBufferBase@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
xor ['esi,', 'esi']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
adc ['esi,', '[edx+14h]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[eax]']
sub ['eax,', '[edx+8]']
cdq
add ['ecx,', 'eax']
adc ['esi,', 'edx']
mov ['eax,', 'ecx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetBuf@CInBufferBase@@QAEXPAEIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+18h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1BE1']
xor ['eax,', 'eax']
jmp ['short', 'loc_1BFE']
mov ['ecx,', '[ebp+var_4]']
call ['?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1BF8']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
jmp ['short', 'loc_1BFE']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '0FFFDh']
jz ['short', 'loc_1C48']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+18h],', '0FFFFh']
jz ['short', 'loc_1C48']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1C4F']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '0FFFEh']
jz ['short', 'loc_1C90']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+18h],', '0FFFFh']
jz ['short', 'loc_1C90']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1C97']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
and ['eax,', '4']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
and ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
and ['eax,', '2']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CDatabase@NCab@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
call ['?Clear@CArchInfo@NCab@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Clear@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@CArchInfo@NCab@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+18h],', 'ax']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+1Ah],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+1Bh],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['?Clear@COtherArc@NCab@NArchive@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '34h']
call ['?Clear@COtherArc@NCab@NArchive@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@COtherArc@NCab@NArchive@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Empty@AString@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Empty@AString@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@AString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetTotalCapacity@CSignatureFinder@NCab@NArchive@@QAEIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '20h']
jmp ['short', 'loc_1E19']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+18h]']
cmp ['edx,', '[ecx+14h]']
jnb ['short', 'loc_1E29']
jmp ['short', 'loc_1E0B']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+1Ch]']
add ['eax,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0CLimitedSequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CLimitedSequentialInStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CLimitedSequentialInStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2080']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_20A3']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_209C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_20A3']
mov ['eax,', '80004002h']
jmp ['short', 'loc_20B4']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CLimitedSequentialInStream@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CLimitedSequentialInStream@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2126']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_2150']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2147']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCLimitedSequentialInStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_214E']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCLimitedSequentialInStream@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CLimitedSequentialInStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_218A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CLimitedSequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??8@YG_NABVAString@@0@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@AString@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@AString@@QBEIXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_22E9']
mov ['ecx,', '[ebp+arg_4]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_22E9']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_22F0']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
call ['??A?$CRecordVector@H@@QBEABHI@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0Ch']
call ['??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z']
mov ['ecx,', 'eax']
call ['?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z']
add ['eax,', '[esi]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IsTherePrevFolder@CDatabase@NCab@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_23D1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_2404']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z']
mov ['ecx,', 'eax']
call ['?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2402']
mov ['al,', '1']
jmp ['short', 'loc_2406']
jmp ['short', 'loc_23C8']
xor ['al,', 'al']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetNumberOfNewFolders@CDatabase@NCab@NArchive@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?IsTherePrevFolder@CDatabase@NCab@NArchive@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_244E']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsDir@CItem@NCab@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['eax,', 'word', 'ptr', '[eax+1Eh]']
and ['eax,', '10h']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
xor ['edx,', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+10h]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_24FE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_256C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_258F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@I@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@I@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@I@@QAEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QAEPAEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@?$CBuffer@E@@QAEXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_2750']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@?$CBuffer@E@@QAEXXZ']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2750']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ChangeSize_KeepData@?$CBuffer@E@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnz ['short', 'loc_2787']
jmp ['short', 'loc_2804']
mov ['[ebp+Dst],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_27DF']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_27DF']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$MyMin@I@@YGIII@Z']
push ['eax']
call ['??$MyMin@I@@YGIII@Z']
push ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_28D4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clear@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AddInReserved@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXUCFolder@NCab@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Front@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Back@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
lea ['eax,', '[eax+ecx*8-8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_2A8B']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CItem@NCab@NArchive@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_2A92']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2B90']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2B87']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCItem@NCab@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_2B8E']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2B4C']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteFrom@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEIUCMvItem@NCab@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@UCMvItem@NCab@NArchive@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Sort@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXP6GHPBUCMvItem@NCab@NArchive@@0PAX@Z1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_2D37']
jmp ['loc_2DCF']
mov ['ecx,', '[ebp+var_4]']
call ['?Front@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@XZ']
sub ['eax,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['?SortRefDown@?$CRecordVector@UCMvItem@NCab@NArchive@@@@SGXPAUCMvItem@NCab@NArchive@@IIP6GHPBU234@1PAX@Z2@Z']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
jnz ['short', 'loc_2D4D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+eax*8]']
mov ['eax,', '[ecx+eax*8+4]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ecx+0Ch]']
mov ['ecx,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_C]']
mov ['[esi+ecx*8],', 'edx']
mov ['[esi+ecx*8+4],', 'eax']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['?SortRefDown@?$CRecordVector@UCMvItem@NCab@NArchive@@@@SGXPAUCMvItem@NCab@NArchive@@IIP6GHPBU234@1PAX@Z2@Z']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_2D71']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Clear@?$CRecordVector@H@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@H@@QAEIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@H@@QBEABHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CItem@NCab@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0AString@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCItem@NCab@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CItem@NCab@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2EFA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CItem@NCab@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1AString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_3010']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_3164']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_313F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Free@?$CBuffer@E@@QAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_31B0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReserveOnePosition@?$CRecordVector@UCMvItem@NCab@NArchive@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_327C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_3257']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Front@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SortRefDown@?$CRecordVector@UCMvItem@NCab@NArchive@@@@SGXPAUCMvItem@NCab@NArchive@@IIP6GHPBU234@1PAX@Z2@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*8]']
mov ['eax,', '[ecx+eax*8+4]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+arg_8]']
jbe ['short', 'loc_32E7']
jmp ['loc_336A']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jnb ['short', 'loc_3321']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*8]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*8+8]']
push ['ecx']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['short', 'loc_3321']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*8]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jl ['short', 'loc_3345']
jmp ['short', 'loc_336A']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*8]']
mov ['edx,', '[eax+edx*8+4]']
mov ['eax,', '[ebp+arg_4]']
mov ['esi,', '[ebp+arg_0]']
mov ['[esi+eax*8],', 'ecx']
mov ['[esi+eax*8+4],', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'ecx']
jmp ['loc_32D2']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+edx*8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+edx*8+4],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_3470']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_344B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$MyCompare@H@@YGHHH@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_349C']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_34AA']
mov ['ecx,', '[ebp+arg_0]']
xor ['edx,', 'edx']
cmp ['ecx,', '[ebp+arg_4]']
setnz ['dl']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$MyCompare@I@@YGHII@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_34D0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_34DE']
mov ['ecx,', '[ebp+arg_0]']
xor ['edx,', 'edx']
cmp ['ecx,', '[ebp+arg_4]']
setnz ['dl']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$MyMin@I@@YGIII@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_3503']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_3509']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

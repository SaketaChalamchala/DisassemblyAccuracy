?FillPopIDs@CHandler@N7z@NArchive@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?FillPopIDs@CHandler@N7z@NArchive@@AAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
call ['?Clear@?$CRecordVector@_K@@QAEXXZ']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '198h']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$CRecordVector@_K@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
push ['0Eh']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?RemoveOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@I@Z']
push ['0Fh']
lea ['edx,', '[ebp+var_20]']
push ['edx']
call ['?RemoveOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@I@Z']
push ['11h']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1E4h']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?CopyOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@0I@Z']
push ['10h']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1E4h']
push ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
call ['?CopyOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@0I@Z']
push ['9']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
call ['?CopyOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@0I@Z']
push ['6']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1E4h']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?CopyOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@0I@Z']
push ['12h']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1E4h']
push ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
call ['?CopyOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@0I@Z']
push ['14h']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
call ['?CopyOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@0I@Z']
push ['13h']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1E4h']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?CopyOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@0I@Z']
push ['15h']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1E4h']
push ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
call ['?CopyOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@0I@Z']
push ['0Ah']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
call ['?CopyOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@0I@Z']
push ['16h']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1E4h']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?CopyOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@0I@Z']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
call ['??Y?$CRecordVector@_K@@QAEAAV0@ABV0@@Z']
push ['0']
push ['61h']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
push ['0']
push ['62h']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
push ['0']
push ['63h']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
push ['14h']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1E4h']
push ['eax']
call ['?InsertToHead@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@I@Z']
push ['6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
push ['ecx']
call ['?InsertToHead@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@I@Z']
push ['9']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1E4h']
push ['edx']
call ['?InsertToHead@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@I@Z']
push ['11h']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1E4h']
push ['eax']
call ['?InsertToHead@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@I@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CRecordVector@_K@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CopyOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@0I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_329']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jnb ['short', 'loc_384']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['edx,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_382']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+var_C]']
jnz ['short', 'loc_382']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Add@?$CRecordVector@_K@@QAEI_K@Z']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Delete@?$CRecordVector@_K@@QAEXI@Z']
jmp ['short', 'loc_384']
jmp ['short', 'loc_320']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?RemoveOneItem@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_3C9']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jnb ['short', 'loc_415']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['edx,', '[ebp+arg_4]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_413']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+var_C]']
jnz ['short', 'loc_413']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Delete@?$CRecordVector@_K@@QAEXI@Z']
jmp ['short', 'loc_415']
jmp ['short', 'loc_3C0']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?InsertToHead@N7z@NArchive@@YGXAAV?$CRecordVector@_K@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_459']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jnb ['short', 'loc_4A5']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['edx,', '[ebp+arg_4]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_4A3']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+var_C]']
jnz ['short', 'loc_4A3']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Delete@?$CRecordVector@_K@@QAEXI@Z']
jmp ['short', 'loc_4A5']
jmp ['short', 'loc_450']
mov ['ecx,', '[ebp+arg_4]']
xor ['edx,', 'edx']
push ['edx']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Insert@?$CRecordVector@_K@@QAEXI_K@Z']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?GetNumberOfProperties@CHandler@N7z@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1E4h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?GetPropertyInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1E4h']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
cmp ['[ebp+arg_4],', 'eax']
jb ['short', 'loc_53D']
mov ['eax,', '80070057h']
jmp ['loc_5D3']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1E4h']
call ['??A?$CRecordVector@_K@@QAEAA_KI@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_4],', 'edx']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_56C']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0Dh']
jnb ['short', 'loc_5CE']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '4']
add ['ecx,', 'offset', '_kPropMap']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_8]']
jnz ['short', 'loc_5CC']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_5CC']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax+8]']
mov ['[edx],', 'cx']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['eax,', 'eax']
jmp ['short', 'loc_5D3']
jmp ['short', 'loc_563']
mov ['eax,', '80070057h']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
__unwindfunclet$?FillPopIDs@CHandler@N7z@NArchive@@AAEXXZ$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$CRecordVector@_K@@QAE@XZ']
endp
__ehhandler$?FillPopIDs@CHandler@N7z@NArchive@@AAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?FillPopIDs@CHandler@N7z@NArchive@@AAEXXZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@_K@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6DC']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CRecordVector@_K@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@_K@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Delete@?$CRecordVector@_K@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@_K@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??Y?$CRecordVector@_K@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CRecordVector@_K@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Reserve@?$CRecordVector@_K@@QAEXI@Z']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7FE']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '3']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
lea ['eax,', '[edx+eax*8]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@_K@@QAEI_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Insert@?$CRecordVector@_K@@QAEXI_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@_K@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*8],', 'edx']
mov ['edx,', '[ebp+arg_8]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??A?$CRecordVector@_K@@QAEAA_KI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MoveItems@?$CRecordVector@_K@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '3']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_A10']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_9EB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Reserve@?$CRecordVector@_K@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_AB4']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_A8F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp

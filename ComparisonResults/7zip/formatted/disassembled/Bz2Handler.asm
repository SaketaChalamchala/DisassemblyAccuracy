?GetNumberOfProperties@CHandler@NBz2@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '2']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetPropertyInfo@CHandler@NBz2@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '2']
jb ['short', 'loc_8C']
mov ['eax,', '80070057h']
jmp ['short', 'loc_B9']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_kProps[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
movzx ['dx,', 'byte', 'ptr', 'ds:?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['14h']
endp
?GetNumberOfArchiveProperties@CHandler@NBz2@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '2']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetArchivePropertyInfo@CHandler@NBz2@NArchive@@UAGJIPAPA_WPAKPAG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '2']
jb ['short', 'loc_FC']
mov ['eax,', '80070057h']
jmp ['short', 'loc_129']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_kArcProps[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
movzx ['dx,', 'byte', 'ptr', 'ds:?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'dx']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn ['14h']
endp
?GetArchiveProperty@CHandler@NBz2@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['ecx,', '[ebp+var_14]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '26h']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '28h']
ja ['$LN13']
mov ['edx,', '[ebp+var_24]']
movzx ['eax,', 'ds:$LN17[edx]']
jmp ['ds:$LN21[eax*4]']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+20h]']
test ['edx,', 'edx']
jz ['short', 'loc_1B2']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[eax+28h]']
push ['edx']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN13']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+21h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1D5']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+34h]']
push ['eax']
mov ['ecx,', '[edx+30h]']
push ['ecx']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['$LN13']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+22h]']
test ['eax,', 'eax']
jz ['short', 'loc_1F8']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+3Ch]']
push ['edx']
mov ['eax,', '[ecx+38h]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['short', '$LN13']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+23h]']
test ['edx,', 'edx']
jz ['short', 'loc_218']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+44h]']
push ['ecx']
mov ['edx,', '[eax+40h]']
push ['edx']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['short', '$LN13']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Ch]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_235']
mov ['edx,', '[ebp+var_1C]']
or ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Fh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_249']
mov ['edx,', '[ebp+var_1C]']
or ['edx,', '20h']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1Eh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_25D']
mov ['edx,', '[ebp+var_1C]']
or ['edx,', '40h']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_14]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_20],', '0']
lea ['ecx,', '[ebp+var_14]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetNumberOfItems@CHandler@NBz2@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?GetProperty@CHandler@NBz2@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['ecx,', '[ebp+var_14]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '7']
jz ['short', 'loc_38B']
cmp ['[ebp+var_20],', '8']
jz ['short', 'loc_36B']
jmp ['short', 'loc_3A9']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+20h]']
test ['edx,', 'edx']
jz ['short', 'loc_389']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[eax+28h]']
push ['edx']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
jmp ['short', 'loc_3A9']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+21h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3A9']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+34h]']
push ['eax']
mov ['ecx,', '[edx+30h]']
push ['ecx']
lea ['ecx,', '[ebp+var_14]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
lea ['ecx,', '[ebp+var_14]']
call ['?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z']
mov ['[ebp+var_1C],', '0']
lea ['ecx,', '[ebp+var_14]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
_IsArc_BZip2@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '0Ah']
jnb ['short', 'loc_41C']
mov ['eax,', '2']
jmp ['short', 'loc_494']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '42h']
jnz ['short', 'loc_457']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '5Ah']
jnz ['short', 'loc_457']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
cmp ['edx,', '68h']
jnz ['short', 'loc_457']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
cmp ['ecx,', '31h']
jl ['short', 'loc_457']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
cmp ['eax,', '39h']
jle ['short', 'loc_45B']
xor ['eax,', 'eax']
jmp ['short', 'loc_494']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?IsBlockSig@NBZip2@NCompress@@YG_NPBE@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_47B']
mov ['eax,', '1']
jmp ['short', 'loc_494']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?IsEndSig@NBZip2@NCompress@@YG_NPBE@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_492']
mov ['eax,', '1']
jmp ['short', 'loc_494']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?Open@CHandler@NBz2@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Open@CHandler@NBz2@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '20h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_14],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+this]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['0Ah']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_533']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_59F']
push ['0Ah']
lea ['eax,', '[ebp+var_24]']
push ['eax']
call ['_IsArc_BZip2@8']
test ['eax,', 'eax']
jnz ['short', 'loc_549']
mov ['eax,', '1']
jmp ['short', 'loc_59F']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+1Ch],', '1']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '14h']
call ['??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+1Dh],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_59F']
endp
__catch$?Open@CHandler@NBz2@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-30h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN9_0']
retn
endp
?OpenSeq@CHandler@NBz2@NArchive@@UAGJPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+this]']
sub ['eax,', '4']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx-4]']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+18h],', '1']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '14h']
call ['??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z']
xor ['eax,', 'eax']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?Close@CHandler@NBz2@NArchive@@UAGJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+1Dh],', '0']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+1Eh],', '0']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+1Fh],', '0']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+20h],', '0']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+21h],', '0']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+22h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+23h],', '0']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['dword', 'ptr', '[edx+2Ch],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '14h']
call ['?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '150h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_160]']
mov ['ecx,', '54h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_711']
xor ['eax,', 'eax']
jmp ['loc_1061']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jz ['short', 'loc_72F']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_725']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_72F']
mov ['eax,', '80070057h']
jmp ['loc_1061']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+20h]']
test ['edx,', 'edx']
jz ['short', 'loc_75C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[eax+28h]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['[ebp+var_E0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_C],', '0']
setnz ['cl']
mov ['[ebp+var_20],', 'ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ']
mov ['[ebp+var_E4],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+14h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
mov ['edx,', '[ebp+var_E8]']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_7E1']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_98],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_98]']
jmp ['loc_1061']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_821']
lea ['ecx,', '[ebp+var_18]']
call ['??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ']
mov ['[ebp+var_E9],', 'al']
movzx ['ecx,', '[ebp+var_E9]']
test ['ecx,', 'ecx']
jz ['short', 'loc_821']
mov ['[ebp+var_9C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_9C]']
jmp ['loc_1061']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Dh]']
test ['edx,', 'edx']
jz ['loc_901']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '14h']
call ['??7?$CMyComPtr@UIInStream@@@@QBE_NXZ']
mov ['[ebp+var_EA],', 'al']
movzx ['eax,', '[ebp+var_EA]']
test ['eax,', 'eax']
jz ['short', 'loc_888']
mov ['[ebp+var_A0],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_A0]']
jmp ['loc_1061']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '14h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_F0],', 'eax']
mov ['ecx,', '[ebp+var_F0]']
mov ['[ebp+var_F4],', 'ecx']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_F4]']
push ['edx']
mov ['eax,', '[ebp+var_F4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F8],', 'eax']
mov ['eax,', '[ebp+var_F8]']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_8FF']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_A4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_A4]']
jmp ['loc_1061']
jmp ['short', 'loc_908']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+1Dh],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
push ['7050h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_FC],', 'eax']
mov ['eax,', '[ebp+var_FC]']
mov ['[ebp+var_AC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_AC],', '0']
jz ['short', 'loc_957']
mov ['ecx,', '[ebp+var_AC]']
call ['??0CDecoder@NBZip2@NCompress@@QAE@XZ']
mov ['[ebp+var_100],', 'eax']
mov ['ecx,', '[ebp+var_100]']
mov ['[ebp+var_104],', 'ecx']
jmp ['short', 'loc_961']
mov ['[ebp+var_104],', '0']
mov ['edx,', '[ebp+var_104]']
mov ['[ebp+var_A8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
lea ['ecx,', '[ebp+var_38]']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_108],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_108]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+70h]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
mov ['ecx,', '[ebp+var_10C]']
mov ['[ebp+var_40],', 'ecx']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_A1C']
mov ['edx,', '[ebp+var_40]']
mov ['[ebp+var_B0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_B0]']
jmp ['loc_1061']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_110],', 'eax']
mov ['eax,', '[ebp+var_110]']
mov ['[ebp+var_B8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
cmp ['[ebp+var_B8],', '0']
jz ['short', 'loc_A64']
mov ['ecx,', '[ebp+var_B8]']
call ['??0CDummyOutStream@@QAE@XZ']
mov ['[ebp+var_114],', 'eax']
mov ['ecx,', '[ebp+var_114]']
mov ['[ebp+var_118],', 'ecx']
jmp ['short', 'loc_A6E']
mov ['[ebp+var_118],', '0']
mov ['edx,', '[ebp+var_118]']
mov ['[ebp+var_B4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_B4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
lea ['ecx,', '[ebp+var_4C]']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_11C],', 'eax']
mov ['edx,', '[ebp+var_11C]']
push ['edx']
mov ['ecx,', '[ebp+var_44]']
call ['?SetStream@CDummyOutStream@@QAEXPAUISequentialOutStream@@@Z']
mov ['ecx,', '[ebp+var_44]']
call ['?Init@CDummyOutStream@@QAEXXZ']
lea ['ecx,', '[ebp+var_18]']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_120],', 'eax']
mov ['eax,', '[ebp+var_120]']
mov ['[ebp+var_C0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
cmp ['[ebp+var_C0],', '0']
jz ['short', 'loc_B0C']
mov ['ecx,', '[ebp+var_C0]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+var_124]']
mov ['[ebp+var_128],', 'ecx']
jmp ['short', 'loc_B16']
mov ['[ebp+var_128],', '0']
mov ['edx,', '[ebp+var_128]']
mov ['[ebp+var_BC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
lea ['ecx,', '[ebp+var_5C]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
push ['1']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['ecx,', '[ebp+var_54]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_64],', '0']
mov ['[ebp+var_70],', '0']
mov ['[ebp+var_6C],', '0']
mov ['[ebp+var_78],', '0']
mov ['[ebp+var_74],', '0']
mov ['ecx,', '[ebp+var_30]']
call ['?InitNumBlocks@CDecoder@NBZip2@NCompress@@QAEXXZ']
mov ['[ebp+var_7C],', '0']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[ebp+var_68]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+var_64]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[ebp+var_70]']
mov ['[eax+28h],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['[eax+2Ch],', 'edx']
mov ['ecx,', '[ebp+var_54]']
call ['?SetCur@CLocalProgress@@QAEJXZ']
mov ['[ebp+var_12C],', 'eax']
mov ['eax,', '[ebp+var_12C]']
mov ['[ebp+var_80],', 'eax']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_C05']
mov ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_C4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_C4]']
jmp ['loc_1061']
lea ['ecx,', '[ebp+var_5C]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_130],', 'eax']
lea ['ecx,', '[ebp+var_4C]']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_134],', 'eax']
mov ['edx,', '[ebp+var_130]']
push ['edx']
mov ['eax,', '[ebp+var_134]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
call ['?CodeResume@CDecoder@NBZip2@NCompress@@QAEJPAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_138],', 'eax']
mov ['ecx,', '[ebp+var_138]']
mov ['[ebp+var_7C],', 'ecx']
cmp ['[ebp+var_7C],', '1']
jz ['short', 'loc_C96']
cmp ['[ebp+var_7C],', '0']
jz ['short', 'loc_C96']
mov ['edx,', '[ebp+var_7C]']
mov ['[ebp+var_C8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_C8]']
jmp ['loc_1061']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7048h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_CB8']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_74]']
adc ['eax,', '0']
mov ['[ebp+var_78],', 'edx']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_CD3']
mov ['ecx,', '[ebp+var_78]']
or ['ecx,', '[ebp+var_74]']
jnz ['short', 'loc_CD3']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+1Ch],', '0']
mov ['[ebp+var_7C],', '1']
jmp ['loc_E3C']
mov ['ecx,', '[ebp+var_44]']
call ['?GetSize@CDummyOutStream@@QBE_KXZ']
mov ['[ebp+var_140],', 'eax']
mov ['[ebp+var_13C],', 'edx']
mov ['eax,', '[ebp+var_140]']
mov ['[ebp+var_70],', 'eax']
mov ['ecx,', '[ebp+var_13C]']
mov ['[ebp+var_6C],', 'ecx']
mov ['ecx,', '[ebp+var_30]']
call ['?GetStreamSize@CDecoder@NBZip2@NCompress@@QBE_KXZ']
mov ['[ebp+var_148],', 'eax']
mov ['[ebp+var_144],', 'edx']
mov ['edx,', '[ebp+var_148]']
mov ['[ebp+var_88],', 'edx']
mov ['eax,', '[ebp+var_144]']
mov ['[ebp+var_84],', 'eax']
mov ['ecx,', '[ebp+var_88]']
cmp ['ecx,', '[ebp+var_68]']
jnz ['short', 'loc_D47']
mov ['edx,', '[ebp+var_84]']
cmp ['edx,', '[ebp+var_64]']
jnz ['short', 'loc_D47']
mov ['[ebp+var_7C],', '0']
jmp ['loc_E3C']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7048h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_D68']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+1Eh],', '1']
mov ['[ebp+var_7C],', '1']
jmp ['loc_E3C']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '140h']
call ['?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ']
mov ['[ebp+var_149],', 'al']
movzx ['eax,', '[ebp+var_149]']
test ['eax,', 'eax']
jz ['short', 'loc_DAC']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+1Fh],', '1']
mov ['edx,', '[ebp+var_88]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_84]']
mov ['[ebp+var_64],', 'eax']
mov ['[ebp+var_7C],', '1']
jmp ['loc_E3C']
mov ['ecx,', '[ebp+var_30]']
call ['?GetInputProcessedSize@CDecoder@NBZip2@NCompress@@QBE_KXZ']
mov ['[ebp+var_154],', 'eax']
mov ['[ebp+var_150],', 'edx']
mov ['ecx,', '[ebp+var_154]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_150]']
mov ['[ebp+var_64],', 'edx']
mov ['eax,', '[ebp+var_64]']
cmp ['eax,', '[ebp+var_84]']
jb ['short', 'loc_E2F']
ja ['short', 'loc_DEA']
mov ['ecx,', '[ebp+var_68]']
cmp ['ecx,', '[ebp+var_88]']
jbe ['short', 'loc_E2F']
mov ['[ebp+var_CC],', '80004005h']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_CC]']
jmp ['loc_1061']
cmp ['[ebp+var_7C],', '0']
jz ['short', 'loc_E37']
jmp ['short', 'loc_E3C']
jmp ['loc_B86']
mov ['edx,', '[ebp+var_78]']
or ['edx,', '[ebp+var_74]']
jz ['short', 'loc_EB6']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_68]']
mov ['[eax+28h],', 'ecx']
mov ['edx,', '[ebp+var_64]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_70]']
mov ['[eax+30h],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['[eax+34h],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_78]']
mov ['[eax+38h],', 'ecx']
mov ['edx,', '[ebp+var_74]']
mov ['[eax+3Ch],', 'edx']
mov ['ecx,', '[ebp+var_30]']
call ['?GetNumBlocks@CDecoder@NBZip2@NCompress@@QBE_KXZ']
mov ['[ebp+var_15C],', 'eax']
mov ['[ebp+var_158],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_15C]']
mov ['[eax+40h],', 'ecx']
mov ['edx,', '[ebp+var_158]']
mov ['[eax+44h],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+20h],', '1']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+21h],', '1']
mov ['edx,', '[ebp+this]']
mov ['byte', 'ptr', '[edx+22h],', '1']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+23h],', '1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+14h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_4C]']
call ['?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+1Ch]']
test ['eax,', 'eax']
jnz ['short', 'loc_EEC']
mov ['[ebp+var_2C],', '7']
jmp ['loc_F90']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Fh]']
test ['edx,', 'edx']
jz ['short', 'loc_F03']
mov ['[ebp+var_2C],', '5']
jmp ['loc_F90']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax+704Ah]']
test ['ecx,', 'ecx']
jz ['short', 'loc_F1A']
mov ['[ebp+var_2C],', '3']
jmp ['short', 'loc_F90']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+1Eh]']
test ['eax,', 'eax']
jz ['short', 'loc_F2E']
mov ['[ebp+var_2C],', '6']
jmp ['short', 'loc_F90']
cmp ['[ebp+var_7C],', '1']
jnz ['short', 'loc_F3D']
mov ['[ebp+var_2C],', '2']
jmp ['short', 'loc_F90']
cmp ['[ebp+var_7C],', '0']
jnz ['short', 'loc_F4C']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_F90']
mov ['ecx,', '[ebp+var_7C]']
mov ['[ebp+var_D0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_D0]']
jmp ['loc_1061']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
jmp ['short', '$LN48']
endp
__catch$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$0 proc near
mov ['edx,', '[ebp-90h]']
mov ['eax,', '[edx]']
mov ['[ebp-0D4h],', 'eax']
mov ['dword', 'ptr', '[ebp-4],', '1']
mov ['eax,', 'offset', '$LN59']
retn
endp
$LN59           proc near               
mov ['byte', 'ptr', '[ebp-4],', '0']
lea ['ecx,', '[ebp-18h]']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp-0D4h]']
jmp ['short', 'loc_1061']
endp
__catch$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$2 proc near
mov ['dword', 'ptr', '[ebp-0DCh],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN61']
retn
endp
?GetFileTimeType@CHandler@NBz2@NArchive@@UAGJPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
pop ['ebp']
retn ['8']
endp
?UpdateItems@CHandler@NBz2@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?UpdateItems@CHandler@NBz2@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_8],', '1']
jz ['short', 'loc_1184']
mov ['eax,', '80070057h']
jmp ['loc_1672']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_1194']
mov ['eax,', '80004005h']
jmp ['loc_1672']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_18]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_11D6']
mov ['eax,', '[ebp+var_38]']
jmp ['loc_1672']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_C9],', 'al']
movzx ['eax,', '[ebp+var_C9]']
test ['eax,', 'eax']
jz ['loc_12A0']
lea ['ecx,', '[ebp+var_4C]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_D0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
push ['6']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_125A']
mov ['ecx,', '[ebp+var_54]']
mov ['[ebp+var_A0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_A0]']
jmp ['loc_1672']
movzx ['edx,', '[ebp+var_4C]']
test ['edx,', 'edx']
jz ['short', 'loc_1294']
movzx ['eax,', '[ebp+var_4C]']
cmp ['eax,', '0Bh']
jnz ['short', 'loc_1273']
movsx ['ecx,', '[ebp+var_44]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1294']
mov ['[ebp+var_A4],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_A4]']
jmp ['loc_1672']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['?IntToBool@@YG_NH@Z']
mov ['[ebp+var_D5],', 'al']
movzx ['eax,', '[ebp+var_D5]']
test ['eax,', 'eax']
jz ['loc_1393']
lea ['ecx,', '[ebp+var_70]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_DC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_70]']
push ['ecx']
push ['7']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '[ebp+var_E0]']
mov ['[ebp+var_78],', 'eax']
cmp ['[ebp+var_78],', '0']
jz ['short', 'loc_1324']
mov ['ecx,', '[ebp+var_78]']
mov ['[ebp+var_A8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_A8]']
jmp ['loc_1672']
movzx ['edx,', '[ebp+var_70]']
cmp ['edx,', '15h']
jz ['short', 'loc_134E']
mov ['[ebp+var_AC],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_AC]']
jmp ['loc_1672']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_64]']
mov ['[ebp+var_58],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_70]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '40h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_58]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
call ['?UpdateArchive@NBz2@NArchive@@YGJ_KPAUISequentialOutStream@@ABUCProps@@PAUIArchiveUpdateCallback@@@Z']
mov ['[ebp+var_E4],', 'eax']
mov ['eax,', '[ebp+var_E4]']
jmp ['loc_1672']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_13A3']
mov ['eax,', '80070057h']
jmp ['loc_1672']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
mov ['[ebp+var_B4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_B4],', '0']
jz ['short', 'loc_13EB']
mov ['ecx,', '[ebp+var_B4]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_EC],', 'eax']
mov ['edx,', '[ebp+var_EC]']
mov ['[ebp+var_F0],', 'edx']
jmp ['short', 'loc_13F5']
mov ['[ebp+var_F0],', '0']
mov ['eax,', '[ebp+var_F0]']
mov ['[ebp+var_B0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_7C],', 'ecx']
mov ['edx,', '[ebp+var_7C]']
push ['edx']
lea ['ecx,', '[ebp+var_84]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
push ['offset', 'unk_1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_7C]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
lea ['ecx,', '[ebp+var_90]']
call ['??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['[ebp+var_F4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_90]']
call ['??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_F8],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_F8]']
push ['ecx']
push ['offset', '_IID_IArchiveUpdateCallbackFile']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_90]']
call ['??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_FC],', 'eax']
cmp ['[ebp+var_FC],', '0']
jz ['loc_1525']
lea ['ecx,', '[ebp+var_90]']
call ['??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ']
mov ['[ebp+var_100],', 'eax']
mov ['eax,', '[ebp+var_100]']
mov ['[ebp+var_104],', 'eax']
mov ['esi,', 'esp']
push ['3']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_104]']
push ['ecx']
mov ['edx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_108],', 'eax']
mov ['edx,', '[ebp+var_108]']
mov ['[ebp+var_98],', 'edx']
cmp ['[ebp+var_98],', '0']
jz ['short', 'loc_1525']
mov ['eax,', '[ebp+var_98]']
mov ['[ebp+var_B8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_90]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_84]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_B8]']
jmp ['loc_1672']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_10C],', 'eax']
cmp ['[ebp+var_10C],', '0']
jz ['loc_15D5']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_110],', 'eax']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+var_114],', 'ecx']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_114]']
push ['edx']
mov ['eax,', '[ebp+var_114]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_118],', 'eax']
mov ['eax,', '[ebp+var_118]']
mov ['[ebp+var_9C],', 'eax']
cmp ['[ebp+var_9C],', '0']
jz ['short', 'loc_15D5']
mov ['ecx,', '[ebp+var_9C]']
mov ['[ebp+var_BC],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_90]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_84]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_BC]']
jmp ['loc_1672']
lea ['ecx,', '[ebp+var_84]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['[ebp+var_11C],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
call ['??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_120],', 'eax']
mov ['edx,', '[ebp+var_11C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_120]']
push ['ecx']
call ['?CopyStream@NCompress@@YGJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z']
mov ['[ebp+var_124],', 'eax']
mov ['edx,', '[ebp+var_124]']
mov ['[ebp+var_C0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_90]']
call ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_84]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['eax,', '[ebp+var_C0]']
jmp ['short', 'loc_1672']
endp
__catch$?UpdateItems@CHandler@NBz2@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$0 proc near
mov ['dword', 'ptr', '[ebp-0C4h],', '8007000Eh']
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['eax,', 'offset', '$LN30']
retn
endp
?UpdateArchive@NBz2@NArchive@@YGJ_KPAUISequentialOutStream@@ABUCProps@@PAUIArchiveUpdateCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?UpdateArchive@NBz2@NArchive@@YGJ_KPAUISequentialOutStream@@ABUCProps@@PAUIArchiveUpdateCallback@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '6Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_78]']
mov ['ecx,', '1Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_17B2']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_19D1']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ecx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1809']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_4C],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4C]']
jmp ['loc_19D1']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_54],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_182D']
mov ['ecx,', '[ebp+var_54]']
call ['??0CLocalProgress@@QAE@XZ']
mov ['[ebp+var_6C],', 'eax']
jmp ['short', 'loc_1834']
mov ['[ebp+var_6C],', '0']
mov ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_50],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
push ['1']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['ecx,', '[ebp+var_24]']
call ['?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z']
push ['1B8h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_5C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_1889']
mov ['ecx,', '[ebp+var_5C]']
call ['??0CEncoder@NBZip2@NCompress@@QAE@XZ']
mov ['[ebp+var_70],', 'eax']
jmp ['short', 'loc_1890']
mov ['[ebp+var_70],', '0']
mov ['eax,', '[ebp+var_70]']
mov ['[ebp+var_58],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_58]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
lea ['ecx,', '[ebp+var_3C]']
call ['??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_18C1']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '4']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_18C8']
mov ['[ebp+var_74],', '0']
push ['0']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_1914']
mov ['edx,', '[ebp+var_44]']
mov ['[ebp+var_60],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_60]']
jmp ['loc_19D1']
lea ['ecx,', '[ebp+var_3C]']
call ['??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ']
mov ['[ebp+var_78],', 'eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ']
mov ['esi,', 'esp']
push ['eax']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_78]']
push ['ecx']
mov ['edx,', '[ebp+var_78]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_198B']
mov ['edx,', '[ebp+var_48]']
mov ['[ebp+var_64],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_64]']
jmp ['short', 'loc_19D1']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ecx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_68]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '78h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?SetProperties@CHandler@NBz2@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '3Ch']
call ['?SetProperties@CSingleMethodProps@NArchive@@QAEJPBQB_WPBUtagPROPVARIANT@@I@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['10h']
endp
?CreateArc@NBz2@NArchive@@YGPAUIInArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CreateArc@NBz2@NArchive@@YGPAUIInArchive@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['78h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1AED']
mov ['ecx,', '[ebp+var_14]']
call ['??0CHandler@NBz2@NArchive@@QAE@XZ']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_1AF4']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CreateArcOut@NBz2@NArchive@@YGPAUIOutArchive@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CreateArcOut@NBz2@NArchive@@YGPAUIOutArchive@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['78h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1B89']
mov ['ecx,', '[ebp+var_14]']
call ['??0CHandler@NBz2@NArchive@@QAE@XZ']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_1B90']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1BAE']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_1BB5']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__ehhandler$?Open@CHandler@NBz2@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-34h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Open@CHandler@NBz2@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$5 proc near
mov ['eax,', '[ebp-0ACh]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$6 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$7 proc near
mov ['eax,', '[ebp-0B8h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$8 proc near
lea ['ecx,', '[ebp-4Ch]']
jmp ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
endp
__unwindfunclet$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$9 proc near
mov ['eax,', '[ebp-0C0h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$10 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__ehhandler$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-164h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Extract@CHandler@NBz2@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?UpdateItems@CHandler@NBz2@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-4Ch]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NBz2@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$3 proc near
lea ['ecx,', '[ebp-70h]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NBz2@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$4 proc near
mov ['eax,', '[ebp-0B4h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?UpdateItems@CHandler@NBz2@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$5 proc near
lea ['ecx,', '[ebp-84h]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateItems@CHandler@NBz2@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$6 proc near
lea ['ecx,', '[ebp-90h]']
jmp ['??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ']
endp
__ehhandler$?UpdateItems@CHandler@NBz2@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-128h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?UpdateItems@CHandler@NBz2@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?UpdateArchive@NBz2@NArchive@@YGJ_KPAUISequentialOutStream@@ABUCProps@@PAUIArchiveUpdateCallback@@@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@NBz2@NArchive@@YGJ_KPAUISequentialOutStream@@ABUCProps@@PAUIArchiveUpdateCallback@@@Z$1 proc near
mov ['eax,', '[ebp-54h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?UpdateArchive@NBz2@NArchive@@YGJ_KPAUISequentialOutStream@@ABUCProps@@PAUIArchiveUpdateCallback@@@Z$2 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ']
endp
__unwindfunclet$?UpdateArchive@NBz2@NArchive@@YGJ_KPAUISequentialOutStream@@ABUCProps@@PAUIArchiveUpdateCallback@@@Z$3 proc near
mov ['eax,', '[ebp-5Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?UpdateArchive@NBz2@NArchive@@YGJ_KPAUISequentialOutStream@@ABUCProps@@PAUIArchiveUpdateCallback@@@Z$4 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ']
endp
__ehhandler$?UpdateArchive@NBz2@NArchive@@YGJ_KPAUISequentialOutStream@@ABUCProps@@PAUIArchiveUpdateCallback@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-78h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?UpdateArchive@NBz2@NArchive@@YGJ_KPAUISequentialOutStream@@ABUCProps@@PAUIArchiveUpdateCallback@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CreateArc@NBz2@NArchive@@YGPAUIInArchive@@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?CreateArc@NBz2@NArchive@@YGPAUIInArchive@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CreateArc@NBz2@NArchive@@YGPAUIInArchive@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?CreateArcOut@NBz2@NArchive@@YGPAUIOutArchive@@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?CreateArcOut@NBz2@NArchive@@YGPAUIOutArchive@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CreateArcOut@NBz2@NArchive@@YGPAUIOutArchive@@XZ']
jmp ['___CxxFrameHandler3']
endp
?GetStreamSize@CDecoder@NBZip2@NCompress@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?GetStreamSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetInputProcessedSize@CDecoder@NBZip2@NCompress@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '140h']
call ['?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InitNumBlocks@CDecoder@NBZip2@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '138h']
call ['?InitNumBlocks@CBase@NBZip2@NCompress@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?InitNumBlocks@CBase@NBZip2@NCompress@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+6EB0h],', '0']
mov ['dword', 'ptr', '[eax+6EB4h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetNumBlocks@CDecoder@NBZip2@NCompress@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+6FE8h]']
mov ['edx,', '[ecx+6FECh]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetStream@CDummyOutStream@@QAEXPAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CDummyOutStream@@QAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetSize@CDummyOutStream@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+10h]']
mov ['edx,', '[ecx+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDummyOutStream@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialOutStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CDummyOutStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CDummyOutStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2378']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_237F']
mov ['eax,', '80004002h']
jmp ['short', 'loc_2390']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CDummyOutStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CDummyOutStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2446']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_2470']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2467']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCDummyOutStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_246E']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCDummyOutStream@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CDummyOutStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_24AA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CDummyOutStream@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialOutStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialOutStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IntToBool@@YG_NH@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0']
setnz ['al']
pop ['ebp']
retn ['4']
endp
??0CHandler@NBz2@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CHandler@NBz2@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IInArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0IArchiveOpenSeq@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0IOutArchive@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0ISetProperties@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CHandler@NBz2@NArchive@@6BIInArchive@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CHandler@NBz2@NArchive@@6BIArchiveOpenSeq@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CHandler@NBz2@NArchive@@6BIOutArchive@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '??_7CHandler@NBz2@NArchive@@6BISetProperties@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??0CSingleMethodProps@NArchive@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CHandler@NBz2@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??0CHandler@NBz2@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$??0CHandler@NBz2@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CHandler@NBz2@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CSingleMethodProps@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CSingleMethodProps@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0COneMethodInfo@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Init@CSingleMethodProps@NArchive@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CSingleMethodProps@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1COneMethodInfo@@QAE@XZ']
endp
__ehhandler$??0CSingleMethodProps@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CSingleMethodProps@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0COneMethodInfo@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COneMethodInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CMethodProps@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMethodProps@@QAE@XZ']
endp
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0COneMethodInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COneMethodInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COneMethodInfo@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COneMethodInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CMethodProps@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CMethodProps@@QAE@XZ']
endp
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1COneMethodInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COneMethodInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CProps@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CMethodProps@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProps@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CProps@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@UCProp@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CHandler@NBz2@NArchive@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2DEF']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_2EB1']
push ['offset', '_IID_IInArchive']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2E0E']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_2EB1']
push ['offset', '_IID_IArchiveOpenSeq']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2E42']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2E31']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_2E38']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_2EB1']
push ['offset', '_IID_IOutArchive']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2E76']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2E65']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2E6C']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_2EB1']
push ['offset', '_IID_ISetProperties']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_2EAA']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_2E99']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_2EA0']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_2EB1']
mov ['eax,', '80004002h']
jmp ['short', 'loc_2EC2']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CHandler@NBz2@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CHandler@NBz2@NArchive@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+10h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2F3A']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+10h]']
jmp ['short', 'loc_2F64']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2F5B']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCHandler@NBz2@NArchive@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_2F62']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCHandler@NBz2@NArchive@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CHandler@NBz2@NArchive@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2F9E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0IInArchive@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IArchiveOpenSeq@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IArchiveOpenSeq@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IOutArchive@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOutArchive@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISetProperties@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISetProperties@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CHandler@NBz2@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CHandler@NBz2@NArchive@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??1CSingleMethodProps@NArchive@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CHandler@NBz2@NArchive@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
endp
__unwindfunclet$??1CHandler@NBz2@NArchive@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$??1CHandler@NBz2@NArchive@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CHandler@NBz2@NArchive@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CSingleMethodProps@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1COneMethodInfo@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3278']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_32BE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_333A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3387']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_33F4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_3417']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetStreamSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?GetStreamSize@CInBufferBase@@QBE_KXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetStreamSize@CInBufferBase@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax]']
sub ['eax,', '[ecx+8]']
cdq
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+10h]']
adc ['edx,', '[ecx+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?GetProcessedSize@CInBufferBase@@QBE_KXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '20h']
sub ['esi,', '[ecx]']
shr ['esi,', '3']
xor ['ecx,', 'ecx']
sub ['eax,', 'esi']
sbb ['edx,', 'ecx']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetProcessedSize@CInBufferBase@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
xor ['esi,', 'esi']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
adc ['esi,', '[edx+14h]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[eax]']
sub ['eax,', '[edx+8]']
cdq
add ['ecx,', 'eax']
adc ['esi,', 'edx']
mov ['eax,', 'ecx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+28h],', '4']
ja ['short', 'loc_353C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '20h']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
shl ['ecx,', '3']
cmp ['edx,', 'ecx']
jb ['short', 'loc_353C']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3543']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_35A0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_35E6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3633']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_36A0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_36C3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_37BA']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_37B1']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCProp@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_37B8']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_3776']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3886']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_38D3']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3940']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_3963']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??7?$CMyComPtr@UIInStream@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_39D4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3A1A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3A96']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_GCProp@@QAEPAXI@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3B1A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddRef@CHandler@NBz2@NArchive@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?AddRef@CHandler@NBz2@NArchive@@UAGKXZ']
endp
?QueryInterface@CHandler@NBz2@NArchive@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CHandler@NBz2@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CHandler@NBz2@NArchive@@WM@AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?QueryInterface@CHandler@NBz2@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CHandler@NBz2@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CHandler@NBz2@NArchive@@UAGKXZ']
endp
?Release@CHandler@NBz2@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CHandler@NBz2@NArchive@@UAGKXZ']
endp
?Release@CHandler@NBz2@NArchive@@WM@AGKXZ proc near
sub ['[esp+arg_0],', '0Ch']
jmp ['?Release@CHandler@NBz2@NArchive@@UAGKXZ']
endp
?AddRef@CHandler@NBz2@NArchive@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CHandler@NBz2@NArchive@@UAGKXZ']
endp
?AddRef@CHandler@NBz2@NArchive@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CHandler@NBz2@NArchive@@UAGKXZ']
endp
?QueryInterface@CHandler@NBz2@NArchive@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CHandler@NBz2@NArchive@@UAGJABU_GUID@@PAPAX@Z']
endp
??__Eg_RegisterArc@NBz2@NArchive@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '_g_RegisterArc']
call ['??0CRegisterArc@NBz2@NArchive@@QAE@XZ']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CRegisterArc@NBz2@NArchive@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '_g_ArcInfo']
call ['?RegisterArc@@YGXPBUCArcInfo@@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

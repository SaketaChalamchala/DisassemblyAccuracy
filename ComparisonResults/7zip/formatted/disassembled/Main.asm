?Main2@@YGHXZ   proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Main2@@YGHXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '9D0h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_9DC]']
mov ['ecx,', '274h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__SetFileApisToOEM@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetCommandLineW@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_948]']
call ['??0UString@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_948]']
push ['ecx']
call ['?SplitCommandLine@NCommandLineParser@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_948]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_20]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_F2E']
push ['1']
mov ['edx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
push ['edx']
call ['?ShowCopyrightAndHelp@@YGXPAVCStdOutStream@@_N@Z']
mov ['[ebp+var_94C],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', '[ebp+var_94C]']
jmp ['loc_2A6C']
push ['0']
lea ['ecx,', '[ebp+var_20]']
call ['?Delete@?$CObjectVector@VUString@@@@QAEXI@Z']
lea ['ecx,', '[ebp+var_238]']
call ['??0CArcCmdLineOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_26C]']
call ['??0CArcCmdLineParser@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['eax,', '[ebp+var_238]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['ecx,', '[ebp+var_26C]']
call ['?Parse1@CArcCmdLineParser@@QAEXABV?$CObjectVector@VUString@@@@AAUCArcCmdLineOptions@@@Z']
cmp ['[ebp+var_3C],', '1']
jz ['short', 'loc_F8A']
xor ['edx,', 'edx']
cmp ['[ebp+var_3C],', '2']
setnz ['dl']
sub ['edx,', '1']
and ['edx,', 'offset', '?g_StdErr@@3VCStdOutStream@@A']
mov ['dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A,', 'edx']
cmp ['[ebp+var_38],', '2']
jz ['short', 'loc_FA6']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
not ['eax']
and ['eax,', 'offset', '?g_StdOut@@3VCStdOutStream@@A']
mov ['dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A,', 'eax']
mov ['[ebp+var_274],', '0']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_FDE']
cmp ['[ebp+var_34],', '2']
jnz ['short', 'loc_FC8']
mov ['[ebp+var_984],', 'offset', '?g_StdErr@@3VCStdOutStream@@A']
jmp ['short', 'loc_FD2']
mov ['[ebp+var_984],', 'offset', '?g_StdOut@@3VCStdOutStream@@A']
mov ['ecx,', '[ebp+var_984]']
mov ['[ebp+var_274],', 'ecx']
cmp ['dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A,', '0']
jz ['short', 'loc_FF5']
mov ['edx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
mov ['[ebp+var_988],', 'edx']
jmp ['short', 'loc_FFF']
mov ['[ebp+var_988],', 'offset', '?g_StdOut@@3VCStdOutStream@@A']
mov ['eax,', '[ebp+var_988]']
mov ['[ebp+var_950],', 'eax']
mov ['ecx,', '[ebp+var_950]']
mov ['[ebp+var_278],', 'ecx']
movzx ['edx,', '[ebp+var_238]']
test ['edx,', 'edx']
jz ['short', 'loc_1071']
push ['1']
mov ['eax,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
push ['eax']
call ['?ShowCopyrightAndHelp@@YGXPAVCStdOutStream@@_N@Z']
mov ['[ebp+var_954],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_26C]']
call ['??1CArcCmdLineParser@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_238]']
call ['??1CArcCmdLineOptions@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', '[ebp+var_954]']
jmp ['loc_2A6C']
call ['?EnablePrivilege_SymLink@NSecurity@NWindows@@YGXXZ']
movzx ['ecx,', '[ebp+var_237]']
test ['ecx,', 'ecx']
jz ['short', 'loc_108D']
call ['_SetLargePageSize@0']
push ['(offset', '$SG77136+1)']
call ['?EnablePrivilege_LockMemory@NSecurity@NWindows@@YG_N_N@Z']
movzx ['edx,', '[ebp+var_22F]']
test ['edx,', 'edx']
jz ['short', 'loc_10A5']
push ['0']
mov ['eax,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
push ['eax']
call ['?ShowCopyrightAndHelp@@YGXPAVCStdOutStream@@_N@Z']
lea ['ecx,', '[ebp+var_238]']
push ['ecx']
lea ['ecx,', '[ebp+var_26C]']
call ['?Parse2@CArcCmdLineParser@@QAEXAAUCArcCmdLineOptions@@@Z']
mov ['[ebp+var_27C],', '1']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_10CF']
mov ['edx,', '[ebp+var_34]']
cmp ['edx,', '[ebp+var_3C]']
jz ['short', 'loc_10D9']
mov ['[ebp+var_27C],', '2']
mov ['[ebp+var_280],', '50h']
cmp ['[ebp+var_274],', '0']
jz ['short', 'loc_1125']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+ConsoleScreenBufferInfo]']
push ['eax']
mov ['edi,', 'esp']
push ['0FFFFFFF5h']
call ['dword', 'ptr', 'ds:__imp__GetStdHandle@4']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetConsoleScreenBufferInfo@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_1125']
movsx ['ecx,', '[ebp+ConsoleScreenBufferInfo.dwSize.X]']
mov ['[ebp+var_280],', 'ecx']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_95C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
cmp ['[ebp+var_95C],', '0']
jz ['short', 'loc_1155']
mov ['ecx,', '[ebp+var_95C]']
call ['??0CCodecs@@QAE@XZ']
mov ['[ebp+var_98C],', 'eax']
jmp ['short', 'loc_115F']
mov ['[ebp+var_98C],', '0']
mov ['edx,', '[ebp+var_98C]']
mov ['[ebp+var_958],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['eax,', '[ebp+var_958]']
mov ['[ebp+var_2A4],', 'eax']
mov ['ecx,', '[ebp+var_2A4]']
push ['ecx']
lea ['ecx,', '[ebp+var_2AC]']
call ['??0?$CMyComPtr@UIUnknown@@@@QAE@PAUIUnknown@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['edx,', '[ebp+var_2A4]']
mov ['al,', '[ebp+var_236]']
mov ['[edx+14h],', 'al']
mov ['ecx,', '[ebp+var_2A4]']
mov ['dl,', '[ebp+var_235]']
mov ['[ecx+15h],', 'dl']
mov ['ecx,', '[ebp+var_2A4]']
call ['?Load@CCodecs@@QAEJXZ']
push ['eax']
call ['?ThrowException_if_Error@@YGXJ@Z']
lea ['ecx,', '[ebp+var_214]']
call ['?IsFromExtractGroup@CArcCommand@@QBE_NXZ']
mov ['[ebp+var_2B1],', 'al']
mov ['ecx,', '[ebp+var_2A4]']
add ['ecx,', '8']
call ['?Size@?$CObjectVector@UCArcInfoEx@@@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_1226']
movzx ['eax,', '[ebp+var_2B1]']
test ['eax,', 'eax']
jnz ['short', 'loc_1209']
cmp ['[ebp+var_214],', '6']
jz ['short', 'loc_1209']
lea ['ecx,', '[ebp+var_214]']
call ['?IsFromUpdateGroup@CArcCommand@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1226']
mov ['edx,', 'ds:_kNoFormats']
mov ['[ebp+var_960],', 'edx']
push ['offset', '__TI2CPAD']
lea ['eax,', '[ebp+var_960]']
push ['eax']
call ['__CxxThrowException@8']
lea ['ecx,', '[ebp+var_2C4]']
call ['??0?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_2C4]']
push ['ecx']
lea ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+var_2A4]']
push ['eax']
call ['?ParseOpenTypes@@YG_NAAVCCodecs@@ABVUString@@AAV?$CObjectVector@UCOpenType@@@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1270']
mov ['edx,', 'ds:_kUnsupportedArcTypeMessage']
mov ['[ebp+var_964],', 'edx']
push ['offset', '__TI2CPAD']
lea ['eax,', '[ebp+var_964]']
push ['eax']
call ['__CxxThrowException@8']
lea ['ecx,', '[ebp+var_2D8]']
call ['??0?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['[ebp+var_2E0],', '0']
jmp ['short', 'loc_129A']
mov ['ecx,', '[ebp+var_2E0]']
add ['ecx,', '1']
mov ['[ebp+var_2E0],', 'ecx']
lea ['ecx,', '[ebp+var_48]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_2E0],', 'eax']
jnb ['loc_1342']
lea ['ecx,', '[ebp+var_2F0]']
call ['??0?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['edx,', '[ebp+var_2F0]']
push ['edx']
mov ['eax,', '[ebp+var_2E0]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_2A4]']
call ['?FindFormatForArchiveType@CCodecs@@QBE_NABVUString@@AAV?$CRecordVector@H@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_12F6']
lea ['ecx,', '[ebp+var_2F0]']
call ['?Size@?$CRecordVector@H@@QBEIXZ']
cmp ['eax,', '1']
jz ['short', 'loc_1313']
mov ['edx,', 'ds:_kUnsupportedArcTypeMessage']
mov ['[ebp+var_968],', 'edx']
push ['offset', '__TI2CPAD']
lea ['eax,', '[ebp+var_968]']
push ['eax']
call ['__CxxThrowException@8']
push ['0']
lea ['ecx,', '[ebp+var_2F0]']
call ['??A?$CRecordVector@H@@QAEAAHI@Z']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_2D8]']
call ['?AddToUniqueSorted@?$CRecordVector@H@@QAEIH@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_2F0]']
call ['??1?$CRecordVector@H@@QAE@XZ']
jmp ['loc_128B']
mov ['[ebp+var_2F8],', '0']
mov ['[ebp+var_2FC],', '0']
cmp ['[ebp+var_214],', '8']
jnz ['loc_198A']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '$SG77505']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['[ebp+Str],', 'offset', '$SG77507']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_308],', 'eax']
mov ['[ebp+var_300],', '0']
jmp ['short', 'loc_13C5']
mov ['eax,', '[ebp+var_300]']
add ['eax,', '1']
mov ['[ebp+var_300],', 'eax']
mov ['ecx,', '[ebp+var_2A4]']
add ['ecx,', '8']
call ['?Size@?$CObjectVector@UCArcInfoEx@@@@QBEIXZ']
cmp ['[ebp+var_300],', 'eax']
jnb ['loc_1762']
mov ['ecx,', '[ebp+var_300]']
push ['ecx']
mov ['ecx,', '[ebp+var_2A4]']
add ['ecx,', '8']
call ['??A?$CObjectVector@UCArcInfoEx@@@@QAEAAUCArcInfoEx@@I@Z']
mov ['[ebp+var_30C],', 'eax']
push ['offset', '$SG77514']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['edx,', '[ebp+var_30C]']
movzx ['eax,', 'byte', 'ptr', '[edx+28h]']
neg ['eax']
sbb ['al,', 'al']
and ['al,', '23h']
add ['al,', '20h']
movzx ['ecx,', 'al']
push ['ecx']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
mov ['[ebp+var_310],', '0']
jmp ['short', 'loc_1446']
mov ['edx,', '[ebp+var_310]']
add ['edx,', '1']
mov ['[ebp+var_310],', 'edx']
mov ['eax,', '[ebp+var_310]']
cmp ['eax,', '[ebp+var_308]']
jnb ['short', 'loc_149D']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_310]']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_30C]']
and ['edx,', '[eax]']
jz ['short', 'loc_1481']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '[ebp+var_310]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_98D],', 'dl']
jmp ['short', 'loc_1488']
mov ['[ebp+var_98D],', '20h']
movzx ['eax,', '[ebp+var_98D]']
push ['eax']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
jmp ['short', 'loc_1437']
push ['20h']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
push ['8']
mov ['ecx,', '[ebp+var_30C]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['edx,', '[ebp+var_278]']
push ['edx']
call ['?PrintString@@YGXAAVCStdOutStream@@ABVUString@@I@Z']
push ['20h']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
lea ['ecx,', '[ebp+var_320]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['[ebp+var_328],', '0']
jmp ['short', 'loc_14F9']
mov ['eax,', '[ebp+var_328]']
add ['eax,', '1']
mov ['[ebp+var_328],', 'eax']
mov ['ecx,', '[ebp+var_30C]']
add ['ecx,', '18h']
call ['?Size@?$CObjectVector@UCArcExtInfo@@@@QBEIXZ']
cmp ['[ebp+var_328],', 'eax']
jnb ['loc_15A0']
cmp ['[ebp+var_328],', '0']
jz ['short', 'loc_1527']
lea ['ecx,', '[ebp+var_320]']
call ['?Add_Space@UString@@QAEXXZ']
mov ['ecx,', '[ebp+var_328]']
push ['ecx']
mov ['ecx,', '[ebp+var_30C]']
add ['ecx,', '18h']
call ['??A?$CObjectVector@UCArcExtInfo@@@@QBEABUCArcExtInfo@@I@Z']
mov ['[ebp+var_32C],', 'eax']
mov ['edx,', '[ebp+var_32C]']
push ['edx']
lea ['ecx,', '[ebp+var_320]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_32C]']
add ['ecx,', '0Ch']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_159B']
push ['offset', '$SG77530']
lea ['ecx,', '[ebp+var_320]']
call ['??YUString@@QAEAAV0@PB_W@Z']
mov ['ecx,', '[ebp+var_32C]']
add ['ecx,', '0Ch']
push ['ecx']
lea ['ecx,', '[ebp+var_320]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
push ['29h']
lea ['ecx,', '[ebp+var_320]']
call ['??YUString@@QAEAAV0@_W@Z']
jmp ['loc_14EA']
push ['0Dh']
lea ['edx,', '[ebp+var_320]']
push ['edx']
mov ['eax,', '[ebp+var_278]']
push ['eax']
call ['?PrintString@@YGXAAVCStdOutStream@@ABVUString@@I@Z']
push ['20h']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
mov ['ecx,', '[ebp+var_30C]']
cmp ['dword', 'ptr', '[ecx+2Ch],', '0']
jz ['short', 'loc_15F8']
push ['20h']
mov ['edx,', '[ebp+var_30C]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
push ['offset', '$SG77532']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@I@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
mov ['[ebp+var_330],', '0']
jmp ['short', 'loc_1613']
mov ['ecx,', '[ebp+var_330]']
add ['ecx,', '1']
mov ['[ebp+var_330],', 'ecx']
mov ['ecx,', '[ebp+var_30C]']
add ['ecx,', '30h']
call ['?Size@?$CObjectVector@V?$CBuffer@E@@@@QBEIXZ']
cmp ['[ebp+var_330],', 'eax']
jnb ['loc_173E']
cmp ['[ebp+var_330],', '0']
jz ['short', 'loc_1646']
push ['offset', '$SG77538']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['edx,', '[ebp+var_330]']
push ['edx']
mov ['ecx,', '[ebp+var_30C]']
add ['ecx,', '30h']
call ['??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z']
mov ['[ebp+var_334],', 'eax']
mov ['[ebp+var_338],', '0']
jmp ['short', 'loc_167C']
mov ['eax,', '[ebp+var_338]']
add ['eax,', '1']
mov ['[ebp+var_338],', 'eax']
mov ['ecx,', '[ebp+var_334]']
call ['?Size@?$CBuffer@E@@QBEIXZ']
cmp ['[ebp+var_338],', 'eax']
jnb ['loc_1739']
cmp ['[ebp+var_338],', '0']
jz ['short', 'loc_16A9']
push ['20h']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
mov ['ecx,', '[ebp+var_334]']
call ['??B?$CBuffer@E@@QBEPBEXZ']
mov ['ecx,', '[ebp+var_338]']
mov ['dl,', '[eax+ecx]']
mov ['[ebp+var_339],', 'dl']
movzx ['eax,', '[ebp+var_339]']
cmp ['eax,', '20h']
jle ['short', 'loc_16F3']
movzx ['ecx,', '[ebp+var_339]']
cmp ['ecx,', '80h']
jge ['short', 'loc_16F3']
movzx ['edx,', '[ebp+var_339]']
push ['edx']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
jmp ['short', 'loc_1734']
movzx ['eax,', '[ebp+var_339]']
sar ['eax,', '4']
and ['eax,', '0Fh']
push ['eax']
call ['?GetHex@@YGDI@Z']
movzx ['ecx,', 'al']
push ['ecx']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
movzx ['edx,', '[ebp+var_339]']
and ['edx,', '0Fh']
push ['edx']
call ['?GetHex@@YGDI@Z']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
jmp ['loc_166D']
jmp ['loc_1604']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_320]']
call ['??1UString@@QAE@XZ']
jmp ['loc_13B6']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '$SG77549']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['[ebp+var_300],', '0']
jmp ['short', 'loc_17A5']
mov ['ecx,', '[ebp+var_300]']
add ['ecx,', '1']
mov ['[ebp+var_300],', 'ecx']
mov ['edx,', '[ebp+var_300]']
cmp ['edx,', 'dword', 'ptr', 'ds:?g_NumCodecs@@3IA']
jnb ['loc_18A1']
mov ['eax,', '[ebp+var_300]']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_Codecs@@3PAPBUCCodecInfo@@A[eax*4]']
mov ['[ebp+var_340],', 'ecx']
push ['0FFFFFFFFh']
mov ['edx,', '[ebp+var_278]']
push ['edx']
call ['?PrintLibIndex@@YGXAAVCStdOutStream@@H@Z']
mov ['eax,', '[ebp+var_340]']
cmp ['dword', 'ptr', '[eax+14h],', '1']
jnz ['short', 'loc_17F3']
push ['20h']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
jmp ['short', 'loc_1808']
mov ['ecx,', '[ebp+var_340]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@I@Z']
mov ['eax,', '[ebp+var_340]']
mov ['ecx,', '[eax+4]']
neg ['ecx']
sbb ['cl,', 'cl']
and ['cl,', '25h']
add ['cl,', '20h']
movzx ['edx,', 'cl']
push ['edx']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
mov ['eax,', '[ebp+var_340]']
mov ['ecx,', '[eax]']
neg ['ecx']
sbb ['cl,', 'cl']
and ['cl,', '24h']
add ['cl,', '20h']
movzx ['edx,', 'cl']
push ['edx']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
push ['20h']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
mov ['eax,', '[ebp+var_340]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[eax+8]']
push ['edx']
mov ['eax,', '[ebp+var_278]']
push ['eax']
call ['?PrintHexId@@YGXAAVCStdOutStream@@_K@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_340]']
mov ['edx,', '[ecx+10h]']
push ['edx']
push ['20h']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
jmp ['loc_1796']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '$SG77558']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['[ebp+var_300],', '0']
jmp ['short', 'loc_18E4']
mov ['eax,', '[ebp+var_300]']
add ['eax,', '1']
mov ['[ebp+var_300],', 'eax']
mov ['ecx,', '[ebp+var_300]']
cmp ['ecx,', 'dword', 'ptr', 'ds:?g_NumHashers@@3IA']
jnb ['loc_1985']
mov ['edx,', '[ebp+var_300]']
mov ['eax,', 'dword', 'ptr', 'ds:?g_Hashers@@3PAPBUCHasherInfo@@A[edx*4]']
mov ['[ebp+var_344],', 'eax']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+var_278]']
push ['ecx']
call ['?PrintLibIndex@@YGXAAVCStdOutStream@@H@Z']
push ['4']
mov ['edx,', '[ebp+var_344]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_278]']
push ['ecx']
call ['?PrintUInt32@@YGXAAVCStdOutStream@@II@Z']
push ['20h']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
mov ['edx,', '[ebp+var_344]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[edx+8]']
push ['ecx']
mov ['edx,', '[ebp+var_278]']
push ['edx']
call ['?PrintHexId@@YGXAAVCStdOutStream@@_K@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['eax,', '[ebp+var_344]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
push ['20h']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
jmp ['loc_18D5']
jmp ['loc_29DB']
cmp ['[ebp+var_214],', '7']
jnz ['short', 'loc_19F0']
mov ['ecx,', '[ebp+var_278]']
call ['??BCStdOutStream@@QAEPAU_iobuf@@XZ']
push ['eax']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
lea ['eax,', '[ebp+var_1BC]']
push ['eax']
call ['?BenchCon@@YGJABV?$CObjectVector@UCProperty@@@@IPAU_iobuf@@@Z']
mov ['[ebp+var_2FC],', 'eax']
cmp ['[ebp+var_2FC],', '1']
jnz ['short', 'loc_19EB']
cmp ['dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A,', '0']
jz ['short', 'loc_19D7']
push ['offset', '$SG77569']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['[ebp+var_2F8],', '2']
mov ['[ebp+var_2FC],', '0']
jmp ['loc_29DB']
movzx ['ecx,', '[ebp+var_2B1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1A08']
cmp ['[ebp+var_214],', '6']
jnz ['loc_25EC']
lea ['ecx,', '[ebp+var_354]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_368]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
movzx ['edx,', '[ebp+var_231]']
test ['edx,', 'edx']
jz ['short', 'loc_1A5A']
lea ['eax,', '[ebp+var_1C8]']
push ['eax']
lea ['ecx,', '[ebp+var_354]']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
lea ['ecx,', '[ebp+var_1C8]']
push ['ecx']
lea ['ecx,', '[ebp+var_368]']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
jmp ['loc_1B92']
lea ['ecx,', '[ebp+var_430]']
call ['??0CExtractScanConsole@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
mov ['edx,', '[ebp+var_274]']
push ['edx']
mov ['eax,', 'dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A']
push ['eax']
movzx ['ecx,', '[ebp+var_22F]']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
push ['ecx']
lea ['ecx,', '[ebp+var_430]']
call ['?Init@CExtractScanConsole@@QAEXPAVCStdOutStream@@00@Z']
mov ['edx,', '[ebp+var_280]']
push ['edx']
lea ['ecx,', '[ebp+var_430]']
call ['?SetWindowWidth@CExtractScanConsole@@QAEXI@Z']
cmp ['dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A,', '0']
jz ['short', 'loc_1AD5']
movzx ['eax,', '[ebp+var_22F]']
test ['eax,', 'eax']
jz ['short', 'loc_1AD5']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '$SG77580']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
lea ['ecx,', '[ebp+var_468]']
call ['??0CDirItemsStat@@QAE@XZ']
lea ['ecx,', '[ebp+var_430]']
call ['?StartScanning@CExtractScanConsole@@QAEXXZ']
lea ['ecx,', '[ebp+var_430]']
push ['ecx']
lea ['edx,', '[ebp+var_468]']
push ['edx']
lea ['eax,', '[ebp+var_368]']
push ['eax']
lea ['ecx,', '[ebp+var_354]']
push ['ecx']
lea ['ecx,', '[ebp+var_974]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_994],', 'eax']
mov ['edx,', '[ebp+var_994]']
mov ['[ebp+var_998],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
mov ['eax,', '[ebp+var_998]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_1E0]']
push ['ecx']
call ['?EnumerateDirItemsAndSort@@YGJAAVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAV?$CObjectVector@VUString@@@@3AAUCDirItemsStat@@PAUIDirItemsCallback@@@Z']
mov ['[ebp+var_2FC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_974]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_430]']
call ['?CloseScanning@CExtractScanConsole@@QAEXXZ']
cmp ['[ebp+var_2FC],', '0']
jnz ['short', 'loc_1B83']
movzx ['edx,', '[ebp+var_22F]']
test ['edx,', 'edx']
jz ['short', 'loc_1B83']
lea ['eax,', '[ebp+var_468]']
push ['eax']
lea ['ecx,', '[ebp+var_430]']
call ['?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_430]']
call ['??1CExtractScanConsole@@QAE@XZ']
cmp ['[ebp+var_2FC],', '0']
jnz ['loc_25C9']
movzx ['ecx,', '[ebp+var_2B1]']
test ['ecx,', 'ecx']
jz ['loc_245D']
push ['168h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_97C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
cmp ['[ebp+var_97C],', '0']
jz ['short', 'loc_1BE1']
mov ['ecx,', '[ebp+var_97C]']
call ['??0CExtractCallbackConsole@@QAE@XZ']
mov ['[ebp+var_99C],', 'eax']
jmp ['short', 'loc_1BEB']
mov ['[ebp+var_99C],', '0']
mov ['edx,', '[ebp+var_99C]']
mov ['[ebp+var_978],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
mov ['eax,', '[ebp+var_978]']
mov ['[ebp+var_470],', 'eax']
mov ['ecx,', '[ebp+var_470]']
push ['ecx']
lea ['ecx,', '[ebp+var_478]']
call ['??0?$CMyComPtr@UIFolderArchiveExtractCallback@@@@QAE@PAUIFolderArchiveExtractCallback@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
mov ['edx,', '[ebp+var_470]']
mov ['al,', '[ebp+var_204]']
mov ['[edx+0D3h],', 'al']
lea ['ecx,', '[ebp+var_200]']
push ['ecx']
mov ['ecx,', '[ebp+var_470]']
add ['ecx,', '0D4h']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+var_274]']
push ['edx']
mov ['eax,', 'dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
push ['ecx']
mov ['ecx,', '[ebp+var_470]']
call ['?Init@CExtractCallbackConsole@@QAEXPAVCStdOutStream@@00@Z']
lea ['ecx,', '[ebp+var_354]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
mov ['edx,', '1']
cmp ['edx,', 'eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['ecx,', '[ebp+var_470]']
mov ['[ecx+0D2h],', 'al']
mov ['edx,', '[ebp+var_470]']
mov ['eax,', '[ebp+var_30]']
mov ['[edx+160h],', 'eax']
mov ['ecx,', '[ebp+var_470]']
mov ['edx,', '[ebp+var_27C]']
mov ['[ecx+15Ch],', 'edx']
cmp ['[ebp+var_274],', '0']
jz ['short', 'loc_1CC4']
mov ['eax,', '[ebp+var_280]']
push ['eax']
mov ['ecx,', '[ebp+var_470]']
call ['?SetWindowWidth@CExtractCallbackConsole@@QAEXI@Z']
lea ['ecx,', '[ebp+var_4B4]']
call ['??0CExtractOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_1B0]']
push ['ecx']
lea ['ecx,', '[ebp+var_4B4]']
call ['??4CExtractOptionsBase@@QAEAAU0@ABU0@@Z']
mov ['dl,', '[ebp+var_231]']
mov ['[ebp+var_490],', 'dl']
mov ['al,', '[ebp+var_230]']
mov ['[ebp+var_48F],', 'al']
mov ['cl,', '[ebp+var_22E]']
mov ['[ebp+var_48E],', 'cl']
lea ['ecx,', '[ebp+var_214]']
call ['?IsTestCommand@CArcCommand@@QBE_NXZ']
mov ['[ebp+var_48D],', 'al']
lea ['edx,', '[ebp+var_1BC]']
push ['edx']
lea ['ecx,', '[ebp+var_48C]']
call ['??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z']
lea ['ecx,', '[ebp+var_4C8]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_558]']
call ['??0CHashBundle@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
mov ['[ebp+var_560],', '0']
lea ['ecx,', '[ebp+var_1F0]']
call ['?IsEmpty@?$CObjectVector@VUString@@@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1D95']
lea ['ecx,', '[ebp+var_558]']
mov ['[ebp+var_560],', 'ecx']
lea ['edx,', '[ebp+var_1F0]']
push ['edx']
lea ['ecx,', '[ebp+var_558]']
call ['?SetMethods@CHashBundle@@QAEJABV?$CObjectVector@VUString@@@@@Z']
push ['eax']
call ['?ThrowException_if_Error@@YGXJ@Z']
lea ['ecx,', '[ebp+var_558]']
call ['?Init@CHashBundle@@QAEXXZ']
cmp ['[ebp+var_470],', '0']
jz ['short', 'loc_1DAF']
mov ['eax,', '[ebp+var_470]']
add ['eax,', '10h']
mov ['[ebp+var_9A0],', 'eax']
jmp ['short', 'loc_1DB9']
mov ['[ebp+var_9A0],', '0']
lea ['ecx,', '[ebp+var_508]']
push ['ecx']
lea ['edx,', '[ebp+var_4C8]']
push ['edx']
mov ['eax,', '[ebp+var_560]']
push ['eax']
mov ['ecx,', '[ebp+var_470]']
push ['ecx']
mov ['edx,', '[ebp+var_9A0]']
push ['edx']
lea ['eax,', '[ebp+var_4B4]']
push ['eax']
lea ['ecx,', '[ebp+var_22C]']
call ['?Front@?$CObjectVector@UCPair@NWildcard@@@@QAEAAUCPair@NWildcard@@XZ']
add ['eax,', '0Ch']
push ['eax']
lea ['ecx,', '[ebp+var_368]']
push ['ecx']
lea ['edx,', '[ebp+var_354]']
push ['edx']
lea ['eax,', '[ebp+var_2D8]']
push ['eax']
lea ['ecx,', '[ebp+var_2C4]']
push ['ecx']
mov ['edx,', '[ebp+var_2A4]']
push ['edx']
call ['?Extract@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@AAV?$CObjectVector@VUString@@@@3ABVCCensorNode@NWildcard@@ABUCExtractOptions@@PAUIOpenCallbackUI@@PAUIExtractCallbackUI@@PAUIHashCalc@@AAVUString@@AAUCDecompressStat@@@Z']
mov ['[ebp+var_2FC],', 'eax']
mov ['ecx,', '[ebp+var_470]']
add ['ecx,', '10h']
call ['?ClosePercents@COpenCallbackConsole@@QAEXXZ']
lea ['ecx,', '[ebp+var_4C8]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1EA3']
cmp ['dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A,', '0']
jz ['short', 'loc_1E90']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
lea ['ecx,', '[ebp+var_4C8]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '$SG77607']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PB_W@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
cmp ['[ebp+var_2FC],', '0']
jnz ['short', 'loc_1EA3']
mov ['[ebp+var_2FC],', '80004005h']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', '[ebp+var_470]']
mov ['[ebp+var_9A4],', 'ecx']
mov ['edx,', '[ebp+var_9A4]']
cmp ['dword', 'ptr', '[edx+10Ch],', '0']
ja ['short', 'loc_1EDD']
mov ['eax,', '[ebp+var_9A4]']
cmp ['dword', 'ptr', '[eax+108h],', '1']
jbe ['short', 'loc_1F4B']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_470]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ecx+108h]']
push ['eax']
push ['offset', '$SG77612']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_470]']
mov ['edx,', '[ecx+11Ch]']
push ['edx']
mov ['eax,', '[ecx+118h]']
push ['eax']
push ['offset', '$SG77613']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['[ebp+var_561],', '0']
mov ['ecx,', '[ebp+var_470]']
mov ['[ebp+var_9A8],', 'ecx']
mov ['edx,', '[ebp+var_9A8]']
mov ['eax,', '[ebp+var_9A8]']
mov ['ecx,', '[edx+120h]']
or ['ecx,', '[eax+124h]']
jz ['short', 'loc_1FB6']
mov ['[ebp+var_561],', '1']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['edx,', '[ebp+var_470]']
mov ['eax,', '[edx+124h]']
push ['eax']
mov ['ecx,', '[edx+120h]']
push ['ecx']
push ['offset', '$SG77616']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['edx,', '[ebp+var_470]']
mov ['[ebp+var_9AC],', 'edx']
mov ['eax,', '[ebp+var_9AC]']
mov ['ecx,', '[ebp+var_9AC]']
mov ['edx,', '[eax+128h]']
or ['edx,', '[ecx+12Ch]']
jz ['short', 'loc_201A']
mov ['[ebp+var_561],', '1']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['eax,', '[ebp+var_470]']
mov ['ecx,', '[eax+12Ch]']
push ['ecx']
mov ['edx,', '[eax+128h]']
push ['edx']
push ['offset', '$SG77618']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['eax,', '[ebp+var_470]']
mov ['[ebp+var_9B0],', 'eax']
mov ['ecx,', '[ebp+var_9B0]']
mov ['edx,', '[ebp+var_9B0]']
mov ['eax,', '[ecx+130h]']
or ['eax,', '[edx+134h]']
jz ['short', 'loc_2077']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_470]']
mov ['edx,', '[ecx+134h]']
push ['edx']
mov ['eax,', '[ecx+130h]']
push ['eax']
push ['offset', '$SG77620']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', '[ebp+var_470]']
mov ['[ebp+var_9B4],', 'ecx']
mov ['edx,', '[ebp+var_9B4]']
mov ['eax,', '[ebp+var_9B4]']
mov ['ecx,', '[edx+140h]']
or ['ecx,', '[eax+144h]']
jz ['short', 'loc_210A']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['edx,', '[ebp+var_470]']
mov ['[ebp+var_9B8],', 'edx']
mov ['eax,', '[ebp+var_9B8]']
mov ['ecx,', '[ebp+var_9B8]']
mov ['edx,', '[eax+140h]']
or ['edx,', '[ecx+144h]']
jz ['short', 'loc_210A']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['eax,', '[ebp+var_470]']
mov ['ecx,', '[eax+144h]']
push ['ecx']
mov ['edx,', '[eax+140h]']
push ['edx']
push ['offset', '$SG77623']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['eax,', '[ebp+var_470]']
mov ['[ebp+var_9BC],', 'eax']
mov ['ecx,', '[ebp+var_9BC]']
mov ['edx,', '[ebp+var_9BC]']
mov ['eax,', '[ecx+138h]']
or ['eax,', '[edx+13Ch]']
jz ['short', 'loc_21A4']
mov ['[ebp+var_561],', '1']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', '[ebp+var_470]']
mov ['[ebp+var_9C0],', 'ecx']
mov ['edx,', '[ebp+var_9C0]']
mov ['eax,', '[ebp+var_9C0]']
mov ['ecx,', '[edx+138h]']
or ['ecx,', '[eax+13Ch]']
jz ['short', 'loc_21A4']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['edx,', '[ebp+var_470]']
mov ['eax,', '[edx+13Ch]']
push ['eax']
mov ['ecx,', '[edx+138h]']
push ['ecx']
push ['offset', '$SG77626']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
movzx ['edx,', '[ebp+var_561]']
test ['edx,', 'edx']
jz ['short', 'loc_21B9']
mov ['[ebp+var_2F8],', '2']
mov ['eax,', '[ebp+var_470]']
mov ['[ebp+var_9C4],', 'eax']
mov ['ecx,', '[ebp+var_9C4]']
mov ['edx,', '[ebp+var_9C4]']
mov ['eax,', '[ecx+128h]']
or ['eax,', '[edx+12Ch]']
jnz ['short', 'loc_2205']
mov ['ecx,', '[ebp+var_470]']
mov ['[ebp+var_9C8],', 'ecx']
mov ['edx,', '[ebp+var_9C8]']
mov ['eax,', '[ebp+var_9C8]']
mov ['ecx,', '[edx+148h]']
or ['ecx,', '[eax+14Ch]']
jz ['short', 'loc_2277']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['edx,', '[ebp+var_470]']
mov ['[ebp+var_9CC],', 'edx']
mov ['eax,', '[ebp+var_9CC]']
mov ['ecx,', '[ebp+var_9CC]']
mov ['edx,', '[eax+148h]']
or ['edx,', '[ecx+14Ch]']
jz ['short', 'loc_2272']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['eax,', '[ebp+var_470]']
mov ['ecx,', '[eax+14Ch]']
push ['ecx']
mov ['edx,', '[eax+148h]']
push ['edx']
push ['offset', '$SG77631']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
jmp ['loc_241C']
cmp ['[ebp+var_2FC],', '0']
jnz ['loc_241C']
mov ['eax,', '[ebp+var_4E8]']
or ['eax,', '[ebp+var_4E4]']
jz ['short', 'loc_22C3']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_4E4]']
push ['ecx']
mov ['edx,', '[ebp+var_4E8]']
push ['edx']
push ['offset', '$SG77636']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
cmp ['[ebp+var_4E0],', '1']
jnz ['short', 'loc_22F1']
cmp ['[ebp+var_4DC],', '0']
jnz ['short', 'loc_22F1']
mov ['eax,', '[ebp+var_4E8]']
or ['eax,', '[ebp+var_4E4]']
jnz ['short', 'loc_22F1']
mov ['ecx,', '[ebp+var_4D8]']
or ['ecx,', '[ebp+var_4D4]']
jz ['short', 'loc_2322']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['edx,', '[ebp+var_4DC]']
push ['edx']
mov ['eax,', '[ebp+var_4E0]']
push ['eax']
push ['offset', '$SG77639']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', '[ebp+var_4D8]']
or ['ecx,', '[ebp+var_4D4]']
jz ['short', 'loc_2392']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['edx,', '[ebp+var_4D4]']
push ['edx']
mov ['eax,', '[ebp+var_4D8]']
push ['eax']
push ['offset', '$SG77641']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_4F4]']
push ['ecx']
mov ['edx,', '[ebp+var_4F8]']
push ['edx']
push ['offset', '$SG77642']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['eax,', '[ebp+var_4EC]']
push ['eax']
mov ['ecx,', '[ebp+var_4F0]']
push ['ecx']
push ['offset', '$SG77644']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['edx,', '[ebp+var_4FC]']
push ['edx']
mov ['eax,', '[ebp+var_500]']
push ['eax']
push ['offset', '$SG77643']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
cmp ['[ebp+var_560],', '0']
jz ['short', 'loc_241C']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_278]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
lea ['ecx,', '[ebp+var_558]']
push ['ecx']
mov ['edx,', '[ebp+var_278]']
push ['edx']
call ['?PrintHashStat@@YGXAAVCStdOutStream@@ABUCHashBundle@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
lea ['ecx,', '[ebp+var_558]']
call ['??1CHashBundle@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
lea ['ecx,', '[ebp+var_4C8]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
lea ['ecx,', '[ebp+var_4B4]']
call ['??1CExtractOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_478]']
call ['??1?$CMyComPtr@UIFolderArchiveExtractCallback@@@@QAE@XZ']
jmp ['loc_25C9']
mov ['[ebp+var_570],', '0']
mov ['[ebp+var_56C],', '0']
mov ['[ebp+var_580],', '0']
mov ['[ebp+var_57C],', '0']
lea ['eax,', '[ebp+var_580]']
push ['eax']
lea ['ecx,', '[ebp+var_570]']
push ['ecx']
lea ['edx,', '[ebp+var_1BC]']
push ['edx']
lea ['eax,', '[ebp+var_200]']
push ['eax']
lea ['ecx,', '[ebp+var_204]']
push ['ecx']
movzx ['edx,', '[ebp+var_1F4]']
push ['edx']
movzx ['eax,', '[ebp+var_22F]']
push ['eax']
lea ['ecx,', '[ebp+var_22C]']
call ['?Front@?$CObjectVector@UCPair@NWildcard@@@@QAEAAUCPair@NWildcard@@XZ']
add ['eax,', '0Ch']
push ['eax']
movzx ['ecx,', '[ebp+var_18A]']
push ['ecx']
movzx ['edx,', '[ebp+var_192]']
push ['edx']
lea ['eax,', '[ebp+var_368]']
push ['eax']
lea ['ecx,', '[ebp+var_354]']
push ['ecx']
movzx ['edx,', '[ebp+var_231]']
push ['edx']
lea ['eax,', '[ebp+var_2D8]']
push ['eax']
lea ['ecx,', '[ebp+var_2C4]']
push ['ecx']
mov ['edx,', '[ebp+var_2A4]']
push ['edx']
call ['?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z']
mov ['[ebp+var_2FC],', 'eax']
movzx ['eax,', '[ebp+var_22F]']
test ['eax,', 'eax']
jz ['short', 'loc_2566']
cmp ['[ebp+var_57C],', '0']
ja ['short', 'loc_252A']
cmp ['[ebp+var_580],', '0']
jbe ['short', 'loc_2566']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_57C]']
push ['ecx']
mov ['edx,', '[ebp+var_580]']
push ['edx']
push ['offset', '$SG77651']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', 'offset', '?g_StdOut@@3VCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
cmp ['[ebp+var_56C],', '0']
ja ['short', 'loc_2578']
cmp ['[ebp+var_570],', '0']
jbe ['short', 'loc_25C9']
movzx ['eax,', '[ebp+var_22F]']
test ['eax,', 'eax']
jz ['short', 'loc_25BF']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+var_56C]']
push ['ecx']
mov ['edx,', '[ebp+var_570]']
push ['edx']
push ['offset', '$SG77654']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', 'offset', '?g_StdOut@@3VCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@_K@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['[ebp+var_2F8],', '2']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_368]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_354]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
jmp ['loc_29DB']
lea ['ecx,', '[ebp+var_214]']
call ['?IsFromUpdateGroup@CArcCommand@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_2888']
lea ['ecx,', '[ebp+var_180]']
mov ['[ebp+var_588],', 'ecx']
mov ['edx,', '[ebp+var_588]']
movzx ['eax,', 'byte', 'ptr', '[edx+0A4h]']
test ['eax,', 'eax']
jz ['short', 'loc_264F']
mov ['ecx,', '[ebp+var_588]']
add ['ecx,', '0A8h']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_264F']
mov ['edx,', 'ds:_kDefaultSfxModule']
push ['edx']
mov ['ecx,', '[ebp+var_588]']
add ['ecx,', '0A8h']
call ['??4UString@@QAEAAV0@PB_W@Z']
lea ['ecx,', '[ebp+var_65C]']
call ['??0COpenCallbackConsole@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
mov ['eax,', '[ebp+var_274]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A']
push ['ecx']
mov ['edx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
push ['edx']
lea ['ecx,', '[ebp+var_65C]']
call ['?Init@COpenCallbackConsole@@QAEXPAVCStdOutStream@@00@Z']
movzx ['eax,', '[ebp+var_204]']
test ['eax,', 'eax']
jz ['short', 'loc_26A7']
lea ['ecx,', '[ebp+var_200]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_26A7']
mov ['[ebp+var_9D0],', '1']
jmp ['short', 'loc_26B1']
mov ['[ebp+var_9D0],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_9D0]']
mov ['[ebp+var_661],', 'dl']
mov ['al,', '[ebp+var_661]']
mov ['[ebp+var_599],', 'al']
lea ['ecx,', '[ebp+var_200]']
push ['ecx']
lea ['ecx,', '[ebp+var_598]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
lea ['ecx,', '[ebp+var_798]']
call ['??0CUpdateCallbackConsole@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
mov ['edx,', '[ebp+var_30]']
mov ['[ebp+var_6D0],', 'edx']
mov ['eax,', '[ebp+var_27C]']
mov ['[ebp+var_6D4],', 'eax']
cmp ['[ebp+var_274],', '0']
jz ['short', 'loc_271A']
mov ['ecx,', '[ebp+var_280]']
push ['ecx']
lea ['ecx,', '[ebp+var_790]']
call ['?SetWindowWidth@CCallbackConsoleBase@@QAEXI@Z']
mov ['dl,', '[ebp+var_661]']
mov ['[ebp+var_680],', 'dl']
movzx ['eax,', '[ebp+var_204]']
test ['eax,', 'eax']
jz ['short', 'loc_274F']
lea ['ecx,', '[ebp+var_200]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_274F']
mov ['[ebp+var_9D4],', '1']
jmp ['short', 'loc_2759']
mov ['[ebp+var_9D4],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_9D4]']
mov ['[ebp+var_670],', 'dl']
lea ['eax,', '[ebp+var_200]']
push ['eax']
lea ['ecx,', '[ebp+var_67C]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+var_588]']
mov ['dl,', '[ecx+0C4h]']
mov ['[ebp+var_6D8],', 'dl']
mov ['eax,', '[ebp+var_274]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A']
push ['ecx']
mov ['edx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
push ['edx']
lea ['ecx,', '[ebp+var_790]']
call ['?Init@CCallbackConsoleBase@@QAEXPAVCStdOutStream@@00@Z']
lea ['ecx,', '[ebp+var_7BC]']
call ['??0CUpdateErrorInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '15h']
push ['1']
lea ['eax,', '[ebp+var_798]']
push ['eax']
lea ['ecx,', '[ebp+var_65C]']
push ['ecx']
lea ['edx,', '[ebp+var_7BC]']
push ['edx']
mov ['eax,', '[ebp+var_588]']
push ['eax']
lea ['ecx,', '[ebp+var_22C]']
push ['ecx']
lea ['edx,', '[ebp+var_210]']
push ['edx']
lea ['eax,', '[ebp+var_2C4]']
push ['eax']
mov ['ecx,', '[ebp+var_2A4]']
push ['ecx']
call ['?UpdateArchive@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABVUString@@AAVCCensor@NWildcard@@AAUCUpdateOptions@@AAUCUpdateErrorInfo@@PAUIOpenCallbackUI@@PAUIUpdateCallbackUI2@@_N@Z']
mov ['[ebp+var_2FC],', 'eax']
lea ['ecx,', '[ebp+var_790]']
call ['?ClosePercents2@CCallbackConsoleBase@@QAEXXZ']
lea ['edx,', '[ebp+var_798]']
test ['edx,', 'edx']
jz ['short', 'loc_2823']
lea ['eax,', '[ebp+var_798]']
add ['eax,', '8']
mov ['[ebp+var_9D8],', 'eax']
jmp ['short', 'loc_282D']
mov ['[ebp+var_9D8],', '0']
push ['1']
mov ['ecx,', '[ebp+var_278]']
push ['ecx']
lea ['edx,', '[ebp+var_7BC]']
push ['edx']
mov ['eax,', '[ebp+var_9D8]']
push ['eax']
mov ['ecx,', '[ebp+var_2FC]']
push ['ecx']
call ['?WarningsCheck@@YGHJABVCCallbackConsoleBase@@ABUCUpdateErrorInfo@@AAVCStdOutStream@@_N@Z']
mov ['[ebp+var_2F8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '14h']
lea ['ecx,', '[ebp+var_7BC]']
call ['??1CUpdateErrorInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
lea ['ecx,', '[ebp+var_798]']
call ['??1CUpdateCallbackConsole@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_65C]']
call ['??1COpenCallbackConsole@@QAE@XZ']
jmp ['loc_29DB']
cmp ['[ebp+var_214],', '9']
jnz ['loc_29CD']
lea ['edx,', '[ebp+var_68]']
mov ['[ebp+var_7C4],', 'edx']
lea ['ecx,', '[ebp+var_900]']
call ['??0CHashCallbackConsole@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
cmp ['[ebp+var_274],', '0']
jz ['short', 'loc_28C8']
mov ['eax,', '[ebp+var_280]']
push ['eax']
lea ['ecx,', '[ebp+var_8F8]']
call ['?SetWindowWidth@CCallbackConsoleBase@@QAEXI@Z']
mov ['ecx,', '[ebp+var_274]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A']
push ['edx']
mov ['eax,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
push ['eax']
lea ['ecx,', '[ebp+var_8F8]']
call ['?Init@CCallbackConsoleBase@@QAEXPAVCStdOutStream@@00@Z']
mov ['cl,', '[ebp+var_22F]']
mov ['[ebp+var_7CF],', 'cl']
lea ['ecx,', '[ebp+var_914]']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '17h']
lea ['edx,', '[ebp+var_900]']
push ['edx']
lea ['eax,', '[ebp+var_914]']
push ['eax']
mov ['ecx,', '[ebp+var_7C4]']
push ['ecx']
lea ['edx,', '[ebp+var_22C]']
push ['edx']
call ['?HashCalc@@YGJABVCCensor@NWildcard@@ABUCHashOptions@@AAVAString@@PAUIHashCallbackUI@@@Z']
mov ['[ebp+var_2FC],', 'eax']
lea ['ecx,', '[ebp+var_938]']
call ['??0CUpdateErrorInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '18h']
lea ['eax,', '[ebp+var_914]']
push ['eax']
lea ['ecx,', '[ebp+var_934]']
call ['??4AString@@QAEAAV0@ABV0@@Z']
lea ['ecx,', '[ebp+var_900]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2965']
lea ['edx,', '[ebp+var_900]']
add ['edx,', '8']
mov ['[ebp+var_9DC],', 'edx']
jmp ['short', 'loc_296F']
mov ['[ebp+var_9DC],', '0']
movzx ['eax,', '[ebp+var_22F]']
push ['eax']
mov ['ecx,', '[ebp+var_278]']
push ['ecx']
lea ['edx,', '[ebp+var_938]']
push ['edx']
mov ['eax,', '[ebp+var_9DC]']
push ['eax']
mov ['ecx,', '[ebp+var_2FC]']
push ['ecx']
call ['?WarningsCheck@@YGHJABVCCallbackConsoleBase@@ABUCUpdateErrorInfo@@AAVCStdOutStream@@_N@Z']
mov ['[ebp+var_2F8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '17h']
lea ['ecx,', '[ebp+var_938]']
call ['??1CUpdateErrorInfo@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '16h']
lea ['ecx,', '[ebp+var_914]']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_900]']
call ['??1CHashCallbackConsole@@QAE@XZ']
jmp ['short', 'loc_29DB']
push ['7']
mov ['edx,', 'ds:_kUserErrorMessage']
push ['edx']
call ['?ShowMessageAndThrowException@@YGXPBDW4EEnum@NExitCode@@@Z']
movzx ['eax,', '[ebp+var_1F3]']
test ['eax,', 'eax']
jz ['short', 'loc_29F4']
cmp ['dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A,', '0']
jz ['short', 'loc_29F4']
call ['?PrintStat@@YGXXZ']
mov ['ecx,', '[ebp+var_2FC]']
push ['ecx']
call ['?ThrowException_if_Error@@YGXJ@Z']
mov ['edx,', '[ebp+var_2F8]']
mov ['[ebp+var_980],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_2D8]']
call ['??1?$CRecordVector@H@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_2C4]']
call ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_2AC]']
call ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_26C]']
call ['??1CArcCmdLineParser@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_238]']
call ['??1CArcCmdLineOptions@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', '[ebp+var_980]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN182']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '9DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ShowMessageAndThrowException@@YGXPBDW4EEnum@NExitCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A,', '0']
jz ['short', 'loc_2D4B']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['eax,', '[ebp+Str]']
push ['eax']
push ['offset', '$SG77154']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_ErrStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '__TI1?AW4EEnum@NExitCode@@']
lea ['edx,', '[ebp+var_4]']
push ['edx']
call ['__CxxThrowException@8']
endp
?ShowCopyrightAndHelp@@YGXPAVCStdOutStream@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2D7F']
jmp ['short', 'loc_2DA4']
mov ['eax,', 'ds:_kCopyrightString']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
movzx ['ecx,', '[ebp+arg_4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2DA4']
mov ['edx,', 'ds:_kHelpString']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?PrintUInt32@@YGXAAVCStdOutStream@@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?PrintUInt32@@YGXAAVCStdOutStream@@II@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?ConvertUInt32ToString@@YGXIPAD@Z']
lea ['edx,', '[ebp+var_24]']
push ['edx']
lea ['ecx,', '[ebp+var_34]']
call ['??0AString@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?PrintStringRight@@YGXAAVCStdOutStream@@ABVAString@@I@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?PrintStringRight@@YGXAAVCStdOutStream@@ABVAString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@AString@@QBEIXZ']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2EB4']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['short', 'loc_2EC8']
push ['20h']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
jmp ['short', 'loc_2EAB']
mov ['ecx,', '[ebp+arg_4]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?PrintLibIndex@@YGXAAVCStdOutStream@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_2F0E']
push ['2']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?PrintUInt32@@YGXAAVCStdOutStream@@II@Z']
jmp ['short', 'loc_2F1B']
push ['offset', '$SG77189']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
push ['20h']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?PrintString@@YGXAAVCStdOutStream@@ABVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@PB_W@Z']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2F75']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['short', 'loc_2F89']
push ['20h']
mov ['ecx,', '[ebp+arg_0]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
jmp ['short', 'loc_2F6C']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?GetHex@@YGDI@Z proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0Ah']
jnb ['short', 'loc_2FC0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '30h']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2FC9']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '37h']
mov ['[ebp+var_4],', 'ecx']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?WarningsCheck@@YGHJABVCCallbackConsoleBase@@ABUCUpdateErrorInfo@@AAVCStdOutStream@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?WarningsCheck@@YGHJABVCCallbackConsoleBase@@ABUCUpdateErrorInfo@@AAVCStdOutStream@@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '38h']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0F4h']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
test ['eax,', 'eax']
jz ['short', 'loc_309E']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+arg_C]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '$SG77224']
mov ['ecx,', '[ebp+arg_C]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0F4h']
push ['ecx']
call ['?PrintWarningsPaths@@YGXABUCErrorPathCodes@@AAVCStdOutStream@@@Z']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0F4h']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
push ['eax']
push ['offset', '$SG77225']
mov ['ecx,', '[ebp+arg_C]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@I@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+arg_C]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['[ebp+var_10],', '1']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_30B7']
mov ['ecx,', '[ebp+arg_8]']
call ['?ThereIsError@CUpdateErrorInfo@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_31C6']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '4']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_30F4']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '4']
call ['??BAString@@QBEPBDXZ']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['?AddAscii@UString@@QAEXPBD@Z']
lea ['ecx,', '[ebp+var_20]']
call ['?Add_LF@UString@@QAEXXZ']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_3106']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '10h']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_28],', 'eax']
jnb ['short', 'loc_3138']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '10h']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
lea ['ecx,', '[ebp+var_20]']
call ['?Add_LF@UString@@QAEXXZ']
jmp ['short', 'loc_30FD']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_317C']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
push ['edx']
lea ['eax,', '[ebp+var_38]']
push ['eax']
call ['?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_44],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_44]']
push ['edx']
lea ['ecx,', '[ebp+var_20]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38]']
call ['??1UString@@QAE@XZ']
lea ['ecx,', '[ebp+var_20]']
call ['?Add_LF@UString@@QAEXXZ']
lea ['ecx,', '[ebp+var_20]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_31A8']
lea ['ecx,', '[ebp+var_20]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG77238']
mov ['ecx,', '[ebp+arg_C]']
call ['??6CStdOutStream@@QAEAAV0@PB_W@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PB_W@Z']
mov ['[ebp+var_3C],', '2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_3C]']
jmp ['loc_32A7']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0DCh']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_3217']
movzx ['ecx,', '[ebp+arg_10]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3212']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0F4h']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_3212']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['edx,', 'ds:_kEverythingIsOk']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
jmp ['loc_32A4']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+arg_C]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '$SG77245']
mov ['ecx,', '[ebp+arg_C]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0DCh']
push ['ecx']
call ['?PrintWarningsPaths@@YGXABUCErrorPathCodes@@AAVCStdOutStream@@@Z']
push ['offset', '$SG77247']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
push ['offset', '$SG77246']
mov ['ecx,', '[ebp+arg_C]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@I@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
cmp ['[ebp+var_2C],', '1']
jbe ['short', 'loc_3290']
push ['73h']
mov ['ecx,', '[ebp+arg_C]']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', '[ebp+arg_C]']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['[ebp+var_10],', '1']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?PrintWarningsPaths@@YGXABUCErrorPathCodes@@AAVCStdOutStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?PrintWarningsPaths@@YGXABUCErrorPathCodes@@AAVCStdOutStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_3342']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_10],', 'eax']
jnb ['loc_33D7']
push ['offset', '$SG77212']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??6CStdOutStream@@QAEAAV0@PB_W@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
call ['??A?$CRecordVector@K@@QBEABKI@Z']
mov ['eax,', '[eax]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_24]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??6CStdOutStream@@QAEAAV0@PB_W@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
jmp ['loc_3339']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
push ['offset', '$SG77214']
mov ['ecx,', '[ebp+arg_4]']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ThrowException_if_Error@@YGXJ@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_344D']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
call ['??0CSystemException@@QAE@J@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '__TI1?AUCSystemException@@']
lea ['edx,', '[ebp+var_4]']
push ['edx']
call ['__CxxThrowException@8']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?PrintStat@@YGXXZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0B8h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_B8]']
mov ['ecx,', '2Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+UserTime]']
push ['eax']
lea ['ecx,', '[ebp+KernelTime]']
push ['ecx']
lea ['edx,', '[ebp+ExitTime]']
push ['edx']
lea ['eax,', '[ebp+CreationTime]']
push ['eax']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetCurrentProcess@0']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetProcessTimes@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_34C3']
jmp ['loc_36F6']
lea ['ecx,', '[ebp+ProcName]']
push ['ecx']
call ['?GetCurUtcFileTime@NTime@NWindows@@YGXAAU_FILETIME@@@Z']
push ['28h']
push ['0']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_88],', '0']
mov ['esi,', 'esp']
push ['offset', '$SG77315']
mov ['edi,', 'esp']
push ['offset', '$SG77316']
call ['dword', 'ptr', 'ds:__imp__GetModuleHandleW@4']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetProcAddress@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+var_8C],', '0']
jnz ['short', 'loc_3562']
mov ['esi,', 'esp']
push ['offset', '$SG77319']
call ['dword', 'ptr', 'ds:__imp__LoadLibraryW@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+hModule],', 'eax']
cmp ['[ebp+hModule],', '0']
jz ['short', 'loc_3562']
mov ['esi,', 'esp']
push ['offset', '$SG77322']
mov ['eax,', '[ebp+hModule]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetProcAddress@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+var_8C],', '0']
jz ['short', 'loc_3596']
mov ['esi,', 'esp']
push ['28h']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetCurrentProcess@0']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['[ebp+var_8C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_88],', 'eax']
lea ['edx,', '[ebp+ProcName]']
push ['edx']
call ['?GetTime64@@YG_KABU_FILETIME@@@Z']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_94],', 'edx']
lea ['eax,', '[ebp+CreationTime]']
push ['eax']
call ['?GetTime64@@YG_KABU_FILETIME@@@Z']
mov ['[ebp+var_A0],', 'eax']
mov ['[ebp+var_9C],', 'edx']
lea ['ecx,', '[ebp+KernelTime]']
push ['ecx']
call ['?GetTime64@@YG_KABU_FILETIME@@@Z']
mov ['[ebp+var_A8],', 'eax']
mov ['[ebp+var_A4],', 'edx']
lea ['edx,', '[ebp+UserTime]']
push ['edx']
call ['?GetTime64@@YG_KABU_FILETIME@@@Z']
mov ['[ebp+var_B0],', 'eax']
mov ['[ebp+var_AC],', 'edx']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[ebp+var_94]']
sbb ['ecx,', '[ebp+var_9C]']
mov ['[ebp+var_B8],', 'eax']
mov ['[ebp+var_B4],', 'ecx']
mov ['edx,', '[ebp+var_B4]']
push ['edx']
mov ['eax,', '[ebp+var_B8]']
push ['eax']
mov ['ecx,', '[ebp+var_A4]']
push ['ecx']
mov ['edx,', '[ebp+var_A8]']
push ['edx']
push ['offset', '$SG77329']
call ['?PrintTime@@YGXPBD_K1@Z']
mov ['eax,', '[ebp+var_B4]']
push ['eax']
mov ['ecx,', '[ebp+var_B8]']
push ['ecx']
mov ['edx,', '[ebp+var_AC]']
push ['edx']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
push ['offset', '$SG77330']
call ['?PrintTime@@YGXPBD_K1@Z']
mov ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['edx,', '[ebp+var_B8]']
push ['edx']
mov ['eax,', '[ebp+var_A8]']
add ['eax,', '[ebp+var_B0]']
mov ['ecx,', '[ebp+var_A4]']
adc ['ecx,', '[ebp+var_AC]']
push ['ecx']
push ['eax']
push ['offset', '$SG77331']
call ['?PrintTime@@YGXPBD_K1@Z']
cmp ['[ebp+var_88],', '0']
jz ['short', 'loc_36A6']
mov ['edx,', '[ebp+var_5C]']
xor ['eax,', 'eax']
push ['eax']
push ['edx']
push ['offset', '$SG77333']
call ['?PrintMemUsage@@YGXPBD_K@Z']
mov ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['edx,', '[ebp+var_B8]']
push ['edx']
mov ['eax,', '[ebp+var_B4]']
push ['eax']
mov ['ecx,', '[ebp+var_B8]']
push ['ecx']
push ['offset', '$SG77334']
call ['?PrintTime@@YGXPBD_K1@Z']
cmp ['[ebp+var_88],', '0']
jz ['short', 'loc_36E6']
mov ['edx,', '[ebp+var_78]']
xor ['eax,', 'eax']
push ['eax']
push ['edx']
push ['offset', '$SG77336']
call ['?PrintMemUsage@@YGXPBD_K@Z']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0B8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?PrintTime@@YGXPBD_K1@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['offset', '$SG77276']
mov ['eax,', '[ebp+Str]']
push ['eax']
push ['offset', '?endl@@YGAAVCStdOutStream@@AAV1@@Z']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['[ebp+var_4],', '989680h']
push ['0']
push ['989680h']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['__aulldiv']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
push ['20h']
push ['6']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['?PrintNum@@YGX_KID@Z']
push ['2Eh']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
push ['0']
push ['989680h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['__allmul']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', 'eax']
mov ['eax,', '[ebp+arg_8]']
sbb ['eax,', 'edx']
mov ['eax,', 'ecx']
xor ['edx,', 'edx']
mov ['ecx,', '2710h']
div ['ecx']
mov ['[ebp+var_10],', 'eax']
push ['30h']
push ['3']
mov ['edx,', '[ebp+var_10]']
xor ['eax,', 'eax']
push ['eax']
push ['edx']
call ['?PrintNum@@YGX_KID@Z']
cmp ['[ebp+arg_8],', '1000000h']
jb ['short', 'loc_38AC']
ja ['short', 'loc_3884']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_38AC']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['cl,', '1']
call ['__aullshr']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['edx,', '[ebp+arg_10]']
mov ['cl,', '1']
call ['__aullshr']
mov ['[ebp+arg_C],', 'eax']
mov ['[ebp+arg_10],', 'edx']
jmp ['short', 'loc_3873']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+arg_C]']
or ['ecx,', '[ebp+arg_10]']
jz ['short', 'loc_38E8']
push ['0']
push ['64h']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['__allmul']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['edx']
push ['eax']
call ['__aulldiv']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
push ['offset', '$SG77287']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
push ['20h']
push ['5']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['?PrintNum@@YGX_KID@Z']
push ['25h']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@D@Z']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?PrintNum@@YGX_KID@Z proc near          
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '54h']
push ['edi']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+Str],', 'eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
push ['eax']
call ['?ConvertUInt64ToString@@YGX_KPAD@Z']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?MyStringLen@@YGIPBD@Z']
mov ['[ebp+var_54],', 'eax']
jmp ['short', 'loc_3982']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+arg_8]']
jnb ['short', 'loc_399D']
mov ['ecx,', '[ebp+Str]']
sub ['ecx,', '1']
mov ['[ebp+Str],', 'ecx']
mov ['edx,', '[ebp+Str]']
mov ['al,', '[ebp+arg_C]']
mov ['[edx],', 'al']
jmp ['short', 'loc_3979']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '54h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?PrintMemUsage@@YGXPBD_K@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['offset', '$SG77293']
mov ['eax,', '[ebp+Str]']
push ['eax']
push ['offset', '$SG77292']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
mov ['ecx,', 'eax']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
push ['20h']
push ['7']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '100000h']
mov ['edx,', '[ebp+arg_8]']
adc ['edx,', '0']
sub ['eax,', '1']
sbb ['edx,', '0']
mov ['cl,', '14h']
call ['__aullshr']
push ['edx']
push ['eax']
call ['?PrintNum@@YGX_KID@Z']
push ['offset', '$SG77294']
mov ['ecx,', 'dword', 'ptr', 'ds:?g_StdStream@@3PAVCStdOutStream@@A']
call ['??6CStdOutStream@@QAEAAV0@PBD@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?GetTime64@@YG_KABU_FILETIME@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+4]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx]']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?PrintHexId@@YGXAAVCStdOutStream@@_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?PrintHexId@@YGXAAVCStdOutStream@@_K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '38h']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
push ['edx']
call ['?ConvertUInt64ToHex@@YGX_KPAD@Z']
lea ['eax,', '[ebp+var_34]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['??0AString@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
push ['8']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?PrintStringRight@@YGXAAVCStdOutStream@@ABVAString@@I@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_44]']
call ['??1AString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$?Main2@@YGHXZ$0 proc near 
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$1 proc near 
lea ['ecx,', '[ebp-948h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$2 proc near 
lea ['ecx,', '[ebp-238h]']
jmp ['??1CArcCmdLineOptions@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$3 proc near 
lea ['ecx,', '[ebp-26Ch]']
jmp ['??1CArcCmdLineParser@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$4 proc near 
mov ['eax,', '[ebp-95Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Main2@@YGHXZ$5 proc near 
lea ['ecx,', '[ebp-2ACh]']
jmp ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$6 proc near 
lea ['ecx,', '[ebp-2C4h]']
jmp ['??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$7 proc near 
lea ['ecx,', '[ebp-2D8h]']
jmp ['??1?$CRecordVector@H@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$8 proc near 
lea ['ecx,', '[ebp-2F0h]']
jmp ['??1?$CRecordVector@H@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$9 proc near 
lea ['ecx,', '[ebp-320h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$10 proc near 
lea ['ecx,', '[ebp-354h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$11 proc near 
lea ['ecx,', '[ebp-368h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$12 proc near 
lea ['ecx,', '[ebp-430h]']
jmp ['??1CExtractScanConsole@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$13 proc near 
lea ['ecx,', '[ebp-974h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$14 proc near 
mov ['eax,', '[ebp-97Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Main2@@YGHXZ$15 proc near 
lea ['ecx,', '[ebp-478h]']
jmp ['??1?$CMyComPtr@UIFolderArchiveExtractCallback@@@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$16 proc near 
lea ['ecx,', '[ebp-4B4h]']
jmp ['??1CExtractOptions@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$17 proc near 
lea ['ecx,', '[ebp-4C8h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$18 proc near 
lea ['ecx,', '[ebp-558h]']
jmp ['??1CHashBundle@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$19 proc near 
lea ['ecx,', '[ebp-65Ch]']
jmp ['??1COpenCallbackConsole@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$20 proc near 
lea ['ecx,', '[ebp-798h]']
jmp ['??1CUpdateCallbackConsole@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$21 proc near 
lea ['ecx,', '[ebp-7BCh]']
jmp ['??1CUpdateErrorInfo@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$22 proc near 
lea ['ecx,', '[ebp-900h]']
jmp ['??1CHashCallbackConsole@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$23 proc near 
lea ['ecx,', '[ebp-914h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?Main2@@YGHXZ$24 proc near 
lea ['ecx,', '[ebp-938h]']
jmp ['??1CUpdateErrorInfo@@QAE@XZ']
endp
__ehhandler$?Main2@@YGHXZ proc near     
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-9DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Main2@@YGHXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?PrintUInt32@@YGXAAVCStdOutStream@@II@Z$0 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?PrintUInt32@@YGXAAVCStdOutStream@@II@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?PrintUInt32@@YGXAAVCStdOutStream@@II@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?WarningsCheck@@YGHJABVCCallbackConsoleBase@@ABUCUpdateErrorInfo@@AAVCStdOutStream@@_N@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?WarningsCheck@@YGHJABVCCallbackConsoleBase@@ABUCUpdateErrorInfo@@AAVCStdOutStream@@_N@Z$1 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?WarningsCheck@@YGHJABVCCallbackConsoleBase@@ABUCUpdateErrorInfo@@AAVCStdOutStream@@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-40h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?WarningsCheck@@YGHJABVCCallbackConsoleBase@@ABUCUpdateErrorInfo@@AAVCStdOutStream@@_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?PrintWarningsPaths@@YGXABUCErrorPathCodes@@AAVCStdOutStream@@@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?PrintWarningsPaths@@YGXABUCErrorPathCodes@@AAVCStdOutStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?PrintWarningsPaths@@YGXABUCErrorPathCodes@@AAVCStdOutStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?PrintHexId@@YGXAAVCStdOutStream@@_K@Z$0 proc near
lea ['ecx,', '[ebp-44h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?PrintHexId@@YGXAAVCStdOutStream@@_K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-40h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?PrintHexId@@YGXAAVCStdOutStream@@_K@Z']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YUString@@QAEAAV0@_W@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_404C']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+eax*2],', 'dx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?EnablePrivilege_LockMemory@NSecurity@NWindows@@YG_N_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
movzx ['eax,', 'byte', 'ptr', '[ebp+this]']
push ['eax']
push ['offset', '??_C@_0BG@OCFLNMAB@SeLockMemoryPrivilege?$AA@']
call ['?EnablePrivilege@NSecurity@NWindows@@YG_NPBD_N@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?EnablePrivilege_SymLink@NSecurity@NWindows@@YGXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['(offset', '$SG77136+1)']
push ['offset', '??_C@_0BD@CPPEOGLA@SeRestorePrivilege?$AA@']
call ['?EnablePrivilege@NSecurity@NWindows@@YG_NPBD_N@Z']
push ['(offset', '$SG77136+1)']
push ['offset', '??_C@_0BO@JMOKIFMN@SeCreateSymbolicLinkPrivilege?$AA@']
call ['?EnablePrivilege@NSecurity@NWindows@@YG_NPBD_N@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
??0CCodecs@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCodecs@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CObjectVector@UCArcInfoEx@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+15h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CCodecs@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_4310']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4317']
mov ['eax,', '80004002h']
jmp ['short', 'loc_4328']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CCodecs@@UAGKXZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CCodecs@@UAGKXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_43DE']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_4408']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_43FF']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCCodecs@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_4406']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCCodecs@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCodecs@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4442']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CCodecs@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CCodecs@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CObjectVector@UCArcInfoEx@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CDirItemsStat@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['dword', 'ptr', '[ecx+24h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['dword', 'ptr', '[edx+2Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CHashBundle@@QAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+30h],', '0']
mov ['dword', 'ptr', '[ecx+34h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['dword', 'ptr', '[edx+2Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CExtractOptions@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CExtractOptions@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CExtractOptionsBase@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+25h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+26h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+27h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0?$CObjectVector@UCProperty@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CExtractOptions@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CExtractOptionsBase@@QAE@XZ']
endp
__ehhandler$??0CExtractOptions@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CExtractOptions@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CExtractOptionsBase@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CExtractOptionsBase@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CBoolPair@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+2],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+3],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0CExtractNtOptions@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CExtractOptionsBase@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CExtractOptionsBase@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CExtractOptionsBase@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CBoolPair@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CExtractNtOptions@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6']
call ['??0CBoolPair@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+9],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+4],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+6],', '1']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CExtractOptionsBase@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CUpdateErrorInfo@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CUpdateErrorInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CUpdateErrorInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0CUpdateErrorInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CUpdateErrorInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?IsTestCommand@CArcCommand@@QBE_NXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '3']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CArcCmdLineOptions@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CArcCmdLineOptions@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+1],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+2],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+3],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+7],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+8],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0CCensor@NWildcard@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '58h']
call ['??0CCensor@NWildcard@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??0?$CObjectVector@UCProperty@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '88h']
call ['??0CExtractOptionsBase@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0ACh']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0AEh']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0B0h']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0B2h']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0B8h']
call ['??0CUpdateOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1D0h']
call ['??0CHashOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1F0h']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+1FCh],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+200h],', '2']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+204h],', '1']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+208h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CArcCmdLineOptions@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CCensor@NWildcard@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineOptions@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineOptions@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineOptions@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineOptions@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '58h']
jmp ['??1CCensor@NWildcard@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineOptions@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '70h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineOptions@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1?$CObjectVector@UCProperty@@@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineOptions@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '88h']
jmp ['??1CExtractOptionsBase@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineOptions@@QAE@XZ$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0B8h']
jmp ['??1CUpdateOptions@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineOptions@@QAE@XZ$9 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1D0h']
jmp ['??1CHashOptions@@QAE@XZ']
endp
__unwindfunclet$??0CArcCmdLineOptions@@QAE@XZ$10 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1E4h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CArcCmdLineOptions@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CArcCmdLineOptions@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CHashOptions@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0Dh],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0Eh],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CUpdateOptions@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CUpdateOptions@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CCompressionMethodMode@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0?$CObjectVector@UCUpdateArchiveCommand@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+44h],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??0CArchivePath@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+0A0h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+0A4h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0A8h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0B4h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0B5h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0B8h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+0C4h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0C5h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0C6h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0C8h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0D4h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+0E0h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0E4h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0F0h']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0F2h']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0F4h']
call ['??0CBoolPair@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0F6h']
call ['??0CBoolPair@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0F8h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0F9h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0FCh']
call ['??0?$CObjectVector@UCRenamePair@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '108h']
call ['??0?$CRecordVector@_K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CUpdateOptions@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CCompressionMethodMode@@QAE@XZ']
endp
__unwindfunclet$??0CUpdateOptions@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1?$CObjectVector@UCUpdateArchiveCommand@@@@QAE@XZ']
endp
__unwindfunclet$??0CUpdateOptions@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1CArchivePath@@QAE@XZ']
endp
__unwindfunclet$??0CUpdateOptions@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0A8h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CUpdateOptions@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0B8h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CUpdateOptions@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0C8h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CUpdateOptions@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0D4h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CUpdateOptions@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0E4h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CUpdateOptions@@QAE@XZ$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0FCh']
jmp ['??1?$CObjectVector@UCRenamePair@@@@QAE@XZ']
endp
__ehhandler$??0CUpdateOptions@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CUpdateOptions@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CArchivePath@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CArchivePath@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+3Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CArchivePath@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CArchivePath@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CArchivePath@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CCompressionMethodMode@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0COpenType@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??0?$CObjectVector@UCProperty@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COpenType@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ah']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Dh']
call ['??0COpenSpecFlags@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+10h],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+11h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+12h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+13h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+15h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+4],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+5],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+6],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+7],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+0Eh],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+0Fh],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0Dh],', '1']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COpenSpecFlags@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCompressionMethodMode@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
call ['??1?$CObjectVector@UCProperty@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CArchivePath@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArchivePath@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '30h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArchivePath@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '40h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CArchivePath@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArchivePath@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CCensor@NWildcard@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCensor@NWildcard@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CObjectVector@UCPair@NWildcard@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CObjectVector@UCCensorPath@NWildcard@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CCensor@NWildcard@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@UCPair@NWildcard@@@@QAE@XZ']
endp
__ehhandler$??0CCensor@NWildcard@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCensor@NWildcard@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CCensor@NWildcard@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCensor@NWildcard@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CObjectVector@UCCensorPath@NWildcard@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@UCPair@NWildcard@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCensor@NWildcard@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@UCPair@NWildcard@@@@QAE@XZ']
endp
__ehhandler$??1CCensor@NWildcard@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCensor@NWildcard@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CUpdateOptions@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUpdateOptions@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '108h']
call ['??1?$CRecordVector@_K@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0FCh']
call ['??1?$CObjectVector@UCRenamePair@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0E4h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0D4h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0C8h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0B8h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0A8h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??1CArchivePath@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1?$CObjectVector@UCUpdateArchiveCommand@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CCompressionMethodMode@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUpdateOptions@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CCompressionMethodMode@@QAE@XZ']
endp
__unwindfunclet$??1CUpdateOptions@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1?$CObjectVector@UCUpdateArchiveCommand@@@@QAE@XZ']
endp
__unwindfunclet$??1CUpdateOptions@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1CArchivePath@@QAE@XZ']
endp
__unwindfunclet$??1CUpdateOptions@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0A8h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CUpdateOptions@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0B8h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CUpdateOptions@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0C8h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CUpdateOptions@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0D4h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CUpdateOptions@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0E4h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CUpdateOptions@@QAE@XZ$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0FCh']
jmp ['??1?$CObjectVector@UCRenamePair@@@@QAE@XZ']
endp
__ehhandler$??1CUpdateOptions@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUpdateOptions@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CHashOptions@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BCStdOutStream@@QAEPAU_iobuf@@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['[ebp+arg_0]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??6CStdOutStream@@QAEAAV0@PBD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??6CStdOutStream@@QAEAAV0@D@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__fputc']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ClosePercents@COpenCallbackConsole@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?NeedPercents@COpenCallbackConsole@@IBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5726']
push ['1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?ClosePrint@CPercentPrinter@@QAEX_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?NeedPercents@COpenCallbackConsole@@IBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+0ACh],', '0']
setnz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0COpenCallbackConsole@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0COpenCallbackConsole@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IOpenCallbackUI@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7COpenCallbackConsole@@6B@']
push ['0C8h']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CPercentPrinter@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0C0h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+0C1h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0C2h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0C3h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0C4h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0COpenCallbackConsole@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CPercentPrinter@@QAE@XZ']
endp
__ehhandler$??0COpenCallbackConsole@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0COpenCallbackConsole@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CPercentPrinter@@QAE@I@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CPercentPrinter@@QAE@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0CPercentPrinterState@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+30h],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+34h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '5Ch']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '68h']
call ['??0CPercentPrinterState@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '98h']
call ['??0AString@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0A8h],', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+0ACh],', '4Fh']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CPercentPrinterState@@QAE@XZ']
endp
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '50h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '5Ch']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '68h']
jmp ['??1CPercentPrinterState@@QAE@XZ']
endp
__ehhandler$??0CPercentPrinter@@QAE@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CPercentPrinter@@QAE@I@Z']
jmp ['___CxxFrameHandler3']
endp
??0CPercentPrinterState@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CPercentPrinterState@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+8],', '0FFFFFFFFh']
mov ['dword', 'ptr', '[ecx+0Ch],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CPercentPrinterState@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??0CPercentPrinterState@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CPercentPrinterState@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CPercentPrinterState@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CPercentPrinterState@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1AString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CPercentPrinterState@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1CPercentPrinterState@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CPercentPrinterState@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Init@COpenCallbackConsole@@QAEXPAVCStdOutStream@@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0B8h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+0BCh],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+0ACh],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??0IOpenCallbackUI@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IOpenCallbackUI@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CExtractScanConsole@@QAEXPAVCStdOutStream@@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+0B4h],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SetWindowWidth@CExtractScanConsole@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0BCh],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CloseScanning@CExtractScanConsole@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?NeedPercents@CExtractScanConsole@@ABE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5D86']
push ['1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?ClosePrint@CPercentPrinter@@QAEX_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?NeedPercents@CExtractScanConsole@@ABE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+0B4h],', '0']
setnz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CExtractCallbackConsole@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CExtractCallbackConsole@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IExtractCallbackUI@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0IFolderArchiveExtractCallback2@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0ICryptoGetTextPassword@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0COpenCallbackConsole@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0E0h']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CExtractCallbackConsole@@6BIExtractCallbackUI@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CExtractCallbackConsole@@6BIFolderArchiveExtractCallback2@@@']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '??_7CExtractCallbackConsole@@6BICryptoGetTextPassword@@@']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+10h],', 'offset', '??_7CExtractCallbackConsole@@6BCOpenCallbackConsole@@@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0E4h']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0F0h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0FCh']
call ['??0UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+158h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+15Ch],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+160h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CExtractCallbackConsole@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1COpenCallbackConsole@@QAE@XZ']
endp
__unwindfunclet$??0CExtractCallbackConsole@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0E4h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CExtractCallbackConsole@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0F0h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CExtractCallbackConsole@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CExtractCallbackConsole@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0ICryptoGetTextPassword@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ICryptoGetTextPassword@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CExtractCallbackConsole@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_63F0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['loc_647B']
push ['offset', '_IID_IFolderArchiveExtractCallback']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_640C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_647B']
push ['offset', '_IID_IFolderArchiveExtractCallback2']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6440']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_642F']
mov ['edx,', '[ebp+this]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_6436']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_647B']
push ['offset', '_IID_ICryptoGetTextPassword']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_6474']
cmp ['[ebp+this],', '0']
jz ['short', 'loc_6463']
mov ['eax,', '[ebp+this]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_646A']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_647B']
mov ['eax,', '80004002h']
jmp ['short', 'loc_6492']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E0h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+this]']
mov ['[edx+0E0h],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CExtractCallbackConsole@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E0h]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+0E0h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CExtractCallbackConsole@@UAGKXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0E0h]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+0E0h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_6517']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+0E0h]']
jmp ['short', 'loc_6541']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_6538']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCExtractCallbackConsole@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_653F']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetWindowWidth@CExtractCallbackConsole@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0C4h],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CExtractCallbackConsole@@QAEXPAVCStdOutStream@@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?Init@COpenCallbackConsole@@QAEXPAVCStdOutStream@@00@Z']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+108h],', '0']
mov ['dword', 'ptr', '[eax+10Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+110h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+111h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+118h],', '0']
mov ['dword', 'ptr', '[eax+11Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+120h],', '0']
mov ['dword', 'ptr', '[ecx+124h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+128h],', '0']
mov ['dword', 'ptr', '[edx+12Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+130h],', '0']
mov ['dword', 'ptr', '[eax+134h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+138h],', '0']
mov ['dword', 'ptr', '[ecx+13Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+140h],', '0']
mov ['dword', 'ptr', '[edx+144h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+148h],', '0']
mov ['dword', 'ptr', '[eax+14Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+150h],', '0']
mov ['dword', 'ptr', '[ecx+154h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??_GCExtractCallbackConsole@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CExtractCallbackConsole@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_66BA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0IExtractCallbackUI@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IFolderArchiveExtractCallback@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IExtractCallbackUI@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IFolderArchiveExtractCallback2@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IFolderArchiveExtractCallback2@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1COpenCallbackConsole@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1COpenCallbackConsole@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0C4h']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CPercentPrinter@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1COpenCallbackConsole@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CPercentPrinter@@QAE@XZ']
endp
__ehhandler$??1COpenCallbackConsole@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1COpenCallbackConsole@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CExtractCallbackConsole@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CExtractCallbackConsole@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0FCh']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0F0h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0E4h']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1COpenCallbackConsole@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CExtractCallbackConsole@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1COpenCallbackConsole@@QAE@XZ']
endp
__unwindfunclet$??1CExtractCallbackConsole@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0E4h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??1CExtractCallbackConsole@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0F0h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CExtractCallbackConsole@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CExtractCallbackConsole@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0IFolderArchiveExtractCallback@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IProgress@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IFolderArchiveExtractCallback@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IProgress@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IProgress@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetWindowWidth@CCallbackConsoleBase@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0ACh],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Init@CCallbackConsoleBase@@QAEXPAVCStdOutStream@@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0DCh']
call ['?Clear@CErrorPathCodes@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0B0h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+0B4h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+0A4h],', 'edx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Clear@CErrorPathCodes@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CObjectVector@VUString@@@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['?Clear@?$CRecordVector@K@@QAEXXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClosePercents2@CCallbackConsoleBase@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?NeedPercents@CCallbackConsoleBase@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6B13']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?ClosePrint@CPercentPrinter@@QAEX_N@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?NeedPercents@CCallbackConsoleBase@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+0A4h],', '0']
setnz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CUpdateCallbackConsole@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CUpdateCallbackConsole@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IUpdateCallbackUI2@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CCallbackConsoleBase@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CUpdateCallbackConsole@@6BIUpdateCallbackUI@@@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7CUpdateCallbackConsole@@6BIDirItemsCallback@@@']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+118h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '11Ch']
call ['??0UString@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+128h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+129h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CUpdateCallbackConsole@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CCallbackConsoleBase@@QAE@XZ']
endp
__ehhandler$??0CUpdateCallbackConsole@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CUpdateCallbackConsole@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CCallbackConsoleBase@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCallbackConsoleBase@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0C8h']
mov ['ecx,', '[ebp+var_10]']
call ['??0CPercentPrinter@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+0B8h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+0B9h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+0BCh],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0C0h],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0C4h']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0D0h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0DCh']
call ['??0CErrorPathCodes@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0F4h']
call ['??0CErrorPathCodes@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CCallbackConsoleBase@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CPercentPrinter@@QAE@XZ']
endp
__unwindfunclet$??0CCallbackConsoleBase@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0C4h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??0CCallbackConsoleBase@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0D0h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??0CCallbackConsoleBase@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0DCh']
jmp ['??1CErrorPathCodes@@QAE@XZ']
endp
__ehhandler$??0CCallbackConsoleBase@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCallbackConsoleBase@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0CErrorPathCodes@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CErrorPathCodes@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$CRecordVector@K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CErrorPathCodes@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__ehhandler$??0CErrorPathCodes@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CErrorPathCodes@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CErrorPathCodes@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CErrorPathCodes@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$CRecordVector@K@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CErrorPathCodes@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__ehhandler$??1CErrorPathCodes@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CErrorPathCodes@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0IUpdateCallbackUI2@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUpdateCallbackUI@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0IDirItemsCallback@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IUpdateCallbackUI2@@6BIUpdateCallbackUI@@@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_7IUpdateCallbackUI2@@6BIDirItemsCallback@@@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCallbackConsoleBase@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCallbackConsoleBase@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0F4h']
call ['??1CErrorPathCodes@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0DCh']
call ['??1CErrorPathCodes@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0D0h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0C4h']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CPercentPrinter@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCallbackConsoleBase@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CPercentPrinter@@QAE@XZ']
endp
__unwindfunclet$??1CCallbackConsoleBase@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0C4h']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$??1CCallbackConsoleBase@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0D0h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CCallbackConsoleBase@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0DCh']
jmp ['??1CErrorPathCodes@@QAE@XZ']
endp
__ehhandler$??1CCallbackConsoleBase@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCallbackConsoleBase@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0IUpdateCallbackUI@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IUpdateCallbackUI@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IDirItemsCallback@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IDirItemsCallback@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CHashCallbackConsole@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CHashCallbackConsole@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0IHashCallbackUI@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0CCallbackConsoleBase@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CHashCallbackConsole@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '118h']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '124h']
call ['??0AString@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+130h],', '1']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+131h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax+132h],', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+133h],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0CHashCallbackConsole@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CCallbackConsoleBase@@QAE@XZ']
endp
__unwindfunclet$??0CHashCallbackConsole@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '118h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CHashCallbackConsole@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CHashCallbackConsole@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CHashCallbackConsole@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CHashCallbackConsole@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CHashCallbackConsole@@6B@']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '124h']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '118h']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CCallbackConsoleBase@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CHashCallbackConsole@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CCallbackConsoleBase@@QAE@XZ']
endp
__unwindfunclet$??1CHashCallbackConsole@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '118h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CHashCallbackConsole@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CHashCallbackConsole@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0IHashCallbackUI@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IDirItemsCallback@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IHashCallbackUI@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@AString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ThereIsError@CUpdateErrorInfo@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_7924']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_7924']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?IsEmpty@?$CObjectVector@VUString@@@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7924']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_792B']
mov ['[ebp+var_8],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CSystemException@@QAE@J@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyStringLen@@YGIPBD@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_79CD']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_79DC']
jmp ['short', 'loc_79C4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CArcCmdLineOptions@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArcCmdLineOptions@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0Ah']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1F0h']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1E4h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1D0h']
call ['??1CHashOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0B8h']
call ['??1CUpdateOptions@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '88h']
call ['??1CExtractOptionsBase@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??1?$CObjectVector@UCProperty@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '70h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '58h']
call ['??1CCensor@NWildcard@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '48h']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '38h']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1CCensor@NWildcard@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArcCmdLineOptions@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1CCensor@NWildcard@@QAE@XZ']
endp
__unwindfunclet$??1CArcCmdLineOptions@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArcCmdLineOptions@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '38h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArcCmdLineOptions@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '48h']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$??1CArcCmdLineOptions@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '58h']
jmp ['??1CCensor@NWildcard@@QAE@XZ']
endp
__unwindfunclet$??1CArcCmdLineOptions@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '70h']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArcCmdLineOptions@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1?$CObjectVector@UCProperty@@@@QAE@XZ']
endp
__unwindfunclet$??1CArcCmdLineOptions@@QAE@XZ$7 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '88h']
jmp ['??1CExtractOptionsBase@@QAE@XZ']
endp
__unwindfunclet$??1CArcCmdLineOptions@@QAE@XZ$8 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0B8h']
jmp ['??1CUpdateOptions@@QAE@XZ']
endp
__unwindfunclet$??1CArcCmdLineOptions@@QAE@XZ$9 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1D0h']
jmp ['??1CHashOptions@@QAE@XZ']
endp
__unwindfunclet$??1CArcCmdLineOptions@@QAE@XZ$10 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1E4h']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CArcCmdLineOptions@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArcCmdLineOptions@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CArcCmdLineParser@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CParser@NCommandLineParser@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CExtractScanConsole@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IDirItemsCallback@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CExtractScanConsole@@6B@']
push ['0C8h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0CPercentPrinter@@QAE@I@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CExtractScanConsole@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??1CPercentPrinter@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CExtractOptions@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CExtractOptions@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CObjectVector@UCProperty@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1CExtractOptionsBase@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CExtractOptions@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1CExtractOptionsBase@@QAE@XZ']
endp
__ehhandler$??1CExtractOptions@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CExtractOptions@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??4CExtractOptionsBase@@QAEAAU0@ABU0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+2]']
mov ['[eax+2],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+3]']
mov ['[eax+3],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '18h']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['cx,', '[ecx+8]']
mov ['[edx+8],', 'cx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CHashBundle@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IHashCalc@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CHashBundle@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0?$CObjectVector@UCHasherState@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CHashBundle@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??1?$CObjectVector@UCHasherState@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CUpdateCallbackConsole@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUpdateCallbackConsole@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '11Ch']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1CCallbackConsoleBase@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUpdateCallbackConsole@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1CCallbackConsoleBase@@QAE@XZ']
endp
__ehhandler$??1CUpdateCallbackConsole@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUpdateCallbackConsole@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CUpdateErrorInfo@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUpdateErrorInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1AString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUpdateErrorInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$??1CUpdateErrorInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUpdateErrorInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0IHashCalc@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IHashCalc@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@VUString@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CObjectVector@VUString@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VUString@@@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_8288']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_828F']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VUString@@@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_83AA']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_83A1']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_83A8']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_8366']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@VUString@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_8490']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_8487']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_848E']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_844C']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Delete@?$CObjectVector@VUString@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_84EE']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_84F5']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Delete@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjectVector@UCPair@NWildcard@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Front@?$CObjectVector@UCPair@NWildcard@@@@QAEAAUCPair@NWildcard@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCPair@NWildcard@@@@QAEAAUCPair@NWildcard@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCPair@NWildcard@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCPair@NWildcard@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_85F6']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_85ED']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCPair@NWildcard@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_85F4']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_85B2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCPair@NWildcard@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCPair@NWildcard@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCPair@NWildcard@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CObjectVector@UCCensorPath@NWildcard@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCCensorPath@NWildcard@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCCensorPath@NWildcard@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_872A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_8721']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCCensorPath@NWildcard@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_8728']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_86E6']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCCensorPath@NWildcard@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCCensorPath@NWildcard@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCCensorPath@NWildcard@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@UCArcExtInfo@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCArcExtInfo@@@@QBEABUCArcExtInfo@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@V?$CBuffer@E@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCArcInfoEx@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCArcInfoEx@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCArcInfoEx@@@@QAEAAUCArcInfoEx@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CObjectVector@UCArcInfoEx@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCArcInfoEx@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_894E']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_8945']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCArcInfoEx@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_894C']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_890A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCArcInfoEx@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCArcInfoEx@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCArcInfoEx@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@_K@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QBEPBEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CRecordVector@H@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@H@@QBEIXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@H@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@H@@QAEAAHI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddToUniqueSorted@?$CRecordVector@H@@QAEIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_C]']
jz ['short', 'loc_8B89']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_C]']
shr ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@H@@QAEAAHI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_8B6E']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_8B9C']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+var_14]']
jge ['short', 'loc_8B7E']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_8B87']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_8B3D']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?Insert@?$CRecordVector@H@@QAEXIH@Z']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CObjectVector@UCHasherState@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCHasherState@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCHasherState@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_8C66']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_8C5D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCHasherState@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_8C64']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_8C22']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCHasherState@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCHasherState@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCHasherState@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CMyComPtr@UIFolderArchiveExtractCallback@@@@QAE@PAUIFolderArchiveExtractCallback@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_8D14']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIFolderArchiveExtractCallback@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8D5A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCProperty@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_8DE3']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_8E75']
mov ['ecx,', '[ebp+var_10]']
call ['?Clear@?$CObjectVector@UCProperty@@@@QAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?Size@?$CObjectVector@UCProperty@@@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Reserve@?$CRecordVector@PAX@@QAEXI@Z']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_8E14']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_8E72']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_8E50']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$CObjectVector@UCProperty@@@@QBEABUCProperty@@I@Z']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0CProperty@@QAE@ABU0@@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_8E57']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z']
jmp ['short', 'loc_8E0B']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4?$CObjectVector@UCProperty@@@@QAEAAV0@ABV0@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCProperty@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCProperty@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_8F76']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_8F6D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCProperty@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_8F74']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_8F32']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCProperty@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCProperty@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCProperty@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CObjectVector@UCUpdateArchiveCommand@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCUpdateArchiveCommand@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCUpdateArchiveCommand@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_90AA']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_90A1']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCUpdateArchiveCommand@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_90A8']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_9066']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCUpdateArchiveCommand@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCUpdateArchiveCommand@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCUpdateArchiveCommand@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CObjectVector@UCRenamePair@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCRenamePair@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCRenamePair@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_91DE']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_91D5']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCRenamePair@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_91DC']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_919A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCRenamePair@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCRenamePair@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCRenamePair@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@K@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@K@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@K@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@K@@QBEABKI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CMyComPtr@UIUnknown@@@@QAE@PAUIUnknown@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9338']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_937E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@UCOpenType@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CObjectVector@UCOpenType@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['[ebp+var_18],', '0CCCCCCCCh']
mov ['[ebp+var_14],', '0CCCCCCCCh']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_9435']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
jmp ['short', 'loc_9407']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCOpenType@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCOpenType@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCOpenType@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??_GUString@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_94DA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCPair@NWildcard@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CPair@NWildcard@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_951A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCCensorPath@NWildcard@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCensorPath@NWildcard@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_955A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCArcInfoEx@@QAEPAXI@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CArcInfoEx@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_959A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCHasherState@@QAEPAXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CHasherState@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_95DA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0CProperty@@QAE@ABU0@@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CProperty@@QAE@ABU0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CProperty@@QAE@ABU0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??0CProperty@@QAE@ABU0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CProperty@@QAE@ABU0@@Z']
jmp ['___CxxFrameHandler3']
endp
??_GCProperty@@QAEPAXI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CProperty@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_96E2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCUpdateArchiveCommand@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CUpdateArchiveCommand@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_9722']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CUpdateArchiveCommand@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CUpdateArchiveCommand@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1CArchivePath@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CUpdateArchiveCommand@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CUpdateArchiveCommand@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CUpdateArchiveCommand@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??_GCRenamePair@@QAEPAXI@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CRenamePair@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_981A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CPair@NWildcard@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CPair@NWildcard@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1CCensorNode@NWildcard@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CPair@NWildcard@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CPair@NWildcard@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CPair@NWildcard@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CCensorNode@NWildcard@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CCensorNode@NWildcard@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CCensorNode@NWildcard@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CCensorNode@NWildcard@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ']
endp
__unwindfunclet$??1CCensorNode@NWildcard@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ']
endp
__ehhandler$??1CCensorNode@NWildcard@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CCensorNode@NWildcard@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_9A7A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_9A71']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCCensorNode@NWildcard@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_9A78']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_9A36']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VCCensorNode@NWildcard@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_9B86']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_9B7D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCItem@NWildcard@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_9B84']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_9B42']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCItem@NWildcard@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??_GCCensorNode@NWildcard@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CCensorNode@NWildcard@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_9C2A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCItem@NWildcard@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CItem@NWildcard@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_9C6A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CItem@NWildcard@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CCensorPath@NWildcard@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1UString@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CArcInfoEx@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArcInfoEx@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '30h']
call ['??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??1?$CObjectVector@UCArcExtInfo@@@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArcInfoEx@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$??1CArcInfoEx@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '18h']
jmp ['??1?$CObjectVector@UCArcExtInfo@@@@QAE@XZ']
endp
__ehhandler$??1CArcInfoEx@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArcInfoEx@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@UCArcExtInfo@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@UCArcExtInfo@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_9E3E']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_9E35']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GCArcExtInfo@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_9E3C']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_9DFA']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@UCArcExtInfo@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@UCArcExtInfo@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@UCArcExtInfo@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_9F4A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_9F41']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_G?$CBuffer@E@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_9F48']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_9F06']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??_GCArcExtInfo@@QAEPAXI@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CArcExtInfo@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_9FEE']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G?$CBuffer@E@@QAEPAXI@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_A02E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1CArcExtInfo@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CArcExtInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CArcExtInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CArcExtInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CArcExtInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CHasherState@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CHasherState@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CMyComPtr@UIHasher@@@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CHasherState@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CMyComPtr@UIHasher@@@@QAE@XZ']
endp
__ehhandler$??1CHasherState@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CHasherState@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CProperty@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CProperty@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CProperty@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CProperty@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CProperty@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1CRenamePair@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CRenamePair@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['[ebp+var_10],', '0CCCCCCCCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1CRenamePair@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$??1CRenamePair@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CRenamePair@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Reserve@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_A460']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_A43B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Delete@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@PAX@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@UCPair@NWildcard@@@@QAEAAUCPair@NWildcard@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Insert@?$CRecordVector@H@@QAEXIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@H@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??1?$CMyComPtr@UIHasher@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_A68E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CObjectVector@UCProperty@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCProperty@@@@QBEABUCProperty@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clear@?$CObjectVector@UCProperty@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_A75C']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_A753']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GCProperty@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_A75A']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_A718']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_A880']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_A85B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MoveItems@?$CRecordVector@H@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_A99C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_A977']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CExtractCallbackConsole@@W3AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '4']
jmp ['?QueryInterface@CExtractCallbackConsole@@UAGJABU_GUID@@PAPAX@Z']
endp
?QueryInterface@CExtractCallbackConsole@@W7AGJABU_GUID@@PAPAX@Z proc near
sub ['[esp+arg_0],', '8']
jmp ['?QueryInterface@CExtractCallbackConsole@@UAGJABU_GUID@@PAPAX@Z']
endp
?Release@CExtractCallbackConsole@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?Release@CExtractCallbackConsole@@UAGKXZ']
endp
?Release@CExtractCallbackConsole@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?Release@CExtractCallbackConsole@@UAGKXZ']
endp
?AddRef@CExtractCallbackConsole@@W3AGKXZ proc near
sub ['[esp+arg_0],', '4']
jmp ['?AddRef@CExtractCallbackConsole@@UAGKXZ']
endp
?AddRef@CExtractCallbackConsole@@W7AGKXZ proc near
sub ['[esp+arg_0],', '8']
jmp ['?AddRef@CExtractCallbackConsole@@UAGKXZ']
endp

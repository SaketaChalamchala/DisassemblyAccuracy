?Correct_AltStream_Name@@YGXAAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '6']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
cmp ['eax,', '6']
jb ['short', 'loc_97']
push ['offset', '$SG67658']
push ['6']
mov ['ecx,', '[ebp+arg_0]']
call ['?RightPtr@UString@@QBEPB_WI@Z']
push ['eax']
call ['?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_97']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '6']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_A9']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_4]']
jnb ['short', 'loc_EF']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_C]']
mov ['dx,', '[eax+ecx*2]']
mov ['word', 'ptr', '[ebp+var_10],', 'dx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_10]']
cmp ['eax,', '3Ah']
jz ['short', 'loc_DF']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_10]']
cmp ['ecx,', '5Ch']
jz ['short', 'loc_DF']
movzx ['edx,', 'word', 'ptr', '[ebp+var_10]']
cmp ['edx,', '2Fh']
jnz ['short', 'loc_ED']
push ['5Fh']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?ReplaceOneCharAtPos@UString@@QAEXI_W@Z']
jmp ['short', 'loc_A0']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_108']
push ['5Fh']
mov ['ecx,', '[ebp+arg_0]']
call ['??4UString@@QAEAAV0@_W@Z']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Get_Correct_FsFile_Name@@YG?AVUString@@ABV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Get_Correct_FsFile_Name@@YG?AVUString@@ABV1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['?Correct_PathPart@@YGXAAVUString@@@Z']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
call ['?CorrectUnsupportedName@@YGXAAVUString@@@Z']
lea ['ecx,', '[ebp+var_1C]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_19D']
push ['5Fh']
lea ['ecx,', '[ebp+var_1C]']
call ['??4UString@@QAEAAV0@_W@Z']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['edx,', '[ebp+var_24]']
or ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?CorrectUnsupportedName@@YGXAAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?IsSupportedName@@YG_NABVUString@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_229']
push ['5Fh']
mov ['ecx,', '[ebp+arg_0]']
call ['?InsertAtFront@UString@@QAEX_W@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?IsSupportedName@@YG_NABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_268']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '6']
jnb ['loc_328']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '_g_ReservedNames[ecx*4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_29A']
jmp ['short', 'loc_25F']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsPrefixedBy_Ascii_NoCase@UString@@QBE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_2AF']
jmp ['short', 'loc_25F']
cmp ['[ebp+var_4],', '4']
jb ['short', 'loc_2E5']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_C]']
mov ['dx,', '[eax+ecx*2]']
mov ['word', 'ptr', '[ebp+var_10],', 'dx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_10]']
cmp ['eax,', '30h']
jl ['short', 'loc_2DA']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_10]']
cmp ['ecx,', '39h']
jle ['short', 'loc_2DC']
jmp ['short', 'loc_25F']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_C]']
mov ['dx,', '[eax+ecx*2]']
mov ['word', 'ptr', '[ebp+var_14],', 'dx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_14]']
test ['ecx,', 'ecx']
jz ['short', 'loc_312']
movzx ['edx,', 'word', 'ptr', '[ebp+var_14]']
cmp ['edx,', '2Eh']
jnz ['short', 'loc_316']
xor ['al,', 'al']
jmp ['short', 'loc_32A']
movzx ['eax,', 'word', 'ptr', '[ebp+var_14]']
cmp ['eax,', '20h']
jz ['short', 'loc_321']
jmp ['short', 'loc_323']
jmp ['short', 'loc_2E5']
jmp ['loc_25F']
mov ['al,', '1']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Correct_PathPart@@YGXAAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
movzx ['eax,', 'word', 'ptr', '[eax]']
cmp ['eax,', '2Eh']
jnz ['short', 'loc_38A']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_380']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
movzx ['edx,', 'word', 'ptr', '[eax+2]']
cmp ['edx,', '2Eh']
jnz ['short', 'loc_38A']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
movzx ['eax,', 'word', 'ptr', '[eax+4]']
test ['eax,', 'eax']
jnz ['short', 'loc_38A']
mov ['ecx,', '[ebp+arg_0]']
call ['?Empty@UString@@QAEXXZ']
jmp ['short', 'loc_393']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ReplaceIncorrectChars@@YGXAAVUString@@@Z']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
?ReplaceIncorrectChars@@YGXAAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_3D5']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
cmp ['[ebp+var_4],', 'eax']
jnb ['loc_466']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['dx,', '[eax+ecx*2]']
mov ['word', 'ptr', '[ebp+var_8],', 'dx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
cmp ['eax,', '3Ah']
jz ['short', 'loc_453']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['ecx,', '2Ah']
jz ['short', 'loc_453']
movzx ['edx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['edx,', '3Fh']
jz ['short', 'loc_453']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
cmp ['eax,', '20h']
jl ['short', 'loc_453']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['ecx,', '3Ch']
jz ['short', 'loc_453']
movzx ['edx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['edx,', '3Eh']
jz ['short', 'loc_453']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
cmp ['eax,', '7Ch']
jz ['short', 'loc_453']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['ecx,', '22h']
jz ['short', 'loc_453']
movzx ['edx,', 'word', 'ptr', '[ebp+var_8]']
cmp ['edx,', '2Fh']
jz ['short', 'loc_453']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
cmp ['eax,', '5Ch']
jnz ['short', 'loc_461']
push ['5Fh']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?ReplaceOneCharAtPos@UString@@QAEXI_W@Z']
jmp ['loc_3CC']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4B7']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_C]']
mov ['dx,', '[eax+ecx*2]']
mov ['word', 'ptr', '[ebp+var_10],', 'dx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_10]']
cmp ['eax,', '2Eh']
jz ['short', 'loc_4A7']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_10]']
cmp ['ecx,', '20h']
jz ['short', 'loc_4A7']
jmp ['short', 'loc_4B7']
push ['5Fh']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?ReplaceOneCharAtPos@UString@@QAEXI_W@Z']
jmp ['short', 'loc_471']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Correct_FsPath@@YGX_NAAV?$CObjectVector@VUString@@@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Correct_FsPath@@YGX_NAAV?$CObjectVector@VUString@@@@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', '0']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jz ['loc_65C']
mov ['[ebp+var_11],', '0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['ecx,', 'eax']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_5D3']
mov ['[ebp+var_10],', '1']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['eax,', '1']
jbe ['loc_5D1']
push ['1']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['ecx,', 'eax']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5D1']
mov ['[ebp+var_10],', '2']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['eax,', '2']
jbe ['short', 'loc_5D1']
push ['offset', '$SG67725']
push ['2']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
push ['eax']
call ['??8@YG_NABVUString@@PB_W@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5D1']
mov ['[ebp+var_10],', '3']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['eax,', '3']
jbe ['short', 'loc_5D1']
push ['3']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?IsDrivePath2@NName@NFile@NWindows@@YG_NPB_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_5D1']
mov ['[ebp+var_11],', '1']
mov ['[ebp+var_10],', '4']
jmp ['short', 'loc_5FC']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['ecx,', 'eax']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?IsDrivePath2@NName@NFile@NWindows@@YG_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5FC']
mov ['[ebp+var_11],', '1']
mov ['[ebp+var_10],', '1']
movzx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jz ['short', 'loc_65C']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?Len@UString@@QBEIXZ']
cmp ['eax,', '2']
jz ['short', 'loc_65C']
push ['2']
mov ['ecx,', '[ebp+var_18]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Insert@?$CObjectVector@VUString@@@@QAEXIABVUString@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1UString@@QAE@XZ']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_10],', 'eax']
jnb ['short', 'loc_6D6']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['[ebp+var_30],', 'eax']
mov ['edx,', '[ebp+var_30]']
push ['edx']
call ['?Correct_PathPart@@YGXAAVUString@@@Z']
mov ['ecx,', '[ebp+var_30]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6C2']
movzx ['ecx,', '[ebp+arg_8]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6A8']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
sub ['eax,', '1']
cmp ['[ebp+var_10],', 'eax']
jz ['short', 'loc_6B6']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Delete@?$CObjectVector@VUString@@@@QAEXI@Z']
jmp ['short', 'loc_65C']
push ['5Fh']
mov ['ecx,', '[ebp+var_30]']
call ['??4UString@@QAEAAV0@_W@Z']
jmp ['short', 'loc_6CB']
mov ['eax,', '[ebp+var_30]']
push ['eax']
call ['?CorrectUnsupportedName@@YGXAAVUString@@@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_65C']
movzx ['edx,', '[ebp+arg_8]']
test ['edx,', 'edx']
jnz ['short', 'loc_73F']
mov ['ecx,', '[ebp+arg_4]']
call ['?IsEmpty@?$CObjectVector@VUString@@@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_71B']
push ['5Fh']
lea ['ecx,', '[ebp+var_40]']
call ['??0UString@@QAE@_W@Z']
mov ['[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_73F']
mov ['ecx,', '[ebp+arg_4]']
call ['?Back@?$CObjectVector@VUString@@@@QAEAAVUString@@XZ']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_73F']
push ['5Fh']
mov ['ecx,', '[ebp+var_34]']
call ['??4UString@@QAEAAV0@_W@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN28']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?MakePathFromParts@@YG?AVUString@@ABV?$CObjectVector@VUString@@@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?MakePathFromParts@@YG?AVUString@@ABV?$CObjectVector@VUString@@@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_28],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '1']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_7F3']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_24],', 'eax']
jnb ['short', 'loc_825']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_80E']
lea ['ecx,', '[ebp+var_1C]']
call ['?Add_PathSepar@UString@@QAEXXZ']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??YUString@@QAEAAV0@ABV0@@Z']
jmp ['short', 'loc_7EA']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_28]']
or ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?RightPtr@UString@@QBEPB_WI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
lea ['eax,', '[eax+ecx*2]']
mov ['ecx,', '[ebp+arg_0]']
shl ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReplaceOneCharAtPos@UString@@QAEXI_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[ebp+arg_4]']
mov ['[ecx+edx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?Get_Correct_FsFile_Name@@YG?AVUString@@ABV1@@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Get_Correct_FsFile_Name@@YG?AVUString@@ABV1@@Z$1 proc near
mov ['eax,', '[ebp-24h]']
and ['eax,', '1']
jz ['locret_958']
and ['dword', 'ptr', '[ebp-24h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__ehhandler$?Get_Correct_FsFile_Name@@YG?AVUString@@ABV1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Get_Correct_FsFile_Name@@YG?AVUString@@ABV1@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Correct_FsPath@@YGX_NAAV?$CObjectVector@VUString@@@@0@Z$0 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?Correct_FsPath@@YGX_NAAV?$CObjectVector@VUString@@@@0@Z$1 proc near
lea ['ecx,', '[ebp-40h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?Correct_FsPath@@YGX_NAAV?$CObjectVector@VUString@@@@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Correct_FsPath@@YGX_NAAV?$CObjectVector@VUString@@@@0@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?MakePathFromParts@@YG?AVUString@@ABV?$CObjectVector@VUString@@@@@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?MakePathFromParts@@YG?AVUString@@ABV?$CObjectVector@VUString@@@@@Z$1 proc near
mov ['eax,', '[ebp-28h]']
and ['eax,', '1']
jz ['locret_9BF']
and ['dword', 'ptr', '[ebp-28h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__ehhandler$?MakePathFromParts@@YG?AVUString@@ABV?$CObjectVector@VUString@@@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?MakePathFromParts@@YG?AVUString@@ABV?$CObjectVector@VUString@@@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MyStringLen@@YGIPBD@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_AD1']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_AE0']
jmp ['short', 'loc_AC8']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Ptr@UString@@QBEPB_WI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8@YG_NABVUString@@PB_W@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcscmp']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?Add_PathSepar@UString@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
push ['5Ch']
mov ['ecx,', '[ebp+var_4]']
call ['??YUString@@QAEAAV0@_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YUString@@QAEAAV0@_W@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_BC8']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+eax*2],', 'dx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@VUString@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CObjectVector@VUString@@@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Back@?$CObjectVector@VUString@@@@QAEAAVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_D4C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_D53']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
?Insert@?$CObjectVector@VUString@@@@QAEXIABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Insert@?$CObjectVector@VUString@@@@QAEXIABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_E40']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_E47']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?Insert@?$CObjectVector@VUString@@@@QAEXIABVUString@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Insert@?$CObjectVector@VUString@@@@QAEXIABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Insert@?$CObjectVector@VUString@@@@QAEXIABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
?Delete@?$CObjectVector@VUString@@@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_F1A']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_F21']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Delete@?$CRecordVector@PAX@@QAEXI@Z']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GUString@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_F6A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Delete@?$CRecordVector@PAX@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@PAX@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?MoveItems@?$CRecordVector@PAX@@AAEXII@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_11F8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_11D3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

?Read@CLimitedSequentialInStream@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
push ['ecx']
push ['eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+10h]']
sub ['ecx,', '[eax+18h]']
mov ['edx,', '[edx+14h]']
sbb ['edx,', '[eax+1Ch]']
push ['edx']
push ['ecx']
call ['??$MyMin@_K@@YG_K_K0@Z']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+var_10],', '0']
jbe ['short', 'loc_AD']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ']
mov ['[ebp+var_18],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+18h]']
adc ['edx,', '[eax+1Ch]']
mov ['eax,', '[ebp+this]']
mov ['[eax+18h],', 'ecx']
mov ['[eax+1Ch],', 'edx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_AD']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+20h],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_BB']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Read@CLimitedInStream@@UAGJPAXIPAI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_136']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[eax+14h]']
cmp ['edx,', '[ecx+24h]']
jb ['short', 'loc_167']
ja ['short', 'loc_160']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+20h]']
jb ['short', 'loc_167']
xor ['eax,', 'eax']
jmp ['loc_26E']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+20h]']
sub ['edx,', '[ecx+10h]']
mov ['eax,', '[eax+24h]']
sbb ['eax,', '[ecx+14h]']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
xor ['edx,', 'edx']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_24]']
ja ['short', 'loc_1A2']
jb ['short', 'loc_19C']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_28]']
jnb ['short', 'loc_1A2']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+28h]']
add ['edx,', '[ecx+10h]']
mov ['eax,', '[eax+2Ch]']
adc ['eax,', '[ecx+14h]']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx+18h]']
jnz ['short', 'loc_1D6']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+1Ch]']
jz ['short', 'loc_1FB']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[eax+1Ch],', 'edx']
mov ['ecx,', '[ebp+this]']
call ['?SeekToPhys@CLimitedInStream@@AAEJXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1FB']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_26E']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_30],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_23D']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
add ['eax,', '[edx+18h]']
adc ['ecx,', '[edx+1Ch]']
mov ['edx,', '[ebp+this]']
mov ['[edx+18h],', 'eax']
mov ['[edx+1Ch],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
add ['eax,', '[edx+10h]']
adc ['ecx,', '[edx+14h]']
mov ['edx,', '[ebp+this]']
mov ['[edx+10h],', 'eax']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+var_18]']
pop ['edi']
pop ['esi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CLimitedInStream@@UAGJ_JIPA_K@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2A5']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_2A7']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_2BE']
jmp ['short', 'loc_2D5']
jmp ['short', 'loc_2DC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+10h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+14h]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_2DC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+20h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+24h]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_2DC']
mov ['eax,', '80030001h']
jmp ['short', 'loc_319']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
jg ['short', 'loc_2F1']
jl ['short', 'loc_2EA']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_2F1']
mov ['eax,', '80070083h']
jmp ['short', 'loc_319']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+14h],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_317']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
mov ['[ecx],', 'eax']
mov ['edx,', '[edx+14h]']
mov ['[ecx+4],', 'edx']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?CreateLimitedInStream@@YGJPAUIInStream@@_K1PAPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?CreateLimitedInStream@@YGJPAUIInStream@@_K1PAPAUISequentialInStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0']
push ['30h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_385']
mov ['ecx,', '[ebp+var_28]']
call ['??0CLimitedInStream@@QAE@XZ']
mov ['[ebp+var_34],', 'eax']
jmp ['short', 'loc_38C']
mov ['[ebp+var_34],', '0']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?SetStream@CLimitedInStream@@QAEXPAUIInStream@@@Z']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_C+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?InitAndSeek@CLimitedInStream@@QAEJ_K0@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_3F9']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_427']
mov ['ecx,', '[ebp+var_10]']
call ['?SeekToStart@CLimitedInStream@@QAEJXZ']
lea ['ecx,', '[ebp+var_18]']
call ['?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
?Read@CClusterInStream@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_4A6']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_30],', 'ecx']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+2Ch]']
jb ['short', 'loc_4D7']
ja ['short', 'loc_4D0']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+28h]']
jb ['short', 'loc_4D7']
xor ['eax,', 'eax']
jmp ['loc_6E3']
mov ['eax,', '[ebp+this]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jnz ['loc_64D']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '1']
mov ['ecx,', '[ecx+30h]']
shl ['edx,', 'cl']
mov ['[ebp+var_4],', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['esi,', '[ebp+this]']
mov ['eax,', '[ecx+8]']
mov ['edx,', '[ecx+0Ch]']
mov ['ecx,', '[esi+30h]']
call ['__aullshr']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
and ['eax,', 'ecx']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '34h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
xor ['edx,', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['ecx,', '[ecx+30h]']
call ['__allshl']
mov ['ecx,', '[ebp+this]']
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['ecx,', '[ebp+var_C]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[eax+10h]']
jnz ['short', 'loc_574']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[edx+14h]']
jz ['short', 'loc_59C']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+this]']
call ['?SeekToPhys@CClusterInStream@@QAEJXZ']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_59C']
mov ['eax,', '[ebp+var_1C]']
jmp ['loc_6E3']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+this]']
mov ['[edx+18h],', 'ecx']
mov ['[ebp+var_20],', '1']
jmp ['short', 'loc_5BA']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '40h']
jge ['short', 'loc_60C']
mov ['esi,', '[ebp+var_8]']
add ['esi,', '[ebp+var_20]']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '34h']
call ['?Size@?$CRecordVector@I@@QBEIXZ']
cmp ['esi,', 'eax']
jnb ['short', 'loc_60C']
mov ['esi,', '[ebp+var_10]']
add ['esi,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '34h']
call ['??A?$CRecordVector@I@@QAEAAII@Z']
cmp ['esi,', '[eax]']
jnz ['short', 'loc_60C']
mov ['edx,', '[ebp+this]']
mov ['eax,', '1']
mov ['ecx,', '[edx+30h]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+this]']
add ['eax,', '[ecx+18h]']
mov ['edx,', '[ebp+this]']
mov ['[edx+18h],', 'eax']
jmp ['short', 'loc_5B1']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+28h]']
sub ['edx,', '[ecx+8]']
mov ['eax,', '[eax+2Ch]']
sbb ['eax,', '[ecx+0Ch]']
mov ['[ebp+var_28],', 'edx']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+18h]']
xor ['eax,', 'eax']
mov ['[ebp+var_40],', 'edx']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
cmp ['ecx,', '[ebp+var_24]']
jb ['short', 'loc_64D']
ja ['short', 'loc_644']
mov ['edx,', '[ebp+var_40]']
cmp ['edx,', '[ebp+var_28]']
jbe ['short', 'loc_64D']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+18h],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+18h]']
jbe ['short', 'loc_661']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+18h]']
mov ['[ebp+arg_8],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1Ch']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_44],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_6A3']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
add ['eax,', '[edx+10h]']
adc ['ecx,', '[edx+14h]']
mov ['edx,', '[ebp+this]']
mov ['[edx+10h],', 'eax']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
add ['eax,', '[edx+8]']
adc ['ecx,', '[edx+0Ch]']
mov ['edx,', '[ebp+this]']
mov ['[edx+8],', 'eax']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+18h]']
sub ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+this]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
pop ['edi']
pop ['esi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CClusterInStream@@UAGJ_JIPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_72E']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_730']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_747']
jmp ['short', 'loc_75E']
jmp ['short', 'loc_765']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+8]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+0Ch]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_765']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+28h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+2Ch]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_765']
mov ['eax,', '80030001h']
jmp ['short', 'loc_7C5']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
jg ['short', 'loc_77A']
jl ['short', 'loc_773']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_77A']
mov ['eax,', '80070083h']
jmp ['short', 'loc_7C5']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
cmp ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
jnz ['short', 'loc_796']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
cmp ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
jz ['short', 'loc_7A0']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_7C3']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+4],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?Read@CExtentsStream@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_7F6']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?Back@?$CRecordVector@UCSeekExtent@@@@QAEAAUCSeekExtent@@XZ']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_30],', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[edx+14h]']
cmp ['ecx,', '[eax+0Ch]']
jb ['short', 'loc_82F']
ja ['short', 'loc_828']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[edx+10h]']
cmp ['ecx,', '[eax+8]']
jb ['short', 'loc_82F']
xor ['eax,', 'eax']
jmp ['loc_9F4']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_83C']
xor ['eax,', 'eax']
jmp ['loc_9F4']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?Size@?$CRecordVector@UCSeekExtent@@@@QBEIXZ']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
shr ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_869']
jmp ['short', 'loc_8AF']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['??A?$CRecordVector@UCSeekExtent@@@@QAEAAUCSeekExtent@@I@Z']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_34],', 'edx']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[eax+14h]']
cmp ['edx,', '[ecx+0Ch]']
ja ['short', 'loc_8A7']
jb ['short', 'loc_89F']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+8]']
jnb ['short', 'loc_8A7']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_8AD']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_854']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['??A?$CRecordVector@UCSeekExtent@@@@QAEAAUCSeekExtent@@I@Z']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+10h]']
sub ['edx,', '[ecx+8]']
mov ['eax,', '[eax+14h]']
sbb ['eax,', '[ecx+0Ch]']
mov ['ecx,', '[ebp+var_10]']
add ['edx,', '[ecx]']
adc ['eax,', '[ecx+4]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+18h]']
test ['eax,', 'eax']
jnz ['short', 'loc_908']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+var_18]']
jnz ['short', 'loc_908']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ecx+0Ch]']
cmp ['edx,', '[ebp+var_14]']
jz ['short', 'loc_937']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+this]']
call ['?SeekToPhys@CExtentsStream@@AAEJXZ']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_937']
mov ['eax,', '[ebp+var_1C]']
jmp ['loc_9F4']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['??A?$CRecordVector@UCSeekExtent@@@@QAEAAUCSeekExtent@@I@Z']
mov ['edx,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '[edx+10h]']
mov ['eax,', '[eax+0Ch]']
sbb ['eax,', '[edx+14h]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
xor ['edx,', 'edx']
mov ['[ebp+var_44],', 'ecx']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_40]']
cmp ['eax,', '[ebp+var_20]']
jb ['short', 'loc_981']
ja ['short', 'loc_97B']
mov ['ecx,', '[ebp+var_44]']
cmp ['ecx,', '[ebp+var_24]']
jbe ['short', 'loc_981']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+arg_8],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1Ch']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_48],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+8]']
adc ['edx,', '[eax+0Ch]']
mov ['eax,', '[ebp+this]']
mov ['[eax+8],', 'ecx']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+10h]']
adc ['edx,', '[eax+14h]']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9F1']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_28]']
pop ['edi']
pop ['esi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CExtentsStream@@UAGJ_JIPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_A35']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_A37']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_A4E']
jmp ['short', 'loc_A6D']
jmp ['short', 'loc_A74']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+10h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+14h]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_A74']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?Back@?$CRecordVector@UCSeekExtent@@@@QAEAAUCSeekExtent@@XZ']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['ecx,', '[eax+8]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['edx,', '[eax+0Ch]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'ecx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'edx']
jmp ['short', 'loc_A74']
mov ['eax,', '80030001h']
jmp ['short', 'loc_AB1']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
jg ['short', 'loc_A89']
jl ['short', 'loc_A82']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_A89']
mov ['eax,', '80070083h']
jmp ['short', 'loc_AB1']
mov ['eax,', '[ebp+this]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[eax+14h],', 'edx']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_AAF']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ecx+14h]']
mov ['[eax+4],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?Write@CLimitedSequentialOutStream@@UAGJPBXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_B04']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+14h]']
jb ['short', 'loc_B78']
ja ['short', 'loc_B2D']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+10h]']
jbe ['short', 'loc_B78']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+10h]']
or ['edx,', '[ecx+14h]']
jnz ['short', 'loc_B6F']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+18h],', '1']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+19h]']
test ['edx,', 'edx']
jnz ['short', 'loc_B5D']
mov ['eax,', '80004005h']
jmp ['loc_BE7']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_B6B']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax],', 'ecx']
xor ['eax,', 'eax']
jmp ['short', 'loc_BE7']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_BBB']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_18],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+arg_8]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['esi,', '[ecx+10h]']
sub ['esi,', 'edx']
mov ['edx,', '[ecx+14h]']
sbb ['edx,', 'eax']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'esi']
mov ['[eax+14h],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_BE4']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Read@CTailInStream@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_C5D']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_8]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
add ['eax,', '[edx+8]']
adc ['ecx,', '[edx+0Ch]']
mov ['edx,', '[ebp+this]']
mov ['[edx+8],', 'eax']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CTailInStream@@UAGJ_JIPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_D04']
cmp ['[ebp+var_18],', '1']
jz ['short', 'loc_D09']
cmp ['[ebp+var_18],', '2']
jz ['short', 'loc_D23']
jmp ['loc_DD0']
jmp ['loc_DD7']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+8]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+0Ch]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['loc_DD7']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['2']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_D75']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_E4F']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+1Ch]']
ja ['short', 'loc_D9D']
jb ['short', 'loc_D93']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[edx+18h]']
jnb ['short', 'loc_D9D']
mov ['eax,', '80070083h']
jmp ['loc_E4F']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+var_8]']
sbb ['eax,', '[ecx+1Ch]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+8],', 'edx']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_DCC']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[eax+0Ch]']
mov ['[edx+4],', 'eax']
xor ['eax,', 'eax']
jmp ['short', 'loc_E4F']
mov ['eax,', '80030001h']
jmp ['short', 'loc_E4F']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
jg ['short', 'loc_DEC']
jl ['short', 'loc_DE5']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_DEC']
mov ['eax,', '80070083h']
jmp ['short', 'loc_E4F']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_E12']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[edx+0Ch]']
mov ['[ecx+4],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_24],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+18h]']
add ['edx,', '[ecx+8]']
mov ['eax,', '[eax+1Ch]']
adc ['eax,', '[ecx+0Ch]']
push ['eax']
push ['edx']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?Read@CLimitedCachedInStream@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_EB6']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[eax+14h]']
cmp ['edx,', '[ecx+24h]']
jb ['short', 'loc_EE7']
ja ['short', 'loc_EE0']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+20h]']
jb ['short', 'loc_EE7']
xor ['eax,', 'eax']
jmp ['loc_1082']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+20h]']
sub ['edx,', '[ecx+10h]']
mov ['eax,', '[eax+24h]']
sbb ['eax,', '[ecx+14h]']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+Size]']
xor ['edx,', 'edx']
mov ['[ebp+var_30],', 'ecx']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_2C]']
ja ['short', 'loc_F22']
jb ['short', 'loc_F1C']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_30]']
jnb ['short', 'loc_F22']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+Size],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+28h]']
add ['edx,', '[ecx+10h]']
mov ['eax,', '[eax+2Ch]']
adc ['eax,', '[ecx+14h]']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+38h]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', 'edx']
mov ['edx,', '[ebp+var_C]']
sbb ['edx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_14],', 'edx']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+38h]']
xor ['edx,', 'edx']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_34]']
jb ['short', 'loc_FCE']
ja ['short', 'loc_F79']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_38]']
jb ['short', 'loc_FCE']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+34h]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_40],', 'eax']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_3C]']
ja ['short', 'loc_FCE']
jb ['short', 'loc_F99']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_40]']
ja ['short', 'loc_FCE']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+34h]']
sub ['eax,', 'ecx']
cmp ['[ebp+Size],', 'eax']
ja ['short', 'loc_FCE']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_FC9']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+this]']
add ['edx,', '[eax+30h]']
push ['edx']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['loc_105A']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax+18h]']
jnz ['short', 'loc_FEA']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[edx+1Ch]']
jz ['short', 'loc_100F']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ecx+1Ch],', 'eax']
mov ['ecx,', '[ebp+this]']
call ['?SeekToPhys@CLimitedCachedInStream@@AAEJXZ']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_100F']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_1082']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_48],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+Size]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+18h]']
adc ['eax,', '[ecx+1Ch]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+18h],', 'edx']
mov ['[ecx+1Ch],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1068']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+Size]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+Size]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+10h]']
adc ['edx,', '[eax+14h]']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_1C]']
pop ['edi']
pop ['esi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CLimitedCachedInStream@@UAGJ_JIPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_10C5']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_10C7']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_10DE']
jmp ['short', 'loc_10F5']
jmp ['short', 'loc_10FC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+10h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+14h]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_10FC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+20h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+24h]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_10FC']
mov ['eax,', '80030001h']
jmp ['short', 'loc_1139']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
jg ['short', 'loc_1111']
jl ['short', 'loc_110A']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_1111']
mov ['eax,', '80070083h']
jmp ['short', 'loc_1139']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+14h],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_1137']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
mov ['[ecx],', 'eax']
mov ['edx,', '[edx+14h]']
mov ['[ecx+4],', 'edx']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?Write@CTailOutStream@@UAGJPBXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_11A3']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_8]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
add ['eax,', '[edx+8]']
adc ['ecx,', '[edx+0Ch]']
mov ['edx,', '[ebp+this]']
mov ['[edx+8],', 'eax']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[edx+14h]']
cmp ['ecx,', '[eax+0Ch]']
ja ['short', 'loc_11F6']
jb ['short', 'loc_11E4']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[edx+10h]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_11F6']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[eax+0Ch]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CTailOutStream@@UAGJ_JIPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_126F']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_1271']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_1288']
jmp ['short', 'loc_129F']
jmp ['short', 'loc_12A6']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+8]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+0Ch]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_12A6']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+10h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+14h]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_12A6']
mov ['eax,', '80030001h']
jmp ['short', 'loc_131E']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
jg ['short', 'loc_12BB']
jl ['short', 'loc_12B4']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_12BB']
mov ['eax,', '80070083h']
jmp ['short', 'loc_131E']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_12E1']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[edx+0Ch]']
mov ['[ecx+4],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+20h]']
add ['edx,', '[ecx+8]']
mov ['eax,', '[eax+24h]']
adc ['eax,', '[ecx+0Ch]']
push ['eax']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?SetSize@CTailOutStream@@UAGJ_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[eax+14h],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '18h']
call ['??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+20h]']
add ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['edx,', '[eax+24h]']
adc ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['esi,', 'esp']
push ['edx']
push ['ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?SeekToPhys@CLimitedInStream@@AAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[eax+18h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?CreateLimitedInStream@@YGJPAUIInStream@@_K1PAPAUISequentialInStream@@@Z$0 proc near
mov ['eax,', '[ebp-28h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?CreateLimitedInStream@@YGJPAUIInStream@@_K1PAPAUISequentialInStream@@@Z$1 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$?CreateLimitedInStream@@YGJPAUIInStream@@_K1PAPAUISequentialInStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?CreateLimitedInStream@@YGJPAUIInStream@@_K1PAPAUISequentialInStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
?SetStream@CLimitedInStream@@QAEXPAUIInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?InitAndSeek@CLimitedInStream@@QAEJ_K0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax+28h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_8+4]']
mov ['[ecx+24h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?SeekToPhys@CLimitedInStream@@AAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?SeekToStart@CLimitedInStream@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ecx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CLimitedInStream@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CLimitedInStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0?$CMyComPtr@UIInStream@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CLimitedInStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_17B8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_17F7']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_17D4']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_17F7']
push ['offset', '_IID_IInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_17F0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_17F7']
mov ['eax,', '80004002h']
jmp ['short', 'loc_1808']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CLimitedInStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CLimitedInStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_18BE']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_18E8']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_18DF']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCLimitedInStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_18E6']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCLimitedInStream@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CLimitedInStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1922']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CLimitedInStream@@QAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$CMyComPtr@UIInStream@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IInStream@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SeekToPhys@CClusterInStream@@QAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SeekToPhys@CExtentsStream@@AAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[eax+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SeekToPhys@CLimitedCachedInStream@@AAEJXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[eax+18h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1B74']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_1BBA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_1C66']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1CBC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_1CDF']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CRecordVector@I@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@I@@QAEAAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CRecordVector@UCSeekExtent@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CRecordVector@UCSeekExtent@@@@QAEAAUCSeekExtent@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Back@?$CRecordVector@UCSeekExtent@@@@QAEAAUCSeekExtent@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
sub ['eax,', '1']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$MyMin@_K@@YG_K_K0@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
ja ['short', 'loc_1E0C']
jb ['short', 'loc_1DFE']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_1E0C']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_1E18']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp

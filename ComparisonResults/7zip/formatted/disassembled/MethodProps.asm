?StringToBool@@YG_NABVUString@@AA_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_12C']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Bh']
jnz ['short', 'loc_112']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
movzx ['edx,', 'word', 'ptr', '[eax+2]']
test ['edx,', 'edx']
jz ['short', 'loc_12C']
push ['offset', '$SG67999']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_136']
mov ['ecx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[ecx],', '1']
mov ['al,', '1']
jmp ['short', 'loc_17C']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
movzx ['edx,', 'word', 'ptr', '[eax]']
cmp ['edx,', '2Dh']
jnz ['short', 'loc_156']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
movzx ['eax,', 'word', 'ptr', '[eax+2]']
test ['eax,', 'eax']
jz ['short', 'loc_170']
push ['offset', '$SG68003']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_17A']
mov ['edx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['al,', '1']
jmp ['short', 'loc_17C']
xor ['al,', 'al']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1E6']
cmp ['[ebp+var_20],', '8']
jz ['short', 'loc_206']
cmp ['[ebp+var_20],', '0Bh']
jz ['short', 'loc_1F0']
jmp ['short', 'loc_253']
mov ['edx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[edx],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_258']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'word', 'ptr', '[eax+8]']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'cl']
xor ['eax,', 'eax']
jmp ['short', 'loc_258']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
call ['?StringToBool@@YG_NABVUString@@AA_N@Z']
movzx ['ecx,', 'al']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '7FF8FFA9h']
add ['ecx,', '80070057h']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_258']
mov ['eax,', '80070057h']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ParseStringToUInt32@@YGIABVUString@@AAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['?ConvertStringToUInt32@@YGIPB_WPAPB_W@Z']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[ebp+var_4]']
sar ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ParsePropToUInt32@@YGJABVUString@@ABUtagPROPVARIANT@@AAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '13h']
jnz ['short', 'loc_34C']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_33D']
mov ['eax,', '80070057h']
jmp ['short', 'loc_39C']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
mov ['[eax],', 'edx']
xor ['eax,', 'eax']
jmp ['short', 'loc_39C']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_35D']
mov ['eax,', '80070057h']
jmp ['short', 'loc_39C']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_370']
xor ['eax,', 'eax']
jmp ['short', 'loc_39C']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ParseStringToUInt32@@YGIABVUString@@AAI@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
cmp ['esi,', 'eax']
jz ['short', 'loc_392']
mov ['eax,', '80070057h']
jmp ['short', 'loc_39C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ParseMtProp@@YGJABVUString@@ABUtagPROPVARIANT@@IAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_468']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '13h']
jz ['short', 'loc_41D']
jmp ['short', 'loc_42A']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_464']
lea ['eax,', '[ebp+var_8+3]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_445']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_48A']
movzx ['edx,', '[ebp+var_8+3]']
test ['edx,', 'edx']
jz ['short', 'loc_455']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_45C']
mov ['[ebp+var_18],', '1']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
xor ['eax,', 'eax']
jmp ['short', 'loc_48A']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_479']
mov ['eax,', '80070057h']
jmp ['short', 'loc_48A']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ParsePropToUInt32@@YGJABVUString@@ABUtagPROPVARIANT@@AAI@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?AddProp32@CProps@@QAEXKI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+4],', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?AddProp@CCoderProps@@QAEXABUCProp@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+0Ch]']
jb ['short', 'loc_55A']
mov ['[ebp+var_8],', '1']
push ['offset', '__TI1H']
lea ['eax,', '[ebp+var_8]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+8]']
shl ['ecx,', '4']
mov ['eax,', '[ebp+var_4]']
add ['ecx,', '[eax+4]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABV012@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8],', 'edx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '44h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CObjectVector@UCProp@@@@QBEIXZ']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_4],', '0']
setnz ['cl']
add ['eax,', 'ecx']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??0CCoderProps@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_61F']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CObjectVector@UCProp@@@@QBEIXZ']
cmp ['[ebp+var_2C],', 'eax']
jnb ['short', 'loc_643']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['?AddProp@CCoderProps@@QAEXABUCProp@@@Z']
jmp ['short', 'loc_616']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_686']
lea ['ecx,', '[ebp+var_48]']
call ['??0CProp@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_48],', '10h']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ecx]']
push ['eax']
lea ['ecx,', '[ebp+var_40]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['?AddProp@CCoderProps@@QAEXABUCProp@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_48]']
call ['??1CProp@@QAE@XZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+var_24]']
call ['?SetProps@CCoderProps@@QAEJPAUICompressSetCoderProperties@@@Z']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1CCoderProps@@QAE@XZ']
mov ['eax,', '[ebp+var_50]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?FindProp@CMethodProps@@QBEHK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CObjectVector@UCProp@@@@QBEIXZ']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_740']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_760']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
mov ['edx,', '[eax]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_75E']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_763']
jmp ['short', 'loc_737']
or ['eax,', '0FFFFFFFFh']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetLevel@CMethodProps@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
push ['0Fh']
mov ['ecx,', '[ebp+var_4]']
call ['?FindProp@CMethodProps@@QBEHK@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_7B4']
mov ['eax,', '5']
jmp ['short', 'loc_7FA']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '13h']
jz ['short', 'loc_7D0']
mov ['eax,', '9']
jmp ['short', 'loc_7FA']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z']
mov ['eax,', '[eax+10h]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '9']
jbe ['short', 'loc_7F1']
mov ['[ebp+var_10],', '9']
jmp ['short', 'loc_7F7']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetParam@CMethodProps@@AAEJABVUString@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetParam@CMethodProps@@AAEJABVUString@@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '7Ch']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_88]']
mov ['ecx,', '1Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?FindPropIdExact@@YGHABVUString@@@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_86A']
mov ['eax,', '80070057h']
jmp ['loc_A23']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '_g_NameToPropID[ecx*8]']
mov ['[ebp+var_18],', 'edx']
lea ['ecx,', '[ebp+var_34]']
call ['??0CProp@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['?IsLogSizeProp@@YG_NK@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8E0']
lea ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?StringToDictSize@@YGJABVUString@@AAI@Z']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_8CF']
mov ['edx,', '[ebp+var_48]']
mov ['[ebp+var_7C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+var_7C]']
jmp ['loc_A23']
mov ['eax,', '[ebp+var_40]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['loc_9F8']
lea ['ecx,', '[ebp+var_5C]']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_18]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '8']
jnz ['short', 'loc_908']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
jmp ['loc_9A4']
mov ['ecx,', '[ebp+var_18]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '0Bh']
jnz ['short', 'loc_960']
lea ['eax,', '[ebp+var_65]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?StringToBool@@YG_NABVUString@@AA_N@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_951']
mov ['[ebp+var_80],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+var_80]']
jmp ['loc_A23']
movzx ['eax,', '[ebp+var_65]']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
jmp ['short', 'loc_9A4']
mov ['ecx,', '[ebp+arg_4]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_9A4']
lea ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?ParseStringToUInt32@@YGIABVUString@@AAI@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Len@UString@@QBEIXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_998']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
lea ['ecx,', '[ebp+var_5C]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['short', 'loc_9A4']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['ecx,', '[ebp+var_5C]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
push ['edx']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
call ['?ConvertProperty@@YG_NABUtagPROPVARIANT@@GAAVCPropVariant@NCOM@NWindows@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_9EC']
mov ['[ebp+var_84],', '80070057h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+var_84]']
jmp ['short', 'loc_A23']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z']
mov ['[ebp+var_88],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+var_88]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
add ['esp,', '88h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StringToDictSize@@YGJABVUString@@AAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?ConvertStringToUInt32@@YGIPB_WPAPB_W@Z']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', 'eax']
sar ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
jz ['short', 'loc_B1E']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
cmp ['eax,', 'edx']
jbe ['short', 'loc_B28']
mov ['eax,', '80070057h']
jmp ['loc_BF5']
mov ['[ebp+var_18],', '20h']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_B62']
cmp ['[ebp+var_10],', '20h']
jb ['short', 'loc_B4C']
mov ['eax,', '80070057h']
jmp ['loc_BF5']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_10]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
jmp ['loc_BF5']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[eax+edx*2]']
push ['eax']
call ['?MyCharLower_Ascii@@YG_W_W@Z']
movzx ['ecx,', 'ax']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', '62h']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0Bh']
ja ['short', '$LN2']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'ds:$LN15[eax]']
jmp ['ds:$LN19_0[ecx*4]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
xor ['eax,', 'eax']
jmp ['short', 'loc_BF5']
mov ['[ebp+var_1C],', '0Ah']
jmp ['short', 'loc_BCB']
mov ['[ebp+var_1C],', '14h']
jmp ['short', 'loc_BCB']
mov ['[ebp+var_1C],', '1Eh']
jmp ['short', 'loc_BCB']
mov ['eax,', '80070057h']
jmp ['short', 'loc_BF5']
mov ['ecx,', '20h']
sub ['ecx,', '[ebp+var_1C]']
mov ['edx,', '1']
shl ['edx,', 'cl']
cmp ['[ebp+var_10],', 'edx']
jb ['short', 'loc_BE6']
mov ['eax,', '80070057h']
jmp ['short', 'loc_BF5']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_1C]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?FindPropIdExact@@YGHABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_C6D']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '11h']
jnb ['short', 'loc_C9A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', 'off_5C[ecx*8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_C98']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_C9D']
jmp ['short', 'loc_C64']
or ['eax,', '0FFFFFFFFh']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ConvertProperty@@YG_NABUtagPROPVARIANT@@GAAVCPropVariant@NCOM@NWindows@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['dword', 'ptr', '[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
movzx ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jnz ['short', 'loc_CE9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABUtagPROPVARIANT@@@Z']
mov ['al,', '1']
jmp ['short', 'loc_D34']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '0Bh']
jnz ['short', 'loc_D18']
lea ['edx,', '[ebp+var_8+3]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
test ['eax,', 'eax']
jz ['short', 'loc_D07']
xor ['al,', 'al']
jmp ['short', 'loc_D34']
movzx ['ecx,', '[ebp+var_8+3]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z']
mov ['al,', '1']
jmp ['short', 'loc_D34']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_D32']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABUtagPROPVARIANT@@@Z']
mov ['al,', '1']
jmp ['short', 'loc_D34']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?IsLogSizeProp@@YG_NK@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0Fh']
ja ['short', '$LN2_0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'ds:$LN6_0[edx]']
jmp ['ds:$LN7_0[eax*4]']
mov ['al,', '1']
jmp ['short', 'loc_DA7']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '54h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$CObjectVector@VUString@@@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_E38']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
lea ['ecx,', '[ebp+var_20]']
call ['?Size@?$CObjectVector@VUString@@@@QBEIXZ']
cmp ['[ebp+var_28],', 'eax']
jnb ['loc_EE9']
mov ['eax,', '[ebp+var_28]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z']
mov ['[ebp+var_2C],', 'eax']
lea ['ecx,', '[ebp+var_3C]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?SplitParam@@YGXABVUString@@AAV1@1@Z']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?SetParam@CMethodProps@@AAEJABVUString@@0@Z']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0']
jz ['short', 'loc_ECC']
mov ['eax,', '[ebp+var_58]']
mov ['[ebp+var_5C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', '[ebp+var_5C]']
jmp ['short', 'loc_F02']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_50]']
call ['??1UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1UString@@QAE@XZ']
jmp ['loc_E2F']
mov ['[ebp+var_60],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', '[ebp+var_60]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Clear@?$CObjectVector@VUString@@@@QAEXXZ']
lea ['ecx,', '[ebp+var_1C]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_FEB']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
jmp ['short', 'loc_1061']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_FFD']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+var_24]']
jge ['short', 'loc_1046']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['edx,', '[ebp+var_28]']
mov ['ax,', '[eax+edx*2]']
mov ['word', 'ptr', '[ebp+var_2C],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_2C]']
cmp ['ecx,', '3Ah']
jnz ['short', 'loc_1037']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
lea ['ecx,', '[ebp+var_1C]']
call ['?Empty@UString@@QAEXXZ']
jmp ['short', 'loc_1044']
movzx ['eax,', 'word', 'ptr', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
call ['??YUString@@QAEAAV0@_W@Z']
jmp ['short', 'loc_FF4']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SplitParam@@YGXABVUString@@AAV1@1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['3Dh']
mov ['ecx,', '[ebp+arg_0]']
call ['?Find@UString@@QBEH_W@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jl ['short', 'loc_110D']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?SetFrom@UString@@QAEXPB_WI@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??4UString@@QAEAAV0@PB_W@Z']
jmp ['short', 'loc_117F']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_111F']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_1155']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['dx,', '[eax+ecx*2]']
mov ['word', 'ptr', '[ebp+var_C],', 'dx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_C]']
cmp ['eax,', '30h']
jl ['short', 'loc_1153']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_C]']
cmp ['ecx,', '39h']
jg ['short', 'loc_1153']
jmp ['short', 'loc_1155']
jmp ['short', 'loc_1116']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?SetFrom@UString@@QAEXPB_WI@Z']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??4UString@@QAEAAV0@PB_W@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '74h']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_80]']
mov ['ecx,', '1Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Len@UString@@QBEIXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_11E0']
mov ['eax,', '80070057h']
jmp ['loc_1333']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_124C']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??0UString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['edx,', '[ebp+var_34]']
push ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?SplitParam@@YGXABVUString@@AAV1@1@Z']
lea ['edx,', '[ebp+var_34]']
push ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?SetParam@CMethodProps@@AAEJABVUString@@0@Z']
mov ['[ebp+var_74],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_74]']
jmp ['loc_1333']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?FindPropIdExact@@YGHABVUString@@@Z']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jge ['short', 'loc_1268']
mov ['eax,', '80070057h']
jmp ['loc_1333']
mov ['edx,', '[ebp+var_3C]']
lea ['eax,', '_g_NameToPropID[edx*8]']
mov ['[ebp+var_40],', 'eax']
lea ['ecx,', '[ebp+var_5C]']
call ['??0CProp@@QAE@XZ']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_5C],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
call ['?IsLogSizeProp@@YG_NK@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_12D8']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_12CA']
mov ['eax,', '[ebp+var_70]']
mov ['[ebp+var_78],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+var_78]']
jmp ['short', 'loc_1333']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
lea ['ecx,', '[ebp+var_54]']
call ['??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z']
jmp ['short', 'loc_130E']
lea ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?ConvertProperty@@YG_NABUtagPROPVARIANT@@GAAVCPropVariant@NCOM@NWindows@@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_130E']
mov ['[ebp+var_7C],', '80070057h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+var_7C]']
jmp ['short', 'loc_1333']
lea ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z']
mov ['[ebp+var_80],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1CProp@@QAE@XZ']
mov ['eax,', '[ebp+var_80]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '80h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '13h']
jnz ['short', 'loc_142D']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '20h']
jb ['short', 'loc_141A']
mov ['eax,', '80070057h']
jmp ['short', 'loc_1477']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_10]']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
xor ['eax,', 'eax']
jmp ['short', 'loc_1477']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '8']
jnz ['short', 'loc_1472']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
call ['?StringToDictSize@@YGJABVUString@@AAI@Z']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_1477']
mov ['eax,', '80070057h']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['?Empty@AString@@QAEXXZ']
push ['3Ah']
mov ['ecx,', '[ebp+arg_0]']
call ['?Find@UString@@QBEH_W@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_1522']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['ecx,', '[ebp+var_24]']
call ['?DeleteFrom@UString@@QAEXI@Z']
lea ['ecx,', '[ebp+var_24]']
call ['?IsAscii@UString@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_154C']
mov ['[ebp+var_2C],', '80070057h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_15A3']
lea ['ecx,', '[ebp+var_24]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['?SetFromWStr_if_Ascii@AString@@QAEXPB_W@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1UString@@QAE@XZ']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_1579']
xor ['eax,', 'eax']
jmp ['short', 'loc_15A3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?Ptr@UString@@QBEPB_WI@Z']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
call ['??4UString@@QAEAAV0@PB_W@Z']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '18h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?IsEmpty@UString@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1667']
push ['offset', '$SG68453']
mov ['ecx,', '[ebp+arg_0]']
call ['??BUString@@QBEPB_WXZ']
push ['eax']
call ['?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1667']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z']
jmp ['short', 'loc_16B0']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '8']
jz ['short', 'loc_1679']
mov ['eax,', '80070057h']
jmp ['short', 'loc_16B0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??0UString@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?IsEmpty@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BUString@@QBEPB_WXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1CCoderProps@@QAE@XZ']
endp
__unwindfunclet$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z$1 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1CProp@@QAE@XZ']
endp
__ehhandler$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetParam@CMethodProps@@AAEJABVUString@@0@Z$0 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1CProp@@QAE@XZ']
endp
__unwindfunclet$?SetParam@CMethodProps@@AAEJABVUString@@0@Z$1 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
endp
__ehhandler$?SetParam@CMethodProps@@AAEJABVUString@@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-88h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetParam@CMethodProps@@AAEJABVUString@@0@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$CObjectVector@VUString@@@@QAE@XZ']
endp
__unwindfunclet$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z$1 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z$2 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-5Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$1 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$2 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1CProp@@QAE@XZ']
endp
__ehhandler$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-7Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z$0 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Len@UString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_ECPropVariant@NCOM@NWindows@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1AD8']
push ['offset', '??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx-4]']
push ['edx']
push ['10h']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1']
jz ['short', 'loc_1AD0']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '4']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '4']
jmp ['short', 'loc_1AF7']
mov ['ecx,', '[ebp+var_4]']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1AF4']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CPropVariant@NCOM@NWindows@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CCoderProps@@QAE@I@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CCoderProps@@QAE@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', '0']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_18],', 'edx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '10h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
xor ['eax,', 'eax']
add ['ecx,', '4']
setb ['al']
neg ['eax']
or ['eax,', 'ecx']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1CB6']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
push ['offset', '??1CPropVariant@NCOM@NWindows@@QAE@XZ']
push ['offset', '??0CPropVariant@NCOM@NWindows@@QAE@XZ']
mov ['eax,', '[ebp+var_18]']
push ['eax']
push ['10h']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '4']
push ['ecx']
call ['??_L@YGXPAXIHP6EX0@Z1@Z']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '4']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_1CBD']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0CCoderProps@@QAE@I@Z$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0CCoderProps@@QAE@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CCoderProps@@QAE@I@Z']
jmp ['___CxxFrameHandler3']
endp
??1CCoderProps@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1D9D']
push ['3']
mov ['ecx,', '[ebp+var_C]']
call ['??_ECPropVariant@NCOM@NWindows@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1DA4']
mov ['[ebp+var_14],', '0']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetProps@CCoderProps@@QAEJPAUICompressSetCoderProperties@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CProp@@QAE@XZ proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1CPropVariant@NCOM@NWindows@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?MyCharLower_Ascii@@YG_W_W@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '41h']
jl ['short', 'loc_1E46']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '5Ah']
jg ['short', 'loc_1E46']
movzx ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
jmp ['short', 'loc_1E4A']
mov ['ax,', '[ebp+arg_0]']
pop ['ebp']
retn ['4']
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??YUString@@QAEAAV0@_W@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_1EAC']
mov ['ecx,', '[ebp+var_4]']
call ['?Grow_1@UString@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+eax*2],', 'dx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Ptr@UString@@QBEPB_WI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Find@UString@@QBEH_W@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?FindCharPosInString@@YGHPB_W_W@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Empty@AString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsAscii@UString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Len@UString@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1FAF']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_1FCE']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', '80h']
jl ['short', 'loc_1FCC']
xor ['al,', 'al']
jmp ['short', 'loc_1FD0']
jmp ['short', 'loc_1FA6']
mov ['al,', '1']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteFrom@UString@@QAEXI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_2010']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Size@?$CObjectVector@UCProp@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QBEABQAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_20CC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0CProp@@QAE@ABU0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_20D3']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z']
jmp ['___CxxFrameHandler3']
endp
?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_21BF']
mov ['ecx,', '[ebp+var_1C]']
call ['??0CProp@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_21C6']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ']
jmp ['___CxxFrameHandler3']
endp
?Size@?$CObjectVector@VUString@@@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$CRecordVector@PAX@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_2334']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_233B']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?Add@?$CRecordVector@PAX@@QAEIQAX@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$CObjectVector@VUString@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2456']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_244D']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_2454']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_2412']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$CRecordVector@PAX@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$CRecordVector@PAX@@QAE@XZ']
endp
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
?Clear@?$CObjectVector@VUString@@@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Size@?$CRecordVector@PAX@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_253C']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??A?$CRecordVector@PAX@@QAEAAPAXI@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2533']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GUString@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_253A']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_24F8']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@?$CRecordVector@PAX@@QAEXXZ']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CProp@@QAE@ABU0@@Z proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+4]']
mov ['[eax+4],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??0CPropVariant@NCOM@NWindows@@QAE@ABV012@@Z']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GUString@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_25CA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CRecordVector@PAX@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CRecordVector@PAX@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@?$CRecordVector@PAX@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@PAX@@QAEIQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QBEABQAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$CRecordVector@PAX@@QAEAAPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_27D4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_27AF']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

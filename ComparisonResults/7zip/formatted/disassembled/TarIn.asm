_IsArc_Tar@8    proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '200h']
jnb ['short', 'loc_29']
mov ['eax,', '2']
jmp ['loc_CE']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '64h']
mov ['[ebp+var_4],', 'ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['8']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?OctalToNumber32@NTar@NArchive@@YG_NPBDIAAI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_52']
xor ['eax,', 'eax']
jmp ['short', 'loc_CE']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '8']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
mov ['[ebp+var_4],', 'ecx']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?ParseSize@NTar@NArchive@@YG_NPBDAA_K@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_85']
xor ['eax,', 'eax']
jmp ['short', 'loc_CE']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0Ch']
mov ['[ebp+var_4],', 'edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['?ParseInt64@NTar@NArchive@@YG_NPBDAA_J@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_A6']
xor ['eax,', 'eax']
jmp ['short', 'loc_CE']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '0Ch']
mov ['[ebp+var_4],', 'eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['?OctalToNumber32@NTar@NArchive@@YG_NPBDIAAI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_C9']
xor ['eax,', 'eax']
jmp ['short', 'loc_CE']
mov ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?OctalToNumber32@NTar@NArchive@@YG_NPBDIAAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?OctalToNumber@NTar@NArchive@@YG_NPBDIAA_K@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_186']
xor ['al,', 'al']
jmp ['short', 'loc_1AF']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
cmp ['[ebp+var_8],', '0']
ja ['short', 'loc_1A5']
jb ['short', 'loc_19C']
cmp ['[ebp+var_C],', '0FFFFFFFFh']
ja ['short', 'loc_1A5']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_1AC']
mov ['[ebp+var_14],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?OctalToNumber@NTar@NArchive@@YG_NPBDIAA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_28]']
push ['edx']
call ['?MyStrNCpy@NTar@NArchive@@YGXPADPBDI@Z']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+eax+var_28],', '0']
mov ['[ebp+var_3C],', '0']
jmp ['short', 'loc_23B']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '1']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
movsx ['eax,', '[ebp+edx+var_28]']
cmp ['eax,', '20h']
jnz ['short', 'loc_24A']
jmp ['short', 'loc_232']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
lea ['eax,', '[ebp+edx+var_28]']
push ['eax']
call ['?ConvertOctStringToUInt64@@YG_KPBDPAPBD@Z']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[ebp+var_3C]']
lea ['eax,', '[ebp+edx+var_28]']
cmp ['[ebp+var_34],', 'eax']
jnz ['short', 'loc_273']
xor ['al,', 'al']
jmp ['short', 'loc_29B']
mov ['ecx,', '[ebp+var_34]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '20h']
jz ['short', 'loc_291']
mov ['eax,', '[ebp+var_34]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_291']
mov ['[ebp+var_40],', '0']
jmp ['short', 'loc_298']
mov ['[ebp+var_40],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_40]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?MyStrNCpy@NTar@NArchive@@YGXPADPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_316']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_340']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_4]']
mov ['al,', '[edx]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_8+3]']
mov ['[ecx],', 'dl']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_33E']
jmp ['short', 'loc_340']
jmp ['short', 'loc_30D']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ParseInt64@NTar@NArchive@@YG_NPBDAA_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
bswap ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[edx+8]']
bswap ['eax']
bswap ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_4],', '80000000h']
jnz ['short', 'loc_3C6']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[ecx]']
mov ['edx,', '[ecx+4]']
mov ['cl,', '3Fh']
call ['__allshr']
and ['eax,', '1']
and ['edx,', '0']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'edx']
mov ['edx,', '[ebp+var_20]']
or ['edx,', '[ebp+var_1C]']
jnz ['short', 'loc_3BA']
mov ['[ebp+var_24],', '1']
jmp ['short', 'loc_3C1']
mov ['[ebp+var_24],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_24]']
jmp ['short', 'loc_427']
cmp ['[ebp+var_4],', '0FFFFFFFFh']
jnz ['short', 'loc_404']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[ecx]']
mov ['edx,', '[ecx+4]']
mov ['cl,', '3Fh']
call ['__allshr']
and ['eax,', '1']
and ['edx,', '0']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'edx']
mov ['edx,', '[ebp+var_2C]']
or ['edx,', '[ebp+var_28]']
jz ['short', 'loc_3F8']
mov ['[ebp+var_30],', '1']
jmp ['short', 'loc_3FF']
mov ['[ebp+var_30],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_30]']
jmp ['short', 'loc_427']
lea ['eax,', '[ebp+var_10]']
push ['eax']
push ['0Ch']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?OctalToNumber@NTar@NArchive@@YG_NPBDIAA_K@Z']
mov ['[ebp+var_15],', 'al']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[edx+4],', 'ecx']
mov ['al,', '[ebp+var_15]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ParseSize@NTar@NArchive@@YG_NPBDAA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
bswap ['ecx']
cmp ['ecx,', '80000000h']
jnz ['short', 'loc_4E7']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[edx+8]']
bswap ['eax']
bswap ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[ecx]']
mov ['edx,', '[ecx+4]']
mov ['cl,', '3Fh']
call ['__aullshr']
and ['eax,', '1']
and ['edx,', '0']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'edx']
mov ['edx,', '[ebp+var_8]']
or ['edx,', '[ebp+var_4]']
jnz ['short', 'loc_4DB']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_4E2']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
jmp ['short', 'loc_4F6']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0Ch']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?OctalToNumber@NTar@NArchive@@YG_NPBDIAA_K@Z']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadItem@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReadItem@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '84h']
push ['edi']
lea ['edi,', '[ebp+var_90]']
mov ['ecx,', '21h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax+80h],', '0']
mov ['[ebp+var_D],', '0']
mov ['[ebp+var_E],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??0AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
push ['ecx']
call ['?GetNextItemReal@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_5C2']
mov ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_60],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_60]']
jmp ['loc_985']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_617']
mov ['edx,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_5ED']
movzx ['eax,', '[ebp+var_D]']
test ['eax,', 'eax']
jnz ['short', 'loc_5E4']
movzx ['ecx,', '[ebp+var_E]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5ED']
mov ['edx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[edx],', '1']
mov ['[ebp+var_64],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_64]']
jmp ['loc_985']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_649']
mov ['[ebp+var_68],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_68]']
jmp ['loc_985']
mov ['ecx,', '[ebp+arg_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx+68h]']
cmp ['edx,', '4Ch']
jz ['short', 'loc_665']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+68h]']
cmp ['ecx,', '4Bh']
jnz ['loc_85E']
mov ['edx,', '[ebp+arg_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+68h]']
cmp ['eax,', '4Ch']
jnz ['short', 'loc_6AF']
movzx ['ecx,', '[ebp+var_D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6A3']
mov ['[ebp+var_6C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_6C]']
jmp ['loc_985']
mov ['[ebp+var_D],', '1']
lea ['edx,', '[ebp+var_20]']
mov ['[ebp+var_40],', 'edx']
jmp ['short', 'loc_6EB']
movzx ['eax,', '[ebp+var_E]']
test ['eax,', 'eax']
jz ['short', 'loc_6E1']
mov ['[ebp+var_70],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_70]']
jmp ['loc_985']
mov ['[ebp+var_E],', '1']
lea ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', 'dword', 'ptr', 'ds:?kLongLink@NFileHeader@NTar@NArchive@@3PBDB']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??9@YG_NABVAString@@PBD@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_743']
mov ['edx,', 'dword', 'ptr', 'ds:?kLongLink2@NFileHeader@NTar@NArchive@@3PBDB']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??9@YG_NABVAString@@PBD@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_743']
mov ['[ebp+var_74],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_74]']
jmp ['loc_985']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
ja ['short', 'loc_767']
mov ['ecx,', '[ebp+var_8C]']
cmp ['dword', 'ptr', '[ecx+10h],', '4000h']
jbe ['short', 'loc_791']
mov ['[ebp+var_78],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_78]']
jmp ['loc_985']
mov ['ecx,', '[ebp+arg_8]']
call ['?GetPackSizeAligned@CItem@NTar@NArchive@@QBE_KXZ']
mov ['[ebp+var_44],', 'eax']
mov ['edx,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', '[ebp+var_40]']
call ['?GetBuf@AString@@QAEPADI@Z']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_50],', 'eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+this]']
push ['eax']
call ['?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+80h]']
add ['edx,', '[ebp+var_50]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+80h],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['ecx,', '[ebp+var_40]']
call ['?ReleaseBuf_CalcLen@AString@@QAEXI@Z']
mov ['eax,', '[ebp+var_58]']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_81E']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ebp+var_7C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_7C]']
jmp ['loc_985']
mov ['edx,', '[ebp+var_50]']
cmp ['edx,', '[ebp+var_44]']
jz ['short', 'loc_859']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '2']
mov ['[ebp+var_80],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_80]']
jmp ['loc_985']
jmp ['loc_57B']
mov ['ecx,', '[ebp+arg_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx+68h]']
mov ['[ebp+var_90],', 'edx']
mov ['eax,', '[ebp+var_90]']
sub ['eax,', '44h']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_90],', '34h']
ja ['short', '$LN5']
mov ['ecx,', '[ebp+var_90]']
movzx ['edx,', 'ds:$LN33[ecx]']
jmp ['ds:$LN40[edx*4]']
jmp ['short', 'loc_8F0']
jmp ['short', 'loc_8F0']
jmp ['short', 'loc_8F0']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+68h]']
cmp ['ecx,', '37h']
jg ['short', 'loc_8C0']
mov ['edx,', '[ebp+arg_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+68h]']
cmp ['eax,', '30h']
jge ['short', 'loc_8F0']
mov ['ecx,', '[ebp+arg_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx+68h]']
test ['edx,', 'edx']
jz ['short', 'loc_8F0']
mov ['[ebp+var_84],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_84]']
jmp ['loc_985']
movzx ['eax,', '[ebp+var_D]']
test ['eax,', 'eax']
jz ['short', 'loc_90E']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[edx+84h],', '0']
movzx ['eax,', '[ebp+var_E]']
test ['eax,', 'eax']
jz ['short', 'loc_92F']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '3Ch']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['edx,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[edx+85h],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['[ebp+var_88],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
mov ['eax,', '[ebp+var_88]']
jmp ['short', 'loc_985']
jmp ['loc_57B']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1AString@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN39']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
add ['esp,', '90h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?GetNextItemReal@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetNextItemReal@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '304h']
push ['edi']
lea ['edi,', '[ebp+var_310]']
mov ['ecx,', '0C1h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['eax,', '[ebp+var_214]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['[ebp+var_21D],', '0']
mov ['[ebp+var_228],', '200h']
lea ['eax,', '[ebp+var_228]']
push ['eax']
lea ['ecx,', '[ebp+var_214]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z']
mov ['[ebp+var_230],', 'eax']
cmp ['[ebp+var_230],', '0']
jz ['short', 'loc_AEB']
mov ['eax,', '[ebp+var_230]']
jmp ['loc_161E']
cmp ['[ebp+var_228],', '0']
jnz ['short', 'loc_B0F']
movzx ['eax,', '[ebp+var_21D]']
test ['eax,', 'eax']
jnz ['short', 'loc_B08']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx],', '2']
xor ['eax,', 'eax']
jmp ['loc_161E']
cmp ['[ebp+var_228],', '200h']
jz ['short', 'loc_B36']
movzx ['edx,', '[ebp+var_21D]']
test ['edx,', 'edx']
jnz ['short', 'loc_B2F']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '2']
xor ['eax,', 'eax']
jmp ['loc_161E']
lea ['ecx,', '[ebp+var_214]']
push ['ecx']
call ['?IsRecordLast@NTar@NArchive@@YG_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_B4B']
jmp ['short', 'loc_B6F']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+80h]']
add ['ecx,', '200h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+80h],', 'ecx']
mov ['[ebp+var_21D],', '1']
jmp ['loc_AB0']
movzx ['eax,', '[ebp+var_21D]']
test ['eax,', 'eax']
jz ['short', 'loc_B81']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx],', '1']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['64h']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?ReadString@NTar@NArchive@@YGXPBDIAAVAString@@@Z']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '64h']
mov ['[ebp+Dst],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?Len@AString@@QBEIXZ']
cmp ['eax,', '64h']
jz ['short', 'loc_BD1']
mov ['ecx,', '[ebp+arg_8]']
call ['?Len@AString@@QBEIXZ']
cmp ['eax,', '63h']
jz ['short', 'loc_BD1']
mov ['[ebp+var_2CC],', '0']
jmp ['short', 'loc_BDB']
mov ['[ebp+var_2CC],', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['al,', 'byte', 'ptr', '[ebp+var_2CC]']
mov ['[edx+84h],', 'al']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '28h']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?OctalToNumber32@NTar@NArchive@@YG_NPBDIAAI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_C0D']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '8']
mov ['[ebp+Dst],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '2Ch']
push ['edx']
push ['8']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?OctalToNumber32@NTar@NArchive@@YG_NPBDIAAI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_C42']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx+2Ch],', '0']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '8']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '30h']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?OctalToNumber32@NTar@NArchive@@YG_NPBDIAAI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_C77']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx+30h],', '0']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '8']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?ParseSize@NTar@NArchive@@YG_NPBDAA_K@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_CA7']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+18h],', 'edx']
mov ['ecx,', '[ecx+14h]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '0Ch']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '20h']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?ParseInt64@NTar@NArchive@@YG_NPBDAA_J@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_CE9']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '0Ch']
mov ['[ebp+Dst],', 'eax']
lea ['ecx,', '[ebp+var_238]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?OctalToNumber32@NTar@NArchive@@YG_NPBDIAAI@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_D1B']
xor ['eax,', 'eax']
jmp ['loc_161E']
push ['8']
push ['20h']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '8']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['dl,', '[ecx]']
mov ['[eax+68h],', 'dl']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '1']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '3Ch']
push ['ecx']
push ['64h']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?ReadString@NTar@NArchive@@YGXPBDIAAVAString@@@Z']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '64h']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '3Ch']
call ['?Len@AString@@QBEIXZ']
cmp ['eax,', '64h']
jz ['short', 'loc_DAA']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '3Ch']
call ['?Len@AString@@QBEIXZ']
cmp ['eax,', '63h']
jz ['short', 'loc_DAA']
mov ['[ebp+var_2D0],', '0']
jmp ['short', 'loc_DB4']
mov ['[ebp+var_2D0],', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_2D0]']
mov ['[ecx+85h],', 'dl']
push ['8']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '60h']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '8']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '48h']
push ['eax']
push ['20h']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?ReadString@NTar@NArchive@@YGXPBDIAAVAString@@@Z']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '20h']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '54h']
push ['eax']
push ['20h']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?ReadString@NTar@NArchive@@YGXPBDIAAVAString@@@Z']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '20h']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+Dst]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+69h],', 'cl']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+69h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_E75']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '34h']
push ['edx']
push ['8']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?OctalToNumber32@NTar@NArchive@@YG_NPBDIAAI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_E75']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '8']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+Dst]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+6Ah],', 'cl']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+6Ah]']
test ['ecx,', 'ecx']
jz ['short', 'loc_EC7']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '38h']
push ['edx']
push ['8']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?OctalToNumber32@NTar@NArchive@@YG_NPBDIAAI@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_EC7']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '8']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+Dst]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_FE1']
lea ['ecx,', '[ebp+var_24C]']
call ['??0AString@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['edx,', '[ebp+var_24C]']
push ['edx']
push ['9Bh']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?ReadString@NTar@NArchive@@YGXPBDIAAVAString@@@Z']
lea ['ecx,', '[ebp+var_24C]']
call ['?IsEmpty@AString@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_FCF']
mov ['ecx,', '[ebp+arg_8]']
call ['?IsUstarMagic@CItem@NTar@NArchive@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_FCF']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+68h]']
cmp ['ecx,', '4Ch']
jz ['loc_FCF']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['2Fh']
lea ['eax,', '[ebp+var_24C]']
push ['eax']
lea ['ecx,', '[ebp+var_2BC]']
push ['ecx']
call ['??H@YG?AVAString@@ABV0@D@Z']
mov ['[ebp+var_2D4],', 'eax']
mov ['edx,', '[ebp+var_2D4]']
mov ['[ebp+var_2D8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_2D8]']
push ['eax']
lea ['ecx,', '[ebp+var_2C8]']
push ['ecx']
call ['??H@YG?AVAString@@ABV0@0@Z']
mov ['[ebp+var_2DC],', 'eax']
mov ['edx,', '[ebp+var_2DC]']
mov ['[ebp+var_2E0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_2E0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??4AString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2C8]']
call ['??1AString@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2BC]']
call ['??1AString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24C]']
call ['??1AString@@QAE@XZ']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '9Bh']
mov ['[ebp+Dst],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+68h]']
cmp ['eax,', '31h']
jnz ['short', 'loc_1021']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['[ebp+var_254],', '0']
mov ['[ebp+var_258],', '0']
mov ['[ebp+var_25C],', '0']
jmp ['short', 'loc_1050']
mov ['eax,', '[ebp+var_25C]']
add ['eax,', '1']
mov ['[ebp+var_25C],', 'eax']
cmp ['[ebp+var_25C],', '200h']
jnb ['short', 'loc_109E']
mov ['ecx,', '[ebp+var_25C]']
mov ['dl,', '[ebp+ecx+var_214]']
mov ['[ebp+var_25D],', 'dl']
movsx ['eax,', '[ebp+var_25D]']
add ['eax,', '[ebp+var_258]']
mov ['[ebp+var_258],', 'eax']
mov ['ecx,', '[ebp+var_25C]']
movzx ['edx,', '[ebp+ecx+var_214]']
add ['edx,', '[ebp+var_254]']
mov ['[ebp+var_254],', 'edx']
jmp ['short', 'loc_1041']
mov ['eax,', '[ebp+var_254]']
cmp ['eax,', '[ebp+var_238]']
jz ['short', 'loc_10C1']
mov ['ecx,', '[ebp+var_258]']
cmp ['ecx,', '[ebp+var_238]']
jz ['short', 'loc_10C1']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+80h]']
add ['eax,', '200h']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+80h],', 'eax']
mov ['edx,', '[ebp+arg_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+68h]']
cmp ['eax,', '53h']
jnz ['loc_160D']
mov ['cl,', '[ebp+var_32]']
mov ['[ebp+var_25E],', 'cl']
movzx ['edx,', '[ebp+var_25E]']
test ['edx,', 'edx']
jz ['short', 'loc_110F']
movzx ['eax,', '[ebp+var_25E]']
cmp ['eax,', '1']
jz ['short', 'loc_110F']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '18h']
push ['ecx']
lea ['edx,', '[ebp+var_31]']
push ['edx']
call ['?ParseSize@NTar@NArchive@@YG_NPBDAA_K@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_112D']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['[ebp+var_268],', '0']
mov ['[ebp+var_264],', '0']
mov ['[ebp+var_26C],', '0']
jmp ['short', 'loc_115C']
mov ['ecx,', '[ebp+var_26C]']
add ['ecx,', '1']
mov ['[ebp+var_26C],', 'ecx']
cmp ['[ebp+var_26C],', '4']
jnb ['loc_1321']
mov ['edx,', '[ebp+var_26C]']
imul ['edx,', '18h']
lea ['eax,', '[ebp+edx+var_92]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx]']
bswap ['edx']
test ['edx,', 'edx']
jnz ['short', 'loc_11A4']
movzx ['eax,', '[ebp+var_25E]']
test ['eax,', 'eax']
jz ['short', 'loc_119F']
xor ['eax,', 'eax']
jmp ['loc_161E']
jmp ['loc_1321']
lea ['ecx,', '[ebp+var_280]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?ParseSize@NTar@NArchive@@YG_NPBDAA_K@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_11C5']
xor ['eax,', 'eax']
jmp ['loc_161E']
lea ['ecx,', '[ebp+var_278]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '0Ch']
push ['edx']
call ['?ParseSize@NTar@NArchive@@YG_NPBDAA_K@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_11E9']
xor ['eax,', 'eax']
jmp ['loc_161E']
sub ['esp,', '10h']
mov ['ecx,', 'esp']
mov ['edx,', '[ebp+var_280]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_27C]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_278]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_274]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '6Ch']
call ['?Add@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAEIUCSparseBlock@NTar@NArchive@@@Z']
mov ['ecx,', '[ebp+var_27C]']
cmp ['ecx,', '[ebp+var_264]']
jb ['short', 'loc_1267']
ja ['short', 'loc_123A']
mov ['edx,', '[ebp+var_280]']
cmp ['edx,', '[ebp+var_268]']
jb ['short', 'loc_1267']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_2E4],', 'eax']
mov ['ecx,', '[ebp+var_2E4]']
mov ['edx,', '[ebp+var_27C]']
cmp ['edx,', '[ecx+1Ch]']
jb ['short', 'loc_126E']
ja ['short', 'loc_1267']
mov ['eax,', '[ebp+var_2E4]']
mov ['ecx,', '[ebp+var_280]']
cmp ['ecx,', '[eax+18h]']
jbe ['short', 'loc_126E']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['edx,', '[ebp+var_280]']
and ['edx,', '1FFh']
mov ['eax,', '[ebp+var_27C]']
and ['eax,', '0']
mov ['[ebp+var_2EC],', 'edx']
mov ['[ebp+var_2E8],', 'eax']
mov ['ecx,', '[ebp+var_2EC]']
or ['ecx,', '[ebp+var_2E8]']
jnz ['short', 'loc_12CC']
mov ['edx,', '[ebp+var_278]']
and ['edx,', '1FFh']
mov ['eax,', '[ebp+var_274]']
and ['eax,', '0']
mov ['[ebp+var_2F4],', 'edx']
mov ['[ebp+var_2F0],', 'eax']
mov ['ecx,', '[ebp+var_2F4]']
or ['ecx,', '[ebp+var_2F0]']
jz ['short', 'loc_12D3']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['edx,', '[ebp+var_280]']
add ['edx,', '[ebp+var_278]']
mov ['eax,', '[ebp+var_27C]']
adc ['eax,', '[ebp+var_274]']
mov ['[ebp+var_268],', 'edx']
mov ['[ebp+var_264],', 'eax']
mov ['ecx,', '[ebp+var_264]']
cmp ['ecx,', '[ebp+var_27C]']
ja ['short', 'loc_131C']
jb ['short', 'loc_1315']
mov ['edx,', '[ebp+var_268]']
cmp ['edx,', '[ebp+var_280]']
jnb ['short', 'loc_131C']
xor ['eax,', 'eax']
jmp ['loc_161E']
jmp ['loc_114D']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_2F8],', 'eax']
mov ['ecx,', '[ebp+var_2F8]']
mov ['edx,', '[ebp+var_264]']
cmp ['edx,', '[ecx+1Ch]']
jb ['short', 'loc_1355']
ja ['short', 'loc_134E']
mov ['eax,', '[ebp+var_2F8]']
mov ['ecx,', '[ebp+var_268]']
cmp ['ecx,', '[eax+18h]']
jbe ['short', 'loc_1355']
xor ['eax,', 'eax']
jmp ['loc_161E']
movzx ['edx,', '[ebp+var_25E]']
test ['edx,', 'edx']
jz ['loc_15DC']
mov ['[ebp+var_28C],', '200h']
lea ['eax,', '[ebp+var_28C]']
push ['eax']
lea ['ecx,', '[ebp+var_214]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z']
mov ['[ebp+var_294],', 'eax']
cmp ['[ebp+var_294],', '0']
jz ['short', 'loc_139F']
mov ['eax,', '[ebp+var_294]']
jmp ['loc_161E']
cmp ['[ebp+var_28C],', '200h']
jz ['short', 'loc_13BB']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '2']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+80h]']
add ['edx,', '200h']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+80h],', 'edx']
mov ['cl,', '[ebp+var_1C]']
mov ['[ebp+var_25E],', 'cl']
movzx ['edx,', '[ebp+var_25E]']
test ['edx,', 'edx']
jz ['short', 'loc_13FA']
movzx ['eax,', '[ebp+var_25E]']
cmp ['eax,', '1']
jz ['short', 'loc_13FA']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['[ebp+var_298],', '0']
jmp ['short', 'loc_1415']
mov ['ecx,', '[ebp+var_298]']
add ['ecx,', '1']
mov ['[ebp+var_298],', 'ecx']
cmp ['[ebp+var_298],', '15h']
jnb ['loc_15D7']
mov ['edx,', '[ebp+var_298]']
imul ['edx,', '18h']
lea ['eax,', '[ebp+edx+var_214]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx]']
bswap ['edx']
test ['edx,', 'edx']
jnz ['short', 'loc_145D']
movzx ['eax,', '[ebp+var_25E]']
test ['eax,', 'eax']
jz ['short', 'loc_1458']
xor ['eax,', 'eax']
jmp ['loc_161E']
jmp ['loc_15D7']
lea ['ecx,', '[ebp+var_2AC]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?ParseSize@NTar@NArchive@@YG_NPBDAA_K@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_147E']
xor ['eax,', 'eax']
jmp ['loc_161E']
lea ['ecx,', '[ebp+var_2A4]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '0Ch']
push ['edx']
call ['?ParseSize@NTar@NArchive@@YG_NPBDAA_K@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_14A2']
xor ['eax,', 'eax']
jmp ['loc_161E']
sub ['esp,', '10h']
mov ['ecx,', 'esp']
mov ['edx,', '[ebp+var_2AC]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_2A8]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_2A4]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_2A0]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '6Ch']
call ['?Add@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAEIUCSparseBlock@NTar@NArchive@@@Z']
mov ['ecx,', '[ebp+var_2A8]']
cmp ['ecx,', '[ebp+var_264]']
jb ['short', 'loc_1520']
ja ['short', 'loc_14F3']
mov ['edx,', '[ebp+var_2AC]']
cmp ['edx,', '[ebp+var_268]']
jb ['short', 'loc_1520']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_2FC],', 'eax']
mov ['ecx,', '[ebp+var_2FC]']
mov ['edx,', '[ebp+var_2A8]']
cmp ['edx,', '[ecx+1Ch]']
jb ['short', 'loc_1527']
ja ['short', 'loc_1520']
mov ['eax,', '[ebp+var_2FC]']
mov ['ecx,', '[ebp+var_2AC]']
cmp ['ecx,', '[eax+18h]']
jbe ['short', 'loc_1527']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['edx,', '[ebp+var_2AC]']
and ['edx,', '1FFh']
mov ['eax,', '[ebp+var_2A8]']
and ['eax,', '0']
mov ['[ebp+var_304],', 'edx']
mov ['[ebp+var_300],', 'eax']
mov ['ecx,', '[ebp+var_304]']
or ['ecx,', '[ebp+var_300]']
jnz ['short', 'loc_1585']
mov ['edx,', '[ebp+var_2A4]']
and ['edx,', '1FFh']
mov ['eax,', '[ebp+var_2A0]']
and ['eax,', '0']
mov ['[ebp+var_30C],', 'edx']
mov ['[ebp+var_308],', 'eax']
mov ['ecx,', '[ebp+var_30C]']
or ['ecx,', '[ebp+var_308]']
jz ['short', 'loc_158C']
xor ['eax,', 'eax']
jmp ['loc_161E']
mov ['edx,', '[ebp+var_2AC]']
add ['edx,', '[ebp+var_2A4]']
mov ['eax,', '[ebp+var_2A8]']
adc ['eax,', '[ebp+var_2A0]']
mov ['[ebp+var_268],', 'edx']
mov ['[ebp+var_264],', 'eax']
mov ['ecx,', '[ebp+var_264]']
cmp ['ecx,', '[ebp+var_2A8]']
ja ['short', 'loc_15D2']
jb ['short', 'loc_15CE']
mov ['edx,', '[ebp+var_268]']
cmp ['edx,', '[ebp+var_2AC]']
jnb ['short', 'loc_15D2']
xor ['eax,', 'eax']
jmp ['short', 'loc_161E']
jmp ['loc_1406']
jmp ['loc_1355']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_310],', 'eax']
mov ['ecx,', '[ebp+var_310]']
mov ['edx,', '[ebp+var_264]']
cmp ['edx,', '[ecx+1Ch]']
jb ['short', 'loc_160D']
ja ['short', 'loc_1609']
mov ['eax,', '[ebp+var_310]']
mov ['ecx,', '[ebp+var_268]']
cmp ['ecx,', '[eax+18h]']
jbe ['short', 'loc_160D']
xor ['eax,', 'eax']
jmp ['short', 'loc_161E']
mov ['edx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[edx],', '1']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN89']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '310h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?IsRecordLast@NTar@NArchive@@YG_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_170D']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '200h']
jnb ['short', 'loc_1729']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_1727']
xor ['al,', 'al']
jmp ['short', 'loc_172B']
jmp ['short', 'loc_1704']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReadString@NTar@NArchive@@YGXPBDIAAVAString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '210h']
push ['edi']
lea ['edi,', '[ebp+var_210]']
mov ['ecx,', '84h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_20C]']
push ['edx']
call ['?MyStrNCpy@NTar@NArchive@@YGXPADPBDI@Z']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+eax+var_20C],', '0']
lea ['ecx,', '[ebp+var_20C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['??4AString@@QAEAAV0@PBD@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '210h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$?ReadItem@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?ReadItem@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z$1 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?ReadItem@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReadItem@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetNextItemReal@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z$0 proc near
lea ['ecx,', '[ebp-24Ch]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?GetNextItemReal@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z$1 proc near
lea ['ecx,', '[ebp-2BCh]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?GetNextItemReal@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z$2 proc near
lea ['ecx,', '[ebp-2C8h]']
jmp ['??1AString@@QAE@XZ']
endp
__ehhandler$?GetNextItemReal@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetNextItemReal@NTar@NArchive@@YGJPAUISequentialInStream@@AA_NAAUCItemEx@12@AAW4EErrorType@12@@Z']
jmp ['___CxxFrameHandler3']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetBuf@AString@@QAEPADI@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_1931']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReAlloc2@AString@@AAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ReleaseBuf_CalcLen@AString@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?MyStringLen@@YGIPBD@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyStringLen@@YGIPBD@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_19AD']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_19BC']
jmp ['short', 'loc_19A4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??9@YG_NABVAString@@PBD@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??BAString@@QBEPBDXZ']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetPackSizeAligned@CItem@NTar@NArchive@@QBE_KXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '1FFh']
mov ['edx,', '[eax+14h]']
adc ['edx,', '0']
and ['ecx,', '0FFFFFE00h']
mov ['eax,', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??H@YG?AVAString@@ABV0@D@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0AString@@AAE@ABV0@D@Z']
mov ['edx,', '[ebp+var_4]']
or ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Len@AString@@QBEIXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsEmpty@AString@@QBE_NXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['cl']
mov ['al,', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?IsUstarMagic@CItem@NTar@NArchive@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1AD9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '5']
jge ['short', 'loc_1AFD']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx+60h]']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', 'ds:?kUsTar_00@NMagic@NFileHeader@NTar@NArchive@@3QBDB[eax]']
cmp ['edx,', 'ecx']
jz ['short', 'loc_1AFB']
xor ['al,', 'al']
jmp ['short', 'loc_1AFF']
jmp ['short', 'loc_1AD0']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAEIUCSparseBlock@NTar@NArchive@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ReserveOnePosition@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@AAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?ReserveOnePosition@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Dst],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['loc_1C60']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx+1]']
mov ['[ebp+var_8],', 'ecx']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '10h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_1C3B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
shl ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+Dst]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

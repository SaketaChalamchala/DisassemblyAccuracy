_Sha1_Init@4    proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '67452301h']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '0EFCDAB89h']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '98BADCFEh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '10325476h']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+10h],', '0C3D2E1F0h']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
pop ['ebp']
retn ['4']
endp
_Sha1_GetBlockDigest@12 proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1ACh']
push ['edi']
lea ['edi,', '[ebp+var_1AC]']
mov ['ecx,', '6Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_164],', '0']
jmp ['short', 'loc_BD']
mov ['ecx,', '[ebp+var_164]']
add ['ecx,', '5']
mov ['[ebp+var_164],', 'ecx']
cmp ['[ebp+var_164],', '0Fh']
jnb ['loc_259']
mov ['edx,', '[ebp+var_164]']
mov ['eax,', '[ebp+var_164]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+eax*4]']
mov ['[ebp+edx*4+var_15C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_10]']
xor ['edx,', '[ebp+var_14]']
and ['edx,', '[ebp+var_C]']
xor ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_164]']
add ['edx,', '[ebp+eax*4+var_15C]']
add ['ecx,', '[ebp+var_18]']
lea ['ecx,', '[ecx+edx+5A827999h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '1Eh']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_164]']
mov ['ecx,', '[ebp+var_164]']
mov ['edx,', '[ebp+arg_4]']
mov ['ecx,', '[edx+ecx*4+4]']
mov ['[ebp+eax*4+var_158],', 'ecx']
mov ['edx,', '[ebp+var_18]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_C]']
xor ['eax,', '[ebp+var_10]']
and ['eax,', '[ebp+var_8]']
xor ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_164]']
add ['eax,', '[ebp+ecx*4+var_158]']
add ['edx,', '[ebp+var_14]']
lea ['edx,', '[edx+eax+5A827999h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
rol ['eax,', '1Eh']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_164]']
mov ['edx,', '[ebp+var_164]']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax+edx*4+8]']
mov ['[ebp+ecx*4+var_154],', 'edx']
mov ['eax,', '[ebp+var_14]']
rol ['eax,', '5']
mov ['ecx,', '[ebp+var_8]']
xor ['ecx,', '[ebp+var_C]']
and ['ecx,', '[ebp+var_18]']
xor ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_164]']
add ['ecx,', '[ebp+edx*4+var_154]']
add ['eax,', '[ebp+var_10]']
lea ['eax,', '[eax+ecx+5A827999h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_18]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_164]']
mov ['eax,', '[ebp+var_164]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+eax*4+0Ch]']
mov ['[ebp+edx*4+var_150],', 'eax']
mov ['ecx,', '[ebp+var_10]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_18]']
xor ['edx,', '[ebp+var_8]']
and ['edx,', '[ebp+var_14]']
xor ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_164]']
add ['edx,', '[ebp+eax*4+var_150]']
add ['ecx,', '[ebp+var_C]']
lea ['ecx,', '[ecx+edx+5A827999h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
rol ['edx,', '1Eh']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_164]']
mov ['ecx,', '[ebp+var_164]']
mov ['edx,', '[ebp+arg_4]']
mov ['ecx,', '[edx+ecx*4+10h]']
mov ['[ebp+eax*4+var_14C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_14]']
xor ['eax,', '[ebp+var_18]']
and ['eax,', '[ebp+var_10]']
xor ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_164]']
add ['eax,', '[ebp+ecx*4+var_14C]']
add ['edx,', '[ebp+var_8]']
lea ['edx,', '[edx+eax+5A827999h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_10]']
rol ['eax,', '1Eh']
mov ['[ebp+var_10],', 'eax']
jmp ['loc_AE']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+3Ch]']
mov ['[ebp+var_120],', 'edx']
mov ['eax,', '[ebp+var_8]']
rol ['eax,', '5']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', '[ebp+var_14]']
and ['ecx,', '[ebp+var_C]']
xor ['ecx,', '[ebp+var_14]']
add ['ecx,', '[ebp+var_120]']
add ['eax,', '[ebp+var_18]']
lea ['edx,', '[eax+ecx+5A827999h]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_C]']
rol ['eax,', '1Eh']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_128]']
xor ['ecx,', '[ebp+var_13C]']
xor ['ecx,', '[ebp+var_154]']
xor ['ecx,', '[ebp+var_15C]']
rol ['ecx,', '1']
mov ['[ebp+var_11C],', 'ecx']
mov ['edx,', '[ebp+var_18]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_C]']
xor ['eax,', '[ebp+var_10]']
and ['eax,', '[ebp+var_8]']
xor ['eax,', '[ebp+var_10]']
add ['eax,', '[ebp+var_11C]']
add ['edx,', '[ebp+var_14]']
lea ['ecx,', '[edx+eax+5A827999h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_8]']
rol ['edx,', '1Eh']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_124]']
xor ['eax,', '[ebp+var_138]']
xor ['eax,', '[ebp+var_150]']
xor ['eax,', '[ebp+var_158]']
rol ['eax,', '1']
mov ['[ebp+var_118],', 'eax']
mov ['ecx,', '[ebp+var_14]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_8]']
xor ['edx,', '[ebp+var_C]']
and ['edx,', '[ebp+var_18]']
xor ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_118]']
add ['ecx,', '[ebp+var_10]']
lea ['eax,', '[ecx+edx+5A827999h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_18]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_120]']
xor ['edx,', '[ebp+var_134]']
xor ['edx,', '[ebp+var_14C]']
xor ['edx,', '[ebp+var_154]']
rol ['edx,', '1']
mov ['[ebp+var_114],', 'edx']
mov ['eax,', '[ebp+var_10]']
rol ['eax,', '5']
mov ['ecx,', '[ebp+var_18]']
xor ['ecx,', '[ebp+var_8]']
and ['ecx,', '[ebp+var_14]']
xor ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_114]']
add ['eax,', '[ebp+var_C]']
lea ['edx,', '[eax+ecx+5A827999h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_14]']
rol ['eax,', '1Eh']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_11C]']
xor ['ecx,', '[ebp+var_130]']
xor ['ecx,', '[ebp+var_148]']
xor ['ecx,', '[ebp+var_150]']
rol ['ecx,', '1']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_14]']
xor ['eax,', '[ebp+var_18]']
and ['eax,', '[ebp+var_10]']
xor ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+var_110]']
add ['edx,', '[ebp+var_8]']
lea ['ecx,', '[edx+eax+5A827999h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
rol ['edx,', '1Eh']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_168],', '14h']
jmp ['short', 'loc_3E6']
mov ['eax,', '[ebp+var_168]']
add ['eax,', '5']
mov ['[ebp+var_168],', 'eax']
cmp ['[ebp+var_168],', '28h']
jnb ['loc_65A']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ebp+var_168]']
mov ['eax,', '[ebp+ecx*4+var_168]']
xor ['eax,', '[ebp+edx*4+var_17C]']
mov ['ecx,', '[ebp+var_168]']
xor ['eax,', '[ebp+ecx*4+var_194]']
mov ['edx,', '[ebp+var_168]']
xor ['eax,', '[ebp+edx*4+var_19C]']
rol ['eax,', '1']
mov ['[ebp+var_174],', 'eax']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[ebp+var_174]']
mov ['[ebp+eax*4+var_15C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_C]']
xor ['eax,', '[ebp+var_10]']
xor ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_174]']
add ['edx,', '[ebp+var_18]']
lea ['ecx,', '[edx+eax+6ED9EBA1h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '1Eh']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ebp+eax*4+var_164]']
xor ['edx,', '[ebp+ecx*4+var_178]']
mov ['eax,', '[ebp+var_168]']
xor ['edx,', '[ebp+eax*4+var_190]']
mov ['ecx,', '[ebp+var_168]']
xor ['edx,', '[ebp+ecx*4+var_198]']
rol ['edx,', '1']
mov ['[ebp+var_178],', 'edx']
mov ['edx,', '[ebp+var_168]']
mov ['eax,', '[ebp+var_178]']
mov ['[ebp+edx*4+var_158],', 'eax']
mov ['ecx,', '[ebp+var_18]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_8]']
xor ['edx,', '[ebp+var_C]']
xor ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_178]']
add ['ecx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx+6ED9EBA1h]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_168]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[ebp+edx*4+var_160]']
xor ['ecx,', '[ebp+eax*4+var_174]']
mov ['edx,', '[ebp+var_168]']
xor ['ecx,', '[ebp+edx*4+var_18C]']
mov ['eax,', '[ebp+var_168]']
xor ['ecx,', '[ebp+eax*4+var_194]']
rol ['ecx,', '1']
mov ['[ebp+var_17C],', 'ecx']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ebp+var_17C]']
mov ['[ebp+ecx*4+var_154],', 'edx']
mov ['eax,', '[ebp+var_14]']
rol ['eax,', '5']
mov ['ecx,', '[ebp+var_18]']
xor ['ecx,', '[ebp+var_8]']
xor ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_17C]']
add ['eax,', '[ebp+var_10]']
lea ['edx,', '[eax+ecx+6ED9EBA1h]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_18]']
rol ['eax,', '1Eh']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ebp+var_168]']
mov ['eax,', '[ebp+ecx*4+var_15C]']
xor ['eax,', '[ebp+edx*4+var_170]']
mov ['ecx,', '[ebp+var_168]']
xor ['eax,', '[ebp+ecx*4+var_188]']
mov ['edx,', '[ebp+var_168]']
xor ['eax,', '[ebp+edx*4+var_190]']
rol ['eax,', '1']
mov ['[ebp+var_180],', 'eax']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[ebp+var_180]']
mov ['[ebp+eax*4+var_150],', 'ecx']
mov ['edx,', '[ebp+var_10]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_14]']
xor ['eax,', '[ebp+var_18]']
xor ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_180]']
add ['edx,', '[ebp+var_C]']
lea ['ecx,', '[edx+eax+6ED9EBA1h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
rol ['edx,', '1Eh']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ebp+eax*4+var_158]']
xor ['edx,', '[ebp+ecx*4+var_16C]']
mov ['eax,', '[ebp+var_168]']
xor ['edx,', '[ebp+eax*4+var_184]']
mov ['ecx,', '[ebp+var_168]']
xor ['edx,', '[ebp+ecx*4+var_18C]']
rol ['edx,', '1']
mov ['[ebp+var_184],', 'edx']
mov ['edx,', '[ebp+var_168]']
mov ['eax,', '[ebp+var_184]']
mov ['[ebp+edx*4+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_10]']
xor ['edx,', '[ebp+var_14]']
xor ['edx,', '[ebp+var_18]']
add ['edx,', '[ebp+var_184]']
add ['ecx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx+6ED9EBA1h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_10],', 'ecx']
jmp ['loc_3D7']
mov ['[ebp+var_16C],', '28h']
jmp ['short', 'loc_675']
mov ['edx,', '[ebp+var_16C]']
add ['edx,', '5']
mov ['[ebp+var_16C],', 'edx']
cmp ['[ebp+var_16C],', '3Ch']
jnb ['loc_911']
mov ['eax,', '[ebp+var_16C]']
mov ['ecx,', '[ebp+var_16C]']
mov ['edx,', '[ebp+eax*4+var_168]']
xor ['edx,', '[ebp+ecx*4+var_17C]']
mov ['eax,', '[ebp+var_16C]']
xor ['edx,', '[ebp+eax*4+var_194]']
mov ['ecx,', '[ebp+var_16C]']
xor ['edx,', '[ebp+ecx*4+var_19C]']
rol ['edx,', '1']
mov ['[ebp+var_188],', 'edx']
mov ['edx,', '[ebp+var_16C]']
mov ['eax,', '[ebp+var_188]']
mov ['[ebp+edx*4+var_15C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_C]']
or ['edx,', '[ebp+var_10]']
and ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '[ebp+var_10]']
or ['eax,', 'edx']
add ['eax,', '[ebp+var_188]']
add ['ecx,', '[ebp+var_18]']
lea ['ecx,', '[ecx+eax-70E44324h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '1Eh']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_16C]']
mov ['ecx,', '[ebp+var_16C]']
mov ['edx,', '[ebp+eax*4+var_164]']
xor ['edx,', '[ebp+ecx*4+var_178]']
mov ['eax,', '[ebp+var_16C]']
xor ['edx,', '[ebp+eax*4+var_190]']
mov ['ecx,', '[ebp+var_16C]']
xor ['edx,', '[ebp+ecx*4+var_198]']
rol ['edx,', '1']
mov ['[ebp+var_18C],', 'edx']
mov ['edx,', '[ebp+var_16C]']
mov ['eax,', '[ebp+var_18C]']
mov ['[ebp+edx*4+var_158],', 'eax']
mov ['ecx,', '[ebp+var_18]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_8]']
or ['edx,', '[ebp+var_C]']
and ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '[ebp+var_C]']
or ['eax,', 'edx']
add ['eax,', '[ebp+var_18C]']
add ['ecx,', '[ebp+var_14]']
lea ['ecx,', '[ecx+eax-70E44324h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_8]']
rol ['edx,', '1Eh']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_16C]']
mov ['ecx,', '[ebp+var_16C]']
mov ['edx,', '[ebp+eax*4+var_160]']
xor ['edx,', '[ebp+ecx*4+var_174]']
mov ['eax,', '[ebp+var_16C]']
xor ['edx,', '[ebp+eax*4+var_18C]']
mov ['ecx,', '[ebp+var_16C]']
xor ['edx,', '[ebp+ecx*4+var_194]']
rol ['edx,', '1']
mov ['[ebp+var_190],', 'edx']
mov ['edx,', '[ebp+var_16C]']
mov ['eax,', '[ebp+var_190]']
mov ['[ebp+edx*4+var_154],', 'eax']
mov ['ecx,', '[ebp+var_14]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_18]']
or ['edx,', '[ebp+var_8]']
and ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '[ebp+var_8]']
or ['eax,', 'edx']
add ['eax,', '[ebp+var_190]']
add ['ecx,', '[ebp+var_10]']
lea ['ecx,', '[ecx+eax-70E44324h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_18]']
rol ['edx,', '1Eh']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_16C]']
mov ['ecx,', '[ebp+var_16C]']
mov ['edx,', '[ebp+eax*4+var_15C]']
xor ['edx,', '[ebp+ecx*4+var_170]']
mov ['eax,', '[ebp+var_16C]']
xor ['edx,', '[ebp+eax*4+var_188]']
mov ['ecx,', '[ebp+var_16C]']
xor ['edx,', '[ebp+ecx*4+var_190]']
rol ['edx,', '1']
mov ['[ebp+var_194],', 'edx']
mov ['edx,', '[ebp+var_16C]']
mov ['eax,', '[ebp+var_194]']
mov ['[ebp+edx*4+var_150],', 'eax']
mov ['ecx,', '[ebp+var_10]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_14]']
or ['edx,', '[ebp+var_18]']
and ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '[ebp+var_18]']
or ['eax,', 'edx']
add ['eax,', '[ebp+var_194]']
add ['ecx,', '[ebp+var_C]']
lea ['ecx,', '[ecx+eax-70E44324h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
rol ['edx,', '1Eh']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_16C]']
mov ['ecx,', '[ebp+var_16C]']
mov ['edx,', '[ebp+eax*4+var_158]']
xor ['edx,', '[ebp+ecx*4+var_16C]']
mov ['eax,', '[ebp+var_16C]']
xor ['edx,', '[ebp+eax*4+var_184]']
mov ['ecx,', '[ebp+var_16C]']
xor ['edx,', '[ebp+ecx*4+var_18C]']
rol ['edx,', '1']
mov ['[ebp+var_198],', 'edx']
mov ['edx,', '[ebp+var_16C]']
mov ['eax,', '[ebp+var_198]']
mov ['[ebp+edx*4+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '[ebp+var_14]']
and ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_10]']
and ['eax,', '[ebp+var_14]']
or ['eax,', 'edx']
add ['eax,', '[ebp+var_198]']
add ['ecx,', '[ebp+var_8]']
lea ['ecx,', '[ecx+eax-70E44324h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
rol ['edx,', '1Eh']
mov ['[ebp+var_10],', 'edx']
jmp ['loc_666']
mov ['[ebp+var_170],', '3Ch']
jmp ['short', 'loc_92C']
mov ['eax,', '[ebp+var_170]']
add ['eax,', '5']
mov ['[ebp+var_170],', 'eax']
cmp ['[ebp+var_170],', '50h']
jnb ['loc_BA0']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[ebp+ecx*4+var_168]']
xor ['eax,', '[ebp+edx*4+var_17C]']
mov ['ecx,', '[ebp+var_170]']
xor ['eax,', '[ebp+ecx*4+var_194]']
mov ['edx,', '[ebp+var_170]']
xor ['eax,', '[ebp+edx*4+var_19C]']
rol ['eax,', '1']
mov ['[ebp+var_19C],', 'eax']
mov ['eax,', '[ebp+var_170]']
mov ['ecx,', '[ebp+var_19C]']
mov ['[ebp+eax*4+var_15C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_C]']
xor ['eax,', '[ebp+var_10]']
xor ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_19C]']
add ['edx,', '[ebp+var_18]']
lea ['ecx,', '[edx+eax-359D3E2Ah]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '1Eh']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_170]']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ebp+eax*4+var_164]']
xor ['edx,', '[ebp+ecx*4+var_178]']
mov ['eax,', '[ebp+var_170]']
xor ['edx,', '[ebp+eax*4+var_190]']
mov ['ecx,', '[ebp+var_170]']
xor ['edx,', '[ebp+ecx*4+var_198]']
rol ['edx,', '1']
mov ['[ebp+var_1A0],', 'edx']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[ebp+var_1A0]']
mov ['[ebp+edx*4+var_158],', 'eax']
mov ['ecx,', '[ebp+var_18]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_8]']
xor ['edx,', '[ebp+var_C]']
xor ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_1A0]']
add ['ecx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx-359D3E2Ah]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[ebp+var_170]']
mov ['ecx,', '[ebp+edx*4+var_160]']
xor ['ecx,', '[ebp+eax*4+var_174]']
mov ['edx,', '[ebp+var_170]']
xor ['ecx,', '[ebp+edx*4+var_18C]']
mov ['eax,', '[ebp+var_170]']
xor ['ecx,', '[ebp+eax*4+var_194]']
rol ['ecx,', '1']
mov ['[ebp+var_1A4],', 'ecx']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ebp+var_1A4]']
mov ['[ebp+ecx*4+var_154],', 'edx']
mov ['eax,', '[ebp+var_14]']
rol ['eax,', '5']
mov ['ecx,', '[ebp+var_18]']
xor ['ecx,', '[ebp+var_8]']
xor ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_1A4]']
add ['eax,', '[ebp+var_10]']
lea ['edx,', '[eax+ecx-359D3E2Ah]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_18]']
rol ['eax,', '1Eh']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[ebp+ecx*4+var_15C]']
xor ['eax,', '[ebp+edx*4+var_170]']
mov ['ecx,', '[ebp+var_170]']
xor ['eax,', '[ebp+ecx*4+var_188]']
mov ['edx,', '[ebp+var_170]']
xor ['eax,', '[ebp+edx*4+var_190]']
rol ['eax,', '1']
mov ['[ebp+var_1A8],', 'eax']
mov ['eax,', '[ebp+var_170]']
mov ['ecx,', '[ebp+var_1A8]']
mov ['[ebp+eax*4+var_150],', 'ecx']
mov ['edx,', '[ebp+var_10]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_14]']
xor ['eax,', '[ebp+var_18]']
xor ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_1A8]']
add ['edx,', '[ebp+var_C]']
lea ['ecx,', '[edx+eax-359D3E2Ah]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
rol ['edx,', '1Eh']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_170]']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ebp+eax*4+var_158]']
xor ['edx,', '[ebp+ecx*4+var_16C]']
mov ['eax,', '[ebp+var_170]']
xor ['edx,', '[ebp+eax*4+var_184]']
mov ['ecx,', '[ebp+var_170]']
xor ['edx,', '[ebp+ecx*4+var_18C]']
rol ['edx,', '1']
mov ['[ebp+var_1AC],', 'edx']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[ebp+var_1AC]']
mov ['[ebp+edx*4+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_10]']
xor ['edx,', '[ebp+var_14]']
xor ['edx,', '[ebp+var_18]']
add ['edx,', '[ebp+var_1AC]']
add ['ecx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx-359D3E2Ah]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_10],', 'ecx']
jmp ['loc_91D']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
add ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
add ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+10h],', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
_Sha1_UpdateBlock_Rar@12 proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1B0h']
push ['edi']
lea ['edi,', '[ebp+var_1B0]']
mov ['ecx,', '6Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_164],', '0']
jmp ['short', 'loc_C9D']
mov ['ecx,', '[ebp+var_164]']
add ['ecx,', '5']
mov ['[ebp+var_164],', 'ecx']
cmp ['[ebp+var_164],', '0Fh']
jnb ['loc_E39']
mov ['edx,', '[ebp+var_164]']
mov ['eax,', '[ebp+var_164]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+eax*4]']
mov ['[ebp+edx*4+var_15C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_10]']
xor ['edx,', '[ebp+var_14]']
and ['edx,', '[ebp+var_C]']
xor ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_164]']
add ['edx,', '[ebp+eax*4+var_15C]']
add ['ecx,', '[ebp+var_18]']
lea ['ecx,', '[ecx+edx+5A827999h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '1Eh']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_164]']
mov ['ecx,', '[ebp+var_164]']
mov ['edx,', '[ebp+arg_4]']
mov ['ecx,', '[edx+ecx*4+4]']
mov ['[ebp+eax*4+var_158],', 'ecx']
mov ['edx,', '[ebp+var_18]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_C]']
xor ['eax,', '[ebp+var_10]']
and ['eax,', '[ebp+var_8]']
xor ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_164]']
add ['eax,', '[ebp+ecx*4+var_158]']
add ['edx,', '[ebp+var_14]']
lea ['edx,', '[edx+eax+5A827999h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
rol ['eax,', '1Eh']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_164]']
mov ['edx,', '[ebp+var_164]']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax+edx*4+8]']
mov ['[ebp+ecx*4+var_154],', 'edx']
mov ['eax,', '[ebp+var_14]']
rol ['eax,', '5']
mov ['ecx,', '[ebp+var_8]']
xor ['ecx,', '[ebp+var_C]']
and ['ecx,', '[ebp+var_18]']
xor ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_164]']
add ['ecx,', '[ebp+edx*4+var_154]']
add ['eax,', '[ebp+var_10]']
lea ['eax,', '[eax+ecx+5A827999h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_18]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_164]']
mov ['eax,', '[ebp+var_164]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+eax*4+0Ch]']
mov ['[ebp+edx*4+var_150],', 'eax']
mov ['ecx,', '[ebp+var_10]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_18]']
xor ['edx,', '[ebp+var_8]']
and ['edx,', '[ebp+var_14]']
xor ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_164]']
add ['edx,', '[ebp+eax*4+var_150]']
add ['ecx,', '[ebp+var_C]']
lea ['ecx,', '[ecx+edx+5A827999h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
rol ['edx,', '1Eh']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_164]']
mov ['ecx,', '[ebp+var_164]']
mov ['edx,', '[ebp+arg_4]']
mov ['ecx,', '[edx+ecx*4+10h]']
mov ['[ebp+eax*4+var_14C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_14]']
xor ['eax,', '[ebp+var_18]']
and ['eax,', '[ebp+var_10]']
xor ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_164]']
add ['eax,', '[ebp+ecx*4+var_14C]']
add ['edx,', '[ebp+var_8]']
lea ['edx,', '[edx+eax+5A827999h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_10]']
rol ['eax,', '1Eh']
mov ['[ebp+var_10],', 'eax']
jmp ['loc_C8E']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+3Ch]']
mov ['[ebp+var_120],', 'edx']
mov ['eax,', '[ebp+var_8]']
rol ['eax,', '5']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', '[ebp+var_14]']
and ['ecx,', '[ebp+var_C]']
xor ['ecx,', '[ebp+var_14]']
add ['ecx,', '[ebp+var_120]']
add ['eax,', '[ebp+var_18]']
lea ['edx,', '[eax+ecx+5A827999h]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_C]']
rol ['eax,', '1Eh']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_128]']
xor ['ecx,', '[ebp+var_13C]']
xor ['ecx,', '[ebp+var_154]']
xor ['ecx,', '[ebp+var_15C]']
rol ['ecx,', '1']
mov ['[ebp+var_11C],', 'ecx']
mov ['edx,', '[ebp+var_18]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_C]']
xor ['eax,', '[ebp+var_10]']
and ['eax,', '[ebp+var_8]']
xor ['eax,', '[ebp+var_10]']
add ['eax,', '[ebp+var_11C]']
add ['edx,', '[ebp+var_14]']
lea ['ecx,', '[edx+eax+5A827999h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_8]']
rol ['edx,', '1Eh']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_124]']
xor ['eax,', '[ebp+var_138]']
xor ['eax,', '[ebp+var_150]']
xor ['eax,', '[ebp+var_158]']
rol ['eax,', '1']
mov ['[ebp+var_118],', 'eax']
mov ['ecx,', '[ebp+var_14]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_8]']
xor ['edx,', '[ebp+var_C]']
and ['edx,', '[ebp+var_18]']
xor ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_118]']
add ['ecx,', '[ebp+var_10]']
lea ['eax,', '[ecx+edx+5A827999h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_18]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_120]']
xor ['edx,', '[ebp+var_134]']
xor ['edx,', '[ebp+var_14C]']
xor ['edx,', '[ebp+var_154]']
rol ['edx,', '1']
mov ['[ebp+var_114],', 'edx']
mov ['eax,', '[ebp+var_10]']
rol ['eax,', '5']
mov ['ecx,', '[ebp+var_18]']
xor ['ecx,', '[ebp+var_8]']
and ['ecx,', '[ebp+var_14]']
xor ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_114]']
add ['eax,', '[ebp+var_C]']
lea ['edx,', '[eax+ecx+5A827999h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_14]']
rol ['eax,', '1Eh']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_11C]']
xor ['ecx,', '[ebp+var_130]']
xor ['ecx,', '[ebp+var_148]']
xor ['ecx,', '[ebp+var_150]']
rol ['ecx,', '1']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_14]']
xor ['eax,', '[ebp+var_18]']
and ['eax,', '[ebp+var_10]']
xor ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+var_110]']
add ['edx,', '[ebp+var_8]']
lea ['ecx,', '[edx+eax+5A827999h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
rol ['edx,', '1Eh']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_168],', '14h']
jmp ['short', 'loc_FC6']
mov ['eax,', '[ebp+var_168]']
add ['eax,', '5']
mov ['[ebp+var_168],', 'eax']
cmp ['[ebp+var_168],', '28h']
jnb ['loc_123A']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ebp+var_168]']
mov ['eax,', '[ebp+ecx*4+var_168]']
xor ['eax,', '[ebp+edx*4+var_17C]']
mov ['ecx,', '[ebp+var_168]']
xor ['eax,', '[ebp+ecx*4+var_194]']
mov ['edx,', '[ebp+var_168]']
xor ['eax,', '[ebp+edx*4+var_19C]']
rol ['eax,', '1']
mov ['[ebp+var_178],', 'eax']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[ebp+var_178]']
mov ['[ebp+eax*4+var_15C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_C]']
xor ['eax,', '[ebp+var_10]']
xor ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_178]']
add ['edx,', '[ebp+var_18]']
lea ['ecx,', '[edx+eax+6ED9EBA1h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '1Eh']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ebp+eax*4+var_164]']
xor ['edx,', '[ebp+ecx*4+var_178]']
mov ['eax,', '[ebp+var_168]']
xor ['edx,', '[ebp+eax*4+var_190]']
mov ['ecx,', '[ebp+var_168]']
xor ['edx,', '[ebp+ecx*4+var_198]']
rol ['edx,', '1']
mov ['[ebp+var_17C],', 'edx']
mov ['edx,', '[ebp+var_168]']
mov ['eax,', '[ebp+var_17C]']
mov ['[ebp+edx*4+var_158],', 'eax']
mov ['ecx,', '[ebp+var_18]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_8]']
xor ['edx,', '[ebp+var_C]']
xor ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_17C]']
add ['ecx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx+6ED9EBA1h]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_168]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[ebp+edx*4+var_160]']
xor ['ecx,', '[ebp+eax*4+var_174]']
mov ['edx,', '[ebp+var_168]']
xor ['ecx,', '[ebp+edx*4+var_18C]']
mov ['eax,', '[ebp+var_168]']
xor ['ecx,', '[ebp+eax*4+var_194]']
rol ['ecx,', '1']
mov ['[ebp+var_180],', 'ecx']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ebp+var_180]']
mov ['[ebp+ecx*4+var_154],', 'edx']
mov ['eax,', '[ebp+var_14]']
rol ['eax,', '5']
mov ['ecx,', '[ebp+var_18]']
xor ['ecx,', '[ebp+var_8]']
xor ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_180]']
add ['eax,', '[ebp+var_10]']
lea ['edx,', '[eax+ecx+6ED9EBA1h]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_18]']
rol ['eax,', '1Eh']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ebp+var_168]']
mov ['eax,', '[ebp+ecx*4+var_15C]']
xor ['eax,', '[ebp+edx*4+var_170]']
mov ['ecx,', '[ebp+var_168]']
xor ['eax,', '[ebp+ecx*4+var_188]']
mov ['edx,', '[ebp+var_168]']
xor ['eax,', '[ebp+edx*4+var_190]']
rol ['eax,', '1']
mov ['[ebp+var_184],', 'eax']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[ebp+var_184]']
mov ['[ebp+eax*4+var_150],', 'ecx']
mov ['edx,', '[ebp+var_10]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_14]']
xor ['eax,', '[ebp+var_18]']
xor ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_184]']
add ['edx,', '[ebp+var_C]']
lea ['ecx,', '[edx+eax+6ED9EBA1h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
rol ['edx,', '1Eh']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[ebp+eax*4+var_158]']
xor ['edx,', '[ebp+ecx*4+var_16C]']
mov ['eax,', '[ebp+var_168]']
xor ['edx,', '[ebp+eax*4+var_184]']
mov ['ecx,', '[ebp+var_168]']
xor ['edx,', '[ebp+ecx*4+var_18C]']
rol ['edx,', '1']
mov ['[ebp+var_188],', 'edx']
mov ['edx,', '[ebp+var_168]']
mov ['eax,', '[ebp+var_188]']
mov ['[ebp+edx*4+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_10]']
xor ['edx,', '[ebp+var_14]']
xor ['edx,', '[ebp+var_18]']
add ['edx,', '[ebp+var_188]']
add ['ecx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx+6ED9EBA1h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_10],', 'ecx']
jmp ['loc_FB7']
mov ['[ebp+var_16C],', '28h']
jmp ['short', 'loc_1255']
mov ['edx,', '[ebp+var_16C]']
add ['edx,', '5']
mov ['[ebp+var_16C],', 'edx']
cmp ['[ebp+var_16C],', '3Ch']
jnb ['loc_14F1']
mov ['eax,', '[ebp+var_16C]']
mov ['ecx,', '[ebp+var_16C]']
mov ['edx,', '[ebp+eax*4+var_168]']
xor ['edx,', '[ebp+ecx*4+var_17C]']
mov ['eax,', '[ebp+var_16C]']
xor ['edx,', '[ebp+eax*4+var_194]']
mov ['ecx,', '[ebp+var_16C]']
xor ['edx,', '[ebp+ecx*4+var_19C]']
rol ['edx,', '1']
mov ['[ebp+var_18C],', 'edx']
mov ['edx,', '[ebp+var_16C]']
mov ['eax,', '[ebp+var_18C]']
mov ['[ebp+edx*4+var_15C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_C]']
or ['edx,', '[ebp+var_10]']
and ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '[ebp+var_10]']
or ['eax,', 'edx']
add ['eax,', '[ebp+var_18C]']
add ['ecx,', '[ebp+var_18]']
lea ['ecx,', '[ecx+eax-70E44324h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '1Eh']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_16C]']
mov ['ecx,', '[ebp+var_16C]']
mov ['edx,', '[ebp+eax*4+var_164]']
xor ['edx,', '[ebp+ecx*4+var_178]']
mov ['eax,', '[ebp+var_16C]']
xor ['edx,', '[ebp+eax*4+var_190]']
mov ['ecx,', '[ebp+var_16C]']
xor ['edx,', '[ebp+ecx*4+var_198]']
rol ['edx,', '1']
mov ['[ebp+var_190],', 'edx']
mov ['edx,', '[ebp+var_16C]']
mov ['eax,', '[ebp+var_190]']
mov ['[ebp+edx*4+var_158],', 'eax']
mov ['ecx,', '[ebp+var_18]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_8]']
or ['edx,', '[ebp+var_C]']
and ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '[ebp+var_C]']
or ['eax,', 'edx']
add ['eax,', '[ebp+var_190]']
add ['ecx,', '[ebp+var_14]']
lea ['ecx,', '[ecx+eax-70E44324h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_8]']
rol ['edx,', '1Eh']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_16C]']
mov ['ecx,', '[ebp+var_16C]']
mov ['edx,', '[ebp+eax*4+var_160]']
xor ['edx,', '[ebp+ecx*4+var_174]']
mov ['eax,', '[ebp+var_16C]']
xor ['edx,', '[ebp+eax*4+var_18C]']
mov ['ecx,', '[ebp+var_16C]']
xor ['edx,', '[ebp+ecx*4+var_194]']
rol ['edx,', '1']
mov ['[ebp+var_194],', 'edx']
mov ['edx,', '[ebp+var_16C]']
mov ['eax,', '[ebp+var_194]']
mov ['[ebp+edx*4+var_154],', 'eax']
mov ['ecx,', '[ebp+var_14]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_18]']
or ['edx,', '[ebp+var_8]']
and ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '[ebp+var_8]']
or ['eax,', 'edx']
add ['eax,', '[ebp+var_194]']
add ['ecx,', '[ebp+var_10]']
lea ['ecx,', '[ecx+eax-70E44324h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_18]']
rol ['edx,', '1Eh']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_16C]']
mov ['ecx,', '[ebp+var_16C]']
mov ['edx,', '[ebp+eax*4+var_15C]']
xor ['edx,', '[ebp+ecx*4+var_170]']
mov ['eax,', '[ebp+var_16C]']
xor ['edx,', '[ebp+eax*4+var_188]']
mov ['ecx,', '[ebp+var_16C]']
xor ['edx,', '[ebp+ecx*4+var_190]']
rol ['edx,', '1']
mov ['[ebp+var_198],', 'edx']
mov ['edx,', '[ebp+var_16C]']
mov ['eax,', '[ebp+var_198]']
mov ['[ebp+edx*4+var_150],', 'eax']
mov ['ecx,', '[ebp+var_10]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_14]']
or ['edx,', '[ebp+var_18]']
and ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '[ebp+var_18]']
or ['eax,', 'edx']
add ['eax,', '[ebp+var_198]']
add ['ecx,', '[ebp+var_C]']
lea ['ecx,', '[ecx+eax-70E44324h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
rol ['edx,', '1Eh']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_16C]']
mov ['ecx,', '[ebp+var_16C]']
mov ['edx,', '[ebp+eax*4+var_158]']
xor ['edx,', '[ebp+ecx*4+var_16C]']
mov ['eax,', '[ebp+var_16C]']
xor ['edx,', '[ebp+eax*4+var_184]']
mov ['ecx,', '[ebp+var_16C]']
xor ['edx,', '[ebp+ecx*4+var_18C]']
rol ['edx,', '1']
mov ['[ebp+var_19C],', 'edx']
mov ['edx,', '[ebp+var_16C]']
mov ['eax,', '[ebp+var_19C]']
mov ['[ebp+edx*4+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '[ebp+var_14]']
and ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_10]']
and ['eax,', '[ebp+var_14]']
or ['eax,', 'edx']
add ['eax,', '[ebp+var_19C]']
add ['ecx,', '[ebp+var_8]']
lea ['ecx,', '[ecx+eax-70E44324h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
rol ['edx,', '1Eh']
mov ['[ebp+var_10],', 'edx']
jmp ['loc_1246']
mov ['[ebp+var_170],', '3Ch']
jmp ['short', 'loc_150C']
mov ['eax,', '[ebp+var_170]']
add ['eax,', '5']
mov ['[ebp+var_170],', 'eax']
cmp ['[ebp+var_170],', '50h']
jnb ['loc_1780']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[ebp+ecx*4+var_168]']
xor ['eax,', '[ebp+edx*4+var_17C]']
mov ['ecx,', '[ebp+var_170]']
xor ['eax,', '[ebp+ecx*4+var_194]']
mov ['edx,', '[ebp+var_170]']
xor ['eax,', '[ebp+edx*4+var_19C]']
rol ['eax,', '1']
mov ['[ebp+var_1A0],', 'eax']
mov ['eax,', '[ebp+var_170]']
mov ['ecx,', '[ebp+var_1A0]']
mov ['[ebp+eax*4+var_15C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_C]']
xor ['eax,', '[ebp+var_10]']
xor ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_1A0]']
add ['edx,', '[ebp+var_18]']
lea ['ecx,', '[edx+eax-359D3E2Ah]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_C]']
rol ['edx,', '1Eh']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_170]']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ebp+eax*4+var_164]']
xor ['edx,', '[ebp+ecx*4+var_178]']
mov ['eax,', '[ebp+var_170]']
xor ['edx,', '[ebp+eax*4+var_190]']
mov ['ecx,', '[ebp+var_170]']
xor ['edx,', '[ebp+ecx*4+var_198]']
rol ['edx,', '1']
mov ['[ebp+var_1A4],', 'edx']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[ebp+var_1A4]']
mov ['[ebp+edx*4+var_158],', 'eax']
mov ['ecx,', '[ebp+var_18]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_8]']
xor ['edx,', '[ebp+var_C]']
xor ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_1A4]']
add ['ecx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx-359D3E2Ah]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[ebp+var_170]']
mov ['ecx,', '[ebp+edx*4+var_160]']
xor ['ecx,', '[ebp+eax*4+var_174]']
mov ['edx,', '[ebp+var_170]']
xor ['ecx,', '[ebp+edx*4+var_18C]']
mov ['eax,', '[ebp+var_170]']
xor ['ecx,', '[ebp+eax*4+var_194]']
rol ['ecx,', '1']
mov ['[ebp+var_1A8],', 'ecx']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ebp+var_1A8]']
mov ['[ebp+ecx*4+var_154],', 'edx']
mov ['eax,', '[ebp+var_14]']
rol ['eax,', '5']
mov ['ecx,', '[ebp+var_18]']
xor ['ecx,', '[ebp+var_8]']
xor ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_1A8]']
add ['eax,', '[ebp+var_10]']
lea ['edx,', '[eax+ecx-359D3E2Ah]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_18]']
rol ['eax,', '1Eh']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[ebp+ecx*4+var_15C]']
xor ['eax,', '[ebp+edx*4+var_170]']
mov ['ecx,', '[ebp+var_170]']
xor ['eax,', '[ebp+ecx*4+var_188]']
mov ['edx,', '[ebp+var_170]']
xor ['eax,', '[ebp+edx*4+var_190]']
rol ['eax,', '1']
mov ['[ebp+var_1AC],', 'eax']
mov ['eax,', '[ebp+var_170]']
mov ['ecx,', '[ebp+var_1AC]']
mov ['[ebp+eax*4+var_150],', 'ecx']
mov ['edx,', '[ebp+var_10]']
rol ['edx,', '5']
mov ['eax,', '[ebp+var_14]']
xor ['eax,', '[ebp+var_18]']
xor ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_1AC]']
add ['edx,', '[ebp+var_C]']
lea ['ecx,', '[edx+eax-359D3E2Ah]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
rol ['edx,', '1Eh']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_170]']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ebp+eax*4+var_158]']
xor ['edx,', '[ebp+ecx*4+var_16C]']
mov ['eax,', '[ebp+var_170]']
xor ['edx,', '[ebp+eax*4+var_184]']
mov ['ecx,', '[ebp+var_170]']
xor ['edx,', '[ebp+ecx*4+var_18C]']
rol ['edx,', '1']
mov ['[ebp+var_1B0],', 'edx']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[ebp+var_1B0]']
mov ['[ebp+edx*4+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
rol ['ecx,', '5']
mov ['edx,', '[ebp+var_10]']
xor ['edx,', '[ebp+var_14]']
xor ['edx,', '[ebp+var_18]']
add ['edx,', '[ebp+var_1B0]']
add ['ecx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx-359D3E2Ah]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
rol ['ecx,', '1Eh']
mov ['[ebp+var_10],', 'ecx']
jmp ['loc_14FD']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
add ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
add ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_180B']
mov ['[ebp+var_174],', '0']
jmp ['short', 'loc_17EA']
mov ['edx,', '[ebp+var_174]']
add ['edx,', '1']
mov ['[ebp+var_174],', 'edx']
cmp ['[ebp+var_174],', '10h']
jnb ['short', 'loc_180B']
mov ['eax,', '[ebp+var_174]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_174]']
mov ['edx,', '[ebp+edx*4+var_5C]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_17DB']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
_Sha1_Update@12 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_1875']
jmp ['loc_1A3F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
and ['ecx,', '3Fh']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+18h]']
adc ['eax,', '[ecx+1Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+18h],', 'edx']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
and ['edx,', '3']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
shr ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['loc_1941']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
shl ['edx,', '18h']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jz ['short', 'loc_190B']
cmp ['[ebp+var_8],', '3']
jnb ['short', 'loc_190B']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
shl ['edx,', '10h']
or ['edx,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jz ['short', 'loc_190B']
cmp ['[ebp+var_8],', '2']
jnb ['short', 'loc_190B']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
shl ['edx,', '8']
or ['edx,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '4']
sub ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '3']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
or ['edx,', '[ecx+eax*4+20h]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*4+20h],', 'edx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '10h']
jnz ['short', 'loc_19BB']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_Sha1_GetBlockDigest@12']
cmp ['[ebp+arg_8],', '40h']
jnb ['short', 'loc_1963']
jmp ['short', 'loc_19B4']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '40h']
mov ['[ebp+arg_8],', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_197E']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '10h']
jnb ['short', 'loc_19B2']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
bswap ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*4+20h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
bswap ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+edx*4+24h],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '8']
mov ['[ebp+arg_4],', 'ecx']
jmp ['short', 'loc_1975']
jmp ['short', 'loc_1947']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_8],', '4']
jnb ['short', 'loc_19C3']
jmp ['short', 'loc_19F4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
bswap ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*4+20h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '4']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
jmp ['loc_1941']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_1A3F']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '18h']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+arg_8],', '1']
jbe ['short', 'loc_1A32']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
shl ['eax,', '10h']
or ['eax,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_8],', '2']
jbe ['short', 'loc_1A32']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
shl ['edx,', '8']
or ['edx,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+eax*4+20h],', 'edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
_Sha1_Update_Rar@16 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
and ['ecx,', '3Fh']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+18h]']
adc ['eax,', '[ecx+1Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+18h],', 'edx']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['loc_1B85']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '3']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '3']
sub ['ecx,', '[ebp+var_C]']
shl ['ecx,', '3']
shl ['eax,', 'cl']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*4+20h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_1B0A']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_1AA0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
or ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_8],', '40h']
jnz ['short', 'loc_1B80']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_Sha1_UpdateBlock_Rar@12']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1B7A']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_1B50']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '10h']
jnb ['short', 'loc_1B7A']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4+20h]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*4-40h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_1B47']
mov ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'edx']
jmp ['loc_1AA0']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
_Sha1_Final@8   proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
and ['ecx,', '3Fh']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
and ['edx,', '3']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
shr ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1BF8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4+20h]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '3']
mov ['edx,', '80000000h']
shr ['edx,', 'cl']
or ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*4+20h],', 'edx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '0Eh']
jz ['short', 'loc_1C59']
mov ['eax,', '[ebp+var_4]']
and ['eax,', '0Fh']
mov ['[ebp+var_4],', 'eax']
jnz ['short', 'loc_1C40']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '20h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Sha1_GetBlockDigest@12']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+ecx*4+20h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_1C1B']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+18h]']
mov ['edx,', '[ecx+1Ch]']
mov ['cl,', '3']
call ['__allshl']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+58h],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+5Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_Sha1_GetBlockDigest@12']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_1CB1']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '5']
jnb ['short', 'loc_1CD8']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
bswap ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '4']
mov ['[ebp+arg_4],', 'edx']
jmp ['short', 'loc_1CA8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_Sha1_Init@4']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
_Sha1_32_PrepareBlock@12 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
xor ['edx,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+18h]']
adc ['edx,', '[ecx+1Ch]']
mov ['cl,', '5']
call ['__allshl']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+38h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+3Ch],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+edx*4],', '80000000h']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '1']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0Eh']
jz ['short', 'loc_1D7F']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+edx*4],', '0']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '1']
mov ['[ebp+arg_8],', 'ecx']
jmp ['short', 'loc_1D61']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
_Sha1_32_Update@12 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
and ['ecx,', '0Fh']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+18h]']
adc ['eax,', '[ecx+1Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+18h],', 'edx']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1E20']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['eax,', '[eax]']
mov ['[edx+ecx*4+20h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '4']
mov ['[ebp+arg_4],', 'edx']
cmp ['[ebp+var_4],', '10h']
jnz ['short', 'loc_1E1E']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_Sha1_GetBlockDigest@12']
jmp ['short', 'loc_1DC7']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
_Sha1_32_Final@8 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
and ['ecx,', '0Fh']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+edx*4+20h],', '80000000h']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0Eh']
jz ['short', 'loc_1EAC']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0Fh']
mov ['[ebp+var_C],', 'edx']
jnz ['short', 'loc_1E93']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_Sha1_GetBlockDigest@12']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+eax*4+20h],', '0']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_1E6E']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+18h]']
mov ['edx,', '[ecx+1Ch]']
mov ['cl,', '5']
call ['__allshl']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+58h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+5Ch],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_Sha1_GetBlockDigest@12']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_Sha1_Init@4']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

?Read@CBufferInStream@@UAGJPAXIPAI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_26']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_33']
xor ['eax,', 'eax']
jmp ['loc_D7']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_C]']
jb ['short', 'loc_68']
ja ['short', 'loc_64']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+var_10]']
jb ['short', 'loc_68']
xor ['eax,', 'eax']
jmp ['short', 'loc_D7']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
sub ['eax,', 'edx']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+Size]']
cmp ['eax,', '[ebp+arg_8]']
jbe ['short', 'loc_8C']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['??B?$CBuffer@E@@QAEPAEXZ']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
add ['eax,', 'edx']
push ['eax']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Size]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+8]']
adc ['edx,', '[eax+0Ch]']
mov ['eax,', '[ebp+this]']
mov ['[eax+8],', 'ecx']
mov ['[eax+0Ch],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_D5']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+Size]']
mov ['[ecx],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CBufferInStream@@UAGJ_JIPA_K@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_115']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_117']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_12E']
jmp ['short', 'loc_149']
jmp ['short', 'loc_150']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+8]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+0Ch]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_150']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '10h']
call ['?Size@?$CBuffer@E@@QBEIXZ']
xor ['ecx,', 'ecx']
add ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
adc ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'eax']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'ecx']
jmp ['short', 'loc_150']
mov ['eax,', '80030001h']
jmp ['short', 'loc_18A']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
jg ['short', 'loc_165']
jl ['short', 'loc_15E']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_165']
mov ['eax,', '80070083h']
jmp ['short', 'loc_18A']
mov ['edx,', '[ebp+this]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[edx+0Ch],', 'ecx']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_188']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[edx+4],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?Read@CBufInStream@@UAGJPAXIPAI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1C6']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_1D3']
xor ['eax,', 'eax']
jmp ['loc_266']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+18h]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+var_C]']
jb ['short', 'loc_203']
ja ['short', 'loc_1FF']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
cmp ['edx,', '[ebp+var_10]']
jb ['short', 'loc_203']
xor ['eax,', 'eax']
jmp ['short', 'loc_266']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+18h]']
sub ['eax,', 'ecx']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+Size]']
cmp ['ecx,', '[ebp+arg_8]']
jbe ['short', 'loc_222']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+Size],', 'edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+this]']
add ['edx,', '[eax+8]']
push ['edx']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+this]']
add ['edx,', '[ecx+10h]']
adc ['eax,', '[ecx+14h]']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+10h],', 'edx']
mov ['[ecx+14h],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_264']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+Size]']
mov ['[edx],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CBufInStream@@UAGJ_JIPA_K@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2A5']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_2A7']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_2BE']
jmp ['short', 'loc_2D4']
jmp ['short', 'loc_2DB']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+10h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+14h]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_2DB']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+18h]']
xor ['eax,', 'eax']
add ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
adc ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_2DB']
mov ['eax,', '80030001h']
jmp ['short', 'loc_315']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
jg ['short', 'loc_2F0']
jl ['short', 'loc_2E9']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_2F0']
mov ['eax,', '80070083h']
jmp ['short', 'loc_315']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+14h],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_313']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+4],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?Create_BufInStream_WithReference@@YGXPBXIPAUIUnknown@@PAPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Create_BufInStream_WithReference@@YGXPBXIPAUIUnknown@@PAPAUISequentialInStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
push ['20h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_38F']
mov ['ecx,', '[ebp+var_24]']
call ['??0CBufInStream@@QAE@XZ']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_396']
mov ['[ebp+var_28],', '0']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Init@CBufInStream@@QAEXPBEIPAUIUnknown@@@Z']
lea ['ecx,', '[ebp+var_18]']
call ['?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Create_BufInStream_WithNewBuffer@@YGXPBXIPAPAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Create_BufInStream_WithNewBuffer@@YGXPBXIPAPAUISequentialInStream@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['18h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_4AF']
mov ['ecx,', '[ebp+var_24]']
call ['??0CBufferInStream@@QAE@XZ']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_4B6']
mov ['[ebp+var_28],', '0']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z']
mov ['ecx,', '[ebp+var_10]']
call ['?Init@CBufferInStream@@QAEXXZ']
lea ['ecx,', '[ebp+var_18]']
call ['?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Free@CByteDynBuffer@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__free']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?EnsureCapacity@CByteDynBuffer@@QAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+NewSize]']
cmp ['ecx,', '[eax]']
ja ['short', 'loc_5DD']
mov ['al,', '1']
jmp ['short', 'loc_65C']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '40h']
jbe ['short', 'loc_5F2']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
shr ['ecx,', '2']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_60A']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '8']
jbe ['short', 'loc_603']
mov ['[ebp+var_8],', '10h']
jmp ['short', 'loc_60A']
mov ['[ebp+var_8],', '4']
mov ['eax,', '[ebp+NewSize]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+var_8]']
push ['edx']
call ['??$MyMax@I@@YGIII@Z']
mov ['[ebp+NewSize],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+NewSize]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__realloc']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_649']
xor ['al,', 'al']
jmp ['short', 'loc_65C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+NewSize]']
mov ['[edx],', 'eax']
mov ['al,', '1']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetBufPtrForWriting@CDynBufSeqOutStream@@QAEPAEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+10h]']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[edx+10h]']
jnb ['short', 'loc_699']
xor ['eax,', 'eax']
jmp ['short', 'loc_6C4']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['?EnsureCapacity@CByteDynBuffer@@QAE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_6B3']
xor ['eax,', 'eax']
jmp ['short', 'loc_6C4']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??BCByteDynBuffer@@QBEPAEXZ']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+10h]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?CopyToBuffer@CDynBufSeqOutStream@@QBEXAAV?$CBuffer@E@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??BCByteDynBuffer@@QBEPBEXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Write@CDynBufSeqOutStream@@UAGJPBXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+Dst],', '0CCCCCCCCh']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_73A']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_744']
xor ['eax,', 'eax']
jmp ['short', 'loc_790']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?GetBufPtrForWriting@CDynBufSeqOutStream@@QAEPAEI@Z']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_760']
mov ['eax,', '8007000Eh']
jmp ['short', 'loc_790']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?UpdateSize@CDynBufSeqOutStream@@QAEXI@Z']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_78E']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Write@CBufPtrSeqOutStream@@UAGJPBXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+0Ch]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+Size],', 'edx']
mov ['eax,', '[ebp+Size]']
cmp ['eax,', '[ebp+arg_8]']
jbe ['short', 'loc_7D1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+Size],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_803']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+this]']
add ['edx,', '[eax+10h]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '[ebp+Size]']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_811']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+Size]']
mov ['[ecx],', 'edx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_826']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_826']
mov ['[ebp+var_8],', '80004005h']
jmp ['short', 'loc_82D']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Write@CSequentialOutStreamSizeCount@@UAGJPBXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '8']
call ['??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_8]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+10h]']
adc ['edx,', '[eax+14h]']
mov ['eax,', '[ebp+this]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_8B4']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Free@CCachedInStream@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_MyFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_MidFree@4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@CCachedInStream@@QAE_NII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '20h']
jb ['short', 'loc_994']
xor ['al,', 'al']
jmp ['loc_A3D']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_8]']
shl ['edx,', 'cl']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_9B5']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+10h]']
jz ['short', 'loc_9E6']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_MidFree@4']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_MidAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jnz ['short', 'loc_9DD']
xor ['al,', 'al']
jmp ['short', 'loc_A3D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jz ['short', 'loc_9FA']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+18h]']
jz ['short', 'loc_A32']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_MyFree@4']
mov ['edx,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['edx,', 'cl']
push ['edx']
call ['_MyAlloc@4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jnz ['short', 'loc_A29']
xor ['al,', 'al']
jmp ['short', 'loc_A3D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+14h],', 'eax']
mov ['al,', '1']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Init@CCachedInStream@@QAEX_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '1']
mov ['ecx,', '[ecx+18h]']
shl ['edx,', 'cl']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_AB0']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['short', 'loc_AD2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+ecx*8],', '0FFFFFFFFh']
mov ['dword', 'ptr', '[eax+ecx*8+4],', '0FFFFFFFFh']
jmp ['short', 'loc_AA7']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Read@CCachedInStream@@UAGJPAXIPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_B06']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_B13']
xor ['eax,', 'eax']
jmp ['loc_D35']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_34],', 'ecx']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[eax+2Ch]']
cmp ['edx,', '[ecx+24h]']
jb ['short', 'loc_B44']
ja ['short', 'loc_B3D']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+20h]']
jb ['short', 'loc_B44']
xor ['eax,', 'eax']
jmp ['loc_D35']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+20h]']
sub ['edx,', '[ecx+28h]']
mov ['eax,', '[eax+24h]']
sbb ['eax,', '[ecx+2Ch]']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
xor ['edx,', 'edx']
mov ['[ebp+var_40],', 'ecx']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+var_4]']
jb ['short', 'loc_B7F']
ja ['short', 'loc_B79']
mov ['ecx,', '[ebp+var_40]']
cmp ['ecx,', '[ebp+var_8]']
jbe ['short', 'loc_B7F']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_8],', '0']
jz ['loc_D33']
mov ['ecx,', '[ebp+this]']
mov ['esi,', '[ebp+this]']
mov ['eax,', '[ecx+28h]']
mov ['edx,', '[ecx+2Ch]']
mov ['ecx,', '[esi+14h]']
call ['__aullshr']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+this]']
mov ['esi,', '1']
mov ['ecx,', '[eax+18h]']
shl ['esi,', 'cl']
sub ['esi,', '1']
and ['edx,', 'esi']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+14h]']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+this]']
add ['edx,', '[eax+0Ch]']
mov ['[ebp+var_18],', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[edx+ecx*8]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_BFF']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[edx+ecx*8+4]']
cmp ['eax,', '[ebp+var_C]']
jz ['loc_CA3']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['ecx,', '[ecx+14h]']
call ['__allshl']
mov ['ecx,', '[ebp+this]']
mov ['esi,', '[ecx+20h]']
sub ['esi,', 'eax']
mov ['eax,', '[ecx+24h]']
sbb ['eax,', 'edx']
mov ['[ebp+var_20],', 'esi']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '1']
mov ['ecx,', '[ecx+14h]']
shl ['edx,', 'cl']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+var_4C]']
cmp ['edx,', '[ebp+var_1C]']
jb ['short', 'loc_C56']
ja ['short', 'loc_C50']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_20]']
jbe ['short', 'loc_C56']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_C8D']
mov ['eax,', '[ebp+var_28]']
jmp ['loc_D35']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_10]']
mov ['[edx+eax*8],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
mov ['[edx+eax*8+4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '1']
mov ['ecx,', '[ecx+14h]']
shl ['edx,', 'cl']
sub ['edx,', '1']
and ['eax,', 'edx']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '1']
mov ['ecx,', '[ecx+14h]']
shl ['edx,', 'cl']
sub ['edx,', '[ebp+var_2C]']
push ['edx']
call ['??$MyMin@I@@YGIII@Z']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_D05']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+Size]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+Size]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+this]']
add ['ecx,', '[eax+28h]']
adc ['edx,', '[eax+2Ch]']
mov ['eax,', '[ebp+this]']
mov ['[eax+28h],', 'ecx']
mov ['[eax+2Ch],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+Size]']
mov ['[ebp+arg_8],', 'ecx']
jmp ['loc_B7F']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?Seek@CCachedInStream@@UAGJ_JIPA_K@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_D75']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_D77']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_D8E']
jmp ['short', 'loc_DA5']
jmp ['short', 'loc_DAC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+28h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+2Ch]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_DAC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
add ['edx,', '[ecx+20h]']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
adc ['eax,', '[ecx+24h]']
mov ['dword', 'ptr', '[ebp+arg_4],', 'edx']
mov ['dword', 'ptr', '[ebp+arg_4+4],', 'eax']
jmp ['short', 'loc_DAC']
mov ['eax,', '80030001h']
jmp ['short', 'loc_DE6']
cmp ['dword', 'ptr', '[ebp+arg_4+4],', '0']
jg ['short', 'loc_DC1']
jl ['short', 'loc_DBA']
cmp ['dword', 'ptr', '[ebp+arg_4],', '0']
jnb ['short', 'loc_DC1']
mov ['eax,', '80070083h']
jmp ['short', 'loc_DE6']
mov ['ecx,', '[ebp+this]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx+28h],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+2Ch],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_DE4']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[ecx+4],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
__unwindfunclet$?Create_BufInStream_WithReference@@YGXPBXIPAUIUnknown@@PAPAUISequentialInStream@@@Z$0 proc near
mov ['eax,', '[ebp-24h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Create_BufInStream_WithReference@@YGXPBXIPAUIUnknown@@PAPAUISequentialInStream@@@Z$1 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$?Create_BufInStream_WithReference@@YGXPBXIPAUIUnknown@@PAPAUISequentialInStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Create_BufInStream_WithReference@@YGXPBXIPAUIUnknown@@PAPAUISequentialInStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Create_BufInStream_WithNewBuffer@@YGXPBXIPAPAUISequentialInStream@@@Z$0 proc near
mov ['eax,', '[ebp-24h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Create_BufInStream_WithNewBuffer@@YGXPBXIPAPAUISequentialInStream@@@Z$1 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ']
endp
__ehhandler$?Create_BufInStream_WithNewBuffer@@YGXPBXIPAPAUISequentialInStream@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Create_BufInStream_WithNewBuffer@@YGXPBXIPAPAUISequentialInStream@@@Z']
jmp ['___CxxFrameHandler3']
endp
?Init@CBufInStream@@QAEXPBEIPAUIUnknown@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+18h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??0CBufInStream@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CBufInStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??0?$CMyComPtr@UIUnknown@@@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CMyUnknownImp@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CBufInStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_118C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_11CB']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_11A8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_11CB']
push ['offset', '_IID_IInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_11C4']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_11CB']
mov ['eax,', '80004002h']
jmp ['short', 'loc_11DC']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
___@8           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_IsEqualGUID@8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_IsEqualGUID@8  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
?AddRef@CBufInStream@@UAGKXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CBufInStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1292']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_12BC']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_12B3']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCBufInStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_12BA']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCBufInStream@@QAEPAXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBufInStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_12F6']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CBufInStream@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??1?$CMyComPtr@UIUnknown@@@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IInStream@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0ISequentialInStream@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0ISequentialInStream@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IUnknown@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ISequentialInStream@@6B@']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0IUnknown@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Init@CBufferInStream@@QAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0CBufferInStream@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0IInStream@@QAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0CMyUnknownImp@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CBufferInStream@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??0?$CBuffer@E@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryInterface@CBufferInStream@@UAGJABU_GUID@@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '_IID_IUnknown']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1524']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_1563']
push ['offset', '_IID_ISequentialInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_1540']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_1563']
push ['offset', '_IID_IInStream']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['___@8']
test ['eax,', 'eax']
jz ['short', 'loc_155C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+this]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_1563']
mov ['eax,', '80004002h']
jmp ['short', 'loc_1574']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+this]']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['0Ch']
endp
?AddRef@CBufferInStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Release@CBufferInStream@@UAGKXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_15E6']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[ecx+4]']
jmp ['short', 'loc_1610']
mov ['edx,', '[ebp+this]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1607']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['??_GCBufferInStream@@QAEPAXI@Z']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_160E']
mov ['[ebp+var_10],', '0']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GCBufferInStream@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1CBufferInStream@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_164A']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1CBufferInStream@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['??1?$CBuffer@E@@QAE@XZ']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BCByteDynBuffer@@QBEPAEXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BCByteDynBuffer@@QBEPBEXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?UpdateSize@CDynBufSeqOutStream@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+10h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CBuffer@E@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??B?$CBuffer@E@@QAEPAEXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Size@?$CBuffer@E@@QBEIXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Alloc@?$CBuffer@E@@QAEXI@Z']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_17A6']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$CMyComPtr@UIUnknown@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_180A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1848']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ecx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_186B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax]']
mov ['esi,', 'esp']
push ['edx']
mov ['ecx,', '[eax+8]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_18D4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_191A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
push ['ecx']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Alloc@?$CBuffer@E@@QAEXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_19AC']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@?$CBuffer@E@@QAEXXZ']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_19AC']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Free@?$CBuffer@E@@QAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_19F8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$MyMax@I@@YGIII@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jbe ['short', 'loc_1A2B']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_1A31']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$MyMin@I@@YGIII@Z proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_1A57']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_1A5D']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp

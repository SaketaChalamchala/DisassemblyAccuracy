_LoopThread_Construct@4 proc near       
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
pop ['ebp']
retn ['4']
endp
_LoopThread_Close@4 proc near           
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_HandlePtr_Close@4']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
push ['ecx']
call ['_HandlePtr_Close@4']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '8']
push ['edx']
call ['_HandlePtr_Close@4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
_LoopThread_Create@4 proc near          
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
push ['ecx']
call ['_AutoResetEvent_CreateNotSignaled@4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_98']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_C4']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '8']
push ['edx']
call ['_AutoResetEvent_CreateNotSignaled@4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B2']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_C4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '_LoopThreadFunc@4']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_Thread_Create@12']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_LoopThreadFunc@4 proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_Handle_WaitObject@4']
test ['eax,', 'eax']
jz ['short', 'loc_109']
mov ['eax,', '0Ch']
jmp ['short', 'loc_14D']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_116']
xor ['eax,', 'eax']
jmp ['short', 'loc_14D']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+18h],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
push ['eax']
call ['_Event_Set@4']
test ['eax,', 'eax']
jz ['short', 'loc_14B']
mov ['eax,', '0Ch']
jmp ['short', 'loc_14D']
jmp ['short', 'loc_F2']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_LoopThread_StopAndWait@4 proc near     
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
push ['ecx']
call ['_Event_Set@4']
test ['eax,', 'eax']
jz ['short', 'loc_184']
mov ['eax,', '0Ch']
jmp ['short', 'loc_18F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_Handle_WaitObject@4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
_LoopThread_StartSubThread@4 proc near  
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
call ['_Event_Set@4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
_LoopThread_WaitSubThread@4 proc near   
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_Handle_WaitObject@4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
_MtProgress_Set@24 proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnterCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '[ebp+arg_C]']
cmp ['ecx,', '0FFFFFFFFh']
jz ['short', 'loc_245']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[eax+edx*8+30h]']
mov ['esi,', '[ebp+arg_C]']
sbb ['esi,', '[eax+edx*8+34h]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx]']
adc ['esi,', '[edx+4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['[eax+4],', 'esi']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+ecx*8+30h],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[edx+ecx*8+34h],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
and ['ecx,', '[ebp+arg_14]']
cmp ['ecx,', '0FFFFFFFFh']
jz ['short', 'loc_296']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '[eax+edx*8+130h]']
mov ['esi,', '[ebp+arg_14]']
sbb ['esi,', '[eax+edx*8+134h]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+8]']
adc ['esi,', '[edx+0Ch]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['[eax+0Ch],', 'esi']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_10]']
mov ['[edx+ecx*8+130h],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['[edx+ecx*8+134h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jnz ['short', 'loc_2C6']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[edx+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[edx]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_Progress@20']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+14h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
mov ['esi,', 'esp']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__LeaveCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
_Progress@20    proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_343']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_343']
mov ['[ebp+var_4],', '0Ah']
jmp ['short', 'loc_34A']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
_CMtThread_Construct@8 proc near        
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+3Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+40h],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
push ['eax']
call ['_LoopThread_Construct@4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_MtCoder_Construct@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_3E0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '20h']
jnb ['short', 'loc_411']
mov ['edx,', '[ebp+var_4]']
imul ['edx,', '44h']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+270h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_CMtThread_Construct@8']
jmp ['short', 'loc_3D7']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
push ['eax']
call ['_CriticalSection_Init@4']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '58h']
push ['ecx']
call ['_CriticalSection_Init@4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_MtCoder_Destruct@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_45E']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '20h']
jnb ['short', 'loc_47C']
mov ['ecx,', '[ebp+var_4]']
imul ['ecx,', '44h']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+270h]']
push ['eax']
call ['_CMtThread_Destruct@4']
jmp ['short', 'loc_455']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
mov ['esi,', 'esp']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__DeleteCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '58h']
mov ['esi,', 'esp']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DeleteCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_CMtThread_Destruct@4 proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_CMtThread_CloseEvents@4']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jz ['short', 'loc_4EE']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '18h']
push ['edx']
call ['_LoopThread_StopAndWait@4']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
push ['eax']
call ['_LoopThread_Close@4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jz ['short', 'loc_51F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jz ['short', 'loc_55A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
_CMtThread_CloseEvents@4 proc near      
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '3Ch']
push ['eax']
call ['_HandlePtr_Close@4']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '40h']
push ['ecx']
call ['_HandlePtr_Close@4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
_MtCoder_Code@4 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+38h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '40h']
push ['edx']
call ['_MtProgress_Init@8']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_605']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['short', 'loc_636']
mov ['edx,', '[ebp+var_4]']
imul ['edx,', '44h']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+270h]']
push ['ecx']
call ['_CMtThread_Prepare@4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_634']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_799']
jmp ['short', 'loc_5FC']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_648']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_69F']
mov ['ecx,', '[ebp+var_4]']
imul ['ecx,', '44h']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+270h]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_69D']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+10h],', 'offset', '_ThreadFunc@4']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_LoopThread_Create@4']
test ['eax,', 'eax']
jz ['short', 'loc_69D']
mov ['[ebp+var_C],', '0Ch']
jmp ['short', 'loc_69F']
jmp ['short', 'loc_63F']
cmp ['[ebp+var_C],', '0']
jnz ['loc_74D']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_6BB']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_6FE']
mov ['eax,', '[ebp+var_4]']
imul ['eax,', '44h']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+270h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '18h']
push ['eax']
call ['_LoopThread_StartSubThread@4']
test ['eax,', 'eax']
jz ['short', 'loc_6FC']
mov ['[ebp+var_C],', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+2A4h],', '1']
jmp ['short', 'loc_6FE']
jmp ['short', 'loc_6B2']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2B0h']
push ['edx']
call ['_Event_Set@4']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2ACh']
push ['eax']
call ['_Event_Set@4']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_72D']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_4]']
jnb ['short', 'loc_74D']
mov ['eax,', '[ebp+var_1C]']
imul ['eax,', '44h']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+288h]']
push ['edx']
call ['_LoopThread_WaitSubThread@4']
jmp ['short', 'loc_724']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_75F']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['short', 'loc_77F']
mov ['edx,', '[ebp+var_4]']
imul ['edx,', '44h']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+270h]']
push ['ecx']
call ['_CMtThread_CloseEvents@4']
jmp ['short', 'loc_756']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_790']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_796']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+var_24]']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_MtProgress_Init@8 proc near            
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_7CD']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '20h']
jnb ['short', 'loc_807']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+ecx*8+130h],', '0']
mov ['dword', 'ptr', '[edx+ecx*8+134h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+eax*8+30h],', '0']
mov ['dword', 'ptr', '[ecx+eax*8+34h],', '0']
jmp ['short', 'loc_7C4']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
_CMtThread_Prepare@4 proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_86C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
cmp ['ecx,', '[edx]']
jz ['short', 'loc_8DD']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+4]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['[ecx+10h],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jnz ['short', 'loc_8DD']
mov ['eax,', '2']
jmp ['loc_9A9']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_8F6']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[edx+4]']
jz ['short', 'loc_965']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+4]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
mov ['[ecx+8],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_965']
mov ['eax,', '2']
jmp ['short', 'loc_9A9']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+38h],', '0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '3Ch']
push ['edx']
call ['_AutoResetEvent_CreateNotSignaled@4']
test ['eax,', 'eax']
jz ['short', 'loc_990']
mov ['eax,', '0Ch']
jmp ['short', 'loc_9A9']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '40h']
push ['eax']
call ['_AutoResetEvent_CreateNotSignaled@4']
test ['eax,', 'eax']
jz ['short', 'loc_9A7']
mov ['eax,', '0Ch']
jmp ['short', 'loc_9A9']
xor ['eax,', 'eax']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['4']
endp
_ThreadFunc@4   proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
cmp ['[ecx+14h],', 'eax']
jnz ['short', 'loc_A02']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_A0E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_1C]']
imul ['eax,', '44h']
lea ['ecx,', '[edx+eax+270h]']
mov ['[ebp+var_14],', 'ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_MtThread_Process@8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_A8B']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_MtCoder_SetError@8']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', '40h']
push ['eax']
call ['_MtProgress_SetError@8']
mov ['ecx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[ecx+34h],', '1']
mov ['edx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[edx+38h],', '1']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '3Ch']
push ['eax']
call ['_Event_Set@4']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '40h']
push ['ecx']
call ['_Event_Set@4']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_A9A']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_A95']
xor ['eax,', 'eax']
jmp ['short', 'loc_A9A']
jmp ['loc_9E6']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_MtProgress_SetError@8 proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnterCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jnz ['short', 'loc_B0C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
mov ['esi,', 'esp']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__LeaveCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_MtCoder_SetError@8 proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnterCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+38h],', '0']
jnz ['short', 'loc_B5C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+38h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
mov ['esi,', 'esp']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__LeaveCriticalSection@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn ['8']
endp
_MtThread_Process@8 proc near           
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+3Ch]']
push ['edx']
call ['_Handle_WaitObject@4']
test ['eax,', 'eax']
jz ['short', 'loc_BBA']
mov ['eax,', '0Ch']
jmp ['loc_D6E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
sub ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
cmp ['[eax+14h],', 'edx']
jnz ['short', 'loc_BD6']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_BE2']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_28]']
imul ['edx,', '44h']
lea ['eax,', '[ecx+edx+270h]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+34h],', '0']
jz ['short', 'loc_C22']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+34h],', '1']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '3Ch']
push ['eax']
call ['_Event_Set@4']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '0Ch']
jmp ['loc_D6E']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_18],', 'edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_FullRead@12']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_C5F']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_D6E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_C]']
xor ['eax,', 'eax']
cmp ['edx,', '[ecx]']
setnz ['al']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[edx+34h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '3Ch']
push ['edx']
call ['_Event_Set@4']
test ['eax,', 'eax']
jz ['short', 'loc_C98']
mov ['eax,', '0Ch']
jmp ['loc_D6E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_CEA']
mov ['eax,', '[ebp+var_24]']
jmp ['loc_D6E']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
add ['edx,', '40h']
push ['edx']
call ['_MtProgress_Reinit@8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+40h]']
push ['ecx']
call ['_Handle_WaitObject@4']
test ['eax,', 'eax']
jz ['short', 'loc_D16']
mov ['eax,', '0Ch']
jmp ['short', 'loc_D6E']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+38h],', '0']
jz ['short', 'loc_D26']
mov ['eax,', '0Bh']
jmp ['short', 'loc_D6E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '[ebp+var_18]']
jz ['short', 'loc_D5B']
mov ['eax,', '9']
jmp ['short', 'loc_D6E']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
push ['ecx']
call ['_Event_Set@4']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '0Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
_MtProgress_Reinit@8 proc near          
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+eax*8+30h],', '0']
mov ['dword', 'ptr', '[ecx+eax*8+34h],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+edx*8+130h],', '0']
mov ['dword', 'ptr', '[eax+edx*8+134h],', '0']
pop ['ebp']
retn ['8']
endp
_FullRead@12    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx],', '0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_EA6']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_E9A']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_EA8']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_EA4']
xor ['eax,', 'eax']
jmp ['short', 'loc_EA8']
jmp ['short', 'loc_E3F']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp

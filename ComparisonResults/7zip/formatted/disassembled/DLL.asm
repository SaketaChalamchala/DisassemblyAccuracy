?Free@CLibrary@NDLL@NWindows@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_23']
mov ['al,', '1']
jmp ['short', 'loc_4B']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__FreeLibrary@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_40']
xor ['al,', 'al']
jmp ['short', 'loc_4B']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['al,', '1']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?LoadEx@CLibrary@NDLL@NWindows@@QAE_NPB_WK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+hFile],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CLibrary@NDLL@NWindows@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_96']
xor ['al,', 'al']
jmp ['short', 'loc_105']
movzx ['ecx,', 'byte', 'ptr', 'ds:?g_IsNT@@3_NA']
test ['ecx,', 'ecx']
jnz ['short', 'loc_DA']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+dwFlags]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+lpLibFileName]']
push ['eax']
lea ['ecx,', '[ebp+hFile]']
push ['ecx']
call ['?fs2fas@@YG?AVAString@@PB_W@Z']
mov ['ecx,', 'eax']
call ['??BAString@@QBEPBDXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LoadLibraryExA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'eax']
lea ['ecx,', '[ebp+hFile]']
call ['??1AString@@QAE@XZ']
jmp ['short', 'loc_F8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+dwFlags]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+lpLibFileName]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__LoadLibraryExW@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0']
setnz ['cl']
mov ['al,', 'cl']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Load@CLibrary@NDLL@NWindows@@QAE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Free@CLibrary@NDLL@NWindows@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_146']
xor ['al,', 'al']
jmp ['short', 'loc_1A7']
movzx ['ecx,', 'byte', 'ptr', 'ds:?g_IsNT@@3_NA']
test ['ecx,', 'ecx']
jnz ['short', 'loc_184']
mov ['edx,', '[ebp+lpLibFileName]']
push ['edx']
lea ['eax,', '[ebp+var_10]']
push ['eax']
call ['?fs2fas@@YG?AVAString@@PB_W@Z']
mov ['ecx,', 'eax']
call ['??BAString@@QBEPBDXZ']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LoadLibraryA@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_10]']
call ['??1AString@@QAE@XZ']
jmp ['short', 'loc_19C']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+lpLibFileName]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__LoadLibraryW@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', '[edx],', '0']
setnz ['al']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?MyGetModuleFileName@NDLL@NWindows@@YG_NAAVUString@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?MyGetModuleFileName@NDLL@NWindows@@YG_NAAVUString@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '354h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_360]']
mov ['ecx,', '0D5h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:?g_hInstance@@3PAUHINSTANCE__@@A']
mov ['[ebp+hModule],', 'eax']
mov ['ecx,', '[ebp+this]']
call ['?Empty@UString@@QAEXXZ']
movzx ['ecx,', 'byte', 'ptr', 'ds:?g_IsNT@@3_NA']
test ['ecx,', 'ecx']
jnz ['loc_2CF']
mov ['[ebp+Filename],', '0']
mov ['esi,', 'esp']
push ['105h']
lea ['edx,', '[ebp+Filename]']
push ['edx']
mov ['eax,', '[ebp+hModule]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetModuleFileNameA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_128],', 'eax']
cmp ['[ebp+var_128],', '104h']
ja ['short', 'loc_2CD']
cmp ['[ebp+var_128],', '0']
jz ['short', 'loc_2CD']
lea ['ecx,', '[ebp+Filename]']
push ['ecx']
lea ['ecx,', '[ebp+var_34C]']
call ['??0AString@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
lea ['edx,', '[ebp+var_34C]']
push ['edx']
lea ['eax,', '[ebp+var_358]']
push ['eax']
call ['?fas2fs@@YG?AVUString@@ABVAString@@@Z']
mov ['[ebp+var_35C],', 'eax']
mov ['ecx,', '[ebp+var_35C]']
mov ['[ebp+var_360],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_360]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['??4UString@@QAEAAV0@ABV0@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_358]']
call ['??1UString@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34C]']
call ['??1AString@@QAE@XZ']
mov ['al,', '1']
jmp ['short', 'loc_327']
jmp ['short', 'loc_325']
xor ['eax,', 'eax']
mov ['[ebp+var_338],', 'ax']
mov ['esi,', 'esp']
push ['105h']
lea ['ecx,', '[ebp+var_338]']
push ['ecx']
mov ['edx,', '[ebp+hModule]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetModuleFileNameW@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_340],', 'eax']
cmp ['[ebp+var_340],', '104h']
ja ['short', 'loc_325']
cmp ['[ebp+var_340],', '0']
jz ['short', 'loc_325']
lea ['eax,', '[ebp+var_338]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['??4UString@@QAEAAV0@PB_W@Z']
mov ['al,', '1']
jmp ['short', 'loc_327']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '360h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetModuleDirPrefix@NDLL@NWindows@@YG?AVUString@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetModuleDirPrefix@NDLL@NWindows@@YG?AVUString@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_28],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??0UString@@QAE@XZ']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
call ['?MyGetModuleFileName@NDLL@NWindows@@YG_NAAVUString@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_433']
lea ['ecx,', '[ebp+var_1C]']
call ['?ReverseFind_PathSepar@UString@@QBEHXZ']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jl ['short', 'loc_433']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
push ['edx']
lea ['ecx,', '[ebp+var_1C]']
call ['?DeleteFrom@UString@@QAEXI@Z']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@ABV0@@Z']
mov ['ecx,', '[ebp+var_28]']
or ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_458']
push ['offset', '$SG67146']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UString@@QAE@PB_W@Z']
mov ['edx,', '[ebp+var_28]']
or ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1C]']
call ['??1UString@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1AString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??BAString@@QBEPBDXZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?MyGetModuleFileName@NDLL@NWindows@@YG_NAAVUString@@@Z$0 proc near
lea ['ecx,', '[ebp-34Ch]']
jmp ['??1AString@@QAE@XZ']
endp
__unwindfunclet$?MyGetModuleFileName@NDLL@NWindows@@YG_NAAVUString@@@Z$1 proc near
lea ['ecx,', '[ebp-358h]']
jmp ['??1UString@@QAE@XZ']
endp
__ehhandler$?MyGetModuleFileName@NDLL@NWindows@@YG_NAAVUString@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-360h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?MyGetModuleFileName@NDLL@NWindows@@YG_NAAVUString@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?GetModuleDirPrefix@NDLL@NWindows@@YG?AVUString@@XZ$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1UString@@QAE@XZ']
endp
__unwindfunclet$?GetModuleDirPrefix@NDLL@NWindows@@YG?AVUString@@XZ$1 proc near
mov ['eax,', '[ebp-28h]']
and ['eax,', '1']
jz ['locret_556']
and ['dword', 'ptr', '[ebp-28h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UString@@QAE@XZ']
retn
endp
__ehhandler$?GetModuleDirPrefix@NDLL@NWindows@@YG?AVUString@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetModuleDirPrefix@NDLL@NWindows@@YG?AVUString@@XZ']
jmp ['___CxxFrameHandler3']
endp
??1UString@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Empty@UString@@QAEXXZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['[edx],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DeleteFrom@UString@@QAEXI@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_670']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp

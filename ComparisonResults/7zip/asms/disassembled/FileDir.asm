.rdata:00000000 ;
.rdata:00000000 ; +-------------------------------------------------------------------------+
.rdata:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.rdata:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.rdata:00000000 ; |                      License info: 48-3677-7074-51                      |
.rdata:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.rdata:00000000 ; +-------------------------------------------------------------------------+
.rdata:00000000 ;
.rdata:00000000 ; Input MD5   : 6FB576C8F32CF06F7CFD14761FFEB1D6
.rdata:00000000 ; Input CRC32 : FE98EE96
.rdata:00000000
.rdata:00000000 ; File Name   : C:\workspace\7z1505-src\CPP\7zip\Bundles\Alone\Debug\FileDir.obj
.rdata:00000000 ; Format      : COFF (X386MAGIC)
.rdata:00000000 ; includelib "uuid.lib"
.rdata:00000000 ; includelib "MSVCRTD"
.rdata:00000000 ; includelib "OLDNAMES"
.rdata:00000000
.rdata:00000000                 include uni.inc ; see unicode subdir of ida for info on unicode
.rdata:00000000
.rdata:00000000                 .686p
.rdata:00000000                 .mmx
.rdata:00000000                 .model flat
.rdata:00000000
.rdata:00000000 ; ===========================================================================
.rdata:00000000
.rdata:00000000 ; Segment type: Pure data
.rdata:00000000 ; Segment permissions: Read
.rdata:00000000 _rdata          segment dword public 'DATA' use32
.rdata:00000000                 assume cs:_rdata
.rdata:00000000 ; CHAR _SG68041[]
.rdata:00000000 $SG68041        db 'CreateHardLinkW',0  ; DATA XREF: NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+31o
.rdata:00000010 ; const WCHAR _SG68042
.rdata:00000010 $SG68042:                               ; DATA XREF: NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+38o
.rdata:00000010                 unicode 0, <kernel32.dll>,0
.rdata:0000002A                 align 4
.rdata:0000002C $SG68221:                               ; DATA XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+140o
.rdata:0000002C                 unicode 0, <.tmp>,0
.rdata:00000036                 align 4
.rdata:00000036 _rdata          ends
.rdata:00000036
.text:00000038 ; ===========================================================================
.text:00000038
.text:00000038 ; Segment type: Pure code
.text:00000038 ; Segment permissions: Read/Execute
.text:00000038 _text           segment para public 'CODE' use32
.text:00000038                 assume cs:_text
.text:00000038                 ;org 38h
.text:00000038                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00000038
.text:00000038 ; =============== S U B R O U T I N E =======================================
.text:00000038
.text:00000038 ; Attributes: bp-based frame
.text:00000038
.text:00000038 ; bool __stdcall NWindows::NFile::NDir::GetWindowsDir(NWindows::NFile::NDir *this, struct UString *)
.text:00000038                 public ?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text:00000038 ?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z proc near
.text:00000038
.text:00000038 var_35C         = dword ptr -35Ch
.text:00000038 var_358         = dword ptr -358h
.text:00000038 var_354         = dword ptr -354h
.text:00000038 var_350         = byte ptr -350h
.text:00000038 var_344         = byte ptr -344h
.text:00000038 var_334         = word ptr -334h
.text:00000038 Buffer          = byte ptr -120h
.text:00000038 var_14          = dword ptr -14h
.text:00000038 var_10          = dword ptr -10h
.text:00000038 var_C           = dword ptr -0Ch
.text:00000038 var_4           = dword ptr -4
.text:00000038 this            = dword ptr  8
.text:00000038
.text:00000038                 push    ebp
.text:00000039                 mov     ebp, esp
.text:0000003B                 push    0FFFFFFFFh
.text:0000003D                 push    offset __ehhandler$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text:00000042                 mov     eax, large fs:0
.text:00000048                 push    eax
.text:00000049                 sub     esp, 350h
.text:0000004F                 push    esi
.text:00000050                 push    edi
.text:00000051                 lea     edi, [ebp+var_35C]
.text:00000057                 mov     ecx, 0D4h ; '+'
.text:0000005C                 mov     eax, 0CCCCCCCCh
.text:00000061                 rep stosd
.text:00000063                 mov     eax, dword ptr ds:___security_cookie
.text:00000068                 xor     eax, ebp
.text:0000006A                 mov     [ebp+var_10], eax
.text:0000006D                 push    eax
.text:0000006E                 lea     eax, [ebp+var_C]
.text:00000071                 mov     large fs:0, eax
.text:00000077                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:0000007E                 test    eax, eax
.text:00000080                 jnz     loc_11F
.text:00000086                 mov     [ebp+Buffer], 0
.text:0000008D                 mov     esi, esp
.text:0000008F                 push    105h            ; uSize
.text:00000094                 lea     ecx, [ebp+Buffer]
.text:0000009A                 push    ecx             ; lpBuffer
.text:0000009B                 call    dword ptr ds:__imp__GetWindowsDirectoryA@8 ; GetWindowsDirectoryA(x,x)
.text:000000A1                 cmp     esi, esp
.text:000000A3                 call    __RTC_CheckEsp
.text:000000A8                 mov     [ebp+var_14], eax
.text:000000AB                 lea     edx, [ebp+Buffer]
.text:000000B1                 push    edx             ; char *
.text:000000B2                 lea     ecx, [ebp+var_344] ; this
.text:000000B8                 call    ??0AString@@QAE@PBD@Z ; AString::AString(char const *)
.text:000000BD                 mov     [ebp+var_4], 0
.text:000000C4                 lea     eax, [ebp+var_344]
.text:000000CA                 push    eax
.text:000000CB                 lea     ecx, [ebp+var_350]
.text:000000D1                 push    ecx
.text:000000D2                 call    ?fas2fs@@YG?AVUString@@ABVAString@@@Z ; fas2fs(AString const &)
.text:000000D7                 mov     [ebp+var_354], eax
.text:000000DD                 mov     edx, [ebp+var_354]
.text:000000E3                 mov     [ebp+var_358], edx
.text:000000E9                 mov     byte ptr [ebp+var_4], 1
.text:000000ED                 mov     eax, [ebp+var_358]
.text:000000F3                 push    eax
.text:000000F4                 mov     ecx, [ebp+this]
.text:000000F7                 call    ??4UString@@QAEAAV0@ABV0@@Z ; UString::operator=(UString const &)
.text:000000FC                 mov     byte ptr [ebp+var_4], 0
.text:00000100                 lea     ecx, [ebp+var_350] ; this
.text:00000106                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:0000010B                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000112                 lea     ecx, [ebp+var_344] ; this
.text:00000118                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:0000011D                 jmp     short loc_155
.text:0000011F ; ---------------------------------------------------------------------------
.text:0000011F
.text:0000011F loc_11F:                                ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+48j
.text:0000011F                 xor     ecx, ecx
.text:00000121                 mov     [ebp+var_334], cx
.text:00000128                 mov     esi, esp
.text:0000012A                 push    105h            ; uSize
.text:0000012F                 lea     edx, [ebp+var_334]
.text:00000135                 push    edx             ; lpBuffer
.text:00000136                 call    dword ptr ds:__imp__GetWindowsDirectoryW@8 ; GetWindowsDirectoryW(x,x)
.text:0000013C                 cmp     esi, esp
.text:0000013E                 call    __RTC_CheckEsp
.text:00000143                 mov     [ebp+var_14], eax
.text:00000146                 lea     eax, [ebp+var_334]
.text:0000014C                 push    eax
.text:0000014D                 mov     ecx, [ebp+this]
.text:00000150                 call    ??4UString@@QAEAAV0@PB_W@Z ; UString::operator=(wchar_t const *)
.text:00000155
.text:00000155 loc_155:                                ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+E5j
.text:00000155                 cmp     [ebp+var_14], 0
.text:00000159                 jbe     short loc_170
.text:0000015B                 cmp     [ebp+var_14], 104h
.text:00000162                 ja      short loc_170
.text:00000164                 mov     [ebp+var_35C], 1
.text:0000016E                 jmp     short loc_17A
.text:00000170 ; ---------------------------------------------------------------------------
.text:00000170
.text:00000170 loc_170:                                ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+121j
.text:00000170                                         ; NWindows::NFile::NDir::GetWindowsDir(UString &)+12Aj
.text:00000170                 mov     [ebp+var_35C], 0
.text:0000017A
.text:0000017A loc_17A:                                ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+136j
.text:0000017A                 mov     al, byte ptr [ebp+var_35C]
.text:00000180                 push    edx
.text:00000181                 mov     ecx, ebp
.text:00000183                 push    eax
.text:00000184                 lea     edx, $LN13
.text:0000018A                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000018F                 pop     eax
.text:00000190                 pop     edx
.text:00000191                 mov     ecx, [ebp+var_C]
.text:00000194                 mov     large fs:0, ecx
.text:0000019B                 pop     ecx
.text:0000019C                 pop     edi
.text:0000019D                 pop     esi
.text:0000019E                 mov     ecx, [ebp+var_10]
.text:000001A1                 xor     ecx, ebp
.text:000001A3                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:000001A8                 add     esp, 35Ch
.text:000001AE                 cmp     ebp, esp
.text:000001B0                 call    __RTC_CheckEsp
.text:000001B5                 mov     esp, ebp
.text:000001B7                 pop     ebp
.text:000001B8                 retn    4
.text:000001B8 ?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z endp
.text:000001B8
.text:000001B8 ; ---------------------------------------------------------------------------
.text:000001BB                 align 4
.text:000001BC $LN13           dd 2                    ; DATA XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+14Co
.text:000001C0                 dd offset $LN12
.text:000001C4 $LN12           dd 0FFFFFEE0h, 106h     ; DATA XREF: .text:000001C0o
.text:000001CC                 dd offset $LN9
.text:000001D0                 db 0CCh
.text:000001D1                 db 0FCh, 2 dup(0FFh)
.text:000001D4                 dd offset loc_20C
.text:000001D8                 dd offset $LN10
.text:000001DC $LN10           db 73h, 0               ; DATA XREF: .text:000001D8o
.text:000001DE $LN9            dw 73h                  ; DATA XREF: .text:000001CCo
.text:000001E0                 db 8 dup(0CCh)
.text:000001E8
.text:000001E8 ; =============== S U B R O U T I N E =======================================
.text:000001E8
.text:000001E8 ; Attributes: bp-based frame
.text:000001E8
.text:000001E8 ; bool __stdcall NWindows::NFile::NDir::GetSystemDir(NWindows::NFile::NDir *this, struct UString *)
.text:000001E8                 public ?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text:000001E8 ?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z proc near
.text:000001E8
.text:000001E8 var_35C         = dword ptr -35Ch
.text:000001E8 var_358         = dword ptr -358h
.text:000001E8 var_354         = dword ptr -354h
.text:000001E8 var_350         = byte ptr -350h
.text:000001E8 var_344         = byte ptr -344h
.text:000001E8 var_334         = word ptr -334h
.text:000001E8 Buffer          = byte ptr -120h
.text:000001E8 var_14          = dword ptr -14h
.text:000001E8 var_10          = dword ptr -10h
.text:000001E8 var_C           = dword ptr -0Ch
.text:000001E8 var_4           = dword ptr -4
.text:000001E8 this            = dword ptr  8
.text:000001E8
.text:000001E8                 push    ebp
.text:000001E9                 mov     ebp, esp
.text:000001EB                 push    0FFFFFFFFh
.text:000001ED                 push    offset __ehhandler$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text:000001F2                 mov     eax, large fs:0
.text:000001F8                 push    eax
.text:000001F9                 sub     esp, 350h
.text:000001FF                 push    esi
.text:00000200                 push    edi
.text:00000201                 lea     edi, [ebp+var_35C]
.text:00000207                 mov     ecx, 0D4h ; '+'
.text:0000020C
.text:0000020C loc_20C:                                ; DATA XREF: .text:000001D4o
.text:0000020C                                         ; .text:00000384o ...
.text:0000020C                 mov     eax, 0CCCCCCCCh
.text:00000211                 rep stosd
.text:00000213                 mov     eax, dword ptr ds:___security_cookie
.text:00000218                 xor     eax, ebp
.text:0000021A                 mov     [ebp+var_10], eax
.text:0000021D                 push    eax
.text:0000021E                 lea     eax, [ebp+var_C]
.text:00000221                 mov     large fs:0, eax
.text:00000227                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:0000022E                 test    eax, eax
.text:00000230                 jnz     loc_2CF
.text:00000236                 mov     [ebp+Buffer], 0
.text:0000023D                 mov     esi, esp
.text:0000023F                 push    105h            ; uSize
.text:00000244                 lea     ecx, [ebp+Buffer]
.text:0000024A                 push    ecx             ; lpBuffer
.text:0000024B                 call    dword ptr ds:__imp__GetSystemDirectoryA@8 ; GetSystemDirectoryA(x,x)
.text:00000251                 cmp     esi, esp
.text:00000253                 call    __RTC_CheckEsp
.text:00000258                 mov     [ebp+var_14], eax
.text:0000025B                 lea     edx, [ebp+Buffer]
.text:00000261                 push    edx             ; char *
.text:00000262                 lea     ecx, [ebp+var_344] ; this
.text:00000268                 call    ??0AString@@QAE@PBD@Z ; AString::AString(char const *)
.text:0000026D                 mov     [ebp+var_4], 0
.text:00000274                 lea     eax, [ebp+var_344]
.text:0000027A                 push    eax
.text:0000027B                 lea     ecx, [ebp+var_350]
.text:00000281                 push    ecx
.text:00000282                 call    ?fas2fs@@YG?AVUString@@ABVAString@@@Z ; fas2fs(AString const &)
.text:00000287                 mov     [ebp+var_354], eax
.text:0000028D                 mov     edx, [ebp+var_354]
.text:00000293                 mov     [ebp+var_358], edx
.text:00000299                 mov     byte ptr [ebp+var_4], 1
.text:0000029D                 mov     eax, [ebp+var_358]
.text:000002A3                 push    eax
.text:000002A4                 mov     ecx, [ebp+this]
.text:000002A7                 call    ??4UString@@QAEAAV0@ABV0@@Z ; UString::operator=(UString const &)
.text:000002AC                 mov     byte ptr [ebp+var_4], 0
.text:000002B0                 lea     ecx, [ebp+var_350] ; this
.text:000002B6                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:000002BB                 mov     [ebp+var_4], 0FFFFFFFFh
.text:000002C2                 lea     ecx, [ebp+var_344] ; this
.text:000002C8                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:000002CD                 jmp     short loc_305
.text:000002CF ; ---------------------------------------------------------------------------
.text:000002CF
.text:000002CF loc_2CF:                                ; CODE XREF: NWindows::NFile::NDir::GetSystemDir(UString &)+48j
.text:000002CF                 xor     ecx, ecx
.text:000002D1                 mov     [ebp+var_334], cx
.text:000002D8                 mov     esi, esp
.text:000002DA                 push    105h            ; uSize
.text:000002DF                 lea     edx, [ebp+var_334]
.text:000002E5                 push    edx             ; lpBuffer
.text:000002E6                 call    dword ptr ds:__imp__GetSystemDirectoryW@8 ; GetSystemDirectoryW(x,x)
.text:000002EC                 cmp     esi, esp
.text:000002EE                 call    __RTC_CheckEsp
.text:000002F3                 mov     [ebp+var_14], eax
.text:000002F6                 lea     eax, [ebp+var_334]
.text:000002FC                 push    eax
.text:000002FD                 mov     ecx, [ebp+this]
.text:00000300                 call    ??4UString@@QAEAAV0@PB_W@Z ; UString::operator=(wchar_t const *)
.text:00000305
.text:00000305 loc_305:                                ; CODE XREF: NWindows::NFile::NDir::GetSystemDir(UString &)+E5j
.text:00000305                 cmp     [ebp+var_14], 0
.text:00000309                 jbe     short loc_320
.text:0000030B                 cmp     [ebp+var_14], 104h
.text:00000312                 ja      short loc_320
.text:00000314                 mov     [ebp+var_35C], 1
.text:0000031E                 jmp     short loc_32A
.text:00000320 ; ---------------------------------------------------------------------------
.text:00000320
.text:00000320 loc_320:                                ; CODE XREF: NWindows::NFile::NDir::GetSystemDir(UString &)+121j
.text:00000320                                         ; NWindows::NFile::NDir::GetSystemDir(UString &)+12Aj
.text:00000320                 mov     [ebp+var_35C], 0
.text:0000032A
.text:0000032A loc_32A:                                ; CODE XREF: NWindows::NFile::NDir::GetSystemDir(UString &)+136j
.text:0000032A                 mov     al, byte ptr [ebp+var_35C]
.text:00000330                 push    edx
.text:00000331                 mov     ecx, ebp
.text:00000333                 push    eax
.text:00000334                 lea     edx, $LN13_0
.text:0000033A                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000033F                 pop     eax
.text:00000340                 pop     edx
.text:00000341                 mov     ecx, [ebp+var_C]
.text:00000344                 mov     large fs:0, ecx
.text:0000034B                 pop     ecx
.text:0000034C                 pop     edi
.text:0000034D                 pop     esi
.text:0000034E                 mov     ecx, [ebp+var_10]
.text:00000351                 xor     ecx, ebp
.text:00000353                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00000358                 add     esp, 35Ch
.text:0000035E                 cmp     ebp, esp
.text:00000360                 call    __RTC_CheckEsp
.text:00000365                 mov     esp, ebp
.text:00000367                 pop     ebp
.text:00000368                 retn    4
.text:00000368 ?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z endp
.text:00000368
.text:00000368 ; ---------------------------------------------------------------------------
.text:0000036B                 align 4
.text:0000036C $LN13_0         dd 2                    ; DATA XREF: NWindows::NFile::NDir::GetSystemDir(UString &)+14Co
.text:00000370                 dd offset $LN12_0
.text:00000374 $LN12_0         dd 0FFFFFEE0h, 106h     ; DATA XREF: .text:00000370o
.text:0000037C                 dd offset $LN9_0
.text:00000380                 db 0CCh
.text:00000381                 db 0FCh, 2 dup(0FFh)
.text:00000384                 dd offset loc_20C
.text:00000388                 dd offset $LN10_0
.text:0000038C $LN10_0         db 73h, 0               ; DATA XREF: .text:00000388o
.text:0000038E $LN9_0          dw 73h                  ; DATA XREF: .text:0000037Co
.text:00000390                 db 8 dup(0CCh)
.text:00000398
.text:00000398 ; =============== S U B R O U T I N E =======================================
.text:00000398
.text:00000398 ; Attributes: bp-based frame
.text:00000398
.text:00000398 ; bool __stdcall NWindows::NFile::NDir::SetDirTime(LPCWSTR lpFileName, FILETIME *lpCreationTime, FILETIME *lpLastAccessTime, FILETIME *lpLastWriteTime, const struct _FILETIME *)
.text:00000398                 public ?SetDirTime@NDir@NFile@NWindows@@YG_NPB_WPBU_FILETIME@@11@Z
.text:00000398 ?SetDirTime@NDir@NFile@NWindows@@YG_NPB_WPBU_FILETIME@@11@Z proc near
.text:00000398
.text:00000398 var_8           = dword ptr -8
.text:00000398 hFile           = dword ptr -4
.text:00000398 lpFileName      = dword ptr  8
.text:00000398 lpCreationTime  = dword ptr  0Ch
.text:00000398 lpLastAccessTime= dword ptr  10h
.text:00000398 lpLastWriteTime = dword ptr  14h
.text:00000398
.text:00000398                 push    ebp
.text:00000399                 mov     ebp, esp
.text:0000039B                 sub     esp, 8
.text:0000039E                 push    esi
.text:0000039F                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000003A6                 mov     [ebp+hFile], 0CCCCCCCCh
.text:000003AD                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:000003B4                 test    eax, eax
.text:000003B6                 jnz     short loc_3CD
.text:000003B8                 mov     esi, esp
.text:000003BA                 push    78h ; 'x'       ; dwErrCode
.text:000003BC                 call    dword ptr ds:__imp__SetLastError@4 ; SetLastError(x)
.text:000003C2                 cmp     esi, esp
.text:000003C4                 call    __RTC_CheckEsp
.text:000003C9                 xor     al, al
.text:000003CB                 jmp     short loc_444
.text:000003CD ; ---------------------------------------------------------------------------
.text:000003CD
.text:000003CD loc_3CD:                                ; CODE XREF: NWindows::NFile::NDir::SetDirTime(wchar_t const *,_FILETIME const *,_FILETIME const *,_FILETIME const *)+1Ej
.text:000003CD                 mov     [ebp+hFile], 0FFFFFFFFh
.text:000003D4                 mov     esi, esp
.text:000003D6                 push    0               ; hTemplateFile
.text:000003D8                 push    2000000h        ; dwFlagsAndAttributes
.text:000003DD                 push    3               ; dwCreationDisposition
.text:000003DF                 push    0               ; lpSecurityAttributes
.text:000003E1                 push    3               ; dwShareMode
.text:000003E3                 push    40000000h       ; dwDesiredAccess
.text:000003E8                 mov     ecx, [ebp+lpFileName]
.text:000003EB                 push    ecx             ; lpFileName
.text:000003EC                 call    dword ptr ds:__imp__CreateFileW@28 ; CreateFileW(x,x,x,x,x,x,x)
.text:000003F2                 cmp     esi, esp
.text:000003F4                 call    __RTC_CheckEsp
.text:000003F9                 mov     [ebp+hFile], eax
.text:000003FC                 mov     byte ptr [ebp+var_8+3], 0
.text:00000400                 cmp     [ebp+hFile], 0FFFFFFFFh
.text:00000404                 jz      short loc_441
.text:00000406                 mov     esi, esp
.text:00000408                 mov     edx, [ebp+lpLastWriteTime]
.text:0000040B                 push    edx             ; lpLastWriteTime
.text:0000040C                 mov     eax, [ebp+lpLastAccessTime]
.text:0000040F                 push    eax             ; lpLastAccessTime
.text:00000410                 mov     ecx, [ebp+lpCreationTime]
.text:00000413                 push    ecx             ; lpCreationTime
.text:00000414                 mov     edx, [ebp+hFile]
.text:00000417                 push    edx             ; hFile
.text:00000418                 call    dword ptr ds:__imp__SetFileTime@16 ; SetFileTime(x,x,x,x)
.text:0000041E                 cmp     esi, esp
.text:00000420                 call    __RTC_CheckEsp
.text:00000425                 push    eax             ; int
.text:00000426                 call    ?BOOLToBool@@YG_NH@Z ; BOOLToBool(int)
.text:0000042B                 mov     byte ptr [ebp+var_8+3], al
.text:0000042E                 mov     esi, esp
.text:00000430                 mov     eax, [ebp+hFile]
.text:00000433                 push    eax             ; hObject
.text:00000434                 call    dword ptr ds:__imp__CloseHandle@4 ; CloseHandle(x)
.text:0000043A                 cmp     esi, esp
.text:0000043C                 call    __RTC_CheckEsp
.text:00000441
.text:00000441 loc_441:                                ; CODE XREF: NWindows::NFile::NDir::SetDirTime(wchar_t const *,_FILETIME const *,_FILETIME const *,_FILETIME const *)+6Cj
.text:00000441                 mov     al, byte ptr [ebp+var_8+3]
.text:00000444
.text:00000444 loc_444:                                ; CODE XREF: NWindows::NFile::NDir::SetDirTime(wchar_t const *,_FILETIME const *,_FILETIME const *,_FILETIME const *)+33j
.text:00000444                 pop     esi
.text:00000445                 add     esp, 8
.text:00000448                 cmp     ebp, esp
.text:0000044A                 call    __RTC_CheckEsp
.text:0000044F                 mov     esp, ebp
.text:00000451                 pop     ebp
.text:00000452                 retn    10h
.text:00000452 ?SetDirTime@NDir@NFile@NWindows@@YG_NPB_WPBU_FILETIME@@11@Z endp
.text:00000452
.text:00000452 ; ---------------------------------------------------------------------------
.text:00000455                 align 4
.text:00000458
.text:00000458 ; =============== S U B R O U T I N E =======================================
.text:00000458
.text:00000458 ; Attributes: bp-based frame
.text:00000458
.text:00000458 ; bool __stdcall NWindows::NFile::NDir::SetFileAttrib(LPCWSTR lpFileName, DWORD dwFileAttributes, unsigned __int32)
.text:00000458                 public ?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z
.text:00000458 ?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z proc near
.text:00000458                                         ; CODE XREF: NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+6Dp
.text:00000458                                         ; NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+266p
.text:00000458
.text:00000458 var_24          = dword ptr -24h
.text:00000458 var_20          = dword ptr -20h
.text:00000458 var_1C          = dword ptr -1Ch
.text:00000458 var_18          = dword ptr -18h
.text:00000458 var_14          = dword ptr -14h
.text:00000458 var_10          = dword ptr -10h
.text:00000458 var_C           = dword ptr -0Ch
.text:00000458 var_4           = dword ptr -4
.text:00000458 lpFileName      = dword ptr  8
.text:00000458 dwFileAttributes= dword ptr  0Ch
.text:00000458
.text:00000458                 push    ebp
.text:00000459                 mov     ebp, esp
.text:0000045B                 push    0FFFFFFFFh
.text:0000045D                 push    offset __ehhandler$?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z
.text:00000462                 mov     eax, large fs:0
.text:00000468                 push    eax
.text:00000469                 sub     esp, 18h
.text:0000046C                 push    esi
.text:0000046D                 mov     eax, 0CCCCCCCCh
.text:00000472                 mov     [ebp+var_24], eax
.text:00000475                 mov     [ebp+var_20], eax
.text:00000478                 mov     [ebp+var_1C], eax
.text:0000047B                 mov     [ebp+var_18], eax
.text:0000047E                 mov     [ebp+var_14], eax
.text:00000481                 mov     [ebp+var_10], eax
.text:00000484                 mov     eax, dword ptr ds:___security_cookie
.text:00000489                 xor     eax, ebp
.text:0000048B                 push    eax
.text:0000048C                 lea     eax, [ebp+var_C]
.text:0000048F                 mov     large fs:0, eax
.text:00000495                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:0000049C                 test    eax, eax
.text:0000049E                 jnz     short loc_4F7
.text:000004A0                 mov     esi, esp
.text:000004A2                 mov     ecx, [ebp+dwFileAttributes]
.text:000004A5                 push    ecx             ; dwFileAttributes
.text:000004A6                 mov     edx, [ebp+lpFileName]
.text:000004A9                 push    edx
.text:000004AA                 lea     eax, [ebp+var_1C]
.text:000004AD                 push    eax             ; dwFileAttributes
.text:000004AE                 call    ?fs2fas@@YG?AVAString@@PB_W@Z ; fs2fas(wchar_t const *)
.text:000004B3                 mov     [ebp+var_20], eax
.text:000004B6                 mov     ecx, [ebp+var_20]
.text:000004B9                 mov     [ebp+var_24], ecx
.text:000004BC                 mov     [ebp+var_4], 0
.text:000004C3                 mov     ecx, [ebp+var_24]
.text:000004C6                 call    ??BAString@@QBEPBDXZ ; AString::operator char const *(void)
.text:000004CB                 push    eax             ; lpFileName
.text:000004CC                 call    dword ptr ds:__imp__SetFileAttributesA@8 ; SetFileAttributesA(x,x)
.text:000004D2                 cmp     esi, esp
.text:000004D4                 call    __RTC_CheckEsp
.text:000004D9                 mov     [ebp+var_10], eax
.text:000004DC                 mov     [ebp+var_4], 0FFFFFFFFh
.text:000004E3                 lea     ecx, [ebp+var_1C] ; this
.text:000004E6                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:000004EB                 cmp     [ebp+var_10], 0
.text:000004EF                 jz      short loc_4F5
.text:000004F1                 mov     al, 1
.text:000004F3                 jmp     short loc_518
.text:000004F5 ; ---------------------------------------------------------------------------
.text:000004F5
.text:000004F5 loc_4F5:                                ; CODE XREF: NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+97j
.text:000004F5                 jmp     short loc_516
.text:000004F7 ; ---------------------------------------------------------------------------
.text:000004F7
.text:000004F7 loc_4F7:                                ; CODE XREF: NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+46j
.text:000004F7                 mov     esi, esp
.text:000004F9                 mov     edx, [ebp+dwFileAttributes]
.text:000004FC                 push    edx             ; dwFileAttributes
.text:000004FD                 mov     eax, [ebp+lpFileName]
.text:00000500                 push    eax             ; lpFileName
.text:00000501                 call    dword ptr ds:__imp__SetFileAttributesW@8 ; SetFileAttributesW(x,x)
.text:00000507                 cmp     esi, esp
.text:00000509                 call    __RTC_CheckEsp
.text:0000050E                 test    eax, eax
.text:00000510                 jz      short loc_516
.text:00000512                 mov     al, 1
.text:00000514                 jmp     short loc_518
.text:00000516 ; ---------------------------------------------------------------------------
.text:00000516
.text:00000516 loc_516:                                ; CODE XREF: NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong):loc_4F5j
.text:00000516                                         ; NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+B8j
.text:00000516                 xor     al, al
.text:00000518
.text:00000518 loc_518:                                ; CODE XREF: NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+9Bj
.text:00000518                                         ; NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+BCj
.text:00000518                 mov     ecx, [ebp+var_C]
.text:0000051B                 mov     large fs:0, ecx
.text:00000522                 pop     ecx
.text:00000523                 pop     esi
.text:00000524                 add     esp, 24h
.text:00000527                 cmp     ebp, esp
.text:00000529                 call    __RTC_CheckEsp
.text:0000052E                 mov     esp, ebp
.text:00000530                 pop     ebp
.text:00000531                 retn    8
.text:00000531 ?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z endp
.text:00000531
.text:00000531 ; ---------------------------------------------------------------------------
.text:00000534                 align 8
.text:00000538
.text:00000538 ; =============== S U B R O U T I N E =======================================
.text:00000538
.text:00000538 ; Attributes: bp-based frame
.text:00000538
.text:00000538 ; bool __stdcall NWindows::NFile::NDir::RemoveDir(LPCWSTR lpPathName, const wchar_t *)
.text:00000538                 public ?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text:00000538 ?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text:00000538                                         ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+27Fp
.text:00000538
.text:00000538 var_24          = dword ptr -24h
.text:00000538 var_20          = dword ptr -20h
.text:00000538 var_1C          = dword ptr -1Ch
.text:00000538 var_18          = dword ptr -18h
.text:00000538 var_14          = dword ptr -14h
.text:00000538 var_10          = dword ptr -10h
.text:00000538 var_C           = dword ptr -0Ch
.text:00000538 var_4           = dword ptr -4
.text:00000538 lpPathName      = dword ptr  8
.text:00000538
.text:00000538                 push    ebp
.text:00000539                 mov     ebp, esp
.text:0000053B                 push    0FFFFFFFFh
.text:0000053D                 push    offset __ehhandler$?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text:00000542                 mov     eax, large fs:0
.text:00000548                 push    eax
.text:00000549                 sub     esp, 18h
.text:0000054C                 push    esi
.text:0000054D                 mov     eax, 0CCCCCCCCh
.text:00000552                 mov     [ebp+var_24], eax
.text:00000555                 mov     [ebp+var_20], eax
.text:00000558                 mov     [ebp+var_1C], eax
.text:0000055B                 mov     [ebp+var_18], eax
.text:0000055E                 mov     [ebp+var_14], eax
.text:00000561                 mov     [ebp+var_10], eax
.text:00000564                 mov     eax, dword ptr ds:___security_cookie
.text:00000569                 xor     eax, ebp
.text:0000056B                 push    eax
.text:0000056C                 lea     eax, [ebp+var_C]
.text:0000056F                 mov     large fs:0, eax
.text:00000575                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:0000057C                 test    eax, eax
.text:0000057E                 jnz     short loc_5D3
.text:00000580                 mov     ecx, [ebp+lpPathName]
.text:00000583                 push    ecx
.text:00000584                 lea     edx, [ebp+var_1C]
.text:00000587                 push    edx
.text:00000588                 call    ?fs2fas@@YG?AVAString@@PB_W@Z ; fs2fas(wchar_t const *)
.text:0000058D                 mov     [ebp+var_20], eax
.text:00000590                 mov     eax, [ebp+var_20]
.text:00000593                 mov     [ebp+var_24], eax
.text:00000596                 mov     [ebp+var_4], 0
.text:0000059D                 mov     ecx, [ebp+var_24]
.text:000005A0                 call    ??BAString@@QBEPBDXZ ; AString::operator char const *(void)
.text:000005A5                 mov     esi, esp
.text:000005A7                 push    eax             ; lpPathName
.text:000005A8                 call    dword ptr ds:__imp__RemoveDirectoryA@4 ; RemoveDirectoryA(x)
.text:000005AE                 cmp     esi, esp
.text:000005B0                 call    __RTC_CheckEsp
.text:000005B5                 mov     [ebp+var_10], eax
.text:000005B8                 mov     [ebp+var_4], 0FFFFFFFFh
.text:000005BF                 lea     ecx, [ebp+var_1C] ; this
.text:000005C2                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:000005C7                 cmp     [ebp+var_10], 0
.text:000005CB                 jz      short loc_5D1
.text:000005CD                 mov     al, 1
.text:000005CF                 jmp     short loc_5F0
.text:000005D1 ; ---------------------------------------------------------------------------
.text:000005D1
.text:000005D1 loc_5D1:                                ; CODE XREF: NWindows::NFile::NDir::RemoveDir(wchar_t const *)+93j
.text:000005D1                 jmp     short loc_5EE
.text:000005D3 ; ---------------------------------------------------------------------------
.text:000005D3
.text:000005D3 loc_5D3:                                ; CODE XREF: NWindows::NFile::NDir::RemoveDir(wchar_t const *)+46j
.text:000005D3                 mov     esi, esp
.text:000005D5                 mov     ecx, [ebp+lpPathName]
.text:000005D8                 push    ecx             ; lpPathName
.text:000005D9                 call    dword ptr ds:__imp__RemoveDirectoryW@4 ; RemoveDirectoryW(x)
.text:000005DF                 cmp     esi, esp
.text:000005E1                 call    __RTC_CheckEsp
.text:000005E6                 test    eax, eax
.text:000005E8                 jz      short loc_5EE
.text:000005EA                 mov     al, 1
.text:000005EC                 jmp     short loc_5F0
.text:000005EE ; ---------------------------------------------------------------------------
.text:000005EE
.text:000005EE loc_5EE:                                ; CODE XREF: NWindows::NFile::NDir::RemoveDir(wchar_t const *):loc_5D1j
.text:000005EE                                         ; NWindows::NFile::NDir::RemoveDir(wchar_t const *)+B0j
.text:000005EE                 xor     al, al
.text:000005F0
.text:000005F0 loc_5F0:                                ; CODE XREF: NWindows::NFile::NDir::RemoveDir(wchar_t const *)+97j
.text:000005F0                                         ; NWindows::NFile::NDir::RemoveDir(wchar_t const *)+B4j
.text:000005F0                 mov     ecx, [ebp+var_C]
.text:000005F3                 mov     large fs:0, ecx
.text:000005FA                 pop     ecx
.text:000005FB                 pop     esi
.text:000005FC                 add     esp, 24h
.text:000005FF                 cmp     ebp, esp
.text:00000601                 call    __RTC_CheckEsp
.text:00000606                 mov     esp, ebp
.text:00000608                 pop     ebp
.text:00000609                 retn    4
.text:00000609 ?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z endp
.text:00000609
.text:00000609 ; ---------------------------------------------------------------------------
.text:0000060C                 db 0Ch dup(0CCh)
.text:00000618
.text:00000618 ; =============== S U B R O U T I N E =======================================
.text:00000618
.text:00000618 ; Attributes: bp-based frame
.text:00000618
.text:00000618 ; bool __stdcall NWindows::NFile::NDir::MyMoveFile(LPCWSTR lpExistingFileName, LPCSTR lpNewFileName, const wchar_t *)
.text:00000618                 public ?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z
.text:00000618 ?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z proc near
.text:00000618                                         ; CODE XREF: NWindows::NFile::NDir::CTempFile::MoveTo(wchar_t const *,bool)+52p
.text:00000618
.text:00000618 var_38          = dword ptr -38h
.text:00000618 var_34          = dword ptr -34h
.text:00000618 var_30          = dword ptr -30h
.text:00000618 var_2C          = dword ptr -2Ch
.text:00000618 NewFileName     = byte ptr -28h
.text:00000618 var_1C          = byte ptr -1Ch
.text:00000618 var_10          = dword ptr -10h
.text:00000618 var_C           = dword ptr -0Ch
.text:00000618 var_4           = dword ptr -4
.text:00000618 lpExistingFileName= dword ptr  8
.text:00000618 lpNewFileName   = dword ptr  0Ch
.text:00000618
.text:00000618                 push    ebp
.text:00000619                 mov     ebp, esp
.text:0000061B                 push    0FFFFFFFFh
.text:0000061D                 push    offset __ehhandler$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z
.text:00000622                 mov     eax, large fs:0
.text:00000628                 push    eax
.text:00000629                 sub     esp, 2Ch
.text:0000062C                 push    esi
.text:0000062D                 push    edi
.text:0000062E                 lea     edi, [ebp+var_38]
.text:00000631                 mov     ecx, 0Bh
.text:00000636                 mov     eax, 0CCCCCCCCh
.text:0000063B                 rep stosd
.text:0000063D                 mov     eax, dword ptr ds:___security_cookie
.text:00000642                 xor     eax, ebp
.text:00000644                 push    eax
.text:00000645                 lea     eax, [ebp+var_C]
.text:00000648                 mov     large fs:0, eax
.text:0000064E                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:00000655                 test    eax, eax
.text:00000657                 jnz     loc_6DF
.text:0000065D                 mov     ecx, [ebp+lpNewFileName]
.text:00000660                 push    ecx             ; lpNewFileName
.text:00000661                 lea     edx, [ebp+var_1C]
.text:00000664                 push    edx
.text:00000665                 call    ?fs2fas@@YG?AVAString@@PB_W@Z ; fs2fas(wchar_t const *)
.text:0000066A                 mov     [ebp+var_2C], eax
.text:0000066D                 mov     eax, [ebp+var_2C]
.text:00000670                 mov     [ebp+var_30], eax
.text:00000673                 mov     [ebp+var_4], 0
.text:0000067A                 mov     ecx, [ebp+var_30]
.text:0000067D                 call    ??BAString@@QBEPBDXZ ; AString::operator char const *(void)
.text:00000682                 mov     esi, esp
.text:00000684                 push    eax
.text:00000685                 mov     ecx, [ebp+lpExistingFileName]
.text:00000688                 push    ecx
.text:00000689                 lea     edx, [ebp+NewFileName]
.text:0000068C                 push    edx             ; lpNewFileName
.text:0000068D                 call    ?fs2fas@@YG?AVAString@@PB_W@Z ; fs2fas(wchar_t const *)
.text:00000692                 mov     [ebp+var_34], eax
.text:00000695                 mov     eax, [ebp+var_34]
.text:00000698                 mov     [ebp+var_38], eax
.text:0000069B                 mov     byte ptr [ebp+var_4], 1
.text:0000069F                 mov     ecx, [ebp+var_38]
.text:000006A2                 call    ??BAString@@QBEPBDXZ ; AString::operator char const *(void)
.text:000006A7                 push    eax             ; lpExistingFileName
.text:000006A8                 call    dword ptr ds:__imp__MoveFileA@8 ; MoveFileA(x,x)
.text:000006AE                 cmp     esi, esp
.text:000006B0                 call    __RTC_CheckEsp
.text:000006B5                 mov     [ebp+var_10], eax
.text:000006B8                 mov     byte ptr [ebp+var_4], 0
.text:000006BC                 lea     ecx, [ebp+NewFileName] ; this
.text:000006BF                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:000006C4                 mov     [ebp+var_4], 0FFFFFFFFh
.text:000006CB                 lea     ecx, [ebp+var_1C] ; this
.text:000006CE                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:000006D3                 cmp     [ebp+var_10], 0
.text:000006D7                 jz      short loc_6DD
.text:000006D9                 mov     al, 1
.text:000006DB                 jmp     short loc_700
.text:000006DD ; ---------------------------------------------------------------------------
.text:000006DD
.text:000006DD loc_6DD:                                ; CODE XREF: NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *)+BFj
.text:000006DD                 jmp     short loc_6FE
.text:000006DF ; ---------------------------------------------------------------------------
.text:000006DF
.text:000006DF loc_6DF:                                ; CODE XREF: NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *)+3Fj
.text:000006DF                 mov     esi, esp
.text:000006E1                 mov     ecx, [ebp+lpNewFileName]
.text:000006E4                 push    ecx             ; lpNewFileName
.text:000006E5                 mov     edx, [ebp+lpExistingFileName]
.text:000006E8                 push    edx             ; lpExistingFileName
.text:000006E9                 call    dword ptr ds:__imp__MoveFileW@8 ; MoveFileW(x,x)
.text:000006EF                 cmp     esi, esp
.text:000006F1                 call    __RTC_CheckEsp
.text:000006F6                 test    eax, eax
.text:000006F8                 jz      short loc_6FE
.text:000006FA                 mov     al, 1
.text:000006FC                 jmp     short loc_700
.text:000006FE ; ---------------------------------------------------------------------------
.text:000006FE
.text:000006FE loc_6FE:                                ; CODE XREF: NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *):loc_6DDj
.text:000006FE                                         ; NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *)+E0j
.text:000006FE                 xor     al, al
.text:00000700
.text:00000700 loc_700:                                ; CODE XREF: NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *)+C3j
.text:00000700                                         ; NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *)+E4j
.text:00000700                 mov     ecx, [ebp+var_C]
.text:00000703                 mov     large fs:0, ecx
.text:0000070A                 pop     ecx
.text:0000070B                 pop     edi
.text:0000070C                 pop     esi
.text:0000070D                 add     esp, 38h
.text:00000710                 cmp     ebp, esp
.text:00000712                 call    __RTC_CheckEsp
.text:00000717                 mov     esp, ebp
.text:00000719                 pop     ebp
.text:0000071A                 retn    8
.text:0000071A ?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z endp
.text:0000071A
.text:0000071A ; ---------------------------------------------------------------------------
.text:0000071D                 db 0Bh dup(0CCh)
.text:00000728
.text:00000728 ; =============== S U B R O U T I N E =======================================
.text:00000728
.text:00000728 ; Attributes: bp-based frame
.text:00000728
.text:00000728 ; bool __stdcall NWindows::NFile::NDir::MyCreateHardLink(NWindows::NFile::NDir *this, const wchar_t *, const wchar_t *)
.text:00000728                 public ?MyCreateHardLink@NDir@NFile@NWindows@@YG_NPB_W0@Z
.text:00000728 ?MyCreateHardLink@NDir@NFile@NWindows@@YG_NPB_W0@Z proc near
.text:00000728
.text:00000728 var_4           = dword ptr -4
.text:00000728 this            = dword ptr  8
.text:00000728 arg_4           = dword ptr  0Ch
.text:00000728
.text:00000728                 push    ebp
.text:00000729                 mov     ebp, esp
.text:0000072B                 push    ecx
.text:0000072C                 push    esi
.text:0000072D                 push    edi
.text:0000072E                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000735                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:0000073C                 test    eax, eax
.text:0000073E                 jnz     short loc_757
.text:00000740                 mov     esi, esp
.text:00000742                 push    78h ; 'x'       ; dwErrCode
.text:00000744                 call    dword ptr ds:__imp__SetLastError@4 ; SetLastError(x)
.text:0000074A                 cmp     esi, esp
.text:0000074C                 call    __RTC_CheckEsp
.text:00000751                 xor     al, al
.text:00000753                 jmp     short loc_7AD
.text:00000755 ; ---------------------------------------------------------------------------
.text:00000755                 jmp     short loc_7AB
.text:00000757 ; ---------------------------------------------------------------------------
.text:00000757
.text:00000757 loc_757:                                ; CODE XREF: NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+16j
.text:00000757                 mov     esi, esp
.text:00000759                 push    offset $SG68041 ; "CreateHardLinkW"
.text:0000075E                 mov     edi, esp
.text:00000760                 push    offset $SG68042 ; "kernel32.dll"
.text:00000765                 call    dword ptr ds:__imp__GetModuleHandleW@4 ; GetModuleHandleW(x)
.text:0000076B                 cmp     edi, esp
.text:0000076D                 call    __RTC_CheckEsp
.text:00000772                 push    eax             ; hModule
.text:00000773                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000779                 cmp     esi, esp
.text:0000077B                 call    __RTC_CheckEsp
.text:00000780                 mov     [ebp+var_4], eax
.text:00000783                 cmp     [ebp+var_4], 0
.text:00000787                 jnz     short loc_78D
.text:00000789                 xor     al, al
.text:0000078B                 jmp     short loc_7AD
.text:0000078D ; ---------------------------------------------------------------------------
.text:0000078D
.text:0000078D loc_78D:                                ; CODE XREF: NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+5Fj
.text:0000078D                 mov     esi, esp
.text:0000078F                 push    0
.text:00000791                 mov     ecx, [ebp+arg_4]
.text:00000794                 push    ecx
.text:00000795                 mov     edx, [ebp+this]
.text:00000798                 push    edx
.text:00000799                 call    [ebp+var_4]
.text:0000079C                 cmp     esi, esp
.text:0000079E                 call    __RTC_CheckEsp
.text:000007A3                 test    eax, eax
.text:000007A5                 jz      short loc_7AB
.text:000007A7                 mov     al, 1
.text:000007A9                 jmp     short loc_7AD
.text:000007AB ; ---------------------------------------------------------------------------
.text:000007AB
.text:000007AB loc_7AB:                                ; CODE XREF: NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+2Dj
.text:000007AB                                         ; NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+7Dj
.text:000007AB                 xor     al, al
.text:000007AD
.text:000007AD loc_7AD:                                ; CODE XREF: NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+2Bj
.text:000007AD                                         ; NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+63j ...
.text:000007AD                 pop     edi
.text:000007AE                 pop     esi
.text:000007AF                 add     esp, 4
.text:000007B2                 cmp     ebp, esp
.text:000007B4                 call    __RTC_CheckEsp
.text:000007B9                 mov     esp, ebp
.text:000007BB                 pop     ebp
.text:000007BC                 retn    8
.text:000007BC ?MyCreateHardLink@NDir@NFile@NWindows@@YG_NPB_W0@Z endp
.text:000007BC
.text:000007BC ; ---------------------------------------------------------------------------
.text:000007BF                 db 9 dup(0CCh)
.text:000007C8
.text:000007C8 ; =============== S U B R O U T I N E =======================================
.text:000007C8
.text:000007C8 ; Attributes: bp-based frame
.text:000007C8
.text:000007C8 ; bool __stdcall NWindows::NFile::NDir::CreateDir(LPCWSTR lpPathName, const wchar_t *)
.text:000007C8                 public ?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text:000007C8 ?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text:000007C8                                         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+285p
.text:000007C8                                         ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+1AAp
.text:000007C8
.text:000007C8 var_24          = dword ptr -24h
.text:000007C8 var_20          = dword ptr -20h
.text:000007C8 SecurityAttributes= _SECURITY_ATTRIBUTES ptr -1Ch
.text:000007C8 var_10          = dword ptr -10h
.text:000007C8 var_C           = dword ptr -0Ch
.text:000007C8 var_4           = dword ptr -4
.text:000007C8 lpPathName      = dword ptr  8
.text:000007C8
.text:000007C8                 push    ebp
.text:000007C9                 mov     ebp, esp
.text:000007CB                 push    0FFFFFFFFh
.text:000007CD                 push    offset __ehhandler$?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text:000007D2                 mov     eax, large fs:0
.text:000007D8                 push    eax
.text:000007D9                 sub     esp, 18h
.text:000007DC                 push    esi
.text:000007DD                 mov     eax, 0CCCCCCCCh
.text:000007E2                 mov     [ebp+var_24], eax
.text:000007E5                 mov     [ebp+var_20], eax
.text:000007E8                 mov     [ebp+SecurityAttributes.nLength], eax
.text:000007EB                 mov     [ebp+SecurityAttributes.lpSecurityDescriptor], eax
.text:000007EE                 mov     [ebp+SecurityAttributes.bInheritHandle], eax
.text:000007F1                 mov     [ebp+var_10], eax
.text:000007F4                 mov     eax, dword ptr ds:___security_cookie
.text:000007F9                 xor     eax, ebp
.text:000007FB                 push    eax
.text:000007FC                 lea     eax, [ebp+var_C]
.text:000007FF                 mov     large fs:0, eax
.text:00000805                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:0000080C                 test    eax, eax
.text:0000080E                 jnz     short loc_865
.text:00000810                 mov     esi, esp
.text:00000812                 push    0               ; lpSecurityAttributes
.text:00000814                 mov     ecx, [ebp+lpPathName]
.text:00000817                 push    ecx
.text:00000818                 lea     edx, [ebp+SecurityAttributes]
.text:0000081B                 push    edx             ; lpSecurityAttributes
.text:0000081C                 call    ?fs2fas@@YG?AVAString@@PB_W@Z ; fs2fas(wchar_t const *)
.text:00000821                 mov     [ebp+var_20], eax
.text:00000824                 mov     eax, [ebp+var_20]
.text:00000827                 mov     [ebp+var_24], eax
.text:0000082A                 mov     [ebp+var_4], 0
.text:00000831                 mov     ecx, [ebp+var_24]
.text:00000834                 call    ??BAString@@QBEPBDXZ ; AString::operator char const *(void)
.text:00000839                 push    eax             ; lpPathName
.text:0000083A                 call    dword ptr ds:__imp__CreateDirectoryA@8 ; CreateDirectoryA(x,x)
.text:00000840                 cmp     esi, esp
.text:00000842                 call    __RTC_CheckEsp
.text:00000847                 mov     [ebp+var_10], eax
.text:0000084A                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000851                 lea     ecx, [ebp+SecurityAttributes] ; this
.text:00000854                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:00000859                 cmp     [ebp+var_10], 0
.text:0000085D                 jz      short loc_863
.text:0000085F                 mov     al, 1
.text:00000861                 jmp     short loc_884
.text:00000863 ; ---------------------------------------------------------------------------
.text:00000863
.text:00000863 loc_863:                                ; CODE XREF: NWindows::NFile::NDir::CreateDir(wchar_t const *)+95j
.text:00000863                 jmp     short loc_882
.text:00000865 ; ---------------------------------------------------------------------------
.text:00000865
.text:00000865 loc_865:                                ; CODE XREF: NWindows::NFile::NDir::CreateDir(wchar_t const *)+46j
.text:00000865                 mov     esi, esp
.text:00000867                 push    0               ; lpSecurityAttributes
.text:00000869                 mov     ecx, [ebp+lpPathName]
.text:0000086C                 push    ecx             ; lpPathName
.text:0000086D                 call    dword ptr ds:__imp__CreateDirectoryW@8 ; CreateDirectoryW(x,x)
.text:00000873                 cmp     esi, esp
.text:00000875                 call    __RTC_CheckEsp
.text:0000087A                 test    eax, eax
.text:0000087C                 jz      short loc_882
.text:0000087E                 mov     al, 1
.text:00000880                 jmp     short loc_884
.text:00000882 ; ---------------------------------------------------------------------------
.text:00000882
.text:00000882 loc_882:                                ; CODE XREF: NWindows::NFile::NDir::CreateDir(wchar_t const *):loc_863j
.text:00000882                                         ; NWindows::NFile::NDir::CreateDir(wchar_t const *)+B4j
.text:00000882                 xor     al, al
.text:00000884
.text:00000884 loc_884:                                ; CODE XREF: NWindows::NFile::NDir::CreateDir(wchar_t const *)+99j
.text:00000884                                         ; NWindows::NFile::NDir::CreateDir(wchar_t const *)+B8j
.text:00000884                 mov     ecx, [ebp+var_C]
.text:00000887                 mov     large fs:0, ecx
.text:0000088E                 pop     ecx
.text:0000088F                 pop     esi
.text:00000890                 add     esp, 24h
.text:00000893                 cmp     ebp, esp
.text:00000895                 call    __RTC_CheckEsp
.text:0000089A                 mov     esp, ebp
.text:0000089C                 pop     ebp
.text:0000089D                 retn    4
.text:0000089D ?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z endp
.text:0000089D
.text:0000089D ; ---------------------------------------------------------------------------
.text:000008A0                 db 8 dup(0CCh)
.text:000008A8
.text:000008A8 ; =============== S U B R O U T I N E =======================================
.text:000008A8
.text:000008A8 ; Attributes: bp-based frame
.text:000008A8
.text:000008A8 ; bool __stdcall NWindows::NFile::NDir::CreateComplexDir(NWindows::NFile::NDir *this, const wchar_t *)
.text:000008A8                 public ?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text:000008A8 ?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text:000008A8
.text:000008A8 var_4C          = byte ptr -4Ch
.text:000008A8 var_4B          = byte ptr -4Bh
.text:000008A8 var_4A          = byte ptr -4Ah
.text:000008A8 var_49          = byte ptr -49h
.text:000008A8 var_48          = byte ptr -48h
.text:000008A8 var_47          = byte ptr -47h
.text:000008A8 var_46          = byte ptr -46h
.text:000008A8 var_45          = byte ptr -45h
.text:000008A8 var_44          = dword ptr -44h
.text:000008A8 var_3C          = byte ptr -3Ch
.text:000008A8 var_2C          = dword ptr -2Ch
.text:000008A8 var_24          = byte ptr -24h
.text:000008A8 var_14          = dword ptr -14h
.text:000008A8 var_10          = dword ptr -10h
.text:000008A8 var_C           = dword ptr -0Ch
.text:000008A8 var_4           = dword ptr -4
.text:000008A8 this            = dword ptr  8
.text:000008A8
.text:000008A8                 push    ebp
.text:000008A9                 mov     ebp, esp
.text:000008AB                 push    0FFFFFFFFh
.text:000008AD                 push    offset __ehhandler$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text:000008B2                 mov     eax, large fs:0
.text:000008B8                 push    eax
.text:000008B9                 sub     esp, 40h
.text:000008BC                 push    esi
.text:000008BD                 push    edi
.text:000008BE                 lea     edi, [ebp+var_4C]
.text:000008C1                 mov     ecx, 10h
.text:000008C6                 mov     eax, 0CCCCCCCCh
.text:000008CB                 rep stosd
.text:000008CD                 mov     eax, dword ptr ds:___security_cookie
.text:000008D2                 xor     eax, ebp
.text:000008D4                 push    eax             ; wchar_t *
.text:000008D5                 lea     eax, [ebp+var_C]
.text:000008D8                 mov     large fs:0, eax
.text:000008DE                 mov     eax, [ebp+this]
.text:000008E1                 push    eax             ; wchar_t *
.text:000008E2                 call    ?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z ; NWindows::NFile::NFind::GetFileAttrib(wchar_t const *)
.text:000008E7                 mov     [ebp+var_10], eax
.text:000008EA                 cmp     [ebp+var_10], 0FFFFFFFFh
.text:000008EE                 jz      short loc_8FF
.text:000008F0                 mov     ecx, [ebp+var_10]
.text:000008F3                 and     ecx, 10h
.text:000008F6                 jz      short loc_8FF
.text:000008F8                 mov     al, 1
.text:000008FA                 jmp     loc_B84
.text:000008FF ; ---------------------------------------------------------------------------
.text:000008FF
.text:000008FF loc_8FF:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+46j
.text:000008FF                                         ; NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+4Ej
.text:000008FF                 mov     edx, [ebp+this]
.text:00000902                 push    edx             ; wchar_t *
.text:00000903                 call    ?IsDriveRootPath_SuperAllowed@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDriveRootPath_SuperAllowed(wchar_t const *)
.text:00000908                 movzx   eax, al
.text:0000090B                 test    eax, eax
.text:0000090D                 jz      short loc_916
.text:0000090F                 xor     al, al
.text:00000911                 jmp     loc_B84
.text:00000916 ; ---------------------------------------------------------------------------
.text:00000916
.text:00000916 loc_916:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+65j
.text:00000916                 mov     ecx, [ebp+this]
.text:00000919                 push    ecx             ; wchar_t *
.text:0000091A                 call    ?GetRootPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetRootPrefixSize(wchar_t const *)
.text:0000091F                 mov     [ebp+var_14], eax
.text:00000922                 mov     edx, [ebp+this]
.text:00000925                 push    edx
.text:00000926                 lea     ecx, [ebp+var_24]
.text:00000929                 call    ??0UString@@QAE@PB_W@Z ; UString::UString(wchar_t const *)
.text:0000092E                 mov     [ebp+var_4], 0
.text:00000935                 lea     ecx, [ebp+var_24] ; this
.text:00000938                 call    ?ReverseFind_PathSepar@UString@@QBEHXZ ; UString::ReverseFind_PathSepar(void)
.text:0000093D                 mov     [ebp+var_2C], eax
.text:00000940                 cmp     [ebp+var_2C], 0
.text:00000944                 jl      short loc_986
.text:00000946                 lea     ecx, [ebp+var_24] ; this
.text:00000949                 call    ?Len@UString@@QBEIXZ ; UString::Len(void)
.text:0000094E                 sub     eax, 1
.text:00000951                 cmp     [ebp+var_2C], eax
.text:00000954                 jnz     short loc_986
.text:00000956                 lea     ecx, [ebp+var_24] ; this
.text:00000959                 call    ?Len@UString@@QBEIXZ ; UString::Len(void)
.text:0000095E                 cmp     eax, 1
.text:00000961                 jnz     short loc_97E
.text:00000963                 mov     [ebp+var_45], 1
.text:00000967                 mov     [ebp+var_4], 0FFFFFFFFh
.text:0000096E                 lea     ecx, [ebp+var_24] ; this
.text:00000971                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00000976                 mov     al, [ebp+var_45]
.text:00000979                 jmp     loc_B84
.text:0000097E ; ---------------------------------------------------------------------------
.text:0000097E
.text:0000097E loc_97E:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+B9j
.text:0000097E                 lea     ecx, [ebp+var_24] ; this
.text:00000981                 call    ?DeleteBack@UString@@QAEXXZ ; UString::DeleteBack(void)
.text:00000986
.text:00000986 loc_986:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+9Cj
.text:00000986                                         ; NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+ACj
.text:00000986                 lea     eax, [ebp+var_24]
.text:00000989                 push    eax
.text:0000098A                 lea     ecx, [ebp+var_3C]
.text:0000098D                 call    ??0UString@@QAE@ABV0@@Z ; UString::UString(UString const &)
.text:00000992                 mov     byte ptr [ebp+var_4], 1
.text:00000996                 lea     ecx, [ebp+var_24] ; this
.text:00000999                 call    ?Len@UString@@QBEIXZ ; UString::Len(void)
.text:0000099E                 mov     [ebp+var_2C], eax
.text:000009A1
.text:000009A1 loc_9A1:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+219j
.text:000009A1                 lea     ecx, [ebp+var_24]
.text:000009A4                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:000009A9                 push    eax             ; lpPathName
.text:000009AA                 call    ?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NDir::CreateDir2(wchar_t const *)
.text:000009AF                 movzx   ecx, al
.text:000009B2                 test    ecx, ecx
.text:000009B4                 jz      short loc_9BB
.text:000009B6                 jmp     loc_AC6
.text:000009BB ; ---------------------------------------------------------------------------
.text:000009BB
.text:000009BB loc_9BB:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+10Cj
.text:000009BB                 mov     esi, esp
.text:000009BD                 call    dword ptr ds:__imp__GetLastError@0 ; GetLastError()
.text:000009C3                 cmp     esi, esp
.text:000009C5                 call    __RTC_CheckEsp
.text:000009CA                 cmp     eax, 0B7h ; '+'
.text:000009CF                 jnz     short loc_9F8
.text:000009D1                 mov     [ebp+var_46], 0
.text:000009D5                 mov     byte ptr [ebp+var_4], 0
.text:000009D9                 lea     ecx, [ebp+var_3C] ; this
.text:000009DC                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:000009E1                 mov     [ebp+var_4], 0FFFFFFFFh
.text:000009E8                 lea     ecx, [ebp+var_24] ; this
.text:000009EB                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:000009F0                 mov     al, [ebp+var_46]
.text:000009F3                 jmp     loc_B84
.text:000009F8 ; ---------------------------------------------------------------------------
.text:000009F8
.text:000009F8 loc_9F8:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+127j
.text:000009F8                 lea     ecx, [ebp+var_24] ; this
.text:000009FB                 call    ?ReverseFind_PathSepar@UString@@QBEHXZ ; UString::ReverseFind_PathSepar(void)
.text:00000A00                 mov     [ebp+var_2C], eax
.text:00000A03                 cmp     [ebp+var_2C], 0
.text:00000A07                 jl      short loc_A0F
.text:00000A09                 cmp     [ebp+var_2C], 0
.text:00000A0D                 jnz     short loc_A36
.text:00000A0F
.text:00000A0F loc_A0F:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+15Fj
.text:00000A0F                 mov     [ebp+var_47], 0
.text:00000A13                 mov     byte ptr [ebp+var_4], 0
.text:00000A17                 lea     ecx, [ebp+var_3C] ; this
.text:00000A1A                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00000A1F                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000A26                 lea     ecx, [ebp+var_24] ; this
.text:00000A29                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00000A2E                 mov     al, [ebp+var_47]
.text:00000A31                 jmp     loc_B84
.text:00000A36 ; ---------------------------------------------------------------------------
.text:00000A36
.text:00000A36 loc_A36:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+165j
.text:00000A36                 cmp     [ebp+var_2C], 1
.text:00000A3A                 jnz     short loc_A83
.text:00000A3C                 lea     ecx, [ebp+var_24]
.text:00000A3F                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:00000A44                 movzx   edx, word ptr [eax]
.text:00000A47                 cmp     edx, 5Ch ; '\'
.text:00000A4A                 jz      short loc_A5C
.text:00000A4C                 lea     ecx, [ebp+var_24]
.text:00000A4F                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:00000A54                 movzx   eax, word ptr [eax]
.text:00000A57                 cmp     eax, 2Fh ; '/'
.text:00000A5A                 jnz     short loc_A83
.text:00000A5C
.text:00000A5C loc_A5C:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+1A2j
.text:00000A5C                 mov     [ebp+var_48], 0
.text:00000A60                 mov     byte ptr [ebp+var_4], 0
.text:00000A64                 lea     ecx, [ebp+var_3C] ; this
.text:00000A67                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00000A6C                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000A73                 lea     ecx, [ebp+var_24] ; this
.text:00000A76                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00000A7B                 mov     al, [ebp+var_48]
.text:00000A7E                 jmp     loc_B84
.text:00000A83 ; ---------------------------------------------------------------------------
.text:00000A83
.text:00000A83 loc_A83:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+192j
.text:00000A83                                         ; NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+1B2j
.text:00000A83                 mov     ecx, [ebp+var_2C]
.text:00000A86                 add     ecx, 1
.text:00000A89                 cmp     [ebp+var_14], ecx
.text:00000A8C                 jb      short loc_AB5
.text:00000A8E                 mov     [ebp+var_49], 0
.text:00000A92                 mov     byte ptr [ebp+var_4], 0
.text:00000A96                 lea     ecx, [ebp+var_3C] ; this
.text:00000A99                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00000A9E                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000AA5                 lea     ecx, [ebp+var_24] ; this
.text:00000AA8                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00000AAD                 mov     al, [ebp+var_49]
.text:00000AB0                 jmp     loc_B84
.text:00000AB5 ; ---------------------------------------------------------------------------
.text:00000AB5
.text:00000AB5 loc_AB5:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+1E4j
.text:00000AB5                 mov     edx, [ebp+var_2C]
.text:00000AB8                 push    edx             ; unsigned int
.text:00000AB9                 lea     ecx, [ebp+var_24] ; this
.text:00000ABC                 call    ?DeleteFrom@UString@@QAEXI@Z ; UString::DeleteFrom(uint)
.text:00000AC1                 jmp     loc_9A1
.text:00000AC6 ; ---------------------------------------------------------------------------
.text:00000AC6
.text:00000AC6 loc_AC6:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+10Ej
.text:00000AC6                                         ; NWindows::NFile::NDir::CreateComplexDir(wchar_t const *):loc_B5Dj
.text:00000AC6                 lea     ecx, [ebp+var_3C] ; this
.text:00000AC9                 call    ?Len@UString@@QBEIXZ ; UString::Len(void)
.text:00000ACE                 cmp     [ebp+var_2C], eax
.text:00000AD1                 jge     loc_B62
.text:00000AD7                 mov     eax, [ebp+var_2C]
.text:00000ADA                 add     eax, 1
.text:00000ADD                 push    eax             ; unsigned int
.text:00000ADE                 lea     ecx, [ebp+var_3C] ; this
.text:00000AE1                 call    ?Ptr@UString@@QBEPB_WI@Z ; UString::Ptr(uint)
.text:00000AE6                 push    eax             ; wchar_t *
.text:00000AE7                 call    ?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z ; NWindows::NFile::NName::FindSepar(wchar_t const *)
.text:00000AEC                 mov     [ebp+var_44], eax
.text:00000AEF                 cmp     [ebp+var_44], 0
.text:00000AF3                 jge     short loc_B02
.text:00000AF5                 lea     ecx, [ebp+var_3C] ; this
.text:00000AF8                 call    ?Len@UString@@QBEIXZ ; UString::Len(void)
.text:00000AFD                 mov     [ebp+var_2C], eax
.text:00000B00                 jmp     short loc_B0F
.text:00000B02 ; ---------------------------------------------------------------------------
.text:00000B02
.text:00000B02 loc_B02:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+24Bj
.text:00000B02                 mov     ecx, [ebp+var_44]
.text:00000B05                 mov     edx, [ebp+var_2C]
.text:00000B08                 lea     eax, [edx+ecx+1]
.text:00000B0C                 mov     [ebp+var_2C], eax
.text:00000B0F
.text:00000B0F loc_B0F:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+258j
.text:00000B0F                 mov     ecx, [ebp+var_2C]
.text:00000B12                 push    ecx             ; unsigned int
.text:00000B13                 lea     ecx, [ebp+var_3C]
.text:00000B16                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:00000B1B                 push    eax             ; wchar_t *
.text:00000B1C                 lea     ecx, [ebp+var_24] ; this
.text:00000B1F                 call    ?SetFrom@UString@@QAEXPB_WI@Z ; UString::SetFrom(wchar_t const *,uint)
.text:00000B24                 lea     ecx, [ebp+var_24]
.text:00000B27                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:00000B2C                 push    eax             ; lpPathName
.text:00000B2D                 call    ?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NDir::CreateDir(wchar_t const *)
.text:00000B32                 movzx   edx, al
.text:00000B35                 test    edx, edx
.text:00000B37                 jnz     short loc_B5D
.text:00000B39                 mov     [ebp+var_4A], 0
.text:00000B3D                 mov     byte ptr [ebp+var_4], 0
.text:00000B41                 lea     ecx, [ebp+var_3C] ; this
.text:00000B44                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00000B49                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000B50                 lea     ecx, [ebp+var_24] ; this
.text:00000B53                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00000B58                 mov     al, [ebp+var_4A]
.text:00000B5B                 jmp     short loc_B84
.text:00000B5D ; ---------------------------------------------------------------------------
.text:00000B5D
.text:00000B5D loc_B5D:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+28Fj
.text:00000B5D                 jmp     loc_AC6
.text:00000B62 ; ---------------------------------------------------------------------------
.text:00000B62
.text:00000B62 loc_B62:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+229j
.text:00000B62                 mov     [ebp+var_4B], 1
.text:00000B66                 mov     byte ptr [ebp+var_4], 0
.text:00000B6A                 lea     ecx, [ebp+var_3C] ; this
.text:00000B6D                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00000B72                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000B79                 lea     ecx, [ebp+var_24] ; this
.text:00000B7C                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00000B81                 mov     al, [ebp+var_4B]
.text:00000B84
.text:00000B84 loc_B84:                                ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+52j
.text:00000B84                                         ; NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+69j ...
.text:00000B84                 push    edx
.text:00000B85                 mov     ecx, ebp
.text:00000B87                 push    eax
.text:00000B88                 lea     edx, $LN27
.text:00000B8E                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00000B93                 pop     eax
.text:00000B94                 pop     edx
.text:00000B95                 mov     ecx, [ebp+var_C]
.text:00000B98                 mov     large fs:0, ecx
.text:00000B9F                 pop     ecx
.text:00000BA0                 pop     edi
.text:00000BA1                 pop     esi
.text:00000BA2                 add     esp, 4Ch
.text:00000BA5                 cmp     ebp, esp
.text:00000BA7                 call    __RTC_CheckEsp
.text:00000BAC                 mov     esp, ebp
.text:00000BAE                 pop     ebp
.text:00000BAF                 retn    4
.text:00000BAF ?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z endp ; sp-analysis failed
.text:00000BAF
.text:00000BAF ; ---------------------------------------------------------------------------
.text:00000BB2                 align 4
.text:00000BB4 $LN27           dd 2                    ; DATA XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+2E0o
.text:00000BB8                 dd offset $LN26
.text:00000BBC $LN26           dd 0FFFFFFDCh, 0Ch      ; DATA XREF: .text:00000BB8o
.text:00000BC4                 dd offset $LN23         ; "path"
.text:00000BC8                 dd 0FFFFFFC4h, 0Ch
.text:00000BD0                 dd offset $LN24         ; "path2"
.text:00000BD4 $LN24           db 'path2',0            ; DATA XREF: .text:00000BD0o
.text:00000BDA $LN23           db 'path',0             ; DATA XREF: .text:00000BC4o
.text:00000BDF                 db 9 dup(0CCh)
.text:00000BE8
.text:00000BE8 ; =============== S U B R O U T I N E =======================================
.text:00000BE8
.text:00000BE8 ; Attributes: bp-based frame
.text:00000BE8
.text:00000BE8 ; int __stdcall NWindows::NFile::NDir::CreateDir2(LPCWSTR lpPathName)
.text:00000BE8 ?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text:00000BE8                                         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+102p
.text:00000BE8
.text:00000BE8 var_68          = dword ptr -68h
.text:00000BE8 var_64          = dword ptr -64h
.text:00000BE8 var_5E          = byte ptr -5Eh
.text:00000BE8 var_5D          = byte ptr -5Dh
.text:00000BE8 SecurityAttributes= _SECURITY_ATTRIBUTES ptr -5Ch
.text:00000BE8 var_50          = dword ptr -50h
.text:00000BE8 var_48          = byte ptr -48h
.text:00000BE8 var_C           = dword ptr -0Ch
.text:00000BE8 var_4           = dword ptr -4
.text:00000BE8 lpPathName      = dword ptr  8
.text:00000BE8
.text:00000BE8                 push    ebp
.text:00000BE9                 mov     ebp, esp
.text:00000BEB                 push    0FFFFFFFFh
.text:00000BED                 push    offset __ehhandler$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z
.text:00000BF2                 mov     eax, large fs:0
.text:00000BF8                 push    eax
.text:00000BF9                 sub     esp, 5Ch
.text:00000BFC                 push    esi
.text:00000BFD                 push    edi
.text:00000BFE                 lea     edi, [ebp+var_68]
.text:00000C01                 mov     ecx, 17h
.text:00000C06                 mov     eax, 0CCCCCCCCh
.text:00000C0B                 rep stosd
.text:00000C0D                 mov     eax, dword ptr ds:___security_cookie
.text:00000C12                 xor     eax, ebp
.text:00000C14                 push    eax
.text:00000C15                 lea     eax, [ebp+var_C]
.text:00000C18                 mov     large fs:0, eax
.text:00000C1E                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:00000C25                 test    eax, eax
.text:00000C27                 jnz     short loc_C81
.text:00000C29                 mov     esi, esp
.text:00000C2B                 push    0               ; lpSecurityAttributes
.text:00000C2D                 mov     ecx, [ebp+lpPathName]
.text:00000C30                 push    ecx
.text:00000C31                 lea     edx, [ebp+SecurityAttributes]
.text:00000C34                 push    edx             ; lpSecurityAttributes
.text:00000C35                 call    ?fs2fas@@YG?AVAString@@PB_W@Z ; fs2fas(wchar_t const *)
.text:00000C3A                 mov     [ebp+var_64], eax
.text:00000C3D                 mov     eax, [ebp+var_64]
.text:00000C40                 mov     [ebp+var_68], eax
.text:00000C43                 mov     [ebp+var_4], 0
.text:00000C4A                 mov     ecx, [ebp+var_68]
.text:00000C4D                 call    ??BAString@@QBEPBDXZ ; AString::operator char const *(void)
.text:00000C52                 push    eax             ; lpPathName
.text:00000C53                 call    dword ptr ds:__imp__CreateDirectoryA@8 ; CreateDirectoryA(x,x)
.text:00000C59                 cmp     esi, esp
.text:00000C5B                 call    __RTC_CheckEsp
.text:00000C60                 mov     [ebp+var_50], eax
.text:00000C63                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000C6A                 lea     ecx, [ebp+SecurityAttributes] ; this
.text:00000C6D                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:00000C72                 cmp     [ebp+var_50], 0
.text:00000C76                 jz      short loc_C7F
.text:00000C78                 mov     al, 1
.text:00000C7A                 jmp     loc_D0F
.text:00000C7F ; ---------------------------------------------------------------------------
.text:00000C7F
.text:00000C7F loc_C7F:                                ; CODE XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *)+8Ej
.text:00000C7F                 jmp     short loc_C9E
.text:00000C81 ; ---------------------------------------------------------------------------
.text:00000C81
.text:00000C81 loc_C81:                                ; CODE XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *)+3Fj
.text:00000C81                 mov     esi, esp
.text:00000C83                 push    0               ; lpSecurityAttributes
.text:00000C85                 mov     ecx, [ebp+lpPathName]
.text:00000C88                 push    ecx             ; lpPathName
.text:00000C89                 call    dword ptr ds:__imp__CreateDirectoryW@8 ; CreateDirectoryW(x,x)
.text:00000C8F                 cmp     esi, esp
.text:00000C91                 call    __RTC_CheckEsp
.text:00000C96                 test    eax, eax
.text:00000C98                 jz      short loc_C9E
.text:00000C9A                 mov     al, 1
.text:00000C9C                 jmp     short loc_D0F
.text:00000C9E ; ---------------------------------------------------------------------------
.text:00000C9E
.text:00000C9E loc_C9E:                                ; CODE XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *):loc_C7Fj
.text:00000C9E                                         ; NWindows::NFile::NDir::CreateDir2(wchar_t const *)+B0j
.text:00000C9E                 mov     esi, esp
.text:00000CA0                 call    dword ptr ds:__imp__GetLastError@0 ; GetLastError()
.text:00000CA6                 cmp     esi, esp
.text:00000CA8                 call    __RTC_CheckEsp
.text:00000CAD                 cmp     eax, 0B7h ; '+'
.text:00000CB2                 jz      short loc_CB8
.text:00000CB4                 xor     al, al
.text:00000CB6                 jmp     short loc_D0F
.text:00000CB8 ; ---------------------------------------------------------------------------
.text:00000CB8
.text:00000CB8 loc_CB8:                                ; CODE XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *)+CAj
.text:00000CB8                 lea     ecx, [ebp+var_48] ; this
.text:00000CBB                 call    ??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::CFileInfo(void)
.text:00000CC0                 mov     [ebp+var_4], 1
.text:00000CC7                 mov     edx, [ebp+lpPathName]
.text:00000CCA                 push    edx             ; wchar_t *
.text:00000CCB                 lea     ecx, [ebp+var_48] ; this
.text:00000CCE                 call    ?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find(wchar_t const *)
.text:00000CD3                 movzx   eax, al
.text:00000CD6                 test    eax, eax
.text:00000CD8                 jnz     short loc_CF2
.text:00000CDA                 mov     [ebp+var_5D], 0
.text:00000CDE                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000CE5                 lea     ecx, [ebp+var_48] ; this
.text:00000CE8                 call    ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::~CFileInfo(void)
.text:00000CED                 mov     al, [ebp+var_5D]
.text:00000CF0                 jmp     short loc_D0F
.text:00000CF2 ; ---------------------------------------------------------------------------
.text:00000CF2
.text:00000CF2 loc_CF2:                                ; CODE XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *)+F0j
.text:00000CF2                 lea     ecx, [ebp+var_48] ; this
.text:00000CF5                 call    ?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir(void)
.text:00000CFA                 mov     [ebp+var_5E], al
.text:00000CFD                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000D04                 lea     ecx, [ebp+var_48] ; this
.text:00000D07                 call    ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::~CFileInfo(void)
.text:00000D0C                 mov     al, [ebp+var_5E]
.text:00000D0F
.text:00000D0F loc_D0F:                                ; CODE XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *)+92j
.text:00000D0F                                         ; NWindows::NFile::NDir::CreateDir2(wchar_t const *)+B4j ...
.text:00000D0F                 push    edx
.text:00000D10                 mov     ecx, ebp
.text:00000D12                 push    eax
.text:00000D13                 lea     edx, $LN14
.text:00000D19                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00000D1E                 pop     eax
.text:00000D1F                 pop     edx
.text:00000D20                 mov     ecx, [ebp+var_C]
.text:00000D23                 mov     large fs:0, ecx
.text:00000D2A                 pop     ecx
.text:00000D2B                 pop     edi
.text:00000D2C                 pop     esi
.text:00000D2D                 add     esp, 68h
.text:00000D30                 cmp     ebp, esp
.text:00000D32                 call    __RTC_CheckEsp
.text:00000D37                 mov     esp, ebp
.text:00000D39                 pop     ebp
.text:00000D3A                 retn    4
.text:00000D3A ?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z endp
.text:00000D3A
.text:00000D3A ; ---------------------------------------------------------------------------
.text:00000D3D                 align 10h
.text:00000D40 $LN14           dd 1                    ; DATA XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *)+12Bo
.text:00000D44                 dd offset $LN13_1
.text:00000D48 $LN13_1         dd 0FFFFFFB8h, 38h      ; DATA XREF: .text:00000D44o
.text:00000D50                 dd offset $LN11
.text:00000D54 $LN11           dd 0CC006966h           ; DATA XREF: .text:00000D50o
.text:00000D58
.text:00000D58 ; =============== S U B R O U T I N E =======================================
.text:00000D58
.text:00000D58 ; Attributes: bp-based frame
.text:00000D58
.text:00000D58 ; bool __stdcall NWindows::NFile::NDir::DeleteFileAlways(LPCWSTR lpFileName, const wchar_t *)
.text:00000D58                 public ?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z
.text:00000D58 ?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text:00000D58                                         ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+1E7p
.text:00000D58                                         ; NWindows::NFile::NDir::CTempFile::Remove(void)+28p ...
.text:00000D58
.text:00000D58 var_28          = dword ptr -28h
.text:00000D58 var_24          = dword ptr -24h
.text:00000D58 var_20          = dword ptr -20h
.text:00000D58 var_1C          = dword ptr -1Ch
.text:00000D58 var_18          = dword ptr -18h
.text:00000D58 var_14          = dword ptr -14h
.text:00000D58 var_10          = dword ptr -10h
.text:00000D58 var_C           = dword ptr -0Ch
.text:00000D58 var_4           = dword ptr -4
.text:00000D58 lpFileName      = dword ptr  8
.text:00000D58
.text:00000D58                 push    ebp
.text:00000D59                 mov     ebp, esp
.text:00000D5B                 push    0FFFFFFFFh
.text:00000D5D                 push    offset __ehhandler$?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z
.text:00000D62                 mov     eax, large fs:0
.text:00000D68                 push    eax
.text:00000D69                 sub     esp, 1Ch
.text:00000D6C                 push    esi
.text:00000D6D                 mov     eax, 0CCCCCCCCh
.text:00000D72                 mov     [ebp+var_28], eax
.text:00000D75                 mov     [ebp+var_24], eax
.text:00000D78                 mov     [ebp+var_20], eax
.text:00000D7B                 mov     [ebp+var_1C], eax
.text:00000D7E                 mov     [ebp+var_18], eax
.text:00000D81                 mov     [ebp+var_14], eax
.text:00000D84                 mov     [ebp+var_10], eax
.text:00000D87                 mov     eax, dword ptr ds:___security_cookie
.text:00000D8C                 xor     eax, ebp
.text:00000D8E                 push    eax             ; wchar_t *
.text:00000D8F                 lea     eax, [ebp+var_C]
.text:00000D92                 mov     large fs:0, eax
.text:00000D98                 mov     eax, [ebp+lpFileName]
.text:00000D9B                 push    eax             ; unsigned __int32
.text:00000D9C                 call    ?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z ; NWindows::NFile::NFind::GetFileAttrib(wchar_t const *)
.text:00000DA1                 mov     [ebp+var_10], eax
.text:00000DA4                 cmp     [ebp+var_10], 0FFFFFFFFh
.text:00000DA8                 jz      short loc_DD5
.text:00000DAA                 mov     ecx, [ebp+var_10]
.text:00000DAD                 and     ecx, 10h
.text:00000DB0                 jnz     short loc_DD5
.text:00000DB2                 mov     edx, [ebp+var_10]
.text:00000DB5                 and     edx, 1
.text:00000DB8                 jz      short loc_DD5
.text:00000DBA                 mov     eax, [ebp+var_10]
.text:00000DBD                 and     eax, 0FFFFFFFEh
.text:00000DC0                 push    eax             ; dwFileAttributes
.text:00000DC1                 mov     ecx, [ebp+lpFileName]
.text:00000DC4                 push    ecx             ; lpFileName
.text:00000DC5                 call    ?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z ; NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)
.text:00000DCA                 movzx   edx, al
.text:00000DCD                 test    edx, edx
.text:00000DCF                 jnz     short loc_DD5
.text:00000DD1                 xor     al, al
.text:00000DD3                 jmp     short loc_E50
.text:00000DD5 ; ---------------------------------------------------------------------------
.text:00000DD5
.text:00000DD5 loc_DD5:                                ; CODE XREF: NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+50j
.text:00000DD5                                         ; NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+58j ...
.text:00000DD5                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:00000DDC                 test    eax, eax
.text:00000DDE                 jnz     short loc_E33
.text:00000DE0                 mov     ecx, [ebp+lpFileName]
.text:00000DE3                 push    ecx
.text:00000DE4                 lea     edx, [ebp+var_20]
.text:00000DE7                 push    edx
.text:00000DE8                 call    ?fs2fas@@YG?AVAString@@PB_W@Z ; fs2fas(wchar_t const *)
.text:00000DED                 mov     [ebp+var_24], eax
.text:00000DF0                 mov     eax, [ebp+var_24]
.text:00000DF3                 mov     [ebp+var_28], eax
.text:00000DF6                 mov     [ebp+var_4], 0
.text:00000DFD                 mov     ecx, [ebp+var_28]
.text:00000E00                 call    ??BAString@@QBEPBDXZ ; AString::operator char const *(void)
.text:00000E05                 mov     esi, esp
.text:00000E07                 push    eax             ; lpFileName
.text:00000E08                 call    dword ptr ds:__imp__DeleteFileA@4 ; DeleteFileA(x)
.text:00000E0E                 cmp     esi, esp
.text:00000E10                 call    __RTC_CheckEsp
.text:00000E15                 mov     [ebp+var_14], eax
.text:00000E18                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000E1F                 lea     ecx, [ebp+var_20] ; this
.text:00000E22                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:00000E27                 cmp     [ebp+var_14], 0
.text:00000E2B                 jz      short loc_E31
.text:00000E2D                 mov     al, 1
.text:00000E2F                 jmp     short loc_E50
.text:00000E31 ; ---------------------------------------------------------------------------
.text:00000E31
.text:00000E31 loc_E31:                                ; CODE XREF: NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+D3j
.text:00000E31                 jmp     short loc_E4E
.text:00000E33 ; ---------------------------------------------------------------------------
.text:00000E33
.text:00000E33 loc_E33:                                ; CODE XREF: NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+86j
.text:00000E33                 mov     esi, esp
.text:00000E35                 mov     ecx, [ebp+lpFileName]
.text:00000E38                 push    ecx             ; lpFileName
.text:00000E39                 call    dword ptr ds:__imp__DeleteFileW@4 ; DeleteFileW(x)
.text:00000E3F                 cmp     esi, esp
.text:00000E41                 call    __RTC_CheckEsp
.text:00000E46                 test    eax, eax
.text:00000E48                 jz      short loc_E4E
.text:00000E4A                 mov     al, 1
.text:00000E4C                 jmp     short loc_E50
.text:00000E4E ; ---------------------------------------------------------------------------
.text:00000E4E
.text:00000E4E loc_E4E:                                ; CODE XREF: NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *):loc_E31j
.text:00000E4E                                         ; NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+F0j
.text:00000E4E                 xor     al, al
.text:00000E50
.text:00000E50 loc_E50:                                ; CODE XREF: NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+7Bj
.text:00000E50                                         ; NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+D7j ...
.text:00000E50                 mov     ecx, [ebp+var_C]
.text:00000E53                 mov     large fs:0, ecx
.text:00000E5A                 pop     ecx
.text:00000E5B                 pop     esi
.text:00000E5C                 add     esp, 28h
.text:00000E5F                 cmp     ebp, esp
.text:00000E61                 call    __RTC_CheckEsp
.text:00000E66                 mov     esp, ebp
.text:00000E68                 pop     ebp
.text:00000E69                 retn    4
.text:00000E69 ?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z endp
.text:00000E69
.text:00000E69 ; ---------------------------------------------------------------------------
.text:00000E6C                 db 0Ch dup(0CCh)
.text:00000E78
.text:00000E78 ; =============== S U B R O U T I N E =======================================
.text:00000E78
.text:00000E78 ; Attributes: bp-based frame
.text:00000E78
.text:00000E78 ; bool __stdcall NWindows::NFile::NDir::RemoveDirWithSubItems(NWindows::NFile::NDir *this, const struct UString *)
.text:00000E78                 public ?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z
.text:00000E78 ?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z proc near
.text:00000E78                                         ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+194p
.text:00000E78                                         ; NWindows::NFile::NDir::CTempDir::Remove(void)+23p
.text:00000E78
.text:00000E78 var_C4          = byte ptr -0C4h
.text:00000E78 var_C3          = byte ptr -0C3h
.text:00000E78 var_C2          = byte ptr -0C2h
.text:00000E78 var_C1          = byte ptr -0C1h
.text:00000E78 var_BC          = byte ptr -0BCh
.text:00000E78 var_94          = byte ptr -94h
.text:00000E78 var_7C          = byte ptr -7Ch
.text:00000E78 var_68          = dword ptr -68h
.text:00000E78 var_60          = byte ptr -60h
.text:00000E78 var_4C          = byte ptr -4Ch
.text:00000E78 var_D           = byte ptr -0Dh
.text:00000E78 var_C           = dword ptr -0Ch
.text:00000E78 var_4           = dword ptr -4
.text:00000E78 this            = dword ptr  8
.text:00000E78
.text:00000E78                 push    ebp
.text:00000E79                 mov     ebp, esp
.text:00000E7B                 push    0FFFFFFFFh
.text:00000E7D                 push    offset __ehhandler$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z
.text:00000E82                 mov     eax, large fs:0
.text:00000E88                 push    eax
.text:00000E89                 sub     esp, 0B8h
.text:00000E8F                 push    esi
.text:00000E90                 push    edi
.text:00000E91                 lea     edi, [ebp+var_C4]
.text:00000E97                 mov     ecx, 2Eh ; '.'
.text:00000E9C                 mov     eax, 0CCCCCCCCh
.text:00000EA1                 rep stosd
.text:00000EA3                 mov     eax, dword ptr ds:___security_cookie
.text:00000EA8                 xor     eax, ebp
.text:00000EAA                 push    eax             ; wchar_t *
.text:00000EAB                 lea     eax, [ebp+var_C]
.text:00000EAE                 mov     large fs:0, eax
.text:00000EB4                 mov     [ebp+var_D], 1
.text:00000EB8                 lea     ecx, [ebp+var_4C] ; this
.text:00000EBB                 call    ??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::CFileInfo(void)
.text:00000EC0                 mov     [ebp+var_4], 0
.text:00000EC7                 mov     ecx, [ebp+this]
.text:00000ECA                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:00000ECF                 push    eax             ; wchar_t *
.text:00000ED0                 lea     ecx, [ebp+var_4C] ; this
.text:00000ED3                 call    ?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find(wchar_t const *)
.text:00000ED8                 movzx   eax, al
.text:00000EDB                 test    eax, eax
.text:00000EDD                 jnz     short loc_F00
.text:00000EDF                 mov     [ebp+var_C1], 0
.text:00000EE6                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000EED                 lea     ecx, [ebp+var_4C] ; this
.text:00000EF0                 call    ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::~CFileInfo(void)
.text:00000EF5                 mov     al, [ebp+var_C1]
.text:00000EFB                 jmp     loc_10FC
.text:00000F00 ; ---------------------------------------------------------------------------
.text:00000F00
.text:00000F00 loc_F00:                                ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+65j
.text:00000F00                 lea     ecx, [ebp+var_4C] ; this
.text:00000F03                 call    ?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir(void)
.text:00000F08                 movzx   ecx, al
.text:00000F0B                 test    ecx, ecx
.text:00000F0D                 jnz     short loc_F44
.text:00000F0F                 mov     esi, esp
.text:00000F11                 push    10Bh            ; dwErrCode
.text:00000F16                 call    dword ptr ds:__imp__SetLastError@4 ; SetLastError(x)
.text:00000F1C                 cmp     esi, esp
.text:00000F1E                 call    __RTC_CheckEsp
.text:00000F23                 mov     [ebp+var_C2], 0
.text:00000F2A                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000F31                 lea     ecx, [ebp+var_4C] ; this
.text:00000F34                 call    ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::~CFileInfo(void)
.text:00000F39                 mov     al, [ebp+var_C2]
.text:00000F3F                 jmp     loc_10FC
.text:00000F44 ; ---------------------------------------------------------------------------
.text:00000F44
.text:00000F44 loc_F44:                                ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+95j
.text:00000F44                 lea     ecx, [ebp+var_4C] ; this
.text:00000F47                 call    ?HasReparsePoint@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::HasReparsePoint(void)
.text:00000F4C                 movzx   edx, al
.text:00000F4F                 test    edx, edx
.text:00000F51                 jz      short loc_F57
.text:00000F53                 mov     [ebp+var_D], 0
.text:00000F57
.text:00000F57 loc_F57:                                ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+D9j
.text:00000F57                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000F5E                 lea     ecx, [ebp+var_4C] ; this
.text:00000F61                 call    ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::~CFileInfo(void)
.text:00000F66                 movzx   eax, [ebp+var_D]
.text:00000F6A                 test    eax, eax
.text:00000F6C                 jz      loc_10D3
.text:00000F72                 mov     ecx, [ebp+this]
.text:00000F75                 push    ecx
.text:00000F76                 lea     ecx, [ebp+var_60]
.text:00000F79                 call    ??0UString@@QAE@ABV0@@Z ; UString::UString(UString const &)
.text:00000F7E                 mov     [ebp+var_4], 1
.text:00000F85                 lea     ecx, [ebp+var_60] ; this
.text:00000F88                 call    ?Add_PathSepar@UString@@QAEXXZ ; UString::Add_PathSepar(void)
.text:00000F8D                 lea     ecx, [ebp+var_60] ; this
.text:00000F90                 call    ?Len@UString@@QBEIXZ ; UString::Len(void)
.text:00000F95                 mov     [ebp+var_68], eax
.text:00000F98                 push    2Ah ; '*'
.text:00000F9A                 lea     ecx, [ebp+var_60]
.text:00000F9D                 call    ??YUString@@QAEAAV0@_W@Z ; UString::operator+=(wchar_t)
.text:00000FA2                 lea     edx, [ebp+var_60]
.text:00000FA5                 push    edx             ; struct UString *
.text:00000FA6                 lea     ecx, [ebp+var_7C] ; this
.text:00000FA9                 call    ??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z ; NWindows::NFile::NFind::CEnumerator::CEnumerator(UString const &)
.text:00000FAE                 mov     byte ptr [ebp+var_4], 2
.text:00000FB2                 lea     ecx, [ebp+var_BC] ; this
.text:00000FB8                 call    ??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::CFileInfo(void)
.text:00000FBD                 mov     byte ptr [ebp+var_4], 3
.text:00000FC1
.text:00000FC1 loc_FC1:                                ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &):loc_10A4j
.text:00000FC1                 lea     eax, [ebp+var_BC]
.text:00000FC7                 push    eax             ; struct NWindows::NFile::NFind::CFileInfo *
.text:00000FC8                 lea     ecx, [ebp+var_7C] ; this
.text:00000FCB                 call    ?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@@Z ; NWindows::NFile::NFind::CEnumerator::Next(NWindows::NFile::NFind::CFileInfo &)
.text:00000FD0                 movzx   ecx, al
.text:00000FD3                 test    ecx, ecx
.text:00000FD5                 jz      loc_10A9
.text:00000FDB                 mov     edx, [ebp+var_68]
.text:00000FDE                 push    edx             ; unsigned int
.text:00000FDF                 lea     ecx, [ebp+var_60] ; this
.text:00000FE2                 call    ?DeleteFrom@UString@@QAEXI@Z ; UString::DeleteFrom(uint)
.text:00000FE7                 lea     eax, [ebp+var_94]
.text:00000FED                 push    eax
.text:00000FEE                 lea     ecx, [ebp+var_60]
.text:00000FF1                 call    ??YUString@@QAEAAV0@ABV0@@Z ; UString::operator+=(UString const &)
.text:00000FF6                 lea     ecx, [ebp+var_BC] ; this
.text:00000FFC                 call    ?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir(void)
.text:00001001                 movzx   ecx, al
.text:00001004                 test    ecx, ecx
.text:00001006                 jz      short loc_1056
.text:00001008                 lea     edx, [ebp+var_60]
.text:0000100B                 push    edx             ; this
.text:0000100C                 call    ?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z ; NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)
.text:00001011                 movzx   eax, al
.text:00001014                 test    eax, eax
.text:00001016                 jnz     short loc_1054
.text:00001018                 mov     [ebp+var_C3], 0
.text:0000101F                 mov     byte ptr [ebp+var_4], 2
.text:00001023                 lea     ecx, [ebp+var_BC] ; this
.text:00001029                 call    ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::~CFileInfo(void)
.text:0000102E                 mov     byte ptr [ebp+var_4], 1
.text:00001032                 lea     ecx, [ebp+var_7C] ; this
.text:00001035                 call    ??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CEnumerator::~CEnumerator(void)
.text:0000103A                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00001041                 lea     ecx, [ebp+var_60] ; this
.text:00001044                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001049                 mov     al, [ebp+var_C3]
.text:0000104F                 jmp     loc_10FC
.text:00001054 ; ---------------------------------------------------------------------------
.text:00001054
.text:00001054 loc_1054:                               ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+19Ej
.text:00001054                 jmp     short loc_10A4
.text:00001056 ; ---------------------------------------------------------------------------
.text:00001056
.text:00001056 loc_1056:                               ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+18Ej
.text:00001056                 lea     ecx, [ebp+var_60]
.text:00001059                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:0000105E                 push    eax             ; lpFileName
.text:0000105F                 call    ?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)
.text:00001064                 movzx   ecx, al
.text:00001067                 test    ecx, ecx
.text:00001069                 jnz     short loc_10A4
.text:0000106B                 mov     [ebp+var_C4], 0
.text:00001072                 mov     byte ptr [ebp+var_4], 2
.text:00001076                 lea     ecx, [ebp+var_BC] ; this
.text:0000107C                 call    ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::~CFileInfo(void)
.text:00001081                 mov     byte ptr [ebp+var_4], 1
.text:00001085                 lea     ecx, [ebp+var_7C] ; this
.text:00001088                 call    ??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CEnumerator::~CEnumerator(void)
.text:0000108D                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00001094                 lea     ecx, [ebp+var_60] ; this
.text:00001097                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:0000109C                 mov     al, [ebp+var_C4]
.text:000010A2                 jmp     short loc_10FC
.text:000010A4 ; ---------------------------------------------------------------------------
.text:000010A4
.text:000010A4 loc_10A4:                               ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &):loc_1054j
.text:000010A4                                         ; NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+1F1j
.text:000010A4                 jmp     loc_FC1
.text:000010A9 ; ---------------------------------------------------------------------------
.text:000010A9
.text:000010A9 loc_10A9:                               ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+15Dj
.text:000010A9                 mov     byte ptr [ebp+var_4], 2
.text:000010AD                 lea     ecx, [ebp+var_BC] ; this
.text:000010B3                 call    ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::~CFileInfo(void)
.text:000010B8                 mov     byte ptr [ebp+var_4], 1
.text:000010BC                 lea     ecx, [ebp+var_7C] ; this
.text:000010BF                 call    ??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CEnumerator::~CEnumerator(void)
.text:000010C4                 mov     [ebp+var_4], 0FFFFFFFFh
.text:000010CB                 lea     ecx, [ebp+var_60] ; this
.text:000010CE                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:000010D3
.text:000010D3 loc_10D3:                               ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+F4j
.text:000010D3                 push    0               ; dwFileAttributes
.text:000010D5                 mov     ecx, [ebp+this]
.text:000010D8                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:000010DD                 push    eax             ; lpFileName
.text:000010DE                 call    ?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z ; NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)
.text:000010E3                 movzx   edx, al
.text:000010E6                 test    edx, edx
.text:000010E8                 jnz     short loc_10EE
.text:000010EA                 xor     al, al
.text:000010EC                 jmp     short loc_10FC
.text:000010EE ; ---------------------------------------------------------------------------
.text:000010EE
.text:000010EE loc_10EE:                               ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+270j
.text:000010EE                 mov     ecx, [ebp+this]
.text:000010F1                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:000010F6                 push    eax             ; lpPathName
.text:000010F7                 call    ?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NDir::RemoveDir(wchar_t const *)
.text:000010FC
.text:000010FC loc_10FC:                               ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+83j
.text:000010FC                                         ; NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+C7j ...
.text:000010FC                 push    edx
.text:000010FD                 mov     ecx, ebp
.text:000010FF                 push    eax
.text:00001100                 lea     edx, $LN24_0
.text:00001106                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000110B                 pop     eax
.text:0000110C                 pop     edx
.text:0000110D                 mov     ecx, [ebp+var_C]
.text:00001110                 mov     large fs:0, ecx
.text:00001117                 pop     ecx
.text:00001118                 pop     edi
.text:00001119                 pop     esi
.text:0000111A                 add     esp, 0C4h
.text:00001120                 cmp     ebp, esp
.text:00001122                 call    __RTC_CheckEsp
.text:00001127                 mov     esp, ebp
.text:00001129                 pop     ebp
.text:0000112A                 retn    4
.text:0000112A ?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z endp
.text:0000112A
.text:0000112A ; ---------------------------------------------------------------------------
.text:0000112D                 align 10h
.text:00001130 $LN24_0         dd 4                    ; DATA XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+288o
.text:00001134                 dd offset $LN23_0
.text:00001138 $LN23_0         dd 0FFFFFFB4h, 38h      ; DATA XREF: .text:00001134o
.text:00001140                 dd offset $LN18         ; "fi"
.text:00001144                 dd 0FFFFFFA0h, 0Ch
.text:0000114C                 dd offset $LN19         ; "s"
.text:00001150                 dd 0FFFFFF84h, 10h
.text:00001158                 dd offset $LN20         ; "enumerator"
.text:0000115C                 dd 0FFFFFF44h, 38h
.text:00001164                 dd offset $LN21
.text:00001168 $LN21           db 66h, 69h, 0          ; DATA XREF: .text:00001164o
.text:0000116B $LN20           db 'enumerator',0       ; DATA XREF: .text:00001158o
.text:00001176 $LN19           db 's',0                ; DATA XREF: .text:0000114Co
.text:00001178 $LN18           db 'fi',0               ; DATA XREF: .text:00001140o
.text:0000117B                 db 0Dh dup(0CCh)
.text:00001188
.text:00001188 ; =============== S U B R O U T I N E =======================================
.text:00001188
.text:00001188 ; Attributes: bp-based frame
.text:00001188
.text:00001188 ; bool NWindows::NFile::NDir::MyGetFullPathName(NWindows::NFile::NDir *__hidden this, const wchar_t *, struct UString *)
.text:00001188                 public ?MyGetFullPathName@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z
.text:00001188 ?MyGetFullPathName@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z proc near
.text:00001188                                         ; CODE XREF: NWindows::NFile::NDir::GetFullPathAndSplit(wchar_t const *,UString &,UString &)+1Cp
.text:00001188
.text:00001188 this            = dword ptr  8
.text:00001188 arg_4           = dword ptr  0Ch
.text:00001188
.text:00001188                 push    ebp             ; struct UString *
.text:00001189                 mov     ebp, esp
.text:0000118B                 mov     eax, [ebp+arg_4]
.text:0000118E                 push    eax             ; wchar_t *
.text:0000118F                 mov     ecx, [ebp+this]
.text:00001192                 push    ecx             ; this
.text:00001193                 call    ?GetFullPath@NName@NFile@NWindows@@YG_NPB_WAAVUString@@@Z ; NWindows::NFile::NName::GetFullPath(wchar_t const *,UString &)
.text:00001198                 cmp     ebp, esp
.text:0000119A                 call    __RTC_CheckEsp
.text:0000119F                 pop     ebp
.text:000011A0                 retn    8
.text:000011A0 ?MyGetFullPathName@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z endp
.text:000011A0
.text:000011A0 ; ---------------------------------------------------------------------------
.text:000011A3                 align 8
.text:000011A8
.text:000011A8 ; =============== S U B R O U T I N E =======================================
.text:000011A8
.text:000011A8 ; Attributes: bp-based frame
.text:000011A8
.text:000011A8 ; bool __stdcall NWindows::NFile::NDir::SetCurrentDir(LPCWSTR lpPathName, const wchar_t *)
.text:000011A8                 public ?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text:000011A8 ?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text:000011A8
.text:000011A8 var_24          = dword ptr -24h
.text:000011A8 var_20          = dword ptr -20h
.text:000011A8 var_1C          = dword ptr -1Ch
.text:000011A8 var_18          = dword ptr -18h
.text:000011A8 var_14          = dword ptr -14h
.text:000011A8 var_10          = dword ptr -10h
.text:000011A8 var_C           = dword ptr -0Ch
.text:000011A8 var_4           = dword ptr -4
.text:000011A8 lpPathName      = dword ptr  8
.text:000011A8
.text:000011A8                 push    ebp
.text:000011A9                 mov     ebp, esp
.text:000011AB                 push    0FFFFFFFFh
.text:000011AD                 push    offset __ehhandler$?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text:000011B2                 mov     eax, large fs:0
.text:000011B8                 push    eax
.text:000011B9                 sub     esp, 18h
.text:000011BC                 push    esi
.text:000011BD                 mov     eax, 0CCCCCCCCh
.text:000011C2                 mov     [ebp+var_24], eax
.text:000011C5                 mov     [ebp+var_20], eax
.text:000011C8                 mov     [ebp+var_1C], eax
.text:000011CB                 mov     [ebp+var_18], eax
.text:000011CE                 mov     [ebp+var_14], eax
.text:000011D1                 mov     [ebp+var_10], eax
.text:000011D4                 mov     eax, dword ptr ds:___security_cookie
.text:000011D9                 xor     eax, ebp
.text:000011DB                 push    eax
.text:000011DC                 lea     eax, [ebp+var_C]
.text:000011DF                 mov     large fs:0, eax
.text:000011E5                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:000011EC                 test    eax, eax
.text:000011EE                 jnz     short loc_1244
.text:000011F0                 mov     ecx, [ebp+lpPathName]
.text:000011F3                 push    ecx
.text:000011F4                 lea     edx, [ebp+var_1C]
.text:000011F7                 push    edx
.text:000011F8                 call    ?fs2fas@@YG?AVAString@@PB_W@Z ; fs2fas(wchar_t const *)
.text:000011FD                 mov     [ebp+var_20], eax
.text:00001200                 mov     eax, [ebp+var_20]
.text:00001203                 mov     [ebp+var_24], eax
.text:00001206                 mov     [ebp+var_4], 0
.text:0000120D                 mov     ecx, [ebp+var_24]
.text:00001210                 call    ??BAString@@QBEPBDXZ ; AString::operator char const *(void)
.text:00001215                 mov     esi, esp
.text:00001217                 push    eax             ; lpPathName
.text:00001218                 call    dword ptr ds:__imp__SetCurrentDirectoryA@4 ; SetCurrentDirectoryA(x)
.text:0000121E                 cmp     esi, esp
.text:00001220                 call    __RTC_CheckEsp
.text:00001225                 push    eax             ; int
.text:00001226                 call    ?BOOLToBool@@YG_NH@Z ; BOOLToBool(int)
.text:0000122B                 mov     byte ptr [ebp+var_10+3], al
.text:0000122E                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00001235                 lea     ecx, [ebp+var_1C] ; this
.text:00001238                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:0000123D                 mov     al, byte ptr [ebp+var_10+3]
.text:00001240                 jmp     short loc_125D
.text:00001242 ; ---------------------------------------------------------------------------
.text:00001242                 jmp     short loc_125D
.text:00001244 ; ---------------------------------------------------------------------------
.text:00001244
.text:00001244 loc_1244:                               ; CODE XREF: NWindows::NFile::NDir::SetCurrentDir(wchar_t const *)+46j
.text:00001244                 mov     esi, esp
.text:00001246                 mov     ecx, [ebp+lpPathName]
.text:00001249                 push    ecx             ; lpPathName
.text:0000124A                 call    dword ptr ds:__imp__SetCurrentDirectoryW@4 ; SetCurrentDirectoryW(x)
.text:00001250                 cmp     esi, esp
.text:00001252                 call    __RTC_CheckEsp
.text:00001257                 push    eax             ; int
.text:00001258                 call    ?BOOLToBool@@YG_NH@Z ; BOOLToBool(int)
.text:0000125D
.text:0000125D loc_125D:                               ; CODE XREF: NWindows::NFile::NDir::SetCurrentDir(wchar_t const *)+98j
.text:0000125D                                         ; NWindows::NFile::NDir::SetCurrentDir(wchar_t const *)+9Aj
.text:0000125D                 mov     ecx, [ebp+var_C]
.text:00001260                 mov     large fs:0, ecx
.text:00001267                 pop     ecx
.text:00001268                 pop     esi
.text:00001269                 add     esp, 24h
.text:0000126C                 cmp     ebp, esp
.text:0000126E                 call    __RTC_CheckEsp
.text:00001273                 mov     esp, ebp
.text:00001275                 pop     ebp
.text:00001276                 retn    4
.text:00001276 ?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z endp
.text:00001276
.text:00001276 ; ---------------------------------------------------------------------------
.text:00001279                 db 0Fh dup(0CCh)
.text:00001288
.text:00001288 ; =============== S U B R O U T I N E =======================================
.text:00001288
.text:00001288 ; Attributes: bp-based frame
.text:00001288
.text:00001288 ; bool __stdcall NWindows::NFile::NDir::GetCurrentDir(NWindows::NFile::NDir *this, struct UString *)
.text:00001288                 public ?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text:00001288 ?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z proc near
.text:00001288
.text:00001288 var_35C         = dword ptr -35Ch
.text:00001288 var_358         = dword ptr -358h
.text:00001288 var_354         = dword ptr -354h
.text:00001288 var_350         = byte ptr -350h
.text:00001288 var_344         = byte ptr -344h
.text:00001288 var_334         = word ptr -334h
.text:00001288 Buffer          = byte ptr -120h
.text:00001288 var_14          = dword ptr -14h
.text:00001288 var_10          = dword ptr -10h
.text:00001288 var_C           = dword ptr -0Ch
.text:00001288 var_4           = dword ptr -4
.text:00001288 this            = dword ptr  8
.text:00001288
.text:00001288                 push    ebp
.text:00001289                 mov     ebp, esp
.text:0000128B                 push    0FFFFFFFFh
.text:0000128D                 push    offset __ehhandler$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text:00001292                 mov     eax, large fs:0
.text:00001298                 push    eax
.text:00001299                 sub     esp, 350h
.text:0000129F                 push    esi
.text:000012A0                 push    edi
.text:000012A1                 lea     edi, [ebp+var_35C]
.text:000012A7                 mov     ecx, 0D4h ; '+'
.text:000012AC                 mov     eax, 0CCCCCCCCh
.text:000012B1                 rep stosd
.text:000012B3                 mov     eax, dword ptr ds:___security_cookie
.text:000012B8                 xor     eax, ebp
.text:000012BA                 mov     [ebp+var_10], eax
.text:000012BD                 push    eax
.text:000012BE                 lea     eax, [ebp+var_C]
.text:000012C1                 mov     large fs:0, eax
.text:000012C7                 mov     ecx, [ebp+this] ; this
.text:000012CA                 call    ?Empty@UString@@QAEXXZ ; UString::Empty(void)
.text:000012CF                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:000012D6                 test    eax, eax
.text:000012D8                 jnz     loc_1377
.text:000012DE                 mov     [ebp+Buffer], 0
.text:000012E5                 mov     esi, esp
.text:000012E7                 lea     ecx, [ebp+Buffer]
.text:000012ED                 push    ecx             ; lpBuffer
.text:000012EE                 push    105h            ; nBufferLength
.text:000012F3                 call    dword ptr ds:__imp__GetCurrentDirectoryA@8 ; GetCurrentDirectoryA(x,x)
.text:000012F9                 cmp     esi, esp
.text:000012FB                 call    __RTC_CheckEsp
.text:00001300                 mov     [ebp+var_14], eax
.text:00001303                 lea     edx, [ebp+Buffer]
.text:00001309                 push    edx             ; char *
.text:0000130A                 lea     ecx, [ebp+var_344] ; this
.text:00001310                 call    ??0AString@@QAE@PBD@Z ; AString::AString(char const *)
.text:00001315                 mov     [ebp+var_4], 0
.text:0000131C                 lea     eax, [ebp+var_344]
.text:00001322                 push    eax
.text:00001323                 lea     ecx, [ebp+var_350]
.text:00001329                 push    ecx
.text:0000132A                 call    ?fas2fs@@YG?AVUString@@ABVAString@@@Z ; fas2fs(AString const &)
.text:0000132F                 mov     [ebp+var_354], eax
.text:00001335                 mov     edx, [ebp+var_354]
.text:0000133B                 mov     [ebp+var_358], edx
.text:00001341                 mov     byte ptr [ebp+var_4], 1
.text:00001345                 mov     eax, [ebp+var_358]
.text:0000134B                 push    eax
.text:0000134C                 mov     ecx, [ebp+this]
.text:0000134F                 call    ??4UString@@QAEAAV0@ABV0@@Z ; UString::operator=(UString const &)
.text:00001354                 mov     byte ptr [ebp+var_4], 0
.text:00001358                 lea     ecx, [ebp+var_350] ; this
.text:0000135E                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001363                 mov     [ebp+var_4], 0FFFFFFFFh
.text:0000136A                 lea     ecx, [ebp+var_344] ; this
.text:00001370                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:00001375                 jmp     short loc_13AD
.text:00001377 ; ---------------------------------------------------------------------------
.text:00001377
.text:00001377 loc_1377:                               ; CODE XREF: NWindows::NFile::NDir::GetCurrentDir(UString &)+50j
.text:00001377                 xor     ecx, ecx
.text:00001379                 mov     [ebp+var_334], cx
.text:00001380                 mov     esi, esp
.text:00001382                 lea     edx, [ebp+var_334]
.text:00001388                 push    edx             ; lpBuffer
.text:00001389                 push    105h            ; nBufferLength
.text:0000138E                 call    dword ptr ds:__imp__GetCurrentDirectoryW@8 ; GetCurrentDirectoryW(x,x)
.text:00001394                 cmp     esi, esp
.text:00001396                 call    __RTC_CheckEsp
.text:0000139B                 mov     [ebp+var_14], eax
.text:0000139E                 lea     eax, [ebp+var_334]
.text:000013A4                 push    eax
.text:000013A5                 mov     ecx, [ebp+this]
.text:000013A8                 call    ??4UString@@QAEAAV0@PB_W@Z ; UString::operator=(wchar_t const *)
.text:000013AD
.text:000013AD loc_13AD:                               ; CODE XREF: NWindows::NFile::NDir::GetCurrentDir(UString &)+EDj
.text:000013AD                 cmp     [ebp+var_14], 0
.text:000013B1                 jbe     short loc_13C8
.text:000013B3                 cmp     [ebp+var_14], 104h
.text:000013BA                 ja      short loc_13C8
.text:000013BC                 mov     [ebp+var_35C], 1
.text:000013C6                 jmp     short loc_13D2
.text:000013C8 ; ---------------------------------------------------------------------------
.text:000013C8
.text:000013C8 loc_13C8:                               ; CODE XREF: NWindows::NFile::NDir::GetCurrentDir(UString &)+129j
.text:000013C8                                         ; NWindows::NFile::NDir::GetCurrentDir(UString &)+132j
.text:000013C8                 mov     [ebp+var_35C], 0
.text:000013D2
.text:000013D2 loc_13D2:                               ; CODE XREF: NWindows::NFile::NDir::GetCurrentDir(UString &)+13Ej
.text:000013D2                 mov     al, byte ptr [ebp+var_35C]
.text:000013D8                 push    edx
.text:000013D9                 mov     ecx, ebp
.text:000013DB                 push    eax
.text:000013DC                 lea     edx, $LN13_2
.text:000013E2                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:000013E7                 pop     eax
.text:000013E8                 pop     edx
.text:000013E9                 mov     ecx, [ebp+var_C]
.text:000013EC                 mov     large fs:0, ecx
.text:000013F3                 pop     ecx
.text:000013F4                 pop     edi
.text:000013F5                 pop     esi
.text:000013F6                 mov     ecx, [ebp+var_10]
.text:000013F9                 xor     ecx, ebp
.text:000013FB                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00001400                 add     esp, 35Ch
.text:00001406                 cmp     ebp, esp
.text:00001408                 call    __RTC_CheckEsp
.text:0000140D                 mov     esp, ebp
.text:0000140F                 pop     ebp
.text:00001410                 retn    4
.text:00001410 ?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z endp
.text:00001410
.text:00001410 ; ---------------------------------------------------------------------------
.text:00001413                 align 4
.text:00001414 $LN13_2         dd 2                    ; DATA XREF: NWindows::NFile::NDir::GetCurrentDir(UString &)+154o
.text:00001418                 dd offset $LN12_1
.text:0000141C $LN12_1         dd 0FFFFFEE0h, 106h     ; DATA XREF: .text:00001418o
.text:00001424                 dd offset $LN9_1
.text:00001428                 db 0CCh
.text:00001429                 db 0FCh, 2 dup(0FFh)
.text:0000142C                 dd offset loc_20C
.text:00001430                 dd offset $LN10_1
.text:00001434 ; ---------------------------------------------------------------------------
.text:00001434
.text:00001434 $LN10_1:                                ; DATA XREF: .text:00001430o
.text:00001434                 jnb     short $+2
.text:00001436
.text:00001436 $LN9_1:                                 ; CODE XREF: .text:$LN10_1j
.text:00001436                                         ; DATA XREF: .text:00001424o
.text:00001436                 jnb     short $+2       ; NWindows::NFile::NDir::GetFullPathAndSplit(wchar_t const *,UString &,UString &)
.text:00001438
.text:00001438 ; =============== S U B R O U T I N E =======================================
.text:00001438
.text:00001438 ; Attributes: bp-based frame
.text:00001438
.text:00001438 ; bool __stdcall NWindows::NFile::NDir::GetFullPathAndSplit(NWindows::NFile::NDir *this, const wchar_t *, struct UString *, struct UString *)
.text:00001438                 public ?GetFullPathAndSplit@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@1@Z
.text:00001438 ?GetFullPathAndSplit@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@1@Z proc near
.text:00001438                                         ; CODE XREF: .text:$LN9_1j
.text:00001438                                         ; NWindows::NFile::NDir::GetOnlyDirPrefix(wchar_t const *,UString &)+57p
.text:00001438
.text:00001438 var_8           = dword ptr -8
.text:00001438 var_4           = dword ptr -4
.text:00001438 this            = dword ptr  8
.text:00001438 arg_4           = dword ptr  0Ch
.text:00001438 arg_8           = dword ptr  10h
.text:00001438
.text:00001438                 push    ebp
.text:00001439                 mov     ebp, esp
.text:0000143B                 sub     esp, 8
.text:0000143E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00001445                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000144C                 mov     eax, [ebp+arg_4]
.text:0000144F                 push    eax             ; wchar_t *
.text:00001450                 mov     ecx, [ebp+this]
.text:00001453                 push    ecx             ; this
.text:00001454                 call    ?MyGetFullPathName@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z ; NWindows::NFile::NDir::MyGetFullPathName(wchar_t const *,UString &)
.text:00001459                 mov     byte ptr [ebp+var_4+3], al
.text:0000145C                 movzx   edx, byte ptr [ebp+var_4+3]
.text:00001460                 test    edx, edx
.text:00001462                 jnz     short loc_1470
.text:00001464                 mov     eax, [ebp+this]
.text:00001467                 push    eax
.text:00001468                 mov     ecx, [ebp+arg_4]
.text:0000146B                 call    ??4UString@@QAEAAV0@PB_W@Z ; UString::operator=(wchar_t const *)
.text:00001470
.text:00001470 loc_1470:                               ; CODE XREF: NWindows::NFile::NDir::GetFullPathAndSplit(wchar_t const *,UString &,UString &)+2Aj
.text:00001470                 mov     ecx, [ebp+arg_4] ; this
.text:00001473                 call    ?ReverseFind_PathSepar@UString@@QBEHXZ ; UString::ReverseFind_PathSepar(void)
.text:00001478                 mov     [ebp+var_8], eax
.text:0000147B                 mov     ecx, [ebp+var_8]
.text:0000147E                 add     ecx, 1
.text:00001481                 push    ecx             ; unsigned int
.text:00001482                 mov     ecx, [ebp+arg_4] ; this
.text:00001485                 call    ?Ptr@UString@@QBEPB_WI@Z ; UString::Ptr(uint)
.text:0000148A                 push    eax
.text:0000148B                 mov     ecx, [ebp+arg_8]
.text:0000148E                 call    ??4UString@@QAEAAV0@PB_W@Z ; UString::operator=(wchar_t const *)
.text:00001493                 mov     edx, [ebp+var_8]
.text:00001496                 add     edx, 1
.text:00001499                 push    edx             ; unsigned int
.text:0000149A                 mov     ecx, [ebp+arg_4] ; this
.text:0000149D                 call    ?DeleteFrom@UString@@QAEXI@Z ; UString::DeleteFrom(uint)
.text:000014A2                 mov     al, byte ptr [ebp+var_4+3]
.text:000014A5                 add     esp, 8
.text:000014A8                 cmp     ebp, esp
.text:000014AA                 call    __RTC_CheckEsp
.text:000014AF                 mov     esp, ebp
.text:000014B1                 pop     ebp
.text:000014B2                 retn    0Ch
.text:000014B2 ?GetFullPathAndSplit@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@1@Z endp
.text:000014B2
.text:000014B2 ; ---------------------------------------------------------------------------
.text:000014B5                 align 4
.text:000014B8
.text:000014B8 ; =============== S U B R O U T I N E =======================================
.text:000014B8
.text:000014B8 ; Attributes: bp-based frame
.text:000014B8
.text:000014B8 ; bool __stdcall NWindows::NFile::NDir::GetOnlyDirPrefix(NWindows::NFile::NDir *this, const wchar_t *, struct UString *)
.text:000014B8                 public ?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z
.text:000014B8 ?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z proc near
.text:000014B8
.text:000014B8 var_24          = dword ptr -24h
.text:000014B8 var_20          = dword ptr -20h
.text:000014B8 var_1C          = dword ptr -1Ch
.text:000014B8 var_18          = dword ptr -18h
.text:000014B8 var_14          = dword ptr -14h
.text:000014B8 var_10          = dword ptr -10h
.text:000014B8 var_C           = dword ptr -0Ch
.text:000014B8 var_4           = dword ptr -4
.text:000014B8 this            = dword ptr  8
.text:000014B8 arg_4           = dword ptr  0Ch
.text:000014B8
.text:000014B8                 push    ebp
.text:000014B9                 mov     ebp, esp
.text:000014BB                 push    0FFFFFFFFh
.text:000014BD                 push    offset __ehhandler$?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z
.text:000014C2                 mov     eax, large fs:0
.text:000014C8                 push    eax
.text:000014C9                 sub     esp, 18h
.text:000014CC                 mov     eax, 0CCCCCCCCh
.text:000014D1                 mov     [ebp+var_24], eax
.text:000014D4                 mov     [ebp+var_20], eax
.text:000014D7                 mov     [ebp+var_1C], eax
.text:000014DA                 mov     [ebp+var_18], eax
.text:000014DD                 mov     [ebp+var_14], eax
.text:000014E0                 mov     [ebp+var_10], eax
.text:000014E3                 mov     eax, dword ptr ds:___security_cookie
.text:000014E8                 xor     eax, ebp
.text:000014EA                 push    eax             ; struct UString *
.text:000014EB                 lea     eax, [ebp+var_C]
.text:000014EE                 mov     large fs:0, eax
.text:000014F4                 lea     ecx, [ebp+var_1C]
.text:000014F7                 call    ??0UString@@QAE@XZ ; UString::UString(void)
.text:000014FC                 mov     [ebp+var_4], 0
.text:00001503                 lea     eax, [ebp+var_1C]
.text:00001506                 push    eax             ; struct UString *
.text:00001507                 mov     ecx, [ebp+arg_4]
.text:0000150A                 push    ecx             ; wchar_t *
.text:0000150B                 mov     edx, [ebp+this]
.text:0000150E                 push    edx             ; this
.text:0000150F                 call    ?GetFullPathAndSplit@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@1@Z ; NWindows::NFile::NDir::GetFullPathAndSplit(wchar_t const *,UString &,UString &)
.text:00001514                 mov     byte ptr [ebp+var_24+3], al
.text:00001517                 mov     [ebp+var_4], 0FFFFFFFFh
.text:0000151E                 lea     ecx, [ebp+var_1C] ; this
.text:00001521                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001526                 mov     al, byte ptr [ebp+var_24+3]
.text:00001529                 push    edx
.text:0000152A                 mov     ecx, ebp
.text:0000152C                 push    eax
.text:0000152D                 lea     edx, $LN7
.text:00001533                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00001538                 pop     eax
.text:00001539                 pop     edx
.text:0000153A                 mov     ecx, [ebp+var_C]
.text:0000153D                 mov     large fs:0, ecx
.text:00001544                 pop     ecx
.text:00001545                 add     esp, 24h
.text:00001548                 cmp     ebp, esp
.text:0000154A                 call    __RTC_CheckEsp
.text:0000154F                 mov     esp, ebp
.text:00001551                 pop     ebp
.text:00001552                 retn    8
.text:00001552 ?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z endp
.text:00001552
.text:00001552 ; ---------------------------------------------------------------------------
.text:00001555                 align 4
.text:00001558 $LN7            dd 1                    ; DATA XREF: NWindows::NFile::NDir::GetOnlyDirPrefix(wchar_t const *,UString &)+75o
.text:0000155C                 dd offset $LN6
.text:00001560 $LN6            dd 0FFFFFFE4h, 0Ch      ; DATA XREF: .text:0000155Co
.text:00001568                 dd offset $LN4          ; "resFileName"
.text:0000156C $LN4            db 'resFileName',0      ; DATA XREF: .text:00001568o
.text:00001578
.text:00001578 ; =============== S U B R O U T I N E =======================================
.text:00001578
.text:00001578 ; Attributes: bp-based frame
.text:00001578
.text:00001578 ; bool __stdcall NWindows::NFile::NDir::MyGetTempPath(NWindows::NFile::NDir *this, struct UString *)
.text:00001578                 public ?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text:00001578 ?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z proc near
.text:00001578                                         ; CODE XREF: NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+63p
.text:00001578                                         ; NWindows::NFile::NDir::CTempDir::Create(wchar_t const *)+63p
.text:00001578
.text:00001578 var_35C         = dword ptr -35Ch
.text:00001578 var_358         = dword ptr -358h
.text:00001578 var_354         = dword ptr -354h
.text:00001578 var_350         = byte ptr -350h
.text:00001578 var_344         = byte ptr -344h
.text:00001578 var_334         = word ptr -334h
.text:00001578 Buffer          = byte ptr -120h
.text:00001578 var_14          = dword ptr -14h
.text:00001578 var_10          = dword ptr -10h
.text:00001578 var_C           = dword ptr -0Ch
.text:00001578 var_4           = dword ptr -4
.text:00001578 this            = dword ptr  8
.text:00001578
.text:00001578                 push    ebp
.text:00001579                 mov     ebp, esp
.text:0000157B                 push    0FFFFFFFFh
.text:0000157D                 push    offset __ehhandler$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text:00001582                 mov     eax, large fs:0
.text:00001588                 push    eax
.text:00001589                 sub     esp, 350h
.text:0000158F                 push    esi
.text:00001590                 push    edi
.text:00001591                 lea     edi, [ebp+var_35C]
.text:00001597                 mov     ecx, 0D4h ; '+'
.text:0000159C                 mov     eax, 0CCCCCCCCh
.text:000015A1                 rep stosd
.text:000015A3                 mov     eax, dword ptr ds:___security_cookie
.text:000015A8                 xor     eax, ebp
.text:000015AA                 mov     [ebp+var_10], eax
.text:000015AD                 push    eax
.text:000015AE                 lea     eax, [ebp+var_C]
.text:000015B1                 mov     large fs:0, eax
.text:000015B7                 mov     ecx, [ebp+this] ; this
.text:000015BA                 call    ?Empty@UString@@QAEXXZ ; UString::Empty(void)
.text:000015BF                 movzx   eax, byte ptr ds:?g_IsNT@@3_NA ; bool g_IsNT
.text:000015C6                 test    eax, eax
.text:000015C8                 jnz     loc_1667
.text:000015CE                 mov     [ebp+Buffer], 0
.text:000015D5                 mov     esi, esp
.text:000015D7                 lea     ecx, [ebp+Buffer]
.text:000015DD                 push    ecx             ; lpBuffer
.text:000015DE                 push    105h            ; nBufferLength
.text:000015E3                 call    dword ptr ds:__imp__GetTempPathA@8 ; GetTempPathA(x,x)
.text:000015E9                 cmp     esi, esp
.text:000015EB                 call    __RTC_CheckEsp
.text:000015F0                 mov     [ebp+var_14], eax
.text:000015F3                 lea     edx, [ebp+Buffer]
.text:000015F9                 push    edx             ; char *
.text:000015FA                 lea     ecx, [ebp+var_344] ; this
.text:00001600                 call    ??0AString@@QAE@PBD@Z ; AString::AString(char const *)
.text:00001605                 mov     [ebp+var_4], 0
.text:0000160C                 lea     eax, [ebp+var_344]
.text:00001612                 push    eax
.text:00001613                 lea     ecx, [ebp+var_350]
.text:00001619                 push    ecx
.text:0000161A                 call    ?fas2fs@@YG?AVUString@@ABVAString@@@Z ; fas2fs(AString const &)
.text:0000161F                 mov     [ebp+var_354], eax
.text:00001625                 mov     edx, [ebp+var_354]
.text:0000162B                 mov     [ebp+var_358], edx
.text:00001631                 mov     byte ptr [ebp+var_4], 1
.text:00001635                 mov     eax, [ebp+var_358]
.text:0000163B                 push    eax
.text:0000163C                 mov     ecx, [ebp+this]
.text:0000163F                 call    ??4UString@@QAEAAV0@ABV0@@Z ; UString::operator=(UString const &)
.text:00001644                 mov     byte ptr [ebp+var_4], 0
.text:00001648                 lea     ecx, [ebp+var_350] ; this
.text:0000164E                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001653                 mov     [ebp+var_4], 0FFFFFFFFh
.text:0000165A                 lea     ecx, [ebp+var_344] ; this
.text:00001660                 call    ??1AString@@QAE@XZ ; AString::~AString(void)
.text:00001665                 jmp     short loc_169D
.text:00001667 ; ---------------------------------------------------------------------------
.text:00001667
.text:00001667 loc_1667:                               ; CODE XREF: NWindows::NFile::NDir::MyGetTempPath(UString &)+50j
.text:00001667                 xor     ecx, ecx
.text:00001669                 mov     [ebp+var_334], cx
.text:00001670                 mov     esi, esp
.text:00001672                 lea     edx, [ebp+var_334]
.text:00001678                 push    edx             ; lpBuffer
.text:00001679                 push    105h            ; nBufferLength
.text:0000167E                 call    dword ptr ds:__imp__GetTempPathW@8 ; GetTempPathW(x,x)
.text:00001684                 cmp     esi, esp
.text:00001686                 call    __RTC_CheckEsp
.text:0000168B                 mov     [ebp+var_14], eax
.text:0000168E                 lea     eax, [ebp+var_334]
.text:00001694                 push    eax
.text:00001695                 mov     ecx, [ebp+this]
.text:00001698                 call    ??4UString@@QAEAAV0@PB_W@Z ; UString::operator=(wchar_t const *)
.text:0000169D
.text:0000169D loc_169D:                               ; CODE XREF: NWindows::NFile::NDir::MyGetTempPath(UString &)+EDj
.text:0000169D                 cmp     [ebp+var_14], 0
.text:000016A1                 jbe     short loc_16B8
.text:000016A3                 cmp     [ebp+var_14], 104h
.text:000016AA                 ja      short loc_16B8
.text:000016AC                 mov     [ebp+var_35C], 1
.text:000016B6                 jmp     short loc_16C2
.text:000016B8 ; ---------------------------------------------------------------------------
.text:000016B8
.text:000016B8 loc_16B8:                               ; CODE XREF: NWindows::NFile::NDir::MyGetTempPath(UString &)+129j
.text:000016B8                                         ; NWindows::NFile::NDir::MyGetTempPath(UString &)+132j
.text:000016B8                 mov     [ebp+var_35C], 0
.text:000016C2
.text:000016C2 loc_16C2:                               ; CODE XREF: NWindows::NFile::NDir::MyGetTempPath(UString &)+13Ej
.text:000016C2                 mov     al, byte ptr [ebp+var_35C]
.text:000016C8                 push    edx
.text:000016C9                 mov     ecx, ebp
.text:000016CB                 push    eax
.text:000016CC                 lea     edx, $LN13_3
.text:000016D2                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:000016D7                 pop     eax
.text:000016D8                 pop     edx
.text:000016D9                 mov     ecx, [ebp+var_C]
.text:000016DC                 mov     large fs:0, ecx
.text:000016E3                 pop     ecx
.text:000016E4                 pop     edi
.text:000016E5                 pop     esi
.text:000016E6                 mov     ecx, [ebp+var_10]
.text:000016E9                 xor     ecx, ebp
.text:000016EB                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:000016F0                 add     esp, 35Ch
.text:000016F6                 cmp     ebp, esp
.text:000016F8                 call    __RTC_CheckEsp
.text:000016FD                 mov     esp, ebp
.text:000016FF                 pop     ebp
.text:00001700                 retn    4
.text:00001700 ?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z endp
.text:00001700
.text:00001700 ; ---------------------------------------------------------------------------
.text:00001703                 align 4
.text:00001704 $LN13_3         dd 2                    ; DATA XREF: NWindows::NFile::NDir::MyGetTempPath(UString &)+154o
.text:00001708                 dd offset $LN12_2
.text:0000170C $LN12_2         dd 0FFFFFEE0h, 106h     ; DATA XREF: .text:00001708o
.text:00001714                 dd offset $LN9_2
.text:00001718                 db 0CCh
.text:00001719                 db 0FCh, 2 dup(0FFh)
.text:0000171C                 dd offset loc_20C
.text:00001720                 dd offset $LN10_2
.text:00001724 ; ---------------------------------------------------------------------------
.text:00001724
.text:00001724 $LN10_2:                                ; DATA XREF: .text:00001720o
.text:00001724                 jnb     short $+2
.text:00001726
.text:00001726 $LN9_2:                                 ; CODE XREF: .text:$LN10_2j
.text:00001726                                         ; DATA XREF: .text:00001714o
.text:00001726                 jnb     short $+2       ; NWindows::NFile::NDir::CTempFile::Create(wchar_t const *,NWindows::NFile::NIO::COutFile *)
.text:00001728
.text:00001728 ; =============== S U B R O U T I N E =======================================
.text:00001728
.text:00001728 ; Attributes: bp-based frame
.text:00001728
.text:00001728 ; bool __thiscall NWindows::NFile::NDir::CTempFile::Create(NWindows::NFile::NDir::CTempFile *this, const wchar_t *, struct NWindows::NFile::NIO::COutFile *)
.text:00001728                 public ?Create@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z
.text:00001728 ?Create@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z proc near
.text:00001728                                         ; CODE XREF: .text:$LN9_2j
.text:00001728
.text:00001728 var_4           = dword ptr -4
.text:00001728 arg_0           = dword ptr  8
.text:00001728 arg_4           = dword ptr  0Ch
.text:00001728
.text:00001728                 push    ebp
.text:00001729                 mov     ebp, esp
.text:0000172B                 push    ecx
.text:0000172C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001733                 mov     [ebp+var_4], ecx
.text:00001736                 mov     ecx, [ebp+var_4] ; this
.text:00001739                 call    ?Remove@CTempFile@NDir@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NDir::CTempFile::Remove(void)
.text:0000173E                 movzx   eax, al
.text:00001741                 test    eax, eax
.text:00001743                 jnz     short loc_1749
.text:00001745                 xor     al, al
.text:00001747                 jmp     short loc_1772
.text:00001749 ; ---------------------------------------------------------------------------
.text:00001749
.text:00001749 loc_1749:                               ; CODE XREF: NWindows::NFile::NDir::CTempFile::Create(wchar_t const *,NWindows::NFile::NIO::COutFile *)+1Bj
.text:00001749                 mov     ecx, [ebp+arg_4]
.text:0000174C                 push    ecx             ; NWindows::NFile::NIO::COutFile *
.text:0000174D                 mov     edx, [ebp+var_4]
.text:00001750                 add     edx, 4
.text:00001753                 push    edx             ; UString *
.text:00001754                 push    0               ; char
.text:00001756                 mov     eax, [ebp+arg_0]
.text:00001759                 push    eax             ; int
.text:0000175A                 call    ?CreateTempFile@NDir@NFile@NWindows@@YG_NPB_W_NAAVUString@@PAVCOutFile@NIO@23@@Z ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)
.text:0000175F                 movzx   ecx, al
.text:00001762                 test    ecx, ecx
.text:00001764                 jnz     short loc_176A
.text:00001766                 xor     al, al
.text:00001768                 jmp     short loc_1772
.text:0000176A ; ---------------------------------------------------------------------------
.text:0000176A
.text:0000176A loc_176A:                               ; CODE XREF: NWindows::NFile::NDir::CTempFile::Create(wchar_t const *,NWindows::NFile::NIO::COutFile *)+3Cj
.text:0000176A                 mov     edx, [ebp+var_4]
.text:0000176D                 mov     byte ptr [edx], 1
.text:00001770                 mov     al, 1
.text:00001772
.text:00001772 loc_1772:                               ; CODE XREF: NWindows::NFile::NDir::CTempFile::Create(wchar_t const *,NWindows::NFile::NIO::COutFile *)+1Fj
.text:00001772                                         ; NWindows::NFile::NDir::CTempFile::Create(wchar_t const *,NWindows::NFile::NIO::COutFile *)+40j
.text:00001772                 add     esp, 4
.text:00001775                 cmp     ebp, esp
.text:00001777                 call    __RTC_CheckEsp
.text:0000177C                 mov     esp, ebp
.text:0000177E                 pop     ebp
.text:0000177F                 retn    8
.text:0000177F ?Create@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z endp
.text:0000177F
.text:0000177F ; ---------------------------------------------------------------------------
.text:00001782                 align 8
.text:00001788
.text:00001788 ; =============== S U B R O U T I N E =======================================
.text:00001788
.text:00001788 ; Attributes: bp-based frame
.text:00001788
.text:00001788 ; int __stdcall NWindows::NFile::NDir::CreateTempFile(int, char, UString *, NWindows::NFile::NIO::COutFile *)
.text:00001788 ?CreateTempFile@NDir@NFile@NWindows@@YG_NPB_W_NAAVUString@@PAVCOutFile@NIO@23@@Z proc near
.text:00001788                                         ; CODE XREF: NWindows::NFile::NDir::CTempFile::Create(wchar_t const *,NWindows::NFile::NIO::COutFile *)+32p
.text:00001788                                         ; NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+BEp ...
.text:00001788
.text:00001788 var_4C          = dword ptr -4Ch
.text:00001788 var_48          = dword ptr -48h
.text:00001788 var_44          = dword ptr -44h
.text:00001788 var_40          = dword ptr -40h
.text:00001788 var_3C          = dword ptr -3Ch
.text:00001788 var_38          = dword ptr -38h
.text:00001788 var_30          = word ptr -30h
.text:00001788 var_C           = dword ptr -0Ch
.text:00001788 var_8           = dword ptr -8
.text:00001788 var_4           = dword ptr -4
.text:00001788 arg_0           = dword ptr  8
.text:00001788 arg_4           = byte ptr  0Ch
.text:00001788 arg_8           = dword ptr  10h
.text:00001788 arg_C           = dword ptr  14h
.text:00001788
.text:00001788                 push    ebp
.text:00001789                 mov     ebp, esp
.text:0000178B                 sub     esp, 4Ch
.text:0000178E                 push    esi
.text:0000178F                 push    edi
.text:00001790                 lea     edi, [ebp+var_4C]
.text:00001793                 mov     ecx, 13h
.text:00001798                 mov     eax, 0CCCCCCCCh
.text:0000179D                 rep stosd
.text:0000179F                 mov     eax, dword ptr ds:___security_cookie
.text:000017A4                 xor     eax, ebp
.text:000017A6                 mov     [ebp+var_4], eax
.text:000017A9                 mov     esi, esp
.text:000017AB                 call    dword ptr ds:__imp__GetTickCount@0 ; GetTickCount()
.text:000017B1                 cmp     esi, esp
.text:000017B3                 call    __RTC_CheckEsp
.text:000017B8                 mov     esi, eax
.text:000017BA                 shl     esi, 0Ch
.text:000017BD                 mov     edi, esp
.text:000017BF                 call    dword ptr ds:__imp__GetCurrentThreadId@0 ; GetCurrentThreadId()
.text:000017C5                 cmp     edi, esp
.text:000017C7                 call    __RTC_CheckEsp
.text:000017CC                 shl     eax, 0Eh
.text:000017CF                 xor     esi, eax
.text:000017D1                 mov     edi, esp
.text:000017D3                 call    dword ptr ds:__imp__GetCurrentProcessId@0 ; GetCurrentProcessId()
.text:000017D9                 cmp     edi, esp
.text:000017DB                 call    __RTC_CheckEsp
.text:000017E0                 xor     esi, eax
.text:000017E2                 mov     [ebp+var_8], esi
.text:000017E5                 mov     [ebp+var_C], 0
.text:000017EC                 jmp     short loc_17F7
.text:000017EE ; ---------------------------------------------------------------------------
.text:000017EE
.text:000017EE loc_17EE:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+176j
.text:000017EE                                         ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *):loc_1965j
.text:000017EE                 mov     eax, [ebp+var_C]
.text:000017F1                 add     eax, 1
.text:000017F4                 mov     [ebp+var_C], eax
.text:000017F7
.text:000017F7 loc_17F7:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+64j
.text:000017F7                 cmp     [ebp+var_C], 64h ; 'd'
.text:000017FB                 jnb     loc_196A
.text:00001801                 mov     ecx, [ebp+arg_0]
.text:00001804                 push    ecx
.text:00001805                 mov     ecx, [ebp+arg_8]
.text:00001808                 call    ??4UString@@QAEAAV0@PB_W@Z ; UString::operator=(wchar_t const *)
.text:0000180D                 movzx   edx, [ebp+arg_4]
.text:00001811                 test    edx, edx
.text:00001813                 jz      loc_18BE
.text:00001819                 mov     eax, [ebp+var_8]
.text:0000181C                 mov     [ebp+var_38], eax
.text:0000181F                 mov     [ebp+var_3C], 0
.text:00001826                 jmp     short loc_1831
.text:00001828 ; ---------------------------------------------------------------------------
.text:00001828
.text:00001828 loc_1828:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+E7j
.text:00001828                 mov     ecx, [ebp+var_3C]
.text:0000182B                 add     ecx, 1
.text:0000182E                 mov     [ebp+var_3C], ecx
.text:00001831
.text:00001831 loc_1831:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+9Ej
.text:00001831                 cmp     [ebp+var_3C], 8
.text:00001835                 jnb     short loc_1871
.text:00001837                 mov     edx, [ebp+var_38]
.text:0000183A                 and     edx, 0Fh
.text:0000183D                 mov     [ebp+var_40], edx
.text:00001840                 mov     eax, [ebp+var_38]
.text:00001843                 shr     eax, 4
.text:00001846                 mov     [ebp+var_38], eax
.text:00001849                 cmp     [ebp+var_40], 0Ah
.text:0000184D                 jnb     short loc_185A
.text:0000184F                 mov     ecx, [ebp+var_40]
.text:00001852                 add     ecx, 30h ; '0'
.text:00001855                 mov     [ebp+var_4C], ecx
.text:00001858                 jmp     short loc_1863
.text:0000185A ; ---------------------------------------------------------------------------
.text:0000185A
.text:0000185A loc_185A:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+C5j
.text:0000185A                 mov     edx, [ebp+var_40]
.text:0000185D                 add     edx, 37h ; '7'
.text:00001860                 mov     [ebp+var_4C], edx
.text:00001863
.text:00001863 loc_1863:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+D0j
.text:00001863                 mov     eax, [ebp+var_3C]
.text:00001866                 mov     cx, word ptr [ebp+var_4C]
.text:0000186A                 mov     [ebp+eax*2+var_30], cx
.text:0000186F                 jmp     short loc_1828
.text:00001871 ; ---------------------------------------------------------------------------
.text:00001871
.text:00001871 loc_1871:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+ADj
.text:00001871                 xor     edx, edx
.text:00001873                 mov     eax, [ebp+var_3C]
.text:00001876                 mov     [ebp+eax*2+var_30], dx
.text:0000187B                 cmp     [ebp+arg_C], 0
.text:0000187F                 jz      short loc_188B
.text:00001881                 push    2Eh ; '.'
.text:00001883                 mov     ecx, [ebp+arg_8]
.text:00001886                 call    ??YUString@@QAEAAV0@_W@Z ; UString::operator+=(wchar_t)
.text:0000188B
.text:0000188B loc_188B:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+F7j
.text:0000188B                 lea     ecx, [ebp+var_30]
.text:0000188E                 push    ecx
.text:0000188F                 mov     ecx, [ebp+arg_8]
.text:00001892                 call    ??YUString@@QAEAAV0@PB_W@Z ; UString::operator+=(wchar_t const *)
.text:00001897                 mov     esi, esp
.text:00001899                 call    dword ptr ds:__imp__GetTickCount@0 ; GetTickCount()
.text:0000189F                 cmp     esi, esp
.text:000018A1                 call    __RTC_CheckEsp
.text:000018A6                 add     eax, 2
.text:000018A9                 mov     [ebp+var_44], eax
.text:000018AC                 jnz     short loc_18B5
.text:000018AE                 mov     [ebp+var_44], 1
.text:000018B5
.text:000018B5 loc_18B5:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+124j
.text:000018B5                 mov     edx, [ebp+var_8]
.text:000018B8                 add     edx, [ebp+var_44]
.text:000018BB                 mov     [ebp+var_8], edx
.text:000018BE
.text:000018BE loc_18BE:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+8Bj
.text:000018BE                 mov     [ebp+arg_4], 1
.text:000018C2                 cmp     [ebp+arg_C], 0
.text:000018C6                 jz      short loc_18D5
.text:000018C8                 push    offset $SG68221 ; ".tmp"
.text:000018CD                 mov     ecx, [ebp+arg_8]
.text:000018D0                 call    ??YUString@@QAEAAV0@PB_W@Z ; UString::operator+=(wchar_t const *)
.text:000018D5
.text:000018D5 loc_18D5:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+13Ej
.text:000018D5                 mov     ecx, [ebp+arg_8]
.text:000018D8                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:000018DD                 push    eax             ; wchar_t *
.text:000018DE                 call    ?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NFind::DoesFileOrDirExist(wchar_t const *)
.text:000018E3                 movzx   eax, al
.text:000018E6                 test    eax, eax
.text:000018E8                 jz      short loc_1903
.text:000018EA                 mov     esi, esp
.text:000018EC                 push    0B7h ; '+'      ; dwErrCode
.text:000018F1                 call    dword ptr ds:__imp__SetLastError@4 ; SetLastError(x)
.text:000018F7                 cmp     esi, esp
.text:000018F9                 call    __RTC_CheckEsp
.text:000018FE                 jmp     loc_17EE
.text:00001903 ; ---------------------------------------------------------------------------
.text:00001903
.text:00001903 loc_1903:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+160j
.text:00001903                 cmp     [ebp+arg_C], 0
.text:00001907                 jz      short loc_1929
.text:00001909                 push    0               ; bool
.text:0000190B                 mov     ecx, [ebp+arg_8]
.text:0000190E                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:00001913                 push    eax             ; wchar_t *
.text:00001914                 mov     ecx, [ebp+arg_C] ; this
.text:00001917                 call    ?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z ; NWindows::NFile::NIO::COutFile::Create(wchar_t const *,bool)
.text:0000191C                 movzx   ecx, al
.text:0000191F                 test    ecx, ecx
.text:00001921                 jz      short loc_1927
.text:00001923                 mov     al, 1
.text:00001925                 jmp     short loc_1974
.text:00001927 ; ---------------------------------------------------------------------------
.text:00001927
.text:00001927 loc_1927:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+199j
.text:00001927                 jmp     short loc_1942
.text:00001929 ; ---------------------------------------------------------------------------
.text:00001929
.text:00001929 loc_1929:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+17Fj
.text:00001929                 mov     ecx, [ebp+arg_8]
.text:0000192C                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:00001931                 push    eax             ; lpPathName
.text:00001932                 call    ?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NDir::CreateDir(wchar_t const *)
.text:00001937                 movzx   edx, al
.text:0000193A                 test    edx, edx
.text:0000193C                 jz      short loc_1942
.text:0000193E                 mov     al, 1
.text:00001940                 jmp     short loc_1974
.text:00001942 ; ---------------------------------------------------------------------------
.text:00001942
.text:00001942 loc_1942:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *):loc_1927j
.text:00001942                                         ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+1B4j
.text:00001942                 mov     esi, esp
.text:00001944                 call    dword ptr ds:__imp__GetLastError@0 ; GetLastError()
.text:0000194A                 cmp     esi, esp
.text:0000194C                 call    __RTC_CheckEsp
.text:00001951                 mov     [ebp+var_48], eax
.text:00001954                 cmp     [ebp+var_48], 50h ; 'P'
.text:00001958                 jz      short loc_1965
.text:0000195A                 cmp     [ebp+var_48], 0B7h ; '+'
.text:00001961                 jz      short loc_1965
.text:00001963                 jmp     short loc_196A
.text:00001965 ; ---------------------------------------------------------------------------
.text:00001965
.text:00001965 loc_1965:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+1D0j
.text:00001965                                         ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+1D9j
.text:00001965                 jmp     loc_17EE
.text:0000196A ; ---------------------------------------------------------------------------
.text:0000196A
.text:0000196A loc_196A:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+73j
.text:0000196A                                         ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+1DBj
.text:0000196A                 mov     ecx, [ebp+arg_8] ; this
.text:0000196D                 call    ?Empty@UString@@QAEXXZ ; UString::Empty(void)
.text:00001972                 xor     al, al
.text:00001974
.text:00001974 loc_1974:                               ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+19Dj
.text:00001974                                         ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+1B8j
.text:00001974                 push    edx
.text:00001975                 mov     ecx, ebp
.text:00001977                 push    eax
.text:00001978                 lea     edx, $LN23_1
.text:0000197E                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00001983                 pop     eax
.text:00001984                 pop     edx
.text:00001985                 pop     edi
.text:00001986                 pop     esi
.text:00001987                 mov     ecx, [ebp+var_4]
.text:0000198A                 xor     ecx, ebp
.text:0000198C                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00001991                 add     esp, 4Ch
.text:00001994                 cmp     ebp, esp
.text:00001996                 call    __RTC_CheckEsp
.text:0000199B                 mov     esp, ebp
.text:0000199D                 pop     ebp
.text:0000199E                 retn    10h
.text:0000199E ?CreateTempFile@NDir@NFile@NWindows@@YG_NPB_W_NAAVUString@@PAVCOutFile@NIO@23@@Z endp ; sp-analysis failed
.text:0000199E
.text:0000199E ; ---------------------------------------------------------------------------
.text:000019A1                 align 4
.text:000019A4 $LN23_1         dd 1                    ; DATA XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+1F0o
.text:000019A8                 dd offset $LN22
.text:000019AC $LN22           dd 0FFFFFFD0h, 20h      ; DATA XREF: .text:000019A8o
.text:000019B4                 dd offset $LN21_0
.text:000019B8 $LN21_0         dd 0CCCC0073h, 3 dup(0CCCCCCCCh) ; DATA XREF: .text:000019B4o
.text:000019C8
.text:000019C8 ; =============== S U B R O U T I N E =======================================
.text:000019C8
.text:000019C8 ; Attributes: bp-based frame
.text:000019C8
.text:000019C8 ; bool __thiscall NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(NWindows::NFile::NDir::CTempFile *this, const wchar_t *, struct NWindows::NFile::NIO::COutFile *)
.text:000019C8                 public ?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z
.text:000019C8 ?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z proc near
.text:000019C8
.text:000019C8 var_40          = dword ptr -40h
.text:000019C8 var_3C          = dword ptr -3Ch
.text:000019C8 var_36          = byte ptr -36h
.text:000019C8 var_35          = byte ptr -35h
.text:000019C8 var_34          = byte ptr -34h
.text:000019C8 var_26          = byte ptr -26h
.text:000019C8 var_25          = byte ptr -25h
.text:000019C8 var_20          = byte ptr -20h
.text:000019C8 var_10          = dword ptr -10h
.text:000019C8 var_C           = dword ptr -0Ch
.text:000019C8 var_4           = dword ptr -4
.text:000019C8 arg_0           = dword ptr  8
.text:000019C8 arg_4           = dword ptr  0Ch
.text:000019C8
.text:000019C8                 push    ebp
.text:000019C9                 mov     ebp, esp
.text:000019CB                 push    0FFFFFFFFh
.text:000019CD                 push    offset __ehhandler$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z
.text:000019D2                 mov     eax, large fs:0
.text:000019D8                 push    eax
.text:000019D9                 sub     esp, 34h
.text:000019DC                 push    edi
.text:000019DD                 push    ecx
.text:000019DE                 lea     edi, [ebp+var_40]
.text:000019E1                 mov     ecx, 0Dh
.text:000019E6                 mov     eax, 0CCCCCCCCh
.text:000019EB                 rep stosd
.text:000019ED                 pop     ecx
.text:000019EE                 mov     eax, dword ptr ds:___security_cookie
.text:000019F3                 xor     eax, ebp
.text:000019F5                 push    eax             ; struct UString *
.text:000019F6                 lea     eax, [ebp+var_C]
.text:000019F9                 mov     large fs:0, eax
.text:000019FF                 mov     [ebp+var_10], ecx
.text:00001A02                 mov     ecx, [ebp+var_10] ; this
.text:00001A05                 call    ?Remove@CTempFile@NDir@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NDir::CTempFile::Remove(void)
.text:00001A0A                 movzx   eax, al
.text:00001A0D                 test    eax, eax
.text:00001A0F                 jnz     short loc_1A18
.text:00001A11                 xor     al, al
.text:00001A13                 jmp     loc_1AE0
.text:00001A18 ; ---------------------------------------------------------------------------
.text:00001A18
.text:00001A18 loc_1A18:                               ; CODE XREF: NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+47j
.text:00001A18                 lea     ecx, [ebp+var_20]
.text:00001A1B                 call    ??0UString@@QAE@XZ ; UString::UString(void)
.text:00001A20                 mov     [ebp+var_4], 0
.text:00001A27                 lea     ecx, [ebp+var_20]
.text:00001A2A                 push    ecx             ; this
.text:00001A2B                 call    ?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z ; NWindows::NFile::NDir::MyGetTempPath(UString &)
.text:00001A30                 movzx   edx, al
.text:00001A33                 test    edx, edx
.text:00001A35                 jnz     short loc_1A52
.text:00001A37                 mov     [ebp+var_25], 0
.text:00001A3B                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00001A42                 lea     ecx, [ebp+var_20] ; this
.text:00001A45                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001A4A                 mov     al, [ebp+var_25]
.text:00001A4D                 jmp     loc_1AE0
.text:00001A52 ; ---------------------------------------------------------------------------
.text:00001A52
.text:00001A52 loc_1A52:                               ; CODE XREF: NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+6Dj
.text:00001A52                 mov     eax, [ebp+arg_4]
.text:00001A55                 push    eax             ; NWindows::NFile::NIO::COutFile *
.text:00001A56                 mov     ecx, [ebp+var_10]
.text:00001A59                 add     ecx, 4
.text:00001A5C                 push    ecx             ; UString *
.text:00001A5D                 push    1               ; char
.text:00001A5F                 mov     edx, [ebp+arg_0]
.text:00001A62                 push    edx
.text:00001A63                 lea     eax, [ebp+var_20]
.text:00001A66                 push    eax
.text:00001A67                 lea     ecx, [ebp+var_34]
.text:00001A6A                 push    ecx
.text:00001A6B                 call    ??H@YG?AVUString@@ABV0@PB_W@Z ; operator+(UString const &,wchar_t const *)
.text:00001A70                 mov     [ebp+var_3C], eax
.text:00001A73                 mov     edx, [ebp+var_3C]
.text:00001A76                 mov     [ebp+var_40], edx
.text:00001A79                 mov     byte ptr [ebp+var_4], 1
.text:00001A7D                 mov     ecx, [ebp+var_40]
.text:00001A80                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:00001A85                 push    eax             ; int
.text:00001A86                 call    ?CreateTempFile@NDir@NFile@NWindows@@YG_NPB_W_NAAVUString@@PAVCOutFile@NIO@23@@Z ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)
.text:00001A8B                 movzx   eax, al
.text:00001A8E                 neg     eax
.text:00001A90                 sbb     eax, eax
.text:00001A92                 add     eax, 1
.text:00001A95                 mov     [ebp+var_26], al
.text:00001A98                 mov     byte ptr [ebp+var_4], 0
.text:00001A9C                 lea     ecx, [ebp+var_34] ; this
.text:00001A9F                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001AA4                 movzx   ecx, [ebp+var_26]
.text:00001AA8                 test    ecx, ecx
.text:00001AAA                 jz      short loc_1AC4
.text:00001AAC                 mov     [ebp+var_35], 0
.text:00001AB0                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00001AB7                 lea     ecx, [ebp+var_20] ; this
.text:00001ABA                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001ABF                 mov     al, [ebp+var_35]
.text:00001AC2                 jmp     short loc_1AE0
.text:00001AC4 ; ---------------------------------------------------------------------------
.text:00001AC4
.text:00001AC4 loc_1AC4:                               ; CODE XREF: NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+E2j
.text:00001AC4                 mov     edx, [ebp+var_10]
.text:00001AC7                 mov     byte ptr [edx], 1
.text:00001ACA                 mov     [ebp+var_36], 1
.text:00001ACE                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00001AD5                 lea     ecx, [ebp+var_20] ; this
.text:00001AD8                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001ADD                 mov     al, [ebp+var_36]
.text:00001AE0
.text:00001AE0 loc_1AE0:                               ; CODE XREF: NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+4Bj
.text:00001AE0                                         ; NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+85j ...
.text:00001AE0                 push    edx
.text:00001AE1                 mov     ecx, ebp
.text:00001AE3                 push    eax
.text:00001AE4                 lea     edx, $LN11_0
.text:00001AEA                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00001AEF                 pop     eax
.text:00001AF0                 pop     edx
.text:00001AF1                 mov     ecx, [ebp+var_C]
.text:00001AF4                 mov     large fs:0, ecx
.text:00001AFB                 pop     ecx
.text:00001AFC                 pop     edi
.text:00001AFD                 add     esp, 40h
.text:00001B00                 cmp     ebp, esp
.text:00001B02                 call    __RTC_CheckEsp
.text:00001B07                 mov     esp, ebp
.text:00001B09                 pop     ebp
.text:00001B0A                 retn    8
.text:00001B0A ?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z endp
.text:00001B0A
.text:00001B0A ; ---------------------------------------------------------------------------
.text:00001B0D                 align 10h
.text:00001B10 $LN11_0         dd 1                    ; DATA XREF: NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+11Co
.text:00001B14                 dd offset $LN10_3
.text:00001B18 $LN10_3         dd 0FFFFFFE0h, 0Ch      ; DATA XREF: .text:00001B14o
.text:00001B20                 dd offset $LN8          ; "tempPath"
.text:00001B24 $LN8            db 'tempPath',0         ; DATA XREF: .text:00001B20o
.text:00001B2D                 db 0Bh dup(0CCh)
.text:00001B38
.text:00001B38 ; =============== S U B R O U T I N E =======================================
.text:00001B38
.text:00001B38 ; Attributes: bp-based frame
.text:00001B38
.text:00001B38 ; bool __thiscall NWindows::NFile::NDir::CTempFile::Remove(wchar_t *this)
.text:00001B38                 public ?Remove@CTempFile@NDir@NFile@NWindows@@QAE_NXZ
.text:00001B38 ?Remove@CTempFile@NDir@NFile@NWindows@@QAE_NXZ proc near
.text:00001B38                                         ; CODE XREF: NWindows::NFile::NDir::CTempFile::Create(wchar_t const *,NWindows::NFile::NIO::COutFile *)+11p
.text:00001B38                                         ; NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+3Dp
.text:00001B38
.text:00001B38 var_4           = dword ptr -4
.text:00001B38
.text:00001B38                 push    ebp
.text:00001B39                 mov     ebp, esp
.text:00001B3B                 push    ecx             ; wchar_t *
.text:00001B3C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001B43                 mov     [ebp+var_4], ecx
.text:00001B46                 mov     eax, [ebp+var_4]
.text:00001B49                 movzx   ecx, byte ptr [eax]
.text:00001B4C                 test    ecx, ecx
.text:00001B4E                 jnz     short loc_1B54
.text:00001B50                 mov     al, 1
.text:00001B52                 jmp     short loc_1B81
.text:00001B54 ; ---------------------------------------------------------------------------
.text:00001B54
.text:00001B54 loc_1B54:                               ; CODE XREF: NWindows::NFile::NDir::CTempFile::Remove(void)+16j
.text:00001B54                 mov     ecx, [ebp+var_4]
.text:00001B57                 add     ecx, 4
.text:00001B5A                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:00001B5F                 push    eax             ; lpFileName
.text:00001B60                 call    ?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)
.text:00001B65                 movzx   edx, al
.text:00001B68                 neg     edx
.text:00001B6A                 sbb     edx, edx
.text:00001B6C                 add     edx, 1
.text:00001B6F                 mov     eax, [ebp+var_4]
.text:00001B72                 mov     [eax], dl
.text:00001B74                 mov     ecx, [ebp+var_4]
.text:00001B77                 movzx   eax, byte ptr [ecx]
.text:00001B7A                 neg     eax
.text:00001B7C                 sbb     eax, eax
.text:00001B7E                 add     eax, 1
.text:00001B81
.text:00001B81 loc_1B81:                               ; CODE XREF: NWindows::NFile::NDir::CTempFile::Remove(void)+1Aj
.text:00001B81                 add     esp, 4
.text:00001B84                 cmp     ebp, esp
.text:00001B86                 call    __RTC_CheckEsp
.text:00001B8B                 mov     esp, ebp
.text:00001B8D                 pop     ebp
.text:00001B8E                 retn
.text:00001B8E ?Remove@CTempFile@NDir@NFile@NWindows@@QAE_NXZ endp
.text:00001B8E
.text:00001B8E ; ---------------------------------------------------------------------------
.text:00001B8F                 db 9 dup(0CCh)
.text:00001B98
.text:00001B98 ; =============== S U B R O U T I N E =======================================
.text:00001B98
.text:00001B98 ; Attributes: bp-based frame
.text:00001B98
.text:00001B98 ; bool __thiscall NWindows::NFile::NDir::CTempFile::MoveTo(wchar_t *this, LPCSTR lpNewFileName, bool)
.text:00001B98                 public ?MoveTo@CTempFile@NDir@NFile@NWindows@@QAE_NPB_W_N@Z
.text:00001B98 ?MoveTo@CTempFile@NDir@NFile@NWindows@@QAE_NPB_W_N@Z proc near
.text:00001B98
.text:00001B98 var_4           = dword ptr -4
.text:00001B98 lpNewFileName   = dword ptr  8
.text:00001B98 arg_4           = byte ptr  0Ch
.text:00001B98
.text:00001B98                 push    ebp
.text:00001B99                 mov     ebp, esp
.text:00001B9B                 push    ecx             ; wchar_t *
.text:00001B9C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001BA3                 mov     [ebp+var_4], ecx
.text:00001BA6                 movzx   eax, [ebp+arg_4]
.text:00001BAA                 test    eax, eax
.text:00001BAC                 jz      short loc_1BD2
.text:00001BAE                 mov     ecx, [ebp+lpNewFileName]
.text:00001BB1                 push    ecx             ; wchar_t *
.text:00001BB2                 call    ?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NFind::DoesFileExist(wchar_t const *)
.text:00001BB7                 movzx   edx, al
.text:00001BBA                 test    edx, edx
.text:00001BBC                 jz      short loc_1BD2
.text:00001BBE                 mov     eax, [ebp+lpNewFileName]
.text:00001BC1                 push    eax             ; lpFileName
.text:00001BC2                 call    ?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)
.text:00001BC7                 movzx   ecx, al
.text:00001BCA                 test    ecx, ecx
.text:00001BCC                 jnz     short loc_1BD2
.text:00001BCE                 xor     al, al
.text:00001BD0                 jmp     short loc_1BEF
.text:00001BD2 ; ---------------------------------------------------------------------------
.text:00001BD2
.text:00001BD2 loc_1BD2:                               ; CODE XREF: NWindows::NFile::NDir::CTempFile::MoveTo(wchar_t const *,bool)+14j
.text:00001BD2                                         ; NWindows::NFile::NDir::CTempFile::MoveTo(wchar_t const *,bool)+24j ...
.text:00001BD2                 mov     ecx, [ebp+var_4] ; this
.text:00001BD5                 call    ?DisableDeleting@CTempFile@NDir@NFile@NWindows@@AAEXXZ ; NWindows::NFile::NDir::CTempFile::DisableDeleting(void)
.text:00001BDA                 mov     edx, [ebp+lpNewFileName]
.text:00001BDD                 push    edx             ; lpNewFileName
.text:00001BDE                 mov     ecx, [ebp+var_4]
.text:00001BE1                 add     ecx, 4
.text:00001BE4                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:00001BE9                 push    eax             ; lpExistingFileName
.text:00001BEA                 call    ?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z ; NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *)
.text:00001BEF
.text:00001BEF loc_1BEF:                               ; CODE XREF: NWindows::NFile::NDir::CTempFile::MoveTo(wchar_t const *,bool)+38j
.text:00001BEF                 add     esp, 4
.text:00001BF2                 cmp     ebp, esp
.text:00001BF4                 call    __RTC_CheckEsp
.text:00001BF9                 mov     esp, ebp
.text:00001BFB                 pop     ebp
.text:00001BFC                 retn    8
.text:00001BFC ?MoveTo@CTempFile@NDir@NFile@NWindows@@QAE_NPB_W_N@Z endp ; sp-analysis failed
.text:00001BFC
.text:00001BFC ; ---------------------------------------------------------------------------
.text:00001BFF                 db 9 dup(0CCh)
.text:00001C08
.text:00001C08 ; =============== S U B R O U T I N E =======================================
.text:00001C08
.text:00001C08 ; Attributes: bp-based frame
.text:00001C08
.text:00001C08 ; bool __thiscall NWindows::NFile::NDir::CTempDir::Create(NWindows::NFile::NDir::CTempDir *this, const wchar_t *)
.text:00001C08                 public ?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z
.text:00001C08 ?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z proc near
.text:00001C08
.text:00001C08 var_40          = dword ptr -40h
.text:00001C08 var_3C          = dword ptr -3Ch
.text:00001C08 var_36          = byte ptr -36h
.text:00001C08 var_35          = byte ptr -35h
.text:00001C08 var_34          = byte ptr -34h
.text:00001C08 var_26          = byte ptr -26h
.text:00001C08 var_25          = byte ptr -25h
.text:00001C08 var_20          = byte ptr -20h
.text:00001C08 var_10          = dword ptr -10h
.text:00001C08 var_C           = dword ptr -0Ch
.text:00001C08 var_4           = dword ptr -4
.text:00001C08 arg_0           = dword ptr  8
.text:00001C08
.text:00001C08                 push    ebp
.text:00001C09                 mov     ebp, esp
.text:00001C0B                 push    0FFFFFFFFh
.text:00001C0D                 push    offset __ehhandler$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z
.text:00001C12                 mov     eax, large fs:0
.text:00001C18                 push    eax
.text:00001C19                 sub     esp, 34h
.text:00001C1C                 push    edi
.text:00001C1D                 push    ecx
.text:00001C1E                 lea     edi, [ebp+var_40]
.text:00001C21                 mov     ecx, 0Dh
.text:00001C26                 mov     eax, 0CCCCCCCCh
.text:00001C2B                 rep stosd
.text:00001C2D                 pop     ecx
.text:00001C2E                 mov     eax, dword ptr ds:___security_cookie
.text:00001C33                 xor     eax, ebp
.text:00001C35                 push    eax             ; struct UString *
.text:00001C36                 lea     eax, [ebp+var_C]
.text:00001C39                 mov     large fs:0, eax
.text:00001C3F                 mov     [ebp+var_10], ecx
.text:00001C42                 mov     ecx, [ebp+var_10] ; this
.text:00001C45                 call    ?Remove@CTempDir@NDir@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NDir::CTempDir::Remove(void)
.text:00001C4A                 movzx   eax, al
.text:00001C4D                 test    eax, eax
.text:00001C4F                 jnz     short loc_1C58
.text:00001C51                 xor     al, al
.text:00001C53                 jmp     loc_1D1E
.text:00001C58 ; ---------------------------------------------------------------------------
.text:00001C58
.text:00001C58 loc_1C58:                               ; CODE XREF: NWindows::NFile::NDir::CTempDir::Create(wchar_t const *)+47j
.text:00001C58                 lea     ecx, [ebp+var_20]
.text:00001C5B                 call    ??0UString@@QAE@XZ ; UString::UString(void)
.text:00001C60                 mov     [ebp+var_4], 0
.text:00001C67                 lea     ecx, [ebp+var_20]
.text:00001C6A                 push    ecx             ; this
.text:00001C6B                 call    ?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z ; NWindows::NFile::NDir::MyGetTempPath(UString &)
.text:00001C70                 movzx   edx, al
.text:00001C73                 test    edx, edx
.text:00001C75                 jnz     short loc_1C92
.text:00001C77                 mov     [ebp+var_25], 0
.text:00001C7B                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00001C82                 lea     ecx, [ebp+var_20] ; this
.text:00001C85                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001C8A                 mov     al, [ebp+var_25]
.text:00001C8D                 jmp     loc_1D1E
.text:00001C92 ; ---------------------------------------------------------------------------
.text:00001C92
.text:00001C92 loc_1C92:                               ; CODE XREF: NWindows::NFile::NDir::CTempDir::Create(wchar_t const *)+6Dj
.text:00001C92                 push    0               ; NWindows::NFile::NIO::COutFile *
.text:00001C94                 mov     eax, [ebp+var_10]
.text:00001C97                 add     eax, 4
.text:00001C9A                 push    eax             ; UString *
.text:00001C9B                 push    1               ; char
.text:00001C9D                 mov     ecx, [ebp+arg_0]
.text:00001CA0                 push    ecx
.text:00001CA1                 lea     edx, [ebp+var_20]
.text:00001CA4                 push    edx
.text:00001CA5                 lea     eax, [ebp+var_34]
.text:00001CA8                 push    eax
.text:00001CA9                 call    ??H@YG?AVUString@@ABV0@PB_W@Z ; operator+(UString const &,wchar_t const *)
.text:00001CAE                 mov     [ebp+var_3C], eax
.text:00001CB1                 mov     ecx, [ebp+var_3C]
.text:00001CB4                 mov     [ebp+var_40], ecx
.text:00001CB7                 mov     byte ptr [ebp+var_4], 1
.text:00001CBB                 mov     ecx, [ebp+var_40]
.text:00001CBE                 call    ??BUString@@QBEPB_WXZ ; UString::operator wchar_t const *(void)
.text:00001CC3                 push    eax             ; int
.text:00001CC4                 call    ?CreateTempFile@NDir@NFile@NWindows@@YG_NPB_W_NAAVUString@@PAVCOutFile@NIO@23@@Z ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)
.text:00001CC9                 movzx   edx, al
.text:00001CCC                 neg     edx
.text:00001CCE                 sbb     edx, edx
.text:00001CD0                 add     edx, 1
.text:00001CD3                 mov     [ebp+var_26], dl
.text:00001CD6                 mov     byte ptr [ebp+var_4], 0
.text:00001CDA                 lea     ecx, [ebp+var_34] ; this
.text:00001CDD                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001CE2                 movzx   eax, [ebp+var_26]
.text:00001CE6                 test    eax, eax
.text:00001CE8                 jz      short loc_1D02
.text:00001CEA                 mov     [ebp+var_35], 0
.text:00001CEE                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00001CF5                 lea     ecx, [ebp+var_20] ; this
.text:00001CF8                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001CFD                 mov     al, [ebp+var_35]
.text:00001D00                 jmp     short loc_1D1E
.text:00001D02 ; ---------------------------------------------------------------------------
.text:00001D02
.text:00001D02 loc_1D02:                               ; CODE XREF: NWindows::NFile::NDir::CTempDir::Create(wchar_t const *)+E0j
.text:00001D02                 mov     ecx, [ebp+var_10]
.text:00001D05                 mov     byte ptr [ecx], 1
.text:00001D08                 mov     [ebp+var_36], 1
.text:00001D0C                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00001D13                 lea     ecx, [ebp+var_20] ; this
.text:00001D16                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00001D1B                 mov     al, [ebp+var_36]
.text:00001D1E
.text:00001D1E loc_1D1E:                               ; CODE XREF: NWindows::NFile::NDir::CTempDir::Create(wchar_t const *)+4Bj
.text:00001D1E                                         ; NWindows::NFile::NDir::CTempDir::Create(wchar_t const *)+85j ...
.text:00001D1E                 push    edx
.text:00001D1F                 mov     ecx, ebp
.text:00001D21                 push    eax
.text:00001D22                 lea     edx, $LN11_1
.text:00001D28                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00001D2D                 pop     eax
.text:00001D2E                 pop     edx
.text:00001D2F                 mov     ecx, [ebp+var_C]
.text:00001D32                 mov     large fs:0, ecx
.text:00001D39                 pop     ecx
.text:00001D3A                 pop     edi
.text:00001D3B                 add     esp, 40h
.text:00001D3E                 cmp     ebp, esp
.text:00001D40                 call    __RTC_CheckEsp
.text:00001D45                 mov     esp, ebp
.text:00001D47                 pop     ebp
.text:00001D48                 retn    4
.text:00001D48 ?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z endp
.text:00001D48
.text:00001D48 ; ---------------------------------------------------------------------------
.text:00001D4B                 align 4
.text:00001D4C $LN11_1         dd 1                    ; DATA XREF: NWindows::NFile::NDir::CTempDir::Create(wchar_t const *)+11Ao
.text:00001D50                 dd offset $LN10_4
.text:00001D54 $LN10_4         dd 0FFFFFFE0h, 0Ch      ; DATA XREF: .text:00001D50o
.text:00001D5C                 dd offset $LN8_0        ; "tempPath"
.text:00001D60 $LN8_0          db 'tempPath',0         ; DATA XREF: .text:00001D5Co
.text:00001D69                 db 0Fh dup(0CCh)
.text:00001D78
.text:00001D78 ; =============== S U B R O U T I N E =======================================
.text:00001D78
.text:00001D78 ; Attributes: bp-based frame
.text:00001D78
.text:00001D78 ; bool __thiscall NWindows::NFile::NDir::CTempDir::Remove(NWindows::NFile::NDir::CTempDir *this)
.text:00001D78                 public ?Remove@CTempDir@NDir@NFile@NWindows@@QAE_NXZ
.text:00001D78 ?Remove@CTempDir@NDir@NFile@NWindows@@QAE_NXZ proc near
.text:00001D78                                         ; CODE XREF: NWindows::NFile::NDir::CTempDir::Create(wchar_t const *)+3Dp
.text:00001D78
.text:00001D78 var_4           = dword ptr -4
.text:00001D78
.text:00001D78                 push    ebp
.text:00001D79                 mov     ebp, esp
.text:00001D7B                 push    ecx             ; struct UString *
.text:00001D7C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001D83                 mov     [ebp+var_4], ecx
.text:00001D86                 mov     eax, [ebp+var_4]
.text:00001D89                 movzx   ecx, byte ptr [eax]
.text:00001D8C                 test    ecx, ecx
.text:00001D8E                 jnz     short loc_1D94
.text:00001D90                 mov     al, 1
.text:00001D92                 jmp     short loc_1DBC
.text:00001D94 ; ---------------------------------------------------------------------------
.text:00001D94
.text:00001D94 loc_1D94:                               ; CODE XREF: NWindows::NFile::NDir::CTempDir::Remove(void)+16j
.text:00001D94                 mov     edx, [ebp+var_4]
.text:00001D97                 add     edx, 4
.text:00001D9A                 push    edx             ; this
.text:00001D9B                 call    ?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z ; NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)
.text:00001DA0                 movzx   eax, al
.text:00001DA3                 neg     eax
.text:00001DA5                 sbb     eax, eax
.text:00001DA7                 add     eax, 1
.text:00001DAA                 mov     ecx, [ebp+var_4]
.text:00001DAD                 mov     [ecx], al
.text:00001DAF                 mov     edx, [ebp+var_4]
.text:00001DB2                 movzx   eax, byte ptr [edx]
.text:00001DB5                 neg     eax
.text:00001DB7                 sbb     eax, eax
.text:00001DB9                 add     eax, 1
.text:00001DBC
.text:00001DBC loc_1DBC:                               ; CODE XREF: NWindows::NFile::NDir::CTempDir::Remove(void)+1Aj
.text:00001DBC                 add     esp, 4
.text:00001DBF                 cmp     ebp, esp
.text:00001DC1                 call    __RTC_CheckEsp
.text:00001DC6                 mov     esp, ebp
.text:00001DC8                 pop     ebp
.text:00001DC9                 retn
.text:00001DC9 ?Remove@CTempDir@NDir@NFile@NWindows@@QAE_NXZ endp
.text:00001DC9
.text:00001DC9 ; ---------------------------------------------------------------------------
.text:00001DCA                 align 4
.text:00001DCA _text           ends
.text:00001DCA
.text$x:00001DCC ; ===========================================================================
.text$x:00001DCC
.text$x:00001DCC ; Segment type: Pure code
.text$x:00001DCC ; Segment permissions: Read/Execute
.text$x:00001DCC _text$x         segment para public 'CODE' use32
.text$x:00001DCC                 assume cs:_text$x
.text$x:00001DCC                 ;org 1DCCh
.text$x:00001DCC                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$x:00001DCC
.text$x:00001DCC ; =============== S U B R O U T I N E =======================================
.text$x:00001DCC
.text$x:00001DCC
.text$x:00001DCC __unwindfunclet$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0 proc near
.text$x:00001DCC                                         ; DATA XREF: .xdata$x:000020B4o
.text$x:00001DCC                 lea     ecx, [ebp-344h] ; this
.text$x:00001DD2                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00001DD2 __unwindfunclet$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0 endp
.text$x:00001DD2
.text$x:00001DD7
.text$x:00001DD7 ; =============== S U B R O U T I N E =======================================
.text$x:00001DD7
.text$x:00001DD7
.text$x:00001DD7 __unwindfunclet$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1 proc near
.text$x:00001DD7                                         ; DATA XREF: .xdata$x:000020BCo
.text$x:00001DD7                 lea     ecx, [ebp-350h] ; this
.text$x:00001DDD                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:00001DDD __unwindfunclet$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1 endp
.text$x:00001DDD
.text$x:00001DE2
.text$x:00001DE2 ; =============== S U B R O U T I N E =======================================
.text$x:00001DE2
.text$x:00001DE2
.text$x:00001DE2 __ehhandler$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z proc near
.text$x:00001DE2                                         ; DATA XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+5o
.text$x:00001DE2
.text$x:00001DE2 arg_4           = dword ptr  8
.text$x:00001DE2
.text$x:00001DE2                 mov     edx, [esp+arg_4]
.text$x:00001DE6                 lea     eax, [edx+0Ch]
.text$x:00001DE9                 mov     ecx, [edx-35Ch]
.text$x:00001DEF                 xor     ecx, eax
.text$x:00001DF1                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001DF6                 mov     ecx, [edx-4]
.text$x:00001DF9                 xor     ecx, eax
.text$x:00001DFB                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001E00                 mov     eax, offset __ehfuncinfo$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text$x:00001E05                 jmp     ___CxxFrameHandler3
.text$x:00001E05 __ehhandler$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z endp
.text$x:00001E05
.text$x:00001E0A
.text$x:00001E0A ; =============== S U B R O U T I N E =======================================
.text$x:00001E0A
.text$x:00001E0A
.text$x:00001E0A __unwindfunclet$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0 proc near
.text$x:00001E0A                                         ; DATA XREF: .xdata$x:000020E8o
.text$x:00001E0A                 lea     ecx, [ebp-344h] ; this
.text$x:00001E10                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00001E10 __unwindfunclet$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0 endp
.text$x:00001E10
.text$x:00001E15
.text$x:00001E15 ; =============== S U B R O U T I N E =======================================
.text$x:00001E15
.text$x:00001E15
.text$x:00001E15 __unwindfunclet$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1 proc near
.text$x:00001E15                                         ; DATA XREF: .xdata$x:000020F0o
.text$x:00001E15                 lea     ecx, [ebp-350h] ; this
.text$x:00001E1B                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:00001E1B __unwindfunclet$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1 endp
.text$x:00001E1B
.text$x:00001E20
.text$x:00001E20 ; =============== S U B R O U T I N E =======================================
.text$x:00001E20
.text$x:00001E20
.text$x:00001E20 __ehhandler$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z proc near
.text$x:00001E20                                         ; DATA XREF: NWindows::NFile::NDir::GetSystemDir(UString &)+5o
.text$x:00001E20
.text$x:00001E20 arg_4           = dword ptr  8
.text$x:00001E20
.text$x:00001E20                 mov     edx, [esp+arg_4]
.text$x:00001E24                 lea     eax, [edx+0Ch]
.text$x:00001E27                 mov     ecx, [edx-35Ch]
.text$x:00001E2D                 xor     ecx, eax
.text$x:00001E2F                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001E34                 mov     ecx, [edx-4]
.text$x:00001E37                 xor     ecx, eax
.text$x:00001E39                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001E3E                 mov     eax, offset __ehfuncinfo$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text$x:00001E43                 jmp     ___CxxFrameHandler3
.text$x:00001E43 __ehhandler$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z endp
.text$x:00001E43
.text$x:00001E48
.text$x:00001E48 ; =============== S U B R O U T I N E =======================================
.text$x:00001E48
.text$x:00001E48
.text$x:00001E48 __unwindfunclet$?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z$0 proc near
.text$x:00001E48                                         ; DATA XREF: .xdata$x:0000211Co
.text$x:00001E48                 lea     ecx, [ebp-1Ch]  ; this
.text$x:00001E4B                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00001E4B __unwindfunclet$?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z$0 endp
.text$x:00001E4B
.text$x:00001E50
.text$x:00001E50 ; =============== S U B R O U T I N E =======================================
.text$x:00001E50
.text$x:00001E50
.text$x:00001E50 __ehhandler$?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z proc near
.text$x:00001E50                                         ; DATA XREF: NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+5o
.text$x:00001E50
.text$x:00001E50 arg_4           = dword ptr  8
.text$x:00001E50
.text$x:00001E50                 mov     edx, [esp+arg_4]
.text$x:00001E54                 lea     eax, [edx+0Ch]
.text$x:00001E57                 mov     ecx, [edx-20h]
.text$x:00001E5A                 xor     ecx, eax
.text$x:00001E5C                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001E61                 mov     eax, offset __ehfuncinfo$?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z
.text$x:00001E66                 jmp     ___CxxFrameHandler3
.text$x:00001E66 __ehhandler$?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z endp
.text$x:00001E66
.text$x:00001E6B
.text$x:00001E6B ; =============== S U B R O U T I N E =======================================
.text$x:00001E6B
.text$x:00001E6B
.text$x:00001E6B __unwindfunclet$?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0 proc near
.text$x:00001E6B                                         ; DATA XREF: .xdata$x:00002148o
.text$x:00001E6B                 lea     ecx, [ebp-1Ch]  ; this
.text$x:00001E6E                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00001E6E __unwindfunclet$?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0 endp
.text$x:00001E6E
.text$x:00001E73
.text$x:00001E73 ; =============== S U B R O U T I N E =======================================
.text$x:00001E73
.text$x:00001E73
.text$x:00001E73 __ehhandler$?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text$x:00001E73                                         ; DATA XREF: NWindows::NFile::NDir::RemoveDir(wchar_t const *)+5o
.text$x:00001E73
.text$x:00001E73 arg_4           = dword ptr  8
.text$x:00001E73
.text$x:00001E73                 mov     edx, [esp+arg_4]
.text$x:00001E77                 lea     eax, [edx+0Ch]
.text$x:00001E7A                 mov     ecx, [edx-20h]
.text$x:00001E7D                 xor     ecx, eax
.text$x:00001E7F                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001E84                 mov     eax, offset __ehfuncinfo$?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text$x:00001E89                 jmp     ___CxxFrameHandler3
.text$x:00001E89 __ehhandler$?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z endp
.text$x:00001E89
.text$x:00001E8E
.text$x:00001E8E ; =============== S U B R O U T I N E =======================================
.text$x:00001E8E
.text$x:00001E8E
.text$x:00001E8E __unwindfunclet$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z$0 proc near
.text$x:00001E8E                                         ; DATA XREF: .xdata$x:00002174o
.text$x:00001E8E                 lea     ecx, [ebp-1Ch]  ; this
.text$x:00001E91                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00001E91 __unwindfunclet$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z$0 endp
.text$x:00001E91
.text$x:00001E96
.text$x:00001E96 ; =============== S U B R O U T I N E =======================================
.text$x:00001E96
.text$x:00001E96
.text$x:00001E96 __unwindfunclet$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z$1 proc near
.text$x:00001E96                                         ; DATA XREF: .xdata$x:0000217Co
.text$x:00001E96                 lea     ecx, [ebp-28h]  ; this
.text$x:00001E99                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00001E99 __unwindfunclet$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z$1 endp
.text$x:00001E99
.text$x:00001E9E
.text$x:00001E9E ; =============== S U B R O U T I N E =======================================
.text$x:00001E9E
.text$x:00001E9E
.text$x:00001E9E __ehhandler$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z proc near
.text$x:00001E9E                                         ; DATA XREF: NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *)+5o
.text$x:00001E9E
.text$x:00001E9E arg_4           = dword ptr  8
.text$x:00001E9E
.text$x:00001E9E                 mov     edx, [esp+arg_4]
.text$x:00001EA2                 lea     eax, [edx+0Ch]
.text$x:00001EA5                 mov     ecx, [edx-38h]
.text$x:00001EA8                 xor     ecx, eax
.text$x:00001EAA                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001EAF                 mov     eax, offset __ehfuncinfo$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z
.text$x:00001EB4                 jmp     ___CxxFrameHandler3
.text$x:00001EB4 __ehhandler$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z endp
.text$x:00001EB4
.text$x:00001EB9
.text$x:00001EB9 ; =============== S U B R O U T I N E =======================================
.text$x:00001EB9
.text$x:00001EB9
.text$x:00001EB9 __unwindfunclet$?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0 proc near
.text$x:00001EB9                                         ; DATA XREF: .xdata$x:000021A8o
.text$x:00001EB9                 lea     ecx, [ebp-1Ch]  ; this
.text$x:00001EBC                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00001EBC __unwindfunclet$?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0 endp
.text$x:00001EBC
.text$x:00001EC1
.text$x:00001EC1 ; =============== S U B R O U T I N E =======================================
.text$x:00001EC1
.text$x:00001EC1
.text$x:00001EC1 __ehhandler$?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text$x:00001EC1                                         ; DATA XREF: NWindows::NFile::NDir::CreateDir(wchar_t const *)+5o
.text$x:00001EC1
.text$x:00001EC1 arg_4           = dword ptr  8
.text$x:00001EC1
.text$x:00001EC1                 mov     edx, [esp+arg_4]
.text$x:00001EC5                 lea     eax, [edx+0Ch]
.text$x:00001EC8                 mov     ecx, [edx-20h]
.text$x:00001ECB                 xor     ecx, eax
.text$x:00001ECD                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001ED2                 mov     eax, offset __ehfuncinfo$?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text$x:00001ED7                 jmp     ___CxxFrameHandler3
.text$x:00001ED7 __ehhandler$?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z endp
.text$x:00001ED7
.text$x:00001EDC
.text$x:00001EDC ; =============== S U B R O U T I N E =======================================
.text$x:00001EDC
.text$x:00001EDC
.text$x:00001EDC __unwindfunclet$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0 proc near
.text$x:00001EDC                                         ; DATA XREF: .xdata$x:000021D4o
.text$x:00001EDC                 lea     ecx, [ebp-24h]  ; this
.text$x:00001EDF                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:00001EDF __unwindfunclet$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0 endp
.text$x:00001EDF
.text$x:00001EE4
.text$x:00001EE4 ; =============== S U B R O U T I N E =======================================
.text$x:00001EE4
.text$x:00001EE4
.text$x:00001EE4 __unwindfunclet$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z$1 proc near
.text$x:00001EE4                                         ; DATA XREF: .xdata$x:000021DCo
.text$x:00001EE4                 lea     ecx, [ebp-3Ch]  ; this
.text$x:00001EE7                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:00001EE7 __unwindfunclet$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z$1 endp
.text$x:00001EE7
.text$x:00001EEC
.text$x:00001EEC ; =============== S U B R O U T I N E =======================================
.text$x:00001EEC
.text$x:00001EEC
.text$x:00001EEC __ehhandler$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text$x:00001EEC                                         ; DATA XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+5o
.text$x:00001EEC
.text$x:00001EEC arg_4           = dword ptr  8
.text$x:00001EEC
.text$x:00001EEC                 mov     edx, [esp+arg_4]
.text$x:00001EF0                 lea     eax, [edx+0Ch]
.text$x:00001EF3                 mov     ecx, [edx-4Ch]
.text$x:00001EF6                 xor     ecx, eax
.text$x:00001EF8                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001EFD                 mov     eax, offset __ehfuncinfo$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text$x:00001F02                 jmp     ___CxxFrameHandler3
.text$x:00001F02 __ehhandler$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z endp
.text$x:00001F02
.text$x:00001F07
.text$x:00001F07 ; =============== S U B R O U T I N E =======================================
.text$x:00001F07
.text$x:00001F07
.text$x:00001F07 __unwindfunclet$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z$0 proc near
.text$x:00001F07                                         ; DATA XREF: .xdata$x:00002208o
.text$x:00001F07                 lea     ecx, [ebp-5Ch]  ; this
.text$x:00001F0A                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00001F0A __unwindfunclet$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z$0 endp
.text$x:00001F0A
.text$x:00001F0F
.text$x:00001F0F ; =============== S U B R O U T I N E =======================================
.text$x:00001F0F
.text$x:00001F0F
.text$x:00001F0F __unwindfunclet$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z$1 proc near
.text$x:00001F0F                                         ; DATA XREF: .xdata$x:00002210o
.text$x:00001F0F                 lea     ecx, [ebp-48h]  ; this
.text$x:00001F12                 jmp     ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::~CFileInfo(void)
.text$x:00001F12 __unwindfunclet$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z$1 endp
.text$x:00001F12
.text$x:00001F17
.text$x:00001F17 ; =============== S U B R O U T I N E =======================================
.text$x:00001F17
.text$x:00001F17
.text$x:00001F17 __ehhandler$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text$x:00001F17                                         ; DATA XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *)+5o
.text$x:00001F17
.text$x:00001F17 arg_4           = dword ptr  8
.text$x:00001F17
.text$x:00001F17                 mov     edx, [esp+arg_4]
.text$x:00001F1B                 lea     eax, [edx+0Ch]
.text$x:00001F1E                 mov     ecx, [edx-68h]
.text$x:00001F21                 xor     ecx, eax
.text$x:00001F23                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001F28                 mov     eax, offset __ehfuncinfo$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z
.text$x:00001F2D                 jmp     ___CxxFrameHandler3
.text$x:00001F2D __ehhandler$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z endp
.text$x:00001F2D
.text$x:00001F32
.text$x:00001F32 ; =============== S U B R O U T I N E =======================================
.text$x:00001F32
.text$x:00001F32
.text$x:00001F32 __unwindfunclet$?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z$0 proc near
.text$x:00001F32                                         ; DATA XREF: .xdata$x:0000223Co
.text$x:00001F32                 lea     ecx, [ebp-20h]  ; this
.text$x:00001F35                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00001F35 __unwindfunclet$?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z$0 endp
.text$x:00001F35
.text$x:00001F3A
.text$x:00001F3A ; =============== S U B R O U T I N E =======================================
.text$x:00001F3A
.text$x:00001F3A
.text$x:00001F3A __ehhandler$?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text$x:00001F3A                                         ; DATA XREF: NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+5o
.text$x:00001F3A
.text$x:00001F3A arg_4           = dword ptr  8
.text$x:00001F3A
.text$x:00001F3A                 mov     edx, [esp+arg_4]
.text$x:00001F3E                 lea     eax, [edx+0Ch]
.text$x:00001F41                 mov     ecx, [edx-24h]
.text$x:00001F44                 xor     ecx, eax
.text$x:00001F46                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001F4B                 mov     eax, offset __ehfuncinfo$?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z
.text$x:00001F50                 jmp     ___CxxFrameHandler3
.text$x:00001F50 __ehhandler$?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z endp
.text$x:00001F50
.text$x:00001F55
.text$x:00001F55 ; =============== S U B R O U T I N E =======================================
.text$x:00001F55
.text$x:00001F55
.text$x:00001F55 __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$0 proc near
.text$x:00001F55                                         ; DATA XREF: .xdata$x:00002268o
.text$x:00001F55                 lea     ecx, [ebp-4Ch]  ; this
.text$x:00001F58                 jmp     ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::~CFileInfo(void)
.text$x:00001F58 __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$0 endp
.text$x:00001F58
.text$x:00001F5D
.text$x:00001F5D ; =============== S U B R O U T I N E =======================================
.text$x:00001F5D
.text$x:00001F5D
.text$x:00001F5D __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$1 proc near
.text$x:00001F5D                                         ; DATA XREF: .xdata$x:00002270o
.text$x:00001F5D                 lea     ecx, [ebp-60h]  ; this
.text$x:00001F60                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:00001F60 __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$1 endp
.text$x:00001F60
.text$x:00001F65
.text$x:00001F65 ; =============== S U B R O U T I N E =======================================
.text$x:00001F65
.text$x:00001F65
.text$x:00001F65 __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$2 proc near
.text$x:00001F65                                         ; DATA XREF: .xdata$x:00002278o
.text$x:00001F65                 lea     ecx, [ebp-7Ch]  ; this
.text$x:00001F68                 jmp     ??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CEnumerator::~CEnumerator(void)
.text$x:00001F68 __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$2 endp
.text$x:00001F68
.text$x:00001F6D
.text$x:00001F6D ; =============== S U B R O U T I N E =======================================
.text$x:00001F6D
.text$x:00001F6D
.text$x:00001F6D __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$3 proc near
.text$x:00001F6D                                         ; DATA XREF: .xdata$x:00002280o
.text$x:00001F6D                 lea     ecx, [ebp-0BCh] ; this
.text$x:00001F73                 jmp     ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfo::~CFileInfo(void)
.text$x:00001F73 __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$3 endp
.text$x:00001F73
.text$x:00001F78
.text$x:00001F78 ; =============== S U B R O U T I N E =======================================
.text$x:00001F78
.text$x:00001F78
.text$x:00001F78 __ehhandler$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z proc near
.text$x:00001F78                                         ; DATA XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+5o
.text$x:00001F78
.text$x:00001F78 arg_4           = dword ptr  8
.text$x:00001F78
.text$x:00001F78                 mov     edx, [esp+arg_4]
.text$x:00001F7C                 lea     eax, [edx+0Ch]
.text$x:00001F7F                 mov     ecx, [edx-0C4h]
.text$x:00001F85                 xor     ecx, eax
.text$x:00001F87                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001F8C                 mov     eax, offset __ehfuncinfo$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z
.text$x:00001F91                 jmp     ___CxxFrameHandler3
.text$x:00001F91 __ehhandler$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z endp
.text$x:00001F91
.text$x:00001F96
.text$x:00001F96 ; =============== S U B R O U T I N E =======================================
.text$x:00001F96
.text$x:00001F96
.text$x:00001F96 __unwindfunclet$?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0 proc near
.text$x:00001F96                                         ; DATA XREF: .xdata$x:000022ACo
.text$x:00001F96                 lea     ecx, [ebp-1Ch]  ; this
.text$x:00001F99                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00001F99 __unwindfunclet$?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0 endp
.text$x:00001F99
.text$x:00001F9E
.text$x:00001F9E ; =============== S U B R O U T I N E =======================================
.text$x:00001F9E
.text$x:00001F9E
.text$x:00001F9E __ehhandler$?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z proc near
.text$x:00001F9E                                         ; DATA XREF: NWindows::NFile::NDir::SetCurrentDir(wchar_t const *)+5o
.text$x:00001F9E
.text$x:00001F9E arg_4           = dword ptr  8
.text$x:00001F9E
.text$x:00001F9E                 mov     edx, [esp+arg_4]
.text$x:00001FA2                 lea     eax, [edx+0Ch]
.text$x:00001FA5                 mov     ecx, [edx-20h]
.text$x:00001FA8                 xor     ecx, eax
.text$x:00001FAA                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001FAF                 mov     eax, offset __ehfuncinfo$?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.text$x:00001FB4                 jmp     ___CxxFrameHandler3
.text$x:00001FB4 __ehhandler$?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z endp
.text$x:00001FB4
.text$x:00001FB9
.text$x:00001FB9 ; =============== S U B R O U T I N E =======================================
.text$x:00001FB9
.text$x:00001FB9
.text$x:00001FB9 __unwindfunclet$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0 proc near
.text$x:00001FB9                                         ; DATA XREF: .xdata$x:000022D8o
.text$x:00001FB9                 lea     ecx, [ebp-344h] ; this
.text$x:00001FBF                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00001FBF __unwindfunclet$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0 endp
.text$x:00001FBF
.text$x:00001FC4
.text$x:00001FC4 ; =============== S U B R O U T I N E =======================================
.text$x:00001FC4
.text$x:00001FC4
.text$x:00001FC4 __unwindfunclet$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1 proc near
.text$x:00001FC4                                         ; DATA XREF: .xdata$x:000022E0o
.text$x:00001FC4                 lea     ecx, [ebp-350h] ; this
.text$x:00001FCA                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:00001FCA __unwindfunclet$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1 endp
.text$x:00001FCA
.text$x:00001FCF
.text$x:00001FCF ; =============== S U B R O U T I N E =======================================
.text$x:00001FCF
.text$x:00001FCF
.text$x:00001FCF __ehhandler$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z proc near
.text$x:00001FCF                                         ; DATA XREF: NWindows::NFile::NDir::GetCurrentDir(UString &)+5o
.text$x:00001FCF
.text$x:00001FCF arg_4           = dword ptr  8
.text$x:00001FCF
.text$x:00001FCF                 mov     edx, [esp+arg_4]
.text$x:00001FD3                 lea     eax, [edx+0Ch]
.text$x:00001FD6                 mov     ecx, [edx-35Ch]
.text$x:00001FDC                 xor     ecx, eax
.text$x:00001FDE                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001FE3                 mov     ecx, [edx-4]
.text$x:00001FE6                 xor     ecx, eax
.text$x:00001FE8                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00001FED                 mov     eax, offset __ehfuncinfo$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text$x:00001FF2                 jmp     ___CxxFrameHandler3
.text$x:00001FF2 __ehhandler$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z endp
.text$x:00001FF2
.text$x:00001FF7
.text$x:00001FF7 ; =============== S U B R O U T I N E =======================================
.text$x:00001FF7
.text$x:00001FF7
.text$x:00001FF7 __unwindfunclet$?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z$0 proc near
.text$x:00001FF7                                         ; DATA XREF: .xdata$x:0000230Co
.text$x:00001FF7                 lea     ecx, [ebp-1Ch]  ; this
.text$x:00001FFA                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:00001FFA __unwindfunclet$?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z$0 endp
.text$x:00001FFA
.text$x:00001FFF
.text$x:00001FFF ; =============== S U B R O U T I N E =======================================
.text$x:00001FFF
.text$x:00001FFF
.text$x:00001FFF __ehhandler$?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z proc near
.text$x:00001FFF                                         ; DATA XREF: NWindows::NFile::NDir::GetOnlyDirPrefix(wchar_t const *,UString &)+5o
.text$x:00001FFF
.text$x:00001FFF arg_4           = dword ptr  8
.text$x:00001FFF
.text$x:00001FFF                 mov     edx, [esp+arg_4]
.text$x:00002003                 lea     eax, [edx+0Ch]
.text$x:00002006                 mov     ecx, [edx-1Ch]
.text$x:00002009                 xor     ecx, eax
.text$x:0000200B                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00002010                 mov     eax, offset __ehfuncinfo$?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z
.text$x:00002015                 jmp     ___CxxFrameHandler3
.text$x:00002015 __ehhandler$?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z endp
.text$x:00002015
.text$x:0000201A
.text$x:0000201A ; =============== S U B R O U T I N E =======================================
.text$x:0000201A
.text$x:0000201A
.text$x:0000201A __unwindfunclet$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0 proc near
.text$x:0000201A                                         ; DATA XREF: .xdata$x:00002338o
.text$x:0000201A                 lea     ecx, [ebp-344h] ; this
.text$x:00002020                 jmp     ??1AString@@QAE@XZ ; AString::~AString(void)
.text$x:00002020 __unwindfunclet$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0 endp
.text$x:00002020
.text$x:00002025
.text$x:00002025 ; =============== S U B R O U T I N E =======================================
.text$x:00002025
.text$x:00002025
.text$x:00002025 __unwindfunclet$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1 proc near
.text$x:00002025                                         ; DATA XREF: .xdata$x:00002340o
.text$x:00002025                 lea     ecx, [ebp-350h] ; this
.text$x:0000202B                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:0000202B __unwindfunclet$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1 endp
.text$x:0000202B
.text$x:00002030
.text$x:00002030 ; =============== S U B R O U T I N E =======================================
.text$x:00002030
.text$x:00002030
.text$x:00002030 __ehhandler$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z proc near
.text$x:00002030                                         ; DATA XREF: NWindows::NFile::NDir::MyGetTempPath(UString &)+5o
.text$x:00002030
.text$x:00002030 arg_4           = dword ptr  8
.text$x:00002030
.text$x:00002030                 mov     edx, [esp+arg_4]
.text$x:00002034                 lea     eax, [edx+0Ch]
.text$x:00002037                 mov     ecx, [edx-35Ch]
.text$x:0000203D                 xor     ecx, eax
.text$x:0000203F                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00002044                 mov     ecx, [edx-4]
.text$x:00002047                 xor     ecx, eax
.text$x:00002049                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:0000204E                 mov     eax, offset __ehfuncinfo$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.text$x:00002053                 jmp     ___CxxFrameHandler3
.text$x:00002053 __ehhandler$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z endp
.text$x:00002053
.text$x:00002058
.text$x:00002058 ; =============== S U B R O U T I N E =======================================
.text$x:00002058
.text$x:00002058
.text$x:00002058 __unwindfunclet$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z$0 proc near
.text$x:00002058                                         ; DATA XREF: .xdata$x:0000236Co
.text$x:00002058                 lea     ecx, [ebp-20h]  ; this
.text$x:0000205B                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:0000205B __unwindfunclet$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z$0 endp
.text$x:0000205B
.text$x:00002060
.text$x:00002060 ; =============== S U B R O U T I N E =======================================
.text$x:00002060
.text$x:00002060
.text$x:00002060 __unwindfunclet$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z$1 proc near
.text$x:00002060                                         ; DATA XREF: .xdata$x:00002374o
.text$x:00002060                 lea     ecx, [ebp-34h]  ; this
.text$x:00002063                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:00002063 __unwindfunclet$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z$1 endp
.text$x:00002063
.text$x:00002068
.text$x:00002068 ; =============== S U B R O U T I N E =======================================
.text$x:00002068
.text$x:00002068
.text$x:00002068 __ehhandler$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z proc near
.text$x:00002068                                         ; DATA XREF: NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+5o
.text$x:00002068
.text$x:00002068 arg_4           = dword ptr  8
.text$x:00002068
.text$x:00002068                 mov     edx, [esp+arg_4]
.text$x:0000206C                 lea     eax, [edx+0Ch]
.text$x:0000206F                 mov     ecx, [edx-3Ch]
.text$x:00002072                 xor     ecx, eax
.text$x:00002074                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00002079                 mov     eax, offset __ehfuncinfo$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z
.text$x:0000207E                 jmp     ___CxxFrameHandler3
.text$x:0000207E __ehhandler$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z endp
.text$x:0000207E
.text$x:00002083
.text$x:00002083 ; =============== S U B R O U T I N E =======================================
.text$x:00002083
.text$x:00002083
.text$x:00002083 __unwindfunclet$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z$0 proc near
.text$x:00002083                                         ; DATA XREF: .xdata$x:000023A0o
.text$x:00002083                 lea     ecx, [ebp-20h]  ; this
.text$x:00002086                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:00002086 __unwindfunclet$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z$0 endp
.text$x:00002086
.text$x:0000208B
.text$x:0000208B ; =============== S U B R O U T I N E =======================================
.text$x:0000208B
.text$x:0000208B
.text$x:0000208B __unwindfunclet$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z$1 proc near
.text$x:0000208B                                         ; DATA XREF: .xdata$x:000023A8o
.text$x:0000208B                 lea     ecx, [ebp-34h]  ; this
.text$x:0000208E                 jmp     ??1UString@@QAE@XZ ; UString::~UString(void)
.text$x:0000208E __unwindfunclet$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z$1 endp
.text$x:0000208E
.text$x:00002093
.text$x:00002093 ; =============== S U B R O U T I N E =======================================
.text$x:00002093
.text$x:00002093
.text$x:00002093 __ehhandler$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z proc near
.text$x:00002093                                         ; DATA XREF: NWindows::NFile::NDir::CTempDir::Create(wchar_t const *)+5o
.text$x:00002093
.text$x:00002093 arg_4           = dword ptr  8
.text$x:00002093
.text$x:00002093                 mov     edx, [esp+arg_4]
.text$x:00002097                 lea     eax, [edx+0Ch]
.text$x:0000209A                 mov     ecx, [edx-3Ch]
.text$x:0000209D                 xor     ecx, eax
.text$x:0000209F                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:000020A4                 mov     eax, offset __ehfuncinfo$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z
.text$x:000020A9                 jmp     ___CxxFrameHandler3
.text$x:000020A9 __ehhandler$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z endp
.text$x:000020A9
.text$x:000020A9 ; ---------------------------------------------------------------------------
.text$x:000020AE                 align 10h
.text$x:000020AE _text$x         ends
.text$x:000020AE
.xdata$x:000020B0 ; ===========================================================================
.xdata$x:000020B0
.xdata$x:000020B0 ; Segment type: Pure data
.xdata$x:000020B0 ; Segment permissions: Read
.xdata$x:000020B0 _xdata$x        segment dword public 'DATA' use32
.xdata$x:000020B0                 assume cs:_xdata$x
.xdata$x:000020B0                 ;org 20B0h
.xdata$x:000020B0 __unwindtable$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z db 0FFh
.xdata$x:000020B0                                         ; DATA XREF: .xdata$x:000020C8o
.xdata$x:000020B1                 db 0FFh
.xdata$x:000020B2                 db 0FFh
.xdata$x:000020B3                 db 0FFh
.xdata$x:000020B4                 dd offset __unwindfunclet$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0
.xdata$x:000020B8                 db    0
.xdata$x:000020B9                 db    0
.xdata$x:000020BA                 db    0
.xdata$x:000020BB                 db    0
.xdata$x:000020BC                 dd offset __unwindfunclet$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1
.xdata$x:000020C0 __ehfuncinfo$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z db  22h ; "
.xdata$x:000020C0                                         ; DATA XREF: __ehhandler$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z+1Eo
.xdata$x:000020C1                 db    5
.xdata$x:000020C2                 db  93h ; ô
.xdata$x:000020C3                 db  19h
.xdata$x:000020C4                 db    2
.xdata$x:000020C5                 db    0
.xdata$x:000020C6                 db    0
.xdata$x:000020C7                 db    0
.xdata$x:000020C8                 dd offset __unwindtable$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.xdata$x:000020CC                 align 20h
.xdata$x:000020E0                 db    1
.xdata$x:000020E1                 db    0
.xdata$x:000020E2                 db    0
.xdata$x:000020E3                 db    0
.xdata$x:000020E4 __unwindtable$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z db 0FFh
.xdata$x:000020E4                                         ; DATA XREF: .xdata$x:000020FCo
.xdata$x:000020E5                 db 0FFh
.xdata$x:000020E6                 db 0FFh
.xdata$x:000020E7                 db 0FFh
.xdata$x:000020E8                 dd offset __unwindfunclet$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0
.xdata$x:000020EC                 align 10h
.xdata$x:000020F0                 dd offset __unwindfunclet$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1
.xdata$x:000020F4 __ehfuncinfo$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z db  22h ; "
.xdata$x:000020F4                                         ; DATA XREF: __ehhandler$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z+1Eo
.xdata$x:000020F5                 db    5
.xdata$x:000020F6                 db  93h ; ô
.xdata$x:000020F7                 db  19h
.xdata$x:000020F8                 db    2
.xdata$x:000020F9                 db    0
.xdata$x:000020FA                 db    0
.xdata$x:000020FB                 db    0
.xdata$x:000020FC                 dd offset __unwindtable$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.xdata$x:00002100                 db    0
.xdata$x:00002101                 db    0
.xdata$x:00002102                 db    0
.xdata$x:00002103                 db    0
.xdata$x:00002104                 db    0
.xdata$x:00002105                 db    0
.xdata$x:00002106                 db    0
.xdata$x:00002107                 db    0
.xdata$x:00002108                 db    0
.xdata$x:00002109                 db    0
.xdata$x:0000210A                 db    0
.xdata$x:0000210B                 db    0
.xdata$x:0000210C                 db    0
.xdata$x:0000210D                 db    0
.xdata$x:0000210E                 db    0
.xdata$x:0000210F                 db    0
.xdata$x:00002110                 db    0
.xdata$x:00002111                 db    0
.xdata$x:00002112                 db    0
.xdata$x:00002113                 db    0
.xdata$x:00002114                 db    1
.xdata$x:00002115                 db    0
.xdata$x:00002116                 db    0
.xdata$x:00002117                 db    0
.xdata$x:00002118 __unwindtable$?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z db 0FFh
.xdata$x:00002118                                         ; DATA XREF: .xdata$x:00002128o
.xdata$x:00002119                 db 0FFh
.xdata$x:0000211A                 db 0FFh
.xdata$x:0000211B                 db 0FFh
.xdata$x:0000211C                 dd offset __unwindfunclet$?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z$0
.xdata$x:00002120 __ehfuncinfo$?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z db  22h ; "
.xdata$x:00002120                                         ; DATA XREF: __ehhandler$?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z+11o
.xdata$x:00002121                 db    5
.xdata$x:00002122                 db  93h ; ô
.xdata$x:00002123                 db  19h
.xdata$x:00002124                 db    1
.xdata$x:00002125                 db    0
.xdata$x:00002126                 db    0
.xdata$x:00002127                 db    0
.xdata$x:00002128                 dd offset __unwindtable$?SetFileAttrib@NDir@NFile@NWindows@@YG_NPB_WK@Z
.xdata$x:0000212C                 align 20h
.xdata$x:00002140                 db    1
.xdata$x:00002141                 db    0
.xdata$x:00002142                 db    0
.xdata$x:00002143                 db    0
.xdata$x:00002144 __unwindtable$?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z db 0FFh
.xdata$x:00002144                                         ; DATA XREF: .xdata$x:00002154o
.xdata$x:00002145                 db 0FFh
.xdata$x:00002146                 db 0FFh
.xdata$x:00002147                 db 0FFh
.xdata$x:00002148                 dd offset __unwindfunclet$?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0
.xdata$x:0000214C __ehfuncinfo$?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z db  22h ; "
.xdata$x:0000214C                                         ; DATA XREF: __ehhandler$?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z+11o
.xdata$x:0000214D                 db    5
.xdata$x:0000214E                 db  93h ; ô
.xdata$x:0000214F                 db  19h
.xdata$x:00002150                 db    1
.xdata$x:00002151                 db    0
.xdata$x:00002152                 db    0
.xdata$x:00002153                 db    0
.xdata$x:00002154                 dd offset __unwindtable$?RemoveDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.xdata$x:00002158                 db    0
.xdata$x:00002159                 db    0
.xdata$x:0000215A                 db    0
.xdata$x:0000215B                 db    0
.xdata$x:0000215C                 db    0
.xdata$x:0000215D                 db    0
.xdata$x:0000215E                 db    0
.xdata$x:0000215F                 db    0
.xdata$x:00002160                 db    0
.xdata$x:00002161                 db    0
.xdata$x:00002162                 db    0
.xdata$x:00002163                 db    0
.xdata$x:00002164                 db    0
.xdata$x:00002165                 db    0
.xdata$x:00002166                 db    0
.xdata$x:00002167                 db    0
.xdata$x:00002168                 db    0
.xdata$x:00002169                 db    0
.xdata$x:0000216A                 db    0
.xdata$x:0000216B                 db    0
.xdata$x:0000216C                 db    1
.xdata$x:0000216D                 db    0
.xdata$x:0000216E                 db    0
.xdata$x:0000216F                 db    0
.xdata$x:00002170 __unwindtable$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z db 0FFh
.xdata$x:00002170                                         ; DATA XREF: .xdata$x:00002188o
.xdata$x:00002171                 db 0FFh
.xdata$x:00002172                 db 0FFh
.xdata$x:00002173                 db 0FFh
.xdata$x:00002174                 dd offset __unwindfunclet$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z$0
.xdata$x:00002178                 db    0
.xdata$x:00002179                 db    0
.xdata$x:0000217A                 db    0
.xdata$x:0000217B                 db    0
.xdata$x:0000217C                 dd offset __unwindfunclet$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z$1
.xdata$x:00002180 __ehfuncinfo$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z db  22h ; "
.xdata$x:00002180                                         ; DATA XREF: __ehhandler$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z+11o
.xdata$x:00002181                 db    5
.xdata$x:00002182                 db  93h ; ô
.xdata$x:00002183                 db  19h
.xdata$x:00002184                 db    2
.xdata$x:00002185                 db    0
.xdata$x:00002186                 db    0
.xdata$x:00002187                 db    0
.xdata$x:00002188                 dd offset __unwindtable$?MyMoveFile@NDir@NFile@NWindows@@YG_NPB_W0@Z
.xdata$x:0000218C                 align 20h
.xdata$x:000021A0                 db    1
.xdata$x:000021A1                 db    0
.xdata$x:000021A2                 db    0
.xdata$x:000021A3                 db    0
.xdata$x:000021A4 __unwindtable$?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z db 0FFh
.xdata$x:000021A4                                         ; DATA XREF: .xdata$x:000021B4o
.xdata$x:000021A5                 db 0FFh
.xdata$x:000021A6                 db 0FFh
.xdata$x:000021A7                 db 0FFh
.xdata$x:000021A8                 dd offset __unwindfunclet$?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0
.xdata$x:000021AC __ehfuncinfo$?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z db  22h ; "
.xdata$x:000021AC                                         ; DATA XREF: __ehhandler$?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z+11o
.xdata$x:000021AD                 db    5
.xdata$x:000021AE                 db  93h ; ô
.xdata$x:000021AF                 db  19h
.xdata$x:000021B0                 db    1
.xdata$x:000021B1                 db    0
.xdata$x:000021B2                 db    0
.xdata$x:000021B3                 db    0
.xdata$x:000021B4                 dd offset __unwindtable$?CreateDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.xdata$x:000021B8                 db    0
.xdata$x:000021B9                 db    0
.xdata$x:000021BA                 db    0
.xdata$x:000021BB                 db    0
.xdata$x:000021BC                 db    0
.xdata$x:000021BD                 db    0
.xdata$x:000021BE                 db    0
.xdata$x:000021BF                 db    0
.xdata$x:000021C0                 db    0
.xdata$x:000021C1                 db    0
.xdata$x:000021C2                 db    0
.xdata$x:000021C3                 db    0
.xdata$x:000021C4                 db    0
.xdata$x:000021C5                 db    0
.xdata$x:000021C6                 db    0
.xdata$x:000021C7                 db    0
.xdata$x:000021C8                 db    0
.xdata$x:000021C9                 db    0
.xdata$x:000021CA                 db    0
.xdata$x:000021CB                 db    0
.xdata$x:000021CC                 db    1
.xdata$x:000021CD                 db    0
.xdata$x:000021CE                 db    0
.xdata$x:000021CF                 db    0
.xdata$x:000021D0 __unwindtable$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z db 0FFh
.xdata$x:000021D0                                         ; DATA XREF: .xdata$x:000021E8o
.xdata$x:000021D1                 db 0FFh
.xdata$x:000021D2                 db 0FFh
.xdata$x:000021D3                 db 0FFh
.xdata$x:000021D4                 dd offset __unwindfunclet$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0
.xdata$x:000021D8                 db    0
.xdata$x:000021D9                 db    0
.xdata$x:000021DA                 db    0
.xdata$x:000021DB                 db    0
.xdata$x:000021DC                 dd offset __unwindfunclet$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z$1
.xdata$x:000021E0 __ehfuncinfo$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z db  22h ; "
.xdata$x:000021E0                                         ; DATA XREF: __ehhandler$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z+11o
.xdata$x:000021E1                 db    5
.xdata$x:000021E2                 db  93h ; ô
.xdata$x:000021E3                 db  19h
.xdata$x:000021E4                 db    2
.xdata$x:000021E5                 db    0
.xdata$x:000021E6                 db    0
.xdata$x:000021E7                 db    0
.xdata$x:000021E8                 dd offset __unwindtable$?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.xdata$x:000021EC                 align 20h
.xdata$x:00002200                 db    1
.xdata$x:00002201                 db    0
.xdata$x:00002202                 db    0
.xdata$x:00002203                 db    0
.xdata$x:00002204 __unwindtable$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z db 0FFh
.xdata$x:00002204                                         ; DATA XREF: .xdata$x:0000221Co
.xdata$x:00002205                 db 0FFh
.xdata$x:00002206                 db 0FFh
.xdata$x:00002207                 db 0FFh
.xdata$x:00002208                 dd offset __unwindfunclet$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z$0
.xdata$x:0000220C                 db 0FFh
.xdata$x:0000220D                 db 0FFh
.xdata$x:0000220E                 db 0FFh
.xdata$x:0000220F                 db 0FFh
.xdata$x:00002210                 dd offset __unwindfunclet$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z$1
.xdata$x:00002214 __ehfuncinfo$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z db  22h ; "
.xdata$x:00002214                                         ; DATA XREF: __ehhandler$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z+11o
.xdata$x:00002215                 db    5
.xdata$x:00002216                 db  93h ; ô
.xdata$x:00002217                 db  19h
.xdata$x:00002218                 db    2
.xdata$x:00002219                 db    0
.xdata$x:0000221A                 db    0
.xdata$x:0000221B                 db    0
.xdata$x:0000221C                 dd offset __unwindtable$?CreateDir2@NDir@NFile@NWindows@@YG_NPB_W@Z
.xdata$x:00002220                 db    0
.xdata$x:00002221                 db    0
.xdata$x:00002222                 db    0
.xdata$x:00002223                 db    0
.xdata$x:00002224                 db    0
.xdata$x:00002225                 db    0
.xdata$x:00002226                 db    0
.xdata$x:00002227                 db    0
.xdata$x:00002228                 db    0
.xdata$x:00002229                 db    0
.xdata$x:0000222A                 db    0
.xdata$x:0000222B                 db    0
.xdata$x:0000222C                 db    0
.xdata$x:0000222D                 db    0
.xdata$x:0000222E                 db    0
.xdata$x:0000222F                 db    0
.xdata$x:00002230                 db    0
.xdata$x:00002231                 db    0
.xdata$x:00002232                 db    0
.xdata$x:00002233                 db    0
.xdata$x:00002234                 db    1
.xdata$x:00002235                 db    0
.xdata$x:00002236                 db    0
.xdata$x:00002237                 db    0
.xdata$x:00002238 __unwindtable$?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z db 0FFh
.xdata$x:00002238                                         ; DATA XREF: .xdata$x:00002248o
.xdata$x:00002239                 db 0FFh
.xdata$x:0000223A                 db 0FFh
.xdata$x:0000223B                 db 0FFh
.xdata$x:0000223C                 dd offset __unwindfunclet$?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z$0
.xdata$x:00002240 __ehfuncinfo$?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z db  22h ; "
.xdata$x:00002240                                         ; DATA XREF: __ehhandler$?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z+11o
.xdata$x:00002241                 db    5
.xdata$x:00002242                 db  93h ; ô
.xdata$x:00002243                 db  19h
.xdata$x:00002244                 db    1
.xdata$x:00002245                 db    0
.xdata$x:00002246                 db    0
.xdata$x:00002247                 db    0
.xdata$x:00002248                 dd offset __unwindtable$?DeleteFileAlways@NDir@NFile@NWindows@@YG_NPB_W@Z
.xdata$x:0000224C                 align 20h
.xdata$x:00002260                 db    1
.xdata$x:00002261                 db    0
.xdata$x:00002262                 db    0
.xdata$x:00002263                 db    0
.xdata$x:00002264 __unwindtable$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z db 0FFh
.xdata$x:00002264                                         ; DATA XREF: .xdata$x:0000228Co
.xdata$x:00002265                 db 0FFh
.xdata$x:00002266                 db 0FFh
.xdata$x:00002267                 db 0FFh
.xdata$x:00002268                 dd offset __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$0
.xdata$x:0000226C                 db 0FFh
.xdata$x:0000226D                 db 0FFh
.xdata$x:0000226E                 db 0FFh
.xdata$x:0000226F                 db 0FFh
.xdata$x:00002270                 dd offset __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$1
.xdata$x:00002274                 db    1
.xdata$x:00002275                 db    0
.xdata$x:00002276                 db    0
.xdata$x:00002277                 db    0
.xdata$x:00002278                 dd offset __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$2
.xdata$x:0000227C                 db    2
.xdata$x:0000227D                 db    0
.xdata$x:0000227E                 db    0
.xdata$x:0000227F                 db    0
.xdata$x:00002280                 dd offset __unwindfunclet$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z$3
.xdata$x:00002284 __ehfuncinfo$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z db  22h ; "
.xdata$x:00002284                                         ; DATA XREF: __ehhandler$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z+14o
.xdata$x:00002285                 db    5
.xdata$x:00002286                 db  93h ; ô
.xdata$x:00002287                 db  19h
.xdata$x:00002288                 db    4
.xdata$x:00002289                 db    0
.xdata$x:0000228A                 db    0
.xdata$x:0000228B                 db    0
.xdata$x:0000228C                 dd offset __unwindtable$?RemoveDirWithSubItems@NDir@NFile@NWindows@@YG_NABVUString@@@Z
.xdata$x:00002290                 db    0
.xdata$x:00002291                 db    0
.xdata$x:00002292                 db    0
.xdata$x:00002293                 db    0
.xdata$x:00002294                 db    0
.xdata$x:00002295                 db    0
.xdata$x:00002296                 db    0
.xdata$x:00002297                 db    0
.xdata$x:00002298                 db    0
.xdata$x:00002299                 db    0
.xdata$x:0000229A                 db    0
.xdata$x:0000229B                 db    0
.xdata$x:0000229C                 db    0
.xdata$x:0000229D                 db    0
.xdata$x:0000229E                 db    0
.xdata$x:0000229F                 db    0
.xdata$x:000022A0                 db    0
.xdata$x:000022A1                 db    0
.xdata$x:000022A2                 db    0
.xdata$x:000022A3                 db    0
.xdata$x:000022A4                 db    1
.xdata$x:000022A5                 db    0
.xdata$x:000022A6                 db    0
.xdata$x:000022A7                 db    0
.xdata$x:000022A8 __unwindtable$?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z db 0FFh
.xdata$x:000022A8                                         ; DATA XREF: .xdata$x:000022B8o
.xdata$x:000022A9                 db 0FFh
.xdata$x:000022AA                 db 0FFh
.xdata$x:000022AB                 db 0FFh
.xdata$x:000022AC                 dd offset __unwindfunclet$?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z$0
.xdata$x:000022B0 __ehfuncinfo$?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z db  22h ; "
.xdata$x:000022B0                                         ; DATA XREF: __ehhandler$?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z+11o
.xdata$x:000022B1                 db    5
.xdata$x:000022B2                 db  93h ; ô
.xdata$x:000022B3                 db  19h
.xdata$x:000022B4                 db    1
.xdata$x:000022B5                 db    0
.xdata$x:000022B6                 db    0
.xdata$x:000022B7                 db    0
.xdata$x:000022B8                 dd offset __unwindtable$?SetCurrentDir@NDir@NFile@NWindows@@YG_NPB_W@Z
.xdata$x:000022BC                 db    0
.xdata$x:000022BD                 db    0
.xdata$x:000022BE                 db    0
.xdata$x:000022BF                 db    0
.xdata$x:000022C0                 db    0
.xdata$x:000022C1                 db    0
.xdata$x:000022C2                 db    0
.xdata$x:000022C3                 db    0
.xdata$x:000022C4                 db    0
.xdata$x:000022C5                 db    0
.xdata$x:000022C6                 db    0
.xdata$x:000022C7                 db    0
.xdata$x:000022C8                 db    0
.xdata$x:000022C9                 db    0
.xdata$x:000022CA                 db    0
.xdata$x:000022CB                 db    0
.xdata$x:000022CC                 db    0
.xdata$x:000022CD                 db    0
.xdata$x:000022CE                 db    0
.xdata$x:000022CF                 db    0
.xdata$x:000022D0                 db    1
.xdata$x:000022D1                 db    0
.xdata$x:000022D2                 db    0
.xdata$x:000022D3                 db    0
.xdata$x:000022D4 __unwindtable$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z db 0FFh
.xdata$x:000022D4                                         ; DATA XREF: .xdata$x:000022ECo
.xdata$x:000022D5                 db 0FFh
.xdata$x:000022D6                 db 0FFh
.xdata$x:000022D7                 db 0FFh
.xdata$x:000022D8                 dd offset __unwindfunclet$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0
.xdata$x:000022DC                 align 10h
.xdata$x:000022E0                 dd offset __unwindfunclet$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1
.xdata$x:000022E4 __ehfuncinfo$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z db  22h ; "
.xdata$x:000022E4                                         ; DATA XREF: __ehhandler$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z+1Eo
.xdata$x:000022E5                 db    5
.xdata$x:000022E6                 db  93h ; ô
.xdata$x:000022E7                 db  19h
.xdata$x:000022E8                 db    2
.xdata$x:000022E9                 db    0
.xdata$x:000022EA                 db    0
.xdata$x:000022EB                 db    0
.xdata$x:000022EC                 dd offset __unwindtable$?GetCurrentDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.xdata$x:000022F0                 db    0
.xdata$x:000022F1                 db    0
.xdata$x:000022F2                 db    0
.xdata$x:000022F3                 db    0
.xdata$x:000022F4                 db    0
.xdata$x:000022F5                 db    0
.xdata$x:000022F6                 db    0
.xdata$x:000022F7                 db    0
.xdata$x:000022F8                 db    0
.xdata$x:000022F9                 db    0
.xdata$x:000022FA                 db    0
.xdata$x:000022FB                 db    0
.xdata$x:000022FC                 db    0
.xdata$x:000022FD                 db    0
.xdata$x:000022FE                 db    0
.xdata$x:000022FF                 db    0
.xdata$x:00002300                 db    0
.xdata$x:00002301                 db    0
.xdata$x:00002302                 db    0
.xdata$x:00002303                 db    0
.xdata$x:00002304                 db    1
.xdata$x:00002305                 db    0
.xdata$x:00002306                 db    0
.xdata$x:00002307                 db    0
.xdata$x:00002308 __unwindtable$?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z db 0FFh
.xdata$x:00002308                                         ; DATA XREF: .xdata$x:00002318o
.xdata$x:00002309                 db 0FFh
.xdata$x:0000230A                 db 0FFh
.xdata$x:0000230B                 db 0FFh
.xdata$x:0000230C                 dd offset __unwindfunclet$?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z$0
.xdata$x:00002310 __ehfuncinfo$?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z db  22h ; "
.xdata$x:00002310                                         ; DATA XREF: __ehhandler$?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z+11o
.xdata$x:00002311                 db    5
.xdata$x:00002312                 db  93h ; ô
.xdata$x:00002313                 db  19h
.xdata$x:00002314                 db    1
.xdata$x:00002315                 db    0
.xdata$x:00002316                 db    0
.xdata$x:00002317                 db    0
.xdata$x:00002318                 dd offset __unwindtable$?GetOnlyDirPrefix@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z
.xdata$x:0000231C                 db    0
.xdata$x:0000231D                 db    0
.xdata$x:0000231E                 db    0
.xdata$x:0000231F                 db    0
.xdata$x:00002320                 db    0
.xdata$x:00002321                 db    0
.xdata$x:00002322                 db    0
.xdata$x:00002323                 db    0
.xdata$x:00002324                 db    0
.xdata$x:00002325                 db    0
.xdata$x:00002326                 db    0
.xdata$x:00002327                 db    0
.xdata$x:00002328                 db    0
.xdata$x:00002329                 db    0
.xdata$x:0000232A                 db    0
.xdata$x:0000232B                 db    0
.xdata$x:0000232C                 db    0
.xdata$x:0000232D                 db    0
.xdata$x:0000232E                 db    0
.xdata$x:0000232F                 db    0
.xdata$x:00002330                 db    1
.xdata$x:00002331                 db    0
.xdata$x:00002332                 db    0
.xdata$x:00002333                 db    0
.xdata$x:00002334 __unwindtable$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z db 0FFh
.xdata$x:00002334                                         ; DATA XREF: .xdata$x:0000234Co
.xdata$x:00002335                 db 0FFh
.xdata$x:00002336                 db 0FFh
.xdata$x:00002337                 db 0FFh
.xdata$x:00002338                 dd offset __unwindfunclet$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$0
.xdata$x:0000233C                 align 10h
.xdata$x:00002340                 dd offset __unwindfunclet$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z$1
.xdata$x:00002344 __ehfuncinfo$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z db  22h ; "
.xdata$x:00002344                                         ; DATA XREF: __ehhandler$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z+1Eo
.xdata$x:00002345                 db    5
.xdata$x:00002346                 db  93h ; ô
.xdata$x:00002347                 db  19h
.xdata$x:00002348                 db    2
.xdata$x:00002349                 db    0
.xdata$x:0000234A                 db    0
.xdata$x:0000234B                 db    0
.xdata$x:0000234C                 dd offset __unwindtable$?MyGetTempPath@NDir@NFile@NWindows@@YG_NAAVUString@@@Z
.xdata$x:00002350                 db    0
.xdata$x:00002351                 db    0
.xdata$x:00002352                 db    0
.xdata$x:00002353                 db    0
.xdata$x:00002354                 db    0
.xdata$x:00002355                 db    0
.xdata$x:00002356                 db    0
.xdata$x:00002357                 db    0
.xdata$x:00002358                 db    0
.xdata$x:00002359                 db    0
.xdata$x:0000235A                 db    0
.xdata$x:0000235B                 db    0
.xdata$x:0000235C                 db    0
.xdata$x:0000235D                 db    0
.xdata$x:0000235E                 db    0
.xdata$x:0000235F                 db    0
.xdata$x:00002360                 db    0
.xdata$x:00002361                 db    0
.xdata$x:00002362                 db    0
.xdata$x:00002363                 db    0
.xdata$x:00002364                 db    1
.xdata$x:00002365                 db    0
.xdata$x:00002366                 db    0
.xdata$x:00002367                 db    0
.xdata$x:00002368 __unwindtable$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z db 0FFh
.xdata$x:00002368                                         ; DATA XREF: .xdata$x:00002380o
.xdata$x:00002369                 db 0FFh
.xdata$x:0000236A                 db 0FFh
.xdata$x:0000236B                 db 0FFh
.xdata$x:0000236C                 dd offset __unwindfunclet$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z$0
.xdata$x:00002370                 db    0
.xdata$x:00002371                 db    0
.xdata$x:00002372                 db    0
.xdata$x:00002373                 db    0
.xdata$x:00002374                 dd offset __unwindfunclet$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z$1
.xdata$x:00002378 __ehfuncinfo$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z db  22h ; "
.xdata$x:00002378                                         ; DATA XREF: __ehhandler$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z+11o
.xdata$x:00002379                 db    5
.xdata$x:0000237A                 db  93h ; ô
.xdata$x:0000237B                 db  19h
.xdata$x:0000237C                 db    2
.xdata$x:0000237D                 db    0
.xdata$x:0000237E                 db    0
.xdata$x:0000237F                 db    0
.xdata$x:00002380                 dd offset __unwindtable$?CreateRandomInTempFolder@CTempFile@NDir@NFile@NWindows@@QAE_NPB_WPAVCOutFile@NIO@34@@Z
.xdata$x:00002384                 db    0
.xdata$x:00002385                 db    0
.xdata$x:00002386                 db    0
.xdata$x:00002387                 db    0
.xdata$x:00002388                 db    0
.xdata$x:00002389                 db    0
.xdata$x:0000238A                 db    0
.xdata$x:0000238B                 db    0
.xdata$x:0000238C                 db    0
.xdata$x:0000238D                 db    0
.xdata$x:0000238E                 db    0
.xdata$x:0000238F                 db    0
.xdata$x:00002390                 db    0
.xdata$x:00002391                 db    0
.xdata$x:00002392                 db    0
.xdata$x:00002393                 db    0
.xdata$x:00002394                 db    0
.xdata$x:00002395                 db    0
.xdata$x:00002396                 db    0
.xdata$x:00002397                 db    0
.xdata$x:00002398                 db    1
.xdata$x:00002399                 db    0
.xdata$x:0000239A                 db    0
.xdata$x:0000239B                 db    0
.xdata$x:0000239C __unwindtable$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z db 0FFh
.xdata$x:0000239C                                         ; DATA XREF: .xdata$x:000023B4o
.xdata$x:0000239D                 db 0FFh
.xdata$x:0000239E                 db 0FFh
.xdata$x:0000239F                 db 0FFh
.xdata$x:000023A0                 dd offset __unwindfunclet$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z$0
.xdata$x:000023A4                 align 8
.xdata$x:000023A8                 dd offset __unwindfunclet$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z$1
.xdata$x:000023AC __ehfuncinfo$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z db  22h ; "
.xdata$x:000023AC                                         ; DATA XREF: __ehhandler$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z+11o
.xdata$x:000023AD                 db    5
.xdata$x:000023AE                 db  93h ; ô
.xdata$x:000023AF                 db  19h
.xdata$x:000023B0                 db    2
.xdata$x:000023B1                 db    0
.xdata$x:000023B2                 db    0
.xdata$x:000023B3                 db    0
.xdata$x:000023B4                 dd offset __unwindtable$?Create@CTempDir@NDir@NFile@NWindows@@QAE_NPB_W@Z
.xdata$x:000023B8                 db    0
.xdata$x:000023B9                 db    0
.xdata$x:000023BA                 db    0
.xdata$x:000023BB                 db    0
.xdata$x:000023BC                 db    0
.xdata$x:000023BD                 db    0
.xdata$x:000023BE                 db    0
.xdata$x:000023BF                 db    0
.xdata$x:000023C0                 db    0
.xdata$x:000023C1                 db    0
.xdata$x:000023C2                 db    0
.xdata$x:000023C3                 db    0
.xdata$x:000023C4                 db    0
.xdata$x:000023C5                 db    0
.xdata$x:000023C6                 db    0
.xdata$x:000023C7                 db    0
.xdata$x:000023C8                 db    0
.xdata$x:000023C9                 db    0
.xdata$x:000023CA                 db    0
.xdata$x:000023CB                 db    0
.xdata$x:000023CC                 db    1
.xdata$x:000023CD                 db    0
.xdata$x:000023CE                 db    0
.xdata$x:000023CF                 db    0
.xdata$x:000023CF _xdata$x        ends
.xdata$x:000023CF
.rtc$TMZ:000023D0 ; ===========================================================================
.rtc$TMZ:000023D0
.rtc$TMZ:000023D0 ; Segment type: Pure data
.rtc$TMZ:000023D0 ; Segment permissions: Read
.rtc$TMZ:000023D0 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:000023D0                 assume cs:_rtc$TMZ
.rtc$TMZ:000023D0                 ;org 23D0h
.rtc$TMZ:000023D0 ; COMDAT (pick any)
.rtc$TMZ:000023D0 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:000023D0 _rtc$TMZ        ends
.rtc$TMZ:000023D0
.rtc$IMZ:000023D4 ; ===========================================================================
.rtc$IMZ:000023D4
.rtc$IMZ:000023D4 ; Segment type: Pure data
.rtc$IMZ:000023D4 ; Segment permissions: Read
.rtc$IMZ:000023D4 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:000023D4                 assume cs:_rtc$IMZ
.rtc$IMZ:000023D4                 ;org 23D4h
.rtc$IMZ:000023D4 ; COMDAT (pick any)
.rtc$IMZ:000023D4 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:000023D4 _rtc$IMZ        ends
.rtc$IMZ:000023D4
.text:000023D8 ; ===========================================================================
.text:000023D8
.text:000023D8 ; Segment type: Pure code
.text:000023D8 ; Segment permissions: Read/Execute
.text:000023D8 _text           segment para public 'CODE' use32
.text:000023D8                 assume cs:_text
.text:000023D8                 ;org 23D8h
.text:000023D8 ; COMDAT (pick any)
.text:000023D8                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:000023D8
.text:000023D8 ; =============== S U B R O U T I N E =======================================
.text:000023D8
.text:000023D8 ; Attributes: bp-based frame
.text:000023D8
.text:000023D8 ; _DWORD __thiscall AString::~AString(AString *__hidden this)
.text:000023D8                 public ??1AString@@QAE@XZ
.text:000023D8 ??1AString@@QAE@XZ proc near            ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+E0p
.text:000023D8                                         ; NWindows::NFile::NDir::GetSystemDir(UString &)+E0p ...
.text:000023D8
.text:000023D8 var_8           = dword ptr -8
.text:000023D8 var_4           = dword ptr -4
.text:000023D8
.text:000023D8                 push    ebp
.text:000023D9                 mov     ebp, esp
.text:000023DB                 sub     esp, 8
.text:000023DE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000023E5                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000023EC                 mov     [ebp+var_4], ecx
.text:000023EF                 mov     eax, [ebp+var_4]
.text:000023F2                 mov     ecx, [eax]
.text:000023F4                 mov     [ebp+var_8], ecx
.text:000023F7                 mov     edx, [ebp+var_8]
.text:000023FA                 push    edx             ; void *
.text:000023FB                 call    ??3@YAXPAX@Z    ; operator delete(void *)
.text:00002400                 add     esp, 4
.text:00002403                 add     esp, 8
.text:00002406                 cmp     ebp, esp
.text:00002408                 call    __RTC_CheckEsp
.text:0000240D                 mov     esp, ebp
.text:0000240F                 pop     ebp
.text:00002410                 retn
.text:00002410 ??1AString@@QAE@XZ endp
.text:00002410
.text:00002410 ; ---------------------------------------------------------------------------
.text:00002411                 align 4
.text:00002411 _text           ends
.text:00002411
.text:00002414 ; ===========================================================================
.text:00002414
.text:00002414 ; Segment type: Pure code
.text:00002414 ; Segment permissions: Read/Execute
.text:00002414 _text           segment para public 'CODE' use32
.text:00002414                 assume cs:_text
.text:00002414                 ;org 2414h
.text:00002414 ; COMDAT (pick any)
.text:00002414                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002414
.text:00002414 ; =============== S U B R O U T I N E =======================================
.text:00002414
.text:00002414 ; Attributes: bp-based frame
.text:00002414
.text:00002414 ; _DWORD __thiscall UString::~UString(UString *__hidden this)
.text:00002414                 public ??1UString@@QAE@XZ
.text:00002414 ??1UString@@QAE@XZ proc near            ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+CEp
.text:00002414                                         ; NWindows::NFile::NDir::GetSystemDir(UString &)+CEp ...
.text:00002414
.text:00002414 var_8           = dword ptr -8
.text:00002414 var_4           = dword ptr -4
.text:00002414
.text:00002414                 push    ebp
.text:00002415                 mov     ebp, esp
.text:00002417                 sub     esp, 8
.text:0000241A                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00002421                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00002428                 mov     [ebp+var_4], ecx
.text:0000242B                 mov     eax, [ebp+var_4]
.text:0000242E                 mov     ecx, [eax]
.text:00002430                 mov     [ebp+var_8], ecx
.text:00002433                 mov     edx, [ebp+var_8]
.text:00002436                 push    edx             ; void *
.text:00002437                 call    ??3@YAXPAX@Z    ; operator delete(void *)
.text:0000243C                 add     esp, 4
.text:0000243F                 add     esp, 8
.text:00002442                 cmp     ebp, esp
.text:00002444                 call    __RTC_CheckEsp
.text:00002449                 mov     esp, ebp
.text:0000244B                 pop     ebp
.text:0000244C                 retn
.text:0000244C ??1UString@@QAE@XZ endp
.text:0000244C
.text:0000244C ; ---------------------------------------------------------------------------
.text:0000244D                 align 10h
.text:0000244D _text           ends
.text:0000244D
.text:00002450 ; ===========================================================================
.text:00002450
.text:00002450 ; Segment type: Pure code
.text:00002450 ; Segment permissions: Read/Execute
.text:00002450 _text           segment para public 'CODE' use32
.text:00002450                 assume cs:_text
.text:00002450                 ;org 2450h
.text:00002450 ; COMDAT (pick any)
.text:00002450                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002450
.text:00002450 ; =============== S U B R O U T I N E =======================================
.text:00002450
.text:00002450 ; Attributes: bp-based frame
.text:00002450
.text:00002450 ; bool __stdcall BOOLToBool(int)
.text:00002450                 public ?BOOLToBool@@YG_NH@Z
.text:00002450 ?BOOLToBool@@YG_NH@Z proc near          ; CODE XREF: NWindows::NFile::NDir::SetDirTime(wchar_t const *,_FILETIME const *,_FILETIME const *,_FILETIME const *)+8Ep
.text:00002450                                         ; NWindows::NFile::NDir::SetCurrentDir(wchar_t const *)+7Ep ...
.text:00002450
.text:00002450 arg_0           = dword ptr  8
.text:00002450
.text:00002450                 push    ebp
.text:00002451                 mov     ebp, esp
.text:00002453                 xor     eax, eax
.text:00002455                 cmp     [ebp+arg_0], 0
.text:00002459                 setnz   al
.text:0000245C                 pop     ebp
.text:0000245D                 retn    4
.text:0000245D ?BOOLToBool@@YG_NH@Z endp
.text:0000245D
.text:0000245D _text           ends
.text:0000245D
.text:00002460 ; ===========================================================================
.text:00002460
.text:00002460 ; Segment type: Pure code
.text:00002460 ; Segment permissions: Read/Execute
.text:00002460 _text           segment para public 'CODE' use32
.text:00002460                 assume cs:_text
.text:00002460                 ;org 2460h
.text:00002460 ; COMDAT (pick any)
.text:00002460                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002460
.text:00002460 ; =============== S U B R O U T I N E =======================================
.text:00002460
.text:00002460 ; Attributes: bp-based frame
.text:00002460
.text:00002460 ; public: __thiscall AString::operator char const *(void)const
.text:00002460                 public ??BAString@@QBEPBDXZ
.text:00002460 ??BAString@@QBEPBDXZ proc near          ; CODE XREF: NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+6Ep
.text:00002460                                         ; NWindows::NFile::NDir::RemoveDir(wchar_t const *)+68p ...
.text:00002460
.text:00002460 var_4           = dword ptr -4
.text:00002460
.text:00002460                 push    ebp
.text:00002461                 mov     ebp, esp
.text:00002463                 push    ecx
.text:00002464                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000246B                 mov     [ebp+var_4], ecx
.text:0000246E                 mov     eax, [ebp+var_4]
.text:00002471                 mov     eax, [eax]
.text:00002473                 mov     esp, ebp
.text:00002475                 pop     ebp
.text:00002476                 retn
.text:00002476 ??BAString@@QBEPBDXZ endp
.text:00002476
.text:00002476 ; ---------------------------------------------------------------------------
.text:00002477                 align 4
.text:00002477 _text           ends
.text:00002477
.text:00002478 ; ===========================================================================
.text:00002478
.text:00002478 ; Segment type: Pure code
.text:00002478 ; Segment permissions: Read/Execute
.text:00002478 _text           segment para public 'CODE' use32
.text:00002478                 assume cs:_text
.text:00002478                 ;org 2478h
.text:00002478 ; COMDAT (pick any)
.text:00002478                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002478
.text:00002478 ; =============== S U B R O U T I N E =======================================
.text:00002478
.text:00002478 ; Attributes: bp-based frame
.text:00002478
.text:00002478 ; unsigned int __thiscall UString::Len(UString *__hidden this)
.text:00002478                 public ?Len@UString@@QBEIXZ
.text:00002478 ?Len@UString@@QBEIXZ proc near          ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+A1p
.text:00002478                                         ; NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+B1p ...
.text:00002478
.text:00002478 var_4           = dword ptr -4
.text:00002478
.text:00002478                 push    ebp
.text:00002479                 mov     ebp, esp
.text:0000247B                 push    ecx
.text:0000247C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00002483                 mov     [ebp+var_4], ecx
.text:00002486                 mov     eax, [ebp+var_4]
.text:00002489                 mov     eax, [eax+4]
.text:0000248C                 mov     esp, ebp
.text:0000248E                 pop     ebp
.text:0000248F                 retn
.text:0000248F ?Len@UString@@QBEIXZ endp
.text:0000248F
.text:0000248F _text           ends
.text:0000248F
.text:00002490 ; ===========================================================================
.text:00002490
.text:00002490 ; Segment type: Pure code
.text:00002490 ; Segment permissions: Read/Execute
.text:00002490 _text           segment para public 'CODE' use32
.text:00002490                 assume cs:_text
.text:00002490                 ;org 2490h
.text:00002490 ; COMDAT (pick any)
.text:00002490                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002490
.text:00002490 ; =============== S U B R O U T I N E =======================================
.text:00002490
.text:00002490 ; Attributes: bp-based frame
.text:00002490
.text:00002490 ; public: __thiscall UString::operator wchar_t const *(void)const
.text:00002490                 public ??BUString@@QBEPB_WXZ
.text:00002490 ??BUString@@QBEPB_WXZ proc near         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+FCp
.text:00002490                                         ; NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+197p ...
.text:00002490
.text:00002490 var_4           = dword ptr -4
.text:00002490
.text:00002490                 push    ebp
.text:00002491                 mov     ebp, esp
.text:00002493                 push    ecx
.text:00002494                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000249B                 mov     [ebp+var_4], ecx
.text:0000249E                 mov     eax, [ebp+var_4]
.text:000024A1                 mov     eax, [eax]
.text:000024A3                 mov     esp, ebp
.text:000024A5                 pop     ebp
.text:000024A6                 retn
.text:000024A6 ??BUString@@QBEPB_WXZ endp
.text:000024A6
.text:000024A6 ; ---------------------------------------------------------------------------
.text:000024A7                 align 4
.text:000024A7 _text           ends
.text:000024A7
.text:000024A8 ; ===========================================================================
.text:000024A8
.text:000024A8 ; Segment type: Pure code
.text:000024A8 ; Segment permissions: Read/Execute
.text:000024A8 _text           segment para public 'CODE' use32
.text:000024A8                 assume cs:_text
.text:000024A8                 ;org 24A8h
.text:000024A8 ; COMDAT (pick any)
.text:000024A8                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:000024A8
.text:000024A8 ; =============== S U B R O U T I N E =======================================
.text:000024A8
.text:000024A8 ; Attributes: bp-based frame
.text:000024A8
.text:000024A8 ; const wchar_t *__thiscall UString::Ptr(UString *this, unsigned int)
.text:000024A8                 public ?Ptr@UString@@QBEPB_WI@Z
.text:000024A8 ?Ptr@UString@@QBEPB_WI@Z proc near      ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+239p
.text:000024A8                                         ; NWindows::NFile::NDir::GetFullPathAndSplit(wchar_t const *,UString &,UString &)+4Dp
.text:000024A8
.text:000024A8 var_4           = dword ptr -4
.text:000024A8 arg_0           = dword ptr  8
.text:000024A8
.text:000024A8                 push    ebp
.text:000024A9                 mov     ebp, esp
.text:000024AB                 push    ecx
.text:000024AC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000024B3                 mov     [ebp+var_4], ecx
.text:000024B6                 mov     eax, [ebp+var_4]
.text:000024B9                 mov     ecx, [eax]
.text:000024BB                 mov     edx, [ebp+arg_0]
.text:000024BE                 lea     eax, [ecx+edx*2]
.text:000024C1                 mov     esp, ebp
.text:000024C3                 pop     ebp
.text:000024C4                 retn    4
.text:000024C4 ?Ptr@UString@@QBEPB_WI@Z endp
.text:000024C4
.text:000024C4 ; ---------------------------------------------------------------------------
.text:000024C7                 align 4
.text:000024C7 _text           ends
.text:000024C7
.text:000024C8 ; ===========================================================================
.text:000024C8
.text:000024C8 ; Segment type: Pure code
.text:000024C8 ; Segment permissions: Read/Execute
.text:000024C8 _text           segment para public 'CODE' use32
.text:000024C8                 assume cs:_text
.text:000024C8                 ;org 24C8h
.text:000024C8 ; COMDAT (pick any)
.text:000024C8                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:000024C8
.text:000024C8 ; =============== S U B R O U T I N E =======================================
.text:000024C8
.text:000024C8 ; Attributes: bp-based frame
.text:000024C8
.text:000024C8 ; void __thiscall UString::DeleteBack(UString *__hidden this)
.text:000024C8                 public ?DeleteBack@UString@@QAEXXZ
.text:000024C8 ?DeleteBack@UString@@QAEXXZ proc near   ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+D9p
.text:000024C8
.text:000024C8 var_8           = dword ptr -8
.text:000024C8 var_4           = dword ptr -4
.text:000024C8
.text:000024C8                 push    ebp
.text:000024C9                 mov     ebp, esp
.text:000024CB                 sub     esp, 8
.text:000024CE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000024D5                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000024DC                 mov     [ebp+var_4], ecx
.text:000024DF                 mov     eax, [ebp+var_4]
.text:000024E2                 mov     ecx, [eax+4]
.text:000024E5                 sub     ecx, 1
.text:000024E8                 mov     [ebp+var_8], ecx
.text:000024EB                 mov     edx, [ebp+var_4]
.text:000024EE                 mov     eax, [ebp+var_8]
.text:000024F1                 mov     [edx+4], eax
.text:000024F4                 mov     ecx, [ebp+var_4]
.text:000024F7                 mov     edx, [ecx]
.text:000024F9                 xor     eax, eax
.text:000024FB                 mov     ecx, [ebp+var_8]
.text:000024FE                 mov     [edx+ecx*2], ax
.text:00002502                 mov     esp, ebp
.text:00002504                 pop     ebp
.text:00002505                 retn
.text:00002505 ?DeleteBack@UString@@QAEXXZ endp
.text:00002505
.text:00002505 ; ---------------------------------------------------------------------------
.text:00002506                 align 4
.text:00002506 _text           ends
.text:00002506
.text:00002508 ; ===========================================================================
.text:00002508
.text:00002508 ; Segment type: Pure code
.text:00002508 ; Segment permissions: Read/Execute
.text:00002508 _text           segment para public 'CODE' use32
.text:00002508                 assume cs:_text
.text:00002508                 ;org 2508h
.text:00002508 ; COMDAT (pick any)
.text:00002508                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002508
.text:00002508 ; =============== S U B R O U T I N E =======================================
.text:00002508
.text:00002508 ; Attributes: bp-based frame
.text:00002508
.text:00002508 ; void __thiscall UString::DeleteFrom(UString *this, unsigned int)
.text:00002508                 public ?DeleteFrom@UString@@QAEXI@Z
.text:00002508 ?DeleteFrom@UString@@QAEXI@Z proc near  ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+214p
.text:00002508                                         ; NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+16Ap ...
.text:00002508
.text:00002508 var_4           = dword ptr -4
.text:00002508 arg_0           = dword ptr  8
.text:00002508
.text:00002508                 push    ebp
.text:00002509                 mov     ebp, esp
.text:0000250B                 push    ecx
.text:0000250C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00002513                 mov     [ebp+var_4], ecx
.text:00002516                 mov     eax, [ebp+var_4]
.text:00002519                 mov     ecx, [ebp+arg_0]
.text:0000251C                 cmp     ecx, [eax+4]
.text:0000251F                 jnb     short loc_2538
.text:00002521                 mov     edx, [ebp+var_4]
.text:00002524                 mov     eax, [ebp+arg_0]
.text:00002527                 mov     [edx+4], eax
.text:0000252A                 mov     ecx, [ebp+var_4]
.text:0000252D                 mov     edx, [ecx]
.text:0000252F                 xor     eax, eax
.text:00002531                 mov     ecx, [ebp+arg_0]
.text:00002534                 mov     [edx+ecx*2], ax
.text:00002538
.text:00002538 loc_2538:                               ; CODE XREF: UString::DeleteFrom(uint)+17j
.text:00002538                 mov     esp, ebp
.text:0000253A                 pop     ebp
.text:0000253B                 retn    4
.text:0000253B ?DeleteFrom@UString@@QAEXI@Z endp
.text:0000253B
.text:0000253B ; ---------------------------------------------------------------------------
.text:0000253E                 align 10h
.text:0000253E _text           ends
.text:0000253E
.text:00002540 ; ===========================================================================
.text:00002540
.text:00002540 ; Segment type: Pure code
.text:00002540 ; Segment permissions: Read/Execute
.text:00002540 _text           segment para public 'CODE' use32
.text:00002540                 assume cs:_text
.text:00002540                 ;org 2540h
.text:00002540 ; COMDAT (pick any)
.text:00002540                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002540
.text:00002540 ; =============== S U B R O U T I N E =======================================
.text:00002540
.text:00002540 ; Attributes: bp-based frame
.text:00002540
.text:00002540 ; bool __thiscall NWindows::NFile::NFind::CFileInfoBase::IsDir(NWindows::NFile::NFind::CFileInfoBase *__hidden this)
.text:00002540                 public ?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ
.text:00002540 ?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ proc near
.text:00002540                                         ; CODE XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *)+10Dp
.text:00002540                                         ; NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+8Bp ...
.text:00002540
.text:00002540 var_4           = dword ptr -4
.text:00002540
.text:00002540                 push    ebp
.text:00002541                 mov     ebp, esp
.text:00002543                 push    ecx
.text:00002544                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000254B                 mov     [ebp+var_4], ecx
.text:0000254E                 push    10h             ; unsigned int
.text:00002550                 mov     ecx, [ebp+var_4] ; this
.text:00002553                 call    ?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask(uint)
.text:00002558                 add     esp, 4
.text:0000255B                 cmp     ebp, esp
.text:0000255D                 call    __RTC_CheckEsp
.text:00002562                 mov     esp, ebp
.text:00002564                 pop     ebp
.text:00002565                 retn
.text:00002565 ?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ endp
.text:00002565
.text:00002565 ; ---------------------------------------------------------------------------
.text:00002566                 align 4
.text:00002566 _text           ends
.text:00002566
.text:00002568 ; ===========================================================================
.text:00002568
.text:00002568 ; Segment type: Pure code
.text:00002568 ; Segment permissions: Read/Execute
.text:00002568 _text           segment para public 'CODE' use32
.text:00002568                 assume cs:_text
.text:00002568                 ;org 2568h
.text:00002568 ; COMDAT (pick any)
.text:00002568                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002568
.text:00002568 ; =============== S U B R O U T I N E =======================================
.text:00002568
.text:00002568 ; Attributes: bp-based frame
.text:00002568
.text:00002568 ; bool __thiscall NWindows::NFile::NFind::CFileInfoBase::MatchesMask(NWindows::NFile::NFind::CFileInfoBase *this, unsigned int)
.text:00002568                 public ?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z
.text:00002568 ?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z proc near
.text:00002568                                         ; CODE XREF: NWindows::NFile::NFind::CFileInfoBase::IsDir(void)+13p
.text:00002568                                         ; NWindows::NFile::NFind::CFileInfoBase::HasReparsePoint(void)+16p
.text:00002568
.text:00002568 var_4           = dword ptr -4
.text:00002568 arg_0           = dword ptr  8
.text:00002568
.text:00002568                 push    ebp
.text:00002569                 mov     ebp, esp
.text:0000256B                 push    ecx
.text:0000256C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00002573                 mov     [ebp+var_4], ecx
.text:00002576                 mov     eax, [ebp+var_4]
.text:00002579                 mov     eax, [eax+20h]
.text:0000257C                 and     eax, [ebp+arg_0]
.text:0000257F                 neg     eax
.text:00002581                 sbb     eax, eax
.text:00002583                 neg     eax
.text:00002585                 mov     esp, ebp
.text:00002587                 pop     ebp
.text:00002588                 retn    4
.text:00002588 ?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z endp
.text:00002588
.text:00002588 ; ---------------------------------------------------------------------------
.text:0000258B                 align 4
.text:0000258B _text           ends
.text:0000258B
.text:0000258C ; ===========================================================================
.text:0000258C
.text:0000258C ; Segment type: Pure code
.text:0000258C ; Segment permissions: Read/Execute
.text:0000258C _text           segment para public 'CODE' use32
.text:0000258C                 assume cs:_text
.text:0000258C                 ;org 258Ch
.text:0000258C ; COMDAT (pick any)
.text:0000258C                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:0000258C
.text:0000258C ; =============== S U B R O U T I N E =======================================
.text:0000258C
.text:0000258C ; Attributes: bp-based frame
.text:0000258C
.text:0000258C ; _DWORD __thiscall NWindows::NFile::NFind::CFileInfo::CFileInfo(NWindows::NFile::NFind::CFileInfo *__hidden this)
.text:0000258C                 public ??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
.text:0000258C ??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ proc near
.text:0000258C                                         ; CODE XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *)+D3p
.text:0000258C                                         ; NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+43p ...
.text:0000258C
.text:0000258C var_4           = dword ptr -4
.text:0000258C
.text:0000258C                 push    ebp
.text:0000258D                 mov     ebp, esp
.text:0000258F                 push    ecx
.text:00002590                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00002597                 mov     [ebp+var_4], ecx
.text:0000259A                 mov     ecx, [ebp+var_4] ; this
.text:0000259D                 call    ??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase(void)
.text:000025A2                 mov     ecx, [ebp+var_4]
.text:000025A5                 add     ecx, 28h ; '('
.text:000025A8                 call    ??0UString@@QAE@XZ ; UString::UString(void)
.text:000025AD                 mov     eax, [ebp+var_4]
.text:000025B0                 add     esp, 4
.text:000025B3                 cmp     ebp, esp
.text:000025B5                 call    __RTC_CheckEsp
.text:000025BA                 mov     esp, ebp
.text:000025BC                 pop     ebp
.text:000025BD                 retn
.text:000025BD ??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ endp
.text:000025BD
.text:000025BD ; ---------------------------------------------------------------------------
.text:000025BE                 align 10h
.text:000025BE _text           ends
.text:000025BE
.text:000025C0 ; ===========================================================================
.text:000025C0
.text:000025C0 ; Segment type: Pure code
.text:000025C0 ; Segment permissions: Read/Execute
.text:000025C0 _text           segment para public 'CODE' use32
.text:000025C0                 assume cs:_text
.text:000025C0                 ;org 25C0h
.text:000025C0 ; COMDAT (pick any)
.text:000025C0                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:000025C0
.text:000025C0 ; =============== S U B R O U T I N E =======================================
.text:000025C0
.text:000025C0 ; Attributes: bp-based frame
.text:000025C0
.text:000025C0 ; _DWORD __thiscall NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase(NWindows::NFile::NFind::CFileInfoBase *__hidden this)
.text:000025C0                 public ??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ
.text:000025C0 ??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ proc near
.text:000025C0                                         ; CODE XREF: NWindows::NFile::NFind::CFileInfo::CFileInfo(void)+11p
.text:000025C0
.text:000025C0 var_4           = dword ptr -4
.text:000025C0
.text:000025C0                 push    ebp
.text:000025C1                 mov     ebp, esp
.text:000025C3                 push    ecx
.text:000025C4                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000025CB                 mov     [ebp+var_4], ecx
.text:000025CE                 mov     ecx, [ebp+var_4] ; this
.text:000025D1                 call    ?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::ClearBase(void)
.text:000025D6                 mov     eax, [ebp+var_4]
.text:000025D9                 add     esp, 4
.text:000025DC                 cmp     ebp, esp
.text:000025DE                 call    __RTC_CheckEsp
.text:000025E3                 mov     esp, ebp
.text:000025E5                 pop     ebp
.text:000025E6                 retn
.text:000025E6 ??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ endp
.text:000025E6
.text:000025E6 ; ---------------------------------------------------------------------------
.text:000025E7                 align 4
.text:000025E7 _text           ends
.text:000025E7
.text:000025E8 ; ===========================================================================
.text:000025E8
.text:000025E8 ; Segment type: Pure code
.text:000025E8 ; Segment permissions: Read/Execute
.text:000025E8 _text           segment para public 'CODE' use32
.text:000025E8                 assume cs:_text
.text:000025E8                 ;org 25E8h
.text:000025E8 ; COMDAT (pick any)
.text:000025E8                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:000025E8
.text:000025E8 ; =============== S U B R O U T I N E =======================================
.text:000025E8
.text:000025E8 ; Attributes: bp-based frame
.text:000025E8
.text:000025E8 ; _DWORD __thiscall NWindows::NFile::NFind::CFileInfo::~CFileInfo(NWindows::NFile::NFind::CFileInfo *__hidden this)
.text:000025E8                 public ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
.text:000025E8 ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ proc near
.text:000025E8                                         ; CODE XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *)+100p
.text:000025E8                                         ; NWindows::NFile::NDir::CreateDir2(wchar_t const *)+11Fp ...
.text:000025E8
.text:000025E8 var_4           = dword ptr -4
.text:000025E8
.text:000025E8                 push    ebp
.text:000025E9                 mov     ebp, esp
.text:000025EB                 push    ecx
.text:000025EC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000025F3                 mov     [ebp+var_4], ecx
.text:000025F6                 mov     ecx, [ebp+var_4]
.text:000025F9                 add     ecx, 28h ; '('  ; this
.text:000025FC                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00002601                 add     esp, 4
.text:00002604                 cmp     ebp, esp
.text:00002606                 call    __RTC_CheckEsp
.text:0000260B                 mov     esp, ebp
.text:0000260D                 pop     ebp
.text:0000260E                 retn
.text:0000260E ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ endp
.text:0000260E
.text:0000260E ; ---------------------------------------------------------------------------
.text:0000260F                 align 10h
.text:0000260F _text           ends
.text:0000260F
.text:00002610 ; ===========================================================================
.text:00002610
.text:00002610 ; Segment type: Pure code
.text:00002610 ; Segment permissions: Read/Execute
.text:00002610 _text           segment para public 'CODE' use32
.text:00002610                 assume cs:_text
.text:00002610                 ;org 2610h
.text:00002610 ; COMDAT (pick any)
.text:00002610                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002610
.text:00002610 ; =============== S U B R O U T I N E =======================================
.text:00002610
.text:00002610 ; Attributes: bp-based frame
.text:00002610
.text:00002610 ; public: class UString & __thiscall UString::operator+=(wchar_t)
.text:00002610                 public ??YUString@@QAEAAV0@_W@Z
.text:00002610 ??YUString@@QAEAAV0@_W@Z proc near      ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+125p
.text:00002610                                         ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+FEp ...
.text:00002610
.text:00002610 var_C           = dword ptr -0Ch
.text:00002610 var_8           = dword ptr -8
.text:00002610 var_4           = dword ptr -4
.text:00002610 arg_0           = word ptr  8
.text:00002610
.text:00002610                 push    ebp
.text:00002611                 mov     ebp, esp
.text:00002613                 sub     esp, 0Ch
.text:00002616                 mov     [ebp+var_C], 0CCCCCCCCh
.text:0000261D                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00002624                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000262B                 mov     [ebp+var_4], ecx
.text:0000262E                 mov     eax, [ebp+var_4]
.text:00002631                 mov     ecx, [ebp+var_4]
.text:00002634                 mov     edx, [eax+8]
.text:00002637                 cmp     edx, [ecx+4]
.text:0000263A                 jnz     short loc_2644
.text:0000263C                 mov     ecx, [ebp+var_4] ; this
.text:0000263F                 call    ?Grow_1@UString@@AAEXXZ ; UString::Grow_1(void)
.text:00002644
.text:00002644 loc_2644:                               ; CODE XREF: UString::operator+=(wchar_t)+2Aj
.text:00002644                 mov     eax, [ebp+var_4]
.text:00002647                 mov     ecx, [eax+4]
.text:0000264A                 mov     [ebp+var_8], ecx
.text:0000264D                 mov     edx, [ebp+var_4]
.text:00002650                 mov     eax, [edx]
.text:00002652                 mov     [ebp+var_C], eax
.text:00002655                 mov     ecx, [ebp+var_8]
.text:00002658                 mov     edx, [ebp+var_C]
.text:0000265B                 mov     ax, [ebp+arg_0]
.text:0000265F                 mov     [edx+ecx*2], ax
.text:00002663                 mov     ecx, [ebp+var_8]
.text:00002666                 add     ecx, 1
.text:00002669                 mov     [ebp+var_8], ecx
.text:0000266C                 xor     edx, edx
.text:0000266E                 mov     eax, [ebp+var_8]
.text:00002671                 mov     ecx, [ebp+var_C]
.text:00002674                 mov     [ecx+eax*2], dx
.text:00002678                 mov     edx, [ebp+var_4]
.text:0000267B                 mov     eax, [ebp+var_8]
.text:0000267E                 mov     [edx+4], eax
.text:00002681                 mov     eax, [ebp+var_4]
.text:00002684                 add     esp, 0Ch
.text:00002687                 cmp     ebp, esp
.text:00002689                 call    __RTC_CheckEsp
.text:0000268E                 mov     esp, ebp
.text:00002690                 pop     ebp
.text:00002691                 retn    4
.text:00002691 ??YUString@@QAEAAV0@_W@Z endp
.text:00002691
.text:00002691 _text           ends
.text:00002691
.text:00002694 ; ===========================================================================
.text:00002694
.text:00002694 ; Segment type: Pure code
.text:00002694 ; Segment permissions: Read/Execute
.text:00002694 _text           segment para public 'CODE' use32
.text:00002694                 assume cs:_text
.text:00002694                 ;org 2694h
.text:00002694 ; COMDAT (pick any)
.text:00002694                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002694
.text:00002694 ; =============== S U B R O U T I N E =======================================
.text:00002694
.text:00002694 ; Attributes: bp-based frame
.text:00002694
.text:00002694 ; void __thiscall UString::Add_PathSepar(UString *__hidden this)
.text:00002694                 public ?Add_PathSepar@UString@@QAEXXZ
.text:00002694 ?Add_PathSepar@UString@@QAEXXZ proc near
.text:00002694                                         ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+110p
.text:00002694
.text:00002694 var_4           = dword ptr -4
.text:00002694
.text:00002694                 push    ebp
.text:00002695                 mov     ebp, esp
.text:00002697                 push    ecx
.text:00002698                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000269F                 mov     [ebp+var_4], ecx
.text:000026A2                 push    5Ch ; '\'
.text:000026A4                 mov     ecx, [ebp+var_4]
.text:000026A7                 call    ??YUString@@QAEAAV0@_W@Z ; UString::operator+=(wchar_t)
.text:000026AC                 add     esp, 4
.text:000026AF                 cmp     ebp, esp
.text:000026B1                 call    __RTC_CheckEsp
.text:000026B6                 mov     esp, ebp
.text:000026B8                 pop     ebp
.text:000026B9                 retn
.text:000026B9 ?Add_PathSepar@UString@@QAEXXZ endp
.text:000026B9
.text:000026B9 ; ---------------------------------------------------------------------------
.text:000026BA                 align 4
.text:000026BA _text           ends
.text:000026BA
.text:000026BC ; ===========================================================================
.text:000026BC
.text:000026BC ; Segment type: Pure code
.text:000026BC ; Segment permissions: Read/Execute
.text:000026BC _text           segment para public 'CODE' use32
.text:000026BC                 assume cs:_text
.text:000026BC                 ;org 26BCh
.text:000026BC ; COMDAT (pick any)
.text:000026BC                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:000026BC
.text:000026BC ; =============== S U B R O U T I N E =======================================
.text:000026BC
.text:000026BC ; Attributes: bp-based frame
.text:000026BC
.text:000026BC ; bool __thiscall NWindows::NFile::NFind::CFileInfoBase::HasReparsePoint(NWindows::NFile::NFind::CFileInfoBase *__hidden this)
.text:000026BC                 public ?HasReparsePoint@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ
.text:000026BC ?HasReparsePoint@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ proc near
.text:000026BC                                         ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+CFp
.text:000026BC
.text:000026BC var_4           = dword ptr -4
.text:000026BC
.text:000026BC                 push    ebp
.text:000026BD                 mov     ebp, esp
.text:000026BF                 push    ecx
.text:000026C0                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000026C7                 mov     [ebp+var_4], ecx
.text:000026CA                 push    400h            ; unsigned int
.text:000026CF                 mov     ecx, [ebp+var_4] ; this
.text:000026D2                 call    ?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask(uint)
.text:000026D7                 add     esp, 4
.text:000026DA                 cmp     ebp, esp
.text:000026DC                 call    __RTC_CheckEsp
.text:000026E1                 mov     esp, ebp
.text:000026E3                 pop     ebp
.text:000026E4                 retn
.text:000026E4 ?HasReparsePoint@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ endp
.text:000026E4
.text:000026E4 ; ---------------------------------------------------------------------------
.text:000026E5                 align 4
.text:000026E5 _text           ends
.text:000026E5
.text:000026E8 ; ===========================================================================
.text:000026E8
.text:000026E8 ; Segment type: Pure code
.text:000026E8 ; Segment permissions: Read/Execute
.text:000026E8 _text           segment para public 'CODE' use32
.text:000026E8                 assume cs:_text
.text:000026E8                 ;org 26E8h
.text:000026E8 ; COMDAT (pick any)
.text:000026E8                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:000026E8
.text:000026E8 ; =============== S U B R O U T I N E =======================================
.text:000026E8
.text:000026E8 ; Attributes: bp-based frame
.text:000026E8
.text:000026E8 ; _DWORD __thiscall NWindows::NFile::NFind::CEnumerator::CEnumerator(NWindows::NFile::NFind::CEnumerator *this, const struct UString *)
.text:000026E8                 public ??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
.text:000026E8 ??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z proc near
.text:000026E8                                         ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+131p
.text:000026E8
.text:000026E8 var_10          = dword ptr -10h
.text:000026E8 var_C           = dword ptr -0Ch
.text:000026E8 var_4           = dword ptr -4
.text:000026E8 arg_0           = dword ptr  8
.text:000026E8
.text:000026E8                 push    ebp
.text:000026E9                 mov     ebp, esp
.text:000026EB                 push    0FFFFFFFFh
.text:000026ED                 push    offset __ehhandler$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
.text:000026F2                 mov     eax, large fs:0
.text:000026F8                 push    eax
.text:000026F9                 push    ecx
.text:000026FA                 mov     [ebp+var_10], 0CCCCCCCCh
.text:00002701                 mov     eax, dword ptr ds:___security_cookie
.text:00002706                 xor     eax, ebp
.text:00002708                 push    eax
.text:00002709                 lea     eax, [ebp+var_C]
.text:0000270C                 mov     large fs:0, eax
.text:00002712                 mov     [ebp+var_10], ecx
.text:00002715                 mov     ecx, [ebp+var_10] ; this
.text:00002718                 call    ??0CFindFile@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFile::CFindFile(void)
.text:0000271D                 mov     [ebp+var_4], 0
.text:00002724                 mov     eax, [ebp+arg_0]
.text:00002727                 push    eax
.text:00002728                 mov     ecx, [ebp+var_10]
.text:0000272B                 add     ecx, 4
.text:0000272E                 call    ??0UString@@QAE@ABV0@@Z ; UString::UString(UString const &)
.text:00002733                 mov     [ebp+var_4], 0FFFFFFFFh
.text:0000273A                 mov     eax, [ebp+var_10]
.text:0000273D                 mov     ecx, [ebp+var_C]
.text:00002740                 mov     large fs:0, ecx
.text:00002747                 pop     ecx
.text:00002748                 add     esp, 10h
.text:0000274B                 cmp     ebp, esp
.text:0000274D                 call    __RTC_CheckEsp
.text:00002752                 mov     esp, ebp
.text:00002754                 pop     ebp
.text:00002755                 retn    4
.text:00002755 ??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z endp
.text:00002755
.text:00002755 _text           ends
.text:00002755
.text$x:00002758 ; ===========================================================================
.text$x:00002758
.text$x:00002758 ; Segment type: Pure code
.text$x:00002758 ; Segment permissions: Read/Execute
.text$x:00002758 _text$x         segment para public 'CODE' use32
.text$x:00002758                 assume cs:_text$x
.text$x:00002758                 ;org 2758h
.text$x:00002758 ; COMDAT (pick associative to section at 26E8)
.text$x:00002758                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$x:00002758
.text$x:00002758 ; =============== S U B R O U T I N E =======================================
.text$x:00002758
.text$x:00002758
.text$x:00002758 __unwindfunclet$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z$0 proc near
.text$x:00002758                                         ; DATA XREF: .xdata$x:00002780o
.text$x:00002758                 mov     ecx, [ebp-10h]  ; this
.text$x:0000275B                 jmp     ??1CFindFile@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFile::~CFindFile(void)
.text$x:0000275B __unwindfunclet$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z$0 endp
.text$x:0000275B
.text$x:00002760
.text$x:00002760 ; =============== S U B R O U T I N E =======================================
.text$x:00002760
.text$x:00002760
.text$x:00002760 __ehhandler$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z proc near
.text$x:00002760                                         ; DATA XREF: NWindows::NFile::NFind::CEnumerator::CEnumerator(UString const &)+5o
.text$x:00002760
.text$x:00002760 arg_4           = dword ptr  8
.text$x:00002760
.text$x:00002760                 mov     edx, [esp+arg_4]
.text$x:00002764                 lea     eax, [edx+0Ch]
.text$x:00002767                 mov     ecx, [edx-8]
.text$x:0000276A                 xor     ecx, eax
.text$x:0000276C                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00002771                 mov     eax, offset __ehfuncinfo$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
.text$x:00002776                 jmp     ___CxxFrameHandler3
.text$x:00002776 __ehhandler$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z endp
.text$x:00002776
.text$x:00002776 ; ---------------------------------------------------------------------------
.text$x:0000277B                 align 4
.text$x:0000277B _text$x         ends
.text$x:0000277B
.xdata$x:0000277C ; ===========================================================================
.xdata$x:0000277C
.xdata$x:0000277C ; Segment type: Pure data
.xdata$x:0000277C ; Segment permissions: Read
.xdata$x:0000277C _xdata$x        segment dword public 'DATA' use32
.xdata$x:0000277C                 assume cs:_xdata$x
.xdata$x:0000277C                 ;org 277Ch
.xdata$x:0000277C ; COMDAT (pick associative to section at 26E8)
.xdata$x:0000277C __unwindtable$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z db 0FFh
.xdata$x:0000277C                                         ; DATA XREF: .xdata$x:0000278Co
.xdata$x:0000277D                 db 0FFh
.xdata$x:0000277E                 db 0FFh
.xdata$x:0000277F                 db 0FFh
.xdata$x:00002780                 dd offset __unwindfunclet$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z$0
.xdata$x:00002784 __ehfuncinfo$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z db  22h ; "
.xdata$x:00002784                                         ; DATA XREF: __ehhandler$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z+11o
.xdata$x:00002785                 db    5
.xdata$x:00002786                 db  93h ; ô
.xdata$x:00002787                 db  19h
.xdata$x:00002788                 db    1
.xdata$x:00002789                 db    0
.xdata$x:0000278A                 db    0
.xdata$x:0000278B                 db    0
.xdata$x:0000278C                 dd offset __unwindtable$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
.xdata$x:00002790                 db    0
.xdata$x:00002791                 db    0
.xdata$x:00002792                 db    0
.xdata$x:00002793                 db    0
.xdata$x:00002794                 db    0
.xdata$x:00002795                 db    0
.xdata$x:00002796                 db    0
.xdata$x:00002797                 db    0
.xdata$x:00002798                 db    0
.xdata$x:00002799                 db    0
.xdata$x:0000279A                 db    0
.xdata$x:0000279B                 db    0
.xdata$x:0000279C                 db    0
.xdata$x:0000279D                 db    0
.xdata$x:0000279E                 db    0
.xdata$x:0000279F                 db    0
.xdata$x:000027A0                 db    0
.xdata$x:000027A1                 db    0
.xdata$x:000027A2                 db    0
.xdata$x:000027A3                 db    0
.xdata$x:000027A4                 db    1
.xdata$x:000027A5                 db    0
.xdata$x:000027A6                 db    0
.xdata$x:000027A7                 db    0
.xdata$x:000027A7 _xdata$x        ends
.xdata$x:000027A7
.text:000027A8 ; ===========================================================================
.text:000027A8
.text:000027A8 ; Segment type: Pure code
.text:000027A8 ; Segment permissions: Read/Execute
.text:000027A8 _text           segment para public 'CODE' use32
.text:000027A8                 assume cs:_text
.text:000027A8                 ;org 27A8h
.text:000027A8 ; COMDAT (pick any)
.text:000027A8                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:000027A8
.text:000027A8 ; =============== S U B R O U T I N E =======================================
.text:000027A8
.text:000027A8 ; Attributes: bp-based frame
.text:000027A8
.text:000027A8 ; _DWORD __thiscall NWindows::NFile::NFind::CFindFile::CFindFile(NWindows::NFile::NFind::CFindFile *__hidden this)
.text:000027A8                 public ??0CFindFile@NFind@NFile@NWindows@@QAE@XZ
.text:000027A8 ??0CFindFile@NFind@NFile@NWindows@@QAE@XZ proc near
.text:000027A8                                         ; CODE XREF: NWindows::NFile::NFind::CEnumerator::CEnumerator(UString const &)+30p
.text:000027A8
.text:000027A8 var_4           = dword ptr -4
.text:000027A8
.text:000027A8                 push    ebp
.text:000027A9                 mov     ebp, esp
.text:000027AB                 push    ecx
.text:000027AC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000027B3                 mov     [ebp+var_4], ecx
.text:000027B6                 mov     ecx, [ebp+var_4] ; this
.text:000027B9                 call    ??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFileBase::CFindFileBase(void)
.text:000027BE                 mov     eax, [ebp+var_4]
.text:000027C1                 add     esp, 4
.text:000027C4                 cmp     ebp, esp
.text:000027C6                 call    __RTC_CheckEsp
.text:000027CB                 mov     esp, ebp
.text:000027CD                 pop     ebp
.text:000027CE                 retn
.text:000027CE ??0CFindFile@NFind@NFile@NWindows@@QAE@XZ endp
.text:000027CE
.text:000027CE ; ---------------------------------------------------------------------------
.text:000027CF                 align 10h
.text:000027CF _text           ends
.text:000027CF
.text:000027D0 ; ===========================================================================
.text:000027D0
.text:000027D0 ; Segment type: Pure code
.text:000027D0 ; Segment permissions: Read/Execute
.text:000027D0 _text           segment para public 'CODE' use32
.text:000027D0                 assume cs:_text
.text:000027D0                 ;org 27D0h
.text:000027D0 ; COMDAT (pick any)
.text:000027D0                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:000027D0
.text:000027D0 ; =============== S U B R O U T I N E =======================================
.text:000027D0
.text:000027D0 ; Attributes: bp-based frame
.text:000027D0
.text:000027D0 ; _DWORD __thiscall NWindows::NFile::NFind::CFindFileBase::CFindFileBase(NWindows::NFile::NFind::CFindFileBase *__hidden this)
.text:000027D0                 public ??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ
.text:000027D0 ??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ proc near
.text:000027D0                                         ; CODE XREF: NWindows::NFile::NFind::CFindFile::CFindFile(void)+11p
.text:000027D0
.text:000027D0 var_4           = dword ptr -4
.text:000027D0
.text:000027D0                 push    ebp
.text:000027D1                 mov     ebp, esp
.text:000027D3                 push    ecx
.text:000027D4                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000027DB                 mov     [ebp+var_4], ecx
.text:000027DE                 mov     eax, [ebp+var_4]
.text:000027E1                 mov     dword ptr [eax], 0FFFFFFFFh
.text:000027E7                 mov     eax, [ebp+var_4]
.text:000027EA                 mov     esp, ebp
.text:000027EC                 pop     ebp
.text:000027ED                 retn
.text:000027ED ??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ endp
.text:000027ED
.text:000027ED ; ---------------------------------------------------------------------------
.text:000027EE                 align 10h
.text:000027EE _text           ends
.text:000027EE
.text:000027F0 ; ===========================================================================
.text:000027F0
.text:000027F0 ; Segment type: Pure code
.text:000027F0 ; Segment permissions: Read/Execute
.text:000027F0 _text           segment para public 'CODE' use32
.text:000027F0                 assume cs:_text
.text:000027F0                 ;org 27F0h
.text:000027F0 ; COMDAT (pick any)
.text:000027F0                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:000027F0
.text:000027F0 ; =============== S U B R O U T I N E =======================================
.text:000027F0
.text:000027F0 ; Attributes: bp-based frame
.text:000027F0
.text:000027F0 ; _DWORD __thiscall NWindows::NFile::NFind::CFindFile::~CFindFile(NWindows::NFile::NFind::CFindFile *__hidden this)
.text:000027F0                 public ??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
.text:000027F0 ??1CFindFile@NFind@NFile@NWindows@@QAE@XZ proc near
.text:000027F0                                         ; CODE XREF: __unwindfunclet$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z$0+3j
.text:000027F0                                         ; NWindows::NFile::NFind::CEnumerator::~CEnumerator(void)+49p ...
.text:000027F0
.text:000027F0 var_4           = dword ptr -4
.text:000027F0
.text:000027F0                 push    ebp
.text:000027F1                 mov     ebp, esp
.text:000027F3                 push    ecx
.text:000027F4                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000027FB                 mov     [ebp+var_4], ecx
.text:000027FE                 mov     ecx, [ebp+var_4] ; this
.text:00002801                 call    ??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFileBase::~CFindFileBase(void)
.text:00002806                 add     esp, 4
.text:00002809                 cmp     ebp, esp
.text:0000280B                 call    __RTC_CheckEsp
.text:00002810                 mov     esp, ebp
.text:00002812                 pop     ebp
.text:00002813                 retn
.text:00002813 ??1CFindFile@NFind@NFile@NWindows@@QAE@XZ endp
.text:00002813
.text:00002813 _text           ends
.text:00002813
.text:00002814 ; ===========================================================================
.text:00002814
.text:00002814 ; Segment type: Pure code
.text:00002814 ; Segment permissions: Read/Execute
.text:00002814 _text           segment para public 'CODE' use32
.text:00002814                 assume cs:_text
.text:00002814                 ;org 2814h
.text:00002814 ; COMDAT (pick any)
.text:00002814                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002814
.text:00002814 ; =============== S U B R O U T I N E =======================================
.text:00002814
.text:00002814 ; Attributes: bp-based frame
.text:00002814
.text:00002814 ; _DWORD __thiscall NWindows::NFile::NFind::CFindFileBase::~CFindFileBase(NWindows::NFile::NFind::CFindFileBase *__hidden this)
.text:00002814                 public ??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ
.text:00002814 ??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ proc near
.text:00002814                                         ; CODE XREF: NWindows::NFile::NFind::CFindFile::~CFindFile(void)+11p
.text:00002814
.text:00002814 var_4           = dword ptr -4
.text:00002814
.text:00002814                 push    ebp
.text:00002815                 mov     ebp, esp
.text:00002817                 push    ecx
.text:00002818                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000281F                 mov     [ebp+var_4], ecx
.text:00002822                 mov     ecx, [ebp+var_4] ; this
.text:00002825                 call    ?Close@CFindFileBase@NFind@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NFind::CFindFileBase::Close(void)
.text:0000282A                 add     esp, 4
.text:0000282D                 cmp     ebp, esp
.text:0000282F                 call    __RTC_CheckEsp
.text:00002834                 mov     esp, ebp
.text:00002836                 pop     ebp
.text:00002837                 retn
.text:00002837 ??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ endp
.text:00002837
.text:00002837 _text           ends
.text:00002837
.text:00002838 ; ===========================================================================
.text:00002838
.text:00002838 ; Segment type: Pure code
.text:00002838 ; Segment permissions: Read/Execute
.text:00002838 _text           segment para public 'CODE' use32
.text:00002838                 assume cs:_text
.text:00002838                 ;org 2838h
.text:00002838 ; COMDAT (pick any)
.text:00002838                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002838
.text:00002838 ; =============== S U B R O U T I N E =======================================
.text:00002838
.text:00002838 ; Attributes: bp-based frame
.text:00002838
.text:00002838 ; _DWORD __thiscall NWindows::NFile::NFind::CEnumerator::~CEnumerator(NWindows::NFile::NFind::CEnumerator *__hidden this)
.text:00002838                 public ??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
.text:00002838 ??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ proc near
.text:00002838                                         ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+1BDp
.text:00002838                                         ; NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+210p ...
.text:00002838
.text:00002838 var_10          = dword ptr -10h
.text:00002838 var_C           = dword ptr -0Ch
.text:00002838 var_4           = dword ptr -4
.text:00002838
.text:00002838                 push    ebp
.text:00002839                 mov     ebp, esp
.text:0000283B                 push    0FFFFFFFFh
.text:0000283D                 push    offset __ehhandler$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
.text:00002842                 mov     eax, large fs:0
.text:00002848                 push    eax
.text:00002849                 push    ecx
.text:0000284A                 mov     [ebp+var_10], 0CCCCCCCCh
.text:00002851                 mov     eax, dword ptr ds:___security_cookie
.text:00002856                 xor     eax, ebp
.text:00002858                 push    eax
.text:00002859                 lea     eax, [ebp+var_C]
.text:0000285C                 mov     large fs:0, eax
.text:00002862                 mov     [ebp+var_10], ecx
.text:00002865                 mov     [ebp+var_4], 0
.text:0000286C                 mov     ecx, [ebp+var_10]
.text:0000286F                 add     ecx, 4          ; this
.text:00002872                 call    ??1UString@@QAE@XZ ; UString::~UString(void)
.text:00002877                 mov     [ebp+var_4], 0FFFFFFFFh
.text:0000287E                 mov     ecx, [ebp+var_10] ; this
.text:00002881                 call    ??1CFindFile@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFile::~CFindFile(void)
.text:00002886                 mov     ecx, [ebp+var_C]
.text:00002889                 mov     large fs:0, ecx
.text:00002890                 pop     ecx
.text:00002891                 add     esp, 10h
.text:00002894                 cmp     ebp, esp
.text:00002896                 call    __RTC_CheckEsp
.text:0000289B                 mov     esp, ebp
.text:0000289D                 pop     ebp
.text:0000289E                 retn
.text:0000289E ??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ endp
.text:0000289E
.text:0000289E ; ---------------------------------------------------------------------------
.text:0000289F                 align 10h
.text:0000289F _text           ends
.text:0000289F
.text$x:000028A0 ; ===========================================================================
.text$x:000028A0
.text$x:000028A0 ; Segment type: Pure code
.text$x:000028A0 ; Segment permissions: Read/Execute
.text$x:000028A0 _text$x         segment para public 'CODE' use32
.text$x:000028A0                 assume cs:_text$x
.text$x:000028A0                 ;org 28A0h
.text$x:000028A0 ; COMDAT (pick associative to section at 2838)
.text$x:000028A0                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$x:000028A0
.text$x:000028A0 ; =============== S U B R O U T I N E =======================================
.text$x:000028A0
.text$x:000028A0
.text$x:000028A0 __unwindfunclet$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ$0 proc near
.text$x:000028A0                                         ; DATA XREF: .xdata$x:000028C8o
.text$x:000028A0                 mov     ecx, [ebp-10h]  ; this
.text$x:000028A3                 jmp     ??1CFindFile@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFile::~CFindFile(void)
.text$x:000028A3 __unwindfunclet$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ$0 endp
.text$x:000028A3
.text$x:000028A8
.text$x:000028A8 ; =============== S U B R O U T I N E =======================================
.text$x:000028A8
.text$x:000028A8
.text$x:000028A8 __ehhandler$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ proc near
.text$x:000028A8                                         ; DATA XREF: NWindows::NFile::NFind::CEnumerator::~CEnumerator(void)+5o
.text$x:000028A8
.text$x:000028A8 arg_4           = dword ptr  8
.text$x:000028A8
.text$x:000028A8                 mov     edx, [esp+arg_4]
.text$x:000028AC                 lea     eax, [edx+0Ch]
.text$x:000028AF                 mov     ecx, [edx-8]
.text$x:000028B2                 xor     ecx, eax
.text$x:000028B4                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:000028B9                 mov     eax, offset __ehfuncinfo$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
.text$x:000028BE                 jmp     ___CxxFrameHandler3
.text$x:000028BE __ehhandler$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ endp
.text$x:000028BE
.text$x:000028BE ; ---------------------------------------------------------------------------
.text$x:000028C3                 align 4
.text$x:000028C3 _text$x         ends
.text$x:000028C3
.xdata$x:000028C4 ; ===========================================================================
.xdata$x:000028C4
.xdata$x:000028C4 ; Segment type: Pure data
.xdata$x:000028C4 ; Segment permissions: Read
.xdata$x:000028C4 _xdata$x        segment dword public 'DATA' use32
.xdata$x:000028C4                 assume cs:_xdata$x
.xdata$x:000028C4                 ;org 28C4h
.xdata$x:000028C4 ; COMDAT (pick associative to section at 2838)
.xdata$x:000028C4 __unwindtable$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ db 0FFh
.xdata$x:000028C4                                         ; DATA XREF: .xdata$x:000028D4o
.xdata$x:000028C5                 db 0FFh
.xdata$x:000028C6                 db 0FFh
.xdata$x:000028C7                 db 0FFh
.xdata$x:000028C8                 dd offset __unwindfunclet$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ$0
.xdata$x:000028CC __ehfuncinfo$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ db  22h ; "
.xdata$x:000028CC                                         ; DATA XREF: __ehhandler$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ+11o
.xdata$x:000028CD                 db    5
.xdata$x:000028CE                 db  93h ; ô
.xdata$x:000028CF                 db  19h
.xdata$x:000028D0                 db    1
.xdata$x:000028D1                 db    0
.xdata$x:000028D2                 db    0
.xdata$x:000028D3                 db    0
.xdata$x:000028D4                 dd offset __unwindtable$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
.xdata$x:000028D8                 db    0
.xdata$x:000028D9                 db    0
.xdata$x:000028DA                 db    0
.xdata$x:000028DB                 db    0
.xdata$x:000028DC                 db    0
.xdata$x:000028DD                 db    0
.xdata$x:000028DE                 db    0
.xdata$x:000028DF                 db    0
.xdata$x:000028E0                 db    0
.xdata$x:000028E1                 db    0
.xdata$x:000028E2                 db    0
.xdata$x:000028E3                 db    0
.xdata$x:000028E4                 db    0
.xdata$x:000028E5                 db    0
.xdata$x:000028E6                 db    0
.xdata$x:000028E7                 db    0
.xdata$x:000028E8                 db    0
.xdata$x:000028E9                 db    0
.xdata$x:000028EA                 db    0
.xdata$x:000028EB                 db    0
.xdata$x:000028EC                 db    1
.xdata$x:000028ED                 db    0
.xdata$x:000028EE                 db    0
.xdata$x:000028EF                 db    0
.xdata$x:000028EF _xdata$x        ends
.xdata$x:000028EF
.text:000028F0 ; ===========================================================================
.text:000028F0
.text:000028F0 ; Segment type: Pure code
.text:000028F0 ; Segment permissions: Read/Execute
.text:000028F0 _text           segment para public 'CODE' use32
.text:000028F0                 assume cs:_text
.text:000028F0                 ;org 28F0h
.text:000028F0 ; COMDAT (pick any)
.text:000028F0                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:000028F0
.text:000028F0 ; =============== S U B R O U T I N E =======================================
.text:000028F0
.text:000028F0 ; Attributes: bp-based frame
.text:000028F0
.text:000028F0 ; void __thiscall UString::Empty(UString *__hidden this)
.text:000028F0                 public ?Empty@UString@@QAEXXZ
.text:000028F0 ?Empty@UString@@QAEXXZ proc near        ; CODE XREF: NWindows::NFile::NDir::GetCurrentDir(UString &)+42p
.text:000028F0                                         ; NWindows::NFile::NDir::MyGetTempPath(UString &)+42p ...
.text:000028F0
.text:000028F0 var_4           = dword ptr -4
.text:000028F0
.text:000028F0                 push    ebp
.text:000028F1                 mov     ebp, esp
.text:000028F3                 push    ecx
.text:000028F4                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000028FB                 mov     [ebp+var_4], ecx
.text:000028FE                 mov     eax, [ebp+var_4]
.text:00002901                 mov     dword ptr [eax+4], 0
.text:00002908                 mov     ecx, [ebp+var_4]
.text:0000290B                 mov     edx, [ecx]
.text:0000290D                 xor     eax, eax
.text:0000290F                 mov     [edx], ax
.text:00002912                 mov     esp, ebp
.text:00002914                 pop     ebp
.text:00002915                 retn
.text:00002915 ?Empty@UString@@QAEXXZ endp
.text:00002915
.text:00002915 ; ---------------------------------------------------------------------------
.text:00002916                 align 4
.text:00002916 _text           ends
.text:00002916
.text:00002918 ; ===========================================================================
.text:00002918
.text:00002918 ; Segment type: Pure code
.text:00002918 ; Segment permissions: Read/Execute
.text:00002918 _text           segment para public 'CODE' use32
.text:00002918                 assume cs:_text
.text:00002918                 ;org 2918h
.text:00002918 ; COMDAT (pick any)
.text:00002918                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00002918
.text:00002918 ; =============== S U B R O U T I N E =======================================
.text:00002918
.text:00002918 ; Attributes: bp-based frame
.text:00002918
.text:00002918 ; void __thiscall NWindows::NFile::NDir::CTempFile::DisableDeleting(NWindows::NFile::NDir::CTempFile *__hidden this)
.text:00002918                 public ?DisableDeleting@CTempFile@NDir@NFile@NWindows@@AAEXXZ
.text:00002918 ?DisableDeleting@CTempFile@NDir@NFile@NWindows@@AAEXXZ proc near
.text:00002918                                         ; CODE XREF: NWindows::NFile::NDir::CTempFile::MoveTo(wchar_t const *,bool)+3Dp
.text:00002918
.text:00002918 var_4           = dword ptr -4
.text:00002918
.text:00002918                 push    ebp
.text:00002919                 mov     ebp, esp
.text:0000291B                 push    ecx
.text:0000291C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00002923                 mov     [ebp+var_4], ecx
.text:00002926                 mov     eax, [ebp+var_4]
.text:00002929                 mov     byte ptr [eax], 0
.text:0000292C                 mov     esp, ebp
.text:0000292E                 pop     ebp
.text:0000292F                 retn
.text:0000292F ?DisableDeleting@CTempFile@NDir@NFile@NWindows@@AAEXXZ endp
.text:0000292F
.text:0000292F _text           ends
.text:0000292F
UNDEF:00002930 ; ===========================================================================
UNDEF:00002930
UNDEF:00002930 ; Segment type: Externs
UNDEF:00002930 ; UNDEF
UNDEF:00002930 ; public: class UString & __thiscall UString::operator=(wchar_t const *)
UNDEF:00002930                 extrn ??4UString@@QAEAAV0@PB_W@Z:near
UNDEF:00002930                                         ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+118p
UNDEF:00002930                                         ; NWindows::NFile::NDir::GetSystemDir(UString &)+118p ...
UNDEF:00002934 ; UINT __stdcall GetWindowsDirectoryW(LPWSTR lpBuffer, UINT uSize)
UNDEF:00002934                 extrn __imp__GetWindowsDirectoryW@8:near
UNDEF:00002934                                         ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+FEp
UNDEF:00002934                                         ; DATA XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+FEr
UNDEF:00002938 ; public: class UString & __thiscall UString::operator=(class UString const &)
UNDEF:00002938                 extrn ??4UString@@QAEAAV0@ABV0@@Z:near
UNDEF:00002938                                         ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+BFp
UNDEF:00002938                                         ; NWindows::NFile::NDir::GetSystemDir(UString &)+BFp ...
UNDEF:0000293C ; struct UString __stdcall __high fas2fs(const struct AString *)
UNDEF:0000293C                 extrn ?fas2fs@@YG?AVUString@@ABVAString@@@Z:near
UNDEF:0000293C                                         ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+9Ap
UNDEF:0000293C                                         ; NWindows::NFile::NDir::GetSystemDir(UString &)+9Ap ...
UNDEF:00002940 ; _DWORD __thiscall AString::AString(AString *__hidden this, const char *)
UNDEF:00002940                 extrn ??0AString@@QAE@PBD@Z:near
UNDEF:00002940                                         ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+80p
UNDEF:00002940                                         ; NWindows::NFile::NDir::GetSystemDir(UString &)+80p ...
UNDEF:00002944 ; UINT __stdcall GetWindowsDirectoryA(LPSTR lpBuffer, UINT uSize)
UNDEF:00002944                 extrn __imp__GetWindowsDirectoryA@8:near
UNDEF:00002944                                         ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+63p
UNDEF:00002944                                         ; DATA XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+63r
UNDEF:00002948 ; bool g_IsNT
UNDEF:00002948                 extrn ?g_IsNT@@3_NA:near
UNDEF:00002948                                         ; DATA XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+3Fr
UNDEF:00002948                                         ; NWindows::NFile::NDir::GetSystemDir(UString &)+3Fr ...
UNDEF:0000294C                 extrn ___security_cookie:near
UNDEF:0000294C                                         ; DATA XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+2Br
UNDEF:0000294C                                         ; NWindows::NFile::NDir::GetSystemDir(UString &)+2Br ...
UNDEF:00002950                 extrn ___CxxFrameHandler3:near
UNDEF:00002950                                         ; CODE XREF: __ehhandler$?GetWindowsDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z+23j
UNDEF:00002950                                         ; __ehhandler$?GetSystemDir@NDir@NFile@NWindows@@YG_NAAVUString@@@Z+23j ...
UNDEF:00002954 ; __fastcall __security_check_cookie(x)
UNDEF:00002954                 extrn @__security_check_cookie@4:near
UNDEF:00002954                                         ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+16Bp
UNDEF:00002954                                         ; NWindows::NFile::NDir::GetSystemDir(UString &)+16Bp ...
UNDEF:00002958 ; __fastcall _RTC_CheckStackVars(x, x)
UNDEF:00002958                 extrn @_RTC_CheckStackVars@8:near
UNDEF:00002958                                         ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+152p
UNDEF:00002958                                         ; NWindows::NFile::NDir::GetSystemDir(UString &)+152p ...
UNDEF:0000295C                 extrn __RTC_CheckEsp:near
UNDEF:0000295C                                         ; CODE XREF: NWindows::NFile::NDir::GetWindowsDir(UString &)+6Bp
UNDEF:0000295C                                         ; NWindows::NFile::NDir::GetWindowsDir(UString &)+106p ...
UNDEF:00002960                 extrn __RTC_Shutdown:near
UNDEF:00002960                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00002964                 extrn __RTC_InitBase:near
UNDEF:00002964                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:00002968 ; void __cdecl operator delete(void *)
UNDEF:00002968                 extrn ??3@YAXPAX@Z:near ; CODE XREF: AString::~AString(void)+23p
UNDEF:00002968                                         ; UString::~UString(void)+23p
UNDEF:0000296C ; UINT __stdcall GetSystemDirectoryW(LPWSTR lpBuffer, UINT uSize)
UNDEF:0000296C                 extrn __imp__GetSystemDirectoryW@8:near
UNDEF:0000296C                                         ; CODE XREF: NWindows::NFile::NDir::GetSystemDir(UString &)+FEp
UNDEF:0000296C                                         ; DATA XREF: NWindows::NFile::NDir::GetSystemDir(UString &)+FEr
UNDEF:00002970 ; UINT __stdcall GetSystemDirectoryA(LPSTR lpBuffer, UINT uSize)
UNDEF:00002970                 extrn __imp__GetSystemDirectoryA@8:near
UNDEF:00002970                                         ; CODE XREF: NWindows::NFile::NDir::GetSystemDir(UString &)+63p
UNDEF:00002970                                         ; DATA XREF: NWindows::NFile::NDir::GetSystemDir(UString &)+63r
UNDEF:00002974 ; BOOL __stdcall CloseHandle(HANDLE hObject)
UNDEF:00002974                 extrn __imp__CloseHandle@4:near
UNDEF:00002974                                         ; CODE XREF: NWindows::NFile::NDir::SetDirTime(wchar_t const *,_FILETIME const *,_FILETIME const *,_FILETIME const *)+9Cp
UNDEF:00002974                                         ; DATA XREF: NWindows::NFile::NDir::SetDirTime(wchar_t const *,_FILETIME const *,_FILETIME const *,_FILETIME const *)+9Cr
UNDEF:00002978 ; BOOL __stdcall SetFileTime(HANDLE hFile, const FILETIME *lpCreationTime, const FILETIME *lpLastAccessTime, const FILETIME *lpLastWriteTime)
UNDEF:00002978                 extrn __imp__SetFileTime@16:near
UNDEF:00002978                                         ; CODE XREF: NWindows::NFile::NDir::SetDirTime(wchar_t const *,_FILETIME const *,_FILETIME const *,_FILETIME const *)+80p
UNDEF:00002978                                         ; DATA XREF: NWindows::NFile::NDir::SetDirTime(wchar_t const *,_FILETIME const *,_FILETIME const *,_FILETIME const *)+80r
UNDEF:0000297C ; HANDLE __stdcall CreateFileW(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
UNDEF:0000297C                 extrn __imp__CreateFileW@28:near
UNDEF:0000297C                                         ; CODE XREF: NWindows::NFile::NDir::SetDirTime(wchar_t const *,_FILETIME const *,_FILETIME const *,_FILETIME const *)+54p
UNDEF:0000297C                                         ; DATA XREF: NWindows::NFile::NDir::SetDirTime(wchar_t const *,_FILETIME const *,_FILETIME const *,_FILETIME const *)+54r
UNDEF:00002980 ; void __stdcall SetLastError(DWORD dwErrCode)
UNDEF:00002980                 extrn __imp__SetLastError@4:near
UNDEF:00002980                                         ; CODE XREF: NWindows::NFile::NDir::SetDirTime(wchar_t const *,_FILETIME const *,_FILETIME const *,_FILETIME const *)+24p
UNDEF:00002980                                         ; NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+1Cp ...
UNDEF:00002984 ; BOOL __stdcall SetFileAttributesW(LPCWSTR lpFileName, DWORD dwFileAttributes)
UNDEF:00002984                 extrn __imp__SetFileAttributesW@8:near
UNDEF:00002984                                         ; CODE XREF: NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+A9p
UNDEF:00002984                                         ; DATA XREF: NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+A9r
UNDEF:00002988 ; BOOL __stdcall SetFileAttributesA(LPCSTR lpFileName, DWORD dwFileAttributes)
UNDEF:00002988                 extrn __imp__SetFileAttributesA@8:near
UNDEF:00002988                                         ; CODE XREF: NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+74p
UNDEF:00002988                                         ; DATA XREF: NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+74r
UNDEF:0000298C ; struct AString __stdcall __high fs2fas(const wchar_t *)
UNDEF:0000298C                 extrn ?fs2fas@@YG?AVAString@@PB_W@Z:near
UNDEF:0000298C                                         ; CODE XREF: NWindows::NFile::NDir::SetFileAttrib(wchar_t const *,ulong)+56p
UNDEF:0000298C                                         ; NWindows::NFile::NDir::RemoveDir(wchar_t const *)+50p ...
UNDEF:00002990 ; BOOL __stdcall RemoveDirectoryW(LPCWSTR lpPathName)
UNDEF:00002990                 extrn __imp__RemoveDirectoryW@4:near
UNDEF:00002990                                         ; CODE XREF: NWindows::NFile::NDir::RemoveDir(wchar_t const *)+A1p
UNDEF:00002990                                         ; DATA XREF: NWindows::NFile::NDir::RemoveDir(wchar_t const *)+A1r
UNDEF:00002994 ; BOOL __stdcall RemoveDirectoryA(LPCSTR lpPathName)
UNDEF:00002994                 extrn __imp__RemoveDirectoryA@4:near
UNDEF:00002994                                         ; CODE XREF: NWindows::NFile::NDir::RemoveDir(wchar_t const *)+70p
UNDEF:00002994                                         ; DATA XREF: NWindows::NFile::NDir::RemoveDir(wchar_t const *)+70r
UNDEF:00002998 ; BOOL __stdcall MoveFileW(LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName)
UNDEF:00002998                 extrn __imp__MoveFileW@8:near
UNDEF:00002998                                         ; CODE XREF: NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *)+D1p
UNDEF:00002998                                         ; DATA XREF: NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *)+D1r
UNDEF:0000299C ; BOOL __stdcall MoveFileA(LPCSTR lpExistingFileName, LPCSTR lpNewFileName)
UNDEF:0000299C                 extrn __imp__MoveFileA@8:near
UNDEF:0000299C                                         ; CODE XREF: NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *)+90p
UNDEF:0000299C                                         ; DATA XREF: NWindows::NFile::NDir::MyMoveFile(wchar_t const *,wchar_t const *)+90r
UNDEF:000029A0 ; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
UNDEF:000029A0                 extrn __imp__GetProcAddress@8:near
UNDEF:000029A0                                         ; CODE XREF: NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+4Bp
UNDEF:000029A0                                         ; DATA XREF: NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+4Br
UNDEF:000029A4 ; HMODULE __stdcall GetModuleHandleW(LPCWSTR lpModuleName)
UNDEF:000029A4                 extrn __imp__GetModuleHandleW@4:near
UNDEF:000029A4                                         ; CODE XREF: NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+3Dp
UNDEF:000029A4                                         ; DATA XREF: NWindows::NFile::NDir::MyCreateHardLink(wchar_t const *,wchar_t const *)+3Dr
UNDEF:000029A8 ; BOOL __stdcall CreateDirectoryW(LPCWSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
UNDEF:000029A8                 extrn __imp__CreateDirectoryW@8:near
UNDEF:000029A8                                         ; CODE XREF: NWindows::NFile::NDir::CreateDir(wchar_t const *)+A5p
UNDEF:000029A8                                         ; NWindows::NFile::NDir::CreateDir2(wchar_t const *)+A1p
UNDEF:000029A8                                         ; DATA XREF: ...
UNDEF:000029AC ; BOOL __stdcall CreateDirectoryA(LPCSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
UNDEF:000029AC                 extrn __imp__CreateDirectoryA@8:near
UNDEF:000029AC                                         ; CODE XREF: NWindows::NFile::NDir::CreateDir(wchar_t const *)+72p
UNDEF:000029AC                                         ; NWindows::NFile::NDir::CreateDir2(wchar_t const *)+6Bp
UNDEF:000029AC                                         ; DATA XREF: ...
UNDEF:000029B0 ; void __thiscall UString::SetFrom(UString *__hidden this, const wchar_t *, unsigned int)
UNDEF:000029B0                 extrn ?SetFrom@UString@@QAEXPB_WI@Z:near
UNDEF:000029B0                                         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+277p
UNDEF:000029B4 ; int NWindows::NFile::NName::FindSepar(NWindows::NFile::NName *__hidden this, const wchar_t *)
UNDEF:000029B4                 extrn ?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z:near
UNDEF:000029B4                                         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+23Fp
UNDEF:000029B8 ; DWORD __stdcall GetLastError()
UNDEF:000029B8                 extrn __imp__GetLastError@0:near
UNDEF:000029B8                                         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+115p
UNDEF:000029B8                                         ; NWindows::NFile::NDir::CreateDir2(wchar_t const *)+B8p ...
UNDEF:000029BC ; public: __thiscall UString::UString(class UString const &)
UNDEF:000029BC                 extrn ??0UString@@QAE@ABV0@@Z:near
UNDEF:000029BC                                         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+E5p
UNDEF:000029BC                                         ; NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+101p ...
UNDEF:000029C0 ; int __thiscall UString::ReverseFind_PathSepar(UString *__hidden this)
UNDEF:000029C0                 extrn ?ReverseFind_PathSepar@UString@@QBEHXZ:near
UNDEF:000029C0                                         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+90p
UNDEF:000029C0                                         ; NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+153p ...
UNDEF:000029C4 ; public: __thiscall UString::UString(wchar_t const *)
UNDEF:000029C4                 extrn ??0UString@@QAE@PB_W@Z:near
UNDEF:000029C4                                         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+81p
UNDEF:000029C8 ; unsigned int NWindows::NFile::NName::GetRootPrefixSize(NWindows::NFile::NName *__hidden this, const wchar_t *)
UNDEF:000029C8                 extrn ?GetRootPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z:near
UNDEF:000029C8                                         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+72p
UNDEF:000029CC ; bool NWindows::NFile::NName::IsDriveRootPath_SuperAllowed(NWindows::NFile::NName *__hidden this, const wchar_t *)
UNDEF:000029CC                 extrn ?IsDriveRootPath_SuperAllowed@NName@NFile@NWindows@@YG_NPB_W@Z:near
UNDEF:000029CC                                         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+5Bp
UNDEF:000029D0 ; unsigned __int32 NWindows::NFile::NFind::GetFileAttrib(NWindows::NFile::NFind *__hidden this, const wchar_t *)
UNDEF:000029D0                 extrn ?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z:near
UNDEF:000029D0                                         ; CODE XREF: NWindows::NFile::NDir::CreateComplexDir(wchar_t const *)+3Ap
UNDEF:000029D0                                         ; NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+44p
UNDEF:000029D4 ; bool __thiscall NWindows::NFile::NFind::CFileInfo::Find(NWindows::NFile::NFind::CFileInfo *__hidden this, const wchar_t *)
UNDEF:000029D4                 extrn ?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z:near
UNDEF:000029D4                                         ; CODE XREF: NWindows::NFile::NDir::CreateDir2(wchar_t const *)+E6p
UNDEF:000029D4                                         ; NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+5Bp
UNDEF:000029D8 ; public: __thiscall UString::UString(void)
UNDEF:000029D8                 extrn ??0UString@@QAE@XZ:near
UNDEF:000029D8                                         ; CODE XREF: NWindows::NFile::NDir::GetOnlyDirPrefix(wchar_t const *,UString &)+3Fp
UNDEF:000029D8                                         ; NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+53p ...
UNDEF:000029DC ; void __thiscall NWindows::NFile::NFind::CFileInfoBase::ClearBase(NWindows::NFile::NFind::CFileInfoBase *__hidden this)
UNDEF:000029DC                 extrn ?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ:near
UNDEF:000029DC                                         ; CODE XREF: NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase(void)+11p
UNDEF:000029E0 ; BOOL __stdcall DeleteFileW(LPCWSTR lpFileName)
UNDEF:000029E0                 extrn __imp__DeleteFileW@4:near
UNDEF:000029E0                                         ; CODE XREF: NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+E1p
UNDEF:000029E0                                         ; DATA XREF: NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+E1r
UNDEF:000029E4 ; BOOL __stdcall DeleteFileA(LPCSTR lpFileName)
UNDEF:000029E4                 extrn __imp__DeleteFileA@4:near
UNDEF:000029E4                                         ; CODE XREF: NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+B0p
UNDEF:000029E4                                         ; DATA XREF: NWindows::NFile::NDir::DeleteFileAlways(wchar_t const *)+B0r
UNDEF:000029E8 ; public: class UString & __thiscall UString::operator+=(class UString const &)
UNDEF:000029E8                 extrn ??YUString@@QAEAAV0@ABV0@@Z:near
UNDEF:000029E8                                         ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+179p
UNDEF:000029EC ; bool __thiscall NWindows::NFile::NFind::CEnumerator::Next(NWindows::NFile::NFind::CEnumerator *__hidden this, struct NWindows::NFile::NFind::CFileInfo *)
UNDEF:000029EC                 extrn ?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@@Z:near
UNDEF:000029EC                                         ; CODE XREF: NWindows::NFile::NDir::RemoveDirWithSubItems(UString const &)+153p
UNDEF:000029F0 ; void __thiscall UString::Grow_1(UString *__hidden this)
UNDEF:000029F0                 extrn ?Grow_1@UString@@AAEXXZ:near
UNDEF:000029F0                                         ; CODE XREF: UString::operator+=(wchar_t)+2Fp
UNDEF:000029F4 ; bool __thiscall NWindows::NFile::NFind::CFindFileBase::Close(NWindows::NFile::NFind::CFindFileBase *__hidden this)
UNDEF:000029F4                 extrn ?Close@CFindFileBase@NFind@NFile@NWindows@@QAE_NXZ:near
UNDEF:000029F4                                         ; CODE XREF: NWindows::NFile::NFind::CFindFileBase::~CFindFileBase(void)+11p
UNDEF:000029F8 ; bool NWindows::NFile::NName::GetFullPath(NWindows::NFile::NName *__hidden this, const wchar_t *, struct UString *)
UNDEF:000029F8                 extrn ?GetFullPath@NName@NFile@NWindows@@YG_NPB_WAAVUString@@@Z:near
UNDEF:000029F8                                         ; CODE XREF: NWindows::NFile::NDir::MyGetFullPathName(wchar_t const *,UString &)+Bp
UNDEF:000029FC ; BOOL __stdcall SetCurrentDirectoryW(LPCWSTR lpPathName)
UNDEF:000029FC                 extrn __imp__SetCurrentDirectoryW@4:near
UNDEF:000029FC                                         ; CODE XREF: NWindows::NFile::NDir::SetCurrentDir(wchar_t const *)+A2p
UNDEF:000029FC                                         ; DATA XREF: NWindows::NFile::NDir::SetCurrentDir(wchar_t const *)+A2r
UNDEF:00002A00 ; BOOL __stdcall SetCurrentDirectoryA(LPCSTR lpPathName)
UNDEF:00002A00                 extrn __imp__SetCurrentDirectoryA@4:near
UNDEF:00002A00                                         ; CODE XREF: NWindows::NFile::NDir::SetCurrentDir(wchar_t const *)+70p
UNDEF:00002A00                                         ; DATA XREF: NWindows::NFile::NDir::SetCurrentDir(wchar_t const *)+70r
UNDEF:00002A04 ; DWORD __stdcall GetCurrentDirectoryW(DWORD nBufferLength, LPWSTR lpBuffer)
UNDEF:00002A04                 extrn __imp__GetCurrentDirectoryW@8:near
UNDEF:00002A04                                         ; CODE XREF: NWindows::NFile::NDir::GetCurrentDir(UString &)+106p
UNDEF:00002A04                                         ; DATA XREF: NWindows::NFile::NDir::GetCurrentDir(UString &)+106r
UNDEF:00002A08 ; DWORD __stdcall GetCurrentDirectoryA(DWORD nBufferLength, LPSTR lpBuffer)
UNDEF:00002A08                 extrn __imp__GetCurrentDirectoryA@8:near
UNDEF:00002A08                                         ; CODE XREF: NWindows::NFile::NDir::GetCurrentDir(UString &)+6Bp
UNDEF:00002A08                                         ; DATA XREF: NWindows::NFile::NDir::GetCurrentDir(UString &)+6Br
UNDEF:00002A0C ; DWORD __stdcall GetTempPathW(DWORD nBufferLength, LPWSTR lpBuffer)
UNDEF:00002A0C                 extrn __imp__GetTempPathW@8:near
UNDEF:00002A0C                                         ; CODE XREF: NWindows::NFile::NDir::MyGetTempPath(UString &)+106p
UNDEF:00002A0C                                         ; DATA XREF: NWindows::NFile::NDir::MyGetTempPath(UString &)+106r
UNDEF:00002A10 ; DWORD __stdcall GetTempPathA(DWORD nBufferLength, LPSTR lpBuffer)
UNDEF:00002A10                 extrn __imp__GetTempPathA@8:near
UNDEF:00002A10                                         ; CODE XREF: NWindows::NFile::NDir::MyGetTempPath(UString &)+6Bp
UNDEF:00002A10                                         ; DATA XREF: NWindows::NFile::NDir::MyGetTempPath(UString &)+6Br
UNDEF:00002A14 ; bool __thiscall NWindows::NFile::NIO::COutFile::Create(NWindows::NFile::NIO::COutFile *__hidden this, const wchar_t *, bool)
UNDEF:00002A14                 extrn ?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z:near
UNDEF:00002A14                                         ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+18Fp
UNDEF:00002A18 ; bool NWindows::NFile::NFind::DoesFileOrDirExist(NWindows::NFile::NFind *__hidden this, const wchar_t *)
UNDEF:00002A18                 extrn ?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z:near
UNDEF:00002A18                                         ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+156p
UNDEF:00002A1C ; public: class UString & __thiscall UString::operator+=(wchar_t const *)
UNDEF:00002A1C                 extrn ??YUString@@QAEAAV0@PB_W@Z:near
UNDEF:00002A1C                                         ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+10Ap
UNDEF:00002A1C                                         ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+148p
UNDEF:00002A20 ; DWORD __stdcall GetCurrentProcessId()
UNDEF:00002A20                 extrn __imp__GetCurrentProcessId@0:near
UNDEF:00002A20                                         ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+4Bp
UNDEF:00002A20                                         ; DATA XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+4Br
UNDEF:00002A24 ; DWORD __stdcall GetCurrentThreadId()
UNDEF:00002A24                 extrn __imp__GetCurrentThreadId@0:near
UNDEF:00002A24                                         ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+37p
UNDEF:00002A24                                         ; DATA XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+37r
UNDEF:00002A28 ; DWORD __stdcall GetTickCount()
UNDEF:00002A28                 extrn __imp__GetTickCount@0:near
UNDEF:00002A28                                         ; CODE XREF: NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+23p
UNDEF:00002A28                                         ; NWindows::NFile::NDir::CreateTempFile(wchar_t const *,bool,UString &,NWindows::NFile::NIO::COutFile *)+111p
UNDEF:00002A28                                         ; DATA XREF: ...
UNDEF:00002A2C ; class UString __stdcall operator+(class UString const &, wchar_t const *)
UNDEF:00002A2C                 extrn ??H@YG?AVUString@@ABV0@PB_W@Z:near
UNDEF:00002A2C                                         ; CODE XREF: NWindows::NFile::NDir::CTempFile::CreateRandomInTempFolder(wchar_t const *,NWindows::NFile::NIO::COutFile *)+A3p
UNDEF:00002A2C                                         ; NWindows::NFile::NDir::CTempDir::Create(wchar_t const *)+A1p
UNDEF:00002A30 ; bool NWindows::NFile::NFind::DoesFileExist(NWindows::NFile::NFind *__hidden this, const wchar_t *)
UNDEF:00002A30                 extrn ?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z:near
UNDEF:00002A30                                         ; CODE XREF: NWindows::NFile::NDir::CTempFile::MoveTo(wchar_t const *,bool)+1Ap
UNDEF:00002A30
UNDEF:00002A30
UNDEF:00002A30                 end
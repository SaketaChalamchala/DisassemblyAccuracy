.text:00000000 ;
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.text:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.text:00000000 ; |                      License info: 48-3677-7074-51                      |
.text:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ;
.text:00000000 ; Input MD5   : E6378DCFD14C240C83C8697C41CD1713
.text:00000000 ; Input CRC32 : 530902A7
.text:00000000
.text:00000000 ; File Name   : C:\workspace\7z1505-src\CPP\7zip\Bundles\Alone\Debug\LzOutWindow.obj
.text:00000000 ; Format      : COFF (X386MAGIC)
.text:00000000 ; includelib "uuid.lib"
.text:00000000 ; includelib "MSVCRTD"
.text:00000000 ; includelib "OLDNAMES"
.text:00000000
.text:00000000                 .686p
.text:00000000                 .mmx
.text:00000000                 .model flat
.text:00000000
.text:00000000 ; ===========================================================================
.text:00000000
.text:00000000 ; Segment type: Pure code
.text:00000000 ; Segment permissions: Read/Execute
.text:00000000 _text           segment para public 'CODE' use32
.text:00000000                 assume cs:_text
.text:00000000                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:00000000
.text:00000000 ; =============== S U B R O U T I N E =======================================
.text:00000000
.text:00000000 ; Attributes: bp-based frame
.text:00000000
.text:00000000 ; void __thiscall CLzOutWindow::Init(CLzOutWindow *this, bool)
.text:00000000                 public ?Init@CLzOutWindow@@QAEX_N@Z
.text:00000000 ?Init@CLzOutWindow@@QAEX_N@Z proc near
.text:00000000
.text:00000000 var_4           = dword ptr -4
.text:00000000 arg_0           = byte ptr  8
.text:00000000
.text:00000000                 push    ebp
.text:00000001                 mov     ebp, esp
.text:00000003                 push    ecx
.text:00000004                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000000B                 mov     [ebp+var_4], ecx
.text:0000000E                 movzx   eax, [ebp+arg_0]
.text:00000012                 test    eax, eax
.text:00000014                 jnz     short loc_1E
.text:00000016                 mov     ecx, [ebp+var_4] ; this
.text:00000019                 call    ?Init@COutBuffer@@QAEXXZ ; COutBuffer::Init(void)
.text:0000001E
.text:0000001E loc_1E:                                 ; CODE XREF: CLzOutWindow::Init(bool)+14j
.text:0000001E                 add     esp, 4
.text:00000021                 cmp     ebp, esp
.text:00000023                 call    __RTC_CheckEsp
.text:00000028                 mov     esp, ebp
.text:0000002A                 pop     ebp
.text:0000002B                 retn    4
.text:0000002B ?Init@CLzOutWindow@@QAEX_N@Z endp
.text:0000002B
.text:0000002B ; ---------------------------------------------------------------------------
.text:0000002E                 align 10h
.text:0000002E _text           ends
.text:0000002E
.rtc$TMZ:00000030 ; ===========================================================================
.rtc$TMZ:00000030
.rtc$TMZ:00000030 ; Segment type: Pure data
.rtc$TMZ:00000030 ; Segment permissions: Read
.rtc$TMZ:00000030 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00000030                 assume cs:_rtc$TMZ
.rtc$TMZ:00000030                 ;org 30h
.rtc$TMZ:00000030 ; COMDAT (pick any)
.rtc$TMZ:00000030 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00000030 _rtc$TMZ        ends
.rtc$TMZ:00000030
.rtc$IMZ:00000034 ; ===========================================================================
.rtc$IMZ:00000034
.rtc$IMZ:00000034 ; Segment type: Pure data
.rtc$IMZ:00000034 ; Segment permissions: Read
.rtc$IMZ:00000034 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00000034                 assume cs:_rtc$IMZ
.rtc$IMZ:00000034                 ;org 34h
.rtc$IMZ:00000034 ; COMDAT (pick any)
.rtc$IMZ:00000034 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00000034 _rtc$IMZ        ends
.rtc$IMZ:00000034
UNDEF:00000040 ; ===========================================================================
UNDEF:00000040
UNDEF:00000040 ; Segment type: Externs
UNDEF:00000040 ; UNDEF
UNDEF:00000040 ; void __thiscall COutBuffer::Init(COutBuffer *__hidden this)
UNDEF:00000040                 extrn ?Init@COutBuffer@@QAEXXZ:near
UNDEF:00000040                                         ; CODE XREF: CLzOutWindow::Init(bool)+19p
UNDEF:00000044                 extrn __RTC_CheckEsp:near
UNDEF:00000044                                         ; CODE XREF: CLzOutWindow::Init(bool)+23p
UNDEF:00000048                 extrn __RTC_Shutdown:near
UNDEF:00000048                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:0000004C                 extrn __RTC_InitBase:near
UNDEF:0000004C                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:0000004C
UNDEF:0000004C
UNDEF:0000004C                 end
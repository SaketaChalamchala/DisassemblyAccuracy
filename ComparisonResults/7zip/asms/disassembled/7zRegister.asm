.rdata:00000000 ;
.rdata:00000000 ; +-------------------------------------------------------------------------+
.rdata:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.rdata:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.rdata:00000000 ; |                      License info: 48-3677-7074-51                      |
.rdata:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.rdata:00000000 ; +-------------------------------------------------------------------------+
.rdata:00000000 ;
.rdata:00000000 ; Input MD5   : D81F901B6DC2B5E3B907121D9168ACB4
.rdata:00000000 ; Input CRC32 : DCA45D1F
.rdata:00000000
.rdata:00000000 ; File Name   : C:\workspace\7z1505-src\CPP\7zip\Bundles\Alone\Debug\7zRegister.obj
.rdata:00000000 ; Format      : COFF (X386MAGIC)
.rdata:00000000 ; includelib "uuid.lib"
.rdata:00000000 ; includelib "MSVCRTD"
.rdata:00000000 ; includelib "OLDNAMES"
.rdata:00000000
.rdata:00000000                 .686p
.rdata:00000000                 .mmx
.rdata:00000000                 .model flat
.rdata:00000000
.rdata:00000000 ; ===========================================================================
.rdata:00000000
.rdata:00000000 ; Segment type: Pure data
.rdata:00000000 ; Segment permissions: Read
.rdata:00000000 _rdata          segment dword public 'DATA' use32
.rdata:00000000                 assume cs:_rdata
.rdata:00000000 $SG70775        db  37h ; 7             ; DATA XREF: .rdata:00000014o
.rdata:00000001                 db  7Ah ; z
.rdata:00000002                 db    0
.rdata:00000003                 db    0
.rdata:00000004 $SG70776        db  37h ; 7             ; DATA XREF: .rdata:00000018o
.rdata:00000005                 db  7Ah ; z
.rdata:00000006                 db    0
.rdata:00000007                 db    0
.rdata:00000008 ; struct CArcInfo g_ArcInfo
.rdata:00000008 _g_ArcInfo      db    8                 ; DATA XREF: NArchive::N7z::CRegisterArcDecSig::CRegisterArcDecSig(void)+1Ao
.rdata:00000009                 db    0
.rdata:0000000A                 db    7
.rdata:0000000B                 db    6
.rdata:0000000C                 db    0
.rdata:0000000D                 db    0
.rdata:0000000E                 db    0
.rdata:0000000F                 db    0
.rdata:00000010                 dd offset _k_Signature_Dec
.rdata:00000014                 dd offset $SG70775
.rdata:00000018                 dd offset $SG70776
.rdata:0000001C                 align 10h
.rdata:00000020                 dd offset ?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ ; NArchive::N7z::CreateArc(void)
.rdata:00000024                 dd offset ?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ ; NArchive::N7z::CreateArcOut(void)
.rdata:00000028                 db    0
.rdata:00000029                 db    0
.rdata:0000002A                 db    0
.rdata:0000002B                 db    0
.rdata:0000002B _rdata          ends
.rdata:0000002B
.data:0000002C ; ===========================================================================
.data:0000002C
.data:0000002C ; Segment type: Pure data
.data:0000002C ; Segment permissions: Read/Write
.data:0000002C _data           segment dword public 'DATA' use32
.data:0000002C                 assume cs:_data
.data:0000002C                 ;org 2Ch
.data:0000002C _k_Signature_Dec db 38h                 ; DATA XREF: .rdata:00000010o
.data:0000002C                                         ; NArchive::N7z::CRegisterArcDecSig::CRegisterArcDecSig(void)+Er ...
.data:0000002D                 db  7Ah ; z
.data:0000002E                 db 0BCh ; +
.data:0000002F                 db 0AFh ; Â»
.data:00000030                 db  27h ; '
.data:00000031                 db  1Ch
.data:00000032                 align 4
.data:00000032 _data           ends
.data:00000032
.text:00000034 ; ===========================================================================
.text:00000034
.text:00000034 ; Segment type: Pure code
.text:00000034 ; Segment permissions: Read/Execute
.text:00000034 _text           segment para public 'CODE' use32
.text:00000034                 assume cs:_text
.text:00000034                 ;org 34h
.text:00000034                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00000034
.text:00000034 ; =============== S U B R O U T I N E =======================================
.text:00000034
.text:00000034 ; Attributes: bp-based frame
.text:00000034
.text:00000034 ; struct IInArchive * __stdcall NArchive::N7z::CreateArc(void)
.text:00000034 ?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ proc near
.text:00000034                                         ; DATA XREF: .rdata:00000020o
.text:00000034
.text:00000034 var_18          = dword ptr -18h
.text:00000034 var_14          = dword ptr -14h
.text:00000034 var_10          = dword ptr -10h
.text:00000034 var_C           = dword ptr -0Ch
.text:00000034 var_4           = dword ptr -4
.text:00000034
.text:00000034                 push    ebp
.text:00000035                 mov     ebp, esp
.text:00000037                 push    0FFFFFFFFh
.text:00000039                 push    offset __ehhandler$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ
.text:0000003E                 mov     eax, large fs:0
.text:00000044                 push    eax
.text:00000045                 sub     esp, 0Ch
.text:00000048                 mov     [ebp+var_18], 0CCCCCCCCh
.text:0000004F                 mov     [ebp+var_14], 0CCCCCCCCh
.text:00000056                 mov     [ebp+var_10], 0CCCCCCCCh
.text:0000005D                 mov     eax, dword ptr ds:___security_cookie
.text:00000062                 xor     eax, ebp
.text:00000064                 push    eax
.text:00000065                 lea     eax, [ebp+var_C]
.text:00000068                 mov     large fs:0, eax
.text:0000006E                 push    1F0h            ; unsigned int
.text:00000073                 call    ??2@YAPAXI@Z    ; operator new(uint)
.text:00000078                 add     esp, 4
.text:0000007B                 mov     [ebp+var_14], eax
.text:0000007E                 mov     [ebp+var_4], 0
.text:00000085                 cmp     [ebp+var_14], 0
.text:00000089                 jz      short loc_98
.text:0000008B                 mov     ecx, [ebp+var_14] ; this
.text:0000008E                 call    ??0CHandler@N7z@NArchive@@QAE@XZ ; NArchive::N7z::CHandler::CHandler(void)
.text:00000093                 mov     [ebp+var_18], eax
.text:00000096                 jmp     short loc_9F
.text:00000098 ; ---------------------------------------------------------------------------
.text:00000098
.text:00000098 loc_98:                                 ; CODE XREF: NArchive::N7z::CreateArc(void)+55j
.text:00000098                 mov     [ebp+var_18], 0
.text:0000009F
.text:0000009F loc_9F:                                 ; CODE XREF: NArchive::N7z::CreateArc(void)+62j
.text:0000009F                 mov     eax, [ebp+var_18]
.text:000000A2                 mov     [ebp+var_10], eax
.text:000000A5                 mov     [ebp+var_4], 0FFFFFFFFh
.text:000000AC                 mov     eax, [ebp+var_10]
.text:000000AF                 mov     ecx, [ebp+var_C]
.text:000000B2                 mov     large fs:0, ecx
.text:000000B9                 pop     ecx
.text:000000BA                 add     esp, 18h
.text:000000BD                 cmp     ebp, esp
.text:000000BF                 call    __RTC_CheckEsp
.text:000000C4                 mov     esp, ebp
.text:000000C6                 pop     ebp
.text:000000C7                 retn
.text:000000C7 ?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ endp
.text:000000C7
.text:000000C7 ; ---------------------------------------------------------------------------
.text:000000C8                 db 0Ch dup(0CCh)
.text:000000D4
.text:000000D4 ; =============== S U B R O U T I N E =======================================
.text:000000D4
.text:000000D4 ; Attributes: bp-based frame
.text:000000D4
.text:000000D4 ; struct IOutArchive * __stdcall NArchive::N7z::CreateArcOut(void)
.text:000000D4 ?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ proc near
.text:000000D4                                         ; DATA XREF: .rdata:00000024o
.text:000000D4
.text:000000D4 var_1C          = dword ptr -1Ch
.text:000000D4 var_18          = dword ptr -18h
.text:000000D4 var_14          = dword ptr -14h
.text:000000D4 var_10          = dword ptr -10h
.text:000000D4 var_C           = dword ptr -0Ch
.text:000000D4 var_4           = dword ptr -4
.text:000000D4
.text:000000D4                 push    ebp
.text:000000D5                 mov     ebp, esp
.text:000000D7                 push    0FFFFFFFFh
.text:000000D9                 push    offset __ehhandler$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ
.text:000000DE                 mov     eax, large fs:0
.text:000000E4                 push    eax
.text:000000E5                 sub     esp, 10h
.text:000000E8                 mov     eax, 0CCCCCCCCh
.text:000000ED                 mov     [ebp+var_1C], eax
.text:000000F0                 mov     [ebp+var_18], eax
.text:000000F3                 mov     [ebp+var_14], eax
.text:000000F6                 mov     [ebp+var_10], eax
.text:000000F9                 mov     eax, dword ptr ds:___security_cookie
.text:000000FE                 xor     eax, ebp
.text:00000100                 push    eax
.text:00000101                 lea     eax, [ebp+var_C]
.text:00000104                 mov     large fs:0, eax
.text:0000010A                 push    1F0h            ; unsigned int
.text:0000010F                 call    ??2@YAPAXI@Z    ; operator new(uint)
.text:00000114                 add     esp, 4
.text:00000117                 mov     [ebp+var_14], eax
.text:0000011A                 mov     [ebp+var_4], 0
.text:00000121                 cmp     [ebp+var_14], 0
.text:00000125                 jz      short loc_134
.text:00000127                 mov     ecx, [ebp+var_14] ; this
.text:0000012A                 call    ??0CHandler@N7z@NArchive@@QAE@XZ ; NArchive::N7z::CHandler::CHandler(void)
.text:0000012F                 mov     [ebp+var_18], eax
.text:00000132                 jmp     short loc_13B
.text:00000134 ; ---------------------------------------------------------------------------
.text:00000134
.text:00000134 loc_134:                                ; CODE XREF: NArchive::N7z::CreateArcOut(void)+51j
.text:00000134                 mov     [ebp+var_18], 0
.text:0000013B
.text:0000013B loc_13B:                                ; CODE XREF: NArchive::N7z::CreateArcOut(void)+5Ej
.text:0000013B                 mov     eax, [ebp+var_18]
.text:0000013E                 mov     [ebp+var_10], eax
.text:00000141                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00000148                 cmp     [ebp+var_10], 0
.text:0000014C                 jz      short loc_159
.text:0000014E                 mov     ecx, [ebp+var_10]
.text:00000151                 add     ecx, 0Ch
.text:00000154                 mov     [ebp+var_1C], ecx
.text:00000157                 jmp     short loc_160
.text:00000159 ; ---------------------------------------------------------------------------
.text:00000159
.text:00000159 loc_159:                                ; CODE XREF: NArchive::N7z::CreateArcOut(void)+78j
.text:00000159                 mov     [ebp+var_1C], 0
.text:00000160
.text:00000160 loc_160:                                ; CODE XREF: NArchive::N7z::CreateArcOut(void)+83j
.text:00000160                 mov     eax, [ebp+var_1C]
.text:00000163                 mov     ecx, [ebp+var_C]
.text:00000166                 mov     large fs:0, ecx
.text:0000016D                 pop     ecx
.text:0000016E                 add     esp, 1Ch
.text:00000171                 cmp     ebp, esp
.text:00000173                 call    __RTC_CheckEsp
.text:00000178                 mov     esp, ebp
.text:0000017A                 pop     ebp
.text:0000017B                 retn
.text:0000017B ?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ endp
.text:0000017B
.text:0000017B _text           ends
.text:0000017B
.text$x:0000017C ; ===========================================================================
.text$x:0000017C
.text$x:0000017C ; Segment type: Pure code
.text$x:0000017C ; Segment permissions: Read/Execute
.text$x:0000017C _text$x         segment para public 'CODE' use32
.text$x:0000017C                 assume cs:_text$x
.text$x:0000017C                 ;org 17Ch
.text$x:0000017C                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$x:0000017C
.text$x:0000017C ; =============== S U B R O U T I N E =======================================
.text$x:0000017C
.text$x:0000017C
.text$x:0000017C __unwindfunclet$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ$0 proc near
.text$x:0000017C                                         ; DATA XREF: .xdata$x:000001CCo
.text$x:0000017C                 mov     eax, [ebp-14h]
.text$x:0000017F                 push    eax             ; void *
.text$x:00000180                 call    ??3@YAXPAX@Z    ; operator delete(void *)
.text$x:00000185                 pop     ecx
.text$x:00000186                 retn
.text$x:00000186 __unwindfunclet$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ$0 endp
.text$x:00000186
.text$x:00000187
.text$x:00000187 ; =============== S U B R O U T I N E =======================================
.text$x:00000187
.text$x:00000187
.text$x:00000187 __ehhandler$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ proc near
.text$x:00000187                                         ; DATA XREF: NArchive::N7z::CreateArc(void)+5o
.text$x:00000187
.text$x:00000187 arg_4           = dword ptr  8
.text$x:00000187
.text$x:00000187                 mov     edx, [esp+arg_4]
.text$x:0000018B                 lea     eax, [edx+0Ch]
.text$x:0000018E                 mov     ecx, [edx-10h]
.text$x:00000191                 xor     ecx, eax
.text$x:00000193                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00000198                 mov     eax, offset __ehfuncinfo$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ
.text$x:0000019D                 jmp     ___CxxFrameHandler3
.text$x:0000019D __ehhandler$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ endp
.text$x:0000019D
.text$x:000001A2
.text$x:000001A2 ; =============== S U B R O U T I N E =======================================
.text$x:000001A2
.text$x:000001A2
.text$x:000001A2 __unwindfunclet$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ$0 proc near
.text$x:000001A2                                         ; DATA XREF: .xdata$x:000001F8o
.text$x:000001A2                 mov     eax, [ebp-14h]
.text$x:000001A5                 push    eax             ; void *
.text$x:000001A6                 call    ??3@YAXPAX@Z    ; operator delete(void *)
.text$x:000001AB                 pop     ecx
.text$x:000001AC                 retn
.text$x:000001AC __unwindfunclet$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ$0 endp
.text$x:000001AC
.text$x:000001AD
.text$x:000001AD ; =============== S U B R O U T I N E =======================================
.text$x:000001AD
.text$x:000001AD
.text$x:000001AD __ehhandler$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ proc near
.text$x:000001AD                                         ; DATA XREF: NArchive::N7z::CreateArcOut(void)+5o
.text$x:000001AD
.text$x:000001AD arg_4           = dword ptr  8
.text$x:000001AD
.text$x:000001AD                 mov     edx, [esp+arg_4]
.text$x:000001B1                 lea     eax, [edx+0Ch]
.text$x:000001B4                 mov     ecx, [edx-14h]
.text$x:000001B7                 xor     ecx, eax
.text$x:000001B9                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:000001BE                 mov     eax, offset __ehfuncinfo$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ
.text$x:000001C3                 jmp     ___CxxFrameHandler3
.text$x:000001C3 __ehhandler$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ endp
.text$x:000001C3
.text$x:000001C3 _text$x         ends
.text$x:000001C3
.xdata$x:000001C8 ; ===========================================================================
.xdata$x:000001C8
.xdata$x:000001C8 ; Segment type: Pure data
.xdata$x:000001C8 ; Segment permissions: Read
.xdata$x:000001C8 _xdata$x        segment dword public 'DATA' use32
.xdata$x:000001C8                 assume cs:_xdata$x
.xdata$x:000001C8                 ;org 1C8h
.xdata$x:000001C8 __unwindtable$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ db 0FFh
.xdata$x:000001C8                                         ; DATA XREF: .xdata$x:000001D8o
.xdata$x:000001C9                 db 0FFh
.xdata$x:000001CA                 db 0FFh
.xdata$x:000001CB                 db 0FFh
.xdata$x:000001CC                 dd offset __unwindfunclet$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ$0
.xdata$x:000001D0 __ehfuncinfo$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ db  22h ; "
.xdata$x:000001D0                                         ; DATA XREF: __ehhandler$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ+11o
.xdata$x:000001D1                 db    5
.xdata$x:000001D2                 db  93h ; Ã´
.xdata$x:000001D3                 db  19h
.xdata$x:000001D4                 db    1
.xdata$x:000001D5                 db    0
.xdata$x:000001D6                 db    0
.xdata$x:000001D7                 db    0
.xdata$x:000001D8                 dd offset __unwindtable$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ
.xdata$x:000001DC                 db    0
.xdata$x:000001DD                 db    0
.xdata$x:000001DE                 db    0
.xdata$x:000001DF                 db    0
.xdata$x:000001E0                 db    0
.xdata$x:000001E1                 db    0
.xdata$x:000001E2                 db    0
.xdata$x:000001E3                 db    0
.xdata$x:000001E4                 db    0
.xdata$x:000001E5                 db    0
.xdata$x:000001E6                 db    0
.xdata$x:000001E7                 db    0
.xdata$x:000001E8                 db    0
.xdata$x:000001E9                 db    0
.xdata$x:000001EA                 db    0
.xdata$x:000001EB                 db    0
.xdata$x:000001EC                 db    0
.xdata$x:000001ED                 db    0
.xdata$x:000001EE                 db    0
.xdata$x:000001EF                 db    0
.xdata$x:000001F0                 db    1
.xdata$x:000001F1                 db    0
.xdata$x:000001F2                 db    0
.xdata$x:000001F3                 db    0
.xdata$x:000001F4 __unwindtable$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ db 0FFh
.xdata$x:000001F4                                         ; DATA XREF: .xdata$x:00000204o
.xdata$x:000001F5                 db 0FFh
.xdata$x:000001F6                 db 0FFh
.xdata$x:000001F7                 db 0FFh
.xdata$x:000001F8                 dd offset __unwindfunclet$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ$0
.xdata$x:000001FC __ehfuncinfo$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ db  22h ; "
.xdata$x:000001FC                                         ; DATA XREF: __ehhandler$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ+11o
.xdata$x:000001FD                 db    5
.xdata$x:000001FE                 db  93h ; Ã´
.xdata$x:000001FF                 db  19h
.xdata$x:00000200                 db    1
.xdata$x:00000201                 db    0
.xdata$x:00000202                 db    0
.xdata$x:00000203                 db    0
.xdata$x:00000204                 dd offset __unwindtable$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ
.xdata$x:00000208                 db    0
.xdata$x:00000209                 db    0
.xdata$x:0000020A                 db    0
.xdata$x:0000020B                 db    0
.xdata$x:0000020C                 db    0
.xdata$x:0000020D                 db    0
.xdata$x:0000020E                 db    0
.xdata$x:0000020F                 db    0
.xdata$x:00000210                 db    0
.xdata$x:00000211                 db    0
.xdata$x:00000212                 db    0
.xdata$x:00000213                 db    0
.xdata$x:00000214                 db    0
.xdata$x:00000215                 db    0
.xdata$x:00000216                 db    0
.xdata$x:00000217                 db    0
.xdata$x:00000218                 db    0
.xdata$x:00000219                 db    0
.xdata$x:0000021A                 db    0
.xdata$x:0000021B                 db    0
.xdata$x:0000021C                 db    1
.xdata$x:0000021D                 db    0
.xdata$x:0000021E                 db    0
.xdata$x:0000021F                 db    0
.xdata$x:0000021F _xdata$x        ends
.xdata$x:0000021F
.rtc$TMZ:00000220 ; ===========================================================================
.rtc$TMZ:00000220
.rtc$TMZ:00000220 ; Segment type: Pure data
.rtc$TMZ:00000220 ; Segment permissions: Read
.rtc$TMZ:00000220 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00000220                 assume cs:_rtc$TMZ
.rtc$TMZ:00000220                 ;org 220h
.rtc$TMZ:00000220 ; COMDAT (pick any)
.rtc$TMZ:00000220 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00000220 _rtc$TMZ        ends
.rtc$TMZ:00000220
.rtc$IMZ:00000224 ; ===========================================================================
.rtc$IMZ:00000224
.rtc$IMZ:00000224 ; Segment type: Pure data
.rtc$IMZ:00000224 ; Segment permissions: Read
.rtc$IMZ:00000224 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00000224                 assume cs:_rtc$IMZ
.rtc$IMZ:00000224                 ;org 224h
.rtc$IMZ:00000224 ; COMDAT (pick any)
.rtc$IMZ:00000224 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00000224 _rtc$IMZ        ends
.rtc$IMZ:00000224
.text$yc:00000228 ; ===========================================================================
.text$yc:00000228
.text$yc:00000228 ; Segment type: Pure code
.text$yc:00000228 ; Segment permissions: Read/Execute
.text$yc:00000228 _text$yc        segment para public 'CODE' use32
.text$yc:00000228                 assume cs:_text$yc
.text$yc:00000228                 ;org 228h
.text$yc:00000228 ; COMDAT (pick any)
.text$yc:00000228                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$yc:00000228
.text$yc:00000228 ; =============== S U B R O U T I N E =======================================
.text$yc:00000228
.text$yc:00000228 ; Attributes: bp-based frame
.text$yc:00000228
.text$yc:00000228 ; void __cdecl NArchive::N7z::`dynamic initializer for 'g_RegisterArc''(void)
.text$yc:00000228 ??__Eg_RegisterArc@N7z@NArchive@@YAXXZ proc near
.text$yc:00000228                                         ; DATA XREF: .CRT$XCU:_g_RegisterArc$initializer$o
.text$yc:00000228                 push    ebp
.text$yc:00000229                 mov     ebp, esp
.text$yc:0000022B                 mov     ecx, offset _g_RegisterArc ; this
.text$yc:00000230                 call    ??0CRegisterArcDecSig@N7z@NArchive@@QAE@XZ ; NArchive::N7z::CRegisterArcDecSig::CRegisterArcDecSig(void)
.text$yc:00000235                 cmp     ebp, esp
.text$yc:00000237                 call    __RTC_CheckEsp
.text$yc:0000023C                 pop     ebp
.text$yc:0000023D                 retn
.text$yc:0000023D ??__Eg_RegisterArc@N7z@NArchive@@YAXXZ endp
.text$yc:0000023D
.text$yc:0000023D ; ---------------------------------------------------------------------------
.text$yc:0000023E                 align 10h
.text$yc:0000023E _text$yc        ends
.text$yc:0000023E
.text:00000240 ; ===========================================================================
.text:00000240
.text:00000240 ; Segment type: Pure code
.text:00000240 ; Segment permissions: Read/Execute
.text:00000240 _text           segment para public 'CODE' use32
.text:00000240                 assume cs:_text
.text:00000240                 ;org 240h
.text:00000240 ; COMDAT (pick any)
.text:00000240                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text:00000240
.text:00000240 ; =============== S U B R O U T I N E =======================================
.text:00000240
.text:00000240 ; Attributes: bp-based frame
.text:00000240
.text:00000240 ; _DWORD __thiscall NArchive::N7z::CRegisterArcDecSig::CRegisterArcDecSig(NArchive::N7z::CRegisterArcDecSig *__hidden this)
.text:00000240                 public ??0CRegisterArcDecSig@N7z@NArchive@@QAE@XZ
.text:00000240 ??0CRegisterArcDecSig@N7z@NArchive@@QAE@XZ proc near
.text:00000240                                         ; CODE XREF: NArchive::N7z::`dynamic initializer for 'g_RegisterArc''(void)+8p
.text:00000240
.text:00000240 var_4           = dword ptr -4
.text:00000240
.text:00000240                 push    ebp
.text:00000241                 mov     ebp, esp
.text:00000243                 push    ecx
.text:00000244                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000024B                 mov     [ebp+var_4], ecx
.text:0000024E                 mov     al, ds:_k_Signature_Dec
.text:00000253                 sub     al, 1
.text:00000255                 mov     ds:_k_Signature_Dec, al
.text:0000025A                 push    offset _g_ArcInfo ; struct CArcInfo *
.text:0000025F                 call    ?RegisterArc@@YGXPBUCArcInfo@@@Z ; RegisterArc(CArcInfo const *)
.text:00000264                 mov     eax, [ebp+var_4]
.text:00000267                 add     esp, 4
.text:0000026A                 cmp     ebp, esp
.text:0000026C                 call    __RTC_CheckEsp
.text:00000271                 mov     esp, ebp
.text:00000273                 pop     ebp
.text:00000274                 retn
.text:00000274 ??0CRegisterArcDecSig@N7z@NArchive@@QAE@XZ endp
.text:00000274
.text:00000274 ; ---------------------------------------------------------------------------
.text:00000275                 align 4
.text:00000275 _text           ends
.text:00000275
.bss:00000278 ; ===========================================================================
.bss:00000278
.bss:00000278 ; Segment type: Uninitialized
.bss:00000278 ; Segment permissions: Read/Write
.bss:00000278 _bss            segment byte public 'BSS' use32
.bss:00000278                 assume cs:_bss
.bss:00000278                 ;org 278h
.bss:00000278                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.bss:00000278 ; NArchive::N7z::CRegisterArcDecSig g_RegisterArc
.bss:00000278 _g_RegisterArc  db    ? ;               ; DATA XREF: NArchive::N7z::`dynamic initializer for 'g_RegisterArc''(void)+3o
.bss:00000279                 align 4
.bss:00000279 _bss            ends
.bss:00000279
.CRT$XCU:0000027C ; ===========================================================================
.CRT$XCU:0000027C
.CRT$XCU:0000027C ; Segment type: Pure data
.CRT$XCU:0000027C ; Segment permissions: Read
.CRT$XCU:0000027C _CRT$XCU        segment dword public 'DATA' use32
.CRT$XCU:0000027C                 assume cs:_CRT$XCU
.CRT$XCU:0000027C                 ;org 27Ch
.CRT$XCU:0000027C _g_RegisterArc$initializer$ dd offset ??__Eg_RegisterArc@N7z@NArchive@@YAXXZ ; NArchive::N7z::`dynamic initializer for 'g_RegisterArc''(void)
.CRT$XCU:0000027C _CRT$XCU        ends
.CRT$XCU:0000027C
UNDEF:00000280 ; ===========================================================================
UNDEF:00000280
UNDEF:00000280 ; Segment type: Externs
UNDEF:00000280 ; UNDEF
UNDEF:00000280 ; void __cdecl operator delete(void *)
UNDEF:00000280                 extrn ??3@YAXPAX@Z:near ; CODE XREF: __unwindfunclet$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ$0+4p
UNDEF:00000280                                         ; __unwindfunclet$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ$0+4p
UNDEF:00000284 ; _DWORD __thiscall NArchive::N7z::CHandler::CHandler(NArchive::N7z::CHandler *__hidden this)
UNDEF:00000284                 extrn ??0CHandler@N7z@NArchive@@QAE@XZ:near
UNDEF:00000284                                         ; CODE XREF: NArchive::N7z::CreateArc(void)+5Ap
UNDEF:00000284                                         ; NArchive::N7z::CreateArcOut(void)+56p
UNDEF:00000288 ; void *__cdecl operator new(unsigned int)
UNDEF:00000288                 extrn ??2@YAPAXI@Z:near ; CODE XREF: NArchive::N7z::CreateArc(void)+3Fp
UNDEF:00000288                                         ; NArchive::N7z::CreateArcOut(void)+3Bp
UNDEF:0000028C                 extrn ___security_cookie:near
UNDEF:0000028C                                         ; DATA XREF: NArchive::N7z::CreateArc(void)+29r
UNDEF:0000028C                                         ; NArchive::N7z::CreateArcOut(void)+25r
UNDEF:00000290                 extrn ___CxxFrameHandler3:near
UNDEF:00000290                                         ; CODE XREF: __ehhandler$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ+16j
UNDEF:00000290                                         ; __ehhandler$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ+16j
UNDEF:00000294 ; __fastcall __security_check_cookie(x)
UNDEF:00000294                 extrn @__security_check_cookie@4:near
UNDEF:00000294                                         ; CODE XREF: __ehhandler$?CreateArc@N7z@NArchive@@YGPAUIInArchive@@XZ+Cp
UNDEF:00000294                                         ; __ehhandler$?CreateArcOut@N7z@NArchive@@YGPAUIOutArchive@@XZ+Cp
UNDEF:00000298                 extrn __RTC_CheckEsp:near
UNDEF:00000298                                         ; CODE XREF: NArchive::N7z::CreateArc(void)+8Bp
UNDEF:00000298                                         ; NArchive::N7z::CreateArcOut(void)+9Fp ...
UNDEF:0000029C                 extrn __RTC_Shutdown:near
UNDEF:0000029C                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:000002A0                 extrn __RTC_InitBase:near
UNDEF:000002A0                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:000002A4 ; void __stdcall RegisterArc(const struct CArcInfo *)
UNDEF:000002A4                 extrn ?RegisterArc@@YGXPBUCArcInfo@@@Z:near
UNDEF:000002A4                                         ; CODE XREF: NArchive::N7z::CRegisterArcDecSig::CRegisterArcDecSig(void)+1Fp
UNDEF:000002A4
UNDEF:000002A4
UNDEF:000002A4                 end
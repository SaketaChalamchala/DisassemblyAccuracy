.text:00000000 ;
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.text:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.text:00000000 ; |                      License info: 48-3677-7074-51                      |
.text:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ;
.text:00000000 ; Input MD5   : B681A366B4BE394D0B33F593A84678BB
.text:00000000 ; Input CRC32 : 27D2FEFC
.text:00000000
.text:00000000 ; File Name   : C:\workspace\7z1505-src\CPP\7zip\Bundles\Alone\Debug\Lzx86Converter.obj
.text:00000000 ; Format      : COFF (X386MAGIC)
.text:00000000 ; includelib "uuid.lib"
.text:00000000 ; includelib "MSVCRTD"
.text:00000000 ; includelib "OLDNAMES"
.text:00000000
.text:00000000                 .686p
.text:00000000                 .mmx
.text:00000000                 .model flat
.text:00000000
.text:00000000 ; ===========================================================================
.text:00000000
.text:00000000 ; Segment type: Pure code
.text:00000000 ; Segment permissions: Read/Execute
.text:00000000 _text           segment para public 'CODE' use32
.text:00000000                 assume cs:_text
.text:00000000                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:00000000
.text:00000000 ; =============== S U B R O U T I N E =======================================
.text:00000000
.text:00000000 ; Attributes: bp-based frame
.text:00000000
.text:00000000 ; void __thiscall NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(NCompress::NLzx::Cx86ConvertOutStream *__hidden this)
.text:00000000                 public ?MakeTranslation@Cx86ConvertOutStream@NLzx@NCompress@@AAEXXZ
.text:00000000 ?MakeTranslation@Cx86ConvertOutStream@NLzx@NCompress@@AAEXXZ proc near
.text:00000000                                         ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+42p
.text:00000000
.text:00000000 var_28          = dword ptr -28h
.text:00000000 var_24          = dword ptr -24h
.text:00000000 var_20          = dword ptr -20h
.text:00000000 var_1C          = dword ptr -1Ch
.text:00000000 var_18          = dword ptr -18h
.text:00000000 var_14          = dword ptr -14h
.text:00000000 var_10          = dword ptr -10h
.text:00000000 var_C           = dword ptr -0Ch
.text:00000000 var_8           = dword ptr -8
.text:00000000 var_4           = dword ptr -4
.text:00000000
.text:00000000                 push    ebp
.text:00000001                 mov     ebp, esp
.text:00000003                 sub     esp, 28h
.text:00000006                 push    edi
.text:00000007                 push    ecx
.text:00000008                 lea     edi, [ebp+var_28]
.text:0000000B                 mov     ecx, 0Ah
.text:00000010                 mov     eax, 0CCCCCCCCh
.text:00000015                 rep stosd
.text:00000017                 pop     ecx
.text:00000018                 mov     [ebp+var_4], ecx
.text:0000001B                 mov     eax, [ebp+var_4]
.text:0000001E                 cmp     dword ptr [eax+10h], 0Ah
.text:00000022                 ja      short loc_29
.text:00000024                 jmp     loc_14D
.text:00000029 ; ---------------------------------------------------------------------------
.text:00000029
.text:00000029 loc_29:                                 ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+22j
.text:00000029                 mov     ecx, [ebp+var_4]
.text:0000002C                 mov     edx, [ecx+10h]
.text:0000002F                 sub     edx, 0Ah
.text:00000032                 mov     [ebp+var_8], edx
.text:00000035                 mov     eax, [ebp+var_4]
.text:00000038                 add     eax, 19h
.text:0000003B                 mov     [ebp+var_C], eax
.text:0000003E                 mov     [ebp+var_10], 0
.text:00000045
.text:00000045 loc_45:                                 ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void):loc_148j
.text:00000045                 mov     ecx, [ebp+var_10]
.text:00000048                 cmp     ecx, [ebp+var_8]
.text:0000004B                 jnb     loc_14D
.text:00000051                 mov     edx, [ebp+var_C]
.text:00000054                 add     edx, [ebp+var_10]
.text:00000057                 movzx   eax, byte ptr [edx]
.text:0000005A                 mov     ecx, [ebp+var_10]
.text:0000005D                 add     ecx, 1
.text:00000060                 mov     [ebp+var_10], ecx
.text:00000063                 cmp     eax, 0E8h ; 'F'
.text:00000068                 jnz     short loc_73
.text:0000006A                 mov     [ebp+var_24], 1
.text:00000071                 jmp     short loc_7A
.text:00000073 ; ---------------------------------------------------------------------------
.text:00000073
.text:00000073 loc_73:                                 ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+68j
.text:00000073                 mov     [ebp+var_24], 0
.text:0000007A
.text:0000007A loc_7A:                                 ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+71j
.text:0000007A                 cmp     [ebp+var_24], 0
.text:0000007E                 jz      loc_148
.text:00000084                 mov     [ebp+var_14], 0
.text:0000008B                 mov     [ebp+var_18], 0
.text:00000092                 jmp     short loc_9D
.text:00000094 ; ---------------------------------------------------------------------------
.text:00000094
.text:00000094 loc_94:                                 ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+BEj
.text:00000094                 mov     edx, [ebp+var_18]
.text:00000097                 add     edx, 1
.text:0000009A                 mov     [ebp+var_18], edx
.text:0000009D
.text:0000009D loc_9D:                                 ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+92j
.text:0000009D                 cmp     [ebp+var_18], 4
.text:000000A1                 jnb     short loc_C0
.text:000000A3                 mov     eax, [ebp+var_10]
.text:000000A6                 add     eax, [ebp+var_18]
.text:000000A9                 mov     ecx, [ebp+var_C]
.text:000000AC                 movzx   edx, byte ptr [ecx+eax]
.text:000000B0                 mov     ecx, [ebp+var_18]
.text:000000B3                 shl     ecx, 3
.text:000000B6                 shl     edx, cl
.text:000000B8                 add     edx, [ebp+var_14]
.text:000000BB                 mov     [ebp+var_14], edx
.text:000000BE                 jmp     short loc_94
.text:000000C0 ; ---------------------------------------------------------------------------
.text:000000C0
.text:000000C0 loc_C0:                                 ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+A1j
.text:000000C0                 mov     eax, [ebp+var_4]
.text:000000C3                 mov     ecx, [eax+0Ch]
.text:000000C6                 mov     edx, [ebp+var_10]
.text:000000C9                 lea     eax, [ecx+edx-1]
.text:000000CD                 mov     [ebp+var_1C], eax
.text:000000D0                 mov     ecx, [ebp+var_1C]
.text:000000D3                 neg     ecx
.text:000000D5                 cmp     [ebp+var_14], ecx
.text:000000D8                 jl      short loc_13F
.text:000000DA                 mov     edx, [ebp+var_4]
.text:000000DD                 mov     eax, [ebp+var_14]
.text:000000E0                 cmp     eax, [edx+14h]
.text:000000E3                 jge     short loc_13F
.text:000000E5                 cmp     [ebp+var_14], 0
.text:000000E9                 jl      short loc_F6
.text:000000EB                 mov     ecx, [ebp+var_14]
.text:000000EE                 sub     ecx, [ebp+var_1C]
.text:000000F1                 mov     [ebp+var_28], ecx
.text:000000F4                 jmp     short loc_102
.text:000000F6 ; ---------------------------------------------------------------------------
.text:000000F6
.text:000000F6 loc_F6:                                 ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+E9j
.text:000000F6                 mov     edx, [ebp+var_4]
.text:000000F9                 mov     eax, [ebp+var_14]
.text:000000FC                 add     eax, [edx+14h]
.text:000000FF                 mov     [ebp+var_28], eax
.text:00000102
.text:00000102 loc_102:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+F4j
.text:00000102                 mov     ecx, [ebp+var_28]
.text:00000105                 mov     [ebp+var_20], ecx
.text:00000108                 mov     [ebp+var_18], 0
.text:0000010F                 jmp     short loc_11A
.text:00000111 ; ---------------------------------------------------------------------------
.text:00000111
.text:00000111 loc_111:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+13Dj
.text:00000111                 mov     edx, [ebp+var_18]
.text:00000114                 add     edx, 1
.text:00000117                 mov     [ebp+var_18], edx
.text:0000011A
.text:0000011A loc_11A:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+10Fj
.text:0000011A                 cmp     [ebp+var_18], 4
.text:0000011E                 jnb     short loc_13F
.text:00000120                 mov     eax, [ebp+var_20]
.text:00000123                 and     eax, 0FFh
.text:00000128                 mov     ecx, [ebp+var_10]
.text:0000012B                 add     ecx, [ebp+var_18]
.text:0000012E                 mov     edx, [ebp+var_C]
.text:00000131                 mov     [edx+ecx], al
.text:00000134                 mov     eax, [ebp+var_20]
.text:00000137                 shr     eax, 8
.text:0000013A                 mov     [ebp+var_20], eax
.text:0000013D                 jmp     short loc_111
.text:0000013F ; ---------------------------------------------------------------------------
.text:0000013F
.text:0000013F loc_13F:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+D8j
.text:0000013F                                         ; NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+E3j ...
.text:0000013F                 mov     ecx, [ebp+var_10]
.text:00000142                 add     ecx, 4
.text:00000145                 mov     [ebp+var_10], ecx
.text:00000148
.text:00000148 loc_148:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+7Ej
.text:00000148                 jmp     loc_45
.text:0000014D ; ---------------------------------------------------------------------------
.text:0000014D
.text:0000014D loc_14D:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+24j
.text:0000014D                                         ; NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)+4Bj
.text:0000014D                 pop     edi
.text:0000014E                 mov     esp, ebp
.text:00000150                 pop     ebp
.text:00000151                 retn
.text:00000151 ?MakeTranslation@Cx86ConvertOutStream@NLzx@NCompress@@AAEXXZ endp
.text:00000151
.text:00000151 ; ---------------------------------------------------------------------------
.text:00000152                 align 10h
.text:00000160
.text:00000160 ; =============== S U B R O U T I N E =======================================
.text:00000160
.text:00000160 ; Attributes: bp-based frame
.text:00000160
.text:00000160 ; __int32 __stdcall NCompress::NLzx::Cx86ConvertOutStream::Write(NCompress::NLzx::Cx86ConvertOutStream *this, const void *, unsigned int, unsigned int *)
.text:00000160                 public ?Write@Cx86ConvertOutStream@NLzx@NCompress@@UAGJPBXIPAI@Z
.text:00000160 ?Write@Cx86ConvertOutStream@NLzx@NCompress@@UAGJPBXIPAI@Z proc near
.text:00000160
.text:00000160 var_C           = dword ptr -0Ch
.text:00000160 Size            = dword ptr -8
.text:00000160 var_4           = dword ptr -4
.text:00000160 this            = dword ptr  8
.text:00000160 arg_4           = dword ptr  0Ch
.text:00000160 arg_8           = dword ptr  10h
.text:00000160 arg_C           = dword ptr  14h
.text:00000160
.text:00000160                 push    ebp
.text:00000161                 mov     ebp, esp
.text:00000163                 sub     esp, 0Ch
.text:00000166                 push    esi
.text:00000167                 mov     [ebp+var_C], 0CCCCCCCCh
.text:0000016E                 mov     [ebp+Size], 0CCCCCCCCh
.text:00000175                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000017C                 cmp     [ebp+arg_C], 0
.text:00000180                 jz      short loc_18B
.text:00000182                 mov     eax, [ebp+arg_C]
.text:00000185                 mov     dword ptr [eax], 0
.text:0000018B
.text:0000018B loc_18B:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+20j
.text:0000018B                 mov     ecx, [ebp+this]
.text:0000018E                 movzx   edx, byte ptr [ecx+18h]
.text:00000192                 test    edx, edx
.text:00000194                 jnz     short loc_1C4
.text:00000196                 mov     esi, esp
.text:00000198                 mov     eax, [ebp+arg_C]
.text:0000019B                 push    eax
.text:0000019C                 mov     ecx, [ebp+arg_8]
.text:0000019F                 push    ecx
.text:000001A0                 mov     edx, [ebp+arg_4]
.text:000001A3                 push    edx
.text:000001A4                 mov     eax, [ebp+this]
.text:000001A7                 mov     ecx, [eax+8]
.text:000001AA                 mov     edx, [ebp+this]
.text:000001AD                 mov     eax, [edx+8]
.text:000001B0                 mov     ecx, [ecx]
.text:000001B2                 push    eax
.text:000001B3                 mov     edx, [ecx+0Ch]
.text:000001B6                 call    edx
.text:000001B8                 cmp     esi, esp
.text:000001BA                 call    __RTC_CheckEsp
.text:000001BF                 jmp     loc_25B
.text:000001C4 ; ---------------------------------------------------------------------------
.text:000001C4
.text:000001C4 loc_1C4:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+34j
.text:000001C4                 mov     [ebp+var_4], 0
.text:000001CB
.text:000001CB loc_1CB:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *):loc_249j
.text:000001CB                 mov     eax, [ebp+var_4]
.text:000001CE                 cmp     eax, [ebp+arg_8]
.text:000001D1                 jnb     short loc_24B
.text:000001D3                 mov     ecx, [ebp+this]
.text:000001D6                 mov     edx, 8000h
.text:000001DB                 sub     edx, [ecx+10h]
.text:000001DE                 push    edx
.text:000001DF                 mov     eax, [ebp+arg_8]
.text:000001E2                 sub     eax, [ebp+var_4]
.text:000001E5                 push    eax
.text:000001E6                 call    ??$MyMin@I@@YGIII@Z ; MyMin<uint>(uint,uint)
.text:000001EB                 mov     [ebp+Size], eax
.text:000001EE                 mov     ecx, [ebp+Size]
.text:000001F1                 push    ecx             ; Size
.text:000001F2                 mov     edx, [ebp+arg_4]
.text:000001F5                 add     edx, [ebp+var_4]
.text:000001F8                 push    edx             ; Src
.text:000001F9                 mov     eax, [ebp+this]
.text:000001FC                 mov     ecx, [eax+10h]
.text:000001FF                 mov     edx, [ebp+this]
.text:00000202                 lea     eax, [edx+ecx+19h]
.text:00000206                 push    eax             ; Dst
.text:00000207                 call    _memcpy
.text:0000020C                 add     esp, 0Ch
.text:0000020F                 mov     ecx, [ebp+this]
.text:00000212                 mov     edx, [ecx+10h]
.text:00000215                 add     edx, [ebp+Size]
.text:00000218                 mov     eax, [ebp+this]
.text:0000021B                 mov     [eax+10h], edx
.text:0000021E                 mov     ecx, [ebp+var_4]
.text:00000221                 add     ecx, [ebp+Size]
.text:00000224                 mov     [ebp+var_4], ecx
.text:00000227                 mov     edx, [ebp+this]
.text:0000022A                 cmp     dword ptr [edx+10h], 8000h
.text:00000231                 jnz     short loc_249
.text:00000233                 mov     ecx, [ebp+this] ; this
.text:00000236                 call    ?Flush@Cx86ConvertOutStream@NLzx@NCompress@@QAEJXZ ; NCompress::NLzx::Cx86ConvertOutStream::Flush(void)
.text:0000023B                 mov     [ebp+var_C], eax
.text:0000023E                 cmp     [ebp+var_C], 0
.text:00000242                 jz      short loc_249
.text:00000244                 mov     eax, [ebp+var_C]
.text:00000247                 jmp     short loc_25B
.text:00000249 ; ---------------------------------------------------------------------------
.text:00000249
.text:00000249 loc_249:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+D1j
.text:00000249                                         ; NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+E2j
.text:00000249                 jmp     short loc_1CB
.text:0000024B ; ---------------------------------------------------------------------------
.text:0000024B
.text:0000024B loc_24B:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+71j
.text:0000024B                 cmp     [ebp+arg_C], 0
.text:0000024F                 jz      short loc_259
.text:00000251                 mov     eax, [ebp+arg_C]
.text:00000254                 mov     ecx, [ebp+var_4]
.text:00000257                 mov     [eax], ecx
.text:00000259
.text:00000259 loc_259:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+EFj
.text:00000259                 xor     eax, eax
.text:0000025B
.text:0000025B loc_25B:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+5Fj
.text:0000025B                                         ; NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+E7j
.text:0000025B                 pop     esi
.text:0000025C                 add     esp, 0Ch
.text:0000025F                 cmp     ebp, esp
.text:00000261                 call    __RTC_CheckEsp
.text:00000266                 mov     esp, ebp
.text:00000268                 pop     ebp
.text:00000269                 retn    10h
.text:00000269 ?Write@Cx86ConvertOutStream@NLzx@NCompress@@UAGJPBXIPAI@Z endp
.text:00000269
.text:00000269 ; ---------------------------------------------------------------------------
.text:0000026C                 align 10h
.text:00000270
.text:00000270 ; =============== S U B R O U T I N E =======================================
.text:00000270
.text:00000270 ; Attributes: bp-based frame
.text:00000270
.text:00000270 ; __int32 __thiscall NCompress::NLzx::Cx86ConvertOutStream::Flush(NCompress::NLzx::Cx86ConvertOutStream *__hidden this)
.text:00000270                 public ?Flush@Cx86ConvertOutStream@NLzx@NCompress@@QAEJXZ
.text:00000270 ?Flush@Cx86ConvertOutStream@NLzx@NCompress@@QAEJXZ proc near
.text:00000270                                         ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+D6p
.text:00000270
.text:00000270 var_1C          = dword ptr -1Ch
.text:00000270 var_18          = dword ptr -18h
.text:00000270 var_14          = dword ptr -14h
.text:00000270 var_10          = dword ptr -10h
.text:00000270 var_C           = dword ptr -0Ch
.text:00000270 var_8           = dword ptr -8
.text:00000270 var_4           = dword ptr -4
.text:00000270
.text:00000270                 push    ebp
.text:00000271                 mov     ebp, esp
.text:00000273                 sub     esp, 1Ch
.text:00000276                 push    esi
.text:00000277                 mov     eax, 0CCCCCCCCh
.text:0000027C                 mov     [ebp+var_1C], eax
.text:0000027F                 mov     [ebp+var_18], eax
.text:00000282                 mov     [ebp+var_14], eax
.text:00000285                 mov     [ebp+var_10], eax
.text:00000288                 mov     [ebp+var_C], eax
.text:0000028B                 mov     [ebp+var_8], eax
.text:0000028E                 mov     [ebp+var_4], eax
.text:00000291                 mov     [ebp+var_4], ecx
.text:00000294                 mov     eax, [ebp+var_4]
.text:00000297                 cmp     dword ptr [eax+10h], 0
.text:0000029B                 jnz     short loc_2A4
.text:0000029D                 xor     eax, eax
.text:0000029F                 jmp     loc_371
.text:000002A4 ; ---------------------------------------------------------------------------
.text:000002A4
.text:000002A4 loc_2A4:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+2Bj
.text:000002A4                 mov     ecx, [ebp+var_4]
.text:000002A7                 movzx   edx, byte ptr [ecx+18h]
.text:000002AB                 test    edx, edx
.text:000002AD                 jz      short loc_2B7
.text:000002AF                 mov     ecx, [ebp+var_4] ; this
.text:000002B2                 call    ?MakeTranslation@Cx86ConvertOutStream@NLzx@NCompress@@AAEXXZ ; NCompress::NLzx::Cx86ConvertOutStream::MakeTranslation(void)
.text:000002B7
.text:000002B7 loc_2B7:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+3Dj
.text:000002B7                 mov     [ebp+var_8], 0
.text:000002BE
.text:000002BE loc_2BE:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+B1j
.text:000002BE                 mov     esi, esp
.text:000002C0                 lea     eax, [ebp+var_10]
.text:000002C3                 push    eax
.text:000002C4                 mov     ecx, [ebp+var_4]
.text:000002C7                 mov     edx, [ecx+10h]
.text:000002CA                 sub     edx, [ebp+var_8]
.text:000002CD                 push    edx
.text:000002CE                 mov     eax, [ebp+var_8]
.text:000002D1                 mov     ecx, [ebp+var_4]
.text:000002D4                 lea     edx, [ecx+eax+19h]
.text:000002D8                 push    edx
.text:000002D9                 mov     eax, [ebp+var_4]
.text:000002DC                 mov     ecx, [eax+8]
.text:000002DF                 mov     edx, [ebp+var_4]
.text:000002E2                 mov     eax, [edx+8]
.text:000002E5                 mov     ecx, [ecx]
.text:000002E7                 push    eax
.text:000002E8                 mov     edx, [ecx+0Ch]
.text:000002EB                 call    edx
.text:000002ED                 cmp     esi, esp
.text:000002EF                 call    __RTC_CheckEsp
.text:000002F4                 mov     [ebp+var_18], eax
.text:000002F7                 cmp     [ebp+var_18], 0
.text:000002FB                 jz      short loc_302
.text:000002FD                 mov     eax, [ebp+var_18]
.text:00000300                 jmp     short loc_371
.text:00000302 ; ---------------------------------------------------------------------------
.text:00000302
.text:00000302 loc_302:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+8Bj
.text:00000302                 cmp     [ebp+var_10], 0
.text:00000306                 jnz     short loc_30F
.text:00000308                 mov     eax, 80004005h
.text:0000030D                 jmp     short loc_371
.text:0000030F ; ---------------------------------------------------------------------------
.text:0000030F
.text:0000030F loc_30F:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+96j
.text:0000030F                 mov     eax, [ebp+var_8]
.text:00000312                 add     eax, [ebp+var_10]
.text:00000315                 mov     [ebp+var_8], eax
.text:00000318                 mov     ecx, [ebp+var_4]
.text:0000031B                 mov     edx, [ebp+var_8]
.text:0000031E                 cmp     edx, [ecx+10h]
.text:00000321                 jb      short loc_2BE
.text:00000323                 mov     eax, [ebp+var_4]
.text:00000326                 mov     ecx, [eax+0Ch]
.text:00000329                 mov     edx, [ebp+var_4]
.text:0000032C                 add     ecx, [edx+10h]
.text:0000032F                 mov     eax, [ebp+var_4]
.text:00000332                 mov     [eax+0Ch], ecx
.text:00000335                 mov     ecx, [ebp+var_4]
.text:00000338                 mov     dword ptr [ecx+10h], 0
.text:0000033F                 mov     edx, [ebp+var_4]
.text:00000342                 movzx   eax, byte ptr [edx+18h]
.text:00000346                 test    eax, eax
.text:00000348                 jz      short loc_35F
.text:0000034A                 mov     ecx, [ebp+var_4]
.text:0000034D                 cmp     dword ptr [ecx+0Ch], 40000000h
.text:00000354                 jnb     short loc_35F
.text:00000356                 mov     [ebp+var_1C], 1
.text:0000035D                 jmp     short loc_366
.text:0000035F ; ---------------------------------------------------------------------------
.text:0000035F
.text:0000035F loc_35F:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+D8j
.text:0000035F                                         ; NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+E4j
.text:0000035F                 mov     [ebp+var_1C], 0
.text:00000366
.text:00000366 loc_366:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+EDj
.text:00000366                 mov     edx, [ebp+var_4]
.text:00000369                 mov     al, byte ptr [ebp+var_1C]
.text:0000036C                 mov     [edx+18h], al
.text:0000036F                 xor     eax, eax
.text:00000371
.text:00000371 loc_371:                                ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+2Fj
.text:00000371                                         ; NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+90j ...
.text:00000371                 push    edx
.text:00000372                 mov     ecx, ebp
.text:00000374                 push    eax
.text:00000375                 lea     edx, $LN14
.text:0000037B                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00000380                 pop     eax
.text:00000381                 pop     edx
.text:00000382                 pop     esi
.text:00000383                 add     esp, 1Ch
.text:00000386                 cmp     ebp, esp
.text:00000388                 call    __RTC_CheckEsp
.text:0000038D                 mov     esp, ebp
.text:0000038F                 pop     ebp
.text:00000390                 retn
.text:00000390 ?Flush@Cx86ConvertOutStream@NLzx@NCompress@@QAEJXZ endp
.text:00000390
.text:00000390 ; ---------------------------------------------------------------------------
.text:00000391                 align 4
.text:00000394 $LN14           dd 1                    ; DATA XREF: NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+105o
.text:00000398                 dd offset $LN13
.text:0000039C $LN13           dd 0FFFFFFF0h, 4        ; DATA XREF: .text:00000398o
.text:000003A4                 dd offset $LN12         ; "processed"
.text:000003A8 $LN12           db 'processed',0        ; DATA XREF: .text:000003A4o
.text:000003B2                 align 4
.text:000003B2 _text           ends
.text:000003B2
.rtc$TMZ:000003B4 ; ===========================================================================
.rtc$TMZ:000003B4
.rtc$TMZ:000003B4 ; Segment type: Pure data
.rtc$TMZ:000003B4 ; Segment permissions: Read
.rtc$TMZ:000003B4 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:000003B4                 assume cs:_rtc$TMZ
.rtc$TMZ:000003B4                 ;org 3B4h
.rtc$TMZ:000003B4 ; COMDAT (pick any)
.rtc$TMZ:000003B4 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:000003B4 _rtc$TMZ        ends
.rtc$TMZ:000003B4
.rtc$IMZ:000003B8 ; ===========================================================================
.rtc$IMZ:000003B8
.rtc$IMZ:000003B8 ; Segment type: Pure data
.rtc$IMZ:000003B8 ; Segment permissions: Read
.rtc$IMZ:000003B8 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:000003B8                 assume cs:_rtc$IMZ
.rtc$IMZ:000003B8                 ;org 3B8h
.rtc$IMZ:000003B8 ; COMDAT (pick any)
.rtc$IMZ:000003B8 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:000003B8 _rtc$IMZ        ends
.rtc$IMZ:000003B8
.text:000003BC ; ===========================================================================
.text:000003BC
.text:000003BC ; Segment type: Pure code
.text:000003BC ; Segment permissions: Read/Execute
.text:000003BC _text           segment para public 'CODE' use32
.text:000003BC                 assume cs:_text
.text:000003BC                 ;org 3BCh
.text:000003BC ; COMDAT (pick any)
.text:000003BC                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:000003BC
.text:000003BC ; =============== S U B R O U T I N E =======================================
.text:000003BC
.text:000003BC ; Attributes: bp-based frame
.text:000003BC
.text:000003BC ; unsigned int __stdcall MyMin<unsigned int>(unsigned int, unsigned int)
.text:000003BC                 public ??$MyMin@I@@YGIII@Z
.text:000003BC ??$MyMin@I@@YGIII@Z proc near           ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+86p
.text:000003BC
.text:000003BC var_4           = dword ptr -4
.text:000003BC arg_0           = dword ptr  8
.text:000003BC arg_4           = dword ptr  0Ch
.text:000003BC
.text:000003BC                 push    ebp
.text:000003BD                 mov     ebp, esp
.text:000003BF                 push    ecx
.text:000003C0                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000003C7                 mov     eax, [ebp+arg_0]
.text:000003CA                 cmp     eax, [ebp+arg_4]
.text:000003CD                 jnb     short loc_3D7
.text:000003CF                 mov     ecx, [ebp+arg_0]
.text:000003D2                 mov     [ebp+var_4], ecx
.text:000003D5                 jmp     short loc_3DD
.text:000003D7 ; ---------------------------------------------------------------------------
.text:000003D7
.text:000003D7 loc_3D7:                                ; CODE XREF: MyMin<uint>(uint,uint)+11j
.text:000003D7                 mov     edx, [ebp+arg_4]
.text:000003DA                 mov     [ebp+var_4], edx
.text:000003DD
.text:000003DD loc_3DD:                                ; CODE XREF: MyMin<uint>(uint,uint)+19j
.text:000003DD                 mov     eax, [ebp+var_4]
.text:000003E0                 mov     esp, ebp
.text:000003E2                 pop     ebp
.text:000003E3                 retn    8
.text:000003E3 ??$MyMin@I@@YGIII@Z endp
.text:000003E3
.text:000003E3 _text           ends
.text:000003E3
UNDEF:000003F0 ; ===========================================================================
UNDEF:000003F0
UNDEF:000003F0 ; Segment type: Externs
UNDEF:000003F0 ; UNDEF
UNDEF:000003F0                 extrn __RTC_Shutdown:near
UNDEF:000003F0                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:000003F4                 extrn __RTC_InitBase:near
UNDEF:000003F4                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:000003F8 ; void *__cdecl memcpy(void *Dst, const void *Src, size_t Size)
UNDEF:000003F8                 extrn _memcpy:near      ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+A7p
UNDEF:000003FC                 extrn __RTC_CheckEsp:near
UNDEF:000003FC                                         ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+5Ap
UNDEF:000003FC                                         ; NCompress::NLzx::Cx86ConvertOutStream::Write(void const *,uint,uint *)+101p ...
UNDEF:00000400 ; __fastcall _RTC_CheckStackVars(x, x)
UNDEF:00000400                 extrn @_RTC_CheckStackVars@8:near
UNDEF:00000400                                         ; CODE XREF: NCompress::NLzx::Cx86ConvertOutStream::Flush(void)+10Bp
UNDEF:00000400
UNDEF:00000400
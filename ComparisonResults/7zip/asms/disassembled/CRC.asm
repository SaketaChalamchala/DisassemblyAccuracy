.text$yc:00000000 ;
.text$yc:00000000 ; +-------------------------------------------------------------------------+
.text$yc:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.text$yc:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.text$yc:00000000 ; |                      License info: 48-3677-7074-51                      |
.text$yc:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.text$yc:00000000 ; +-------------------------------------------------------------------------+
.text$yc:00000000 ;
.text$yc:00000000 ; Input MD5   : D9B91F97379880B8E3D6F9AC8F8F6F3A
.text$yc:00000000 ; Input CRC32 : B1F22594
.text$yc:00000000
.text$yc:00000000 ; File Name   : C:\workspace\7z1505-src\CPP\7zip\Bundles\Alone\Debug\CRC.obj
.text$yc:00000000 ; Format      : COFF (X386MAGIC)
.text$yc:00000000 ; includelib "uuid.lib"
.text$yc:00000000 ; includelib "MSVCRTD"
.text$yc:00000000 ; includelib "OLDNAMES"
.text$yc:00000000
.text$yc:00000000                 .686p
.text$yc:00000000                 .mmx
.text$yc:00000000                 .model flat
.text$yc:00000000
.text$yc:00000000 ; ===========================================================================
.text$yc:00000000
.text$yc:00000000 ; Segment type: Pure code
.text$yc:00000000 ; Segment permissions: Read/Execute
.text$yc:00000000 _text$yc        segment para public 'CODE' use32
.text$yc:00000000                 assume cs:_text$yc
.text$yc:00000000 ; COMDAT (pick any)
.text$yc:00000000                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text$yc:00000000
.text$yc:00000000 ; =============== S U B R O U T I N E =======================================
.text$yc:00000000
.text$yc:00000000 ; Attributes: bp-based frame
.text$yc:00000000
.text$yc:00000000 ; void __cdecl `dynamic initializer for 'g_CRCTableInit''(void)
.text$yc:00000000 ??__Eg_CRCTableInit@@YAXXZ proc near    ; DATA XREF: .CRT$XCU:_g_CRCTableInit$initializer$o
.text$yc:00000000                 push    ebp
.text$yc:00000001                 mov     ebp, esp
.text$yc:00000003                 mov     ecx, offset ?g_CRCTableInit@@3UCCRCTableInit@@A ; this
.text$yc:00000008                 call    ??0CCRCTableInit@@QAE@XZ ; CCRCTableInit::CCRCTableInit(void)
.text$yc:0000000D                 cmp     ebp, esp
.text$yc:0000000F                 call    __RTC_CheckEsp
.text$yc:00000014                 pop     ebp
.text$yc:00000015                 retn
.text$yc:00000015 ??__Eg_CRCTableInit@@YAXXZ endp
.text$yc:00000015
.text$yc:00000015 ; ---------------------------------------------------------------------------
.text$yc:00000016                 align 4
.text$yc:00000016 _text$yc        ends
.text$yc:00000016
.rtc$TMZ:00000018 ; ===========================================================================
.rtc$TMZ:00000018
.rtc$TMZ:00000018 ; Segment type: Pure data
.rtc$TMZ:00000018 ; Segment permissions: Read
.rtc$TMZ:00000018 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00000018                 assume cs:_rtc$TMZ
.rtc$TMZ:00000018                 ;org 18h
.rtc$TMZ:00000018 ; COMDAT (pick associative to section at 0)
.rtc$TMZ:00000018 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00000018 _rtc$TMZ        ends
.rtc$TMZ:00000018
.rtc$IMZ:0000001C ; ===========================================================================
.rtc$IMZ:0000001C
.rtc$IMZ:0000001C ; Segment type: Pure data
.rtc$IMZ:0000001C ; Segment permissions: Read
.rtc$IMZ:0000001C _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:0000001C                 assume cs:_rtc$IMZ
.rtc$IMZ:0000001C                 ;org 1Ch
.rtc$IMZ:0000001C ; COMDAT (pick associative to section at 0)
.rtc$IMZ:0000001C __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:0000001C _rtc$IMZ        ends
.rtc$IMZ:0000001C
.text:00000020 ; ===========================================================================
.text:00000020
.text:00000020 ; Segment type: Pure code
.text:00000020 ; Segment permissions: Read/Execute
.text:00000020 _text           segment para public 'CODE' use32
.text:00000020                 assume cs:_text
.text:00000020                 ;org 20h
.text:00000020 ; COMDAT (pick any)
.text:00000020                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:00000020
.text:00000020 ; =============== S U B R O U T I N E =======================================
.text:00000020
.text:00000020 ; Attributes: bp-based frame
.text:00000020
.text:00000020 ; _DWORD __thiscall CCRCTableInit::CCRCTableInit(CCRCTableInit *__hidden this)
.text:00000020                 public ??0CCRCTableInit@@QAE@XZ
.text:00000020 ??0CCRCTableInit@@QAE@XZ proc near      ; CODE XREF: `dynamic initializer for 'g_CRCTableInit''(void)+8p
.text:00000020
.text:00000020 var_4           = dword ptr -4
.text:00000020
.text:00000020                 push    ebp
.text:00000021                 mov     ebp, esp
.text:00000023                 push    ecx
.text:00000024                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000002B                 mov     [ebp+var_4], ecx
.text:0000002E                 call    @CrcGenerateTable@0 ; CrcGenerateTable()
.text:00000033                 mov     eax, [ebp+var_4]
.text:00000036                 add     esp, 4
.text:00000039                 cmp     ebp, esp
.text:0000003B                 call    __RTC_CheckEsp
.text:00000040                 mov     esp, ebp
.text:00000042                 pop     ebp
.text:00000043                 retn
.text:00000043 ??0CCRCTableInit@@QAE@XZ endp
.text:00000043
.text:00000043 _text           ends
.text:00000043
.bss:00000044 ; ===========================================================================
.bss:00000044
.bss:00000044 ; Segment type: Uninitialized
.bss:00000044 ; Segment permissions: Read/Write
.bss:00000044 _bss            segment byte public 'BSS' use32
.bss:00000044                 assume cs:_bss
.bss:00000044                 ;org 44h
.bss:00000044                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.bss:00000044                 public ?g_CRCTableInit@@3UCCRCTableInit@@A
.bss:00000044 ; CCRCTableInit g_CRCTableInit
.bss:00000044 ?g_CRCTableInit@@3UCCRCTableInit@@A db    ? ;
.bss:00000044                                         ; DATA XREF: `dynamic initializer for 'g_CRCTableInit''(void)+3o
.bss:00000045                 align 4
.bss:00000045 _bss            ends
.bss:00000045
.CRT$XCU:00000048 ; ===========================================================================
.CRT$XCU:00000048
.CRT$XCU:00000048 ; Segment type: Pure data
.CRT$XCU:00000048 ; Segment permissions: Read
.CRT$XCU:00000048 _CRT$XCU        segment dword public 'DATA' use32
.CRT$XCU:00000048                 assume cs:_CRT$XCU
.CRT$XCU:00000048                 ;org 48h
.CRT$XCU:00000048 _g_CRCTableInit$initializer$ dd offset ??__Eg_CRCTableInit@@YAXXZ ; `dynamic initializer for 'g_CRCTableInit''(void)
.CRT$XCU:00000048 _CRT$XCU        ends
.CRT$XCU:00000048
UNDEF:00000050 ; ===========================================================================
UNDEF:00000050
UNDEF:00000050 ; Segment type: Externs
UNDEF:00000050 ; UNDEF
UNDEF:00000050                 extrn __RTC_CheckEsp:near
UNDEF:00000050                                         ; CODE XREF: `dynamic initializer for 'g_CRCTableInit''(void)+Fp
UNDEF:00000050                                         ; CCRCTableInit::CCRCTableInit(void)+1Bp
UNDEF:00000054                 extrn __RTC_Shutdown:near
UNDEF:00000054                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00000058                 extrn __RTC_InitBase:near
UNDEF:00000058                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:0000005C ; _DWORD __fastcall CrcGenerateTable()
UNDEF:0000005C                 extrn @CrcGenerateTable@0:near
UNDEF:0000005C                                         ; CODE XREF: CCRCTableInit::CCRCTableInit(void)+Ep
UNDEF:0000005C
UNDEF:0000005C
UNDEF:0000005C                 end
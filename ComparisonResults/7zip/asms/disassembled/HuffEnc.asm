.text:00000000 ;
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.text:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.text:00000000 ; |                      License info: 48-3677-7074-51                      |
.text:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ;
.text:00000000 ; Input MD5   : F01C87094D74328D342B6F833076D31A
.text:00000000 ; Input CRC32 : D85C164D
.text:00000000
.text:00000000 ; File Name   : C:\workspace\7z1505-src\CPP\7zip\Bundles\Alone\Debug\HuffEnc.obj
.text:00000000 ; Format      : COFF (X386MAGIC)
.text:00000000 ; includelib "MSVCRTD"
.text:00000000 ; includelib "OLDNAMES"
.text:00000000
.text:00000000                 .686p
.text:00000000                 .mmx
.text:00000000                 .model flat
.text:00000000
.text:00000000 ; ===========================================================================
.text:00000000
.text:00000000 ; Segment type: Pure code
.text:00000000 ; Segment permissions: Read/Execute
.text:00000000 _text           segment para public 'CODE' use32
.text:00000000                 assume cs:_text
.text:00000000                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:00000000
.text:00000000 ; =============== S U B R O U T I N E =======================================
.text:00000000
.text:00000000 ; Attributes: bp-based frame
.text:00000000
.text:00000000 ; __stdcall Huffman_Generate(x, x, x, x, x)
.text:00000000                 public _Huffman_Generate@20
.text:00000000 _Huffman_Generate@20 proc near
.text:00000000
.text:00000000 var_200         = dword ptr -200h
.text:00000000 var_1FC         = dword ptr -1FCh
.text:00000000 var_1F8         = dword ptr -1F8h
.text:00000000 var_1F4         = dword ptr -1F4h
.text:00000000 var_1F0         = dword ptr -1F0h
.text:00000000 var_1EC         = dword ptr -1ECh
.text:00000000 var_1E8         = dword ptr -1E8h
.text:00000000 var_1E0         = dword ptr -1E0h
.text:00000000 var_198         = dword ptr -198h
.text:00000000 var_194         = dword ptr -194h
.text:00000000 var_190         = dword ptr -190h
.text:00000000 var_18C         = dword ptr -18Ch
.text:00000000 var_188         = dword ptr -188h
.text:00000000 var_184         = dword ptr -184h
.text:00000000 var_140         = dword ptr -140h
.text:00000000 var_13C         = dword ptr -13Ch
.text:00000000 var_138         = dword ptr -138h
.text:00000000 var_134         = dword ptr -134h
.text:00000000 var_130         = dword ptr -130h
.text:00000000 var_12C         = dword ptr -12Ch
.text:00000000 var_128         = dword ptr -128h
.text:00000000 var_124         = dword ptr -124h
.text:00000000 var_120         = dword ptr -120h
.text:00000000 var_11C         = dword ptr -11Ch
.text:00000000 var_118         = dword ptr -118h
.text:00000000 var_110         = dword ptr -110h
.text:00000000 var_18          = dword ptr -18h
.text:00000000 var_14          = dword ptr -14h
.text:00000000 var_C           = dword ptr -0Ch
.text:00000000 var_8           = dword ptr -8
.text:00000000 var_4           = dword ptr -4
.text:00000000 arg_0           = dword ptr  8
.text:00000000 arg_4           = dword ptr  0Ch
.text:00000000 arg_8           = dword ptr  10h
.text:00000000 arg_C           = dword ptr  14h
.text:00000000 arg_10          = dword ptr  18h
.text:00000000
.text:00000000                 push    ebp
.text:00000001                 mov     ebp, esp
.text:00000003                 sub     esp, 200h
.text:00000009                 push    edi
.text:0000000A                 lea     edi, [ebp+var_200]
.text:00000010                 mov     ecx, 80h ; 'Ã‡'
.text:00000015                 mov     eax, 0CCCCCCCCh
.text:0000001A                 rep stosd
.text:0000001C                 mov     eax, dword ptr ds:___security_cookie
.text:00000021                 xor     eax, ebp
.text:00000023                 mov     [ebp+var_4], eax
.text:00000026                 mov     [ebp+var_8], 0
.text:0000002D                 mov     [ebp+var_C], 0
.text:00000034                 jmp     short loc_3F
.text:00000036 ; ---------------------------------------------------------------------------
.text:00000036
.text:00000036 loc_36:                                 ; CODE XREF: Huffman_Generate(x,x,x,x,x)+53j
.text:00000036                 mov     eax, [ebp+var_C]
.text:00000039                 add     eax, 1
.text:0000003C                 mov     [ebp+var_C], eax
.text:0000003F
.text:0000003F loc_3F:                                 ; CODE XREF: Huffman_Generate(x,x,x,x,x)+34j
.text:0000003F                 cmp     [ebp+var_C], 40h ; '@'
.text:00000043                 jnb     short loc_55
.text:00000045                 mov     ecx, [ebp+var_C]
.text:00000048                 mov     [ebp+ecx*4+var_110], 0
.text:00000053                 jmp     short loc_36
.text:00000055 ; ---------------------------------------------------------------------------
.text:00000055
.text:00000055 loc_55:                                 ; CODE XREF: Huffman_Generate(x,x,x,x,x)+43j
.text:00000055                 mov     [ebp+var_C], 0
.text:0000005C                 jmp     short loc_67
.text:0000005E ; ---------------------------------------------------------------------------
.text:0000005E
.text:0000005E loc_5E:                                 ; CODE XREF: Huffman_Generate(x,x,x,x,x)+BCj
.text:0000005E                 mov     edx, [ebp+var_C]
.text:00000061                 add     edx, 1
.text:00000064                 mov     [ebp+var_C], edx
.text:00000067
.text:00000067 loc_67:                                 ; CODE XREF: Huffman_Generate(x,x,x,x,x)+5Cj
.text:00000067                 mov     eax, [ebp+var_C]
.text:0000006A                 cmp     eax, [ebp+arg_C]
.text:0000006D                 jnb     short loc_BE
.text:0000006F                 mov     ecx, [ebp+var_C]
.text:00000072                 mov     edx, [ebp+arg_0]
.text:00000075                 mov     eax, [edx+ecx*4]
.text:00000078                 mov     [ebp+var_118], eax
.text:0000007E                 cmp     [ebp+var_118], 3Fh ; '?'
.text:00000085                 jnb     short loc_95
.text:00000087                 mov     ecx, [ebp+var_118]
.text:0000008D                 mov     [ebp+var_1F4], ecx
.text:00000093                 jmp     short loc_9F
.text:00000095 ; ---------------------------------------------------------------------------
.text:00000095
.text:00000095 loc_95:                                 ; CODE XREF: Huffman_Generate(x,x,x,x,x)+85j
.text:00000095                 mov     [ebp+var_1F4], 3Fh ; '?'
.text:0000009F
.text:0000009F loc_9F:                                 ; CODE XREF: Huffman_Generate(x,x,x,x,x)+93j
.text:0000009F                 mov     edx, [ebp+var_1F4]
.text:000000A5                 mov     eax, [ebp+edx*4+var_110]
.text:000000AC                 add     eax, 1
.text:000000AF                 mov     ecx, [ebp+var_1F4]
.text:000000B5                 mov     [ebp+ecx*4+var_110], eax
.text:000000BC                 jmp     short loc_5E
.text:000000BE ; ---------------------------------------------------------------------------
.text:000000BE
.text:000000BE loc_BE:                                 ; CODE XREF: Huffman_Generate(x,x,x,x,x)+6Dj
.text:000000BE                 mov     [ebp+var_C], 1
.text:000000C5                 jmp     short loc_D0
.text:000000C7 ; ---------------------------------------------------------------------------
.text:000000C7
.text:000000C7 loc_C7:                                 ; CODE XREF: Huffman_Generate(x,x,x,x,x)+FFj
.text:000000C7                 mov     edx, [ebp+var_C]
.text:000000CA                 add     edx, 1
.text:000000CD                 mov     [ebp+var_C], edx
.text:000000D0
.text:000000D0 loc_D0:                                 ; CODE XREF: Huffman_Generate(x,x,x,x,x)+C5j
.text:000000D0                 cmp     [ebp+var_C], 40h ; '@'
.text:000000D4                 jnb     short loc_101
.text:000000D6                 mov     eax, [ebp+var_C]
.text:000000D9                 mov     ecx, [ebp+eax*4+var_110]
.text:000000E0                 mov     [ebp+var_11C], ecx
.text:000000E6                 mov     edx, [ebp+var_C]
.text:000000E9                 mov     eax, [ebp+var_8]
.text:000000EC                 mov     [ebp+edx*4+var_110], eax
.text:000000F3                 mov     ecx, [ebp+var_8]
.text:000000F6                 add     ecx, [ebp+var_11C]
.text:000000FC                 mov     [ebp+var_8], ecx
.text:000000FF                 jmp     short loc_C7
.text:00000101 ; ---------------------------------------------------------------------------
.text:00000101
.text:00000101 loc_101:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+D4j
.text:00000101                 mov     [ebp+var_C], 0
.text:00000108                 jmp     short loc_113
.text:0000010A ; ---------------------------------------------------------------------------
.text:0000010A
.text:0000010A loc_10A:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x):loc_19Fj
.text:0000010A                 mov     edx, [ebp+var_C]
.text:0000010D                 add     edx, 1
.text:00000110                 mov     [ebp+var_C], edx
.text:00000113
.text:00000113 loc_113:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+108j
.text:00000113                 mov     eax, [ebp+var_C]
.text:00000116                 cmp     eax, [ebp+arg_C]
.text:00000119                 jnb     loc_1A4
.text:0000011F                 mov     ecx, [ebp+var_C]
.text:00000122                 mov     edx, [ebp+arg_0]
.text:00000125                 mov     eax, [edx+ecx*4]
.text:00000128                 mov     [ebp+var_120], eax
.text:0000012E                 cmp     [ebp+var_120], 0
.text:00000135                 jnz     short loc_142
.text:00000137                 mov     ecx, [ebp+arg_8]
.text:0000013A                 add     ecx, [ebp+var_C]
.text:0000013D                 mov     byte ptr [ecx], 0
.text:00000140                 jmp     short loc_19F
.text:00000142 ; ---------------------------------------------------------------------------
.text:00000142
.text:00000142 loc_142:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+135j
.text:00000142                 cmp     [ebp+var_120], 3Fh ; '?'
.text:00000149                 jnb     short loc_159
.text:0000014B                 mov     edx, [ebp+var_120]
.text:00000151                 mov     [ebp+var_1F8], edx
.text:00000157                 jmp     short loc_163
.text:00000159 ; ---------------------------------------------------------------------------
.text:00000159
.text:00000159 loc_159:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+149j
.text:00000159                 mov     [ebp+var_1F8], 3Fh ; '?'
.text:00000163
.text:00000163 loc_163:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+157j
.text:00000163                 mov     eax, [ebp+var_120]
.text:00000169                 shl     eax, 0Ah
.text:0000016C                 or      eax, [ebp+var_C]
.text:0000016F                 mov     ecx, [ebp+var_1F8]
.text:00000175                 mov     edx, [ebp+ecx*4+var_110]
.text:0000017C                 mov     ecx, [ebp+arg_4]
.text:0000017F                 mov     [ecx+edx*4], eax
.text:00000182                 mov     edx, [ebp+var_1F8]
.text:00000188                 mov     eax, [ebp+edx*4+var_110]
.text:0000018F                 add     eax, 1
.text:00000192                 mov     ecx, [ebp+var_1F8]
.text:00000198                 mov     [ebp+ecx*4+var_110], eax
.text:0000019F
.text:0000019F loc_19F:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+140j
.text:0000019F                 jmp     loc_10A
.text:000001A4 ; ---------------------------------------------------------------------------
.text:000001A4
.text:000001A4 loc_1A4:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+119j
.text:000001A4                 mov     [ebp+var_110], 0
.text:000001AE                 mov     edx, [ebp+var_14]
.text:000001B1                 sub     edx, [ebp+var_18]
.text:000001B4                 push    edx
.text:000001B5                 mov     eax, [ebp+var_18]
.text:000001B8                 mov     ecx, [ebp+arg_4]
.text:000001BB                 lea     edx, [ecx+eax*4]
.text:000001BE                 push    edx
.text:000001BF                 call    _HeapSort@8     ; HeapSort(x,x)
.text:000001C4                 cmp     [ebp+var_8], 2
.text:000001C8                 jnb     short loc_243
.text:000001CA                 mov     [ebp+var_124], 0
.text:000001D4                 mov     [ebp+var_128], 1
.text:000001DE                 cmp     [ebp+var_8], 1
.text:000001E2                 jnz     short loc_206
.text:000001E4                 mov     eax, [ebp+arg_4]
.text:000001E7                 mov     ecx, [eax]
.text:000001E9                 and     ecx, 3FFh
.text:000001EF                 mov     [ebp+var_128], ecx
.text:000001F5                 jnz     short loc_206
.text:000001F7                 mov     edx, [ebp+var_128]
.text:000001FD                 add     edx, 1
.text:00000200                 mov     [ebp+var_128], edx
.text:00000206
.text:00000206 loc_206:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+1E2j
.text:00000206                                         ; Huffman_Generate(x,x,x,x,x)+1F5j
.text:00000206                 mov     eax, [ebp+var_124]
.text:0000020C                 mov     ecx, [ebp+arg_4]
.text:0000020F                 mov     dword ptr [ecx+eax*4], 0
.text:00000216                 mov     edx, [ebp+var_128]
.text:0000021C                 mov     eax, [ebp+arg_4]
.text:0000021F                 mov     dword ptr [eax+edx*4], 1
.text:00000226                 mov     ecx, [ebp+arg_8]
.text:00000229                 add     ecx, [ebp+var_128]
.text:0000022F                 mov     byte ptr [ecx], 1
.text:00000232                 mov     edx, [ebp+arg_8]
.text:00000235                 add     edx, [ebp+var_124]
.text:0000023B                 mov     byte ptr [edx], 1
.text:0000023E                 jmp     loc_6D2
.text:00000243 ; ---------------------------------------------------------------------------
.text:00000243
.text:00000243 loc_243:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+1C8j
.text:00000243                 mov     [ebp+var_130], 0
.text:0000024D                 mov     eax, [ebp+var_130]
.text:00000253                 mov     [ebp+var_12C], eax
.text:00000259                 mov     ecx, [ebp+var_12C]
.text:0000025F                 mov     [ebp+var_134], ecx
.text:00000265
.text:00000265 loc_265:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+426j
.text:00000265                 mov     edx, [ebp+var_134]
.text:0000026B                 cmp     edx, [ebp+var_8]
.text:0000026E                 jz      short loc_2BD
.text:00000270                 mov     eax, [ebp+var_12C]
.text:00000276                 cmp     eax, [ebp+var_130]
.text:0000027C                 jz      short loc_2A0
.text:0000027E                 mov     ecx, [ebp+var_134]
.text:00000284                 mov     edx, [ebp+arg_4]
.text:00000287                 mov     eax, [edx+ecx*4]
.text:0000028A                 shr     eax, 0Ah
.text:0000028D                 mov     ecx, [ebp+var_12C]
.text:00000293                 mov     edx, [ebp+arg_4]
.text:00000296                 mov     ecx, [edx+ecx*4]
.text:00000299                 shr     ecx, 0Ah
.text:0000029C                 cmp     eax, ecx
.text:0000029E                 ja      short loc_2BD
.text:000002A0
.text:000002A0 loc_2A0:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+27Cj
.text:000002A0                 mov     edx, [ebp+var_134]
.text:000002A6                 mov     [ebp+var_1FC], edx
.text:000002AC                 mov     eax, [ebp+var_134]
.text:000002B2                 add     eax, 1
.text:000002B5                 mov     [ebp+var_134], eax
.text:000002BB                 jmp     short loc_2D8
.text:000002BD ; ---------------------------------------------------------------------------
.text:000002BD
.text:000002BD loc_2BD:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+26Ej
.text:000002BD                                         ; Huffman_Generate(x,x,x,x,x)+29Ej
.text:000002BD                 mov     ecx, [ebp+var_12C]
.text:000002C3                 mov     [ebp+var_1FC], ecx
.text:000002C9                 mov     edx, [ebp+var_12C]
.text:000002CF                 add     edx, 1
.text:000002D2                 mov     [ebp+var_12C], edx
.text:000002D8
.text:000002D8 loc_2D8:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+2BBj
.text:000002D8                 mov     eax, [ebp+var_1FC]
.text:000002DE                 mov     [ebp+var_138], eax
.text:000002E4                 mov     ecx, [ebp+var_138]
.text:000002EA                 mov     edx, [ebp+arg_4]
.text:000002ED                 mov     eax, [edx+ecx*4]
.text:000002F0                 and     eax, 0FFFFFC00h
.text:000002F5                 mov     [ebp+var_140], eax
.text:000002FB                 mov     ecx, [ebp+var_138]
.text:00000301                 mov     edx, [ebp+arg_4]
.text:00000304                 mov     eax, [edx+ecx*4]
.text:00000307                 and     eax, 3FFh
.text:0000030C                 mov     ecx, [ebp+var_130]
.text:00000312                 shl     ecx, 0Ah
.text:00000315                 or      eax, ecx
.text:00000317                 mov     edx, [ebp+var_138]
.text:0000031D                 mov     ecx, [ebp+arg_4]
.text:00000320                 mov     [ecx+edx*4], eax
.text:00000323                 mov     edx, [ebp+var_134]
.text:00000329                 cmp     edx, [ebp+var_8]
.text:0000032C                 jz      short loc_37B
.text:0000032E                 mov     eax, [ebp+var_12C]
.text:00000334                 cmp     eax, [ebp+var_130]
.text:0000033A                 jz      short loc_35E
.text:0000033C                 mov     ecx, [ebp+var_134]
.text:00000342                 mov     edx, [ebp+arg_4]
.text:00000345                 mov     eax, [edx+ecx*4]
.text:00000348                 shr     eax, 0Ah
.text:0000034B                 mov     ecx, [ebp+var_12C]
.text:00000351                 mov     edx, [ebp+arg_4]
.text:00000354                 mov     ecx, [edx+ecx*4]
.text:00000357                 shr     ecx, 0Ah
.text:0000035A                 cmp     eax, ecx
.text:0000035C                 ja      short loc_37B
.text:0000035E
.text:0000035E loc_35E:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+33Aj
.text:0000035E                 mov     edx, [ebp+var_134]
.text:00000364                 mov     [ebp+var_200], edx
.text:0000036A                 mov     eax, [ebp+var_134]
.text:00000370                 add     eax, 1
.text:00000373                 mov     [ebp+var_134], eax
.text:00000379                 jmp     short loc_396
.text:0000037B ; ---------------------------------------------------------------------------
.text:0000037B
.text:0000037B loc_37B:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+32Cj
.text:0000037B                                         ; Huffman_Generate(x,x,x,x,x)+35Cj
.text:0000037B                 mov     ecx, [ebp+var_12C]
.text:00000381                 mov     [ebp+var_200], ecx
.text:00000387                 mov     edx, [ebp+var_12C]
.text:0000038D                 add     edx, 1
.text:00000390                 mov     [ebp+var_12C], edx
.text:00000396
.text:00000396 loc_396:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+379j
.text:00000396                 mov     eax, [ebp+var_200]
.text:0000039C                 mov     [ebp+var_13C], eax
.text:000003A2                 mov     ecx, [ebp+var_13C]
.text:000003A8                 mov     edx, [ebp+arg_4]
.text:000003AB                 mov     eax, [edx+ecx*4]
.text:000003AE                 and     eax, 0FFFFFC00h
.text:000003B3                 add     eax, [ebp+var_140]
.text:000003B9                 mov     [ebp+var_140], eax
.text:000003BF                 mov     ecx, [ebp+var_13C]
.text:000003C5                 mov     edx, [ebp+arg_4]
.text:000003C8                 mov     eax, [edx+ecx*4]
.text:000003CB                 and     eax, 3FFh
.text:000003D0                 mov     ecx, [ebp+var_130]
.text:000003D6                 shl     ecx, 0Ah
.text:000003D9                 or      eax, ecx
.text:000003DB                 mov     edx, [ebp+var_13C]
.text:000003E1                 mov     ecx, [ebp+arg_4]
.text:000003E4                 mov     [ecx+edx*4], eax
.text:000003E7                 mov     edx, [ebp+var_130]
.text:000003ED                 mov     eax, [ebp+arg_4]
.text:000003F0                 mov     ecx, [eax+edx*4]
.text:000003F3                 and     ecx, 3FFh
.text:000003F9                 or      ecx, [ebp+var_140]
.text:000003FF                 mov     edx, [ebp+var_130]
.text:00000405                 mov     eax, [ebp+arg_4]
.text:00000408                 mov     [eax+edx*4], ecx
.text:0000040B                 mov     ecx, [ebp+var_130]
.text:00000411                 add     ecx, 1
.text:00000414                 mov     [ebp+var_130], ecx
.text:0000041A                 mov     edx, [ebp+var_8]
.text:0000041D                 sub     edx, [ebp+var_130]
.text:00000423                 cmp     edx, 1
.text:00000426                 ja      loc_265
.text:0000042C                 mov     [ebp+var_134], 0
.text:00000436                 jmp     short loc_447
.text:00000438 ; ---------------------------------------------------------------------------
.text:00000438
.text:00000438 loc_438:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+461j
.text:00000438                 mov     eax, [ebp+var_134]
.text:0000043E                 add     eax, 1
.text:00000441                 mov     [ebp+var_134], eax
.text:00000447
.text:00000447 loc_447:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+436j
.text:00000447                 cmp     [ebp+var_134], 10h
.text:0000044E                 ja      short loc_463
.text:00000450                 mov     ecx, [ebp+var_134]
.text:00000456                 mov     [ebp+ecx*4+var_188], 0
.text:00000461                 jmp     short loc_438
.text:00000463 ; ---------------------------------------------------------------------------
.text:00000463
.text:00000463 loc_463:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+44Ej
.text:00000463                 mov     edx, [ebp+var_130]
.text:00000469                 sub     edx, 1
.text:0000046C                 mov     [ebp+var_130], edx
.text:00000472                 mov     eax, [ebp+var_130]
.text:00000478                 mov     ecx, [ebp+arg_4]
.text:0000047B                 mov     edx, [ecx+eax*4]
.text:0000047E                 and     edx, 3FFh
.text:00000484                 mov     eax, [ebp+var_130]
.text:0000048A                 mov     ecx, [ebp+arg_4]
.text:0000048D                 mov     [ecx+eax*4], edx
.text:00000490                 mov     [ebp+var_184], 2
.text:0000049A
.text:0000049A loc_49A:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+574j
.text:0000049A                 cmp     [ebp+var_130], 0
.text:000004A1                 jbe     loc_579
.text:000004A7                 mov     edx, [ebp+var_130]
.text:000004AD                 sub     edx, 1
.text:000004B0                 mov     [ebp+var_130], edx
.text:000004B6                 mov     eax, [ebp+var_130]
.text:000004BC                 mov     ecx, [ebp+arg_4]
.text:000004BF                 mov     edx, [ecx+eax*4]
.text:000004C2                 shr     edx, 0Ah
.text:000004C5                 mov     eax, [ebp+arg_4]
.text:000004C8                 mov     ecx, [eax+edx*4]
.text:000004CB                 shr     ecx, 0Ah
.text:000004CE                 add     ecx, 1
.text:000004D1                 mov     [ebp+var_190], ecx
.text:000004D7                 mov     edx, [ebp+var_130]
.text:000004DD                 mov     eax, [ebp+arg_4]
.text:000004E0                 mov     ecx, [eax+edx*4]
.text:000004E3                 and     ecx, 3FFh
.text:000004E9                 mov     edx, [ebp+var_190]
.text:000004EF                 shl     edx, 0Ah
.text:000004F2                 or      ecx, edx
.text:000004F4                 mov     eax, [ebp+var_130]
.text:000004FA                 mov     edx, [ebp+arg_4]
.text:000004FD                 mov     [edx+eax*4], ecx
.text:00000500                 mov     eax, [ebp+var_190]
.text:00000506                 cmp     eax, [ebp+arg_10]
.text:00000509                 jb      short loc_53A
.text:0000050B                 mov     ecx, [ebp+arg_10]
.text:0000050E                 sub     ecx, 1
.text:00000511                 mov     [ebp+var_190], ecx
.text:00000517                 jmp     short loc_528
.text:00000519 ; ---------------------------------------------------------------------------
.text:00000519
.text:00000519 loc_519:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+538j
.text:00000519                 mov     edx, [ebp+var_190]
.text:0000051F                 sub     edx, 1
.text:00000522                 mov     [ebp+var_190], edx
.text:00000528
.text:00000528 loc_528:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+517j
.text:00000528                 mov     eax, [ebp+var_190]
.text:0000052E                 cmp     [ebp+eax*4+var_188], 0
.text:00000536                 jnz     short loc_53A
.text:00000538                 jmp     short loc_519
.text:0000053A ; ---------------------------------------------------------------------------
.text:0000053A
.text:0000053A loc_53A:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+509j
.text:0000053A                                         ; Huffman_Generate(x,x,x,x,x)+536j
.text:0000053A                 mov     ecx, [ebp+var_190]
.text:00000540                 mov     edx, [ebp+ecx*4+var_188]
.text:00000547                 sub     edx, 1
.text:0000054A                 mov     eax, [ebp+var_190]
.text:00000550                 mov     [ebp+eax*4+var_188], edx
.text:00000557                 mov     ecx, [ebp+var_190]
.text:0000055D                 mov     edx, [ebp+ecx*4+var_184]
.text:00000564                 add     edx, 2
.text:00000567                 mov     eax, [ebp+var_190]
.text:0000056D                 mov     [ebp+eax*4+var_184], edx
.text:00000574                 jmp     loc_49A
.text:00000579 ; ---------------------------------------------------------------------------
.text:00000579
.text:00000579 loc_579:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+4A1j
.text:00000579                 mov     [ebp+var_134], 0
.text:00000583                 mov     ecx, [ebp+arg_10]
.text:00000586                 mov     [ebp+var_194], ecx
.text:0000058C                 jmp     short loc_59D
.text:0000058E ; ---------------------------------------------------------------------------
.text:0000058E
.text:0000058E loc_58E:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x):loc_602j
.text:0000058E                 mov     edx, [ebp+var_194]
.text:00000594                 sub     edx, 1
.text:00000597                 mov     [ebp+var_194], edx
.text:0000059D
.text:0000059D loc_59D:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+58Cj
.text:0000059D                 cmp     [ebp+var_194], 0
.text:000005A4                 jz      short loc_604
.text:000005A6                 mov     eax, [ebp+var_194]
.text:000005AC                 mov     ecx, [ebp+eax*4+var_188]
.text:000005B3                 mov     [ebp+var_198], ecx
.text:000005B9                 jmp     short loc_5CA
.text:000005BB ; ---------------------------------------------------------------------------
.text:000005BB
.text:000005BB loc_5BB:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+600j
.text:000005BB                 mov     edx, [ebp+var_198]
.text:000005C1                 sub     edx, 1
.text:000005C4                 mov     [ebp+var_198], edx
.text:000005CA
.text:000005CA loc_5CA:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+5B9j
.text:000005CA                 cmp     [ebp+var_198], 0
.text:000005D1                 jz      short loc_602
.text:000005D3                 mov     eax, [ebp+var_134]
.text:000005D9                 mov     ecx, [ebp+arg_4]
.text:000005DC                 mov     edx, [ecx+eax*4]
.text:000005DF                 and     edx, 3FFh
.text:000005E5                 mov     eax, [ebp+arg_8]
.text:000005E8                 mov     cl, byte ptr [ebp+var_194]
.text:000005EE                 mov     [eax+edx], cl
.text:000005F1                 mov     edx, [ebp+var_134]
.text:000005F7                 add     edx, 1
.text:000005FA                 mov     [ebp+var_134], edx
.text:00000600                 jmp     short loc_5BB
.text:00000602 ; ---------------------------------------------------------------------------
.text:00000602
.text:00000602 loc_602:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+5D1j
.text:00000602                 jmp     short loc_58E
.text:00000604 ; ---------------------------------------------------------------------------
.text:00000604
.text:00000604 loc_604:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+5A4j
.text:00000604                 mov     [ebp+var_1E8], 0
.text:0000060E                 mov     [ebp+var_1EC], 1
.text:00000618                 jmp     short loc_629
.text:0000061A ; ---------------------------------------------------------------------------
.text:0000061A
.text:0000061A loc_61A:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+660j
.text:0000061A                 mov     eax, [ebp+var_1EC]
.text:00000620                 add     eax, 1
.text:00000623                 mov     [ebp+var_1EC], eax
.text:00000629
.text:00000629 loc_629:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+618j
.text:00000629                 cmp     [ebp+var_1EC], 10h
.text:00000630                 ja      short loc_662
.text:00000632                 mov     ecx, [ebp+var_1EC]
.text:00000638                 mov     edx, [ebp+var_1E8]
.text:0000063E                 add     edx, [ebp+ecx*4+var_18C]
.text:00000645                 shl     edx, 1
.text:00000647                 mov     [ebp+var_1E8], edx
.text:0000064D                 mov     eax, [ebp+var_1EC]
.text:00000653                 mov     ecx, [ebp+var_1E8]
.text:00000659                 mov     [ebp+eax*4+var_1E0], ecx
.text:00000660                 jmp     short loc_61A
.text:00000662 ; ---------------------------------------------------------------------------
.text:00000662
.text:00000662 loc_662:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+630j
.text:00000662                 mov     [ebp+var_1F0], 0
.text:0000066C                 jmp     short loc_67D
.text:0000066E ; ---------------------------------------------------------------------------
.text:0000066E
.text:0000066E loc_66E:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+6D0j
.text:0000066E                 mov     edx, [ebp+var_1F0]
.text:00000674                 add     edx, 1
.text:00000677                 mov     [ebp+var_1F0], edx
.text:0000067D
.text:0000067D loc_67D:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+66Cj
.text:0000067D                 mov     eax, [ebp+var_1F0]
.text:00000683                 cmp     eax, [ebp+arg_C]
.text:00000686                 jnb     short loc_6D2
.text:00000688                 mov     ecx, [ebp+arg_8]
.text:0000068B                 add     ecx, [ebp+var_1F0]
.text:00000691                 movzx   edx, byte ptr [ecx]
.text:00000694                 mov     eax, [ebp+var_1F0]
.text:0000069A                 mov     ecx, [ebp+arg_4]
.text:0000069D                 mov     edx, [ebp+edx*4+var_1E0]
.text:000006A4                 mov     [ecx+eax*4], edx
.text:000006A7                 mov     eax, [ebp+arg_8]
.text:000006AA                 add     eax, [ebp+var_1F0]
.text:000006B0                 movzx   ecx, byte ptr [eax]
.text:000006B3                 mov     edx, [ebp+ecx*4+var_1E0]
.text:000006BA                 add     edx, 1
.text:000006BD                 mov     eax, [ebp+arg_8]
.text:000006C0                 add     eax, [ebp+var_1F0]
.text:000006C6                 movzx   ecx, byte ptr [eax]
.text:000006C9                 mov     [ebp+ecx*4+var_1E0], edx
.text:000006D0                 jmp     short loc_66E
.text:000006D2 ; ---------------------------------------------------------------------------
.text:000006D2
.text:000006D2 loc_6D2:                                ; CODE XREF: Huffman_Generate(x,x,x,x,x)+23Ej
.text:000006D2                                         ; Huffman_Generate(x,x,x,x,x)+686j
.text:000006D2                 push    edx
.text:000006D3                 mov     ecx, ebp
.text:000006D5                 push    eax
.text:000006D6                 lea     edx, $LN58
.text:000006DC                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:000006E1                 pop     eax
.text:000006E2                 pop     edx
.text:000006E3                 pop     edi
.text:000006E4                 mov     ecx, [ebp+var_4]
.text:000006E7                 xor     ecx, ebp
.text:000006E9                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:000006EE                 add     esp, 200h
.text:000006F4                 cmp     ebp, esp
.text:000006F6                 call    __RTC_CheckEsp
.text:000006FB                 mov     esp, ebp
.text:000006FD                 pop     ebp
.text:000006FE                 retn    14h
.text:000006FE _Huffman_Generate@20 endp
.text:000006FE
.text:000006FE ; ---------------------------------------------------------------------------
.text:00000701                 align 4
.text:00000704 $LN58           dd 3                    ; DATA XREF: Huffman_Generate(x,x,x,x,x)+6D6o
.text:00000708                 dd offset $LN57
.text:0000070C $LN57           dd 0FFFFFEF0h, 100h     ; DATA XREF: .text:00000708o
.text:00000714                 dd offset $LN54         ; "counters"
.text:00000718                 dd 0FFFFFE78h, 44h
.text:00000720                 dd offset $LN55         ; "lenCounters"
.text:00000724                 dd 0FFFFFE20h, 44h
.text:0000072C                 dd offset $LN56         ; "nextCodes"
.text:00000730 $LN56           db 'nextCodes',0        ; DATA XREF: .text:0000072Co
.text:0000073A $LN55           db 'lenCounters',0      ; DATA XREF: .text:00000720o
.text:00000746 $LN54           db 'counters',0         ; DATA XREF: .text:00000714o
.text:0000074F                 align 10h
.text:0000074F _text           ends
.text:0000074F
.rtc$TMZ:00000750 ; ===========================================================================
.rtc$TMZ:00000750
.rtc$TMZ:00000750 ; Segment type: Pure data
.rtc$TMZ:00000750 ; Segment permissions: Read
.rtc$TMZ:00000750 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00000750                 assume cs:_rtc$TMZ
.rtc$TMZ:00000750                 ;org 750h
.rtc$TMZ:00000750 ; COMDAT (pick any)
.rtc$TMZ:00000750 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00000750 _rtc$TMZ        ends
.rtc$TMZ:00000750
.rtc$IMZ:00000754 ; ===========================================================================
.rtc$IMZ:00000754
.rtc$IMZ:00000754 ; Segment type: Pure data
.rtc$IMZ:00000754 ; Segment permissions: Read
.rtc$IMZ:00000754 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00000754                 assume cs:_rtc$IMZ
.rtc$IMZ:00000754                 ;org 754h
.rtc$IMZ:00000754 ; COMDAT (pick any)
.rtc$IMZ:00000754 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00000754 _rtc$IMZ        ends
.rtc$IMZ:00000754
UNDEF:00000760 ; ===========================================================================
UNDEF:00000760
UNDEF:00000760 ; Segment type: Externs
UNDEF:00000760 ; UNDEF
UNDEF:00000760 ; __stdcall HeapSort(x, x)
UNDEF:00000760                 extrn _HeapSort@8:near  ; CODE XREF: Huffman_Generate(x,x,x,x,x)+1BFp
UNDEF:00000764                 extrn ___security_cookie:near
UNDEF:00000764                                         ; DATA XREF: Huffman_Generate(x,x,x,x,x)+1Cr
UNDEF:00000768                 extrn __RTC_CheckEsp:near
UNDEF:00000768                                         ; CODE XREF: Huffman_Generate(x,x,x,x,x)+6F6p
UNDEF:0000076C ; __fastcall __security_check_cookie(x)
UNDEF:0000076C                 extrn @__security_check_cookie@4:near
UNDEF:0000076C                                         ; CODE XREF: Huffman_Generate(x,x,x,x,x)+6E9p
UNDEF:00000770 ; __fastcall _RTC_CheckStackVars(x, x)
UNDEF:00000770                 extrn @_RTC_CheckStackVars@8:near
UNDEF:00000770                                         ; CODE XREF: Huffman_Generate(x,x,x,x,x)+6DCp
UNDEF:00000774                 extrn __RTC_Shutdown:near
UNDEF:00000774                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00000778                 extrn __RTC_InitBase:near
UNDEF:00000778                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:00000778
UNDEF:00000778
UNDEF:00000778                 end
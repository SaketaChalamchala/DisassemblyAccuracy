.text:00000000 ;
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.text:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.text:00000000 ; |                      License info: 48-3677-7074-51                      |
.text:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ;
.text:00000000 ; Input MD5   : 5AF720250400DB4E480F173FB9EF2121
.text:00000000 ; Input CRC32 : AB907C63
.text:00000000
.text:00000000 ; File Name   : C:\workspace\7z1505-src\CPP\7zip\Bundles\Alone\Debug\AesOpt.obj
.text:00000000 ; Format      : COFF (X386MAGIC)
.text:00000000 ; includelib "MSVCRTD"
.text:00000000 ; includelib "OLDNAMES"
.text:00000000
.text:00000000                 .686p
.text:00000000                 .mmx
.text:00000000                 .model flat
.text:00000000
.text:00000000 ; ===========================================================================
.text:00000000
.text:00000000 ; Segment type: Pure code
.text:00000000 ; Segment permissions: Read/Execute
.text:00000000 _text           segment para public 'CODE' use32
.text:00000000                 assume cs:_text
.text:00000000                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:00000000
.text:00000000 ; =============== S U B R O U T I N E =======================================
.text:00000000
.text:00000000
.text:00000000 ; __fastcall AesCbc_Encode_Intel(x, x, x)
.text:00000000                 public @AesCbc_Encode_Intel@12
.text:00000000 @AesCbc_Encode_Intel@12 proc near
.text:00000000
.text:00000000 var_8           = dword ptr -8
.text:00000000
.text:00000000                 push    ebx
.text:00000001                 mov     ebx, esp
.text:00000003                 sub     esp, 8
.text:00000006                 and     esp, 0FFFFFFF0h
.text:00000009                 add     esp, 4
.text:0000000C                 push    ebp
.text:0000000D                 mov     ebp, [ebx+4]
.text:00000010                 mov     [esp+0Ch+var_8], ebp
.text:00000014                 mov     ebp, esp
.text:00000016                 sub     esp, 30h
.text:00000019                 push    edi
.text:0000001A                 push    ecx
.text:0000001B                 lea     edi, [ebp-30h]
.text:0000001E                 mov     ecx, 0Ch
.text:00000023                 mov     eax, 0CCCCCCCCh
.text:00000028                 rep stosd
.text:0000002A                 pop     ecx
.text:0000002B                 mov     [ebp-8], edx
.text:0000002E                 mov     [ebp-4], ecx
.text:00000031                 mov     eax, [ebp-4]
.text:00000034                 movdqa  xmm0, xmmword ptr [eax]
.text:00000038                 movdqa  xmmword ptr [ebp-20h], xmm0
.text:0000003D                 jmp     short loc_51
.text:0000003F ; ---------------------------------------------------------------------------
.text:0000003F
.text:0000003F loc_3F:                                 ; CODE XREF: AesCbc_Encode_Intel(x,x,x)+115j
.text:0000003F                 mov     ecx, [ebx+8]
.text:00000042                 sub     ecx, 1
.text:00000045                 mov     [ebx+8], ecx
.text:00000048                 mov     edx, [ebp-8]
.text:0000004B                 add     edx, 10h
.text:0000004E                 mov     [ebp-8], edx
.text:00000051
.text:00000051 loc_51:                                 ; CODE XREF: AesCbc_Encode_Intel(x,x,x)+3Dj
.text:00000051                 cmp     dword ptr [ebx+8], 0
.text:00000055                 jz      loc_11A
.text:0000005B                 mov     eax, [ebp-4]
.text:0000005E                 mov     ecx, [eax+10h]
.text:00000061                 sub     ecx, 1
.text:00000064                 mov     [ebp-24h], ecx
.text:00000067                 mov     edx, [ebp-4]
.text:0000006A                 add     edx, 30h ; '0'
.text:0000006D                 mov     [ebp-28h], edx
.text:00000070                 mov     eax, [ebp-8]
.text:00000073                 movdqa  xmm0, xmmword ptr [eax]
.text:00000077                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:0000007C                 pxor    xmm1, xmm0
.text:00000080                 movdqa  xmmword ptr [ebp-20h], xmm1
.text:00000085                 mov     ecx, [ebp-4]
.text:00000088                 movdqa  xmm0, xmmword ptr [ecx+20h]
.text:0000008D                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:00000092                 pxor    xmm1, xmm0
.text:00000096                 movdqa  xmmword ptr [ebp-20h], xmm1
.text:0000009B
.text:0000009B loc_9B:                                 ; CODE XREF: AesCbc_Encode_Intel(x,x,x)+DAj
.text:0000009B                 mov     edx, [ebp-28h]
.text:0000009E                 movdqa  xmm0, xmmword ptr [edx]
.text:000000A2                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:000000A7                 aesenc  xmm1, xmm0
.text:000000AC                 movdqa  xmmword ptr [ebp-20h], xmm1
.text:000000B1                 mov     eax, [ebp-28h]
.text:000000B4                 movdqa  xmm0, xmmword ptr [eax+10h]
.text:000000B9                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:000000BE                 aesenc  xmm1, xmm0
.text:000000C3                 movdqa  xmmword ptr [ebp-20h], xmm1
.text:000000C8                 mov     ecx, [ebp-28h]
.text:000000CB                 add     ecx, 20h ; ' '
.text:000000CE                 mov     [ebp-28h], ecx
.text:000000D1                 mov     edx, [ebp-24h]
.text:000000D4                 sub     edx, 1
.text:000000D7                 mov     [ebp-24h], edx
.text:000000DA                 jnz     short loc_9B
.text:000000DC                 mov     eax, [ebp-28h]
.text:000000DF                 movdqa  xmm0, xmmword ptr [eax]
.text:000000E3                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:000000E8                 aesenc  xmm1, xmm0
.text:000000ED                 movdqa  xmmword ptr [ebp-20h], xmm1
.text:000000F2                 mov     ecx, [ebp-28h]
.text:000000F5                 movdqa  xmm0, xmmword ptr [ecx+10h]
.text:000000FA                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:000000FF                 aesenclast xmm1, xmm0
.text:00000104                 movdqa  xmmword ptr [ebp-20h], xmm1
.text:00000109                 mov     edx, [ebp-8]
.text:0000010C                 movdqa  xmm0, xmmword ptr [ebp-20h]
.text:00000111                 movdqa  xmmword ptr [edx], xmm0
.text:00000115                 jmp     loc_3F
.text:0000011A ; ---------------------------------------------------------------------------
.text:0000011A
.text:0000011A loc_11A:                                ; CODE XREF: AesCbc_Encode_Intel(x,x,x)+55j
.text:0000011A                 mov     eax, [ebp-4]
.text:0000011D                 movdqa  xmm0, xmmword ptr [ebp-20h]
.text:00000122                 movdqa  xmmword ptr [eax], xmm0
.text:00000126                 pop     edi
.text:00000127                 mov     esp, ebp
.text:00000129                 pop     ebp
.text:0000012A                 mov     esp, ebx
.text:0000012C                 pop     ebx
.text:0000012D                 retn    4
.text:0000012D @AesCbc_Encode_Intel@12 endp
.text:0000012D
.text:00000130
.text:00000130 ; =============== S U B R O U T I N E =======================================
.text:00000130
.text:00000130
.text:00000130 ; __fastcall AesCbc_Decode_Intel(x, x, x)
.text:00000130                 public @AesCbc_Decode_Intel@12
.text:00000130 @AesCbc_Decode_Intel@12 proc near
.text:00000130
.text:00000130 var_8           = dword ptr -8
.text:00000130
.text:00000130                 push    ebx
.text:00000131                 mov     ebx, esp
.text:00000133                 sub     esp, 8
.text:00000136                 and     esp, 0FFFFFFF0h
.text:00000139                 add     esp, 4
.text:0000013C                 push    ebp
.text:0000013D                 mov     ebp, [ebx+4]
.text:00000140                 mov     [esp+0Ch+var_8], ebp
.text:00000144                 mov     ebp, esp
.text:00000146                 sub     esp, 0E0h
.text:0000014C                 push    edi
.text:0000014D                 push    ecx
.text:0000014E                 lea     edi, [ebp-0E0h]
.text:00000154                 mov     ecx, 38h ; '8'
.text:00000159                 mov     eax, 0CCCCCCCCh
.text:0000015E                 rep stosd
.text:00000160                 pop     ecx
.text:00000161                 mov     [ebp-8], edx
.text:00000164                 mov     [ebp-4], ecx
.text:00000167                 mov     eax, [ebp-4]
.text:0000016A                 movdqa  xmm0, xmmword ptr [eax]
.text:0000016E                 movdqa  xmmword ptr [ebp-20h], xmm0
.text:00000173                 jmp     short loc_187
.text:00000175 ; ---------------------------------------------------------------------------
.text:00000175
.text:00000175 loc_175:                                ; CODE XREF: AesCbc_Decode_Intel(x,x,x)+2C4j
.text:00000175                 mov     ecx, [ebx+8]
.text:00000178                 sub     ecx, 3
.text:0000017B                 mov     [ebx+8], ecx
.text:0000017E                 mov     edx, [ebp-8]
.text:00000181                 add     edx, 30h ; '0'
.text:00000184                 mov     [ebp-8], edx
.text:00000187
.text:00000187 loc_187:                                ; CODE XREF: AesCbc_Decode_Intel(x,x,x)+43j
.text:00000187                 cmp     dword ptr [ebx+8], 3
.text:0000018B                 jb      loc_3F9
.text:00000191                 mov     eax, [ebp-4]
.text:00000194                 mov     ecx, [eax+10h]
.text:00000197                 mov     [ebp-24h], ecx
.text:0000019A                 mov     edx, [ebp-24h]
.text:0000019D                 shl     edx, 1
.text:0000019F                 shl     edx, 4
.text:000001A2                 add     edx, [ebp-4]
.text:000001A5                 mov     [ebp-28h], edx
.text:000001A8                 mov     eax, [ebp-28h]
.text:000001AB                 movdqa  xmm0, xmmword ptr [eax+20h]
.text:000001B0                 movdqa  xmmword ptr [ebp-70h], xmm0
.text:000001B5                 mov     ecx, [ebp-8]
.text:000001B8                 movdqa  xmm0, xmmword ptr [ecx]
.text:000001BC                 movdqa  xmm1, xmmword ptr [ebp-70h]
.text:000001C1                 pxor    xmm1, xmm0
.text:000001C5                 movdqa  xmmword ptr [ebp-40h], xmm1
.text:000001CA                 mov     edx, [ebp-8]
.text:000001CD                 movdqa  xmm0, xmmword ptr [edx+10h]
.text:000001D2                 movdqa  xmm1, xmmword ptr [ebp-70h]
.text:000001D7                 pxor    xmm1, xmm0
.text:000001DB                 movdqa  xmmword ptr [ebp-50h], xmm1
.text:000001E0                 mov     eax, [ebp-8]
.text:000001E3                 movdqa  xmm0, xmmword ptr [eax+20h]
.text:000001E8                 movdqa  xmm1, xmmword ptr [ebp-70h]
.text:000001ED                 pxor    xmm1, xmm0
.text:000001F1                 movdqa  xmmword ptr [ebp-60h], xmm1
.text:000001F6                 mov     ecx, [ebp-24h]
.text:000001F9                 sub     ecx, 1
.text:000001FC                 mov     [ebp-24h], ecx
.text:000001FF
.text:000001FF loc_1FF:                                ; CODE XREF: AesCbc_Decode_Intel(x,x,x)+17Ej
.text:000001FF                 mov     edx, [ebp-28h]
.text:00000202                 movdqa  xmm0, xmmword ptr [edx+10h]
.text:00000207                 movdqa  xmmword ptr [ebp-80h], xmm0
.text:0000020C                 movdqa  xmm0, xmmword ptr [ebp-80h]
.text:00000211                 movdqa  xmm1, xmmword ptr [ebp-40h]
.text:00000216                 aesdec  xmm1, xmm0
.text:0000021B                 movdqa  xmmword ptr [ebp-40h], xmm1
.text:00000220                 movdqa  xmm0, xmmword ptr [ebp-80h]
.text:00000225                 movdqa  xmm1, xmmword ptr [ebp-50h]
.text:0000022A                 aesdec  xmm1, xmm0
.text:0000022F                 movdqa  xmmword ptr [ebp-50h], xmm1
.text:00000234                 movdqa  xmm0, xmmword ptr [ebp-80h]
.text:00000239                 movdqa  xmm1, xmmword ptr [ebp-60h]
.text:0000023E                 aesdec  xmm1, xmm0
.text:00000243                 movdqa  xmmword ptr [ebp-60h], xmm1
.text:00000248                 mov     eax, [ebp-28h]
.text:0000024B                 movdqa  xmm0, xmmword ptr [eax]
.text:0000024F                 movdqa  xmmword ptr [ebp-90h], xmm0
.text:00000257                 movdqa  xmm0, xmmword ptr [ebp-90h]
.text:0000025F                 movdqa  xmm1, xmmword ptr [ebp-40h]
.text:00000264                 aesdec  xmm1, xmm0
.text:00000269                 movdqa  xmmword ptr [ebp-40h], xmm1
.text:0000026E                 movdqa  xmm0, xmmword ptr [ebp-90h]
.text:00000276                 movdqa  xmm1, xmmword ptr [ebp-50h]
.text:0000027B                 aesdec  xmm1, xmm0
.text:00000280                 movdqa  xmmword ptr [ebp-50h], xmm1
.text:00000285                 movdqa  xmm0, xmmword ptr [ebp-90h]
.text:0000028D                 movdqa  xmm1, xmmword ptr [ebp-60h]
.text:00000292                 aesdec  xmm1, xmm0
.text:00000297                 movdqa  xmmword ptr [ebp-60h], xmm1
.text:0000029C                 mov     ecx, [ebp-28h]
.text:0000029F                 sub     ecx, 20h ; ' '
.text:000002A2                 mov     [ebp-28h], ecx
.text:000002A5                 mov     edx, [ebp-24h]
.text:000002A8                 sub     edx, 1
.text:000002AB                 mov     [ebp-24h], edx
.text:000002AE                 jnz     loc_1FF
.text:000002B4                 mov     eax, [ebp-28h]
.text:000002B7                 movdqa  xmm0, xmmword ptr [eax+10h]
.text:000002BC                 movdqa  xmmword ptr [ebp-0A0h], xmm0
.text:000002C4                 movdqa  xmm0, xmmword ptr [ebp-0A0h]
.text:000002CC                 movdqa  xmm1, xmmword ptr [ebp-40h]
.text:000002D1                 aesdec  xmm1, xmm0
.text:000002D6                 movdqa  xmmword ptr [ebp-40h], xmm1
.text:000002DB                 movdqa  xmm0, xmmword ptr [ebp-0A0h]
.text:000002E3                 movdqa  xmm1, xmmword ptr [ebp-50h]
.text:000002E8                 aesdec  xmm1, xmm0
.text:000002ED                 movdqa  xmmword ptr [ebp-50h], xmm1
.text:000002F2                 movdqa  xmm0, xmmword ptr [ebp-0A0h]
.text:000002FA                 movdqa  xmm1, xmmword ptr [ebp-60h]
.text:000002FF                 aesdec  xmm1, xmm0
.text:00000304                 movdqa  xmmword ptr [ebp-60h], xmm1
.text:00000309                 mov     ecx, [ebp-28h]
.text:0000030C                 movdqa  xmm0, xmmword ptr [ecx]
.text:00000310                 movdqa  xmmword ptr [ebp-0B0h], xmm0
.text:00000318                 movdqa  xmm0, xmmword ptr [ebp-0B0h]
.text:00000320                 movdqa  xmm1, xmmword ptr [ebp-40h]
.text:00000325                 aesdeclast xmm1, xmm0
.text:0000032A                 movdqa  xmmword ptr [ebp-40h], xmm1
.text:0000032F                 movdqa  xmm0, xmmword ptr [ebp-0B0h]
.text:00000337                 movdqa  xmm1, xmmword ptr [ebp-50h]
.text:0000033C                 aesdeclast xmm1, xmm0
.text:00000341                 movdqa  xmmword ptr [ebp-50h], xmm1
.text:00000346                 movdqa  xmm0, xmmword ptr [ebp-0B0h]
.text:0000034E                 movdqa  xmm1, xmmword ptr [ebp-60h]
.text:00000353                 aesdeclast xmm1, xmm0
.text:00000358                 movdqa  xmmword ptr [ebp-60h], xmm1
.text:0000035D                 movdqa  xmm0, xmmword ptr [ebp-20h]
.text:00000362                 movdqa  xmm1, xmmword ptr [ebp-40h]
.text:00000367                 pxor    xmm1, xmm0
.text:0000036B                 movdqa  xmmword ptr [ebp-0C0h], xmm1
.text:00000373                 mov     edx, [ebp-8]
.text:00000376                 movdqa  xmm0, xmmword ptr [edx]
.text:0000037A                 movdqa  xmmword ptr [ebp-20h], xmm0
.text:0000037F                 mov     eax, [ebp-8]
.text:00000382                 movdqa  xmm0, xmmword ptr [ebp-0C0h]
.text:0000038A                 movdqa  xmmword ptr [eax], xmm0
.text:0000038E                 movdqa  xmm0, xmmword ptr [ebp-20h]
.text:00000393                 movdqa  xmm1, xmmword ptr [ebp-50h]
.text:00000398                 pxor    xmm1, xmm0
.text:0000039C                 movdqa  xmmword ptr [ebp-0C0h], xmm1
.text:000003A4                 mov     ecx, [ebp-8]
.text:000003A7                 movdqa  xmm0, xmmword ptr [ecx+10h]
.text:000003AC                 movdqa  xmmword ptr [ebp-20h], xmm0
.text:000003B1                 mov     edx, [ebp-8]
.text:000003B4                 movdqa  xmm0, xmmword ptr [ebp-0C0h]
.text:000003BC                 movdqa  xmmword ptr [edx+10h], xmm0
.text:000003C1                 movdqa  xmm0, xmmword ptr [ebp-20h]
.text:000003C6                 movdqa  xmm1, xmmword ptr [ebp-60h]
.text:000003CB                 pxor    xmm1, xmm0
.text:000003CF                 movdqa  xmmword ptr [ebp-0C0h], xmm1
.text:000003D7                 mov     eax, [ebp-8]
.text:000003DA                 movdqa  xmm0, xmmword ptr [eax+20h]
.text:000003DF                 movdqa  xmmword ptr [ebp-20h], xmm0
.text:000003E4                 mov     ecx, [ebp-8]
.text:000003E7                 movdqa  xmm0, xmmword ptr [ebp-0C0h]
.text:000003EF                 movdqa  xmmword ptr [ecx+20h], xmm0
.text:000003F4                 jmp     loc_175
.text:000003F9 ; ---------------------------------------------------------------------------
.text:000003F9
.text:000003F9 loc_3F9:                                ; CODE XREF: AesCbc_Decode_Intel(x,x,x)+5Bj
.text:000003F9                 jmp     short loc_40D
.text:000003FB ; ---------------------------------------------------------------------------
.text:000003FB
.text:000003FB loc_3FB:                                ; CODE XREF: AesCbc_Decode_Intel(x,x,x)+406j
.text:000003FB                 mov     edx, [ebx+8]
.text:000003FE                 sub     edx, 1
.text:00000401                 mov     [ebx+8], edx
.text:00000404                 mov     eax, [ebp-8]
.text:00000407                 add     eax, 10h
.text:0000040A                 mov     [ebp-8], eax
.text:0000040D
.text:0000040D loc_40D:                                ; CODE XREF: AesCbc_Decode_Intel(x,x,x):loc_3F9j
.text:0000040D                 cmp     dword ptr [ebx+8], 0
.text:00000411                 jz      loc_53B
.text:00000417                 mov     ecx, [ebp-4]
.text:0000041A                 mov     edx, [ecx+10h]
.text:0000041D                 mov     [ebp-0C4h], edx
.text:00000423                 mov     eax, [ebp-0C4h]
.text:00000429                 shl     eax, 1
.text:0000042B                 shl     eax, 4
.text:0000042E                 add     eax, [ebp-4]
.text:00000431                 mov     [ebp-0C8h], eax
.text:00000437                 mov     ecx, [ebp-8]
.text:0000043A                 movdqa  xmm0, xmmword ptr [ecx]
.text:0000043E                 mov     edx, [ebp-0C8h]
.text:00000444                 movdqa  xmm1, xmmword ptr [edx+20h]
.text:00000449                 pxor    xmm1, xmm0
.text:0000044D                 movdqa  xmmword ptr [ebp-0E0h], xmm1
.text:00000455                 mov     eax, [ebp-0C4h]
.text:0000045B                 sub     eax, 1
.text:0000045E                 mov     [ebp-0C4h], eax
.text:00000464
.text:00000464 loc_464:                                ; CODE XREF: AesCbc_Decode_Intel(x,x,x)+391j
.text:00000464                 mov     ecx, [ebp-0C8h]
.text:0000046A                 movdqa  xmm0, xmmword ptr [ecx+10h]
.text:0000046F                 movdqa  xmm1, xmmword ptr [ebp-0E0h]
.text:00000477                 aesdec  xmm1, xmm0
.text:0000047C                 movdqa  xmmword ptr [ebp-0E0h], xmm1
.text:00000484                 mov     edx, [ebp-0C8h]
.text:0000048A                 movdqa  xmm0, xmmword ptr [edx]
.text:0000048E                 movdqa  xmm1, xmmword ptr [ebp-0E0h]
.text:00000496                 aesdec  xmm1, xmm0
.text:0000049B                 movdqa  xmmword ptr [ebp-0E0h], xmm1
.text:000004A3                 mov     eax, [ebp-0C8h]
.text:000004A9                 sub     eax, 20h ; ' '
.text:000004AC                 mov     [ebp-0C8h], eax
.text:000004B2                 mov     ecx, [ebp-0C4h]
.text:000004B8                 sub     ecx, 1
.text:000004BB                 mov     [ebp-0C4h], ecx
.text:000004C1                 jnz     short loc_464
.text:000004C3                 mov     edx, [ebp-0C8h]
.text:000004C9                 movdqa  xmm0, xmmword ptr [edx+10h]
.text:000004CE                 movdqa  xmm1, xmmword ptr [ebp-0E0h]
.text:000004D6                 aesdec  xmm1, xmm0
.text:000004DB                 movdqa  xmmword ptr [ebp-0E0h], xmm1
.text:000004E3                 mov     eax, [ebp-0C8h]
.text:000004E9                 movdqa  xmm0, xmmword ptr [eax]
.text:000004ED                 movdqa  xmm1, xmmword ptr [ebp-0E0h]
.text:000004F5                 aesdeclast xmm1, xmm0
.text:000004FA                 movdqa  xmmword ptr [ebp-0E0h], xmm1
.text:00000502                 movdqa  xmm0, xmmword ptr [ebp-20h]
.text:00000507                 movdqa  xmm1, xmmword ptr [ebp-0E0h]
.text:0000050F                 pxor    xmm1, xmm0
.text:00000513                 movdqa  xmmword ptr [ebp-0E0h], xmm1
.text:0000051B                 mov     ecx, [ebp-8]
.text:0000051E                 movdqa  xmm0, xmmword ptr [ecx]
.text:00000522                 movdqa  xmmword ptr [ebp-20h], xmm0
.text:00000527                 mov     edx, [ebp-8]
.text:0000052A                 movdqa  xmm0, xmmword ptr [ebp-0E0h]
.text:00000532                 movdqa  xmmword ptr [edx], xmm0
.text:00000536                 jmp     loc_3FB
.text:0000053B ; ---------------------------------------------------------------------------
.text:0000053B
.text:0000053B loc_53B:                                ; CODE XREF: AesCbc_Decode_Intel(x,x,x)+2E1j
.text:0000053B                 mov     eax, [ebp-4]
.text:0000053E                 movdqa  xmm0, xmmword ptr [ebp-20h]
.text:00000543                 movdqa  xmmword ptr [eax], xmm0
.text:00000547                 pop     edi
.text:00000548                 mov     esp, ebp
.text:0000054A                 pop     ebp
.text:0000054B                 mov     esp, ebx
.text:0000054D                 pop     ebx
.text:0000054E                 retn    4
.text:0000054E @AesCbc_Decode_Intel@12 endp
.text:0000054E
.text:0000054E ; ---------------------------------------------------------------------------
.text:00000551                 align 10h
.text:00000560
.text:00000560 ; =============== S U B R O U T I N E =======================================
.text:00000560
.text:00000560
.text:00000560 ; __fastcall AesCtr_Code_Intel(x, x, x)
.text:00000560                 public @AesCtr_Code_Intel@12
.text:00000560 @AesCtr_Code_Intel@12 proc near
.text:00000560
.text:00000560 var_8           = dword ptr -8
.text:00000560
.text:00000560                 push    ebx
.text:00000561                 mov     ebx, esp
.text:00000563                 sub     esp, 8
.text:00000566                 and     esp, 0FFFFFFF0h
.text:00000569                 add     esp, 4
.text:0000056C                 push    ebp
.text:0000056D                 mov     ebp, [ebx+4]
.text:00000570                 mov     [esp+0Ch+var_8], ebp
.text:00000574                 mov     ebp, esp
.text:00000576                 sub     esp, 0E0h
.text:0000057C                 push    edi
.text:0000057D                 push    ecx
.text:0000057E                 lea     edi, [ebp-0E0h]
.text:00000584                 mov     ecx, 38h ; '8'
.text:00000589                 mov     eax, 0CCCCCCCCh
.text:0000058E                 rep stosd
.text:00000590                 pop     ecx
.text:00000591                 mov     [ebp-8], edx
.text:00000594                 mov     [ebp-4], ecx
.text:00000597                 mov     eax, [ebp-4]
.text:0000059A                 movdqa  xmm0, xmmword ptr [eax]
.text:0000059E                 movdqa  xmmword ptr [ebp-20h], xmm0
.text:000005A3                 mov     dword ptr [ebp-30h], 1
.text:000005AA                 mov     dword ptr [ebp-2Ch], 0
.text:000005B1                 mov     dword ptr [ebp-28h], 0
.text:000005B8                 mov     dword ptr [ebp-24h], 0
.text:000005BF                 jmp     short loc_5D3
.text:000005C1 ; ---------------------------------------------------------------------------
.text:000005C1
.text:000005C1 loc_5C1:                                ; CODE XREF: AesCtr_Code_Intel(x,x,x)+2CAj
.text:000005C1                 mov     ecx, [ebx+8]
.text:000005C4                 sub     ecx, 3
.text:000005C7                 mov     [ebx+8], ecx
.text:000005CA                 mov     edx, [ebp-8]
.text:000005CD                 add     edx, 30h ; '0'
.text:000005D0                 mov     [ebp-8], edx
.text:000005D3
.text:000005D3 loc_5D3:                                ; CODE XREF: AesCtr_Code_Intel(x,x,x)+5Fj
.text:000005D3                 cmp     dword ptr [ebx+8], 3
.text:000005D7                 jb      loc_82F
.text:000005DD                 mov     eax, [ebp-4]
.text:000005E0                 mov     ecx, [eax+10h]
.text:000005E3                 sub     ecx, 1
.text:000005E6                 mov     [ebp-34h], ecx
.text:000005E9                 mov     edx, [ebp-4]
.text:000005EC                 mov     [ebp-38h], edx
.text:000005EF                 mov     eax, [ebp-38h]
.text:000005F2                 movdqa  xmm0, xmmword ptr [eax+20h]
.text:000005F7                 movdqa  xmmword ptr [ebp-80h], xmm0
.text:000005FC                 movdqa  xmm0, xmmword ptr [ebp-30h]
.text:00000601                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:00000606                 paddq   xmm1, xmm0
.text:0000060A                 movdqa  xmmword ptr [ebp-20h], xmm1
.text:0000060F                 movdqa  xmm0, xmmword ptr [ebp-80h]
.text:00000614                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:00000619                 pxor    xmm1, xmm0
.text:0000061D                 movdqa  xmmword ptr [ebp-50h], xmm1
.text:00000622                 movdqa  xmm0, xmmword ptr [ebp-30h]
.text:00000627                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:0000062C                 paddq   xmm1, xmm0
.text:00000630                 movdqa  xmmword ptr [ebp-20h], xmm1
.text:00000635                 movdqa  xmm0, xmmword ptr [ebp-80h]
.text:0000063A                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:0000063F                 pxor    xmm1, xmm0
.text:00000643                 movdqa  xmmword ptr [ebp-60h], xmm1
.text:00000648                 movdqa  xmm0, xmmword ptr [ebp-30h]
.text:0000064D                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:00000652                 paddq   xmm1, xmm0
.text:00000656                 movdqa  xmmword ptr [ebp-20h], xmm1
.text:0000065B                 movdqa  xmm0, xmmword ptr [ebp-80h]
.text:00000660                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:00000665                 pxor    xmm1, xmm0
.text:00000669                 movdqa  xmmword ptr [ebp-70h], xmm1
.text:0000066E                 mov     ecx, [ebp-38h]
.text:00000671                 add     ecx, 30h ; '0'
.text:00000674                 mov     [ebp-38h], ecx
.text:00000677
.text:00000677 loc_677:                                ; CODE XREF: AesCtr_Code_Intel(x,x,x)+1D2j
.text:00000677                 mov     edx, [ebp-38h]
.text:0000067A                 movdqa  xmm0, xmmword ptr [edx]
.text:0000067E                 movdqa  xmmword ptr [ebp-90h], xmm0
.text:00000686                 movdqa  xmm0, xmmword ptr [ebp-90h]
.text:0000068E                 movdqa  xmm1, xmmword ptr [ebp-50h]
.text:00000693                 aesenc  xmm1, xmm0
.text:00000698                 movdqa  xmmword ptr [ebp-50h], xmm1
.text:0000069D                 movdqa  xmm0, xmmword ptr [ebp-90h]
.text:000006A5                 movdqa  xmm1, xmmword ptr [ebp-60h]
.text:000006AA                 aesenc  xmm1, xmm0
.text:000006AF                 movdqa  xmmword ptr [ebp-60h], xmm1
.text:000006B4                 movdqa  xmm0, xmmword ptr [ebp-90h]
.text:000006BC                 movdqa  xmm1, xmmword ptr [ebp-70h]
.text:000006C1                 aesenc  xmm1, xmm0
.text:000006C6                 movdqa  xmmword ptr [ebp-70h], xmm1
.text:000006CB                 mov     eax, [ebp-38h]
.text:000006CE                 movdqa  xmm0, xmmword ptr [eax+10h]
.text:000006D3                 movdqa  xmmword ptr [ebp-0A0h], xmm0
.text:000006DB                 movdqa  xmm0, xmmword ptr [ebp-0A0h]
.text:000006E3                 movdqa  xmm1, xmmword ptr [ebp-50h]
.text:000006E8                 aesenc  xmm1, xmm0
.text:000006ED                 movdqa  xmmword ptr [ebp-50h], xmm1
.text:000006F2                 movdqa  xmm0, xmmword ptr [ebp-0A0h]
.text:000006FA                 movdqa  xmm1, xmmword ptr [ebp-60h]
.text:000006FF                 aesenc  xmm1, xmm0
.text:00000704                 movdqa  xmmword ptr [ebp-60h], xmm1
.text:00000709                 movdqa  xmm0, xmmword ptr [ebp-0A0h]
.text:00000711                 movdqa  xmm1, xmmword ptr [ebp-70h]
.text:00000716                 aesenc  xmm1, xmm0
.text:0000071B                 movdqa  xmmword ptr [ebp-70h], xmm1
.text:00000720                 mov     ecx, [ebp-38h]
.text:00000723                 add     ecx, 20h ; ' '
.text:00000726                 mov     [ebp-38h], ecx
.text:00000729                 mov     edx, [ebp-34h]
.text:0000072C                 sub     edx, 1
.text:0000072F                 mov     [ebp-34h], edx
.text:00000732                 jnz     loc_677
.text:00000738                 mov     eax, [ebp-38h]
.text:0000073B                 movdqa  xmm0, xmmword ptr [eax]
.text:0000073F                 movdqa  xmmword ptr [ebp-0B0h], xmm0
.text:00000747                 movdqa  xmm0, xmmword ptr [ebp-0B0h]
.text:0000074F                 movdqa  xmm1, xmmword ptr [ebp-50h]
.text:00000754                 aesenc  xmm1, xmm0
.text:00000759                 movdqa  xmmword ptr [ebp-50h], xmm1
.text:0000075E                 movdqa  xmm0, xmmword ptr [ebp-0B0h]
.text:00000766                 movdqa  xmm1, xmmword ptr [ebp-60h]
.text:0000076B                 aesenc  xmm1, xmm0
.text:00000770                 movdqa  xmmword ptr [ebp-60h], xmm1
.text:00000775                 movdqa  xmm0, xmmword ptr [ebp-0B0h]
.text:0000077D                 movdqa  xmm1, xmmword ptr [ebp-70h]
.text:00000782                 aesenc  xmm1, xmm0
.text:00000787                 movdqa  xmmword ptr [ebp-70h], xmm1
.text:0000078C                 mov     ecx, [ebp-38h]
.text:0000078F                 movdqa  xmm0, xmmword ptr [ecx+10h]
.text:00000794                 movdqa  xmmword ptr [ebp-0C0h], xmm0
.text:0000079C                 movdqa  xmm0, xmmword ptr [ebp-0C0h]
.text:000007A4                 movdqa  xmm1, xmmword ptr [ebp-50h]
.text:000007A9                 aesenclast xmm1, xmm0
.text:000007AE                 movdqa  xmmword ptr [ebp-50h], xmm1
.text:000007B3                 movdqa  xmm0, xmmword ptr [ebp-0C0h]
.text:000007BB                 movdqa  xmm1, xmmword ptr [ebp-60h]
.text:000007C0                 aesenclast xmm1, xmm0
.text:000007C5                 movdqa  xmmword ptr [ebp-60h], xmm1
.text:000007CA                 movdqa  xmm0, xmmword ptr [ebp-0C0h]
.text:000007D2                 movdqa  xmm1, xmmword ptr [ebp-70h]
.text:000007D7                 aesenclast xmm1, xmm0
.text:000007DC                 movdqa  xmmword ptr [ebp-70h], xmm1
.text:000007E1                 movdqa  xmm0, xmmword ptr [ebp-50h]
.text:000007E6                 mov     edx, [ebp-8]
.text:000007E9                 movdqa  xmm1, xmmword ptr [edx]
.text:000007ED                 pxor    xmm1, xmm0
.text:000007F1                 mov     eax, [ebp-8]
.text:000007F4                 movdqa  xmmword ptr [eax], xmm1
.text:000007F8                 movdqa  xmm0, xmmword ptr [ebp-60h]
.text:000007FD                 mov     ecx, [ebp-8]
.text:00000800                 movdqa  xmm1, xmmword ptr [ecx+10h]
.text:00000805                 pxor    xmm1, xmm0
.text:00000809                 mov     edx, [ebp-8]
.text:0000080C                 movdqa  xmmword ptr [edx+10h], xmm1
.text:00000811                 movdqa  xmm0, xmmword ptr [ebp-70h]
.text:00000816                 mov     eax, [ebp-8]
.text:00000819                 movdqa  xmm1, xmmword ptr [eax+20h]
.text:0000081E                 pxor    xmm1, xmm0
.text:00000822                 mov     ecx, [ebp-8]
.text:00000825                 movdqa  xmmword ptr [ecx+20h], xmm1
.text:0000082A                 jmp     loc_5C1
.text:0000082F ; ---------------------------------------------------------------------------
.text:0000082F
.text:0000082F loc_82F:                                ; CODE XREF: AesCtr_Code_Intel(x,x,x)+77j
.text:0000082F                 jmp     short loc_843
.text:00000831 ; ---------------------------------------------------------------------------
.text:00000831
.text:00000831 loc_831:                                ; CODE XREF: AesCtr_Code_Intel(x,x,x)+3F8j
.text:00000831                 mov     edx, [ebx+8]
.text:00000834                 sub     edx, 1
.text:00000837                 mov     [ebx+8], edx
.text:0000083A                 mov     eax, [ebp-8]
.text:0000083D                 add     eax, 10h
.text:00000840                 mov     [ebp-8], eax
.text:00000843
.text:00000843 loc_843:                                ; CODE XREF: AesCtr_Code_Intel(x,x,x):loc_82Fj
.text:00000843                 cmp     dword ptr [ebx+8], 0
.text:00000847                 jz      loc_95D
.text:0000084D                 mov     ecx, [ebp-4]
.text:00000850                 mov     edx, [ecx+10h]
.text:00000853                 sub     edx, 1
.text:00000856                 mov     [ebp-0C4h], edx
.text:0000085C                 mov     eax, [ebp-4]
.text:0000085F                 mov     [ebp-0C8h], eax
.text:00000865                 movdqa  xmm0, xmmword ptr [ebp-30h]
.text:0000086A                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:0000086F                 paddq   xmm1, xmm0
.text:00000873                 movdqa  xmmword ptr [ebp-20h], xmm1
.text:00000878                 mov     ecx, [ebp-4]
.text:0000087B                 movdqa  xmm0, xmmword ptr [ecx+20h]
.text:00000880                 movdqa  xmm1, xmmword ptr [ebp-20h]
.text:00000885                 pxor    xmm1, xmm0
.text:00000889                 movdqa  xmmword ptr [ebp-0E0h], xmm1
.text:00000891                 mov     edx, [ebp-0C8h]
.text:00000897                 add     edx, 30h ; '0'
.text:0000089A                 mov     [ebp-0C8h], edx
.text:000008A0
.text:000008A0 loc_8A0:                                ; CODE XREF: AesCtr_Code_Intel(x,x,x)+39Dj
.text:000008A0                 mov     eax, [ebp-0C8h]
.text:000008A6                 movdqa  xmm0, xmmword ptr [eax]
.text:000008AA                 movdqa  xmm1, xmmword ptr [ebp-0E0h]
.text:000008B2                 aesenc  xmm1, xmm0
.text:000008B7                 movdqa  xmmword ptr [ebp-0E0h], xmm1
.text:000008BF                 mov     ecx, [ebp-0C8h]
.text:000008C5                 movdqa  xmm0, xmmword ptr [ecx+10h]
.text:000008CA                 movdqa  xmm1, xmmword ptr [ebp-0E0h]
.text:000008D2                 aesenc  xmm1, xmm0
.text:000008D7                 movdqa  xmmword ptr [ebp-0E0h], xmm1
.text:000008DF                 mov     edx, [ebp-0C8h]
.text:000008E5                 add     edx, 20h ; ' '
.text:000008E8                 mov     [ebp-0C8h], edx
.text:000008EE                 mov     eax, [ebp-0C4h]
.text:000008F4                 sub     eax, 1
.text:000008F7                 mov     [ebp-0C4h], eax
.text:000008FD                 jnz     short loc_8A0
.text:000008FF                 mov     ecx, [ebp-0C8h]
.text:00000905                 movdqa  xmm0, xmmword ptr [ecx]
.text:00000909                 movdqa  xmm1, xmmword ptr [ebp-0E0h]
.text:00000911                 aesenc  xmm1, xmm0
.text:00000916                 movdqa  xmmword ptr [ebp-0E0h], xmm1
.text:0000091E                 mov     edx, [ebp-0C8h]
.text:00000924                 movdqa  xmm0, xmmword ptr [edx+10h]
.text:00000929                 movdqa  xmm1, xmmword ptr [ebp-0E0h]
.text:00000931                 aesenclast xmm1, xmm0
.text:00000936                 movdqa  xmmword ptr [ebp-0E0h], xmm1
.text:0000093E                 movdqa  xmm0, xmmword ptr [ebp-0E0h]
.text:00000946                 mov     eax, [ebp-8]
.text:00000949                 movdqa  xmm1, xmmword ptr [eax]
.text:0000094D                 pxor    xmm1, xmm0
.text:00000951                 mov     ecx, [ebp-8]
.text:00000954                 movdqa  xmmword ptr [ecx], xmm1
.text:00000958                 jmp     loc_831
.text:0000095D ; ---------------------------------------------------------------------------
.text:0000095D
.text:0000095D loc_95D:                                ; CODE XREF: AesCtr_Code_Intel(x,x,x)+2E7j
.text:0000095D                 mov     edx, [ebp-4]
.text:00000960                 movdqa  xmm0, xmmword ptr [ebp-20h]
.text:00000965                 movdqa  xmmword ptr [edx], xmm0
.text:00000969                 pop     edi
.text:0000096A                 mov     esp, ebp
.text:0000096C                 pop     ebp
.text:0000096D                 mov     esp, ebx
.text:0000096F                 pop     ebx
.text:00000970                 retn    4
.text:00000970 @AesCtr_Code_Intel@12 endp
.text:00000970
.text:00000970 ; ---------------------------------------------------------------------------
.text:00000973                 align 4
.text:00000973 _text           ends
.text:00000973
.rtc$TMZ:00000974 ; ===========================================================================
.rtc$TMZ:00000974
.rtc$TMZ:00000974 ; Segment type: Pure data
.rtc$TMZ:00000974 ; Segment permissions: Read
.rtc$TMZ:00000974 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00000974                 assume cs:_rtc$TMZ
.rtc$TMZ:00000974                 ;org 974h
.rtc$TMZ:00000974 ; COMDAT (pick any)
.rtc$TMZ:00000974 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00000974 _rtc$TMZ        ends
.rtc$TMZ:00000974
.rtc$IMZ:00000978 ; ===========================================================================
.rtc$IMZ:00000978
.rtc$IMZ:00000978 ; Segment type: Pure data
.rtc$IMZ:00000978 ; Segment permissions: Read
.rtc$IMZ:00000978 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00000978                 assume cs:_rtc$IMZ
.rtc$IMZ:00000978                 ;org 978h
.rtc$IMZ:00000978 ; COMDAT (pick any)
.rtc$IMZ:00000978 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00000978 _rtc$IMZ        ends
.rtc$IMZ:00000978
UNDEF:00000980 ; ===========================================================================
UNDEF:00000980
UNDEF:00000980 ; Segment type: Externs
UNDEF:00000980 ; UNDEF
UNDEF:00000980                 extrn __RTC_Shutdown:near
UNDEF:00000980                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00000984                 extrn __RTC_InitBase:near
UNDEF:00000984                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:00000984
UNDEF:00000984
UNDEF:00000984                 end
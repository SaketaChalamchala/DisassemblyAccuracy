.text:00000000 ;
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.text:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.text:00000000 ; |                      License info: 48-3677-7074-51                      |
.text:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ;
.text:00000000 ; Input MD5   : C5B1318C2B6E1F4F43F706A820FE70EA
.text:00000000 ; Input CRC32 : 6F973483
.text:00000000
.text:00000000 ; File Name   : C:\workspace\7z1505-src\CPP\7zip\Bundles\Alone\Debug\Bcj2Enc.obj
.text:00000000 ; Format      : COFF (X386MAGIC)
.text:00000000 ; includelib "uuid.lib"
.text:00000000 ; includelib "MSVCRTD"
.text:00000000 ; includelib "OLDNAMES"
.text:00000000
.text:00000000                 .686p
.text:00000000                 .mmx
.text:00000000                 .model flat
.text:00000000
.text:00000000 ; ===========================================================================
.text:00000000
.text:00000000 ; Segment type: Pure code
.text:00000000 ; Segment permissions: Read/Execute
.text:00000000 _text           segment para public 'CODE' use32
.text:00000000                 assume cs:_text
.text:00000000                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:00000000
.text:00000000 ; =============== S U B R O U T I N E =======================================
.text:00000000
.text:00000000 ; Attributes: bp-based frame
.text:00000000
.text:00000000 ; __stdcall Bcj2Enc_Init(x)
.text:00000000                 public _Bcj2Enc_Init@4
.text:00000000 _Bcj2Enc_Init@4 proc near
.text:00000000
.text:00000000 var_4           = dword ptr -4
.text:00000000 arg_0           = dword ptr  8
.text:00000000
.text:00000000                 push    ebp
.text:00000001                 mov     ebp, esp
.text:00000003                 push    ecx
.text:00000004                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000000B                 mov     eax, [ebp+arg_0]
.text:0000000E                 mov     dword ptr [eax+28h], 5
.text:00000015                 mov     ecx, [ebp+arg_0]
.text:00000018                 mov     dword ptr [ecx+2Ch], 0
.text:0000001F                 mov     edx, [ebp+arg_0]
.text:00000022                 mov     byte ptr [edx+30h], 0
.text:00000026                 mov     eax, [ebp+arg_0]
.text:00000029                 mov     byte ptr [eax+31h], 0
.text:0000002D                 mov     ecx, [ebp+arg_0]
.text:00000030                 mov     dword ptr [ecx+34h], 0FFFFFFFFh
.text:00000037                 mov     edx, [ebp+arg_0]
.text:0000003A                 mov     dword ptr [edx+38h], 0
.text:00000041                 mov     dword ptr [edx+3Ch], 0
.text:00000048                 mov     eax, [ebp+arg_0]
.text:0000004B                 mov     dword ptr [eax+40h], 1
.text:00000052                 mov     dword ptr [eax+44h], 0
.text:00000059                 mov     ecx, [ebp+arg_0]
.text:0000005C                 mov     dword ptr [ecx+48h], 0
.text:00000063                 mov     edx, [ebp+arg_0]
.text:00000066                 mov     dword ptr [edx+4Ch], 0
.text:0000006D                 mov     eax, [ebp+arg_0]
.text:00000070                 mov     dword ptr [eax+50h], 0
.text:00000077                 mov     ecx, [ebp+arg_0]
.text:0000007A                 mov     dword ptr [ecx+54h], 4000000h
.text:00000081                 mov     edx, [ebp+arg_0]
.text:00000084                 mov     dword ptr [edx+5Ch], 0
.text:0000008B                 mov     eax, [ebp+arg_0]
.text:0000008E                 mov     dword ptr [eax+68h], 0
.text:00000095                 mov     [ebp+var_4], 0
.text:0000009C                 jmp     short loc_A7
.text:0000009E ; ---------------------------------------------------------------------------
.text:0000009E
.text:0000009E loc_9E:                                 ; CODE XREF: Bcj2Enc_Init(x)+C0j
.text:0000009E                 mov     ecx, [ebp+var_4]
.text:000000A1                 add     ecx, 1
.text:000000A4                 mov     [ebp+var_4], ecx
.text:000000A7
.text:000000A7 loc_A7:                                 ; CODE XREF: Bcj2Enc_Init(x)+9Cj
.text:000000A7                 cmp     [ebp+var_4], 102h
.text:000000AE                 jnb     short loc_C2
.text:000000B0                 mov     edx, 400h
.text:000000B5                 mov     eax, [ebp+var_4]
.text:000000B8                 mov     ecx, [ebp+arg_0]
.text:000000BB                 mov     [ecx+eax*2+6Ch], dx
.text:000000C0                 jmp     short loc_9E
.text:000000C2 ; ---------------------------------------------------------------------------
.text:000000C2
.text:000000C2 loc_C2:                                 ; CODE XREF: Bcj2Enc_Init(x)+AEj
.text:000000C2                 mov     esp, ebp
.text:000000C4                 pop     ebp
.text:000000C5                 retn    4
.text:000000C5 _Bcj2Enc_Init@4 endp
.text:000000C5
.text:000000C5 ; ---------------------------------------------------------------------------
.text:000000C8                 align 10h
.text:000000D0
.text:000000D0 ; =============== S U B R O U T I N E =======================================
.text:000000D0
.text:000000D0 ; Attributes: bp-based frame
.text:000000D0
.text:000000D0 ; __stdcall Bcj2Enc_Encode(x)
.text:000000D0                 public _Bcj2Enc_Encode@4
.text:000000D0 _Bcj2Enc_Encode@4 proc near
.text:000000D0
.text:000000D0 var_28          = dword ptr -28h
.text:000000D0 var_24          = dword ptr -24h
.text:000000D0 var_20          = dword ptr -20h
.text:000000D0 var_1C          = dword ptr -1Ch
.text:000000D0 var_18          = dword ptr -18h
.text:000000D0 var_14          = dword ptr -14h
.text:000000D0 var_10          = dword ptr -10h
.text:000000D0 var_C           = dword ptr -0Ch
.text:000000D0 var_8           = dword ptr -8
.text:000000D0 var_4           = dword ptr -4
.text:000000D0 arg_0           = dword ptr  8
.text:000000D0
.text:000000D0                 push    ebp
.text:000000D1                 mov     ebp, esp
.text:000000D3                 sub     esp, 28h
.text:000000D6                 push    edi
.text:000000D7                 lea     edi, [ebp+var_28]
.text:000000DA                 mov     ecx, 0Ah
.text:000000DF                 mov     eax, 0CCCCCCCCh
.text:000000E4                 rep stosd
.text:000000E6                 mov     eax, [ebp+arg_0]
.text:000000E9                 cmp     dword ptr [eax+5Ch], 0
.text:000000ED                 jz      loc_22C
.text:000000F3                 mov     [ebp+var_4], 0
.text:000000FA
.text:000000FA loc_FA:                                 ; CODE XREF: Bcj2Enc_Encode(x)+157j
.text:000000FA                 mov     ecx, [ebp+arg_0]
.text:000000FD                 mov     edx, [ecx+20h]
.text:00000100                 mov     [ebp+var_8], edx
.text:00000103                 mov     eax, [ebp+arg_0]
.text:00000106                 mov     ecx, [eax+24h]
.text:00000109                 mov     [ebp+var_C], ecx
.text:0000010C                 mov     edx, [ebp+arg_0]
.text:0000010F                 mov     eax, [edx+2Ch]
.text:00000112                 mov     [ebp+var_10], eax
.text:00000115                 mov     ecx, [ebp+arg_0]
.text:00000118                 add     ecx, 60h ; '`'
.text:0000011B                 mov     edx, [ebp+arg_0]
.text:0000011E                 mov     [edx+20h], ecx
.text:00000121                 mov     eax, [ebp+arg_0]
.text:00000124                 mov     ecx, [eax+5Ch]
.text:00000127                 mov     edx, [ebp+arg_0]
.text:0000012A                 lea     eax, [edx+ecx+60h]
.text:0000012E                 mov     ecx, [ebp+arg_0]
.text:00000131                 mov     [ecx+24h], eax
.text:00000134                 mov     edx, [ebp+var_8]
.text:00000137                 cmp     edx, [ebp+var_C]
.text:0000013A                 jz      short loc_146
.text:0000013C                 mov     eax, [ebp+arg_0]
.text:0000013F                 mov     dword ptr [eax+2Ch], 0
.text:00000146
.text:00000146 loc_146:                                ; CODE XREF: Bcj2Enc_Encode(x)+6Aj
.text:00000146                 mov     ecx, [ebp+arg_0]
.text:00000149                 push    ecx
.text:0000014A                 call    _Bcj2Enc_Encode_2@4 ; Bcj2Enc_Encode_2(x)
.text:0000014F                 mov     edx, [ebp+arg_0]
.text:00000152                 add     edx, 60h ; '`'
.text:00000155                 mov     eax, [ebp+arg_0]
.text:00000158                 mov     ecx, [eax+20h]
.text:0000015B                 sub     ecx, edx
.text:0000015D                 mov     [ebp+var_14], ecx
.text:00000160                 mov     edx, [ebp+arg_0]
.text:00000163                 mov     eax, [edx+5Ch]
.text:00000166                 sub     eax, [ebp+var_14]
.text:00000169                 mov     [ebp+var_18], eax
.text:0000016C                 mov     ecx, [ebp+arg_0]
.text:0000016F                 mov     edx, [ebp+var_18]
.text:00000172                 mov     [ecx+5Ch], edx
.text:00000175                 mov     [ebp+var_1C], 0
.text:0000017C                 jmp     short loc_187
.text:0000017E ; ---------------------------------------------------------------------------
.text:0000017E
.text:0000017E loc_17E:                                ; CODE XREF: Bcj2Enc_Encode(x)+D5j
.text:0000017E                 mov     eax, [ebp+var_1C]
.text:00000181                 add     eax, 1
.text:00000184                 mov     [ebp+var_1C], eax
.text:00000187
.text:00000187 loc_187:                                ; CODE XREF: Bcj2Enc_Encode(x)+ACj
.text:00000187                 mov     ecx, [ebp+var_1C]
.text:0000018A                 cmp     ecx, [ebp+var_18]
.text:0000018D                 jnb     short loc_1A7
.text:0000018F                 mov     edx, [ebp+var_1C]
.text:00000192                 add     edx, [ebp+var_14]
.text:00000195                 mov     eax, [ebp+arg_0]
.text:00000198                 add     eax, [ebp+var_1C]
.text:0000019B                 mov     ecx, [ebp+arg_0]
.text:0000019E                 mov     dl, [ecx+edx+60h]
.text:000001A2                 mov     [eax+60h], dl
.text:000001A5                 jmp     short loc_17E
.text:000001A7 ; ---------------------------------------------------------------------------
.text:000001A7
.text:000001A7 loc_1A7:                                ; CODE XREF: Bcj2Enc_Encode(x)+BDj
.text:000001A7                 mov     eax, [ebp+arg_0]
.text:000001AA                 mov     ecx, [ebp+var_8]
.text:000001AD                 mov     [eax+20h], ecx
.text:000001B0                 mov     edx, [ebp+arg_0]
.text:000001B3                 mov     eax, [ebp+var_C]
.text:000001B6                 mov     [edx+24h], eax
.text:000001B9                 mov     ecx, [ebp+arg_0]
.text:000001BC                 mov     edx, [ebp+var_10]
.text:000001BF                 mov     [ecx+2Ch], edx
.text:000001C2                 mov     eax, [ebp+arg_0]
.text:000001C5                 cmp     dword ptr [eax+28h], 4
.text:000001C9                 jnz     short loc_1D3
.text:000001CB                 mov     ecx, [ebp+var_8]
.text:000001CE                 cmp     ecx, [ebp+var_C]
.text:000001D1                 jnz     short loc_1D8
.text:000001D3
.text:000001D3 loc_1D3:                                ; CODE XREF: Bcj2Enc_Encode(x)+F9j
.text:000001D3                 jmp     loc_295
.text:000001D8 ; ---------------------------------------------------------------------------
.text:000001D8
.text:000001D8 loc_1D8:                                ; CODE XREF: Bcj2Enc_Encode(x)+101j
.text:000001D8                 mov     edx, [ebp+var_4]
.text:000001DB                 cmp     edx, [ebp+var_18]
.text:000001DE                 jb      short loc_1F8
.text:000001E0                 mov     eax, [ebp+var_8]
.text:000001E3                 sub     eax, [ebp+var_18]
.text:000001E6                 mov     ecx, [ebp+arg_0]
.text:000001E9                 mov     [ecx+20h], eax
.text:000001EC                 mov     edx, [ebp+arg_0]
.text:000001EF                 mov     dword ptr [edx+5Ch], 0
.text:000001F6                 jmp     short loc_22C
.text:000001F8 ; ---------------------------------------------------------------------------
.text:000001F8
.text:000001F8 loc_1F8:                                ; CODE XREF: Bcj2Enc_Encode(x)+10Ej
.text:000001F8                 mov     eax, [ebp+arg_0]
.text:000001FB                 add     eax, [ebp+var_18]
.text:000001FE                 mov     ecx, [ebp+var_8]
.text:00000201                 mov     dl, [ecx]
.text:00000203                 mov     [eax+60h], dl
.text:00000206                 mov     eax, [ebp+var_18]
.text:00000209                 add     eax, 1
.text:0000020C                 mov     ecx, [ebp+arg_0]
.text:0000020F                 mov     [ecx+5Ch], eax
.text:00000212                 mov     edx, [ebp+var_8]
.text:00000215                 add     edx, 1
.text:00000218                 mov     eax, [ebp+arg_0]
.text:0000021B                 mov     [eax+20h], edx
.text:0000021E                 mov     ecx, [ebp+var_4]
.text:00000221                 add     ecx, 1
.text:00000224                 mov     [ebp+var_4], ecx
.text:00000227                 jmp     loc_FA
.text:0000022C ; ---------------------------------------------------------------------------
.text:0000022C
.text:0000022C loc_22C:                                ; CODE XREF: Bcj2Enc_Encode(x)+1Dj
.text:0000022C                                         ; Bcj2Enc_Encode(x)+126j
.text:0000022C                 mov     edx, [ebp+arg_0]
.text:0000022F                 push    edx
.text:00000230                 call    _Bcj2Enc_Encode_2@4 ; Bcj2Enc_Encode_2(x)
.text:00000235                 mov     eax, [ebp+arg_0]
.text:00000238                 cmp     dword ptr [eax+28h], 4
.text:0000023C                 jnz     short loc_295
.text:0000023E                 mov     ecx, [ebp+arg_0]
.text:00000241                 mov     edx, [ecx+20h]
.text:00000244                 mov     [ebp+var_20], edx
.text:00000247                 mov     eax, [ebp+arg_0]
.text:0000024A                 mov     ecx, [eax+24h]
.text:0000024D                 sub     ecx, [ebp+var_20]
.text:00000250                 mov     [ebp+var_24], ecx
.text:00000253                 mov     [ebp+var_28], 0
.text:0000025A                 jmp     short loc_265
.text:0000025C ; ---------------------------------------------------------------------------
.text:0000025C
.text:0000025C loc_25C:                                ; CODE XREF: Bcj2Enc_Encode(x)+1AEj
.text:0000025C                 mov     edx, [ebp+var_28]
.text:0000025F                 add     edx, 1
.text:00000262                 mov     [ebp+var_28], edx
.text:00000265
.text:00000265 loc_265:                                ; CODE XREF: Bcj2Enc_Encode(x)+18Aj
.text:00000265                 mov     eax, [ebp+var_28]
.text:00000268                 cmp     eax, [ebp+var_24]
.text:0000026B                 jnb     short loc_280
.text:0000026D                 mov     ecx, [ebp+arg_0]
.text:00000270                 add     ecx, [ebp+var_28]
.text:00000273                 mov     edx, [ebp+var_20]
.text:00000276                 add     edx, [ebp+var_28]
.text:00000279                 mov     al, [edx]
.text:0000027B                 mov     [ecx+60h], al
.text:0000027E                 jmp     short loc_25C
.text:00000280 ; ---------------------------------------------------------------------------
.text:00000280
.text:00000280 loc_280:                                ; CODE XREF: Bcj2Enc_Encode(x)+19Bj
.text:00000280                 mov     ecx, [ebp+arg_0]
.text:00000283                 mov     edx, [ebp+var_24]
.text:00000286                 mov     [ecx+5Ch], edx
.text:00000289                 mov     eax, [ebp+var_20]
.text:0000028C                 add     eax, [ebp+var_24]
.text:0000028F                 mov     ecx, [ebp+arg_0]
.text:00000292                 mov     [ecx+20h], eax
.text:00000295
.text:00000295 loc_295:                                ; CODE XREF: Bcj2Enc_Encode(x):loc_1D3j
.text:00000295                                         ; Bcj2Enc_Encode(x)+16Cj
.text:00000295                 pop     edi
.text:00000296                 add     esp, 28h
.text:00000299                 cmp     ebp, esp
.text:0000029B                 call    __RTC_CheckEsp
.text:000002A0                 mov     esp, ebp
.text:000002A2                 pop     ebp
.text:000002A3                 retn    4
.text:000002A3 _Bcj2Enc_Encode@4 endp
.text:000002A3
.text:000002A3 ; ---------------------------------------------------------------------------
.text:000002A6                 align 10h
.text:000002B0
.text:000002B0 ; =============== S U B R O U T I N E =======================================
.text:000002B0
.text:000002B0 ; Attributes: bp-based frame
.text:000002B0
.text:000002B0 ; __stdcall Bcj2Enc_Encode_2(x)
.text:000002B0 _Bcj2Enc_Encode_2@4 proc near           ; CODE XREF: Bcj2Enc_Encode(x)+7Ap
.text:000002B0                                         ; Bcj2Enc_Encode(x)+160p
.text:000002B0
.text:000002B0 var_48          = dword ptr -48h
.text:000002B0 var_44          = dword ptr -44h
.text:000002B0 var_40          = dword ptr -40h
.text:000002B0 var_3C          = dword ptr -3Ch
.text:000002B0 var_38          = dword ptr -38h
.text:000002B0 var_34          = dword ptr -34h
.text:000002B0 var_30          = dword ptr -30h
.text:000002B0 var_29          = byte ptr -29h
.text:000002B0 var_28          = dword ptr -28h
.text:000002B0 var_24          = dword ptr -24h
.text:000002B0 var_20          = dword ptr -20h
.text:000002B0 var_1C          = dword ptr -1Ch
.text:000002B0 var_16          = byte ptr -16h
.text:000002B0 var_15          = byte ptr -15h
.text:000002B0 var_14          = dword ptr -14h
.text:000002B0 var_10          = dword ptr -10h
.text:000002B0 var_C           = dword ptr -0Ch
.text:000002B0 var_8           = dword ptr -8
.text:000002B0 var_4           = dword ptr -4
.text:000002B0 arg_0           = dword ptr  8
.text:000002B0
.text:000002B0                 push    ebp
.text:000002B1                 mov     ebp, esp
.text:000002B3                 sub     esp, 48h
.text:000002B6                 push    edi
.text:000002B7                 lea     edi, [ebp+var_48]
.text:000002BA                 mov     ecx, 12h
.text:000002BF                 mov     eax, 0CCCCCCCCh
.text:000002C4                 rep stosd
.text:000002C6                 mov     eax, [ebp+arg_0]
.text:000002C9                 cmp     dword ptr [eax+28h], 1
.text:000002CD                 jz      short loc_2D8
.text:000002CF                 mov     ecx, [ebp+arg_0]
.text:000002D2                 cmp     dword ptr [ecx+28h], 2
.text:000002D6                 jnz     short loc_31D
.text:000002D8
.text:000002D8 loc_2D8:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+1Dj
.text:000002D8                 mov     edx, [ebp+arg_0]
.text:000002DB                 mov     eax, [edx+28h]
.text:000002DE                 mov     ecx, [ebp+arg_0]
.text:000002E1                 mov     edx, [ecx+eax*4]
.text:000002E4                 mov     [ebp+var_4], edx
.text:000002E7                 mov     eax, [ebp+arg_0]
.text:000002EA                 mov     ecx, [eax+28h]
.text:000002ED                 mov     edx, [ebp+arg_0]
.text:000002F0                 mov     eax, [ebp+var_4]
.text:000002F3                 cmp     eax, [edx+ecx*4+10h]
.text:000002F7                 jnz     short loc_2FE
.text:000002F9                 jmp     loc_71C
.text:000002FE ; ---------------------------------------------------------------------------
.text:000002FE
.text:000002FE loc_2FE:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+47j
.text:000002FE                 mov     ecx, [ebp+arg_0]
.text:00000301                 mov     edx, [ecx+58h]
.text:00000304                 bswap   edx
.text:00000306                 mov     eax, [ebp+var_4]
.text:00000309                 mov     [eax], edx
.text:0000030B                 mov     ecx, [ebp+var_4]
.text:0000030E                 add     ecx, 4
.text:00000311                 mov     edx, [ebp+arg_0]
.text:00000314                 mov     eax, [edx+28h]
.text:00000317                 mov     edx, [ebp+arg_0]
.text:0000031A                 mov     [edx+eax*4], ecx
.text:0000031D
.text:0000031D loc_31D:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+26j
.text:0000031D                 mov     eax, [ebp+arg_0]
.text:00000320                 mov     dword ptr [eax+28h], 4
.text:00000327
.text:00000327 loc_327:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+219j
.text:00000327                                         ; Bcj2Enc_Encode_2(x)+34Fj ...
.text:00000327                 mov     ecx, [ebp+arg_0]
.text:0000032A                 cmp     dword ptr [ecx+34h], 1000000h
.text:00000331                 jnb     short loc_353
.text:00000333                 mov     ecx, [ebp+arg_0]
.text:00000336                 call    @RangeEnc_ShiftLow@4 ; RangeEnc_ShiftLow(x)
.text:0000033B                 test    eax, eax
.text:0000033D                 jz      short loc_344
.text:0000033F                 jmp     loc_71C
.text:00000344 ; ---------------------------------------------------------------------------
.text:00000344
.text:00000344 loc_344:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+8Dj
.text:00000344                 mov     edx, [ebp+arg_0]
.text:00000347                 mov     eax, [edx+34h]
.text:0000034A                 shl     eax, 8
.text:0000034D                 mov     ecx, [ebp+arg_0]
.text:00000350                 mov     [ecx+34h], eax
.text:00000353
.text:00000353 loc_353:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+81j
.text:00000353                 mov     edx, [ebp+arg_0]
.text:00000356                 mov     eax, [edx+20h]
.text:00000359                 mov     [ebp+var_8], eax
.text:0000035C                 mov     ecx, [ebp+arg_0]
.text:0000035F                 mov     edx, [ecx+24h]
.text:00000362                 sub     edx, [ebp+var_8]
.text:00000365                 mov     [ebp+var_14], edx
.text:00000368                 mov     eax, [ebp+arg_0]
.text:0000036B                 cmp     dword ptr [eax+2Ch], 0
.text:0000036F                 jnz     short loc_387
.text:00000371                 cmp     [ebp+var_14], 4
.text:00000375                 ja      short loc_37C
.text:00000377                 jmp     loc_71C
.text:0000037C ; ---------------------------------------------------------------------------
.text:0000037C
.text:0000037C loc_37C:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+C5j
.text:0000037C                 mov     ecx, [ebp+var_14]
.text:0000037F                 sub     ecx, 4
.text:00000382                 mov     [ebp+var_14], ecx
.text:00000385                 jmp     short loc_392
.text:00000387 ; ---------------------------------------------------------------------------
.text:00000387
.text:00000387 loc_387:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+BFj
.text:00000387                 cmp     [ebp+var_14], 0
.text:0000038B                 jnz     short loc_392
.text:0000038D                 jmp     loc_6DD
.text:00000392 ; ---------------------------------------------------------------------------
.text:00000392
.text:00000392 loc_392:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+D5j
.text:00000392                                         ; Bcj2Enc_Encode_2(x)+DBj
.text:00000392                 mov     edx, [ebp+arg_0]
.text:00000395                 mov     eax, [edx]
.text:00000397                 mov     [ebp+var_10], eax
.text:0000039A                 mov     ecx, [ebp+arg_0]
.text:0000039D                 mov     edx, [ecx+10h]
.text:000003A0                 sub     edx, [ebp+var_10]
.text:000003A3                 cmp     [ebp+var_14], edx
.text:000003A6                 jbe     short loc_3C5
.text:000003A8                 mov     eax, [ebp+arg_0]
.text:000003AB                 mov     ecx, [eax+10h]
.text:000003AE                 sub     ecx, [ebp+var_10]
.text:000003B1                 mov     [ebp+var_14], ecx
.text:000003B4                 jnz     short loc_3C5
.text:000003B6                 mov     edx, [ebp+arg_0]
.text:000003B9                 mov     dword ptr [edx+28h], 0
.text:000003C0                 jmp     loc_71C
.text:000003C5 ; ---------------------------------------------------------------------------
.text:000003C5
.text:000003C5 loc_3C5:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+F6j
.text:000003C5                                         ; Bcj2Enc_Encode_2(x)+104j
.text:000003C5                 mov     eax, [ebp+var_8]
.text:000003C8                 add     eax, [ebp+var_14]
.text:000003CB                 mov     [ebp+var_C], eax
.text:000003CE                 mov     ecx, [ebp+arg_0]
.text:000003D1                 movzx   edx, byte ptr [ecx+30h]
.text:000003D5                 cmp     edx, 0Fh
.text:000003D8                 jnz     short loc_3FD
.text:000003DA                 mov     eax, [ebp+var_8]
.text:000003DD                 movzx   ecx, byte ptr [eax]
.text:000003E0                 and     ecx, 0F0h
.text:000003E6                 cmp     ecx, 80h ; 'Ç'
.text:000003EC                 jnz     short loc_3FD
.text:000003EE                 mov     edx, [ebp+var_10]
.text:000003F1                 mov     eax, [ebp+var_8]
.text:000003F4                 mov     cl, [eax]
.text:000003F6                 mov     [edx], cl
.text:000003F8                 jmp     loc_489
.text:000003FD ; ---------------------------------------------------------------------------
.text:000003FD
.text:000003FD loc_3FD:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+128j
.text:000003FD                                         ; Bcj2Enc_Encode_2(x)+13Cj ...
.text:000003FD                 mov     edx, [ebp+var_8]
.text:00000400                 mov     al, [edx]
.text:00000402                 mov     [ebp+var_15], al
.text:00000405                 mov     ecx, [ebp+var_10]
.text:00000408                 mov     dl, [ebp+var_15]
.text:0000040B                 mov     [ecx], dl
.text:0000040D                 movzx   eax, [ebp+var_15]
.text:00000411                 cmp     eax, 0Fh
.text:00000414                 jz      short loc_448
.text:00000416                 movzx   ecx, [ebp+var_15]
.text:0000041A                 and     ecx, 0FEh
.text:00000420                 cmp     ecx, 0E8h ; 'F'
.text:00000426                 jnz     short loc_42A
.text:00000428                 jmp     short loc_489
.text:0000042A ; ---------------------------------------------------------------------------
.text:0000042A
.text:0000042A loc_42A:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+176j
.text:0000042A                 mov     edx, [ebp+var_10]
.text:0000042D                 add     edx, 1
.text:00000430                 mov     [ebp+var_10], edx
.text:00000433                 mov     eax, [ebp+var_8]
.text:00000436                 add     eax, 1
.text:00000439                 mov     [ebp+var_8], eax
.text:0000043C                 mov     ecx, [ebp+var_8]
.text:0000043F                 cmp     ecx, [ebp+var_C]
.text:00000442                 jz      short loc_446
.text:00000444                 jmp     short loc_3FD
.text:00000446 ; ---------------------------------------------------------------------------
.text:00000446
.text:00000446 loc_446:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+192j
.text:00000446                 jmp     short loc_489
.text:00000448 ; ---------------------------------------------------------------------------
.text:00000448
.text:00000448 loc_448:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+164j
.text:00000448                 mov     edx, [ebp+var_10]
.text:0000044B                 add     edx, 1
.text:0000044E                 mov     [ebp+var_10], edx
.text:00000451                 mov     eax, [ebp+var_8]
.text:00000454                 add     eax, 1
.text:00000457                 mov     [ebp+var_8], eax
.text:0000045A                 mov     ecx, [ebp+var_8]
.text:0000045D                 cmp     ecx, [ebp+var_C]
.text:00000460                 jnz     short loc_464
.text:00000462                 jmp     short loc_489
.text:00000464 ; ---------------------------------------------------------------------------
.text:00000464
.text:00000464 loc_464:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+1B0j
.text:00000464                 mov     edx, [ebp+var_8]
.text:00000467                 movzx   eax, byte ptr [edx]
.text:0000046A                 and     eax, 0F0h
.text:0000046F                 cmp     eax, 80h ; 'Ç'
.text:00000474                 jz      short loc_478
.text:00000476                 jmp     short loc_3FD
.text:00000478 ; ---------------------------------------------------------------------------
.text:00000478
.text:00000478 loc_478:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+1C4j
.text:00000478                 mov     ecx, [ebp+var_10]
.text:0000047B                 mov     edx, [ebp+var_8]
.text:0000047E                 mov     al, [edx]
.text:00000480                 mov     [ecx], al
.text:00000482                 jmp     short loc_489
.text:00000484 ; ---------------------------------------------------------------------------
.text:00000484                 jmp     loc_3FD
.text:00000489 ; ---------------------------------------------------------------------------
.text:00000489
.text:00000489 loc_489:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+148j
.text:00000489                                         ; Bcj2Enc_Encode_2(x)+178j ...
.text:00000489                 mov     ecx, [ebp+arg_0]
.text:0000048C                 mov     edx, [ebp+var_8]
.text:0000048F                 sub     edx, [ecx+20h]
.text:00000492                 mov     [ebp+var_14], edx
.text:00000495                 mov     eax, [ebp+var_8]
.text:00000498                 cmp     eax, [ebp+var_C]
.text:0000049B                 jnz     short loc_4CE
.text:0000049D                 mov     ecx, [ebp+arg_0]
.text:000004A0                 mov     edx, [ebp+var_8]
.text:000004A3                 mov     al, [edx-1]
.text:000004A6                 mov     [ecx+30h], al
.text:000004A9                 mov     ecx, [ebp+arg_0]
.text:000004AC                 mov     edx, [ebp+var_10]
.text:000004AF                 mov     [ecx], edx
.text:000004B1                 mov     eax, [ebp+arg_0]
.text:000004B4                 mov     ecx, [ebp+var_8]
.text:000004B7                 mov     [eax+20h], ecx
.text:000004BA                 mov     edx, [ebp+arg_0]
.text:000004BD                 mov     eax, [edx+48h]
.text:000004C0                 add     eax, [ebp+var_14]
.text:000004C3                 mov     ecx, [ebp+arg_0]
.text:000004C6                 mov     [ecx+48h], eax
.text:000004C9                 jmp     loc_327
.text:000004CE ; ---------------------------------------------------------------------------
.text:000004CE
.text:000004CE loc_4CE:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+1EBj
.text:000004CE                 cmp     [ebp+var_14], 0
.text:000004D2                 jnz     short loc_4E0
.text:000004D4                 mov     edx, [ebp+arg_0]
.text:000004D7                 movzx   eax, byte ptr [edx+30h]
.text:000004DB                 mov     [ebp+var_44], eax
.text:000004DE                 jmp     short loc_4EA
.text:000004E0 ; ---------------------------------------------------------------------------
.text:000004E0
.text:000004E0 loc_4E0:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+222j
.text:000004E0                 mov     ecx, [ebp+var_8]
.text:000004E3                 movzx   edx, byte ptr [ecx-1]
.text:000004E7                 mov     [ebp+var_44], edx
.text:000004EA
.text:000004EA loc_4EA:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+22Ej
.text:000004EA                 mov     al, byte ptr [ebp+var_44]
.text:000004ED                 mov     [ebp+var_16], al
.text:000004F0                 mov     ecx, [ebp+var_10]
.text:000004F3                 add     ecx, 1
.text:000004F6                 mov     edx, [ebp+arg_0]
.text:000004F9                 mov     [edx], ecx
.text:000004FB                 mov     eax, [ebp+arg_0]
.text:000004FE                 mov     ecx, [eax+48h]
.text:00000501                 mov     edx, [ebp+var_14]
.text:00000504                 lea     eax, [edx+ecx+1]
.text:00000508                 mov     ecx, [ebp+arg_0]
.text:0000050B                 mov     [ecx+48h], eax
.text:0000050E                 mov     edx, [ebp+var_8]
.text:00000511                 add     edx, 1
.text:00000514                 mov     [ebp+var_8], edx
.text:00000517                 mov     [ebp+var_1C], 0
.text:0000051E                 mov     eax, [ebp+arg_0]
.text:00000521                 mov     ecx, [eax+24h]
.text:00000524                 sub     ecx, [ebp+var_8]
.text:00000527                 cmp     ecx, 4
.text:0000052A                 jb      short loc_572
.text:0000052C                 mov     edx, [ebp+var_8]
.text:0000052F                 mov     eax, [edx]
.text:00000531                 mov     [ebp+var_20], eax
.text:00000534                 mov     ecx, [ebp+arg_0]
.text:00000537                 cmp     dword ptr [ecx+50h], 0
.text:0000053B                 jz      short loc_558
.text:0000053D                 mov     edx, [ebp+arg_0]
.text:00000540                 mov     eax, [edx+48h]
.text:00000543                 mov     ecx, [ebp+var_20]
.text:00000546                 lea     edx, [eax+ecx+4]
.text:0000054A                 mov     eax, [ebp+arg_0]
.text:0000054D                 sub     edx, [eax+4Ch]
.text:00000550                 mov     ecx, [ebp+arg_0]
.text:00000553                 cmp     edx, [ecx+50h]
.text:00000556                 jnb     short loc_572
.text:00000558
.text:00000558 loc_558:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+28Bj
.text:00000558                 mov     edx, [ebp+arg_0]
.text:0000055B                 mov     eax, [ebp+var_20]
.text:0000055E                 add     eax, [edx+54h]
.text:00000561                 shr     eax, 1
.text:00000563                 mov     ecx, [ebp+arg_0]
.text:00000566                 cmp     eax, [ecx+54h]
.text:00000569                 jnb     short loc_572
.text:0000056B                 mov     [ebp+var_1C], 1
.text:00000572
.text:00000572 loc_572:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+27Aj
.text:00000572                                         ; Bcj2Enc_Encode_2(x)+2A6j ...
.text:00000572                 mov     edx, [ebp+var_8]
.text:00000575                 mov     al, [edx-1]
.text:00000578                 mov     [ebp+var_29], al
.text:0000057B                 movzx   ecx, [ebp+var_29]
.text:0000057F                 cmp     ecx, 0E8h ; 'F'
.text:00000585                 jnz     short loc_593
.text:00000587                 movzx   edx, [ebp+var_16]
.text:0000058B                 add     edx, 2
.text:0000058E                 mov     [ebp+var_48], edx
.text:00000591                 jmp     short loc_5A4
.text:00000593 ; ---------------------------------------------------------------------------
.text:00000593
.text:00000593 loc_593:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+2D5j
.text:00000593                 movzx   eax, [ebp+var_29]
.text:00000597                 xor     ecx, ecx
.text:00000599                 cmp     eax, 0E9h ; 'T'
.text:0000059E                 setz    cl
.text:000005A1                 mov     [ebp+var_48], ecx
.text:000005A4
.text:000005A4 loc_5A4:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+2E1j
.text:000005A4                 mov     edx, [ebp+var_48]
.text:000005A7                 mov     eax, [ebp+arg_0]
.text:000005AA                 lea     ecx, [eax+edx*2+6Ch]
.text:000005AE                 mov     [ebp+var_30], ecx
.text:000005B1                 mov     edx, [ebp+var_30]
.text:000005B4                 movzx   eax, word ptr [edx]
.text:000005B7                 mov     [ebp+var_28], eax
.text:000005BA                 mov     ecx, [ebp+arg_0]
.text:000005BD                 mov     edx, [ecx+34h]
.text:000005C0                 shr     edx, 0Bh
.text:000005C3                 imul    edx, [ebp+var_28]
.text:000005C7                 mov     [ebp+var_24], edx
.text:000005CA                 cmp     [ebp+var_1C], 0
.text:000005CE                 jnz     short loc_604
.text:000005D0                 mov     eax, [ebp+arg_0]
.text:000005D3                 mov     ecx, [ebp+var_24]
.text:000005D6                 mov     [eax+34h], ecx
.text:000005D9                 mov     edx, 800h
.text:000005DE                 sub     edx, [ebp+var_28]
.text:000005E1                 shr     edx, 5
.text:000005E4                 add     edx, [ebp+var_28]
.text:000005E7                 mov     eax, [ebp+var_30]
.text:000005EA                 mov     [eax], dx
.text:000005ED                 mov     ecx, [ebp+arg_0]
.text:000005F0                 mov     edx, [ebp+var_8]
.text:000005F3                 mov     [ecx+20h], edx
.text:000005F6                 mov     eax, [ebp+arg_0]
.text:000005F9                 mov     cl, [ebp+var_29]
.text:000005FC                 mov     [eax+30h], cl
.text:000005FF                 jmp     loc_327
.text:00000604 ; ---------------------------------------------------------------------------
.text:00000604
.text:00000604 loc_604:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+31Ej
.text:00000604                 mov     edx, [ebp+var_24]
.text:00000607                 xor     eax, eax
.text:00000609                 mov     ecx, [ebp+arg_0]
.text:0000060C                 add     edx, [ecx+38h]
.text:0000060F                 adc     eax, [ecx+3Ch]
.text:00000612                 mov     ecx, [ebp+arg_0]
.text:00000615                 mov     [ecx+38h], edx
.text:00000618                 mov     [ecx+3Ch], eax
.text:0000061B                 mov     edx, [ebp+arg_0]
.text:0000061E                 mov     eax, [edx+34h]
.text:00000621                 sub     eax, [ebp+var_24]
.text:00000624                 mov     ecx, [ebp+arg_0]
.text:00000627                 mov     [ecx+34h], eax
.text:0000062A                 mov     edx, [ebp+var_28]
.text:0000062D                 shr     edx, 5
.text:00000630                 mov     eax, [ebp+var_28]
.text:00000633                 sub     eax, edx
.text:00000635                 mov     ecx, [ebp+var_30]
.text:00000638                 mov     [ecx], ax
.text:0000063B                 mov     edx, [ebp+var_8]
.text:0000063E                 mov     eax, [edx]
.text:00000640                 mov     [ebp+var_34], eax
.text:00000643                 mov     ecx, [ebp+arg_0]
.text:00000646                 mov     edx, [ecx+48h]
.text:00000649                 add     edx, 4
.text:0000064C                 mov     eax, [ebp+arg_0]
.text:0000064F                 mov     [eax+48h], edx
.text:00000652                 mov     ecx, [ebp+arg_0]
.text:00000655                 mov     edx, [ecx+48h]
.text:00000658                 add     edx, [ebp+var_34]
.text:0000065B                 mov     [ebp+var_38], edx
.text:0000065E                 mov     eax, [ebp+arg_0]
.text:00000661                 mov     ecx, [ebp+var_8]
.text:00000664                 mov     dl, [ecx+3]
.text:00000667                 mov     [eax+30h], dl
.text:0000066A                 mov     eax, [ebp+var_8]
.text:0000066D                 add     eax, 4
.text:00000670                 mov     [ebp+var_8], eax
.text:00000673                 mov     ecx, [ebp+arg_0]
.text:00000676                 mov     edx, [ebp+var_8]
.text:00000679                 mov     [ecx+20h], edx
.text:0000067C                 movzx   eax, [ebp+var_29]
.text:00000680                 xor     ecx, ecx
.text:00000682                 cmp     eax, 0E8h ; 'F'
.text:00000687                 setnz   cl
.text:0000068A                 add     ecx, 1
.text:0000068D                 mov     [ebp+var_3C], ecx
.text:00000690                 mov     edx, [ebp+var_3C]
.text:00000693                 mov     eax, [ebp+arg_0]
.text:00000696                 mov     ecx, [eax+edx*4]
.text:00000699                 mov     [ebp+var_40], ecx
.text:0000069C                 mov     edx, [ebp+var_3C]
.text:0000069F                 mov     eax, [ebp+arg_0]
.text:000006A2                 mov     ecx, [ebp+var_40]
.text:000006A5                 cmp     ecx, [eax+edx*4+10h]
.text:000006A9                 jnz     short loc_6BF
.text:000006AB                 mov     edx, [ebp+arg_0]
.text:000006AE                 mov     eax, [ebp+var_3C]
.text:000006B1                 mov     [edx+28h], eax
.text:000006B4                 mov     ecx, [ebp+arg_0]
.text:000006B7                 mov     edx, [ebp+var_38]
.text:000006BA                 mov     [ecx+58h], edx
.text:000006BD                 jmp     short loc_71C
.text:000006BF ; ---------------------------------------------------------------------------
.text:000006BF
.text:000006BF loc_6BF:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+3F9j
.text:000006BF                 mov     eax, [ebp+var_38]
.text:000006C2                 bswap   eax
.text:000006C4                 mov     ecx, [ebp+var_40]
.text:000006C7                 mov     [ecx], eax
.text:000006C9                 mov     edx, [ebp+var_40]
.text:000006CC                 add     edx, 4
.text:000006CF                 mov     eax, [ebp+var_3C]
.text:000006D2                 mov     ecx, [ebp+arg_0]
.text:000006D5                 mov     [ecx+eax*4], edx
.text:000006D8                 jmp     loc_327
.text:000006DD ; ---------------------------------------------------------------------------
.text:000006DD
.text:000006DD loc_6DD:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+DDj
.text:000006DD                 mov     edx, [ebp+arg_0]
.text:000006E0                 cmp     dword ptr [edx+2Ch], 2
.text:000006E4                 jz      short loc_6E8
.text:000006E6                 jmp     short loc_71C
.text:000006E8 ; ---------------------------------------------------------------------------
.text:000006E8
.text:000006E8 loc_6E8:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+434j
.text:000006E8                 jmp     short loc_6F9
.text:000006EA ; ---------------------------------------------------------------------------
.text:000006EA
.text:000006EA loc_6EA:                                ; CODE XREF: Bcj2Enc_Encode_2(x):loc_710j
.text:000006EA                 mov     eax, [ebp+arg_0]
.text:000006ED                 mov     ecx, [eax+68h]
.text:000006F0                 add     ecx, 1
.text:000006F3                 mov     edx, [ebp+arg_0]
.text:000006F6                 mov     [edx+68h], ecx
.text:000006F9
.text:000006F9 loc_6F9:                                ; CODE XREF: Bcj2Enc_Encode_2(x):loc_6E8j
.text:000006F9                 mov     eax, [ebp+arg_0]
.text:000006FC                 cmp     dword ptr [eax+68h], 5
.text:00000700                 jnb     short loc_712
.text:00000702                 mov     ecx, [ebp+arg_0]
.text:00000705                 call    @RangeEnc_ShiftLow@4 ; RangeEnc_ShiftLow(x)
.text:0000070A                 test    eax, eax
.text:0000070C                 jz      short loc_710
.text:0000070E                 jmp     short loc_71C
.text:00000710 ; ---------------------------------------------------------------------------
.text:00000710
.text:00000710 loc_710:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+45Cj
.text:00000710                 jmp     short loc_6EA
.text:00000712 ; ---------------------------------------------------------------------------
.text:00000712
.text:00000712 loc_712:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+450j
.text:00000712                 mov     ecx, [ebp+arg_0]
.text:00000715                 mov     dword ptr [ecx+28h], 5
.text:0000071C
.text:0000071C loc_71C:                                ; CODE XREF: Bcj2Enc_Encode_2(x)+49j
.text:0000071C                                         ; Bcj2Enc_Encode_2(x)+8Fj ...
.text:0000071C                 pop     edi
.text:0000071D                 add     esp, 48h
.text:00000720                 cmp     ebp, esp
.text:00000722                 call    __RTC_CheckEsp
.text:00000727                 mov     esp, ebp
.text:00000729                 pop     ebp
.text:0000072A                 retn    4
.text:0000072A _Bcj2Enc_Encode_2@4 endp
.text:0000072A
.text:0000072A ; ---------------------------------------------------------------------------
.text:0000072D                 align 10h
.text:00000730
.text:00000730 ; =============== S U B R O U T I N E =======================================
.text:00000730
.text:00000730 ; Attributes: bp-based frame
.text:00000730
.text:00000730 ; __fastcall RangeEnc_ShiftLow(x)
.text:00000730 @RangeEnc_ShiftLow@4 proc near          ; CODE XREF: Bcj2Enc_Encode_2(x)+86p
.text:00000730                                         ; Bcj2Enc_Encode_2(x)+455p
.text:00000730
.text:00000730 var_10          = dword ptr -10h
.text:00000730 var_C           = dword ptr -0Ch
.text:00000730 var_8           = dword ptr -8
.text:00000730 var_4           = dword ptr -4
.text:00000730
.text:00000730                 push    ebp
.text:00000731                 mov     ebp, esp
.text:00000733                 sub     esp, 10h
.text:00000736                 push    ebx
.text:00000737                 mov     eax, 0CCCCCCCCh
.text:0000073C                 mov     [ebp+var_10], eax
.text:0000073F                 mov     [ebp+var_C], eax
.text:00000742                 mov     [ebp+var_8], eax
.text:00000745                 mov     [ebp+var_4], eax
.text:00000748                 mov     [ebp+var_4], ecx
.text:0000074B                 mov     eax, [ebp+var_4]
.text:0000074E                 cmp     dword ptr [eax+38h], 0FF000000h
.text:00000755                 jb      short loc_76F
.text:00000757                 mov     ecx, [ebp+var_4]
.text:0000075A                 mov     eax, [ecx+38h]
.text:0000075D                 mov     edx, [ecx+3Ch]
.text:00000760                 mov     cl, 20h ; ' '
.text:00000762                 call    __aullshr
.text:00000767                 test    eax, eax
.text:00000769                 jz      loc_819
.text:0000076F
.text:0000076F loc_76F:                                ; CODE XREF: RangeEnc_ShiftLow(x)+25j
.text:0000076F                 mov     edx, [ebp+var_4]
.text:00000772                 mov     eax, [edx+0Ch]
.text:00000775                 mov     [ebp+var_8], eax
.text:00000778
.text:00000778 loc_778:                                ; CODE XREF: RangeEnc_ShiftLow(x)+CBj
.text:00000778                 mov     ecx, [ebp+var_4]
.text:0000077B                 mov     edx, [ebp+var_8]
.text:0000077E                 cmp     edx, [ecx+1Ch]
.text:00000781                 jnz     short loc_7A0
.text:00000783                 mov     eax, [ebp+var_4]
.text:00000786                 mov     dword ptr [eax+28h], 3
.text:0000078D                 mov     ecx, [ebp+var_4]
.text:00000790                 mov     edx, [ebp+var_8]
.text:00000793                 mov     [ecx+0Ch], edx
.text:00000796                 mov     eax, 1
.text:0000079B                 jmp     loc_847
.text:000007A0 ; ---------------------------------------------------------------------------
.text:000007A0
.text:000007A0 loc_7A0:                                ; CODE XREF: RangeEnc_ShiftLow(x)+51j
.text:000007A0                 mov     eax, [ebp+var_4]
.text:000007A3                 movzx   ebx, byte ptr [eax+31h]
.text:000007A7                 mov     ecx, [ebp+var_4]
.text:000007AA                 mov     eax, [ecx+38h]
.text:000007AD                 mov     edx, [ecx+3Ch]
.text:000007B0                 mov     cl, 20h ; ' '
.text:000007B2                 call    __aullshr
.text:000007B7                 movzx   edx, al
.text:000007BA                 add     ebx, edx
.text:000007BC                 mov     eax, [ebp+var_8]
.text:000007BF                 mov     [eax], bl
.text:000007C1                 mov     ecx, [ebp+var_8]
.text:000007C4                 add     ecx, 1
.text:000007C7                 mov     [ebp+var_8], ecx
.text:000007CA                 mov     edx, [ebp+var_4]
.text:000007CD                 mov     byte ptr [edx+31h], 0FFh
.text:000007D1                 mov     eax, [ebp+var_4]
.text:000007D4                 mov     ecx, [eax+40h]
.text:000007D7                 sub     ecx, 1
.text:000007DA                 mov     [ebp+var_10], ecx
.text:000007DD                 mov     edx, [eax+44h]
.text:000007E0                 sbb     edx, 0
.text:000007E3                 mov     [ebp+var_C], edx
.text:000007E6                 mov     eax, [ebp+var_4]
.text:000007E9                 mov     ecx, [ebp+var_10]
.text:000007EC                 mov     [eax+40h], ecx
.text:000007EF                 mov     edx, [ebp+var_C]
.text:000007F2                 mov     [eax+44h], edx
.text:000007F5                 mov     eax, [ebp+var_10]
.text:000007F8                 or      eax, [ebp+var_C]
.text:000007FB                 jnz     loc_778
.text:00000801                 mov     ecx, [ebp+var_4]
.text:00000804                 mov     edx, [ebp+var_8]
.text:00000807                 mov     [ecx+0Ch], edx
.text:0000080A                 mov     eax, [ebp+var_4]
.text:0000080D                 mov     ecx, [eax+38h]
.text:00000810                 shr     ecx, 18h
.text:00000813                 mov     edx, [ebp+var_4]
.text:00000816                 mov     [edx+31h], cl
.text:00000819
.text:00000819 loc_819:                                ; CODE XREF: RangeEnc_ShiftLow(x)+39j
.text:00000819                 mov     eax, [ebp+var_4]
.text:0000081C                 mov     ecx, [eax+40h]
.text:0000081F                 add     ecx, 1
.text:00000822                 mov     edx, [eax+44h]
.text:00000825                 adc     edx, 0
.text:00000828                 mov     eax, [ebp+var_4]
.text:0000082B                 mov     [eax+40h], ecx
.text:0000082E                 mov     [eax+44h], edx
.text:00000831                 mov     ecx, [ebp+var_4]
.text:00000834                 mov     edx, [ecx+38h]
.text:00000837                 shl     edx, 8
.text:0000083A                 xor     eax, eax
.text:0000083C                 mov     ecx, [ebp+var_4]
.text:0000083F                 mov     [ecx+38h], edx
.text:00000842                 mov     [ecx+3Ch], eax
.text:00000845                 xor     eax, eax
.text:00000847
.text:00000847 loc_847:                                ; CODE XREF: RangeEnc_ShiftLow(x)+6Bj
.text:00000847                 pop     ebx
.text:00000848                 add     esp, 10h
.text:0000084B                 cmp     ebp, esp
.text:0000084D                 call    __RTC_CheckEsp
.text:00000852                 mov     esp, ebp
.text:00000854                 pop     ebp
.text:00000855                 retn
.text:00000855 @RangeEnc_ShiftLow@4 endp
.text:00000855
.text:00000855 ; ---------------------------------------------------------------------------
.text:00000856                 align 4
.text:00000856 _text           ends
.text:00000856
.rtc$TMZ:00000858 ; ===========================================================================
.rtc$TMZ:00000858
.rtc$TMZ:00000858 ; Segment type: Pure data
.rtc$TMZ:00000858 ; Segment permissions: Read
.rtc$TMZ:00000858 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00000858                 assume cs:_rtc$TMZ
.rtc$TMZ:00000858                 ;org 858h
.rtc$TMZ:00000858 ; COMDAT (pick any)
.rtc$TMZ:00000858 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00000858 _rtc$TMZ        ends
.rtc$TMZ:00000858
.rtc$IMZ:0000085C ; ===========================================================================
.rtc$IMZ:0000085C
.rtc$IMZ:0000085C ; Segment type: Pure data
.rtc$IMZ:0000085C ; Segment permissions: Read
.rtc$IMZ:0000085C _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:0000085C                 assume cs:_rtc$IMZ
.rtc$IMZ:0000085C                 ;org 85Ch
.rtc$IMZ:0000085C ; COMDAT (pick any)
.rtc$IMZ:0000085C __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:0000085C _rtc$IMZ        ends
.rtc$IMZ:0000085C
UNDEF:00000860 ; ===========================================================================
UNDEF:00000860
UNDEF:00000860 ; Segment type: Externs
UNDEF:00000860 ; UNDEF
UNDEF:00000860                 extrn __RTC_Shutdown:near
UNDEF:00000860                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00000864                 extrn __RTC_InitBase:near
UNDEF:00000864                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:00000868                 extrn __RTC_CheckEsp:near ; CODE XREF: Bcj2Enc_Encode(x)+1CBp
UNDEF:00000868                                         ; Bcj2Enc_Encode_2(x)+472p ...
UNDEF:0000086C                 extrn __aullshr:near    ; CODE XREF: RangeEnc_ShiftLow(x)+32p
UNDEF:0000086C                                         ; RangeEnc_ShiftLow(x)+82p
UNDEF:0000086C
UNDEF:0000086C
UNDEF:0000086C                 end
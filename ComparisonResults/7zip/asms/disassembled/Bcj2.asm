.text:00000000 ;
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.text:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.text:00000000 ; |                      License info: 48-3677-7074-51                      |
.text:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ;
.text:00000000 ; Input MD5   : 20C07615B23BAC8E3E0D06F7732FF002
.text:00000000 ; Input CRC32 : F9EBB46F
.text:00000000
.text:00000000 ; File Name   : C:\workspace\7z1505-src\CPP\7zip\Bundles\Alone\Debug\Bcj2.obj
.text:00000000 ; Format      : COFF (X386MAGIC)
.text:00000000 ; includelib "MSVCRTD"
.text:00000000 ; includelib "OLDNAMES"
.text:00000000
.text:00000000                 .686p
.text:00000000                 .mmx
.text:00000000                 .model flat
.text:00000000
.text:00000000 ; ===========================================================================
.text:00000000
.text:00000000 ; Segment type: Pure code
.text:00000000 ; Segment permissions: Read/Execute
.text:00000000 _text           segment para public 'CODE' use32
.text:00000000                 assume cs:_text
.text:00000000                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:00000000
.text:00000000 ; =============== S U B R O U T I N E =======================================
.text:00000000
.text:00000000 ; Attributes: bp-based frame
.text:00000000
.text:00000000 ; __stdcall Bcj2Dec_Init(x)
.text:00000000                 public _Bcj2Dec_Init@4
.text:00000000 _Bcj2Dec_Init@4 proc near
.text:00000000
.text:00000000 var_4           = dword ptr -4
.text:00000000 arg_0           = dword ptr  8
.text:00000000
.text:00000000                 push    ebp
.text:00000001                 mov     ebp, esp
.text:00000003                 push    ecx
.text:00000004                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000000B                 mov     eax, [ebp+arg_0]
.text:0000000E                 mov     dword ptr [eax+28h], 9
.text:00000015                 mov     ecx, [ebp+arg_0]
.text:00000018                 mov     dword ptr [ecx+2Ch], 0
.text:0000001F                 mov     edx, [ebp+arg_0]
.text:00000022                 mov     byte ptr [edx+33h], 0
.text:00000026                 mov     eax, [ebp+arg_0]
.text:00000029                 mov     dword ptr [eax+34h], 0
.text:00000030                 mov     ecx, [ebp+arg_0]
.text:00000033                 mov     dword ptr [ecx+38h], 0
.text:0000003A                 mov     [ebp+var_4], 0
.text:00000041                 jmp     short loc_4C
.text:00000043 ; ---------------------------------------------------------------------------
.text:00000043
.text:00000043 loc_43:                                 ; CODE XREF: Bcj2Dec_Init(x)+65j
.text:00000043                 mov     edx, [ebp+var_4]
.text:00000046                 add     edx, 1
.text:00000049                 mov     [ebp+var_4], edx
.text:0000004C
.text:0000004C loc_4C:                                 ; CODE XREF: Bcj2Dec_Init(x)+41j
.text:0000004C                 cmp     [ebp+var_4], 102h
.text:00000053                 jnb     short loc_67
.text:00000055                 mov     eax, 400h
.text:0000005A                 mov     ecx, [ebp+var_4]
.text:0000005D                 mov     edx, [ebp+arg_0]
.text:00000060                 mov     [edx+ecx*2+3Ch], ax
.text:00000065                 jmp     short loc_43
.text:00000067 ; ---------------------------------------------------------------------------
.text:00000067
.text:00000067 loc_67:                                 ; CODE XREF: Bcj2Dec_Init(x)+53j
.text:00000067                 mov     esp, ebp
.text:00000069                 pop     ebp
.text:0000006A                 retn    4
.text:0000006A _Bcj2Dec_Init@4 endp
.text:0000006A
.text:0000006A ; ---------------------------------------------------------------------------
.text:0000006D                 align 10h
.text:00000070
.text:00000070 ; =============== S U B R O U T I N E =======================================
.text:00000070
.text:00000070 ; Attributes: bp-based frame
.text:00000070
.text:00000070 ; __stdcall Bcj2Dec_Decode(x)
.text:00000070                 public _Bcj2Dec_Decode@4
.text:00000070 _Bcj2Dec_Decode@4 proc near
.text:00000070
.text:00000070 var_48          = dword ptr -48h
.text:00000070 var_44          = dword ptr -44h
.text:00000070 var_40          = dword ptr -40h
.text:00000070 var_3C          = dword ptr -3Ch
.text:00000070 var_38          = dword ptr -38h
.text:00000070 var_34          = dword ptr -34h
.text:00000070 var_30          = dword ptr -30h
.text:00000070 var_2C          = dword ptr -2Ch
.text:00000070 var_26          = byte ptr -26h
.text:00000070 var_25          = byte ptr -25h
.text:00000070 var_24          = dword ptr -24h
.text:00000070 var_20          = dword ptr -20h
.text:00000070 var_1C          = dword ptr -1Ch
.text:00000070 var_15          = byte ptr -15h
.text:00000070 var_14          = dword ptr -14h
.text:00000070 var_10          = dword ptr -10h
.text:00000070 var_C           = dword ptr -0Ch
.text:00000070 var_8           = dword ptr -8
.text:00000070 var_4           = dword ptr -4
.text:00000070 arg_0           = dword ptr  8
.text:00000070
.text:00000070                 push    ebp
.text:00000071                 mov     ebp, esp
.text:00000073                 sub     esp, 48h
.text:00000076                 push    edi
.text:00000077                 lea     edi, [ebp+var_48]
.text:0000007A                 mov     ecx, 12h
.text:0000007F                 mov     eax, 0CCCCCCCCh
.text:00000084                 rep stosd
.text:00000086                 mov     eax, [ebp+arg_0]
.text:00000089                 cmp     dword ptr [eax+34h], 5
.text:0000008D                 ja      loc_13C
.text:00000093                 mov     ecx, [ebp+arg_0]
.text:00000096                 mov     dword ptr [ecx+28h], 9
.text:0000009D                 jmp     short loc_AE
.text:0000009F ; ---------------------------------------------------------------------------
.text:0000009F
.text:0000009F loc_9F:                                 ; CODE XREF: Bcj2Dec_Decode(x)+ABj
.text:0000009F                 mov     edx, [ebp+arg_0]
.text:000000A2                 mov     eax, [edx+34h]
.text:000000A5                 add     eax, 1
.text:000000A8                 mov     ecx, [ebp+arg_0]
.text:000000AB                 mov     [ecx+34h], eax
.text:000000AE
.text:000000AE loc_AE:                                 ; CODE XREF: Bcj2Dec_Decode(x)+2Dj
.text:000000AE                 mov     edx, [ebp+arg_0]
.text:000000B1                 cmp     dword ptr [edx+34h], 5
.text:000000B5                 jz      short loc_11D
.text:000000B7                 mov     eax, [ebp+arg_0]
.text:000000BA                 cmp     dword ptr [eax+34h], 1
.text:000000BE                 jnz     short loc_D3
.text:000000C0                 mov     ecx, [ebp+arg_0]
.text:000000C3                 cmp     dword ptr [ecx+38h], 0
.text:000000C7                 jz      short loc_D3
.text:000000C9                 mov     eax, 1
.text:000000CE                 jmp     loc_60D
.text:000000D3 ; ---------------------------------------------------------------------------
.text:000000D3
.text:000000D3 loc_D3:                                 ; CODE XREF: Bcj2Dec_Decode(x)+4Ej
.text:000000D3                                         ; Bcj2Dec_Decode(x)+57j
.text:000000D3                 mov     edx, [ebp+arg_0]
.text:000000D6                 mov     eax, [ebp+arg_0]
.text:000000D9                 mov     ecx, [edx+0Ch]
.text:000000DC                 cmp     ecx, [eax+1Ch]
.text:000000DF                 jnz     short loc_F2
.text:000000E1                 mov     edx, [ebp+arg_0]
.text:000000E4                 mov     dword ptr [edx+28h], 3
.text:000000EB                 xor     eax, eax
.text:000000ED                 jmp     loc_60D
.text:000000F2 ; ---------------------------------------------------------------------------
.text:000000F2
.text:000000F2 loc_F2:                                 ; CODE XREF: Bcj2Dec_Decode(x)+6Fj
.text:000000F2                 mov     eax, [ebp+arg_0]
.text:000000F5                 mov     ecx, [eax+38h]
.text:000000F8                 shl     ecx, 8
.text:000000FB                 mov     edx, [ebp+arg_0]
.text:000000FE                 mov     eax, [edx+0Ch]
.text:00000101                 movzx   edx, byte ptr [eax]
.text:00000104                 or      ecx, edx
.text:00000106                 mov     eax, [ebp+arg_0]
.text:00000109                 mov     [eax+38h], ecx
.text:0000010C                 mov     ecx, [ebp+arg_0]
.text:0000010F                 mov     edx, [ecx+0Ch]
.text:00000112                 add     edx, 1
.text:00000115                 mov     eax, [ebp+arg_0]
.text:00000118                 mov     [eax+0Ch], edx
.text:0000011B                 jmp     short loc_9F
.text:0000011D ; ---------------------------------------------------------------------------
.text:0000011D
.text:0000011D loc_11D:                                ; CODE XREF: Bcj2Dec_Decode(x)+45j
.text:0000011D                 mov     ecx, [ebp+arg_0]
.text:00000120                 cmp     dword ptr [ecx+38h], 0FFFFFFFFh
.text:00000124                 jnz     short loc_130
.text:00000126                 mov     eax, 1
.text:0000012B                 jmp     loc_60D
.text:00000130 ; ---------------------------------------------------------------------------
.text:00000130
.text:00000130 loc_130:                                ; CODE XREF: Bcj2Dec_Decode(x)+B4j
.text:00000130                 mov     edx, [ebp+arg_0]
.text:00000133                 mov     dword ptr [edx+34h], 0FFFFFFFFh
.text:0000013A                 jmp     short loc_198
.text:0000013C ; ---------------------------------------------------------------------------
.text:0000013C
.text:0000013C loc_13C:                                ; CODE XREF: Bcj2Dec_Decode(x)+1Dj
.text:0000013C                 mov     eax, [ebp+arg_0]
.text:0000013F                 cmp     dword ptr [eax+28h], 4
.text:00000143                 jb      short loc_198
.text:00000145
.text:00000145 loc_145:                                ; CODE XREF: Bcj2Dec_Decode(x)+126j
.text:00000145                 mov     ecx, [ebp+arg_0]
.text:00000148                 cmp     dword ptr [ecx+28h], 7
.text:0000014C                 ja      short loc_198
.text:0000014E                 mov     edx, [ebp+arg_0]
.text:00000151                 mov     eax, [edx+20h]
.text:00000154                 mov     [ebp+var_4], eax
.text:00000157                 mov     ecx, [ebp+arg_0]
.text:0000015A                 mov     edx, [ebp+var_4]
.text:0000015D                 cmp     edx, [ecx+24h]
.text:00000160                 jnz     short loc_169
.text:00000162                 xor     eax, eax
.text:00000164                 jmp     loc_60D
.text:00000169 ; ---------------------------------------------------------------------------
.text:00000169
.text:00000169 loc_169:                                ; CODE XREF: Bcj2Dec_Decode(x)+F0j
.text:00000169                 mov     eax, [ebp+arg_0]
.text:0000016C                 mov     ecx, [eax+28h]
.text:0000016F                 mov     edx, [ebp+var_4]
.text:00000172                 mov     eax, [ebp+arg_0]
.text:00000175                 mov     cl, [eax+ecx+2Ch]
.text:00000179                 mov     [edx], cl
.text:0000017B                 mov     edx, [ebp+arg_0]
.text:0000017E                 mov     eax, [edx+28h]
.text:00000181                 add     eax, 1
.text:00000184                 mov     ecx, [ebp+arg_0]
.text:00000187                 mov     [ecx+28h], eax
.text:0000018A                 mov     edx, [ebp+var_4]
.text:0000018D                 add     edx, 1
.text:00000190                 mov     eax, [ebp+arg_0]
.text:00000193                 mov     [eax+20h], edx
.text:00000196                 jmp     short loc_145
.text:00000198 ; ---------------------------------------------------------------------------
.text:00000198
.text:00000198 loc_198:                                ; CODE XREF: Bcj2Dec_Decode(x)+CAj
.text:00000198                                         ; Bcj2Dec_Decode(x)+D3j ...
.text:00000198                 mov     ecx, [ebp+arg_0]
.text:0000019B                 cmp     dword ptr [ecx+28h], 1
.text:0000019F                 jz      short loc_1AA
.text:000001A1                 mov     edx, [ebp+arg_0]
.text:000001A4                 cmp     dword ptr [edx+28h], 2
.text:000001A8                 jnz     short loc_1B9
.text:000001AA
.text:000001AA loc_1AA:                                ; CODE XREF: Bcj2Dec_Decode(x)+12Fj
.text:000001AA                 mov     eax, [ebp+arg_0]
.text:000001AD                 mov     dword ptr [eax+28h], 9
.text:000001B4                 jmp     loc_4B4
.text:000001B9 ; ---------------------------------------------------------------------------
.text:000001B9
.text:000001B9 loc_1B9:                                ; CODE XREF: Bcj2Dec_Decode(x)+138j
.text:000001B9                 mov     ecx, [ebp+arg_0]
.text:000001BC                 cmp     dword ptr [ecx+34h], 1000000h
.text:000001C3                 jnb     short loc_21C
.text:000001C5                 mov     edx, [ebp+arg_0]
.text:000001C8                 mov     eax, [ebp+arg_0]
.text:000001CB                 mov     ecx, [edx+0Ch]
.text:000001CE                 cmp     ecx, [eax+1Ch]
.text:000001D1                 jnz     short loc_1E4
.text:000001D3                 mov     edx, [ebp+arg_0]
.text:000001D6                 mov     dword ptr [edx+28h], 3
.text:000001DD                 xor     eax, eax
.text:000001DF                 jmp     loc_60D
.text:000001E4 ; ---------------------------------------------------------------------------
.text:000001E4
.text:000001E4 loc_1E4:                                ; CODE XREF: Bcj2Dec_Decode(x)+161j
.text:000001E4                 mov     eax, [ebp+arg_0]
.text:000001E7                 mov     ecx, [eax+34h]
.text:000001EA                 shl     ecx, 8
.text:000001ED                 mov     edx, [ebp+arg_0]
.text:000001F0                 mov     [edx+34h], ecx
.text:000001F3                 mov     eax, [ebp+arg_0]
.text:000001F6                 mov     ecx, [eax+38h]
.text:000001F9                 shl     ecx, 8
.text:000001FC                 mov     edx, [ebp+arg_0]
.text:000001FF                 mov     eax, [edx+0Ch]
.text:00000202                 movzx   edx, byte ptr [eax]
.text:00000205                 or      ecx, edx
.text:00000207                 mov     eax, [ebp+arg_0]
.text:0000020A                 mov     [eax+38h], ecx
.text:0000020D                 mov     ecx, [ebp+arg_0]
.text:00000210                 mov     edx, [ecx+0Ch]
.text:00000213                 add     edx, 1
.text:00000216                 mov     eax, [ebp+arg_0]
.text:00000219                 mov     [eax+0Ch], edx
.text:0000021C
.text:0000021C loc_21C:                                ; CODE XREF: Bcj2Dec_Decode(x)+153j
.text:0000021C                 mov     ecx, [ebp+arg_0]
.text:0000021F                 mov     edx, [ecx]
.text:00000221                 mov     [ebp+var_8], edx
.text:00000224                 mov     eax, [ebp+arg_0]
.text:00000227                 mov     ecx, [eax+10h]
.text:0000022A                 sub     ecx, [ebp+var_8]
.text:0000022D                 mov     [ebp+var_14], ecx
.text:00000230                 jnz     short loc_243
.text:00000232                 mov     edx, [ebp+arg_0]
.text:00000235                 mov     dword ptr [edx+28h], 0
.text:0000023C                 xor     eax, eax
.text:0000023E                 jmp     loc_60D
.text:00000243 ; ---------------------------------------------------------------------------
.text:00000243
.text:00000243 loc_243:                                ; CODE XREF: Bcj2Dec_Decode(x)+1C0j
.text:00000243                 mov     eax, [ebp+arg_0]
.text:00000246                 mov     ecx, [eax+20h]
.text:00000249                 mov     [ebp+var_10], ecx
.text:0000024C                 mov     edx, [ebp+arg_0]
.text:0000024F                 mov     eax, [edx+24h]
.text:00000252                 sub     eax, [ebp+var_10]
.text:00000255                 cmp     [ebp+var_14], eax
.text:00000258                 jbe     short loc_279
.text:0000025A                 mov     ecx, [ebp+arg_0]
.text:0000025D                 mov     edx, [ecx+24h]
.text:00000260                 sub     edx, [ebp+var_10]
.text:00000263                 mov     [ebp+var_14], edx
.text:00000266                 jnz     short loc_279
.text:00000268                 mov     eax, [ebp+arg_0]
.text:0000026B                 mov     dword ptr [eax+28h], 8
.text:00000272                 xor     eax, eax
.text:00000274                 jmp     loc_60D
.text:00000279 ; ---------------------------------------------------------------------------
.text:00000279
.text:00000279 loc_279:                                ; CODE XREF: Bcj2Dec_Decode(x)+1E8j
.text:00000279                                         ; Bcj2Dec_Decode(x)+1F6j
.text:00000279                 mov     ecx, [ebp+var_8]
.text:0000027C                 add     ecx, [ebp+var_14]
.text:0000027F                 mov     [ebp+var_C], ecx
.text:00000282                 mov     edx, [ebp+arg_0]
.text:00000285                 movzx   eax, byte ptr [edx+33h]
.text:00000289                 cmp     eax, 0Fh
.text:0000028C                 jnz     short loc_2B1
.text:0000028E                 mov     ecx, [ebp+var_8]
.text:00000291                 movzx   edx, byte ptr [ecx]
.text:00000294                 and     edx, 0F0h
.text:0000029A                 cmp     edx, 80h ; 'Ç'
.text:000002A0                 jnz     short loc_2B1
.text:000002A2                 mov     eax, [ebp+var_10]
.text:000002A5                 mov     ecx, [ebp+var_8]
.text:000002A8                 mov     dl, [ecx]
.text:000002AA                 mov     [eax], dl
.text:000002AC                 jmp     loc_33F
.text:000002B1 ; ---------------------------------------------------------------------------
.text:000002B1
.text:000002B1 loc_2B1:                                ; CODE XREF: Bcj2Dec_Decode(x)+21Cj
.text:000002B1                                         ; Bcj2Dec_Decode(x)+230j ...
.text:000002B1                 mov     eax, [ebp+var_8]
.text:000002B4                 mov     cl, [eax]
.text:000002B6                 mov     [ebp+var_15], cl
.text:000002B9                 mov     edx, [ebp+var_10]
.text:000002BC                 mov     al, [ebp+var_15]
.text:000002BF                 mov     [edx], al
.text:000002C1                 movzx   ecx, [ebp+var_15]
.text:000002C5                 cmp     ecx, 0Fh
.text:000002C8                 jz      short loc_2FC
.text:000002CA                 movzx   edx, [ebp+var_15]
.text:000002CE                 and     edx, 0FEh
.text:000002D4                 cmp     edx, 0E8h ; 'F'
.text:000002DA                 jnz     short loc_2DE
.text:000002DC                 jmp     short loc_33F
.text:000002DE ; ---------------------------------------------------------------------------
.text:000002DE
.text:000002DE loc_2DE:                                ; CODE XREF: Bcj2Dec_Decode(x)+26Aj
.text:000002DE                 mov     eax, [ebp+var_10]
.text:000002E1                 add     eax, 1
.text:000002E4                 mov     [ebp+var_10], eax
.text:000002E7                 mov     ecx, [ebp+var_8]
.text:000002EA                 add     ecx, 1
.text:000002ED                 mov     [ebp+var_8], ecx
.text:000002F0                 mov     edx, [ebp+var_8]
.text:000002F3                 cmp     edx, [ebp+var_C]
.text:000002F6                 jz      short loc_2FA
.text:000002F8                 jmp     short loc_2B1
.text:000002FA ; ---------------------------------------------------------------------------
.text:000002FA
.text:000002FA loc_2FA:                                ; CODE XREF: Bcj2Dec_Decode(x)+286j
.text:000002FA                 jmp     short loc_33F
.text:000002FC ; ---------------------------------------------------------------------------
.text:000002FC
.text:000002FC loc_2FC:                                ; CODE XREF: Bcj2Dec_Decode(x)+258j
.text:000002FC                 mov     eax, [ebp+var_10]
.text:000002FF                 add     eax, 1
.text:00000302                 mov     [ebp+var_10], eax
.text:00000305                 mov     ecx, [ebp+var_8]
.text:00000308                 add     ecx, 1
.text:0000030B                 mov     [ebp+var_8], ecx
.text:0000030E                 mov     edx, [ebp+var_8]
.text:00000311                 cmp     edx, [ebp+var_C]
.text:00000314                 jnz     short loc_318
.text:00000316                 jmp     short loc_33F
.text:00000318 ; ---------------------------------------------------------------------------
.text:00000318
.text:00000318 loc_318:                                ; CODE XREF: Bcj2Dec_Decode(x)+2A4j
.text:00000318                 mov     eax, [ebp+var_8]
.text:0000031B                 movzx   ecx, byte ptr [eax]
.text:0000031E                 and     ecx, 0F0h
.text:00000324                 cmp     ecx, 80h ; 'Ç'
.text:0000032A                 jz      short loc_32E
.text:0000032C                 jmp     short loc_2B1
.text:0000032E ; ---------------------------------------------------------------------------
.text:0000032E
.text:0000032E loc_32E:                                ; CODE XREF: Bcj2Dec_Decode(x)+2BAj
.text:0000032E                 mov     edx, [ebp+var_10]
.text:00000331                 mov     eax, [ebp+var_8]
.text:00000334                 mov     cl, [eax]
.text:00000336                 mov     [edx], cl
.text:00000338                 jmp     short loc_33F
.text:0000033A ; ---------------------------------------------------------------------------
.text:0000033A                 jmp     loc_2B1
.text:0000033F ; ---------------------------------------------------------------------------
.text:0000033F
.text:0000033F loc_33F:                                ; CODE XREF: Bcj2Dec_Decode(x)+23Cj
.text:0000033F                                         ; Bcj2Dec_Decode(x)+26Cj ...
.text:0000033F                 mov     edx, [ebp+arg_0]
.text:00000342                 mov     eax, [ebp+var_8]
.text:00000345                 sub     eax, [edx]
.text:00000347                 mov     [ebp+var_14], eax
.text:0000034A                 mov     ecx, [ebp+var_8]
.text:0000034D                 cmp     ecx, [ebp+var_C]
.text:00000350                 jnz     short loc_3A3
.text:00000352                 mov     edx, [ebp+arg_0]
.text:00000355                 mov     eax, [ebp+var_8]
.text:00000358                 mov     cl, [eax-1]
.text:0000035B                 mov     [edx+33h], cl
.text:0000035E                 mov     edx, [ebp+arg_0]
.text:00000361                 mov     eax, [ebp+var_8]
.text:00000364                 mov     [edx], eax
.text:00000366                 mov     ecx, [ebp+arg_0]
.text:00000369                 mov     edx, [ecx+2Ch]
.text:0000036C                 add     edx, [ebp+var_14]
.text:0000036F                 mov     eax, [ebp+arg_0]
.text:00000372                 mov     [eax+2Ch], edx
.text:00000375                 mov     ecx, [ebp+arg_0]
.text:00000378                 mov     edx, [ecx+20h]
.text:0000037B                 add     edx, [ebp+var_14]
.text:0000037E                 mov     eax, [ebp+arg_0]
.text:00000381                 mov     [eax+20h], edx
.text:00000384                 mov     ecx, [ebp+arg_0]
.text:00000387                 mov     edx, [ebp+arg_0]
.text:0000038A                 mov     eax, [ecx]
.text:0000038C                 sub     eax, [edx+10h]
.text:0000038F                 neg     eax
.text:00000391                 sbb     eax, eax
.text:00000393                 and     eax, 8
.text:00000396                 mov     ecx, [ebp+arg_0]
.text:00000399                 mov     [ecx+28h], eax
.text:0000039C                 xor     eax, eax
.text:0000039E                 jmp     loc_60D
.text:000003A3 ; ---------------------------------------------------------------------------
.text:000003A3
.text:000003A3 loc_3A3:                                ; CODE XREF: Bcj2Dec_Decode(x)+2E0j
.text:000003A3                 mov     edx, [ebp+var_8]
.text:000003A6                 mov     al, [edx]
.text:000003A8                 mov     [ebp+var_25], al
.text:000003AB                 cmp     [ebp+var_14], 0
.text:000003AF                 jnz     short loc_3BD
.text:000003B1                 mov     ecx, [ebp+arg_0]
.text:000003B4                 movzx   edx, byte ptr [ecx+33h]
.text:000003B8                 mov     [ebp+var_44], edx
.text:000003BB                 jmp     short loc_3C7
.text:000003BD ; ---------------------------------------------------------------------------
.text:000003BD
.text:000003BD loc_3BD:                                ; CODE XREF: Bcj2Dec_Decode(x)+33Fj
.text:000003BD                 mov     eax, [ebp+var_8]
.text:000003C0                 movzx   ecx, byte ptr [eax-1]
.text:000003C4                 mov     [ebp+var_44], ecx
.text:000003C7
.text:000003C7 loc_3C7:                                ; CODE XREF: Bcj2Dec_Decode(x)+34Bj
.text:000003C7                 mov     dl, byte ptr [ebp+var_44]
.text:000003CA                 mov     [ebp+var_26], dl
.text:000003CD                 mov     eax, [ebp+arg_0]
.text:000003D0                 mov     cl, [ebp+var_25]
.text:000003D3                 mov     [eax+33h], cl
.text:000003D6                 mov     edx, [ebp+var_8]
.text:000003D9                 add     edx, 1
.text:000003DC                 mov     eax, [ebp+arg_0]
.text:000003DF                 mov     [eax], edx
.text:000003E1                 mov     ecx, [ebp+var_14]
.text:000003E4                 add     ecx, 1
.text:000003E7                 mov     [ebp+var_14], ecx
.text:000003EA                 mov     edx, [ebp+arg_0]
.text:000003ED                 mov     eax, [edx+2Ch]
.text:000003F0                 add     eax, [ebp+var_14]
.text:000003F3                 mov     ecx, [ebp+arg_0]
.text:000003F6                 mov     [ecx+2Ch], eax
.text:000003F9                 mov     edx, [ebp+arg_0]
.text:000003FC                 mov     eax, [edx+20h]
.text:000003FF                 add     eax, [ebp+var_14]
.text:00000402                 mov     ecx, [ebp+arg_0]
.text:00000405                 mov     [ecx+20h], eax
.text:00000408                 movzx   edx, [ebp+var_25]
.text:0000040C                 cmp     edx, 0E8h ; 'F'
.text:00000412                 jnz     short loc_420
.text:00000414                 movzx   eax, [ebp+var_26]
.text:00000418                 add     eax, 2
.text:0000041B                 mov     [ebp+var_48], eax
.text:0000041E                 jmp     short loc_432
.text:00000420 ; ---------------------------------------------------------------------------
.text:00000420
.text:00000420 loc_420:                                ; CODE XREF: Bcj2Dec_Decode(x)+3A2j
.text:00000420                 movzx   ecx, [ebp+var_25]
.text:00000424                 xor     edx, edx
.text:00000426                 cmp     ecx, 0E9h ; 'T'
.text:0000042C                 setz    dl
.text:0000042F                 mov     [ebp+var_48], edx
.text:00000432
.text:00000432 loc_432:                                ; CODE XREF: Bcj2Dec_Decode(x)+3AEj
.text:00000432                 mov     eax, [ebp+var_48]
.text:00000435                 mov     ecx, [ebp+arg_0]
.text:00000438                 lea     edx, [ecx+eax*2+3Ch]
.text:0000043C                 mov     [ebp+var_24], edx
.text:0000043F                 mov     eax, [ebp+var_24]
.text:00000442                 movzx   ecx, word ptr [eax]
.text:00000445                 mov     [ebp+var_20], ecx
.text:00000448                 mov     edx, [ebp+arg_0]
.text:0000044B                 mov     eax, [edx+34h]
.text:0000044E                 shr     eax, 0Bh
.text:00000451                 imul    eax, [ebp+var_20]
.text:00000455                 mov     [ebp+var_1C], eax
.text:00000458                 mov     ecx, [ebp+arg_0]
.text:0000045B                 mov     edx, [ecx+38h]
.text:0000045E                 cmp     edx, [ebp+var_1C]
.text:00000461                 jnb     short loc_485
.text:00000463                 mov     eax, [ebp+arg_0]
.text:00000466                 mov     ecx, [ebp+var_1C]
.text:00000469                 mov     [eax+34h], ecx
.text:0000046C                 mov     edx, 800h
.text:00000471                 sub     edx, [ebp+var_20]
.text:00000474                 shr     edx, 5
.text:00000477                 add     edx, [ebp+var_20]
.text:0000047A                 mov     eax, [ebp+var_24]
.text:0000047D                 mov     [eax], dx
.text:00000480                 jmp     loc_198
.text:00000485 ; ---------------------------------------------------------------------------
.text:00000485
.text:00000485 loc_485:                                ; CODE XREF: Bcj2Dec_Decode(x)+3F1j
.text:00000485                 mov     ecx, [ebp+arg_0]
.text:00000488                 mov     edx, [ecx+34h]
.text:0000048B                 sub     edx, [ebp+var_1C]
.text:0000048E                 mov     eax, [ebp+arg_0]
.text:00000491                 mov     [eax+34h], edx
.text:00000494                 mov     ecx, [ebp+arg_0]
.text:00000497                 mov     edx, [ecx+38h]
.text:0000049A                 sub     edx, [ebp+var_1C]
.text:0000049D                 mov     eax, [ebp+arg_0]
.text:000004A0                 mov     [eax+38h], edx
.text:000004A3                 mov     ecx, [ebp+var_20]
.text:000004A6                 shr     ecx, 5
.text:000004A9                 mov     edx, [ebp+var_20]
.text:000004AC                 sub     edx, ecx
.text:000004AE                 mov     eax, [ebp+var_24]
.text:000004B1                 mov     [eax], dx
.text:000004B4
.text:000004B4 loc_4B4:                                ; CODE XREF: Bcj2Dec_Decode(x)+144j
.text:000004B4                 mov     ecx, [ebp+arg_0]
.text:000004B7                 movzx   edx, byte ptr [ecx+33h]
.text:000004BB                 xor     eax, eax
.text:000004BD                 cmp     edx, 0E8h ; 'F'
.text:000004C3                 setnz   al
.text:000004C6                 add     eax, 1
.text:000004C9                 mov     [ebp+var_30], eax
.text:000004CC                 mov     ecx, [ebp+var_30]
.text:000004CF                 mov     edx, [ebp+arg_0]
.text:000004D2                 mov     eax, [edx+ecx*4]
.text:000004D5                 mov     [ebp+var_34], eax
.text:000004D8                 mov     ecx, [ebp+var_30]
.text:000004DB                 mov     edx, [ebp+arg_0]
.text:000004DE                 mov     eax, [ebp+var_34]
.text:000004E1                 cmp     eax, [edx+ecx*4+10h]
.text:000004E5                 jnz     short loc_4F5
.text:000004E7                 mov     ecx, [ebp+arg_0]
.text:000004EA                 mov     edx, [ebp+var_30]
.text:000004ED                 mov     [ecx+28h], edx
.text:000004F0                 jmp     loc_5B9
.text:000004F5 ; ---------------------------------------------------------------------------
.text:000004F5
.text:000004F5 loc_4F5:                                ; CODE XREF: Bcj2Dec_Decode(x)+475j
.text:000004F5                 mov     eax, [ebp+var_34]
.text:000004F8                 mov     ecx, [eax]
.text:000004FA                 bswap   ecx
.text:000004FC                 mov     [ebp+var_2C], ecx
.text:000004FF                 mov     edx, [ebp+var_34]
.text:00000502                 add     edx, 4
.text:00000505                 mov     eax, [ebp+var_30]
.text:00000508                 mov     ecx, [ebp+arg_0]
.text:0000050B                 mov     [ecx+eax*4], edx
.text:0000050E                 mov     edx, [ebp+arg_0]
.text:00000511                 mov     eax, [edx+2Ch]
.text:00000514                 add     eax, 4
.text:00000517                 mov     ecx, [ebp+arg_0]
.text:0000051A                 mov     [ecx+2Ch], eax
.text:0000051D                 mov     edx, [ebp+arg_0]
.text:00000520                 mov     eax, [ebp+var_2C]
.text:00000523                 sub     eax, [edx+2Ch]
.text:00000526                 mov     [ebp+var_2C], eax
.text:00000529                 mov     ecx, [ebp+arg_0]
.text:0000052C                 mov     edx, [ecx+20h]
.text:0000052F                 mov     [ebp+var_38], edx
.text:00000532                 mov     eax, [ebp+arg_0]
.text:00000535                 mov     ecx, [eax+24h]
.text:00000538                 sub     ecx, [ebp+var_38]
.text:0000053B                 mov     [ebp+var_3C], ecx
.text:0000053E                 cmp     [ebp+var_3C], 4
.text:00000542                 jnb     short loc_594
.text:00000544                 mov     edx, [ebp+arg_0]
.text:00000547                 mov     eax, [ebp+var_2C]
.text:0000054A                 mov     [edx+30h], eax
.text:0000054D                 mov     [ebp+var_40], 0
.text:00000554                 jmp     short loc_55F
.text:00000556 ; ---------------------------------------------------------------------------
.text:00000556
.text:00000556 loc_556:                                ; CODE XREF: Bcj2Dec_Decode(x)+508j
.text:00000556                 mov     ecx, [ebp+var_40]
.text:00000559                 add     ecx, 1
.text:0000055C                 mov     [ebp+var_40], ecx
.text:0000055F
.text:0000055F loc_55F:                                ; CODE XREF: Bcj2Dec_Decode(x)+4E4j
.text:0000055F                 mov     edx, [ebp+var_40]
.text:00000562                 cmp     edx, [ebp+var_3C]
.text:00000565                 jnb     short loc_57A
.text:00000567                 mov     eax, [ebp+var_38]
.text:0000056A                 add     eax, [ebp+var_40]
.text:0000056D                 mov     ecx, [ebp+arg_0]
.text:00000570                 add     ecx, [ebp+var_40]
.text:00000573                 mov     dl, [ecx+30h]
.text:00000576                 mov     [eax], dl
.text:00000578                 jmp     short loc_556
.text:0000057A ; ---------------------------------------------------------------------------
.text:0000057A
.text:0000057A loc_57A:                                ; CODE XREF: Bcj2Dec_Decode(x)+4F5j
.text:0000057A                 mov     eax, [ebp+var_38]
.text:0000057D                 add     eax, [ebp+var_3C]
.text:00000580                 mov     ecx, [ebp+arg_0]
.text:00000583                 mov     [ecx+20h], eax
.text:00000586                 mov     edx, [ebp+var_3C]
.text:00000589                 add     edx, 4
.text:0000058C                 mov     eax, [ebp+arg_0]
.text:0000058F                 mov     [eax+28h], edx
.text:00000592                 jmp     short loc_5B9
.text:00000594 ; ---------------------------------------------------------------------------
.text:00000594
.text:00000594 loc_594:                                ; CODE XREF: Bcj2Dec_Decode(x)+4D2j
.text:00000594                 mov     ecx, [ebp+var_38]
.text:00000597                 mov     edx, [ebp+var_2C]
.text:0000059A                 mov     [ecx], edx
.text:0000059C                 mov     eax, [ebp+var_2C]
.text:0000059F                 shr     eax, 18h
.text:000005A2                 mov     ecx, [ebp+arg_0]
.text:000005A5                 mov     [ecx+33h], al
.text:000005A8                 mov     edx, [ebp+var_38]
.text:000005AB                 add     edx, 4
.text:000005AE                 mov     eax, [ebp+arg_0]
.text:000005B1                 mov     [eax+20h], edx
.text:000005B4                 jmp     loc_198
.text:000005B9 ; ---------------------------------------------------------------------------
.text:000005B9
.text:000005B9 loc_5B9:                                ; CODE XREF: Bcj2Dec_Decode(x)+480j
.text:000005B9                                         ; Bcj2Dec_Decode(x)+522j
.text:000005B9                 mov     ecx, [ebp+arg_0]
.text:000005BC                 cmp     dword ptr [ecx+34h], 1000000h
.text:000005C3                 jnb     short loc_60B
.text:000005C5                 mov     edx, [ebp+arg_0]
.text:000005C8                 mov     eax, [ebp+arg_0]
.text:000005CB                 mov     ecx, [edx+0Ch]
.text:000005CE                 cmp     ecx, [eax+1Ch]
.text:000005D1                 jz      short loc_60B
.text:000005D3                 mov     edx, [ebp+arg_0]
.text:000005D6                 mov     eax, [edx+34h]
.text:000005D9                 shl     eax, 8
.text:000005DC                 mov     ecx, [ebp+arg_0]
.text:000005DF                 mov     [ecx+34h], eax
.text:000005E2                 mov     edx, [ebp+arg_0]
.text:000005E5                 mov     eax, [edx+38h]
.text:000005E8                 shl     eax, 8
.text:000005EB                 mov     ecx, [ebp+arg_0]
.text:000005EE                 mov     edx, [ecx+0Ch]
.text:000005F1                 movzx   ecx, byte ptr [edx]
.text:000005F4                 or      eax, ecx
.text:000005F6                 mov     edx, [ebp+arg_0]
.text:000005F9                 mov     [edx+38h], eax
.text:000005FC                 mov     eax, [ebp+arg_0]
.text:000005FF                 mov     ecx, [eax+0Ch]
.text:00000602                 add     ecx, 1
.text:00000605                 mov     edx, [ebp+arg_0]
.text:00000608                 mov     [edx+0Ch], ecx
.text:0000060B
.text:0000060B loc_60B:                                ; CODE XREF: Bcj2Dec_Decode(x)+553j
.text:0000060B                                         ; Bcj2Dec_Decode(x)+561j
.text:0000060B                 xor     eax, eax
.text:0000060D
.text:0000060D loc_60D:                                ; CODE XREF: Bcj2Dec_Decode(x)+5Ej
.text:0000060D                                         ; Bcj2Dec_Decode(x)+7Dj ...
.text:0000060D                 pop     edi
.text:0000060E                 mov     esp, ebp
.text:00000610                 pop     ebp
.text:00000611                 retn    4
.text:00000611 _Bcj2Dec_Decode@4 endp
.text:00000611
.text:00000611 _text           ends
.text:00000611
.rtc$TMZ:00000614 ; ===========================================================================
.rtc$TMZ:00000614
.rtc$TMZ:00000614 ; Segment type: Pure data
.rtc$TMZ:00000614 ; Segment permissions: Read
.rtc$TMZ:00000614 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00000614                 assume cs:_rtc$TMZ
.rtc$TMZ:00000614                 ;org 614h
.rtc$TMZ:00000614 ; COMDAT (pick any)
.rtc$TMZ:00000614 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00000614 _rtc$TMZ        ends
.rtc$TMZ:00000614
.rtc$IMZ:00000618 ; ===========================================================================
.rtc$IMZ:00000618
.rtc$IMZ:00000618 ; Segment type: Pure data
.rtc$IMZ:00000618 ; Segment permissions: Read
.rtc$IMZ:00000618 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00000618                 assume cs:_rtc$IMZ
.rtc$IMZ:00000618                 ;org 618h
.rtc$IMZ:00000618 ; COMDAT (pick any)
.rtc$IMZ:00000618 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00000618 _rtc$IMZ        ends
.rtc$IMZ:00000618
UNDEF:00000620 ; ===========================================================================
UNDEF:00000620
UNDEF:00000620 ; Segment type: Externs
UNDEF:00000620 ; UNDEF
UNDEF:00000620                 extrn __RTC_Shutdown:near
UNDEF:00000620                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00000624                 extrn __RTC_InitBase:near
UNDEF:00000624                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:00000624
UNDEF:00000624
UNDEF:00000624                 end
.text:00000000 ;
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.text:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.text:00000000 ; |                      License info: 48-3677-7074-51                      |
.text:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ;
.text:00000000 ; Input MD5   : B13AB9191806B802233F4D1274D3104C
.text:00000000 ; Input CRC32 : 4EF37CD8
.text:00000000
.text:00000000 ; File Name   : C:\workspace\7z1505-src\CPP\7zip\Bundles\Alone\Debug\Ppmd7Dec.obj
.text:00000000 ; Format      : COFF (X386MAGIC)
.text:00000000 ; includelib "MSVCRTD"
.text:00000000 ; includelib "OLDNAMES"
.text:00000000
.text:00000000                 .686p
.text:00000000                 .mmx
.text:00000000                 .model flat
.text:00000000
.text:00000000 ; ===========================================================================
.text:00000000
.text:00000000 ; Segment type: Pure code
.text:00000000 ; Segment permissions: Read/Execute
.text:00000000 _text           segment para public 'CODE' use32
.text:00000000                 assume cs:_text
.text:00000000                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:00000000
.text:00000000 ; =============== S U B R O U T I N E =======================================
.text:00000000
.text:00000000 ; Attributes: bp-based frame
.text:00000000
.text:00000000 ; __stdcall Ppmd7z_RangeDec_Init(x)
.text:00000000                 public _Ppmd7z_RangeDec_Init@4
.text:00000000 _Ppmd7z_RangeDec_Init@4 proc near
.text:00000000
.text:00000000 var_4           = dword ptr -4
.text:00000000 arg_0           = dword ptr  8
.text:00000000
.text:00000000                 push    ebp
.text:00000001                 mov     ebp, esp
.text:00000003                 push    ecx
.text:00000004                 push    esi
.text:00000005                 push    edi
.text:00000006                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000000D                 mov     eax, [ebp+arg_0]
.text:00000010                 mov     dword ptr [eax+10h], 0
.text:00000017                 mov     ecx, [ebp+arg_0]
.text:0000001A                 mov     dword ptr [ecx+0Ch], 0FFFFFFFFh
.text:00000021                 mov     esi, esp
.text:00000023                 mov     edx, [ebp+arg_0]
.text:00000026                 mov     eax, [edx+14h]
.text:00000029                 push    eax
.text:0000002A                 mov     ecx, [ebp+arg_0]
.text:0000002D                 mov     edx, [ecx+14h]
.text:00000030                 mov     eax, [edx]
.text:00000032                 call    eax
.text:00000034                 cmp     esi, esp
.text:00000036                 call    __RTC_CheckEsp
.text:0000003B                 movzx   ecx, al
.text:0000003E                 test    ecx, ecx
.text:00000040                 jz      short loc_46
.text:00000042                 xor     eax, eax
.text:00000044                 jmp     short loc_99
.text:00000046 ; ---------------------------------------------------------------------------
.text:00000046
.text:00000046 loc_46:                                 ; CODE XREF: Ppmd7z_RangeDec_Init(x)+40j
.text:00000046                 mov     [ebp+var_4], 0
.text:0000004D                 jmp     short loc_58
.text:0000004F ; ---------------------------------------------------------------------------
.text:0000004F
.text:0000004F loc_4F:                                 ; CODE XREF: Ppmd7z_RangeDec_Init(x)+8Cj
.text:0000004F                 mov     edx, [ebp+var_4]
.text:00000052                 add     edx, 1
.text:00000055                 mov     [ebp+var_4], edx
.text:00000058
.text:00000058 loc_58:                                 ; CODE XREF: Ppmd7z_RangeDec_Init(x)+4Dj
.text:00000058                 cmp     [ebp+var_4], 4
.text:0000005C                 jnb     short loc_8E
.text:0000005E                 mov     eax, [ebp+arg_0]
.text:00000061                 mov     esi, [eax+10h]
.text:00000064                 shl     esi, 8
.text:00000067                 mov     edi, esp
.text:00000069                 mov     ecx, [ebp+arg_0]
.text:0000006C                 mov     edx, [ecx+14h]
.text:0000006F                 push    edx
.text:00000070                 mov     eax, [ebp+arg_0]
.text:00000073                 mov     ecx, [eax+14h]
.text:00000076                 mov     edx, [ecx]
.text:00000078                 call    edx
.text:0000007A                 cmp     edi, esp
.text:0000007C                 call    __RTC_CheckEsp
.text:00000081                 movzx   eax, al
.text:00000084                 or      esi, eax
.text:00000086                 mov     ecx, [ebp+arg_0]
.text:00000089                 mov     [ecx+10h], esi
.text:0000008C                 jmp     short loc_4F
.text:0000008E ; ---------------------------------------------------------------------------
.text:0000008E
.text:0000008E loc_8E:                                 ; CODE XREF: Ppmd7z_RangeDec_Init(x)+5Cj
.text:0000008E                 mov     edx, [ebp+arg_0]
.text:00000091                 cmp     dword ptr [edx+10h], 0FFFFFFFFh
.text:00000095                 sbb     eax, eax
.text:00000097                 neg     eax
.text:00000099
.text:00000099 loc_99:                                 ; CODE XREF: Ppmd7z_RangeDec_Init(x)+44j
.text:00000099                 pop     edi
.text:0000009A                 pop     esi
.text:0000009B                 add     esp, 4
.text:0000009E                 cmp     ebp, esp
.text:000000A0                 call    __RTC_CheckEsp
.text:000000A5                 mov     esp, ebp
.text:000000A7                 pop     ebp
.text:000000A8                 retn    4
.text:000000A8 _Ppmd7z_RangeDec_Init@4 endp
.text:000000A8
.text:000000A8 ; ---------------------------------------------------------------------------
.text:000000AB                 align 10h
.text:000000B0
.text:000000B0 ; =============== S U B R O U T I N E =======================================
.text:000000B0
.text:000000B0 ; Attributes: bp-based frame
.text:000000B0
.text:000000B0 ; __stdcall Ppmd7z_RangeDec_CreateVTable(x)
.text:000000B0                 public _Ppmd7z_RangeDec_CreateVTable@4
.text:000000B0 _Ppmd7z_RangeDec_CreateVTable@4 proc near
.text:000000B0
.text:000000B0 arg_0           = dword ptr  8
.text:000000B0
.text:000000B0                 push    ebp
.text:000000B1                 mov     ebp, esp
.text:000000B3                 mov     eax, [ebp+arg_0]
.text:000000B6                 mov     dword ptr [eax], offset _Range_GetThreshold@8 ; Range_GetThreshold(x,x)
.text:000000BC                 mov     ecx, [ebp+arg_0]
.text:000000BF                 mov     dword ptr [ecx+4], offset _Range_Decode@12 ; Range_Decode(x,x,x)
.text:000000C6                 mov     edx, [ebp+arg_0]
.text:000000C9                 mov     dword ptr [edx+8], offset _Range_DecodeBit@8 ; Range_DecodeBit(x,x)
.text:000000D0                 pop     ebp
.text:000000D1                 retn    4
.text:000000D1 _Ppmd7z_RangeDec_CreateVTable@4 endp
.text:000000D1
.text:000000D1 ; ---------------------------------------------------------------------------
.text:000000D4                 align 10h
.text:000000E0
.text:000000E0 ; =============== S U B R O U T I N E =======================================
.text:000000E0
.text:000000E0 ; Attributes: bp-based frame
.text:000000E0
.text:000000E0 ; __stdcall Range_GetThreshold(x, x)
.text:000000E0 _Range_GetThreshold@8 proc near         ; DATA XREF: Ppmd7z_RangeDec_CreateVTable(x)+6o
.text:000000E0
.text:000000E0 var_8           = dword ptr -8
.text:000000E0 var_4           = dword ptr -4
.text:000000E0 arg_0           = dword ptr  8
.text:000000E0 arg_4           = dword ptr  0Ch
.text:000000E0
.text:000000E0                 push    ebp
.text:000000E1                 mov     ebp, esp
.text:000000E3                 sub     esp, 8
.text:000000E6                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000000ED                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000000F4                 mov     eax, [ebp+arg_0]
.text:000000F7                 mov     [ebp+var_4], eax
.text:000000FA                 mov     ecx, [ebp+var_4]
.text:000000FD                 mov     eax, [ecx+0Ch]
.text:00000100                 xor     edx, edx
.text:00000102                 div     [ebp+arg_4]
.text:00000105                 mov     [ebp+var_8], eax
.text:00000108                 mov     edx, [ebp+var_4]
.text:0000010B                 mov     eax, [ebp+var_8]
.text:0000010E                 mov     [edx+0Ch], eax
.text:00000111                 mov     ecx, [ebp+var_4]
.text:00000114                 mov     eax, [ecx+10h]
.text:00000117                 xor     edx, edx
.text:00000119                 div     [ebp+var_8]
.text:0000011C                 mov     esp, ebp
.text:0000011E                 pop     ebp
.text:0000011F                 retn    8
.text:0000011F _Range_GetThreshold@8 endp
.text:0000011F
.text:0000011F ; ---------------------------------------------------------------------------
.text:00000122                 align 10h
.text:00000130
.text:00000130 ; =============== S U B R O U T I N E =======================================
.text:00000130
.text:00000130 ; Attributes: bp-based frame
.text:00000130
.text:00000130 ; __stdcall Range_Decode(x, x, x)
.text:00000130 _Range_Decode@12 proc near              ; DATA XREF: Ppmd7z_RangeDec_CreateVTable(x)+Fo
.text:00000130
.text:00000130 var_4           = dword ptr -4
.text:00000130 arg_0           = dword ptr  8
.text:00000130 arg_4           = dword ptr  0Ch
.text:00000130 arg_8           = dword ptr  10h
.text:00000130
.text:00000130                 push    ebp
.text:00000131                 mov     ebp, esp
.text:00000133                 push    ecx
.text:00000134                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000013B                 mov     eax, [ebp+arg_0]
.text:0000013E                 mov     [ebp+var_4], eax
.text:00000141                 mov     ecx, [ebp+var_4]
.text:00000144                 mov     edx, [ebp+arg_4]
.text:00000147                 imul    edx, [ecx+0Ch]
.text:0000014B                 mov     eax, [ebp+var_4]
.text:0000014E                 mov     ecx, [eax+10h]
.text:00000151                 sub     ecx, edx
.text:00000153                 mov     edx, [ebp+var_4]
.text:00000156                 mov     [edx+10h], ecx
.text:00000159                 mov     eax, [ebp+var_4]
.text:0000015C                 mov     ecx, [eax+0Ch]
.text:0000015F                 imul    ecx, [ebp+arg_8]
.text:00000163                 mov     edx, [ebp+var_4]
.text:00000166                 mov     [edx+0Ch], ecx
.text:00000169                 mov     eax, [ebp+var_4]
.text:0000016C                 push    eax
.text:0000016D                 call    _Range_Normalize@4 ; Range_Normalize(x)
.text:00000172                 add     esp, 4
.text:00000175                 cmp     ebp, esp
.text:00000177                 call    __RTC_CheckEsp
.text:0000017C                 mov     esp, ebp
.text:0000017E                 pop     ebp
.text:0000017F                 retn    0Ch
.text:0000017F _Range_Decode@12 endp
.text:0000017F
.text:0000017F ; ---------------------------------------------------------------------------
.text:00000182                 align 10h
.text:00000190
.text:00000190 ; =============== S U B R O U T I N E =======================================
.text:00000190
.text:00000190 ; Attributes: bp-based frame
.text:00000190
.text:00000190 ; __stdcall Range_Normalize(x)
.text:00000190 _Range_Normalize@4 proc near            ; CODE XREF: Range_Decode(x,x,x)+3Dp
.text:00000190                                         ; Range_DecodeBit(x,x)+77p
.text:00000190
.text:00000190 arg_0           = dword ptr  8
.text:00000190
.text:00000190                 push    ebp
.text:00000191                 mov     ebp, esp
.text:00000193                 push    esi
.text:00000194                 push    edi
.text:00000195                 mov     eax, [ebp+arg_0]
.text:00000198                 cmp     dword ptr [eax+0Ch], 1000000h
.text:0000019F                 jnb     loc_22B
.text:000001A5                 mov     ecx, [ebp+arg_0]
.text:000001A8                 mov     esi, [ecx+10h]
.text:000001AB                 shl     esi, 8
.text:000001AE                 mov     edi, esp
.text:000001B0                 mov     edx, [ebp+arg_0]
.text:000001B3                 mov     eax, [edx+14h]
.text:000001B6                 push    eax
.text:000001B7                 mov     ecx, [ebp+arg_0]
.text:000001BA                 mov     edx, [ecx+14h]
.text:000001BD                 mov     eax, [edx]
.text:000001BF                 call    eax
.text:000001C1                 cmp     edi, esp
.text:000001C3                 call    __RTC_CheckEsp
.text:000001C8                 movzx   ecx, al
.text:000001CB                 or      esi, ecx
.text:000001CD                 mov     edx, [ebp+arg_0]
.text:000001D0                 mov     [edx+10h], esi
.text:000001D3                 mov     eax, [ebp+arg_0]
.text:000001D6                 mov     ecx, [eax+0Ch]
.text:000001D9                 shl     ecx, 8
.text:000001DC                 mov     edx, [ebp+arg_0]
.text:000001DF                 mov     [edx+0Ch], ecx
.text:000001E2                 mov     eax, [ebp+arg_0]
.text:000001E5                 cmp     dword ptr [eax+0Ch], 1000000h
.text:000001EC                 jnb     short loc_22B
.text:000001EE                 mov     ecx, [ebp+arg_0]
.text:000001F1                 mov     esi, [ecx+10h]
.text:000001F4                 shl     esi, 8
.text:000001F7                 mov     edi, esp
.text:000001F9                 mov     edx, [ebp+arg_0]
.text:000001FC                 mov     eax, [edx+14h]
.text:000001FF                 push    eax
.text:00000200                 mov     ecx, [ebp+arg_0]
.text:00000203                 mov     edx, [ecx+14h]
.text:00000206                 mov     eax, [edx]
.text:00000208                 call    eax
.text:0000020A                 cmp     edi, esp
.text:0000020C                 call    __RTC_CheckEsp
.text:00000211                 movzx   ecx, al
.text:00000214                 or      esi, ecx
.text:00000216                 mov     edx, [ebp+arg_0]
.text:00000219                 mov     [edx+10h], esi
.text:0000021C                 mov     eax, [ebp+arg_0]
.text:0000021F                 mov     ecx, [eax+0Ch]
.text:00000222                 shl     ecx, 8
.text:00000225                 mov     edx, [ebp+arg_0]
.text:00000228                 mov     [edx+0Ch], ecx
.text:0000022B
.text:0000022B loc_22B:                                ; CODE XREF: Range_Normalize(x)+Fj
.text:0000022B                                         ; Range_Normalize(x)+5Cj
.text:0000022B                 pop     edi
.text:0000022C                 pop     esi
.text:0000022D                 cmp     ebp, esp
.text:0000022F                 call    __RTC_CheckEsp
.text:00000234                 pop     ebp
.text:00000235                 retn    4
.text:00000235 _Range_Normalize@4 endp
.text:00000235
.text:00000235 ; ---------------------------------------------------------------------------
.text:00000238                 align 10h
.text:00000240
.text:00000240 ; =============== S U B R O U T I N E =======================================
.text:00000240
.text:00000240 ; Attributes: bp-based frame
.text:00000240
.text:00000240 ; __stdcall Range_DecodeBit(x, x)
.text:00000240 _Range_DecodeBit@8 proc near            ; DATA XREF: Ppmd7z_RangeDec_CreateVTable(x)+19o
.text:00000240
.text:00000240 var_C           = dword ptr -0Ch
.text:00000240 var_8           = dword ptr -8
.text:00000240 var_4           = dword ptr -4
.text:00000240 arg_0           = dword ptr  8
.text:00000240 arg_4           = dword ptr  0Ch
.text:00000240
.text:00000240                 push    ebp
.text:00000241                 mov     ebp, esp
.text:00000243                 sub     esp, 0Ch
.text:00000246                 mov     [ebp+var_C], 0CCCCCCCCh
.text:0000024D                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00000254                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000025B                 mov     eax, [ebp+arg_0]
.text:0000025E                 mov     [ebp+var_4], eax
.text:00000261                 mov     ecx, [ebp+var_4]
.text:00000264                 mov     edx, [ecx+0Ch]
.text:00000267                 shr     edx, 0Eh
.text:0000026A                 imul    edx, [ebp+arg_4]
.text:0000026E                 mov     [ebp+var_8], edx
.text:00000271                 mov     eax, [ebp+var_4]
.text:00000274                 mov     ecx, [eax+10h]
.text:00000277                 cmp     ecx, [ebp+var_8]
.text:0000027A                 jnb     short loc_28E
.text:0000027C                 mov     [ebp+var_C], 0
.text:00000283                 mov     edx, [ebp+var_4]
.text:00000286                 mov     eax, [ebp+var_8]
.text:00000289                 mov     [edx+0Ch], eax
.text:0000028C                 jmp     short loc_2B3
.text:0000028E ; ---------------------------------------------------------------------------
.text:0000028E
.text:0000028E loc_28E:                                ; CODE XREF: Range_DecodeBit(x,x)+3Aj
.text:0000028E                 mov     [ebp+var_C], 1
.text:00000295                 mov     ecx, [ebp+var_4]
.text:00000298                 mov     edx, [ecx+10h]
.text:0000029B                 sub     edx, [ebp+var_8]
.text:0000029E                 mov     eax, [ebp+var_4]
.text:000002A1                 mov     [eax+10h], edx
.text:000002A4                 mov     ecx, [ebp+var_4]
.text:000002A7                 mov     edx, [ecx+0Ch]
.text:000002AA                 sub     edx, [ebp+var_8]
.text:000002AD                 mov     eax, [ebp+var_4]
.text:000002B0                 mov     [eax+0Ch], edx
.text:000002B3
.text:000002B3 loc_2B3:                                ; CODE XREF: Range_DecodeBit(x,x)+4Cj
.text:000002B3                 mov     ecx, [ebp+var_4]
.text:000002B6                 push    ecx
.text:000002B7                 call    _Range_Normalize@4 ; Range_Normalize(x)
.text:000002BC                 mov     eax, [ebp+var_C]
.text:000002BF                 add     esp, 0Ch
.text:000002C2                 cmp     ebp, esp
.text:000002C4                 call    __RTC_CheckEsp
.text:000002C9                 mov     esp, ebp
.text:000002CB                 pop     ebp
.text:000002CC                 retn    8
.text:000002CC _Range_DecodeBit@8 endp
.text:000002CC
.text:000002CC ; ---------------------------------------------------------------------------
.text:000002CF                 align 10h
.text:000002D0
.text:000002D0 ; =============== S U B R O U T I N E =======================================
.text:000002D0
.text:000002D0 ; Attributes: bp-based frame
.text:000002D0
.text:000002D0 ; __stdcall Ppmd7_DecodeSymbol(x, x)
.text:000002D0                 public _Ppmd7_DecodeSymbol@8
.text:000002D0 _Ppmd7_DecodeSymbol@8 proc near
.text:000002D0
.text:000002D0 var_578         = byte ptr -578h
.text:000002D0 var_575         = byte ptr -575h
.text:000002D0 var_574         = dword ptr -574h
.text:000002D0 var_570         = dword ptr -570h
.text:000002D0 var_56C         = dword ptr -56Ch
.text:000002D0 var_565         = byte ptr -565h
.text:000002D0 var_564         = dword ptr -564h
.text:000002D0 var_560         = dword ptr -560h
.text:000002D0 var_55C         = dword ptr -55Ch
.text:000002D0 var_558         = dword ptr -558h
.text:000002D0 var_554         = dword ptr -554h
.text:000002D0 var_550         = dword ptr -550h
.text:000002D0 var_54C         = dword ptr -54Ch
.text:000002D0 var_544         = dword ptr -544h
.text:000002D0 var_53C         = dword ptr -53Ch
.text:000002D0 var_534         = dword ptr -534h
.text:000002D0 var_130         = dword ptr -130h
.text:000002D0 var_129         = byte ptr -129h
.text:000002D0 var_128         = dword ptr -128h
.text:000002D0 var_124         = dword ptr -124h
.text:000002D0 var_11E         = byte ptr -11Eh
.text:000002D0 var_11D         = byte ptr -11Dh
.text:000002D0 var_11C         = dword ptr -11Ch
.text:000002D0 var_118         = dword ptr -118h
.text:000002D0 var_114         = dword ptr -114h
.text:000002D0 var_110         = dword ptr -110h
.text:000002D0 var_108         = dword ptr -108h
.text:000002D0 var_104         = dword ptr -104h
.text:000002D0 var_100         = dword ptr -100h
.text:000002D0 var_FC          = dword ptr -0FCh
.text:000002D0 var_F8          = dword ptr -0F8h
.text:000002D0 var_F4          = dword ptr -0F4h
.text:000002D0 var_F0          = dword ptr -0F0h
.text:000002D0 var_EC          = dword ptr -0ECh
.text:000002D0 var_4           = dword ptr -4
.text:000002D0 arg_0           = dword ptr  8
.text:000002D0 arg_4           = dword ptr  0Ch
.text:000002D0
.text:000002D0                 push    ebp
.text:000002D1                 mov     ebp, esp
.text:000002D3                 sub     esp, 578h
.text:000002D9                 push    esi
.text:000002DA                 push    edi
.text:000002DB                 lea     edi, [ebp+var_578]
.text:000002E1                 mov     ecx, 15Eh
.text:000002E6                 mov     eax, 0CCCCCCCCh
.text:000002EB                 rep stosd
.text:000002ED                 mov     eax, dword ptr ds:___security_cookie
.text:000002F2                 xor     eax, ebp
.text:000002F4                 mov     [ebp+var_4], eax
.text:000002F7                 mov     eax, [ebp+arg_0]
.text:000002FA                 mov     ecx, [eax]
.text:000002FC                 movzx   edx, word ptr [ecx]
.text:000002FF                 cmp     edx, 1
.text:00000302                 jz      loc_5DC
.text:00000308                 mov     eax, [ebp+arg_0]
.text:0000030B                 mov     ecx, [eax]
.text:0000030D                 mov     edx, [ecx+4]
.text:00000310                 mov     [ebp+var_110], edx
.text:00000316                 mov     eax, [ebp+arg_0]
.text:00000319                 mov     ecx, [eax]
.text:0000031B                 movzx   edx, word ptr [ecx+2]
.text:0000031F                 mov     esi, esp
.text:00000321                 push    edx
.text:00000322                 mov     eax, [ebp+arg_4]
.text:00000325                 push    eax
.text:00000326                 mov     ecx, [ebp+arg_4]
.text:00000329                 mov     edx, [ecx]
.text:0000032B                 call    edx
.text:0000032D                 cmp     esi, esp
.text:0000032F                 call    __RTC_CheckEsp
.text:00000334                 mov     [ebp+var_118], eax
.text:0000033A                 mov     eax, [ebp+var_110]
.text:00000340                 movzx   ecx, byte ptr [eax+1]
.text:00000344                 mov     [ebp+var_11C], ecx
.text:0000034A                 mov     edx, [ebp+var_118]
.text:00000350                 cmp     edx, [ebp+var_11C]
.text:00000356                 jnb     short loc_3A9
.text:00000358                 mov     eax, [ebp+var_110]
.text:0000035E                 movzx   ecx, byte ptr [eax+1]
.text:00000362                 mov     esi, esp
.text:00000364                 push    ecx
.text:00000365                 push    0
.text:00000367                 mov     edx, [ebp+arg_4]
.text:0000036A                 push    edx
.text:0000036B                 mov     eax, [ebp+arg_4]
.text:0000036E                 mov     ecx, [eax+4]
.text:00000371                 call    ecx
.text:00000373                 cmp     esi, esp
.text:00000375                 call    __RTC_CheckEsp
.text:0000037A                 mov     edx, [ebp+arg_0]
.text:0000037D                 mov     eax, [ebp+var_110]
.text:00000383                 mov     [edx+8], eax
.text:00000386                 mov     ecx, [ebp+var_110]
.text:0000038C                 mov     dl, [ecx]
.text:0000038E                 mov     [ebp+var_11D], dl
.text:00000394                 mov     eax, [ebp+arg_0]
.text:00000397                 push    eax
.text:00000398                 call    _Ppmd7_Update1_0@4 ; Ppmd7_Update1_0(x)
.text:0000039D                 movzx   eax, [ebp+var_11D]
.text:000003A4                 jmp     loc_B23
.text:000003A9 ; ---------------------------------------------------------------------------
.text:000003A9
.text:000003A9 loc_3A9:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+86j
.text:000003A9                 mov     ecx, [ebp+arg_0]
.text:000003AC                 mov     dword ptr [ecx+14h], 0
.text:000003B3                 mov     edx, [ebp+arg_0]
.text:000003B6                 mov     eax, [edx]
.text:000003B8                 movzx   ecx, word ptr [eax]
.text:000003BB                 sub     ecx, 1
.text:000003BE                 mov     [ebp+var_114], ecx
.text:000003C4
.text:000003C4 loc_3C4:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+198j
.text:000003C4                 mov     edx, [ebp+var_110]
.text:000003CA                 add     edx, 6
.text:000003CD                 mov     [ebp+var_110], edx
.text:000003D3                 mov     eax, [ebp+var_110]
.text:000003D9                 movzx   ecx, byte ptr [eax+1]
.text:000003DD                 add     ecx, [ebp+var_11C]
.text:000003E3                 mov     [ebp+var_11C], ecx
.text:000003E9                 mov     edx, [ebp+var_11C]
.text:000003EF                 cmp     edx, [ebp+var_118]
.text:000003F5                 jbe     short loc_459
.text:000003F7                 mov     eax, [ebp+var_110]
.text:000003FD
.text:000003FD loc_3FD:                                ; DATA XREF: .text:00000B6Co
.text:000003FD                 movzx   ecx, byte ptr [eax+1]
.text:00000401                 mov     esi, esp
.text:00000403                 push    ecx
.text:00000404                 mov     edx, [ebp+var_110]
.text:0000040A                 movzx   eax, byte ptr [edx+1]
.text:0000040E                 mov     ecx, [ebp+var_11C]
.text:00000414                 sub     ecx, eax
.text:00000416                 push    ecx
.text:00000417                 mov     edx, [ebp+arg_4]
.text:0000041A                 push    edx
.text:0000041B                 mov     eax, [ebp+arg_4]
.text:0000041E                 mov     ecx, [eax+4]
.text:00000421                 call    ecx
.text:00000423                 cmp     esi, esp
.text:00000425                 call    __RTC_CheckEsp
.text:0000042A                 mov     edx, [ebp+arg_0]
.text:0000042D                 mov     eax, [ebp+var_110]
.text:00000433                 mov     [edx+8], eax
.text:00000436                 mov     ecx, [ebp+var_110]
.text:0000043C                 mov     dl, [ecx]
.text:0000043E                 mov     [ebp+var_11E], dl
.text:00000444                 mov     eax, [ebp+arg_0]
.text:00000447                 push    eax
.text:00000448                 call    _Ppmd7_Update1@4 ; Ppmd7_Update1(x)
.text:0000044D                 movzx   eax, [ebp+var_11E]
.text:00000454                 jmp     loc_B23
.text:00000459 ; ---------------------------------------------------------------------------
.text:00000459
.text:00000459 loc_459:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+125j
.text:00000459                 mov     ecx, [ebp+var_114]
.text:0000045F                 sub     ecx, 1
.text:00000462                 mov     [ebp+var_114], ecx
.text:00000468                 jnz     loc_3C4
.text:0000046E                 mov     edx, [ebp+arg_0]
.text:00000471                 mov     eax, [edx]
.text:00000473                 movzx   ecx, word ptr [eax+2]
.text:00000477                 cmp     [ebp+var_118], ecx
.text:0000047D                 jb      short loc_489
.text:0000047F                 mov     eax, 0FFFFFFFEh
.text:00000484                 jmp     loc_B23
.text:00000489 ; ---------------------------------------------------------------------------
.text:00000489
.text:00000489 loc_489:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+1ADj
.text:00000489                 mov     edx, [ebp+arg_0]
.text:0000048C                 mov     eax, [edx+8]
.text:0000048F                 movzx   ecx, byte ptr [eax]
.text:00000492                 mov     edx, [ebp+arg_0]
.text:00000495                 movzx   eax, byte ptr [edx+ecx+388h]
.text:0000049D                 mov     ecx, [ebp+arg_0]
.text:000004A0                 mov     [ecx+1Ch], eax
.text:000004A3                 mov     edx, [ebp+arg_0]
.text:000004A6                 mov     eax, [edx]
.text:000004A8                 movzx   ecx, word ptr [eax+2]
.text:000004AC                 sub     ecx, [ebp+var_11C]
.text:000004B2                 mov     esi, esp
.text:000004B4                 push    ecx
.text:000004B5                 mov     edx, [ebp+var_11C]
.text:000004BB                 push    edx
.text:000004BC                 mov     eax, [ebp+arg_4]
.text:000004BF                 push    eax
.text:000004C0                 mov     ecx, [ebp+arg_4]
.text:000004C3                 mov     edx, [ecx+4]
.text:000004C6                 call    edx
.text:000004C8                 cmp     esi, esp
.text:000004CA                 call    __RTC_CheckEsp
.text:000004CF                 mov     [ebp+var_124], 0
.text:000004D9                 jmp     short loc_4EA
.text:000004DB ; ---------------------------------------------------------------------------
.text:000004DB
.text:000004DB loc_4DB:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+2AFj
.text:000004DB                 mov     eax, [ebp+var_124]
.text:000004E1                 add     eax, 8
.text:000004E4                 mov     [ebp+var_124], eax
.text:000004EA
.text:000004EA loc_4EA:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+209j
.text:000004EA                 cmp     [ebp+var_124], 40h ; '@'
.text:000004F1                 jnb     loc_584
.text:000004F7                 mov     ecx, [ebp+var_124]
.text:000004FD                 mov     [ebp+ecx*4+var_108], 0FFFFFFFFh
.text:00000508                 mov     edx, [ebp+var_124]
.text:0000050E                 mov     [ebp+edx*4+var_104], 0FFFFFFFFh
.text:00000519                 mov     eax, [ebp+var_124]
.text:0000051F                 mov     [ebp+eax*4+var_100], 0FFFFFFFFh
.text:0000052A                 mov     ecx, [ebp+var_124]
.text:00000530                 mov     [ebp+ecx*4+var_FC], 0FFFFFFFFh
.text:0000053B                 mov     edx, [ebp+var_124]
.text:00000541                 mov     [ebp+edx*4+var_F8], 0FFFFFFFFh
.text:0000054C                 mov     eax, [ebp+var_124]
.text:00000552                 mov     [ebp+eax*4+var_F4], 0FFFFFFFFh
.text:0000055D                 mov     ecx, [ebp+var_124]
.text:00000563                 mov     [ebp+ecx*4+var_F0], 0FFFFFFFFh
.text:0000056E                 mov     edx, [ebp+var_124]
.text:00000574                 mov     [ebp+edx*4+var_EC], 0FFFFFFFFh
.text:0000057F                 jmp     loc_4DB
.text:00000584 ; ---------------------------------------------------------------------------
.text:00000584
.text:00000584 loc_584:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+221j
.text:00000584                 mov     eax, [ebp+var_110]
.text:0000058A                 movzx   ecx, byte ptr [eax]
.text:0000058D                 mov     byte ptr [ebp+ecx+var_108], 0
.text:00000595                 mov     edx, [ebp+arg_0]
.text:00000598                 mov     eax, [edx]
.text:0000059A                 movzx   ecx, word ptr [eax]
.text:0000059D                 sub     ecx, 1
.text:000005A0                 mov     [ebp+var_114], ecx
.text:000005A6
.text:000005A6 loc_5A6:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+305j
.text:000005A6                 mov     edx, [ebp+var_110]
.text:000005AC                 sub     edx, 6
.text:000005AF                 mov     [ebp+var_110], edx
.text:000005B5                 mov     eax, [ebp+var_110]
.text:000005BB                 movzx   ecx, byte ptr [eax]
.text:000005BE                 mov     byte ptr [ebp+ecx+var_108], 0
.text:000005C6                 mov     edx, [ebp+var_114]
.text:000005CC                 sub     edx, 1
.text:000005CF                 mov     [ebp+var_114], edx
.text:000005D5                 jnz     short loc_5A6
.text:000005D7                 jmp     loc_801
.text:000005DC ; ---------------------------------------------------------------------------
.text:000005DC
.text:000005DC loc_5DC:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+32j
.text:000005DC                 mov     eax, [ebp+arg_0]
.text:000005DF                 mov     ecx, [eax+8]
.text:000005E2                 movzx   edx, byte ptr [ecx]
.text:000005E5                 mov     eax, [ebp+arg_0]
.text:000005E8                 movzx   ecx, byte ptr [eax+edx+388h]
.text:000005F0                 mov     [ebp+var_570], ecx
.text:000005F6                 mov     edx, [ebp+arg_0]
.text:000005F9                 mov     eax, [ebp+var_570]
.text:000005FF                 mov     [edx+1Ch], eax
.text:00000602                 mov     ecx, [ebp+arg_0]
.text:00000605                 mov     edx, [ecx+20h]
.text:00000608                 sar     edx, 1Ah
.text:0000060B                 and     edx, 20h
.text:0000060E                 mov     eax, [ebp+arg_0]
.text:00000611                 mov     ecx, [eax]
.text:00000613                 movzx   eax, byte ptr [ecx+2]
.text:00000617                 mov     ecx, [ebp+arg_0]
.text:0000061A                 movzx   eax, byte ptr [ecx+eax+388h]
.text:00000622                 mov     ecx, [ebp+arg_0]
.text:00000625                 mov     ecx, [ecx]
.text:00000627                 mov     ecx, [ecx+8]
.text:0000062A                 movzx   ecx, word ptr [ecx]
.text:0000062D                 mov     esi, [ebp+arg_0]
.text:00000630                 movzx   ecx, byte ptr [esi+ecx+287h]
.text:00000638                 mov     esi, [ebp+arg_0]
.text:0000063B                 mov     esi, [esi+14h]
.text:0000063E                 add     esi, ecx
.text:00000640                 add     esi, [ebp+var_570]
.text:00000646                 lea     eax, [esi+eax*2]
.text:00000649                 add     eax, edx
.text:0000064B                 mov     ecx, [ebp+arg_0]
.text:0000064E                 mov     edx, [ecx]
.text:00000650                 movzx   ecx, byte ptr [edx+3]
.text:00000654                 sub     ecx, 1
.text:00000657                 shl     ecx, 7
.text:0000065A                 mov     edx, [ebp+arg_0]
.text:0000065D                 lea     ecx, [edx+ecx+0ACCh]
.text:00000664                 lea     edx, [ecx+eax*2]
.text:00000667                 mov     [ebp+var_128], edx
.text:0000066D                 mov     eax, [ebp+var_128]
.text:00000673                 movzx   ecx, word ptr [eax]
.text:00000676                 mov     esi, esp
.text:00000678                 push    ecx
.text:00000679                 mov     edx, [ebp+arg_4]
.text:0000067C                 push    edx
.text:0000067D                 mov     eax, [ebp+arg_4]
.text:00000680                 mov     ecx, [eax+8]
.text:00000683                 call    ecx
.text:00000685                 cmp     esi, esp
.text:00000687                 call    __RTC_CheckEsp
.text:0000068C                 test    eax, eax
.text:0000068E                 jnz     short loc_6F5
.text:00000690                 mov     edx, [ebp+var_128]
.text:00000696                 movzx   eax, word ptr [edx]
.text:00000699                 add     eax, 80h ; 'Ç'
.text:0000069E                 mov     ecx, [ebp+var_128]
.text:000006A4                 movzx   edx, word ptr [ecx]
.text:000006A7                 add     edx, 20h ; ' '
.text:000006AA                 sar     edx, 7
.text:000006AD                 sub     eax, edx
.text:000006AF                 mov     ecx, [ebp+var_128]
.text:000006B5                 mov     [ecx], ax
.text:000006B8                 mov     edx, [ebp+arg_0]
.text:000006BB                 mov     eax, [edx]
.text:000006BD                 add     eax, 2
.text:000006C0                 mov     [ebp+var_574], eax
.text:000006C6                 mov     ecx, [ebp+arg_0]
.text:000006C9                 mov     edx, [ebp+var_574]
.text:000006CF                 mov     [ecx+8], edx
.text:000006D2                 mov     eax, [ebp+var_574]
.text:000006D8                 mov     cl, [eax]
.text:000006DA                 mov     [ebp+var_129], cl
.text:000006E0                 mov     edx, [ebp+arg_0]
.text:000006E3                 push    edx
.text:000006E4                 call    _Ppmd7_UpdateBin@4 ; Ppmd7_UpdateBin(x)
.text:000006E9                 movzx   eax, [ebp+var_129]
.text:000006F0                 jmp     loc_B23
.text:000006F5 ; ---------------------------------------------------------------------------
.text:000006F5
.text:000006F5 loc_6F5:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+3BEj
.text:000006F5                 mov     eax, [ebp+var_128]
.text:000006FB                 movzx   ecx, word ptr [eax]
.text:000006FE                 mov     edx, [ebp+var_128]
.text:00000704                 movzx   eax, word ptr [edx]
.text:00000707                 add     eax, 20h ; ' '
.text:0000070A                 sar     eax, 7
.text:0000070D                 sub     ecx, eax
.text:0000070F                 mov     edx, [ebp+var_128]
.text:00000715                 mov     [edx], cx
.text:00000718                 mov     eax, [ebp+var_128]
.text:0000071E                 movzx   ecx, word ptr [eax]
.text:00000721                 sar     ecx, 0Ah
.text:00000724                 movzx   edx, byte ptr ds:_PPMD7_kExpEscape[ecx]
.text:0000072B                 mov     eax, [ebp+arg_0]
.text:0000072E                 mov     [eax+10h], edx
.text:00000731                 mov     [ebp+var_130], 0
.text:0000073B                 jmp     short loc_74C
.text:0000073D ; ---------------------------------------------------------------------------
.text:0000073D
.text:0000073D loc_73D:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+511j
.text:0000073D                 mov     ecx, [ebp+var_130]
.text:00000743                 add     ecx, 8
.text:00000746                 mov     [ebp+var_130], ecx
.text:0000074C
.text:0000074C loc_74C:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+46Bj
.text:0000074C                 cmp     [ebp+var_130], 40h ; '@'
.text:00000753                 jnb     loc_7E6
.text:00000759                 mov     edx, [ebp+var_130]
.text:0000075F                 mov     [ebp+edx*4+var_108], 0FFFFFFFFh
.text:0000076A                 mov     eax, [ebp+var_130]
.text:00000770                 mov     [ebp+eax*4+var_104], 0FFFFFFFFh
.text:0000077B                 mov     ecx, [ebp+var_130]
.text:00000781                 mov     [ebp+ecx*4+var_100], 0FFFFFFFFh
.text:0000078C                 mov     edx, [ebp+var_130]
.text:00000792                 mov     [ebp+edx*4+var_FC], 0FFFFFFFFh
.text:0000079D                 mov     eax, [ebp+var_130]
.text:000007A3                 mov     [ebp+eax*4+var_F8], 0FFFFFFFFh
.text:000007AE                 mov     ecx, [ebp+var_130]
.text:000007B4                 mov     [ebp+ecx*4+var_F4], 0FFFFFFFFh
.text:000007BF                 mov     edx, [ebp+var_130]
.text:000007C5                 mov     [ebp+edx*4+var_F0], 0FFFFFFFFh
.text:000007D0                 mov     eax, [ebp+var_130]
.text:000007D6                 mov     [ebp+eax*4+var_EC], 0FFFFFFFFh
.text:000007E1                 jmp     loc_73D
.text:000007E6 ; ---------------------------------------------------------------------------
.text:000007E6
.text:000007E6 loc_7E6:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+483j
.text:000007E6                 mov     ecx, [ebp+arg_0]
.text:000007E9                 mov     edx, [ecx]
.text:000007EB                 movzx   eax, byte ptr [edx+2]
.text:000007EF                 mov     byte ptr [ebp+eax+var_108], 0
.text:000007F7                 mov     ecx, [ebp+arg_0]
.text:000007FA                 mov     dword ptr [ecx+14h], 0
.text:00000801
.text:00000801 loc_801:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+307j
.text:00000801                                         ; Ppmd7_DecodeSymbol(x,x)+84Ej
.text:00000801                 mov     edx, [ebp+arg_0]
.text:00000804                 mov     eax, [edx]
.text:00000806                 movzx   ecx, word ptr [eax]
.text:00000809                 mov     [ebp+var_560], ecx
.text:0000080F
.text:0000080F loc_80F:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+57Cj
.text:0000080F                 mov     edx, [ebp+arg_0]
.text:00000812                 mov     eax, [edx+0Ch]
.text:00000815                 add     eax, 1
.text:00000818                 mov     ecx, [ebp+arg_0]
.text:0000081B                 mov     [ecx+0Ch], eax
.text:0000081E                 mov     edx, [ebp+arg_0]
.text:00000821                 mov     eax, [edx]
.text:00000823                 cmp     dword ptr [eax+8], 0
.text:00000827                 jnz     short loc_831
.text:00000829                 or      eax, 0FFFFFFFFh
.text:0000082C                 jmp     loc_B23
.text:00000831 ; ---------------------------------------------------------------------------
.text:00000831
.text:00000831 loc_831:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+557j
.text:00000831                 mov     ecx, [ebp+arg_0]
.text:00000834                 mov     edx, [ecx]
.text:00000836                 mov     eax, [ebp+arg_0]
.text:00000839                 mov     ecx, [edx+8]
.text:0000083C                 mov     [eax], ecx
.text:0000083E                 mov     edx, [ebp+arg_0]
.text:00000841                 mov     eax, [edx]
.text:00000843                 movzx   ecx, word ptr [eax]
.text:00000846                 cmp     ecx, [ebp+var_560]
.text:0000084C                 jz      short loc_80F
.text:0000084E                 mov     [ebp+var_550], 0
.text:00000858                 mov     edx, [ebp+arg_0]
.text:0000085B                 mov     eax, [edx]
.text:0000085D                 mov     ecx, [eax+4]
.text:00000860                 mov     [ebp+var_53C], ecx
.text:00000866                 mov     [ebp+var_558], 0
.text:00000870                 mov     edx, [ebp+arg_0]
.text:00000873                 mov     eax, [edx]
.text:00000875                 movzx   ecx, word ptr [eax]
.text:00000878                 sub     ecx, [ebp+var_560]
.text:0000087E                 mov     [ebp+var_55C], ecx
.text:00000884
.text:00000884 loc_884:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+627j
.text:00000884                 mov     edx, [ebp+var_53C]
.text:0000088A                 movzx   eax, byte ptr [edx]
.text:0000088D                 movsx   ecx, byte ptr [ebp+eax+var_108]
.text:00000895                 mov     [ebp+var_564], ecx
.text:0000089B                 mov     edx, [ebp+var_53C]
.text:000008A1                 movzx   eax, byte ptr [edx+1]
.text:000008A5                 and     eax, [ebp+var_564]
.text:000008AB                 add     eax, [ebp+var_550]
.text:000008B1                 mov     [ebp+var_550], eax
.text:000008B7                 mov     ecx, [ebp+var_558]
.text:000008BD                 mov     edx, [ebp+var_53C]
.text:000008C3                 mov     [ebp+ecx*4+var_534], edx
.text:000008CA                 mov     eax, [ebp+var_53C]
.text:000008D0                 add     eax, 6
.text:000008D3                 mov     [ebp+var_53C], eax
.text:000008D9                 mov     ecx, [ebp+var_558]
.text:000008DF                 sub     ecx, [ebp+var_564]
.text:000008E5                 mov     [ebp+var_558], ecx
.text:000008EB                 mov     edx, [ebp+var_558]
.text:000008F1                 cmp     edx, [ebp+var_55C]
.text:000008F7                 jnz     short loc_884
.text:000008F9                 lea     eax, [ebp+var_544]
.text:000008FF                 push    eax
.text:00000900                 mov     ecx, [ebp+var_560]
.text:00000906                 push    ecx
.text:00000907                 mov     edx, [ebp+arg_0]
.text:0000090A                 push    edx
.text:0000090B                 call    _Ppmd7_MakeEscFreq@12 ; Ppmd7_MakeEscFreq(x,x,x)
.text:00000910                 mov     [ebp+var_554], eax
.text:00000916                 mov     eax, [ebp+var_544]
.text:0000091C                 add     eax, [ebp+var_550]
.text:00000922                 mov     [ebp+var_544], eax
.text:00000928                 mov     esi, esp
.text:0000092A                 mov     ecx, [ebp+var_544]
.text:00000930                 push    ecx
.text:00000931                 mov     edx, [ebp+arg_4]
.text:00000934                 push    edx
.text:00000935                 mov     eax, [ebp+arg_4]
.text:00000938                 mov     ecx, [eax]
.text:0000093A                 call    ecx
.text:0000093C                 cmp     esi, esp
.text:0000093E                 call    __RTC_CheckEsp
.text:00000943                 mov     [ebp+var_54C], eax
.text:00000949                 mov     edx, [ebp+var_54C]
.text:0000094F                 cmp     edx, [ebp+var_550]
.text:00000955                 jnb     loc_A98
.text:0000095B                 lea     eax, [ebp+var_534]
.text:00000961                 mov     [ebp+var_56C], eax
.text:00000967                 mov     [ebp+var_550], 0
.text:00000971                 jmp     short loc_982
.text:00000973 ; ---------------------------------------------------------------------------
.text:00000973
.text:00000973 loc_973:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+6D8j
.text:00000973                 mov     ecx, [ebp+var_56C]
.text:00000979                 add     ecx, 4
.text:0000097C                 mov     [ebp+var_56C], ecx
.text:00000982
.text:00000982 loc_982:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+6A1j
.text:00000982                 mov     edx, [ebp+var_56C]
.text:00000988                 mov     eax, [edx]
.text:0000098A                 movzx   ecx, byte ptr [eax+1]
.text:0000098E                 add     ecx, [ebp+var_550]
.text:00000994                 mov     [ebp+var_550], ecx
.text:0000099A                 mov     edx, [ebp+var_550]
.text:000009A0                 cmp     edx, [ebp+var_54C]
.text:000009A6                 ja      short loc_9AA
.text:000009A8                 jmp     short loc_973
.text:000009AA ; ---------------------------------------------------------------------------
.text:000009AA
.text:000009AA loc_9AA:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+6D6j
.text:000009AA                 mov     eax, [ebp+var_56C]
.text:000009B0                 mov     ecx, [eax]
.text:000009B2                 mov     [ebp+var_53C], ecx
.text:000009B8                 mov     edx, [ebp+var_53C]
.text:000009BE                 movzx   eax, byte ptr [edx+1]
.text:000009C2                 mov     esi, esp
.text:000009C4                 push    eax
.text:000009C5                 mov     ecx, [ebp+var_53C]
.text:000009CB                 movzx   edx, byte ptr [ecx+1]
.text:000009CF                 mov     eax, [ebp+var_550]
.text:000009D5                 sub     eax, edx
.text:000009D7                 push    eax
.text:000009D8                 mov     ecx, [ebp+arg_4]
.text:000009DB                 push    ecx
.text:000009DC                 mov     edx, [ebp+arg_4]
.text:000009DF                 mov     eax, [edx+4]
.text:000009E2                 call    eax
.text:000009E4                 cmp     esi, esp
.text:000009E6                 call    __RTC_CheckEsp
.text:000009EB                 mov     ecx, [ebp+var_554]
.text:000009F1                 movzx   edx, byte ptr [ecx+2]
.text:000009F5                 cmp     edx, 7
.text:000009F8                 jge     short loc_A69
.text:000009FA                 mov     eax, [ebp+var_554]
.text:00000A00                 mov     cl, [eax+3]
.text:00000A03                 sub     cl, 1
.text:00000A06                 mov     [ebp+var_575], cl
.text:00000A0C                 mov     edx, [ebp+var_554]
.text:00000A12                 mov     al, [ebp+var_575]
.text:00000A18                 mov     [edx+3], al
.text:00000A1B                 movzx   ecx, [ebp+var_575]
.text:00000A22                 test    ecx, ecx
.text:00000A24                 jnz     short loc_A69
.text:00000A26                 mov     edx, [ebp+var_554]
.text:00000A2C                 mov     ax, [edx]
.text:00000A2F                 shl     ax, 1
.text:00000A32                 mov     ecx, [ebp+var_554]
.text:00000A38                 mov     [ecx], ax
.text:00000A3B                 mov     edx, [ebp+var_554]
.text:00000A41                 movzx   ecx, byte ptr [edx+2]
.text:00000A45                 mov     eax, 3
.text:00000A4A                 shl     eax, cl
.text:00000A4C                 mov     ecx, [ebp+var_554]
.text:00000A52                 mov     [ecx+3], al
.text:00000A55                 mov     edx, [ebp+var_554]
.text:00000A5B                 mov     al, [edx+2]
.text:00000A5E                 add     al, 1
.text:00000A60                 mov     ecx, [ebp+var_554]
.text:00000A66                 mov     [ecx+2], al
.text:00000A69
.text:00000A69 loc_A69:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+728j
.text:00000A69                                         ; Ppmd7_DecodeSymbol(x,x)+754j
.text:00000A69                 mov     edx, [ebp+arg_0]
.text:00000A6C                 mov     eax, [ebp+var_53C]
.text:00000A72                 mov     [edx+8], eax
.text:00000A75                 mov     ecx, [ebp+var_53C]
.text:00000A7B                 mov     dl, [ecx]
.text:00000A7D                 mov     [ebp+var_565], dl
.text:00000A83                 mov     eax, [ebp+arg_0]
.text:00000A86                 push    eax
.text:00000A87                 call    _Ppmd7_Update2@4 ; Ppmd7_Update2(x)
.text:00000A8C                 movzx   eax, [ebp+var_565]
.text:00000A93                 jmp     loc_B23
.text:00000A98 ; ---------------------------------------------------------------------------
.text:00000A98
.text:00000A98 loc_A98:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+685j
.text:00000A98                 mov     ecx, [ebp+var_54C]
.text:00000A9E                 cmp     ecx, [ebp+var_544]
.text:00000AA4                 jb      short loc_AAD
.text:00000AA6                 mov     eax, 0FFFFFFFEh
.text:00000AAB                 jmp     short loc_B23
.text:00000AAD ; ---------------------------------------------------------------------------
.text:00000AAD
.text:00000AAD loc_AAD:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+7D4j
.text:00000AAD                 mov     edx, [ebp+var_544]
.text:00000AB3                 sub     edx, [ebp+var_550]
.text:00000AB9                 mov     esi, esp
.text:00000ABB                 push    edx
.text:00000ABC                 mov     eax, [ebp+var_550]
.text:00000AC2                 push    eax
.text:00000AC3                 mov     ecx, [ebp+arg_4]
.text:00000AC6                 push    ecx
.text:00000AC7                 mov     edx, [ebp+arg_4]
.text:00000ACA                 mov     eax, [edx+4]
.text:00000ACD                 call    eax
.text:00000ACF                 cmp     esi, esp
.text:00000AD1                 call    __RTC_CheckEsp
.text:00000AD6                 mov     ecx, [ebp+var_554]
.text:00000ADC                 movzx   edx, word ptr [ecx]
.text:00000ADF                 add     edx, [ebp+var_544]
.text:00000AE5                 mov     eax, [ebp+var_554]
.text:00000AEB                 mov     [eax], dx
.text:00000AEE
.text:00000AEE loc_AEE:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+84Cj
.text:00000AEE                 mov     ecx, [ebp+var_558]
.text:00000AF4                 sub     ecx, 1
.text:00000AF7                 mov     [ebp+var_558], ecx
.text:00000AFD                 mov     edx, [ebp+var_558]
.text:00000B03                 mov     eax, [ebp+edx*4+var_534]
.text:00000B0A                 movzx   ecx, byte ptr [eax]
.text:00000B0D                 mov     byte ptr [ebp+ecx+var_108], 0
.text:00000B15                 cmp     [ebp+var_558], 0
.text:00000B1C                 jnz     short loc_AEE
.text:00000B1E                 jmp     loc_801
.text:00000B23 ; ---------------------------------------------------------------------------
.text:00000B23
.text:00000B23 loc_B23:                                ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+D4j
.text:00000B23                                         ; Ppmd7_DecodeSymbol(x,x)+184j ...
.text:00000B23                 push    edx
.text:00000B24                 mov     ecx, ebp
.text:00000B26                 push    eax
.text:00000B27                 lea     edx, $LN43
.text:00000B2D                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00000B32                 pop     eax
.text:00000B33                 pop     edx
.text:00000B34                 pop     edi
.text:00000B35                 pop     esi
.text:00000B36                 mov     ecx, [ebp+var_4]
.text:00000B39                 xor     ecx, ebp
.text:00000B3B                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00000B40                 add     esp, 578h
.text:00000B46                 cmp     ebp, esp
.text:00000B48                 call    __RTC_CheckEsp
.text:00000B4D                 mov     esp, ebp
.text:00000B4F                 pop     ebp
.text:00000B50                 retn    8
.text:00000B50 _Ppmd7_DecodeSymbol@8 endp
.text:00000B50
.text:00000B50 ; ---------------------------------------------------------------------------
.text:00000B53                 align 4
.text:00000B54 $LN43           dd 3                    ; DATA XREF: Ppmd7_DecodeSymbol(x,x)+857o
.text:00000B58                 dd offset $LN42
.text:00000B5C $LN42           dd 0FFFFFEF8h, 100h     ; DATA XREF: .text:00000B58o
.text:00000B64                 dd offset $LN39         ; "charMask"
.text:00000B68                 db 0CCh
.text:00000B69                 db 0FAh, 2 dup(0FFh)
.text:00000B6C                 dd offset loc_3FD+3
.text:00000B70                 dd offset $LN40         ; "ps"
.text:00000B74                 dd 0FFFFFABCh, 4
.text:00000B7C                 dd offset $LN41         ; "freqSum"
.text:00000B80 $LN41           db 'freqSum',0          ; DATA XREF: .text:00000B7Co
.text:00000B88 $LN40           db 'ps',0               ; DATA XREF: .text:00000B70o
.text:00000B8B $LN39           db 'charMask',0         ; DATA XREF: .text:00000B64o
.text:00000B8B _text           ends
.text:00000B8B
.rtc$TMZ:00000B94 ; ===========================================================================
.rtc$TMZ:00000B94
.rtc$TMZ:00000B94 ; Segment type: Pure data
.rtc$TMZ:00000B94 ; Segment permissions: Read
.rtc$TMZ:00000B94 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00000B94                 assume cs:_rtc$TMZ
.rtc$TMZ:00000B94                 ;org 0B94h
.rtc$TMZ:00000B94 ; COMDAT (pick any)
.rtc$TMZ:00000B94 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00000B94 _rtc$TMZ        ends
.rtc$TMZ:00000B94
.rtc$IMZ:00000B98 ; ===========================================================================
.rtc$IMZ:00000B98
.rtc$IMZ:00000B98 ; Segment type: Pure data
.rtc$IMZ:00000B98 ; Segment permissions: Read
.rtc$IMZ:00000B98 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00000B98                 assume cs:_rtc$IMZ
.rtc$IMZ:00000B98                 ;org 0B98h
.rtc$IMZ:00000B98 ; COMDAT (pick any)
.rtc$IMZ:00000B98 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00000B98 _rtc$IMZ        ends
.rtc$IMZ:00000B98
UNDEF:00000BA0 ; ===========================================================================
UNDEF:00000BA0
UNDEF:00000BA0 ; Segment type: Externs
UNDEF:00000BA0 ; UNDEF
UNDEF:00000BA0                 extrn __RTC_CheckEsp:near
UNDEF:00000BA0                                         ; CODE XREF: Ppmd7z_RangeDec_Init(x)+36p
UNDEF:00000BA0                                         ; Ppmd7z_RangeDec_Init(x)+7Cp ...
UNDEF:00000BA4                 extrn __RTC_Shutdown:near
UNDEF:00000BA4                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00000BA8                 extrn __RTC_InitBase:near
UNDEF:00000BA8                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:00000BAC ; __stdcall Ppmd7_Update2(x)
UNDEF:00000BAC                 extrn _Ppmd7_Update2@4:near
UNDEF:00000BAC                                         ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+7B7p
UNDEF:00000BB0 ; __stdcall Ppmd7_MakeEscFreq(x, x, x)
UNDEF:00000BB0                 extrn _Ppmd7_MakeEscFreq@12:near
UNDEF:00000BB0                                         ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+63Bp
UNDEF:00000BB4                 extrn _PPMD7_kExpEscape:near
UNDEF:00000BB4                                         ; DATA XREF: Ppmd7_DecodeSymbol(x,x)+454r
UNDEF:00000BB8 ; __stdcall Ppmd7_UpdateBin(x)
UNDEF:00000BB8                 extrn _Ppmd7_UpdateBin@4:near
UNDEF:00000BB8                                         ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+414p
UNDEF:00000BBC ; __stdcall Ppmd7_Update1(x)
UNDEF:00000BBC                 extrn _Ppmd7_Update1@4:near
UNDEF:00000BBC                                         ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+178p
UNDEF:00000BC0 ; __stdcall Ppmd7_Update1_0(x)
UNDEF:00000BC0                 extrn _Ppmd7_Update1_0@4:near
UNDEF:00000BC0                                         ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+C8p
UNDEF:00000BC4                 extrn ___security_cookie:near
UNDEF:00000BC4                                         ; DATA XREF: Ppmd7_DecodeSymbol(x,x)+1Dr
UNDEF:00000BC8 ; __fastcall __security_check_cookie(x)
UNDEF:00000BC8                 extrn @__security_check_cookie@4:near
UNDEF:00000BC8                                         ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+86Bp
UNDEF:00000BCC ; __fastcall _RTC_CheckStackVars(x, x)
UNDEF:00000BCC                 extrn @_RTC_CheckStackVars@8:near
UNDEF:00000BCC                                         ; CODE XREF: Ppmd7_DecodeSymbol(x,x)+85Dp
UNDEF:00000BCC
UNDEF:00000BCC
UNDEF:00000BCC                 end
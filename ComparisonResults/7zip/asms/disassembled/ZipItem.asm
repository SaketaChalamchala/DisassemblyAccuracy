.text:00000000 ;
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.text:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.text:00000000 ; |                      License info: 48-3677-7074-51                      |
.text:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ;
.text:00000000 ; Input MD5   : 88FB0F78F86BB04E207D09FCDF222939
.text:00000000 ; Input CRC32 : E2DD662F
.text:00000000
.text:00000000 ; File Name   : C:\workspace\7z1505-src\CPP\7zip\Bundles\Alone\Debug\ZipItem.obj
.text:00000000 ; Format      : COFF (X386MAGIC)
.text:00000000 ; includelib "uuid.lib"
.text:00000000 ; includelib "MSVCRTD"
.text:00000000 ; includelib "OLDNAMES"
.text:00000000
.text:00000000                 .686p
.text:00000000                 .mmx
.text:00000000                 .model flat
.text:00000000
.text:00000000 ; ===========================================================================
.text:00000000
.text:00000000 ; Segment type: Pure code
.text:00000000 ; Segment permissions: Read/Execute
.text:00000000 _text           segment para public 'CODE' use32
.text:00000000                 assume cs:_text
.text:00000000                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:00000000
.text:00000000 ; =============== S U B R O U T I N E =======================================
.text:00000000
.text:00000000 ; Attributes: bp-based frame
.text:00000000
.text:00000000 ; bool __thiscall NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(NArchive::NZip::CExtraSubBlock *this, unsigned int, struct _FILETIME *)
.text:00000000                 public ?ExtractNtfsTime@CExtraSubBlock@NZip@NArchive@@QBE_NIAAU_FILETIME@@@Z
.text:00000000 ?ExtractNtfsTime@CExtraSubBlock@NZip@NArchive@@QBE_NIAAU_FILETIME@@@Z proc near
.text:00000000
.text:00000000 var_14          = dword ptr -14h
.text:00000000 var_10          = dword ptr -10h
.text:00000000 var_C           = dword ptr -0Ch
.text:00000000 var_8           = dword ptr -8
.text:00000000 var_4           = dword ptr -4
.text:00000000 arg_0           = dword ptr  8
.text:00000000 arg_4           = dword ptr  0Ch
.text:00000000
.text:00000000                 push    ebp
.text:00000001                 mov     ebp, esp
.text:00000003                 sub     esp, 14h
.text:00000006                 mov     eax, 0CCCCCCCCh
.text:0000000B                 mov     [ebp+var_14], eax
.text:0000000E                 mov     [ebp+var_10], eax
.text:00000011                 mov     [ebp+var_C], eax
.text:00000014                 mov     [ebp+var_8], eax
.text:00000017                 mov     [ebp+var_4], eax
.text:0000001A                 mov     [ebp+var_4], ecx
.text:0000001D                 mov     eax, [ebp+arg_4]
.text:00000020                 mov     dword ptr [eax], 0
.text:00000026                 mov     ecx, [ebp+arg_4]
.text:00000029                 mov     dword ptr [ecx+4], 0
.text:00000030                 mov     ecx, [ebp+var_4]
.text:00000033                 add     ecx, 4
.text:00000036                 call    ?Size@?$CBuffer@E@@QBEIXZ ; CBuffer<uchar>::Size(void)
.text:0000003B                 mov     [ebp+var_8], eax
.text:0000003E                 mov     edx, [ebp+var_4]
.text:00000041                 movzx   eax, word ptr [edx]
.text:00000044                 cmp     eax, 0Ah
.text:00000047                 jnz     short loc_4F
.text:00000049                 cmp     [ebp+var_8], 20h ; ' '
.text:0000004D                 jnb     short loc_56
.text:0000004F
.text:0000004F loc_4F:                                 ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+47j
.text:0000004F                 xor     al, al
.text:00000051                 jmp     loc_102
.text:00000056 ; ---------------------------------------------------------------------------
.text:00000056
.text:00000056 loc_56:                                 ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+4Dj
.text:00000056                 mov     ecx, [ebp+var_4]
.text:00000059                 add     ecx, 4
.text:0000005C                 call    ??B?$CBuffer@E@@QBEPBEXZ ; CBuffer<uchar>::operator uchar const *(void)
.text:00000061                 mov     [ebp+var_C], eax
.text:00000064                 mov     ecx, [ebp+var_C]
.text:00000067                 add     ecx, 4
.text:0000006A                 mov     [ebp+var_C], ecx
.text:0000006D                 mov     edx, [ebp+var_8]
.text:00000070                 sub     edx, 4
.text:00000073                 mov     [ebp+var_8], edx
.text:00000076
.text:00000076 loc_76:                                 ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+FBj
.text:00000076                 cmp     [ebp+var_8], 4
.text:0000007A                 jbe     loc_100
.text:00000080                 mov     eax, [ebp+var_C]
.text:00000083                 mov     cx, [eax]
.text:00000086                 mov     word ptr [ebp+var_10], cx
.text:0000008A                 mov     edx, [ebp+var_C]
.text:0000008D                 movzx   eax, word ptr [edx+2]
.text:00000091                 mov     [ebp+var_14], eax
.text:00000094                 mov     ecx, [ebp+var_C]
.text:00000097                 add     ecx, 4
.text:0000009A                 mov     [ebp+var_C], ecx
.text:0000009D                 mov     edx, [ebp+var_8]
.text:000000A0                 sub     edx, 4
.text:000000A3                 mov     [ebp+var_8], edx
.text:000000A6                 mov     eax, [ebp+var_14]
.text:000000A9                 cmp     eax, [ebp+var_8]
.text:000000AC                 jbe     short loc_B4
.text:000000AE                 mov     ecx, [ebp+var_8]
.text:000000B1                 mov     [ebp+var_14], ecx
.text:000000B4
.text:000000B4 loc_B4:                                 ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+ACj
.text:000000B4                 movzx   edx, word ptr [ebp+var_10]
.text:000000B8                 cmp     edx, 1
.text:000000BB                 jnz     short loc_E9
.text:000000BD                 cmp     [ebp+var_14], 18h
.text:000000C1                 jb      short loc_E9
.text:000000C3                 mov     eax, [ebp+arg_0]
.text:000000C6                 mov     ecx, [ebp+var_C]
.text:000000C9                 lea     edx, [ecx+eax*8]
.text:000000CC                 mov     [ebp+var_C], edx
.text:000000CF                 mov     eax, [ebp+arg_4]
.text:000000D2                 mov     ecx, [ebp+var_C]
.text:000000D5                 mov     edx, [ecx]
.text:000000D7                 mov     [eax], edx
.text:000000D9                 mov     eax, [ebp+arg_4]
.text:000000DC                 mov     ecx, [ebp+var_C]
.text:000000DF                 mov     edx, [ecx+4]
.text:000000E2                 mov     [eax+4], edx
.text:000000E5                 mov     al, 1
.text:000000E7                 jmp     short loc_102
.text:000000E9 ; ---------------------------------------------------------------------------
.text:000000E9
.text:000000E9 loc_E9:                                 ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+BBj
.text:000000E9                                         ; NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+C1j
.text:000000E9                 mov     eax, [ebp+var_C]
.text:000000EC                 add     eax, [ebp+var_14]
.text:000000EF                 mov     [ebp+var_C], eax
.text:000000F2                 mov     ecx, [ebp+var_8]
.text:000000F5                 sub     ecx, [ebp+var_14]
.text:000000F8                 mov     [ebp+var_8], ecx
.text:000000FB                 jmp     loc_76
.text:00000100 ; ---------------------------------------------------------------------------
.text:00000100
.text:00000100 loc_100:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+7Aj
.text:00000100                 xor     al, al
.text:00000102
.text:00000102 loc_102:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+51j
.text:00000102                                         ; NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+E7j
.text:00000102                 add     esp, 14h
.text:00000105                 cmp     ebp, esp
.text:00000107                 call    __RTC_CheckEsp
.text:0000010C                 mov     esp, ebp
.text:0000010E                 pop     ebp
.text:0000010F                 retn    8
.text:0000010F ?ExtractNtfsTime@CExtraSubBlock@NZip@NArchive@@QBE_NIAAU_FILETIME@@@Z endp
.text:0000010F
.text:0000010F ; ---------------------------------------------------------------------------
.text:00000112                 align 10h
.text:00000120
.text:00000120 ; =============== S U B R O U T I N E =======================================
.text:00000120
.text:00000120 ; Attributes: bp-based frame
.text:00000120
.text:00000120 ; bool __thiscall NArchive::NZip::CExtraSubBlock::ExtractUnixTime(NArchive::NZip::CExtraSubBlock *this, bool, unsigned int, unsigned int *)
.text:00000120                 public ?ExtractUnixTime@CExtraSubBlock@NZip@NArchive@@QBE_N_NIAAI@Z
.text:00000120 ?ExtractUnixTime@CExtraSubBlock@NZip@NArchive@@QBE_N_NIAAI@Z proc near
.text:00000120
.text:00000120 var_14          = dword ptr -14h
.text:00000120 var_10          = dword ptr -10h
.text:00000120 var_C           = dword ptr -0Ch
.text:00000120 var_8           = dword ptr -8
.text:00000120 var_4           = dword ptr -4
.text:00000120 arg_0           = byte ptr  8
.text:00000120 arg_4           = dword ptr  0Ch
.text:00000120 arg_8           = dword ptr  10h
.text:00000120
.text:00000120                 push    ebp
.text:00000121                 mov     ebp, esp
.text:00000123                 sub     esp, 14h
.text:00000126                 mov     eax, 0CCCCCCCCh
.text:0000012B                 mov     [ebp+var_14], eax
.text:0000012E                 mov     [ebp+var_10], eax
.text:00000131                 mov     [ebp+var_C], eax
.text:00000134                 mov     [ebp+var_8], eax
.text:00000137                 mov     [ebp+var_4], eax
.text:0000013A                 mov     [ebp+var_4], ecx
.text:0000013D                 mov     eax, [ebp+arg_8]
.text:00000140                 mov     dword ptr [eax], 0
.text:00000146                 mov     ecx, [ebp+var_4]
.text:00000149                 add     ecx, 4
.text:0000014C                 call    ?Size@?$CBuffer@E@@QBEIXZ ; CBuffer<uchar>::Size(void)
.text:00000151                 mov     [ebp+var_8], eax
.text:00000154                 mov     ecx, [ebp+var_4]
.text:00000157                 movzx   edx, word ptr [ecx]
.text:0000015A                 cmp     edx, 5455h
.text:00000160                 jnz     short loc_168
.text:00000162                 cmp     [ebp+var_8], 5
.text:00000166                 jnb     short loc_16F
.text:00000168
.text:00000168 loc_168:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+40j
.text:00000168                 xor     al, al
.text:0000016A                 jmp     loc_226
.text:0000016F ; ---------------------------------------------------------------------------
.text:0000016F
.text:0000016F loc_16F:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+46j
.text:0000016F                 mov     ecx, [ebp+var_4]
.text:00000172                 add     ecx, 4
.text:00000175                 call    ??B?$CBuffer@E@@QBEPBEXZ ; CBuffer<uchar>::operator uchar const *(void)
.text:0000017A                 mov     [ebp+var_C], eax
.text:0000017D                 mov     eax, [ebp+var_C]
.text:00000180                 mov     cl, [eax]
.text:00000182                 mov     byte ptr [ebp+var_10+3], cl
.text:00000185                 mov     edx, [ebp+var_C]
.text:00000188                 add     edx, 1
.text:0000018B                 mov     [ebp+var_C], edx
.text:0000018E                 mov     eax, [ebp+var_8]
.text:00000191                 sub     eax, 1
.text:00000194                 mov     [ebp+var_8], eax
.text:00000197                 movzx   ecx, [ebp+arg_0]
.text:0000019B                 test    ecx, ecx
.text:0000019D                 jz      short loc_1C6
.text:0000019F                 cmp     [ebp+arg_4], 0
.text:000001A3                 jnz     short loc_1B4
.text:000001A5                 movzx   edx, byte ptr [ebp+var_10+3]
.text:000001A9                 and     edx, 1
.text:000001AC                 jz      short loc_1B4
.text:000001AE                 cmp     [ebp+var_8], 4
.text:000001B2                 jnb     short loc_1B8
.text:000001B4
.text:000001B4 loc_1B4:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+83j
.text:000001B4                                         ; NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+8Cj
.text:000001B4                 xor     al, al
.text:000001B6                 jmp     short loc_226
.text:000001B8 ; ---------------------------------------------------------------------------
.text:000001B8
.text:000001B8 loc_1B8:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+92j
.text:000001B8                 mov     eax, [ebp+arg_8]
.text:000001BB                 mov     ecx, [ebp+var_C]
.text:000001BE                 mov     edx, [ecx]
.text:000001C0                 mov     [eax], edx
.text:000001C2                 mov     al, 1
.text:000001C4                 jmp     short loc_226
.text:000001C6 ; ---------------------------------------------------------------------------
.text:000001C6
.text:000001C6 loc_1C6:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+7Dj
.text:000001C6                 mov     [ebp+var_14], 0
.text:000001CD                 jmp     short loc_1D8
.text:000001CF ; ---------------------------------------------------------------------------
.text:000001CF
.text:000001CF loc_1CF:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &):loc_222j
.text:000001CF                 mov     eax, [ebp+var_14]
.text:000001D2                 add     eax, 1
.text:000001D5                 mov     [ebp+var_14], eax
.text:000001D8
.text:000001D8 loc_1D8:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+ADj
.text:000001D8                 cmp     [ebp+var_14], 3
.text:000001DC                 jnb     short loc_224
.text:000001DE                 movzx   edx, byte ptr [ebp+var_10+3]
.text:000001E2                 mov     eax, 1
.text:000001E7                 mov     ecx, [ebp+var_14]
.text:000001EA                 shl     eax, cl
.text:000001EC                 and     edx, eax
.text:000001EE                 jz      short loc_222
.text:000001F0                 cmp     [ebp+var_8], 4
.text:000001F4                 jnb     short loc_1FA
.text:000001F6                 xor     al, al
.text:000001F8                 jmp     short loc_226
.text:000001FA ; ---------------------------------------------------------------------------
.text:000001FA
.text:000001FA loc_1FA:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+D4j
.text:000001FA                 mov     ecx, [ebp+arg_4]
.text:000001FD                 cmp     ecx, [ebp+var_14]
.text:00000200                 jnz     short loc_210
.text:00000202                 mov     edx, [ebp+arg_8]
.text:00000205                 mov     eax, [ebp+var_C]
.text:00000208                 mov     ecx, [eax]
.text:0000020A                 mov     [edx], ecx
.text:0000020C                 mov     al, 1
.text:0000020E                 jmp     short loc_226
.text:00000210 ; ---------------------------------------------------------------------------
.text:00000210
.text:00000210 loc_210:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+E0j
.text:00000210                 mov     edx, [ebp+var_C]
.text:00000213                 add     edx, 4
.text:00000216                 mov     [ebp+var_C], edx
.text:00000219                 mov     eax, [ebp+var_8]
.text:0000021C                 sub     eax, 4
.text:0000021F                 mov     [ebp+var_8], eax
.text:00000222
.text:00000222 loc_222:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+CEj
.text:00000222                 jmp     short loc_1CF
.text:00000224 ; ---------------------------------------------------------------------------
.text:00000224
.text:00000224 loc_224:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+BCj
.text:00000224                 xor     al, al
.text:00000226
.text:00000226 loc_226:                                ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+4Aj
.text:00000226                                         ; NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+96j ...
.text:00000226                 add     esp, 14h
.text:00000229                 cmp     ebp, esp
.text:0000022B                 call    __RTC_CheckEsp
.text:00000230                 mov     esp, ebp
.text:00000232                 pop     ebp
.text:00000233                 retn    0Ch
.text:00000233 ?ExtractUnixTime@CExtraSubBlock@NZip@NArchive@@QBE_N_NIAAI@Z endp
.text:00000233
.text:00000233 ; ---------------------------------------------------------------------------
.text:00000236                 align 10h
.text:00000240
.text:00000240 ; =============== S U B R O U T I N E =======================================
.text:00000240
.text:00000240 ; Attributes: bp-based frame
.text:00000240
.text:00000240 ; bool __thiscall NArchive::NZip::CLocalItem::IsDir(NArchive::NZip::CLocalItem *this)
.text:00000240                 public ?IsDir@CLocalItem@NZip@NArchive@@QBE_NXZ
.text:00000240 ?IsDir@CLocalItem@NZip@NArchive@@QBE_NXZ proc near
.text:00000240
.text:00000240 var_4           = dword ptr -4
.text:00000240
.text:00000240                 push    ebp
.text:00000241                 mov     ebp, esp
.text:00000243                 push    ecx             ; unsigned int
.text:00000244                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000024B                 mov     [ebp+var_4], ecx
.text:0000024E                 mov     ecx, [ebp+var_4] ; this
.text:00000251                 call    ?GetCodePage@CLocalItem@NZip@NArchive@@QBEIXZ ; NArchive::NZip::CLocalItem::GetCodePage(void)
.text:00000256                 push    eax             ; struct AString *
.text:00000257                 mov     eax, [ebp+var_4]
.text:0000025A                 add     eax, 20h ; ' '
.text:0000025D                 push    eax             ; this
.text:0000025E                 call    ?HasTailSlash@NItemName@NArchive@@YG_NABVAString@@I@Z ; NArchive::NItemName::HasTailSlash(AString const &,uint)
.text:00000263                 add     esp, 4
.text:00000266                 cmp     ebp, esp
.text:00000268                 call    __RTC_CheckEsp
.text:0000026D                 mov     esp, ebp
.text:0000026F                 pop     ebp
.text:00000270                 retn
.text:00000270 ?IsDir@CLocalItem@NZip@NArchive@@QBE_NXZ endp
.text:00000270
.text:00000270 ; ---------------------------------------------------------------------------
.text:00000271                 align 10h
.text:00000280
.text:00000280 ; =============== S U B R O U T I N E =======================================
.text:00000280
.text:00000280 ; Attributes: bp-based frame
.text:00000280
.text:00000280 ; bool __thiscall NArchive::NZip::CItem::IsDir(NArchive::NZip::CItem *__hidden this)
.text:00000280                 public ?IsDir@CItem@NZip@NArchive@@QBE_NXZ
.text:00000280 ?IsDir@CItem@NZip@NArchive@@QBE_NXZ proc near
.text:00000280                                         ; CODE XREF: NArchive::NZip::CItem::GetWinAttrib(void)+77p
.text:00000280                                         ; NArchive::NZip::CItem::GetPosixAttrib(uint &)+52p
.text:00000280
.text:00000280 var_14          = dword ptr -14h
.text:00000280 var_10          = dword ptr -10h
.text:00000280 var_C           = dword ptr -0Ch
.text:00000280 var_8           = dword ptr -8
.text:00000280 var_4           = dword ptr -4
.text:00000280
.text:00000280                 push    ebp
.text:00000281                 mov     ebp, esp
.text:00000283                 sub     esp, 14h
.text:00000286                 mov     eax, 0CCCCCCCCh
.text:0000028B                 mov     [ebp+var_14], eax
.text:0000028E                 mov     [ebp+var_10], eax
.text:00000291                 mov     [ebp+var_C], eax
.text:00000294                 mov     [ebp+var_8], eax
.text:00000297                 mov     [ebp+var_4], eax
.text:0000029A                 mov     [ebp+var_4], ecx
.text:0000029D                 mov     ecx, [ebp+var_4] ; this
.text:000002A0                 call    ?GetCodePage@CItem@NZip@NArchive@@QBEIXZ ; NArchive::NZip::CItem::GetCodePage(void)
.text:000002A5                 push    eax             ; struct AString *
.text:000002A6                 mov     eax, [ebp+var_4]
.text:000002A9                 add     eax, 20h ; ' '
.text:000002AC                 push    eax             ; this
.text:000002AD                 call    ?HasTailSlash@NItemName@NArchive@@YG_NABVAString@@I@Z ; NArchive::NItemName::HasTailSlash(AString const &,uint)
.text:000002B2                 movzx   ecx, al
.text:000002B5                 test    ecx, ecx
.text:000002B7                 jz      short loc_2C0
.text:000002B9                 mov     al, 1
.text:000002BB                 jmp     loc_368
.text:000002C0 ; ---------------------------------------------------------------------------
.text:000002C0
.text:000002C0 loc_2C0:                                ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+37j
.text:000002C0                 mov     edx, [ebp+var_4]
.text:000002C3                 movzx   eax, byte ptr [edx+5Dh]
.text:000002C7                 test    eax, eax
.text:000002C9                 jnz     short loc_2D2
.text:000002CB                 xor     al, al
.text:000002CD                 jmp     loc_368
.text:000002D2 ; ---------------------------------------------------------------------------
.text:000002D2
.text:000002D2 loc_2D2:                                ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+49j
.text:000002D2                 mov     ecx, [ebp+var_4]
.text:000002D5                 mov     edx, [ecx+3Ch]
.text:000002D8                 shr     edx, 10h
.text:000002DB                 and     edx, 0FFFFh
.text:000002E1                 mov     word ptr [ebp+var_8], dx
.text:000002E5                 mov     ecx, [ebp+var_4] ; this
.text:000002E8                 call    ?GetHostOS@CItem@NZip@NArchive@@QBEEXZ ; NArchive::NZip::CItem::GetHostOS(void)
.text:000002ED                 mov     byte ptr [ebp+var_C+3], al
.text:000002F0                 movzx   eax, byte ptr [ebp+var_C+3]
.text:000002F4                 mov     [ebp+var_10], eax
.text:000002F7                 cmp     [ebp+var_10], 0Fh ; switch 16 cases
.text:000002FB                 ja      short $LN1      ; jumptable 00000307 default case
.text:000002FD                 mov     ecx, [ebp+var_10]
.text:00000300                 movzx   edx, ds:$LN17[ecx]
.text:00000307                 jmp     ds:$LN18[edx*4] ; switch jump
.text:0000030E ; ---------------------------------------------------------------------------
.text:0000030E
.text:0000030E $LN10:                                  ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+87j
.text:0000030E                                         ; DATA XREF: .text:$LN18o
.text:0000030E                 movzx   eax, word ptr [ebp+var_8] ; jumptable 00000307 case 1
.text:00000312                 and     eax, 0C00h
.text:00000317                 mov     [ebp+var_14], eax
.text:0000031A                 cmp     [ebp+var_14], 400h
.text:00000321                 jz      short loc_332
.text:00000323                 cmp     [ebp+var_14], 800h
.text:0000032A                 jz      short loc_32E
.text:0000032C                 jmp     short loc_336
.text:0000032E ; ---------------------------------------------------------------------------
.text:0000032E
.text:0000032E loc_32E:                                ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+AAj
.text:0000032E                 mov     al, 1
.text:00000330                 jmp     short loc_368
.text:00000332 ; ---------------------------------------------------------------------------
.text:00000332
.text:00000332 loc_332:                                ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+A1j
.text:00000332                 xor     al, al
.text:00000334                 jmp     short loc_368
.text:00000336 ; ---------------------------------------------------------------------------
.text:00000336
.text:00000336 loc_336:                                ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+ACj
.text:00000336                 xor     al, al
.text:00000338                 jmp     short loc_368
.text:0000033A ; ---------------------------------------------------------------------------
.text:0000033A
.text:0000033A $LN4:                                   ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+87j
.text:0000033A                                         ; DATA XREF: .text:$LN18o
.text:0000033A                 mov     ecx, [ebp+var_4] ; jumptable 00000307 cases 0,6,11,14
.text:0000033D                 mov     eax, [ecx+3Ch]
.text:00000340                 and     eax, 10h
.text:00000343                 neg     eax
.text:00000345                 sbb     eax, eax
.text:00000347                 neg     eax
.text:00000349                 jmp     short loc_368
.text:0000034B ; ---------------------------------------------------------------------------
.text:0000034B
.text:0000034B $LN3:                                   ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+87j
.text:0000034B                                         ; DATA XREF: .text:$LN18o
.text:0000034B                 xor     al, al          ; jumptable 00000307 cases 2,4,5,7,13,15
.text:0000034D                 jmp     short loc_368
.text:0000034F ; ---------------------------------------------------------------------------
.text:0000034F
.text:0000034F $LN2:                                   ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+87j
.text:0000034F                                         ; DATA XREF: .text:$LN18o
.text:0000034F                 movzx   edx, word ptr [ebp+var_8] ; jumptable 00000307 case 3
.text:00000353                 and     edx, 0F000h
.text:00000359                 xor     eax, eax
.text:0000035B                 cmp     edx, 4000h
.text:00000361                 setz    al
.text:00000364                 jmp     short loc_368
.text:00000366 ; ---------------------------------------------------------------------------
.text:00000366
.text:00000366 $LN1:                                   ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+7Bj
.text:00000366                                         ; NArchive::NZip::CItem::IsDir(void)+87j
.text:00000366                                         ; DATA XREF: ...
.text:00000366                 xor     al, al          ; jumptable 00000307 default case
.text:00000368
.text:00000368 loc_368:                                ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+3Bj
.text:00000368                                         ; NArchive::NZip::CItem::IsDir(void)+4Dj ...
.text:00000368                 add     esp, 14h
.text:0000036B                 cmp     ebp, esp
.text:0000036D                 call    __RTC_CheckEsp
.text:00000372                 mov     esp, ebp
.text:00000374                 pop     ebp
.text:00000375                 retn
.text:00000375 ?IsDir@CItem@NZip@NArchive@@QBE_NXZ endp
.text:00000375
.text:00000375 ; ---------------------------------------------------------------------------
.text:00000376                 align 4
.text:00000378 $LN18           dd offset $LN4          ; DATA XREF: NArchive::NZip::CItem::IsDir(void)+87r
.text:00000378                 dd offset $LN10         ; jump table for switch statement
.text:00000378                 dd offset $LN3
.text:00000378                 dd offset $LN2
.text:00000378                 dd offset $LN1
.text:0000038C $LN17           db      0,     1,     2,     3
.text:0000038C                                         ; DATA XREF: NArchive::NZip::CItem::IsDir(void)+80r
.text:0000038C                 db      2,     2,     0,     2 ; indirect table for switch statement
.text:0000038C                 db      4,     4,     4,     0
.text:0000038C                 db      4,     2,     0,     2
.text:0000039C                 align 10h
.text:000003A0
.text:000003A0 ; =============== S U B R O U T I N E =======================================
.text:000003A0
.text:000003A0 ; Attributes: bp-based frame
.text:000003A0
.text:000003A0 ; unsigned int __thiscall NArchive::NZip::CItem::GetWinAttrib(NArchive::NZip::CItem *__hidden this)
.text:000003A0                 public ?GetWinAttrib@CItem@NZip@NArchive@@QBEIXZ
.text:000003A0 ?GetWinAttrib@CItem@NZip@NArchive@@QBEIXZ proc near
.text:000003A0
.text:000003A0 var_C           = dword ptr -0Ch
.text:000003A0 var_8           = dword ptr -8
.text:000003A0 var_4           = dword ptr -4
.text:000003A0
.text:000003A0                 push    ebp
.text:000003A1                 mov     ebp, esp
.text:000003A3                 sub     esp, 0Ch
.text:000003A6                 mov     [ebp+var_C], 0CCCCCCCCh
.text:000003AD                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000003B4                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000003BB                 mov     [ebp+var_4], ecx
.text:000003BE                 mov     [ebp+var_8], 0
.text:000003C5                 mov     ecx, [ebp+var_4] ; this
.text:000003C8                 call    ?GetHostOS@CItem@NZip@NArchive@@QBEEXZ ; NArchive::NZip::CItem::GetHostOS(void)
.text:000003CD                 mov     byte ptr [ebp+var_C], al
.text:000003D0                 cmp     byte ptr [ebp+var_C], 0
.text:000003D4                 jz      short loc_3E4
.text:000003D6                 cmp     byte ptr [ebp+var_C], 3
.text:000003DA                 jz      short loc_3FA
.text:000003DC                 cmp     byte ptr [ebp+var_C], 0Bh
.text:000003E0                 jz      short loc_3E4
.text:000003E2                 jmp     short loc_414
.text:000003E4 ; ---------------------------------------------------------------------------
.text:000003E4
.text:000003E4 loc_3E4:                                ; CODE XREF: NArchive::NZip::CItem::GetWinAttrib(void)+34j
.text:000003E4                                         ; NArchive::NZip::CItem::GetWinAttrib(void)+40j
.text:000003E4                 mov     eax, [ebp+var_4]
.text:000003E7                 movzx   ecx, byte ptr [eax+5Dh]
.text:000003EB                 test    ecx, ecx
.text:000003ED                 jz      short loc_3F8
.text:000003EF                 mov     edx, [ebp+var_4]
.text:000003F2                 mov     eax, [edx+3Ch]
.text:000003F5                 mov     [ebp+var_8], eax
.text:000003F8
.text:000003F8 loc_3F8:                                ; CODE XREF: NArchive::NZip::CItem::GetWinAttrib(void)+4Dj
.text:000003F8                 jmp     short loc_414
.text:000003FA ; ---------------------------------------------------------------------------
.text:000003FA
.text:000003FA loc_3FA:                                ; CODE XREF: NArchive::NZip::CItem::GetWinAttrib(void)+3Aj
.text:000003FA                 mov     ecx, [ebp+var_4]
.text:000003FD                 movzx   edx, byte ptr [ecx+5Dh]
.text:00000401                 test    edx, edx
.text:00000403                 jz      short loc_414
.text:00000405                 mov     eax, [ebp+var_4]
.text:00000408                 mov     ecx, [eax+3Ch]
.text:0000040B                 and     ecx, 0FFFF0000h
.text:00000411                 mov     [ebp+var_8], ecx
.text:00000414
.text:00000414 loc_414:                                ; CODE XREF: NArchive::NZip::CItem::GetWinAttrib(void)+42j
.text:00000414                                         ; NArchive::NZip::CItem::GetWinAttrib(void):loc_3F8j ...
.text:00000414                 mov     ecx, [ebp+var_4] ; this
.text:00000417                 call    ?IsDir@CItem@NZip@NArchive@@QBE_NXZ ; NArchive::NZip::CItem::IsDir(void)
.text:0000041C                 movzx   edx, al
.text:0000041F                 test    edx, edx
.text:00000421                 jz      short loc_42C
.text:00000423                 mov     eax, [ebp+var_8]
.text:00000426                 or      eax, 10h
.text:00000429                 mov     [ebp+var_8], eax
.text:0000042C
.text:0000042C loc_42C:                                ; CODE XREF: NArchive::NZip::CItem::GetWinAttrib(void)+81j
.text:0000042C                 mov     eax, [ebp+var_8]
.text:0000042F                 add     esp, 0Ch
.text:00000432                 cmp     ebp, esp
.text:00000434                 call    __RTC_CheckEsp
.text:00000439                 mov     esp, ebp
.text:0000043B                 pop     ebp
.text:0000043C                 retn
.text:0000043C ?GetWinAttrib@CItem@NZip@NArchive@@QBEIXZ endp
.text:0000043C
.text:0000043C ; ---------------------------------------------------------------------------
.text:0000043D                 align 10h
.text:00000440
.text:00000440 ; =============== S U B R O U T I N E =======================================
.text:00000440
.text:00000440 ; Attributes: bp-based frame
.text:00000440
.text:00000440 ; bool __thiscall NArchive::NZip::CItem::GetPosixAttrib(NArchive::NZip::CItem *this, unsigned int *)
.text:00000440                 public ?GetPosixAttrib@CItem@NZip@NArchive@@QBE_NAAI@Z
.text:00000440 ?GetPosixAttrib@CItem@NZip@NArchive@@QBE_NAAI@Z proc near
.text:00000440
.text:00000440 var_4           = dword ptr -4
.text:00000440 arg_0           = dword ptr  8
.text:00000440
.text:00000440                 push    ebp
.text:00000441                 mov     ebp, esp
.text:00000443                 push    ecx
.text:00000444                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000044B                 mov     [ebp+var_4], ecx
.text:0000044E                 mov     eax, [ebp+var_4]
.text:00000451                 movzx   ecx, byte ptr [eax+5Dh]
.text:00000455                 test    ecx, ecx
.text:00000457                 jz      short loc_486
.text:00000459                 mov     ecx, [ebp+var_4] ; this
.text:0000045C                 call    ?GetHostOS@CItem@NZip@NArchive@@QBEEXZ ; NArchive::NZip::CItem::GetHostOS(void)
.text:00000461                 movzx   edx, al
.text:00000464                 cmp     edx, 3
.text:00000467                 jnz     short loc_486
.text:00000469                 mov     eax, [ebp+var_4]
.text:0000046C                 mov     ecx, [eax+3Ch]
.text:0000046F                 shr     ecx, 10h
.text:00000472                 mov     edx, [ebp+arg_0]
.text:00000475                 mov     [edx], ecx
.text:00000477                 mov     eax, [ebp+arg_0]
.text:0000047A                 xor     ecx, ecx
.text:0000047C                 cmp     dword ptr [eax], 0
.text:0000047F                 setnz   cl
.text:00000482                 mov     al, cl
.text:00000484                 jmp     short loc_4A9
.text:00000486 ; ---------------------------------------------------------------------------
.text:00000486
.text:00000486 loc_486:                                ; CODE XREF: NArchive::NZip::CItem::GetPosixAttrib(uint &)+17j
.text:00000486                                         ; NArchive::NZip::CItem::GetPosixAttrib(uint &)+27j
.text:00000486                 mov     edx, [ebp+arg_0]
.text:00000489                 mov     dword ptr [edx], 0
.text:0000048F                 mov     ecx, [ebp+var_4] ; this
.text:00000492                 call    ?IsDir@CItem@NZip@NArchive@@QBE_NXZ ; NArchive::NZip::CItem::IsDir(void)
.text:00000497                 movzx   eax, al
.text:0000049A                 test    eax, eax
.text:0000049C                 jz      short loc_4A7
.text:0000049E                 mov     ecx, [ebp+arg_0]
.text:000004A1                 mov     dword ptr [ecx], 4000h
.text:000004A7
.text:000004A7 loc_4A7:                                ; CODE XREF: NArchive::NZip::CItem::GetPosixAttrib(uint &)+5Cj
.text:000004A7                 xor     al, al
.text:000004A9
.text:000004A9 loc_4A9:                                ; CODE XREF: NArchive::NZip::CItem::GetPosixAttrib(uint &)+44j
.text:000004A9                 add     esp, 4
.text:000004AC                 cmp     ebp, esp
.text:000004AE                 call    __RTC_CheckEsp
.text:000004B3                 mov     esp, ebp
.text:000004B5                 pop     ebp
.text:000004B6                 retn    4
.text:000004B6 ?GetPosixAttrib@CItem@NZip@NArchive@@QBE_NAAI@Z endp
.text:000004B6
.text:000004B6 ; ---------------------------------------------------------------------------
.text:000004B9                 align 4
.text:000004B9 _text           ends
.text:000004B9
.rtc$TMZ:000004BC ; ===========================================================================
.rtc$TMZ:000004BC
.rtc$TMZ:000004BC ; Segment type: Pure data
.rtc$TMZ:000004BC ; Segment permissions: Read
.rtc$TMZ:000004BC _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:000004BC                 assume cs:_rtc$TMZ
.rtc$TMZ:000004BC                 ;org 4BCh
.rtc$TMZ:000004BC ; COMDAT (pick any)
.rtc$TMZ:000004BC __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:000004BC _rtc$TMZ        ends
.rtc$TMZ:000004BC
.rtc$IMZ:000004C0 ; ===========================================================================
.rtc$IMZ:000004C0
.rtc$IMZ:000004C0 ; Segment type: Pure data
.rtc$IMZ:000004C0 ; Segment permissions: Read
.rtc$IMZ:000004C0 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:000004C0                 assume cs:_rtc$IMZ
.rtc$IMZ:000004C0                 ;org 4C0h
.rtc$IMZ:000004C0 ; COMDAT (pick any)
.rtc$IMZ:000004C0 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:000004C0 _rtc$IMZ        ends
.rtc$IMZ:000004C0
.text:000004C4 ; ===========================================================================
.text:000004C4
.text:000004C4 ; Segment type: Pure code
.text:000004C4 ; Segment permissions: Read/Execute
.text:000004C4 _text           segment para public 'CODE' use32
.text:000004C4                 assume cs:_text
.text:000004C4                 ;org 4C4h
.text:000004C4 ; COMDAT (pick any)
.text:000004C4                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:000004C4
.text:000004C4 ; =============== S U B R O U T I N E =======================================
.text:000004C4
.text:000004C4 ; Attributes: bp-based frame
.text:000004C4
.text:000004C4 ; unsigned int __thiscall NArchive::NZip::CLocalItem::GetCodePage(NArchive::NZip::CLocalItem *__hidden this)
.text:000004C4                 public ?GetCodePage@CLocalItem@NZip@NArchive@@QBEIXZ
.text:000004C4 ?GetCodePage@CLocalItem@NZip@NArchive@@QBEIXZ proc near
.text:000004C4                                         ; CODE XREF: NArchive::NZip::CLocalItem::IsDir(void)+11p
.text:000004C4
.text:000004C4 var_4           = dword ptr -4
.text:000004C4
.text:000004C4                 push    ebp
.text:000004C5                 mov     ebp, esp
.text:000004C7                 push    ecx
.text:000004C8                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000004CF                 mov     [ebp+var_4], ecx
.text:000004D2                 mov     eax, 1
.text:000004D7                 mov     esp, ebp
.text:000004D9                 pop     ebp
.text:000004DA                 retn
.text:000004DA ?GetCodePage@CLocalItem@NZip@NArchive@@QBEIXZ endp
.text:000004DA
.text:000004DA ; ---------------------------------------------------------------------------
.text:000004DB                 align 4
.text:000004DB _text           ends
.text:000004DB
.text:000004DC ; ===========================================================================
.text:000004DC
.text:000004DC ; Segment type: Pure code
.text:000004DC ; Segment permissions: Read/Execute
.text:000004DC _text           segment para public 'CODE' use32
.text:000004DC                 assume cs:_text
.text:000004DC                 ;org 4DCh
.text:000004DC ; COMDAT (pick any)
.text:000004DC                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:000004DC
.text:000004DC ; =============== S U B R O U T I N E =======================================
.text:000004DC
.text:000004DC ; Attributes: bp-based frame
.text:000004DC
.text:000004DC ; unsigned __int8 __thiscall NArchive::NZip::CItem::GetHostOS(NArchive::NZip::CItem *__hidden this)
.text:000004DC                 public ?GetHostOS@CItem@NZip@NArchive@@QBEEXZ
.text:000004DC ?GetHostOS@CItem@NZip@NArchive@@QBEEXZ proc near
.text:000004DC                                         ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+68p
.text:000004DC                                         ; NArchive::NZip::CItem::GetWinAttrib(void)+28p ...
.text:000004DC
.text:000004DC var_8           = dword ptr -8
.text:000004DC var_4           = dword ptr -4
.text:000004DC
.text:000004DC                 push    ebp
.text:000004DD                 mov     ebp, esp
.text:000004DF                 sub     esp, 8
.text:000004E2                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000004E9                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000004F0                 mov     [ebp+var_4], ecx
.text:000004F3                 mov     eax, [ebp+var_4]
.text:000004F6                 movzx   ecx, byte ptr [eax+5Dh]
.text:000004FA                 test    ecx, ecx
.text:000004FC                 jz      short loc_509
.text:000004FE                 mov     edx, [ebp+var_4]
.text:00000501                 mov     al, [edx+39h]
.text:00000504                 mov     byte ptr [ebp+var_8+3], al
.text:00000507                 jmp     short loc_512
.text:00000509 ; ---------------------------------------------------------------------------
.text:00000509
.text:00000509 loc_509:                                ; CODE XREF: NArchive::NZip::CItem::GetHostOS(void)+20j
.text:00000509                 mov     ecx, [ebp+var_4]
.text:0000050C                 mov     dl, [ecx+5]
.text:0000050F                 mov     byte ptr [ebp+var_8+3], dl
.text:00000512
.text:00000512 loc_512:                                ; CODE XREF: NArchive::NZip::CItem::GetHostOS(void)+2Bj
.text:00000512                 mov     al, byte ptr [ebp+var_8+3]
.text:00000515                 mov     esp, ebp
.text:00000517                 pop     ebp
.text:00000518                 retn
.text:00000518 ?GetHostOS@CItem@NZip@NArchive@@QBEEXZ endp
.text:00000518
.text:00000518 ; ---------------------------------------------------------------------------
.text:00000519                 align 4
.text:00000519 _text           ends
.text:00000519
.text:0000051C ; ===========================================================================
.text:0000051C
.text:0000051C ; Segment type: Pure code
.text:0000051C ; Segment permissions: Read/Execute
.text:0000051C _text           segment para public 'CODE' use32
.text:0000051C                 assume cs:_text
.text:0000051C                 ;org 51Ch
.text:0000051C ; COMDAT (pick any)
.text:0000051C                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:0000051C
.text:0000051C ; =============== S U B R O U T I N E =======================================
.text:0000051C
.text:0000051C ; Attributes: bp-based frame
.text:0000051C
.text:0000051C ; unsigned int __thiscall NArchive::NZip::CItem::GetCodePage(NArchive::NZip::CItem *__hidden this)
.text:0000051C                 public ?GetCodePage@CItem@NZip@NArchive@@QBEIXZ
.text:0000051C ?GetCodePage@CItem@NZip@NArchive@@QBEIXZ proc near
.text:0000051C                                         ; CODE XREF: NArchive::NZip::CItem::IsDir(void)+20p
.text:0000051C
.text:0000051C var_C           = dword ptr -0Ch
.text:0000051C var_8           = dword ptr -8
.text:0000051C var_4           = dword ptr -4
.text:0000051C
.text:0000051C                 push    ebp
.text:0000051D                 mov     ebp, esp
.text:0000051F                 sub     esp, 0Ch
.text:00000522                 mov     [ebp+var_C], 0CCCCCCCCh
.text:00000529                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00000530                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000537                 mov     [ebp+var_4], ecx
.text:0000053A                 mov     ecx, [ebp+var_4] ; this
.text:0000053D                 call    ?GetHostOS@CItem@NZip@NArchive@@QBEEXZ ; NArchive::NZip::CItem::GetHostOS(void)
.text:00000542                 mov     byte ptr [ebp+var_8+3], al
.text:00000545                 movzx   eax, byte ptr [ebp+var_8+3]
.text:00000549                 test    eax, eax
.text:0000054B                 jz      short loc_55F
.text:0000054D                 movzx   ecx, byte ptr [ebp+var_8+3]
.text:00000551                 cmp     ecx, 0Bh
.text:00000554                 jz      short loc_55F
.text:00000556                 mov     [ebp+var_C], 0
.text:0000055D                 jmp     short loc_566
.text:0000055F ; ---------------------------------------------------------------------------
.text:0000055F
.text:0000055F loc_55F:                                ; CODE XREF: NArchive::NZip::CItem::GetCodePage(void)+2Fj
.text:0000055F                                         ; NArchive::NZip::CItem::GetCodePage(void)+38j
.text:0000055F                 mov     [ebp+var_C], 1
.text:00000566
.text:00000566 loc_566:                                ; CODE XREF: NArchive::NZip::CItem::GetCodePage(void)+41j
.text:00000566                 mov     eax, [ebp+var_C]
.text:00000569                 add     esp, 0Ch
.text:0000056C                 cmp     ebp, esp
.text:0000056E                 call    __RTC_CheckEsp
.text:00000573                 mov     esp, ebp
.text:00000575                 pop     ebp
.text:00000576                 retn
.text:00000576 ?GetCodePage@CItem@NZip@NArchive@@QBEIXZ endp
.text:00000576
.text:00000576 ; ---------------------------------------------------------------------------
.text:00000577                 align 4
.text:00000577 _text           ends
.text:00000577
.text:00000578 ; ===========================================================================
.text:00000578
.text:00000578 ; Segment type: Pure code
.text:00000578 ; Segment permissions: Read/Execute
.text:00000578 _text           segment para public 'CODE' use32
.text:00000578                 assume cs:_text
.text:00000578                 ;org 578h
.text:00000578 ; COMDAT (pick any)
.text:00000578                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:00000578
.text:00000578 ; =============== S U B R O U T I N E =======================================
.text:00000578
.text:00000578 ; Attributes: bp-based frame
.text:00000578
.text:00000578 ; public: __thiscall CBuffer<unsigned char>::operator unsigned char const *(void)const
.text:00000578                 public ??B?$CBuffer@E@@QBEPBEXZ
.text:00000578 ??B?$CBuffer@E@@QBEPBEXZ proc near      ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+5Cp
.text:00000578                                         ; NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+55p
.text:00000578
.text:00000578 var_4           = dword ptr -4
.text:00000578
.text:00000578                 push    ebp
.text:00000579                 mov     ebp, esp
.text:0000057B                 push    ecx
.text:0000057C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000583                 mov     [ebp+var_4], ecx
.text:00000586                 mov     eax, [ebp+var_4]
.text:00000589                 mov     eax, [eax]
.text:0000058B                 mov     esp, ebp
.text:0000058D                 pop     ebp
.text:0000058E                 retn
.text:0000058E ??B?$CBuffer@E@@QBEPBEXZ endp
.text:0000058E
.text:0000058E ; ---------------------------------------------------------------------------
.text:0000058F                 align 10h
.text:0000058F _text           ends
.text:0000058F
.text:00000590 ; ===========================================================================
.text:00000590
.text:00000590 ; Segment type: Pure code
.text:00000590 ; Segment permissions: Read/Execute
.text:00000590 _text           segment para public 'CODE' use32
.text:00000590                 assume cs:_text
.text:00000590                 ;org 590h
.text:00000590 ; COMDAT (pick any)
.text:00000590                 assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing, gs:nothing
.text:00000590
.text:00000590 ; =============== S U B R O U T I N E =======================================
.text:00000590
.text:00000590 ; Attributes: bp-based frame
.text:00000590
.text:00000590 ; public: unsigned int __thiscall CBuffer<unsigned char>::Size(void)const
.text:00000590                 public ?Size@?$CBuffer@E@@QBEIXZ
.text:00000590 ?Size@?$CBuffer@E@@QBEIXZ proc near     ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+36p
.text:00000590                                         ; NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+2Cp
.text:00000590
.text:00000590 var_4           = dword ptr -4
.text:00000590
.text:00000590                 push    ebp
.text:00000591                 mov     ebp, esp
.text:00000593                 push    ecx
.text:00000594                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000059B                 mov     [ebp+var_4], ecx
.text:0000059E                 mov     eax, [ebp+var_4]
.text:000005A1                 mov     eax, [eax+4]
.text:000005A4                 mov     esp, ebp
.text:000005A6                 pop     ebp
.text:000005A7                 retn
.text:000005A7 ?Size@?$CBuffer@E@@QBEIXZ endp
.text:000005A7
.text:000005A7 _text           ends
.text:000005A7
UNDEF:000005B0 ; ===========================================================================
UNDEF:000005B0
UNDEF:000005B0 ; Segment type: Externs
UNDEF:000005B0 ; UNDEF
UNDEF:000005B0                 extrn __RTC_CheckEsp:near
UNDEF:000005B0                                         ; CODE XREF: NArchive::NZip::CExtraSubBlock::ExtractNtfsTime(uint,_FILETIME &)+107p
UNDEF:000005B0                                         ; NArchive::NZip::CExtraSubBlock::ExtractUnixTime(bool,uint,uint &)+10Bp ...
UNDEF:000005B4                 extrn __RTC_Shutdown:near
UNDEF:000005B4                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:000005B8                 extrn __RTC_InitBase:near
UNDEF:000005B8                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:000005BC ; bool NArchive::NItemName::HasTailSlash(NArchive::NItemName *__hidden this, const struct AString *, unsigned int)
UNDEF:000005BC                 extrn ?HasTailSlash@NItemName@NArchive@@YG_NABVAString@@I@Z:near
UNDEF:000005BC                                         ; CODE XREF: NArchive::NZip::CLocalItem::IsDir(void)+1Ep
UNDEF:000005BC                                         ; NArchive::NZip::CItem::IsDir(void)+2Dp
UNDEF:000005BC
UNDEF:000005BC
UNDEF:000005BC                 end
; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Common\Sha1Reg.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG66538 DB	'SHA1', 00H
	ORG $+3
_g_HasherInfo DD FLAT:?CreateHasherSpec@@YGPAUIHasher@@XZ
	ORG $+4
	DQ	0000000000000201H
	DD	FLAT:$SG66538
	DD	014H
CONST	ENDS
PUBLIC	?Init@CSha1Hasher@@UAGXXZ			; CSha1Hasher::Init
EXTRN	_Sha1_Init@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\common\sha1reg.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Init@CSha1Hasher@@UAGXXZ PROC				; CSha1Hasher::Init
; Line 26
	push	ebp
	mov	ebp, esp
; Line 27
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	_Sha1_Init@4
; Line 28
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?Init@CSha1Hasher@@UAGXXZ ENDP				; CSha1Hasher::Init
_TEXT	ENDS
PUBLIC	?Update@CSha1Hasher@@UAGXPBXI@Z			; CSha1Hasher::Update
EXTRN	_Sha1_Update@12:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?Update@CSha1Hasher@@UAGXPBXI@Z PROC			; CSha1Hasher::Update
; Line 31
	push	ebp
	mov	ebp, esp
; Line 32
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	call	_Sha1_Update@12
; Line 33
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?Update@CSha1Hasher@@UAGXPBXI@Z ENDP			; CSha1Hasher::Update
_TEXT	ENDS
PUBLIC	?Final@CSha1Hasher@@UAGXPAE@Z			; CSha1Hasher::Final
EXTRN	_Sha1_Final@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_digest$ = 12						; size = 4
?Final@CSha1Hasher@@UAGXPAE@Z PROC			; CSha1Hasher::Final
; Line 36
	push	ebp
	mov	ebp, esp
; Line 37
	mov	eax, DWORD PTR _digest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	call	_Sha1_Final@8
; Line 38
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?Final@CSha1Hasher@@UAGXPAE@Z ENDP			; CSha1Hasher::Final
_TEXT	ENDS
PUBLIC	?GetDigestSize@CSha1Hasher@@UAGIXZ		; CSha1Hasher::GetDigestSize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetDigestSize@CSha1Hasher@@UAGIXZ PROC			; CSha1Hasher::GetDigestSize
; Line 40
	push	ebp
	mov	ebp, esp
	mov	eax, 20					; 00000014H
	pop	ebp
	ret	4
?GetDigestSize@CSha1Hasher@@UAGIXZ ENDP			; CSha1Hasher::GetDigestSize
_TEXT	ENDS
PUBLIC	??0CSha1Hasher@@QAE@XZ				; CSha1Hasher::CSha1Hasher
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
xdata$x	SEGMENT
__unwindtable$?CreateHasherSpec@@YGPAUIHasher@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateHasherSpec@@YGPAUIHasher@@XZ$0
__ehfuncinfo$?CreateHasherSpec@@YGPAUIHasher@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateHasherSpec@@YGPAUIHasher@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv74 = -24						; size = 4
$T66654 = -20						; size = 4
$T66653 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateHasherSpec@@YGPAUIHasher@@XZ PROC		; CreateHasherSpec
; Line 40
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateHasherSpec@@YGPAUIHasher@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	232					; 000000e8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66654[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66654[ebp], 0
	je	SHORT $LN3@CreateHash
	mov	ecx, DWORD PTR $T66654[ebp]
	call	??0CSha1Hasher@@QAE@XZ			; CSha1Hasher::CSha1Hasher
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@CreateHash
$LN3@CreateHash:
	mov	DWORD PTR tv74[ebp], 0
$LN4@CreateHash:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T66653[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T66653[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateHasherSpec@@YGPAUIHasher@@XZ$0:
	mov	eax, DWORD PTR $T66654[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateHasherSpec@@YGPAUIHasher@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateHasherSpec@@YGPAUIHasher@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateHasherSpec@@YGPAUIHasher@@XZ ENDP		; CreateHasherSpec
PUBLIC	??_7CSha1Hasher@@6B@				; CSha1Hasher::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0IHasher@@QAE@XZ				; IHasher::IHasher
PUBLIC	??_R4CSha1Hasher@@6B@				; CSha1Hasher::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSha1Hasher@@@8				; CSha1Hasher `RTTI Type Descriptor'
PUBLIC	??_R3CSha1Hasher@@8				; CSha1Hasher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSha1Hasher@@8				; CSha1Hasher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSha1Hasher@@8			; CSha1Hasher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IHasher@@8			; IHasher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIHasher@@@8				; IHasher `RTTI Type Descriptor'
PUBLIC	??_R3IHasher@@8					; IHasher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IHasher@@8					; IHasher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CSha1Hasher@@UAGJABU_GUID@@PAPAX@Z ; CSha1Hasher::QueryInterface
PUBLIC	?AddRef@CSha1Hasher@@UAGKXZ			; CSha1Hasher::AddRef
PUBLIC	?Release@CSha1Hasher@@UAGKXZ			; CSha1Hasher::Release
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R13?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IHasher@@8
rdata$r	SEGMENT
??_R2IHasher@@8 DD FLAT:??_R1A@?0A@EA@IHasher@@8	; IHasher::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IHasher@@8
rdata$r	SEGMENT
??_R3IHasher@@8 DD 00H					; IHasher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IHasher@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIHasher@@@8
_DATA	SEGMENT
??_R0?AUIHasher@@@8 DD FLAT:??_7type_info@@6B@		; IHasher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIHasher@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IHasher@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IHasher@@8 DD FLAT:??_R0?AUIHasher@@@8	; IHasher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IHasher@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSha1Hasher@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSha1Hasher@@8 DD FLAT:??_R0?AVCSha1Hasher@@@8 ; CSha1Hasher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSha1Hasher@@8
rdata$r	ENDS
;	COMDAT ??_R2CSha1Hasher@@8
rdata$r	SEGMENT
??_R2CSha1Hasher@@8 DD FLAT:??_R1A@?0A@EA@CSha1Hasher@@8 ; CSha1Hasher::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IHasher@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CSha1Hasher@@8
rdata$r	SEGMENT
??_R3CSha1Hasher@@8 DD 00H				; CSha1Hasher::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2CSha1Hasher@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSha1Hasher@@@8
_DATA	SEGMENT
??_R0?AVCSha1Hasher@@@8 DD FLAT:??_7type_info@@6B@	; CSha1Hasher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSha1Hasher@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CSha1Hasher@@6B@
rdata$r	SEGMENT
??_R4CSha1Hasher@@6B@ DD 00H				; CSha1Hasher::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSha1Hasher@@@8
	DD	FLAT:??_R3CSha1Hasher@@8
rdata$r	ENDS
;	COMDAT ??_7CSha1Hasher@@6B@
CONST	SEGMENT
??_7CSha1Hasher@@6B@ DD FLAT:??_R4CSha1Hasher@@6B@	; CSha1Hasher::`vftable'
	DD	FLAT:?QueryInterface@CSha1Hasher@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CSha1Hasher@@UAGKXZ
	DD	FLAT:?Release@CSha1Hasher@@UAGKXZ
	DD	FLAT:?Init@CSha1Hasher@@UAGXXZ
	DD	FLAT:?Update@CSha1Hasher@@UAGXPBXI@Z
	DD	FLAT:?Final@CSha1Hasher@@UAGXPAE@Z
	DD	FLAT:?GetDigestSize@CSha1Hasher@@UAGIXZ
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CSha1Hasher@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CSha1Hasher@@QAE@XZ PROC				; CSha1Hasher::CSha1Hasher, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IHasher@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CSha1Hasher@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	call	_Sha1_Init@4
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CSha1Hasher@@QAE@XZ ENDP				; CSha1Hasher::CSha1Hasher
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CSha1Hasher@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CSha1Hasher@@UAGJABU_GUID@@PAPAX@Z PROC	; CSha1Hasher::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\common\sha1reg.cpp
; Line 21
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter
$LN1@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CSha1Hasher@@UAGJABU_GUID@@PAPAX@Z ENDP	; CSha1Hasher::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CSha1Hasher@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CSha1Hasher@@UAGKXZ PROC			; CSha1Hasher::AddRef, COMDAT
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CSha1Hasher@@UAGKXZ ENDP			; CSha1Hasher::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CSha1Hasher@@UAGKXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
$T66676 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CSha1Hasher@@UAGKXZ PROC			; CSha1Hasher::Release, COMDAT
; Line 21
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T66676[ebp], edx
	mov	eax, DWORD PTR $T66676[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	xor	eax, eax
$LN2@Release:
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CSha1Hasher@@UAGKXZ ENDP			; CSha1Hasher::Release
_TEXT	ENDS
PUBLIC	??_7IHasher@@6B@				; IHasher::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4IHasher@@6B@				; IHasher::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4IHasher@@6B@
rdata$r	SEGMENT
??_R4IHasher@@6B@ DD 00H				; IHasher::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIHasher@@@8
	DD	FLAT:??_R3IHasher@@8
rdata$r	ENDS
;	COMDAT ??_7IHasher@@6B@
CONST	SEGMENT
??_7IHasher@@6B@ DD FLAT:??_R4IHasher@@6B@		; IHasher::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IHasher@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IHasher@@QAE@XZ PROC					; IHasher::IHasher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IHasher@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IHasher@@QAE@XZ ENDP					; IHasher::IHasher
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
_TEXT	ENDS
PUBLIC	??0CRegHasher_CSha1Hasher@@QAE@XZ		; CRegHasher_CSha1Hasher::CRegHasher_CSha1Hasher
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_RegisterHasher@@YAXXZ
text$yc	SEGMENT
??__Eg_RegisterHasher@@YAXXZ PROC			; `dynamic initializer for 'g_RegisterHasher'', COMDAT
; File c:\workspace\7z1505-src\cpp\common\sha1reg.cpp
; Line 40
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_RegisterHasher
	call	??0CRegHasher_CSha1Hasher@@QAE@XZ	; CRegHasher_CSha1Hasher::CRegHasher_CSha1Hasher
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_RegisterHasher@@YAXXZ ENDP			; `dynamic initializer for 'g_RegisterHasher''
text$yc	ENDS
EXTRN	?RegisterHasher@@YGXPBUCHasherInfo@@@Z:PROC	; RegisterHasher
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CRegHasher_CSha1Hasher@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRegHasher_CSha1Hasher@@QAE@XZ PROC			; CRegHasher_CSha1Hasher::CRegHasher_CSha1Hasher, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET _g_HasherInfo
	call	?RegisterHasher@@YGXPBUCHasherInfo@@@Z	; RegisterHasher
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CRegHasher_CSha1Hasher@@QAE@XZ ENDP			; CRegHasher_CSha1Hasher::CRegHasher_CSha1Hasher
_TEXT	ENDS
_BSS	SEGMENT
_g_RegisterHasher DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_g_RegisterHasher$initializer$ DD FLAT:??__Eg_RegisterHasher@@YAXXZ
CRT$XCU	ENDS
END

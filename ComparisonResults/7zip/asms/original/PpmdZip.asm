; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Compress\PpmdZip.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??1CByteInBufWrap@@QAE@XZ			; CByteInBufWrap::~CByteInBufWrap
PUBLIC	??0CBuf@NPpmdZip@NCompress@@QAE@XZ		; NCompress::NPpmdZip::CBuf::CBuf
PUBLIC	??_7CDecoder@NPpmdZip@NCompress@@6B@		; NCompress::NPpmdZip::CDecoder::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ICompressCoder@@QAE@XZ			; ICompressCoder::ICompressCoder
PUBLIC	??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z	; NCompress::NPpmdZip::CDecoder::CDecoder
PUBLIC	??_R4CDecoder@NPpmdZip@NCompress@@6B@		; NCompress::NPpmdZip::CDecoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDecoder@NPpmdZip@NCompress@@@8		; NCompress::NPpmdZip::CDecoder `RTTI Type Descriptor'
PUBLIC	??_R3CDecoder@NPpmdZip@NCompress@@8		; NCompress::NPpmdZip::CDecoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDecoder@NPpmdZip@NCompress@@8		; NCompress::NPpmdZip::CDecoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDecoder@NPpmdZip@NCompress@@8	; NCompress::NPpmdZip::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICompressCoder@@8			; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressCoder@@@8			; ICompressCoder `RTTI Type Descriptor'
PUBLIC	??_R3ICompressCoder@@8				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressCoder@@8				; ICompressCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CDecoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NPpmdZip::CDecoder::QueryInterface
PUBLIC	?AddRef@CDecoder@NPpmdZip@NCompress@@UAGKXZ	; NCompress::NPpmdZip::CDecoder::AddRef
PUBLIC	?Release@CDecoder@NPpmdZip@NCompress@@UAGKXZ	; NCompress::NPpmdZip::CDecoder::Release
PUBLIC	?Code@CDecoder@NPpmdZip@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NPpmdZip::CDecoder::Code
EXTRN	_Ppmd8_Construct@4:PROC
EXTRN	??0CByteInBufWrap@@QAE@XZ:PROC			; CByteInBufWrap::CByteInBufWrap
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R13?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressCoder@@8
rdata$r	SEGMENT
??_R2ICompressCoder@@8 DD FLAT:??_R1A@?0A@EA@ICompressCoder@@8 ; ICompressCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressCoder@@8
rdata$r	SEGMENT
??_R3ICompressCoder@@8 DD 00H				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressCoder@@@8
_DATA	SEGMENT
??_R0?AUICompressCoder@@@8 DD FLAT:??_7type_info@@6B@	; ICompressCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressCoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressCoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressCoder@@8 DD FLAT:??_R0?AUICompressCoder@@@8 ; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDecoder@NPpmdZip@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDecoder@NPpmdZip@NCompress@@8 DD FLAT:??_R0?AVCDecoder@NPpmdZip@NCompress@@@8 ; NCompress::NPpmdZip::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDecoder@NPpmdZip@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CDecoder@NPpmdZip@NCompress@@8
rdata$r	SEGMENT
??_R2CDecoder@NPpmdZip@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CDecoder@NPpmdZip@NCompress@@8 ; NCompress::NPpmdZip::CDecoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CDecoder@NPpmdZip@NCompress@@8
rdata$r	SEGMENT
??_R3CDecoder@NPpmdZip@NCompress@@8 DD 00H		; NCompress::NPpmdZip::CDecoder::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2CDecoder@NPpmdZip@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDecoder@NPpmdZip@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCDecoder@NPpmdZip@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NPpmdZip::CDecoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDecoder@NPpmdZip@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CDecoder@NPpmdZip@NCompress@@6B@
rdata$r	SEGMENT
??_R4CDecoder@NPpmdZip@NCompress@@6B@ DD 00H		; NCompress::NPpmdZip::CDecoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@NPpmdZip@NCompress@@@8
	DD	FLAT:??_R3CDecoder@NPpmdZip@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CDecoder@NPpmdZip@NCompress@@6B@
CONST	SEGMENT
??_7CDecoder@NPpmdZip@NCompress@@6B@ DD FLAT:??_R4CDecoder@NPpmdZip@NCompress@@6B@ ; NCompress::NPpmdZip::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@NPpmdZip@NCompress@@UAGKXZ
	DD	FLAT:?Release@CDecoder@NPpmdZip@NCompress@@UAGKXZ
	DD	FLAT:?Code@CDecoder@NPpmdZip@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z$0
__ehfuncinfo$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_fullFileMode$ = 8					; size = 1
??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z PROC		; NCompress::NPpmdZip::CDecoder::CDecoder
; _this$ = ecx
; Line 17
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CDecoder@NPpmdZip@NCompress@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CByteInBufWrap@@QAE@XZ		; CByteInBufWrap::CByteInBufWrap
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0CBuf@NPpmdZip@NCompress@@QAE@XZ	; NCompress::NPpmdZip::CBuf::CBuf
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _fullFileMode$[ebp]
	mov	BYTE PTR [ecx+7404], dl
; Line 18
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+136], eax
; Line 19
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	call	_Ppmd8_Construct@4
; Line 20
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CByteInBufWrap@@QAE@XZ		; CByteInBufWrap::~CByteInBufWrap
__ehhandler$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDecoder@NPpmdZip@NCompress@@QAE@_N@Z ENDP		; NCompress::NPpmdZip::CDecoder::CDecoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
EXTRN	?Free@CByteInBufWrap@@QAEXXZ:PROC		; CByteInBufWrap::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CByteInBufWrap@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CByteInBufWrap@@QAE@XZ PROC				; CByteInBufWrap::~CByteInBufWrap, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\cwrappers.h
; Line 62
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CByteInBufWrap@@QAEXXZ		; CByteInBufWrap::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CByteInBufWrap@@QAE@XZ ENDP				; CByteInBufWrap::~CByteInBufWrap
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CBuf@NPpmdZip@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBuf@NPpmdZip@NCompress@@QAE@XZ PROC			; NCompress::NPpmdZip::CBuf::CBuf, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBuf@NPpmdZip@NCompress@@QAE@XZ ENDP			; NCompress::NPpmdZip::CBuf::CBuf
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CDecoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CDecoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NPpmdZip::CDecoder::QueryInterface, COMDAT
; Line 43
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter
$LN1@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CDecoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NPpmdZip::CDecoder::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@NPpmdZip@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CDecoder@NPpmdZip@NCompress@@UAGKXZ PROC	; NCompress::NPpmdZip::CDecoder::AddRef, COMDAT
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CDecoder@NPpmdZip@NCompress@@UAGKXZ ENDP	; NCompress::NPpmdZip::CDecoder::AddRef
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
_TEXT	ENDS
PUBLIC	??_GCDecoder@NPpmdZip@NCompress@@QAEPAXI@Z	; NCompress::NPpmdZip::CDecoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CDecoder@NPpmdZip@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T67251 = -8						; size = 4
$T67250 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CDecoder@NPpmdZip@NCompress@@UAGKXZ PROC	; NCompress::NPpmdZip::CDecoder::Release, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.h
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T67251[ebp], edx
	mov	eax, DWORD PTR $T67251[ebp]
	mov	DWORD PTR $T67250[ebp], eax
	cmp	DWORD PTR $T67250[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T67250[ebp]
	call	??_GCDecoder@NPpmdZip@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CDecoder@NPpmdZip@NCompress@@UAGKXZ ENDP	; NCompress::NPpmdZip::CDecoder::Release
_TEXT	ENDS
PUBLIC	??1CDecoder@NPpmdZip@NCompress@@QAE@XZ		; NCompress::NPpmdZip::CDecoder::~CDecoder
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDecoder@NPpmdZip@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDecoder@NPpmdZip@NCompress@@QAEPAXI@Z PROC		; NCompress::NPpmdZip::CDecoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDecoder@NPpmdZip@NCompress@@QAE@XZ	; NCompress::NPpmdZip::CDecoder::~CDecoder
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDecoder@NPpmdZip@NCompress@@QAEPAXI@Z ENDP		; NCompress::NPpmdZip::CDecoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7ICompressCoder@@6B@				; ICompressCoder::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICompressCoder@@6B@			; ICompressCoder::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ICompressCoder@@6B@
rdata$r	SEGMENT
??_R4ICompressCoder@@6B@ DD 00H				; ICompressCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressCoder@@@8
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressCoder@@6B@
CONST	SEGMENT
??_7ICompressCoder@@6B@ DD FLAT:??_R4ICompressCoder@@6B@ ; ICompressCoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressCoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressCoder@@QAE@XZ PROC				; ICompressCoder::ICompressCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressCoder@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressCoder@@QAE@XZ ENDP				; ICompressCoder::ICompressCoder
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??1CBuf@NPpmdZip@NCompress@@QAE@XZ		; NCompress::NPpmdZip::CBuf::~CBuf
EXTRN	_Ppmd8_Free@8:PROC
EXTRN	_g_BigAlloc:QWORD
xdata$x	SEGMENT
__unwindtable$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ$0
__ehfuncinfo$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDecoder@NPpmdZip@NCompress@@QAE@XZ PROC		; NCompress::NPpmdZip::CDecoder::~CDecoder
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.cpp
; Line 23
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CDecoder@NPpmdZip@NCompress@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 24
	push	OFFSET _g_BigAlloc
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	call	_Ppmd8_Free@8
; Line 25
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??1CBuf@NPpmdZip@NCompress@@QAE@XZ	; NCompress::NPpmdZip::CBuf::~CBuf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CByteInBufWrap@@QAE@XZ		; CByteInBufWrap::~CByteInBufWrap
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CByteInBufWrap@@QAE@XZ		; CByteInBufWrap::~CByteInBufWrap
__ehhandler$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDecoder@NPpmdZip@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDecoder@NPpmdZip@NCompress@@QAE@XZ ENDP		; NCompress::NPpmdZip::CDecoder::~CDecoder
EXTRN	_MidFree@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CBuf@NPpmdZip@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBuf@NPpmdZip@NCompress@@QAE@XZ PROC			; NCompress::NPpmdZip::CBuf::~CBuf, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.h
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_MidFree@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CBuf@NPpmdZip@NCompress@@QAE@XZ ENDP			; NCompress::NPpmdZip::CBuf::~CBuf
_TEXT	ENDS
PUBLIC	?GetProcessed@CByteInBufWrap@@QBE_KXZ		; CByteInBufWrap::GetProcessed
PUBLIC	?ReadByte@CByteInBufWrap@@QAEEXZ		; CByteInBufWrap::ReadByte
PUBLIC	?Init@CByteInBufWrap@@QAEXXZ			; CByteInBufWrap::Init
PUBLIC	?Alloc@CBuf@NPpmdZip@NCompress@@QAE_NXZ		; NCompress::NPpmdZip::CBuf::Alloc
EXTRN	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z:PROC ; WriteStream
EXTRN	_Ppmd8_DecodeSymbol@4:PROC
EXTRN	_Ppmd8_Init@12:PROC
EXTRN	_Ppmd8_RangeDec_Init@4:PROC
EXTRN	_Ppmd8_Alloc@12:PROC
EXTRN	?Alloc@CByteInBufWrap@@QAE_NI@Z:PROC		; CByteInBufWrap::Alloc
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv265 = -128						; size = 8
tv249 = -120						; size = 4
___result__$66977 = -116				; size = 4
_res$66976 = -112					; size = 4
___result__$66972 = -108				; size = 4
___result__$66970 = -104				; size = 4
_inSize$66969 = -96					; size = 8
___result__$66961 = -84					; size = 4
___result__$66959 = -80					; size = 4
_sym$66952 = -76					; size = 4
_i$66951 = -72						; size = 4
_data$66950 = -68					; size = 4
_rem$66947 = -64					; size = 8
_size$66945 = -56					; size = 4
_processedSize$ = -48					; size = 8
_wasFinished$ = -33					; size = 1
_restor$66929 = -32					; size = 4
_mem$66928 = -28					; size = 4
_order$66927 = -24					; size = 4
_val$66924 = -20					; size = 4
_i$66918 = -16						; size = 4
_buf$66917 = -8						; size = 2
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_outStream$ = 16					; size = 4
___formal$ = 20						; size = 4
_outSize$ = 24						; size = 4
_progress$ = 28						; size = 4
?Code@CDecoder@NPpmdZip@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NPpmdZip::CDecoder::Code
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.cpp
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-128]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 30
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?Alloc@CBuf@NPpmdZip@NCompress@@QAE_NXZ	; NCompress::NPpmdZip::CBuf::Alloc
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN35@Code
; Line 31
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN36@Code
$LN35@Code:
; Line 32
	push	1048576					; 00100000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Alloc@CByteInBufWrap@@QAE_NI@Z		; CByteInBufWrap::Alloc
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN34@Code
; Line 33
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN36@Code
$LN34@Code:
; Line 35
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _inStream$[ebp]
	mov	DWORD PTR [edx+28], eax
; Line 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@CByteInBufWrap@@QAEXXZ		; CByteInBufWrap::Init
; Line 40
	mov	DWORD PTR _i$66918[ebp], 0
	jmp	SHORT $LN33@Code
$LN32@Code:
	mov	ecx, DWORD PTR _i$66918[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$66918[ebp], ecx
$LN33@Code:
	cmp	DWORD PTR _i$66918[ebp], 2
	jge	SHORT $LN31@Code
; Line 41
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadByte@CByteInBufWrap@@QAEEXZ	; CByteInBufWrap::ReadByte
	mov	edx, DWORD PTR _i$66918[ebp]
	mov	BYTE PTR _buf$66917[ebp+edx], al
	jmp	SHORT $LN32@Code
$LN31@Code:
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	test	ecx, ecx
	je	SHORT $LN30@Code
; Line 43
	mov	eax, 1
	jmp	$LN36@Code
$LN30@Code:
; Line 45
	movzx	edx, WORD PTR _buf$66917[ebp]
	mov	DWORD PTR _val$66924[ebp], edx
; Line 46
	mov	eax, DWORD PTR _val$66924[ebp]
	and	eax, 15					; 0000000fH
	add	eax, 1
	mov	DWORD PTR _order$66927[ebp], eax
; Line 47
	mov	ecx, DWORD PTR _val$66924[ebp]
	shr	ecx, 4
	and	ecx, 255				; 000000ffH
	add	ecx, 1
	mov	DWORD PTR _mem$66928[ebp], ecx
; Line 48
	mov	edx, DWORD PTR _val$66924[ebp]
	shr	edx, 12					; 0000000cH
	mov	DWORD PTR _restor$66929[ebp], edx
; Line 49
	cmp	DWORD PTR _order$66927[ebp], 2
	jb	SHORT $LN28@Code
	cmp	DWORD PTR _restor$66929[ebp], 2
	jbe	SHORT $LN29@Code
$LN28@Code:
; Line 50
	mov	eax, 1
	jmp	$LN36@Code
$LN29@Code:
; Line 53
	cmp	DWORD PTR _restor$66929[ebp], 2
	jne	SHORT $LN27@Code
; Line 54
	mov	eax, -2147467263			; 80004001H
	jmp	$LN36@Code
$LN27@Code:
; Line 57
	push	OFFSET _g_BigAlloc
	mov	eax, DWORD PTR _mem$66928[ebp]
	shl	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	call	_Ppmd8_Alloc@12
	test	eax, eax
	jne	SHORT $LN26@Code
; Line 58
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN36@Code
$LN26@Code:
; Line 60
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	call	_Ppmd8_RangeDec_Init@4
	test	eax, eax
	jne	SHORT $LN25@Code
; Line 61
	mov	eax, 1
	jmp	$LN36@Code
$LN25@Code:
; Line 62
	mov	eax, DWORD PTR _restor$66929[ebp]
	push	eax
	mov	ecx, DWORD PTR _order$66927[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	call	_Ppmd8_Init@12
; Line 65
	mov	BYTE PTR _wasFinished$[ebp], 0
; Line 66
	mov	DWORD PTR _processedSize$[ebp], 0
	mov	DWORD PTR _processedSize$[ebp+4], 0
$LN24@Code:
; Line 67
	cmp	DWORD PTR _outSize$[ebp], 0
	je	SHORT $LN22@Code
	mov	eax, DWORD PTR _outSize$[ebp]
	mov	DWORD PTR tv249[ebp], eax
	mov	ecx, DWORD PTR tv249[ebp]
	mov	edx, DWORD PTR _processedSize$[ebp+4]
	cmp	edx, DWORD PTR [ecx+4]
	ja	$LN23@Code
	jb	SHORT $LN22@Code
	mov	eax, DWORD PTR tv249[ebp]
	mov	ecx, DWORD PTR _processedSize$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	$LN23@Code
$LN22@Code:
; Line 69
	mov	DWORD PTR _size$66945[ebp], 1048576	; 00100000H
; Line 70
	cmp	DWORD PTR _outSize$[ebp], 0
	je	SHORT $LN21@Code
; Line 72
	mov	edx, DWORD PTR _outSize$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, DWORD PTR _processedSize$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	sbb	ecx, DWORD PTR _processedSize$[ebp+4]
	mov	DWORD PTR _rem$66947[ebp], eax
	mov	DWORD PTR _rem$66947[ebp+4], ecx
; Line 73
	mov	edx, DWORD PTR _size$66945[ebp]
	xor	eax, eax
	mov	DWORD PTR tv265[ebp], edx
	mov	DWORD PTR tv265[ebp+4], eax
	mov	ecx, DWORD PTR tv265[ebp+4]
	cmp	ecx, DWORD PTR _rem$66947[ebp+4]
	jb	SHORT $LN21@Code
	ja	SHORT $LN39@Code
	mov	edx, DWORD PTR tv265[ebp]
	cmp	edx, DWORD PTR _rem$66947[ebp]
	jbe	SHORT $LN21@Code
$LN39@Code:
; Line 74
	mov	eax, DWORD PTR _rem$66947[ebp]
	mov	DWORD PTR _size$66945[ebp], eax
$LN21@Code:
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR _data$66950[ebp], edx
; Line 77
	mov	DWORD PTR _i$66951[ebp], 0
; Line 78
	mov	DWORD PTR _sym$66952[ebp], 0
$LN19@Code:
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	call	_Ppmd8_DecodeSymbol@4
	mov	DWORD PTR _sym$66952[ebp], eax
; Line 82
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+40]
	test	edx, edx
	jne	SHORT $LN15@Code
	cmp	DWORD PTR _sym$66952[ebp], 0
	jge	SHORT $LN16@Code
$LN15@Code:
; Line 83
	jmp	SHORT $LN17@Code
$LN16@Code:
; Line 84
	mov	eax, DWORD PTR _data$66950[ebp]
	add	eax, DWORD PTR _i$66951[ebp]
	mov	cl, BYTE PTR _sym$66952[ebp]
	mov	BYTE PTR [eax], cl
; Line 86
	mov	edx, DWORD PTR _i$66951[ebp]
	add	edx, 1
	mov	DWORD PTR _i$66951[ebp], edx
	mov	eax, DWORD PTR _i$66951[ebp]
	cmp	eax, DWORD PTR _size$66945[ebp]
	jne	SHORT $LN19@Code
$LN17@Code:
; Line 87
	mov	ecx, DWORD PTR _i$66951[ebp]
	xor	edx, edx
	add	ecx, DWORD PTR _processedSize$[ebp]
	adc	edx, DWORD PTR _processedSize$[ebp+4]
	mov	DWORD PTR _processedSize$[ebp], ecx
	mov	DWORD PTR _processedSize$[ebp+4], edx
; Line 89
	mov	eax, DWORD PTR _i$66951[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
	mov	DWORD PTR ___result__$66959[ebp], eax
	cmp	DWORD PTR ___result__$66959[ebp], 0
	je	SHORT $LN14@Code
	mov	eax, DWORD PTR ___result__$66959[ebp]
	jmp	$LN36@Code
$LN14@Code:
; Line 91
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR ___result__$66961[ebp], edx
	cmp	DWORD PTR ___result__$66961[ebp], 0
	je	SHORT $LN13@Code
	mov	eax, DWORD PTR ___result__$66961[ebp]
	jmp	$LN36@Code
$LN13@Code:
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	test	ecx, ecx
	je	SHORT $LN12@Code
; Line 93
	mov	eax, 1
	jmp	$LN36@Code
$LN12@Code:
; Line 95
	cmp	DWORD PTR _sym$66952[ebp], 0
	jge	SHORT $LN11@Code
; Line 97
	cmp	DWORD PTR _sym$66952[ebp], -1
	je	SHORT $LN10@Code
; Line 98
	mov	eax, 1
	jmp	$LN36@Code
$LN10@Code:
; Line 99
	mov	BYTE PTR _wasFinished$[ebp], 1
; Line 100
	jmp	SHORT $LN23@Code
$LN11@Code:
; Line 102
	cmp	DWORD PTR _progress$[ebp], 0
	je	SHORT $LN9@Code
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessed@CByteInBufWrap@@QBE_KXZ	; CByteInBufWrap::GetProcessed
	mov	DWORD PTR _inSize$66969[ebp], eax
	mov	DWORD PTR _inSize$66969[ebp+4], edx
; Line 105
	mov	esi, esp
	lea	edx, DWORD PTR _processedSize$[ebp]
	push	edx
	lea	eax, DWORD PTR _inSize$66969[ebp]
	push	eax
	mov	ecx, DWORD PTR _progress$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$66970[ebp], eax
	cmp	DWORD PTR ___result__$66970[ebp], 0
	je	SHORT $LN9@Code
	mov	eax, DWORD PTR ___result__$66970[ebp]
	jmp	SHORT $LN36@Code
$LN9@Code:
; Line 107
	jmp	$LN24@Code
$LN23@Code:
; Line 108
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR ___result__$66972[ebp], eax
	cmp	DWORD PTR ___result__$66972[ebp], 0
	je	SHORT $LN7@Code
	mov	eax, DWORD PTR ___result__$66972[ebp]
	jmp	SHORT $LN36@Code
$LN7@Code:
; Line 109
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+7404]
	test	edx, edx
	je	SHORT $LN6@Code
; Line 111
	movzx	eax, BYTE PTR _wasFinished$[ebp]
	test	eax, eax
	jne	SHORT $LN5@Code
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	call	_Ppmd8_DecodeSymbol@4
	mov	DWORD PTR _res$66976[ebp], eax
; Line 114
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR ___result__$66977[ebp], eax
	cmp	DWORD PTR ___result__$66977[ebp], 0
	je	SHORT $LN4@Code
	mov	eax, DWORD PTR ___result__$66977[ebp]
	jmp	SHORT $LN36@Code
$LN4@Code:
; Line 115
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+40]
	test	edx, edx
	jne	SHORT $LN2@Code
	cmp	DWORD PTR _res$66976[ebp], -1
	je	SHORT $LN5@Code
$LN2@Code:
; Line 116
	mov	eax, 1
	jmp	SHORT $LN36@Code
$LN5@Code:
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN6@Code
; Line 119
	mov	eax, 1
	jmp	SHORT $LN36@Code
$LN6@Code:
; Line 121
	xor	eax, eax
$LN36@Code:
; Line 122
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@Code
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 128				; 00000080H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN44@Code:
	DD	3
	DD	$LN43@Code
$LN43@Code:
	DD	-8					; fffffff8H
	DD	2
	DD	$LN40@Code
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN41@Code
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN42@Code
$LN42@Code:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN41@Code:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN40@Code:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?Code@CDecoder@NPpmdZip@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NPpmdZip::CDecoder::Code
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Init@CByteInBufWrap@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CByteInBufWrap@@QAEXXZ PROC			; CByteInBufWrap::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\cwrappers.h
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	DWORD PTR [eax+28], 0
; Line 69
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+32], 0
; Line 70
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], 0
; Line 71
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CByteInBufWrap@@QAEXXZ ENDP			; CByteInBufWrap::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetProcessed@CByteInBufWrap@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessed@CByteInBufWrap@@QBE_KXZ PROC		; CByteInBufWrap::GetProcessed, COMDAT
; _this$ = ecx
; Line 72
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx+12]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	adc	edx, DWORD PTR [ecx+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessed@CByteInBufWrap@@QBE_KXZ ENDP		; CByteInBufWrap::GetProcessed
_TEXT	ENDS
EXTRN	?ReadByteFromNewBlock@CByteInBufWrap@@QAEEXZ:PROC ; CByteInBufWrap::ReadByteFromNewBlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadByte@CByteInBufWrap@@QAEEXZ
_TEXT	SEGMENT
tv72 = -5						; size = 1
_this$ = -4						; size = 4
?ReadByte@CByteInBufWrap@@QAEEXZ PROC			; CByteInBufWrap::ReadByte, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	je	SHORT $LN1@ReadByte
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv72[ebp], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	al, BYTE PTR tv72[ebp]
	jmp	SHORT $LN2@ReadByte
$LN1@ReadByte:
; Line 78
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByteFromNewBlock@CByteInBufWrap@@QAEEXZ ; CByteInBufWrap::ReadByteFromNewBlock
$LN2@ReadByte:
; Line 79
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadByte@CByteInBufWrap@@QAEEXZ ENDP			; CByteInBufWrap::ReadByte
_TEXT	ENDS
EXTRN	_MidAlloc@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Alloc@CBuf@NPpmdZip@NCompress@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Alloc@CBuf@NPpmdZip@NCompress@@QAE_NXZ PROC		; NCompress::NPpmdZip::CBuf::Alloc, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.h
; Line 27
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@Alloc
; Line 29
	push	1048576					; 00100000H
	call	_MidAlloc@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@Alloc:
; Line 30
	mov	edx, DWORD PTR _this$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx], 0
	setne	al
; Line 31
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Alloc@CBuf@NPpmdZip@NCompress@@QAE_NXZ ENDP		; NCompress::NPpmdZip::CBuf::Alloc
_TEXT	ENDS
PUBLIC	?Normalize@CEncProps@NPpmdZip@NCompress@@QAEXH@Z ; NCompress::NPpmdZip::CEncProps::Normalize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -16						; size = 4
_m$66997 = -12						; size = 4
_kMult$ = -8						; size = 4
_this$ = -4						; size = 4
_level$ = 8						; size = 4
?Normalize@CEncProps@NPpmdZip@NCompress@@QAEXH@Z PROC	; NCompress::NPpmdZip::CEncProps::Normalize
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.cpp
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 129
	cmp	DWORD PTR _level$[ebp], 0
	jge	SHORT $LN12@Normalize
	mov	DWORD PTR _level$[ebp], 5
$LN12@Normalize:
; Line 130
	cmp	DWORD PTR _level$[ebp], 0
	jne	SHORT $LN11@Normalize
	mov	DWORD PTR _level$[ebp], 1
$LN11@Normalize:
; Line 131
	cmp	DWORD PTR _level$[ebp], 9
	jle	SHORT $LN10@Normalize
	mov	DWORD PTR _level$[ebp], 9
$LN10@Normalize:
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN9@Normalize
; Line 133
	cmp	DWORD PTR _level$[ebp], 8
	jle	SHORT $LN15@Normalize
	mov	DWORD PTR tv69[ebp], 8
	jmp	SHORT $LN16@Normalize
$LN15@Normalize:
	mov	ecx, DWORD PTR _level$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
$LN16@Normalize:
	mov	ecx, DWORD PTR tv69[ebp]
	sub	ecx, 1
	mov	edx, 1
	shl	edx, cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], edx
$LN9@Normalize:
; Line 134
	mov	DWORD PTR _kMult$[ebp], 16		; 00000010H
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 20					; 00000014H
	shr	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR [eax+4]
	jbe	SHORT $LN8@Normalize
; Line 137
	mov	DWORD PTR _m$66997[ebp], 1048576	; 00100000H
	jmp	SHORT $LN7@Normalize
$LN6@Normalize:
	mov	ecx, DWORD PTR _m$66997[ebp]
	shl	ecx, 1
	mov	DWORD PTR _m$66997[ebp], ecx
$LN7@Normalize:
	cmp	DWORD PTR _m$66997[ebp], 268435456	; 10000000H
	ja	SHORT $LN8@Normalize
; Line 139
	mov	edx, DWORD PTR _m$66997[ebp]
	shr	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], edx
	ja	SHORT $LN4@Normalize
; Line 141
	mov	ecx, DWORD PTR _m$66997[ebp]
	shr	ecx, 20					; 00000014H
	mov	DWORD PTR _m$66997[ebp], ecx
; Line 142
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR _m$66997[ebp]
	jbe	SHORT $LN3@Normalize
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _m$66997[ebp]
	mov	DWORD PTR [ecx], edx
$LN3@Normalize:
; Line 144
	jmp	SHORT $LN8@Normalize
$LN4@Normalize:
; Line 146
	jmp	SHORT $LN6@Normalize
$LN8@Normalize:
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], -1
	jne	SHORT $LN2@Normalize
	mov	ecx, DWORD PTR _level$[ebp]
	add	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN2@Normalize:
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], -1
	jne	SHORT $LN13@Normalize
; Line 152
	xor	ecx, ecx
	cmp	DWORD PTR _level$[ebp], 7
	setge	cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN13@Normalize:
; Line 153
	mov	esp, ebp
	pop	ebp
	ret	4
?Normalize@CEncProps@NPpmdZip@NCompress@@QAEXH@Z ENDP	; NCompress::NPpmdZip::CEncProps::Normalize
_TEXT	ENDS
PUBLIC	??1CByteOutBufWrap@@QAE@XZ			; CByteOutBufWrap::~CByteOutBufWrap
PUBLIC	??_7CEncoder@NPpmdZip@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NPpmdZip::CEncoder::`vftable'
PUBLIC	??_7CEncoder@NPpmdZip@NCompress@@6BICompressCoder@@@ ; NCompress::NPpmdZip::CEncoder::`vftable'
PUBLIC	??1CEncoder@NPpmdZip@NCompress@@QAE@XZ		; NCompress::NPpmdZip::CEncoder::~CEncoder
PUBLIC	??_R4CEncoder@NPpmdZip@NCompress@@6BICompressCoder@@@ ; NCompress::NPpmdZip::CEncoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEncoder@NPpmdZip@NCompress@@@8		; NCompress::NPpmdZip::CEncoder `RTTI Type Descriptor'
PUBLIC	??_R3CEncoder@NPpmdZip@NCompress@@8		; NCompress::NPpmdZip::CEncoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEncoder@NPpmdZip@NCompress@@8		; NCompress::NPpmdZip::CEncoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEncoder@NPpmdZip@NCompress@@8	; NCompress::NPpmdZip::CEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICompressSetCoderProperties@@@8		; ICompressSetCoderProperties `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	?QueryInterface@CEncoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NPpmdZip::CEncoder::QueryInterface
PUBLIC	?AddRef@CEncoder@NPpmdZip@NCompress@@UAGKXZ	; NCompress::NPpmdZip::CEncoder::AddRef
PUBLIC	?Release@CEncoder@NPpmdZip@NCompress@@UAGKXZ	; NCompress::NPpmdZip::CEncoder::Release
PUBLIC	?Code@CEncoder@NPpmdZip@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NPpmdZip::CEncoder::Code
PUBLIC	??_R4CEncoder@NPpmdZip@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NPpmdZip::CEncoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CEncoder@NPpmdZip@NCompress@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NPpmdZip::CEncoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CEncoder@NPpmdZip@NCompress@@W3AGKXZ	; [thunk]:NCompress::NPpmdZip::CEncoder::AddRef`adjustor{4}'
PUBLIC	?Release@CEncoder@NPpmdZip@NCompress@@W3AGKXZ	; [thunk]:NCompress::NPpmdZip::CEncoder::Release`adjustor{4}'
PUBLIC	?SetCoderProperties@CEncoder@NPpmdZip@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z ; NCompress::NPpmdZip::CEncoder::SetCoderProperties
;	COMDAT ??_R4CEncoder@NPpmdZip@NCompress@@6BICompressSetCoderProperties@@@
rdata$r	SEGMENT
??_R4CEncoder@NPpmdZip@NCompress@@6BICompressSetCoderProperties@@@ DD 00H ; NCompress::NPpmdZip::CEncoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@NPpmdZip@NCompress@@@8
	DD	FLAT:??_R3CEncoder@NPpmdZip@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R17?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R2ICompressSetCoderProperties@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetCoderProperties@@8 ; ICompressSetCoderProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R3ICompressSetCoderProperties@@8 DD 00H		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetCoderProperties@@@8
_DATA	SEGMENT
??_R0?AUICompressSetCoderProperties@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetCoderProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetCoderProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEncoder@NPpmdZip@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEncoder@NPpmdZip@NCompress@@8 DD FLAT:??_R0?AVCEncoder@NPpmdZip@NCompress@@@8 ; NCompress::NPpmdZip::CEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEncoder@NPpmdZip@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CEncoder@NPpmdZip@NCompress@@8
rdata$r	SEGMENT
??_R2CEncoder@NPpmdZip@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CEncoder@NPpmdZip@NCompress@@8 ; NCompress::NPpmdZip::CEncoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressSetCoderProperties@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CEncoder@NPpmdZip@NCompress@@8
rdata$r	SEGMENT
??_R3CEncoder@NPpmdZip@NCompress@@8 DD 00H		; NCompress::NPpmdZip::CEncoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	06H
	DD	FLAT:??_R2CEncoder@NPpmdZip@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEncoder@NPpmdZip@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCEncoder@NPpmdZip@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NPpmdZip::CEncoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEncoder@NPpmdZip@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CEncoder@NPpmdZip@NCompress@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CEncoder@NPpmdZip@NCompress@@6BICompressCoder@@@ DD 00H ; NCompress::NPpmdZip::CEncoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@NPpmdZip@NCompress@@@8
	DD	FLAT:??_R3CEncoder@NPpmdZip@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CEncoder@NPpmdZip@NCompress@@6BICompressSetCoderProperties@@@
CONST	SEGMENT
??_7CEncoder@NPpmdZip@NCompress@@6BICompressSetCoderProperties@@@ DD FLAT:??_R4CEncoder@NPpmdZip@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NPpmdZip::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@NPpmdZip@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@NPpmdZip@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CEncoder@NPpmdZip@NCompress@@W3AGKXZ
	DD	FLAT:?SetCoderProperties@CEncoder@NPpmdZip@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z
CONST	ENDS
;	COMDAT ??_7CEncoder@NPpmdZip@NCompress@@6BICompressCoder@@@
CONST	SEGMENT
??_7CEncoder@NPpmdZip@NCompress@@6BICompressCoder@@@ DD FLAT:??_R4CEncoder@NPpmdZip@NCompress@@6BICompressCoder@@@ ; NCompress::NPpmdZip::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@NPpmdZip@NCompress@@UAGKXZ
	DD	FLAT:?Release@CEncoder@NPpmdZip@NCompress@@UAGKXZ
	DD	FLAT:?Code@CEncoder@NPpmdZip@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ$0
__ehfuncinfo$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CEncoder@NPpmdZip@NCompress@@QAE@XZ PROC		; NCompress::NPpmdZip::CEncoder::~CEncoder
; _this$ = ecx
; Line 156
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CEncoder@NPpmdZip@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CEncoder@NPpmdZip@NCompress@@6BICompressSetCoderProperties@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 157
	push	OFFSET _g_BigAlloc
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	call	_Ppmd8_Free@8
; Line 158
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1CBuf@NPpmdZip@NCompress@@QAE@XZ	; NCompress::NPpmdZip::CBuf::~CBuf
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1CByteOutBufWrap@@QAE@XZ		; CByteOutBufWrap::~CByteOutBufWrap
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1CByteOutBufWrap@@QAE@XZ		; CByteOutBufWrap::~CByteOutBufWrap
__ehhandler$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CEncoder@NPpmdZip@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CEncoder@NPpmdZip@NCompress@@QAE@XZ ENDP		; NCompress::NPpmdZip::CEncoder::~CEncoder
EXTRN	?Free@CByteOutBufWrap@@QAEXXZ:PROC		; CByteOutBufWrap::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CByteOutBufWrap@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CByteOutBufWrap@@QAE@XZ PROC				; CByteOutBufWrap::~CByteOutBufWrap, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\cwrappers.h
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CByteOutBufWrap@@QAEXXZ		; CByteOutBufWrap::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CByteOutBufWrap@@QAE@XZ ENDP				; CByteOutBufWrap::~CByteOutBufWrap
_TEXT	ENDS
EXTRN	_IID_ICompressSetCoderProperties:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CEncoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv86 = -8						; size = 4
tv75 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CEncoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NPpmdZip::CEncoder::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.h
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN7@QueryInter@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN8@QueryInter@2
$LN7@QueryInter@2:
	mov	DWORD PTR tv75[ebp], 0
$LN8@QueryInter@2:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@QueryInter@2
$LN4@QueryInter@2:
	push	OFFSET _IID_ICompressSetCoderProperties
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN9@QueryInter@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN10@QueryInter@2
$LN9@QueryInter@2:
	mov	DWORD PTR tv86[ebp], 0
$LN10@QueryInter@2:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN3@QueryInter@2
$LN2@QueryInter@2:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN5@QueryInter@2
$LN3@QueryInter@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
	xor	eax, eax
$LN5@QueryInter@2:
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CEncoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NPpmdZip::CEncoder::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@NPpmdZip@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CEncoder@NPpmdZip@NCompress@@UAGKXZ PROC	; NCompress::NPpmdZip::CEncoder::AddRef, COMDAT
; Line 77
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CEncoder@NPpmdZip@NCompress@@UAGKXZ ENDP	; NCompress::NPpmdZip::CEncoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCEncoder@NPpmdZip@NCompress@@QAEPAXI@Z	; NCompress::NPpmdZip::CEncoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CEncoder@NPpmdZip@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T67309 = -8						; size = 4
$T67308 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CEncoder@NPpmdZip@NCompress@@UAGKXZ PROC	; NCompress::NPpmdZip::CEncoder::Release, COMDAT
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	jmp	SHORT $LN2@Release@2
$LN1@Release@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T67309[ebp], edx
	mov	eax, DWORD PTR $T67309[ebp]
	mov	DWORD PTR $T67308[ebp], eax
	cmp	DWORD PTR $T67308[ebp], 0
	je	SHORT $LN4@Release@2
	push	1
	mov	ecx, DWORD PTR $T67308[ebp]
	call	??_GCEncoder@NPpmdZip@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release@2
$LN4@Release@2:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release@2:
	xor	eax, eax
$LN2@Release@2:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CEncoder@NPpmdZip@NCompress@@UAGKXZ ENDP	; NCompress::NPpmdZip::CEncoder::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GCEncoder@NPpmdZip@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCEncoder@NPpmdZip@NCompress@@QAEPAXI@Z PROC		; NCompress::NPpmdZip::CEncoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CEncoder@NPpmdZip@NCompress@@QAE@XZ	; NCompress::NPpmdZip::CEncoder::~CEncoder
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCEncoder@NPpmdZip@NCompress@@QAEPAXI@Z ENDP		; NCompress::NPpmdZip::CEncoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0CEncProps@NPpmdZip@NCompress@@QAE@XZ		; NCompress::NPpmdZip::CEncProps::CEncProps
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv84 = -52						; size = 4
tv138 = -48						; size = 4
_v$67030 = -44						; size = 4
_propID$67021 = -40					; size = 4
_prop$67020 = -36					; size = 4
_i$67016 = -32						; size = 4
_props$ = -24						; size = 16
_level$ = -4						; size = 4
_this$ = 8						; size = 4
_propIDs$ = 12						; size = 4
_coderProps$ = 16					; size = 4
_numProps$ = 20						; size = 4
?SetCoderProperties@CEncoder@NPpmdZip@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z PROC ; NCompress::NPpmdZip::CEncoder::SetCoderProperties
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.cpp
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 162
	mov	DWORD PTR _level$[ebp], -1
; Line 163
	lea	ecx, DWORD PTR _props$[ebp]
	call	??0CEncProps@NPpmdZip@NCompress@@QAE@XZ	; NCompress::NPpmdZip::CEncProps::CEncProps
; Line 164
	mov	DWORD PTR _i$67016[ebp], 0
	jmp	SHORT $LN20@SetCoderPr
$LN19@SetCoderPr:
	mov	eax, DWORD PTR _i$67016[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67016[ebp], eax
$LN20@SetCoderPr:
	mov	ecx, DWORD PTR _i$67016[ebp]
	cmp	ecx, DWORD PTR _numProps$[ebp]
	jae	$LN18@SetCoderPr
; Line 166
	mov	edx, DWORD PTR _i$67016[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _coderProps$[ebp]
	mov	DWORD PTR _prop$67020[ebp], edx
; Line 167
	mov	eax, DWORD PTR _i$67016[ebp]
	mov	ecx, DWORD PTR _propIDs$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _propID$67021[ebp], edx
; Line 168
	cmp	DWORD PTR _propID$67021[ebp], 16	; 00000010H
	jbe	SHORT $LN17@SetCoderPr
; Line 169
	jmp	SHORT $LN19@SetCoderPr
$LN17@SetCoderPr:
; Line 170
	cmp	DWORD PTR _propID$67021[ebp], 16	; 00000010H
	jne	SHORT $LN16@SetCoderPr
; Line 172
	mov	eax, DWORD PTR _prop$67020[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 21					; 00000015H
	jne	SHORT $LN15@SetCoderPr
	mov	edx, DWORD PTR _prop$67020[ebp]
	mov	DWORD PTR tv138[ebp], edx
	mov	eax, DWORD PTR tv138[ebp]
	cmp	DWORD PTR [eax+12], 0
	ja	SHORT $LN15@SetCoderPr
	jb	SHORT $LN23@SetCoderPr
	mov	ecx, DWORD PTR tv138[ebp]
	cmp	DWORD PTR [ecx+8], -1
	jae	SHORT $LN15@SetCoderPr
$LN23@SetCoderPr:
; Line 173
	mov	edx, DWORD PTR _prop$67020[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _props$[ebp+4], eax
$LN15@SetCoderPr:
; Line 174
	jmp	SHORT $LN19@SetCoderPr
$LN16@SetCoderPr:
; Line 176
	mov	ecx, DWORD PTR _prop$67020[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 19					; 00000013H
	je	SHORT $LN14@SetCoderPr
; Line 177
	mov	eax, -2147024809			; 80070057H
	jmp	$LN21@SetCoderPr
$LN14@SetCoderPr:
; Line 178
	mov	eax, DWORD PTR _prop$67020[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _v$67030[ebp], ecx
; Line 179
	mov	edx, DWORD PTR _propID$67021[ebp]
	mov	DWORD PTR tv84[ebp], edx
	mov	eax, DWORD PTR tv84[ebp]
	sub	eax, 2
	mov	DWORD PTR tv84[ebp], eax
	cmp	DWORD PTR tv84[ebp], 13			; 0000000dH
	ja	SHORT $LN1@SetCoderPr
	mov	ecx, DWORD PTR tv84[ebp]
	movzx	edx, BYTE PTR $LN24@SetCoderPr[ecx]
	jmp	DWORD PTR $LN28@SetCoderPr[edx*4]
$LN11@SetCoderPr:
; Line 182
	cmp	DWORD PTR _v$67030[ebp], 1048576	; 00100000H
	jb	SHORT $LN9@SetCoderPr
	cmp	DWORD PTR _v$67030[ebp], 268435456	; 10000000H
	jbe	SHORT $LN10@SetCoderPr
$LN9@SetCoderPr:
; Line 183
	mov	eax, -2147024809			; 80070057H
	jmp	$LN21@SetCoderPr
$LN10@SetCoderPr:
; Line 184
	mov	eax, DWORD PTR _v$67030[ebp]
	shr	eax, 20					; 00000014H
	mov	DWORD PTR _props$[ebp], eax
; Line 185
	jmp	SHORT $LN12@SetCoderPr
$LN8@SetCoderPr:
; Line 187
	cmp	DWORD PTR _v$67030[ebp], 2
	jb	SHORT $LN6@SetCoderPr
	cmp	DWORD PTR _v$67030[ebp], 16		; 00000010H
	jbe	SHORT $LN7@SetCoderPr
$LN6@SetCoderPr:
; Line 188
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN21@SetCoderPr
$LN7@SetCoderPr:
; Line 189
	movzx	ecx, BYTE PTR _v$67030[ebp]
	mov	DWORD PTR _props$[ebp+8], ecx
; Line 190
	jmp	SHORT $LN12@SetCoderPr
$LN5@SetCoderPr:
; Line 191
	jmp	SHORT $LN12@SetCoderPr
$LN4@SetCoderPr:
; Line 192
	mov	edx, DWORD PTR _v$67030[ebp]
	mov	DWORD PTR _level$[ebp], edx
	jmp	SHORT $LN12@SetCoderPr
$LN3@SetCoderPr:
; Line 194
	cmp	DWORD PTR _v$67030[ebp], 1
	jbe	SHORT $LN2@SetCoderPr
; Line 195
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN21@SetCoderPr
$LN2@SetCoderPr:
; Line 196
	mov	eax, DWORD PTR _v$67030[ebp]
	mov	DWORD PTR _props$[ebp+12], eax
; Line 197
	jmp	SHORT $LN12@SetCoderPr
$LN1@SetCoderPr:
; Line 198
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN21@SetCoderPr
$LN12@SetCoderPr:
; Line 200
	jmp	$LN19@SetCoderPr
$LN18@SetCoderPr:
; Line 201
	mov	ecx, DWORD PTR _level$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _props$[ebp]
	call	?Normalize@CEncProps@NPpmdZip@NCompress@@QAEXH@Z ; NCompress::NPpmdZip::CEncProps::Normalize
; Line 202
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 7408				; 00001cf0H
	mov	eax, DWORD PTR _props$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _props$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _props$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _props$[ebp+12]
	mov	DWORD PTR [edx+12], ecx
; Line 203
	xor	eax, eax
$LN21@SetCoderPr:
; Line 204
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@SetCoderPr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN27@SetCoderPr:
	DD	1
	DD	$LN26@SetCoderPr
$LN26@SetCoderPr:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN25@SetCoderPr
$LN25@SetCoderPr:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
	npad	2
$LN28@SetCoderPr:
	DD	$LN11@SetCoderPr
	DD	$LN8@SetCoderPr
	DD	$LN3@SetCoderPr
	DD	$LN5@SetCoderPr
	DD	$LN4@SetCoderPr
	DD	$LN1@SetCoderPr
$LN24@SetCoderPr:
	DB	0
	DB	1
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	2
	DB	3
	DB	5
	DB	4
?SetCoderProperties@CEncoder@NPpmdZip@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z ENDP ; NCompress::NPpmdZip::CEncoder::SetCoderProperties
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CEncProps@NPpmdZip@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CEncProps@NPpmdZip@NCompress@@QAE@XZ PROC		; NCompress::NPpmdZip::CEncProps::CEncProps, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.h
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
; Line 60
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], -1
; Line 61
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], -1
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CEncProps@NPpmdZip@NCompress@@QAE@XZ ENDP		; NCompress::NPpmdZip::CEncProps::CEncProps
_TEXT	ENDS
PUBLIC	??0ICompressSetCoderProperties@@QAE@XZ		; ICompressSetCoderProperties::ICompressSetCoderProperties
PUBLIC	??0CEncoder@NPpmdZip@NCompress@@QAE@XZ		; NCompress::NPpmdZip::CEncoder::CEncoder
EXTRN	??0CByteOutBufWrap@@QAE@XZ:PROC			; CByteOutBufWrap::CByteOutBufWrap
xdata$x	SEGMENT
__unwindtable$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ$1
__ehfuncinfo$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CEncoder@NPpmdZip@NCompress@@QAE@XZ PROC		; NCompress::NPpmdZip::CEncoder::CEncoder
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\ppmdzip.cpp
; Line 207
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ICompressSetCoderProperties@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CEncoder@NPpmdZip@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CEncoder@NPpmdZip@NCompress@@6BICompressSetCoderProperties@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CByteOutBufWrap@@QAE@XZ		; CByteOutBufWrap::CByteOutBufWrap
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0CBuf@NPpmdZip@NCompress@@QAE@XZ	; NCompress::NPpmdZip::CBuf::CBuf
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7412				; 00001cf4H
	call	??0CEncProps@NPpmdZip@NCompress@@QAE@XZ	; NCompress::NPpmdZip::CEncProps::CEncProps
; Line 208
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7412				; 00001cf4H
	call	?Normalize@CEncProps@NPpmdZip@NCompress@@QAEXH@Z ; NCompress::NPpmdZip::CEncProps::Normalize
; Line 209
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+144], edx
; Line 210
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	call	_Ppmd8_Construct@4
; Line 211
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1CByteOutBufWrap@@QAE@XZ		; CByteOutBufWrap::~CByteOutBufWrap
__unwindfunclet$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1CBuf@NPpmdZip@NCompress@@QAE@XZ	; NCompress::NPpmdZip::CBuf::~CBuf
__ehhandler$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CEncoder@NPpmdZip@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CEncoder@NPpmdZip@NCompress@@QAE@XZ ENDP		; NCompress::NPpmdZip::CEncoder::CEncoder
PUBLIC	??_7ICompressSetCoderProperties@@6B@		; ICompressSetCoderProperties::`vftable'
PUBLIC	??_R4ICompressSetCoderProperties@@6B@		; ICompressSetCoderProperties::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetCoderProperties@@6B@
rdata$r	SEGMENT
??_R4ICompressSetCoderProperties@@6B@ DD 00H		; ICompressSetCoderProperties::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetCoderProperties@@@8
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetCoderProperties@@6B@
CONST	SEGMENT
??_7ICompressSetCoderProperties@@6B@ DD FLAT:??_R4ICompressSetCoderProperties@@6B@ ; ICompressSetCoderProperties::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetCoderProperties@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetCoderProperties@@QAE@XZ PROC		; ICompressSetCoderProperties::ICompressSetCoderProperties, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetCoderProperties@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetCoderProperties@@QAE@XZ ENDP		; ICompressSetCoderProperties::ICompressSetCoderProperties
_TEXT	ENDS
PUBLIC	?GetProcessed@CByteOutBufWrap@@QBE_KXZ		; CByteOutBufWrap::GetProcessed
PUBLIC	?WriteByte@CByteOutBufWrap@@QAEXE@Z		; CByteOutBufWrap::WriteByte
PUBLIC	?Init@CByteOutBufWrap@@QAEXXZ			; CByteOutBufWrap::Init
EXTRN	?Flush@CByteOutBufWrap@@QAEJXZ:PROC		; CByteOutBufWrap::Flush
EXTRN	_Ppmd8_RangeEnc_FlushData@4:PROC
EXTRN	_Ppmd8_EncodeSymbol@8:PROC
EXTRN	?Alloc@CByteOutBufWrap@@QAE_NI@Z:PROC		; CByteOutBufWrap::Alloc
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$67095 = -68					; size = 4
_outSize$67094 = -60					; size = 8
___result__$67091 = -48					; size = 4
_i$67087 = -44						; size = 4
___result__$67084 = -40					; size = 4
_size$67083 = -32					; size = 4
_processed$ = -20					; size = 8
___result__$67077 = -8					; size = 4
_val$ = -4						; size = 4
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_outStream$ = 16					; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
_progress$ = 28						; size = 4
?Code@CEncoder@NPpmdZip@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NPpmdZip::CEncoder::Code
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 216
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Alloc@CBuf@NPpmdZip@NCompress@@QAE_NXZ	; NCompress::NPpmdZip::CBuf::Alloc
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN14@Code@2
; Line 217
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN15@Code@2
$LN14@Code@2:
; Line 218
	push	1048576					; 00100000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Alloc@CByteOutBufWrap@@QAE_NI@Z	; CByteOutBufWrap::Alloc
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN13@Code@2
; Line 219
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN15@Code@2
$LN13@Code@2:
; Line 220
	push	OFFSET _g_BigAlloc
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+7412]
	shl	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	call	_Ppmd8_Alloc@12
	test	eax, eax
	jne	SHORT $LN12@Code@2
; Line 221
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN15@Code@2
$LN12@Code@2:
; Line 223
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _outStream$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 224
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Init@CByteOutBufWrap@@QAEXXZ		; CByteOutBufWrap::Init
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+140], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+132], -1
; Line 227
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+7424]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+7420]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	call	_Ppmd8_Init@12
; Line 229
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+7420]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+7412]
	sub	edx, 1
	shl	edx, 4
	lea	eax, DWORD PTR [eax+edx-1]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+7424]
	shl	edx, 12					; 0000000cH
	add	eax, edx
	mov	DWORD PTR _val$[ebp], eax
; Line 230
	mov	eax, DWORD PTR _val$[ebp]
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?WriteByte@CByteOutBufWrap@@QAEXE@Z	; CByteOutBufWrap::WriteByte
; Line 231
	mov	ecx, DWORD PTR _val$[ebp]
	shr	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?WriteByte@CByteOutBufWrap@@QAEXE@Z	; CByteOutBufWrap::WriteByte
; Line 232
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR ___result__$67077[ebp], eax
	cmp	DWORD PTR ___result__$67077[ebp], 0
	je	SHORT $LN11@Code@2
	mov	eax, DWORD PTR ___result__$67077[ebp]
	jmp	$LN15@Code@2
$LN11@Code@2:
; Line 234
	mov	DWORD PTR _processed$[ebp], 0
	mov	DWORD PTR _processed$[ebp+4], 0
$LN10@Code@2:
; Line 238
	mov	esi, esp
	lea	ecx, DWORD PTR _size$67083[ebp]
	push	ecx
	push	1048576					; 00100000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR _inStream$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67084[ebp], eax
	cmp	DWORD PTR ___result__$67084[ebp], 0
	je	SHORT $LN8@Code@2
	mov	eax, DWORD PTR ___result__$67084[ebp]
	jmp	$LN15@Code@2
$LN8@Code@2:
; Line 239
	cmp	DWORD PTR _size$67083[ebp], 0
	jne	SHORT $LN7@Code@2
; Line 241
	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	call	_Ppmd8_EncodeSymbol@8
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	call	_Ppmd8_RangeEnc_FlushData@4
; Line 243
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Flush@CByteOutBufWrap@@QAEJXZ		; CByteOutBufWrap::Flush
	jmp	$LN15@Code@2
$LN7@Code@2:
; Line 245
	mov	DWORD PTR _i$67087[ebp], 0
	jmp	SHORT $LN6@Code@2
$LN5@Code@2:
	mov	ecx, DWORD PTR _i$67087[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67087[ebp], ecx
$LN6@Code@2:
	mov	edx, DWORD PTR _i$67087[ebp]
	cmp	edx, DWORD PTR _size$67083[ebp]
	jae	SHORT $LN4@Code@2
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	edx, DWORD PTR _i$67087[ebp]
	movzx	eax, BYTE PTR [ecx+edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	call	_Ppmd8_EncodeSymbol@8
; Line 248
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR ___result__$67091[ebp], eax
	cmp	DWORD PTR ___result__$67091[ebp], 0
	je	SHORT $LN3@Code@2
	mov	eax, DWORD PTR ___result__$67091[ebp]
	jmp	SHORT $LN15@Code@2
$LN3@Code@2:
; Line 249
	jmp	SHORT $LN5@Code@2
$LN4@Code@2:
; Line 250
	mov	ecx, DWORD PTR _size$67083[ebp]
	xor	edx, edx
	add	ecx, DWORD PTR _processed$[ebp]
	adc	edx, DWORD PTR _processed$[ebp+4]
	mov	DWORD PTR _processed$[ebp], ecx
	mov	DWORD PTR _processed$[ebp+4], edx
; Line 251
	cmp	DWORD PTR _progress$[ebp], 0
	je	SHORT $LN2@Code@2
; Line 253
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetProcessed@CByteOutBufWrap@@QBE_KXZ	; CByteOutBufWrap::GetProcessed
	mov	DWORD PTR _outSize$67094[ebp], eax
	mov	DWORD PTR _outSize$67094[ebp+4], edx
; Line 254
	mov	esi, esp
	lea	eax, DWORD PTR _outSize$67094[ebp]
	push	eax
	lea	ecx, DWORD PTR _processed$[ebp]
	push	ecx
	mov	edx, DWORD PTR _progress$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _progress$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67095[ebp], eax
	cmp	DWORD PTR ___result__$67095[ebp], 0
	je	SHORT $LN2@Code@2
	mov	eax, DWORD PTR ___result__$67095[ebp]
	jmp	SHORT $LN15@Code@2
$LN2@Code@2:
; Line 256
	jmp	$LN10@Code@2
$LN15@Code@2:
; Line 257
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@Code@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN21@Code@2:
	DD	3
	DD	$LN20@Code@2
$LN20@Code@2:
	DD	-20					; ffffffecH
	DD	8
	DD	$LN17@Code@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN18@Code@2
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN19@Code@2
$LN19@Code@2:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN18@Code@2:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN17@Code@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?Code@CEncoder@NPpmdZip@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NPpmdZip::CEncoder::Code
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Init@CByteOutBufWrap@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CByteOutBufWrap@@QAEXXZ PROC			; CByteOutBufWrap::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\cwrappers.h
; Line 98
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+4], edx
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+16]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 101
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [ecx+28], 0
; Line 102
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0
; Line 103
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CByteOutBufWrap@@QAEXXZ ENDP			; CByteOutBufWrap::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetProcessed@CByteOutBufWrap@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessed@CByteOutBufWrap@@QBE_KXZ PROC		; CByteOutBufWrap::GetProcessed, COMDAT
; _this$ = ecx
; Line 104
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx+12]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	adc	edx, DWORD PTR [ecx+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessed@CByteOutBufWrap@@QBE_KXZ ENDP		; CByteOutBufWrap::GetProcessed
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?WriteByte@CByteOutBufWrap@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?WriteByte@CByteOutBufWrap@@QAEXE@Z PROC		; CByteOutBufWrap::WriteByte, COMDAT
; _this$ = ecx
; Line 107
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	dl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@WriteByte
; Line 110
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@CByteOutBufWrap@@QAEJXZ		; CByteOutBufWrap::Flush
$LN2@WriteByte:
; Line 111
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteByte@CByteOutBufWrap@@QAEXE@Z ENDP		; CByteOutBufWrap::WriteByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CEncoder@NPpmdZip@NCompress@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CEncoder@NPpmdZip@NCompress@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NPpmdZip::CEncoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CEncoder@NPpmdZip@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NPpmdZip::CEncoder::QueryInterface
?QueryInterface@CEncoder@NPpmdZip@NCompress@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NPpmdZip::CEncoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CEncoder@NPpmdZip@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?Release@CEncoder@NPpmdZip@NCompress@@W3AGKXZ PROC	; [thunk]:NCompress::NPpmdZip::CEncoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CEncoder@NPpmdZip@NCompress@@UAGKXZ ; NCompress::NPpmdZip::CEncoder::Release
?Release@CEncoder@NPpmdZip@NCompress@@W3AGKXZ ENDP	; [thunk]:NCompress::NPpmdZip::CEncoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@NPpmdZip@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CEncoder@NPpmdZip@NCompress@@W3AGKXZ PROC	; [thunk]:NCompress::NPpmdZip::CEncoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CEncoder@NPpmdZip@NCompress@@UAGKXZ ; NCompress::NPpmdZip::CEncoder::AddRef
?AddRef@CEncoder@NPpmdZip@NCompress@@W3AGKXZ ENDP	; [thunk]:NCompress::NPpmdZip::CEncoder::AddRef`adjustor{4}'
_TEXT	ENDS
END

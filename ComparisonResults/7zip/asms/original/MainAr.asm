; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\UI\Console\MainAr.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?g_IsNT@@3_NA					; g_IsNT
PUBLIC	?g_StdStream@@3PAVCStdOutStream@@A		; g_StdStream
PUBLIC	?g_ErrStream@@3PAVCStdOutStream@@A		; g_ErrStream
_BSS	SEGMENT
?g_IsNT@@3_NA DB 01H DUP (?)				; g_IsNT
	ALIGN	4

?g_StdStream@@3PAVCStdOutStream@@A DD 01H DUP (?)	; g_StdStream
?g_ErrStream@@3PAVCStdOutStream@@A DD 01H DUP (?)	; g_ErrStream
_BSS	ENDS
_DATA	SEGMENT
_kException_CmdLine_Error_Message DD FLAT:$SG75854
_kExceptionErrorMessage DD FLAT:$SG75856
_kUserBreakMessage DD FLAT:$SG75858
_kMemoryExceptionMessage DD FLAT:$SG75860
_kUnknownExceptionMessage DD FLAT:$SG75862
_kInternalExceptionMessage DD FLAT:$SG75864
_DATA	ENDS
CONST	SEGMENT
$SG75854 DB	'Command Line Error:', 00H
$SG75856 DB	'ERROR:', 00H
	ORG $+1
$SG75858 DB	'Break signaled', 00H
	ORG $+1
$SG75860 DB	'ERROR: Can''t allocate required memory!', 00H
	ORG $+1
$SG75862 DB	'Unknown Error', 00H
	ORG $+2
$SG75864 DB	0aH, 0aH, 'Internal Error #', 00H
	ORG $+1
$SG75872 DB	0aH, 0aH, 00H
	ORG $+1
$SG75897 DB	'System ERROR:', 00H
CONST	ENDS
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	??6CStdOutStream@@QAEAAV0@PBD@Z			; CStdOutStream::operator<<
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z	; CStdOutStream::operator<<
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	_main
PUBLIC	??_R0?AVCNewException@@@8			; CNewException `RTTI Type Descriptor'
PUBLIC	??_R0?AVCCtrlBreakException@NConsoleClose@@@8	; NConsoleClose::CCtrlBreakException `RTTI Type Descriptor'
PUBLIC	??_R0?AUCArcCmdLineException@@@8		; CArcCmdLineException `RTTI Type Descriptor'
PUBLIC	??_R0?AUCSystemException@@@8			; CSystemException `RTTI Type Descriptor'
PUBLIC	??_R0?AW4EEnum@NExitCode@@@8			; enum NExitCode::EEnum `RTTI Type Descriptor'
PUBLIC	??_R0?AVUString@@@8				; UString `RTTI Type Descriptor'
PUBLIC	??_R0?AVAString@@@8				; AString `RTTI Type Descriptor'
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	??_R0PA_W@8					; wchar_t * `RTTI Type Descriptor'
PUBLIC	??_R0H@8					; int `RTTI Type Descriptor'
EXTRN	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ:PROC ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
EXTRN	??6CStdOutStream@@QAEAAV0@H@Z:PROC		; CStdOutStream::operator<<
EXTRN	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z:PROC ; NWindows::NError::MyFormatMessage
EXTRN	??6CStdOutStream@@QAEAAV0@PB_W@Z:PROC		; CStdOutStream::operator<<
EXTRN	?endl@@YGAAVCStdOutStream@@AAV1@@Z:PROC		; endl
EXTRN	?Main2@@YGHXZ:PROC				; Main2
EXTRN	??0CCtrlHandlerSetter@NConsoleClose@@QAE@XZ:PROC ; NConsoleClose::CCtrlHandlerSetter::CCtrlHandlerSetter
EXTRN	?g_StdOut@@3VCStdOutStream@@A:QWORD		; g_StdOut
EXTRN	?g_StdErr@@3VCStdOutStream@@A:QWORD		; g_StdErr
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0H@8
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\mainar.cpp
_DATA	SEGMENT
??_R0H@8 DD	FLAT:??_7type_info@@6B@			; int `RTTI Type Descriptor'
	DD	00H
	DB	'.H', 00H
_DATA	ENDS
;	COMDAT ??_R0PA_W@8
_DATA	SEGMENT
??_R0PA_W@8 DD	FLAT:??_7type_info@@6B@			; wchar_t * `RTTI Type Descriptor'
	DD	00H
	DB	'.PA_W', 00H
_DATA	ENDS
;	COMDAT ??_R0PAD@8
_DATA	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVAString@@@8
_DATA	SEGMENT
??_R0?AVAString@@@8 DD FLAT:??_7type_info@@6B@		; AString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAString@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVUString@@@8
_DATA	SEGMENT
??_R0?AVUString@@@8 DD FLAT:??_7type_info@@6B@		; UString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUString@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AW4EEnum@NExitCode@@@8
_DATA	SEGMENT
??_R0?AW4EEnum@NExitCode@@@8 DD FLAT:??_7type_info@@6B@	; enum NExitCode::EEnum `RTTI Type Descriptor'
	DD	00H
	DB	'.?AW4EEnum@NExitCode@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AUCSystemException@@@8
_DATA	SEGMENT
??_R0?AUCSystemException@@@8 DD FLAT:??_7type_info@@6B@	; CSystemException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCSystemException@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AUCArcCmdLineException@@@8
_DATA	SEGMENT
??_R0?AUCArcCmdLineException@@@8 DD FLAT:??_7type_info@@6B@ ; CArcCmdLineException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCArcCmdLineException@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVCCtrlBreakException@NConsoleClose@@@8
_DATA	SEGMENT
??_R0?AVCCtrlBreakException@NConsoleClose@@@8 DD FLAT:??_7type_info@@6B@ ; NConsoleClose::CCtrlBreakException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCtrlBreakException@NConsoleClose@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVCNewException@@@8
_DATA	SEGMENT
??_R0?AVCNewException@@@8 DD FLAT:??_7type_info@@6B@	; CNewException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNewException@@', 00H
_DATA	ENDS
xdata$x	SEGMENT
__tryblocktable$_main DD 01H
	DD	01H
	DD	03H
	DD	0bH
	DD	FLAT:__catchsym$_main$14
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$12
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$_main$13
__ehfuncinfo$_main DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$_main
	DD	01H
	DD	FLAT:__tryblocktable$_main
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__catchsym$_main$14 DD 09H
	DD	FLAT:??_R0?AVCNewException@@@8
	DD	00H
	DD	FLAT:__catch$_main$0
	DD	09H
	DD	FLAT:??_R0?AVCCtrlBreakException@NConsoleClose@@@8
	DD	00H
	DD	FLAT:__catch$_main$1
	DD	09H
	DD	FLAT:??_R0?AUCArcCmdLineException@@@8
	DD	0ffffffd8H
	DD	FLAT:__catch$_main$2
	DD	09H
	DD	FLAT:??_R0?AUCSystemException@@@8
	DD	0ffffffccH
	DD	FLAT:__catch$_main$3
	DD	08H
	DD	FLAT:??_R0?AW4EEnum@NExitCode@@@8
	DD	0ffffffc0H
	DD	FLAT:__catch$_main$4
	DD	09H
	DD	FLAT:??_R0?AVUString@@@8
	DD	0ffffffb4H
	DD	FLAT:__catch$_main$5
	DD	09H
	DD	FLAT:??_R0?AVAString@@@8
	DD	0ffffffa8H
	DD	FLAT:__catch$_main$6
	DD	01H
	DD	FLAT:??_R0PAD@8
	DD	0ffffff9cH
	DD	FLAT:__catch$_main$7
	DD	01H
	DD	FLAT:??_R0PA_W@8
	DD	0ffffff90H
	DD	FLAT:__catch$_main$8
	DD	00H
	DD	FLAT:??_R0H@8
	DD	0ffffff84H
	DD	FLAT:__catch$_main$9
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$_main$10
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv197 = -208						; size = 4
tv216 = -204						; size = 4
tv66 = -200						; size = 4
$T76895 = -196						; size = 4
$T76894 = -192						; size = 4
$T76893 = -188						; size = 4
$T76892 = -184						; size = 4
$T76891 = -180						; size = 4
$T76890 = -176						; size = 4
$T76889 = -172						; size = 4
$T76888 = -168						; size = 4
$T76887 = -164						; size = 4
$T76886 = -160						; size = 12
$T76885 = -148						; size = 4
$T76884 = -144						; size = 4
$T76883 = -140						; size = 4
$T76882 = -136						; size = 4
$T76881 = -132						; size = 4
_t$75920 = -124						; size = 4
_s$75916 = -112						; size = 4
_s$75912 = -100						; size = 4
_s$75908 = -88						; size = 4
_s$75904 = -76						; size = 4
_exitCode$75900 = -64					; size = 4
_systemError$75888 = -52				; size = 4
_e$75884 = -40						; size = 4
_res$ = -32						; size = 4
_ctrlHandlerSetter$ = -24				; size = 4
__$EHRec$ = -16						; size = 16
_main	PROC
; Line 55
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 56
	mov	DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A, OFFSET ?g_StdErr@@3VCStdOutStream@@A ; g_ErrStream, g_StdErr
; Line 57
	mov	DWORD PTR ?g_StdStream@@3PAVCStdOutStream@@A, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdStream, g_StdOut
; Line 59
	call	?IsItWindowsNT@@YG_NXZ			; IsItWindowsNT
	mov	BYTE PTR ?g_IsNT@@3_NA, al		; g_IsNT
; Line 61
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??0CCtrlHandlerSetter@NConsoleClose@@QAE@XZ ; NConsoleClose::CCtrlHandlerSetter::CCtrlHandlerSetter
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 62
	mov	DWORD PTR _res$[ebp], 0
; Line 65
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 70
	call	?Main2@@YGHXZ				; Main2
	mov	DWORD PTR tv66[ebp], eax
	mov	eax, DWORD PTR tv66[ebp]
	mov	DWORD PTR _res$[ebp], eax
; Line 71
	jmp	$LN14@main
__catch$_main$0:
; Line 74
	mov	ecx, DWORD PTR _kMemoryExceptionMessage
	push	ecx
	call	?PrintError@@YGXPBD@Z			; PrintError
; Line 75
	mov	DWORD PTR $T76881[ebp], 8
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN29@main
	ret	0
; Line 76
	mov	eax, __tryend$_main$11
	ret	0
__catch$_main$1:
; Line 79
	mov	edx, DWORD PTR _kUserBreakMessage
	push	edx
	call	?PrintError@@YGXPBD@Z			; PrintError
; Line 80
	mov	DWORD PTR $T76882[ebp], 255		; 000000ffH
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN31@main
	ret	0
; Line 81
	mov	eax, __tryend$_main$11
	ret	0
__catch$_main$2:
; Line 84
	mov	eax, DWORD PTR _kException_CmdLine_Error_Message
	push	eax
	call	?PrintError@@YGXPBD@Z			; PrintError
; Line 85
	cmp	DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A, 0 ; g_ErrStream
	je	SHORT $LN10@main
; Line 86
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _e$75884[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN10@main:
; Line 87
	mov	DWORD PTR $T76883[ebp], 7
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN33@main
	ret	0
; Line 88
	mov	eax, __tryend$_main$11
	ret	0
__catch$_main$3:
; Line 91
	mov	ecx, DWORD PTR _systemError$75888[ebp]
	cmp	DWORD PTR [ecx], -2147024882		; 8007000eH
	jne	SHORT $LN9@main
; Line 93
	mov	edx, DWORD PTR _kMemoryExceptionMessage
	push	edx
	call	?PrintError@@YGXPBD@Z			; PrintError
; Line 94
	mov	DWORD PTR $T76884[ebp], 8
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN35@main
	ret	0
$LN9@main:
; Line 96
	mov	eax, DWORD PTR _systemError$75888[ebp]
	cmp	DWORD PTR [eax], -2147467260		; 80004004H
	jne	SHORT $LN8@main
; Line 98
	mov	ecx, DWORD PTR _kUserBreakMessage
	push	ecx
	call	?PrintError@@YGXPBD@Z			; PrintError
; Line 99
	mov	DWORD PTR $T76885[ebp], 255		; 000000ffH
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN37@main
	ret	0
$LN8@main:
; Line 101
	cmp	DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A, 0 ; g_ErrStream
	je	SHORT $LN7@main
; Line 103
	push	OFFSET $SG75897
	call	?PrintError@@YGXPBD@Z			; PrintError
; Line 104
	mov	edx, DWORD PTR _systemError$75888[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T76886[ebp]
	push	ecx
	call	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z ; NWindows::NError::MyFormatMessage
	mov	DWORD PTR tv216[ebp], eax
	mov	edx, DWORD PTR tv216[ebp]
	mov	DWORD PTR tv197[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR tv197[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T76886[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN7@main:
; Line 106
	mov	DWORD PTR $T76887[ebp], 2
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN39@main
	ret	0
; Line 107
	mov	eax, __tryend$_main$11
	ret	0
__catch$_main$4:
; Line 110
	call	?FlushStreams@@YGXXZ			; FlushStreams
; Line 111
	cmp	DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A, 0 ; g_ErrStream
	je	SHORT $LN6@main
; Line 112
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _exitCode$75900[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _kInternalExceptionMessage
	push	edx
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@H@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN6@main:
; Line 113
	mov	eax, DWORD PTR _exitCode$75900[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T76888[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN41@main
	ret	0
; Line 114
	mov	eax, __tryend$_main$11
	ret	0
__catch$_main$5:
; Line 117
	cmp	DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A, 0 ; g_ErrStream
	je	SHORT $LN5@main
; Line 119
	mov	edx, DWORD PTR _kExceptionErrorMessage
	push	edx
	call	?PrintError@@YGXPBD@Z			; PrintError
; Line 120
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _s$75904[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN5@main:
; Line 122
	mov	DWORD PTR $T76889[ebp], 2
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN43@main
	ret	0
; Line 123
	mov	eax, __tryend$_main$11
	ret	0
__catch$_main$6:
; Line 126
	cmp	DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A, 0 ; g_ErrStream
	je	SHORT $LN4@main
; Line 128
	mov	eax, DWORD PTR _kExceptionErrorMessage
	push	eax
	call	?PrintError@@YGXPBD@Z			; PrintError
; Line 129
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _s$75908[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN4@main:
; Line 131
	mov	DWORD PTR $T76890[ebp], 2
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN45@main
	ret	0
; Line 132
	mov	eax, __tryend$_main$11
	ret	0
__catch$_main$7:
; Line 135
	cmp	DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A, 0 ; g_ErrStream
	je	SHORT $LN3@main
; Line 137
	mov	ecx, DWORD PTR _kExceptionErrorMessage
	push	ecx
	call	?PrintError@@YGXPBD@Z			; PrintError
; Line 138
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _s$75912[ebp]
	push	edx
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN3@main:
; Line 140
	mov	DWORD PTR $T76891[ebp], 2
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN47@main
	ret	0
; Line 141
	mov	eax, __tryend$_main$11
	ret	0
__catch$_main$8:
; Line 144
	cmp	DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A, 0 ; g_ErrStream
	je	SHORT $LN2@main
; Line 146
	mov	eax, DWORD PTR _kExceptionErrorMessage
	push	eax
	call	?PrintError@@YGXPBD@Z			; PrintError
; Line 147
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _s$75916[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN2@main:
; Line 149
	mov	DWORD PTR $T76892[ebp], 2
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN49@main
	ret	0
; Line 150
	mov	eax, __tryend$_main$11
	ret	0
__catch$_main$9:
; Line 153
	cmp	DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A, 0 ; g_ErrStream
	je	SHORT $LN1@main
; Line 155
	call	?FlushStreams@@YGXXZ			; FlushStreams
; Line 156
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _t$75920[ebp]
	push	edx
	mov	eax, DWORD PTR _kInternalExceptionMessage
	push	eax
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@H@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 157
	mov	DWORD PTR $T76893[ebp], 2
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN51@main
	ret	0
$LN1@main:
; Line 159
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$_main$11
	ret	0
__catch$_main$10:
; Line 162
	mov	ecx, DWORD PTR _kUnknownExceptionMessage
	push	ecx
	call	?PrintError@@YGXPBD@Z			; PrintError
; Line 163
	mov	DWORD PTR $T76894[ebp], 2
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN55@main
	ret	0
; Line 164
	mov	eax, __tryend$_main$11
	ret	0
$LN14@main:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT __tryend$_main$11
$LN55@main:
; Line 163
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76894[ebp]
	jmp	$LN12@main
__tryend$_main$11:
	jmp	SHORT $LN50@main
$LN51@main:
; Line 157
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76893[ebp]
	jmp	$LN12@main
$LN50@main:
	jmp	SHORT $LN48@main
$LN49@main:
; Line 149
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76892[ebp]
	jmp	$LN12@main
$LN48@main:
	jmp	SHORT $LN46@main
$LN47@main:
; Line 140
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76891[ebp]
	jmp	$LN12@main
$LN46@main:
	jmp	SHORT $LN44@main
$LN45@main:
; Line 131
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76890[ebp]
	jmp	$LN12@main
$LN44@main:
	jmp	SHORT $LN42@main
$LN43@main:
; Line 122
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76889[ebp]
	jmp	$LN12@main
$LN42@main:
	jmp	SHORT $LN40@main
$LN41@main:
; Line 113
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76888[ebp]
	jmp	$LN12@main
$LN40@main:
	jmp	SHORT $LN38@main
$LN39@main:
; Line 106
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76887[ebp]
	jmp	$LN12@main
$LN38@main:
	jmp	SHORT $LN36@main
$LN37@main:
; Line 99
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76885[ebp]
	jmp	$LN12@main
$LN36@main:
	jmp	SHORT $LN34@main
$LN35@main:
; Line 94
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76884[ebp]
	jmp	SHORT $LN12@main
$LN34@main:
	jmp	SHORT $LN32@main
$LN33@main:
; Line 87
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76883[ebp]
	jmp	SHORT $LN12@main
$LN32@main:
	jmp	SHORT $LN30@main
$LN31@main:
; Line 80
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76882[ebp]
	jmp	SHORT $LN12@main
$LN30@main:
	jmp	SHORT $LN28@main
$LN29@main:
; Line 75
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76881[ebp]
	jmp	SHORT $LN12@main
$LN28@main:
; Line 166
	mov	edx, DWORD PTR _res$[ebp]
	mov	DWORD PTR $T76895[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	call	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
	mov	eax, DWORD PTR $T76895[ebp]
$LN12@main:
; Line 167
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN81@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN81@main:
	DD	9
	DD	$LN80@main
$LN80@main:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN70@main
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN71@main
	DD	-52					; ffffffccH
	DD	4
	DD	$LN72@main
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN73@main
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN74@main
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN75@main
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN76@main
	DD	-112					; ffffff90H
	DD	4
	DD	$LN77@main
	DD	-124					; ffffff84H
	DD	4
	DD	$LN78@main
$LN78@main:
	DB	116					; 00000074H
	DB	0
$LN77@main:
	DB	115					; 00000073H
	DB	0
$LN76@main:
	DB	115					; 00000073H
	DB	0
$LN75@main:
	DB	115					; 00000073H
	DB	0
$LN74@main:
	DB	115					; 00000073H
	DB	0
$LN73@main:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN72@main:
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN71@main:
	DB	101					; 00000065H
	DB	0
$LN70@main:
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	108					; 0000006cH
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$_main$12:
	lea	ecx, DWORD PTR _ctrlHandlerSetter$[ebp]
	jmp	??1CCtrlHandlerSetter@NConsoleClose@@UAE@XZ ; NConsoleClose::CCtrlHandlerSetter::~CCtrlHandlerSetter
__unwindfunclet$_main$13:
	lea	ecx, DWORD PTR $T76886[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T76985 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T76985[ebp], ecx
	mov	edx, DWORD PTR $T76985[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_func$ = 8						; size = 4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z PROC	; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 29
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR _func$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ENDP	; CStdOutStream::operator<<
_TEXT	ENDS
EXTRN	__imp__fputs:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??6CStdOutStream@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??6CStdOutStream@@QAEAAV0@PBD@Z PROC			; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
; Line 38
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@PBD@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__GetVersionExA@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -164						; size = 4
_vi$ = -156						; size = 148
__$ArrayPad$ = -4					; size = 4
?IsItWindowsNT@@YG_NXZ PROC				; IsItWindowsNT
; File c:\workspace\7z1505-src\cpp\windows\ntcheck.h
; Line 10
	push	ebp
	mov	ebp, esp
	sub	esp, 164				; 000000a4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-164]
	mov	ecx, 41					; 00000029H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 12
	mov	DWORD PTR _vi$[ebp], 148		; 00000094H
; Line 13
	mov	esi, esp
	lea	eax, DWORD PTR _vi$[ebp]
	push	eax
	call	DWORD PTR __imp__GetVersionExA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@IsItWindow
	cmp	DWORD PTR _vi$[ebp+16], 2
	jne	SHORT $LN3@IsItWindow
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@IsItWindow
$LN3@IsItWindow:
	mov	DWORD PTR tv68[ebp], 0
$LN4@IsItWindow:
	mov	al, BYTE PTR tv68[ebp]
; Line 14
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@IsItWindow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 164				; 000000a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@IsItWindow:
	DD	1
	DD	$LN6@IsItWindow
$LN6@IsItWindow:
	DD	-156					; ffffff64H
	DD	148					; 00000094H
	DD	$LN5@IsItWindow
$LN5@IsItWindow:
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	0
?IsItWindowsNT@@YG_NXZ ENDP				; IsItWindowsNT
_TEXT	ENDS
EXTRN	?Flush@CStdOutStream@@QAE_NXZ:PROC		; CStdOutStream::Flush
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?FlushStreams@@YGXXZ PROC				; FlushStreams
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\mainar.cpp
; Line 35
	push	ebp
	mov	ebp, esp
; Line 36
	cmp	DWORD PTR ?g_StdStream@@3PAVCStdOutStream@@A, 0 ; g_StdStream
	je	SHORT $LN2@FlushStrea
; Line 37
	mov	ecx, DWORD PTR ?g_StdStream@@3PAVCStdOutStream@@A ; g_StdStream
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN2@FlushStrea:
; Line 38
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?FlushStreams@@YGXXZ ENDP				; FlushStreams
; Function compile flags: /Odtp /RTCsu
_message$ = 8						; size = 4
?PrintError@@YGXPBD@Z PROC				; PrintError
; Line 41
	push	ebp
	mov	ebp, esp
; Line 42
	call	?FlushStreams@@YGXXZ			; FlushStreams
; Line 43
	cmp	DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A, 0 ; g_ErrStream
	je	SHORT $LN2@PrintError
; Line 44
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _message$[ebp]
	push	eax
	push	OFFSET $SG75872
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN2@PrintError:
; Line 45
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?PrintError@@YGXPBD@Z ENDP				; PrintError
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Common\MethodProps.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG67999 DB	'ON', 00H
$SG68220 DB	00H
$SG68003 DB	'OFF', 00H
$SG68221 DB	'd', 00H
	ORG $+2
$SG68222 DB	'mem', 00H
$SG68223 DB	'o', 00H
	ORG $+2
$SG68224 DB	'c', 00H
	ORG $+2
$SG68225 DB	'pb', 00H
	ORG $+1
$SG68226 DB	'lc', 00H
	ORG $+1
$SG68227 DB	'lp', 00H
	ORG $+1
$SG68228 DB	'fb', 00H
	ORG $+1
$SG68229 DB	'mf', 00H
	ORG $+1
$SG68230 DB	'mc', 00H
	ORG $+1
$SG68231 DB	'pass', 00H
	ORG $+3
$SG68232 DB	'a', 00H
	ORG $+2
$SG68233 DB	'mt', 00H
	ORG $+1
$SG68234 DB	'eos', 00H
$SG68235 DB	'x', 00H
	ORG $+2
$SG68236 DB	'reduceSize', 00H
	ORG $+1
$SG68453 DB	'm', 00H
	ORG $+2
_g_NameToPropID DW 013H
	ORG $+2
	DD	FLAT:$SG68220
	DW	013H
	ORG $+2
	DD	FLAT:$SG68221
	DW	013H
	ORG $+2
	DD	FLAT:$SG68222
	DW	013H
	ORG $+2
	DD	FLAT:$SG68223
	DW	013H
	ORG $+2
	DD	FLAT:$SG68224
	DW	013H
	ORG $+2
	DD	FLAT:$SG68225
	DW	013H
	ORG $+2
	DD	FLAT:$SG68226
	DW	013H
	ORG $+2
	DD	FLAT:$SG68227
	DW	013H
	ORG $+2
	DD	FLAT:$SG68228
	DW	08H
	ORG $+2
	DD	FLAT:$SG68229
	DW	013H
	ORG $+2
	DD	FLAT:$SG68230
	DW	013H
	ORG $+2
	DD	FLAT:$SG68231
	DW	013H
	ORG $+2
	DD	FLAT:$SG68232
	DW	013H
	ORG $+2
	DD	FLAT:$SG68233
	DW	0bH
	ORG $+2
	DD	FLAT:$SG68234
	DW	013H
	ORG $+2
	DD	FLAT:$SG68235
	DW	013H
	ORG $+2
	DD	FLAT:$SG68236
CONST	ENDS
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	?StringToBool@@YG_NABVUString@@AA_N@Z		; StringToBool
EXTRN	?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z:PROC ; StringsAreEqualNoCase_Ascii
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\common\methodprops.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_s$ = 8							; size = 4
_res$ = 12						; size = 4
?StringToBool@@YG_NABVUString@@AA_N@Z PROC		; StringToBool
; Line 12
	push	ebp
	mov	ebp, esp
; Line 13
	mov	ecx, DWORD PTR _s$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@StringToBo
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 43					; 0000002bH
	jne	SHORT $LN4@StringToBo
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	edx, WORD PTR [eax+2]
	test	edx, edx
	je	SHORT $LN5@StringToBo
$LN4@StringToBo:
	push	OFFSET $SG67999
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z ; StringsAreEqualNoCase_Ascii
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@StringToBo
$LN5@StringToBo:
; Line 15
	mov	ecx, DWORD PTR _res$[ebp]
	mov	BYTE PTR [ecx], 1
; Line 16
	mov	al, 1
	jmp	SHORT $LN7@StringToBo
$LN6@StringToBo:
; Line 18
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	edx, WORD PTR [eax]
	cmp	edx, 45					; 0000002dH
	jne	SHORT $LN1@StringToBo
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	eax, WORD PTR [eax+2]
	test	eax, eax
	je	SHORT $LN2@StringToBo
$LN1@StringToBo:
	push	OFFSET $SG68003
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z ; StringsAreEqualNoCase_Ascii
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@StringToBo
$LN2@StringToBo:
; Line 20
	mov	edx, DWORD PTR _res$[ebp]
	mov	BYTE PTR [edx], 0
; Line 21
	mov	al, 1
	jmp	SHORT $LN7@StringToBo
$LN3@StringToBo:
; Line 23
	xor	al, al
$LN7@StringToBo:
; Line 24
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?StringToBool@@YG_NABVUString@@AA_N@Z ENDP		; StringToBool
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z ; PROPVARIANT_to_bool
EXTRN	??0UString@@QAE@PB_W@Z:PROC			; UString::UString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
xdata$x	SEGMENT
__unwindtable$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z$0
__ehfuncinfo$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv65 = -32						; size = 4
$T68636 = -28						; size = 12
$T68635 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_prop$ = 8						; size = 4
_dest$ = 12						; size = 4
?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z PROC	; PROPVARIANT_to_bool
; File c:\workspace\7z1505-src\cpp\7zip\common\methodprops.cpp
; Line 27
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 28
	mov	eax, DWORD PTR _prop$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $LN3@PROPVARIAN
	cmp	DWORD PTR tv65[ebp], 8
	je	SHORT $LN1@PROPVARIAN
	cmp	DWORD PTR tv65[ebp], 11			; 0000000bH
	je	SHORT $LN2@PROPVARIAN
	jmp	SHORT $LN4@PROPVARIAN
$LN3@PROPVARIAN:
; Line 30
	mov	edx, DWORD PTR _dest$[ebp]
	mov	BYTE PTR [edx], 1
	xor	eax, eax
	jmp	SHORT $LN6@PROPVARIAN
$LN2@PROPVARIAN:
; Line 31
	mov	eax, DWORD PTR _prop$[ebp]
	movsx	ecx, WORD PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	mov	BYTE PTR [edx], cl
	xor	eax, eax
	jmp	SHORT $LN6@PROPVARIAN
$LN1@PROPVARIAN:
; Line 32
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	ecx, DWORD PTR $T68636[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	lea	eax, DWORD PTR $T68636[ebp]
	push	eax
	call	?StringToBool@@YG_NABVUString@@AA_N@Z	; StringToBool
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 2147024809				; 7ff8ffa9H
	add	ecx, -2147024809			; 80070057H
	mov	DWORD PTR $T68635[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T68636[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T68635[ebp]
	jmp	SHORT $LN6@PROPVARIAN
$LN4@PROPVARIAN:
; Line 34
	mov	eax, -2147024809			; 80070057H
$LN6@PROPVARIAN:
; Line 35
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z$0:
	lea	ecx, DWORD PTR $T68636[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z ENDP	; PROPVARIANT_to_bool
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T68648 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68648[ebp], ecx
	mov	edx, DWORD PTR $T68648[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
_TEXT	ENDS
PUBLIC	?ParseStringToUInt32@@YGIABVUString@@AAI@Z	; ParseStringToUInt32
EXTRN	?ConvertStringToUInt32@@YGIPB_WPAPB_W@Z:PROC	; ConvertStringToUInt32
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_end$ = -12						; size = 4
_start$ = -4						; size = 4
_srcString$ = 8						; size = 4
_number$ = 12						; size = 4
?ParseStringToUInt32@@YGIABVUString@@AAI@Z PROC		; ParseStringToUInt32
; File c:\workspace\7z1505-src\cpp\7zip\common\methodprops.cpp
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 39
	mov	ecx, DWORD PTR _srcString$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR _start$[ebp], eax
; Line 41
	lea	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	call	?ConvertStringToUInt32@@YGIPB_WPAPB_W@Z	; ConvertStringToUInt32
	mov	edx, DWORD PTR _number$[ebp]
	mov	DWORD PTR [edx], eax
; Line 42
	mov	eax, DWORD PTR _end$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	sar	eax, 1
; Line 43
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ParseStrin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN5@ParseStrin:
	DD	1
	DD	$LN4@ParseStrin
$LN4@ParseStrin:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@ParseStrin
$LN3@ParseStrin:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
?ParseStringToUInt32@@YGIABVUString@@AAI@Z ENDP		; ParseStringToUInt32
_TEXT	ENDS
PUBLIC	?Len@UString@@QBEIXZ				; UString::Len
PUBLIC	?ParsePropToUInt32@@YGJABVUString@@ABUtagPROPVARIANT@@AAI@Z ; ParsePropToUInt32
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_v$ = -8						; size = 4
_name$ = 8						; size = 4
_prop$ = 12						; size = 4
_resValue$ = 16						; size = 4
?ParsePropToUInt32@@YGJABVUString@@ABUtagPROPVARIANT@@AAI@Z PROC ; ParsePropToUInt32
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 51
	mov	eax, DWORD PTR _prop$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 19					; 00000013H
	jne	SHORT $LN5@ParsePropT
; Line 53
	mov	ecx, DWORD PTR _name$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@ParsePropT
; Line 54
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN6@ParsePropT
$LN4@ParsePropT:
; Line 55
	mov	eax, DWORD PTR _resValue$[ebp]
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx
; Line 56
	xor	eax, eax
	jmp	SHORT $LN6@ParsePropT
$LN5@ParsePropT:
; Line 58
	mov	eax, DWORD PTR _prop$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@ParsePropT
; Line 59
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN6@ParsePropT
$LN3@ParsePropT:
; Line 60
	mov	ecx, DWORD PTR _name$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@ParsePropT
; Line 61
	xor	eax, eax
	jmp	SHORT $LN6@ParsePropT
$LN2@ParsePropT:
; Line 63
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	?ParseStringToUInt32@@YGIABVUString@@AAI@Z ; ParseStringToUInt32
	mov	esi, eax
	mov	ecx, DWORD PTR _name$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	esi, eax
	je	SHORT $LN1@ParsePropT
; Line 64
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN6@ParsePropT
$LN1@ParsePropT:
; Line 65
	mov	edx, DWORD PTR _resValue$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR [edx], eax
; Line 66
	xor	eax, eax
$LN6@ParsePropT:
; Line 67
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ParsePropT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN10@ParsePropT:
	DD	1
	DD	$LN9@ParsePropT
$LN9@ParsePropT:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN8@ParsePropT
$LN8@ParsePropT:
	DB	118					; 00000076H
	DB	0
?ParsePropToUInt32@@YGJABVUString@@ABUtagPROPVARIANT@@AAI@Z ENDP ; ParsePropToUInt32
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@UString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString@@QBEIXZ PROC				; UString::Len, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString@@QBEIXZ ENDP				; UString::Len
_TEXT	ENDS
PUBLIC	?ParseMtProp@@YGJABVUString@@ABUtagPROPVARIANT@@IAAI@Z ; ParseMtProp
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -24						; size = 4
tv69 = -20						; size = 4
___result__$68061 = -16					; size = 4
_val$68060 = -5						; size = 1
_name$ = 8						; size = 4
_prop$ = 12						; size = 4
_defaultNumThreads$ = 16				; size = 4
_numThreads$ = 20					; size = 4
?ParseMtProp@@YGJABVUString@@ABUtagPROPVARIANT@@IAAI@Z PROC ; ParseMtProp
; File c:\workspace\7z1505-src\cpp\7zip\common\methodprops.cpp
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 71
	mov	ecx, DWORD PTR _name$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@ParseMtPro
; Line 73
	mov	ecx, DWORD PTR _prop$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR tv69[ebp], edx
	cmp	DWORD PTR tv69[ebp], 19			; 00000013H
	je	SHORT $LN4@ParseMtPro
	jmp	SHORT $LN3@ParseMtPro
$LN4@ParseMtPro:
; Line 76
	mov	eax, DWORD PTR _numThreads$[ebp]
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx
; Line 77
	jmp	SHORT $LN5@ParseMtPro
$LN3@ParseMtPro:
; Line 81
	lea	eax, DWORD PTR _val$68060[ebp]
	push	eax
	mov	ecx, DWORD PTR _prop$[ebp]
	push	ecx
	call	?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z ; PROPVARIANT_to_bool
	mov	DWORD PTR ___result__$68061[ebp], eax
	cmp	DWORD PTR ___result__$68061[ebp], 0
	je	SHORT $LN2@ParseMtPro
	mov	eax, DWORD PTR ___result__$68061[ebp]
	jmp	SHORT $LN8@ParseMtPro
$LN2@ParseMtPro:
; Line 82
	movzx	edx, BYTE PTR _val$68060[ebp]
	test	edx, edx
	je	SHORT $LN10@ParseMtPro
	mov	eax, DWORD PTR _defaultNumThreads$[ebp]
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN11@ParseMtPro
$LN10@ParseMtPro:
	mov	DWORD PTR tv77[ebp], 1
$LN11@ParseMtPro:
	mov	ecx, DWORD PTR _numThreads$[ebp]
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR [ecx], edx
$LN5@ParseMtPro:
; Line 86
	xor	eax, eax
	jmp	SHORT $LN8@ParseMtPro
$LN7@ParseMtPro:
; Line 88
	mov	eax, DWORD PTR _prop$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@ParseMtPro
; Line 89
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN8@ParseMtPro
$LN1@ParseMtPro:
; Line 90
	mov	edx, DWORD PTR _numThreads$[ebp]
	push	edx
	mov	eax, DWORD PTR _prop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	?ParsePropToUInt32@@YGJABVUString@@ABUtagPROPVARIANT@@AAI@Z ; ParsePropToUInt32
$LN8@ParseMtPro:
; Line 91
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@ParseMtPro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN14@ParseMtPro:
	DD	1
	DD	$LN13@ParseMtPro
$LN13@ParseMtPro:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN12@ParseMtPro
$LN12@ParseMtPro:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?ParseMtProp@@YGJABVUString@@ABUtagPROPVARIANT@@IAAI@Z ENDP ; ParseMtProp
_TEXT	ENDS
PUBLIC	?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ ; CObjectVector<CProp>::AddNew
PUBLIC	?AddProp32@CProps@@QAEXKI@Z			; CProps::AddProp32
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_prop$ = -8						; size = 4
_this$ = -4						; size = 4
_propid$ = 8						; size = 4
_level$ = 12						; size = 4
?AddProp32@CProps@@QAEXKI@Z PROC			; CProps::AddProp32
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ ; CObjectVector<CProp>::AddNew
	mov	DWORD PTR _prop$[ebp], eax
; Line 141
	mov	eax, DWORD PTR _prop$[ebp]
	mov	BYTE PTR [eax+4], 1
; Line 142
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	edx, DWORD PTR _propid$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 143
	mov	eax, DWORD PTR _level$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prop$[ebp]
	add	ecx, 8
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 144
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddProp32@CProps@@QAEXKI@Z ENDP			; CProps::AddProp32
_TEXT	ENDS
PUBLIC	??1CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::~CPropVariant
PUBLIC	??_ECPropVariant@NCOM@NWindows@@QAEPAXI@Z	; NWindows::NCOM::CPropVariant::`vector deleting destructor'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_ECPropVariant@NCOM@NWindows@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_ECPropVariant@NCOM@NWindows@@QAEPAXI@Z PROC		; NWindows::NCOM::CPropVariant::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1CPropVariant@NCOM@NWindows@@QAE@XZ ; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN2@vector
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECPropVariant@NCOM@NWindows@@QAEPAXI@Z ENDP		; NWindows::NCOM::CPropVariant::`vector deleting destructor'
_TEXT	ENDS
EXTRN	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ:PROC	; NWindows::NCOM::CPropVariant::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::~CPropVariant, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\propvariant.h
; Line 56
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::Clear
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::~CPropVariant
_TEXT	ENDS
PUBLIC	__TI1H
PUBLIC	?AddProp@CCoderProps@@QAEXABUCProp@@@Z		; CCoderProps::AddProp
PUBLIC	__CTA1H
PUBLIC	__CT??_R0H@84
PUBLIC	??_R0H@8					; int `RTTI Type Descriptor'
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABV012@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	__CxxThrowException@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0H@8
; File c:\workspace\7z1505-src\cpp\7zip\common\methodprops.cpp
_DATA	SEGMENT
??_R0H@8 DD	FLAT:??_7type_info@@6B@			; int `RTTI Type Descriptor'
	DD	00H
	DB	'.H', 00H
_DATA	ENDS
;	COMDAT __CT??_R0H@84
xdata$x	SEGMENT
__CT??_R0H@84 DD 01H
	DD	FLAT:??_R0H@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA1H
xdata$x	SEGMENT
__CTA1H	DD	01H
	DD	FLAT:__CT??_R0H@84
xdata$x	ENDS
;	COMDAT __TI1H
xdata$x	SEGMENT
__TI1H	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68673 = -8						; size = 4
_this$ = -4						; size = 4
_prop$ = 8						; size = 4
?AddProp@CCoderProps@@QAEXABUCProp@@@Z PROC		; CCoderProps::AddProp
; _this$ = ecx
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jb	SHORT $LN1@AddProp
; Line 175
	mov	DWORD PTR $T68673[ebp], 1
	push	OFFSET __TI1H
	lea	eax, DWORD PTR $T68673[ebp]
	push	eax
	call	__CxxThrowException@8
$LN1@AddProp:
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _prop$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 177
	mov	ecx, DWORD PTR _prop$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	shl	ecx, 4
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABV012@@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 178
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN3@AddProp:
; Line 179
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddProp@CCoderProps@@QAEXABUCProp@@@Z ENDP		; CCoderProps::AddProp
_TEXT	ENDS
PUBLIC	??1CCoderProps@@QAE@XZ				; CCoderProps::~CCoderProps
PUBLIC	?SetProps@CCoderProps@@QAEJPAUICompressSetCoderProperties@@@Z ; CCoderProps::SetProps
PUBLIC	??1CProp@@QAE@XZ				; CProp::~CProp
PUBLIC	??0CProp@@QAE@XZ				; CProp::CProp
PUBLIC	??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z	; CObjectVector<CProp>::operator[]
PUBLIC	??0CCoderProps@@QAE@I@Z				; CCoderProps::CCoderProps
PUBLIC	?Size@?$CObjectVector@UCProp@@@@QBEIXZ		; CObjectVector<CProp>::Size
PUBLIC	?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z ; CProps::SetCoderProps
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
xdata$x	SEGMENT
__unwindtable$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z$1
__ehfuncinfo$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68676 = -80						; size = 4
_prop$68189 = -72					; size = 24
_i$68184 = -44						; size = 4
_coderProps$ = -36					; size = 16
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_scp$ = 8						; size = 4
_dataSizeReduce$ = 12					; size = 4
?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z PROC ; CProps::SetCoderProps
; _this$ = ecx
; Line 182
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CObjectVector@UCProp@@@@QBEIXZ	; CObjectVector<CProp>::Size
	xor	ecx, ecx
	cmp	DWORD PTR _dataSizeReduce$[ebp], 0
	setne	cl
	add	eax, ecx
	push	eax
	lea	ecx, DWORD PTR _coderProps$[ebp]
	call	??0CCoderProps@@QAE@I@Z			; CCoderProps::CCoderProps
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 184
	mov	DWORD PTR _i$68184[ebp], 0
	jmp	SHORT $LN4@SetCoderPr
$LN3@SetCoderPr:
	mov	edx, DWORD PTR _i$68184[ebp]
	add	edx, 1
	mov	DWORD PTR _i$68184[ebp], edx
$LN4@SetCoderPr:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CObjectVector@UCProp@@@@QBEIXZ	; CObjectVector<CProp>::Size
	cmp	DWORD PTR _i$68184[ebp], eax
	jae	SHORT $LN2@SetCoderPr
; Line 185
	mov	eax, DWORD PTR _i$68184[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z ; CObjectVector<CProp>::operator[]
	push	eax
	lea	ecx, DWORD PTR _coderProps$[ebp]
	call	?AddProp@CCoderProps@@QAEXABUCProp@@@Z	; CCoderProps::AddProp
	jmp	SHORT $LN3@SetCoderPr
$LN2@SetCoderPr:
; Line 186
	cmp	DWORD PTR _dataSizeReduce$[ebp], 0
	je	SHORT $LN1@SetCoderPr
; Line 188
	lea	ecx, DWORD PTR _prop$68189[ebp]
	call	??0CProp@@QAE@XZ			; CProp::CProp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 189
	mov	DWORD PTR _prop$68189[ebp], 16		; 00000010H
; Line 190
	mov	ecx, DWORD PTR _dataSizeReduce$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR [ecx]
	push	eax
	lea	ecx, DWORD PTR _prop$68189[ebp+8]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 191
	lea	ecx, DWORD PTR _prop$68189[ebp]
	push	ecx
	lea	ecx, DWORD PTR _coderProps$[ebp]
	call	?AddProp@CCoderProps@@QAEXABUCProp@@@Z	; CCoderProps::AddProp
; Line 192
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prop$68189[ebp]
	call	??1CProp@@QAE@XZ
$LN1@SetCoderPr:
; Line 193
	mov	edx, DWORD PTR _scp$[ebp]
	push	edx
	lea	ecx, DWORD PTR _coderProps$[ebp]
	call	?SetProps@CCoderProps@@QAEJPAUICompressSetCoderProperties@@@Z ; CCoderProps::SetProps
	mov	DWORD PTR $T68676[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _coderProps$[ebp]
	call	??1CCoderProps@@QAE@XZ			; CCoderProps::~CCoderProps
	mov	eax, DWORD PTR $T68676[ebp]
; Line 194
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@SetCoderPr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@SetCoderPr:
	DD	2
	DD	$LN12@SetCoderPr
$LN12@SetCoderPr:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN9@SetCoderPr
	DD	-72					; ffffffb8H
	DD	24					; 00000018H
	DD	$LN10@SetCoderPr
$LN10@SetCoderPr:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN9@SetCoderPr:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z$0:
	lea	ecx, DWORD PTR _coderProps$[ebp]
	jmp	??1CCoderProps@@QAE@XZ			; CCoderProps::~CCoderProps
__unwindfunclet$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z$1:
	lea	ecx, DWORD PTR _prop$68189[ebp]
	jmp	??1CProp@@QAE@XZ
__ehhandler$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z ENDP ; CProps::SetCoderProps
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::CPropVariant
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CProp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CProp@@QAE@XZ PROC					; CProp::CProp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\methodprops.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CProp@@QAE@XZ ENDP					; CProp::CProp
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::CPropVariant, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\propvariant.h
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 50
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\common\methodprops.cpp
xdata$x	SEGMENT
__unwindtable$??0CCoderProps@@QAE@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CCoderProps@@QAE@I@Z$0
__ehfuncinfo$??0CCoderProps@@QAE@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CCoderProps@@QAE@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CCoderProps@@QAE@I@Z
_TEXT	SEGMENT
tv128 = -36						; size = 4
$T68696 = -32						; size = 4
$T68695 = -28						; size = 4
$T68694 = -24						; size = 4
$T68693 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_numPropsMax$ = 8					; size = 4
??0CCoderProps@@QAE@I@Z PROC				; CCoderProps::CCoderProps, COMDAT
; _this$ = ecx
; Line 153
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CCoderProps@@QAE@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numPropsMax$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 156
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 157
	xor	ecx, ecx
	mov	eax, DWORD PTR _numPropsMax$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68693[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T68693[ebp]
	mov	DWORD PTR [eax], ecx
; Line 158
	mov	edx, DWORD PTR _numPropsMax$[ebp]
	mov	DWORD PTR $T68694[ebp], edx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T68694[ebp]
	mov	edx, 16					; 00000010H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68696[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T68696[ebp], 0
	je	SHORT $LN3@CCoderProp
	mov	ecx, DWORD PTR $T68696[ebp]
	mov	edx, DWORD PTR $T68694[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1CPropVariant@NCOM@NWindows@@QAE@XZ ; NWindows::NCOM::CPropVariant::~CPropVariant
	push	OFFSET ??0CPropVariant@NCOM@NWindows@@QAE@XZ ; NWindows::NCOM::CPropVariant::CPropVariant
	mov	eax, DWORD PTR $T68694[ebp]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR $T68696[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T68696[ebp]
	add	edx, 4
	mov	DWORD PTR tv128[ebp], edx
	jmp	SHORT $LN4@CCoderProp
$LN3@CCoderProp:
	mov	DWORD PTR tv128[ebp], 0
$LN4@CCoderProp:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T68695[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T68695[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CCoderProps@@QAE@I@Z$0:
	mov	eax, DWORD PTR $T68696[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0CCoderProps@@QAE@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CCoderProps@@QAE@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CCoderProps@@QAE@I@Z ENDP				; CCoderProps::CCoderProps
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCoderProps@@QAE@XZ
_TEXT	SEGMENT
tv70 = -20						; size = 4
$T68710 = -16						; size = 4
$T68709 = -12						; size = 4
$T68708 = -8						; size = 4
_this$ = -4						; size = 4
??1CCoderProps@@QAE@XZ PROC				; CCoderProps::~CCoderProps, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68708[ebp], ecx
	mov	edx, DWORD PTR $T68708[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T68710[ebp], ecx
	mov	edx, DWORD PTR $T68710[ebp]
	mov	DWORD PTR $T68709[ebp], edx
	cmp	DWORD PTR $T68709[ebp], 0
	je	SHORT $LN3@CCoderProp@2
	push	3
	mov	ecx, DWORD PTR $T68709[ebp]
	call	??_ECPropVariant@NCOM@NWindows@@QAEPAXI@Z
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN1@CCoderProp@2
$LN3@CCoderProp@2:
	mov	DWORD PTR tv70[ebp], 0
$LN1@CCoderProp@2:
; Line 164
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCoderProps@@QAE@XZ ENDP				; CCoderProps::~CCoderProps
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetProps@CCoderProps@@QAEJPAUICompressSetCoderProperties@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_setCoderProperties$ = 8				; size = 4
?SetProps@CCoderProps@@QAEJPAUICompressSetCoderProperties@@@Z PROC ; CCoderProps::SetProps, COMDAT
; _this$ = ecx
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 168
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _setCoderProperties$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _setCoderProperties$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 169
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetProps@CCoderProps@@QAEJPAUICompressSetCoderProperties@@@Z ENDP ; CCoderProps::SetProps
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CProp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CProp@@QAE@XZ PROC					; CProp::~CProp, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CProp@@QAE@XZ ENDP					; CProp::~CProp
_TEXT	ENDS
PUBLIC	?FindProp@CMethodProps@@QBEHK@Z			; CMethodProps::FindProp
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$68197 = -8						; size = 4
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?FindProp@CMethodProps@@QBEHK@Z PROC			; CMethodProps::FindProp
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CObjectVector@UCProp@@@@QBEIXZ	; CObjectVector<CProp>::Size
	sub	eax, 1
	mov	DWORD PTR _i$68197[ebp], eax
	jmp	SHORT $LN4@FindProp
$LN3@FindProp:
	mov	eax, DWORD PTR _i$68197[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$68197[ebp], eax
$LN4@FindProp:
	cmp	DWORD PTR _i$68197[ebp], 0
	jl	SHORT $LN2@FindProp
; Line 200
	mov	ecx, DWORD PTR _i$68197[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z ; CObjectVector<CProp>::operator[]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR _id$[ebp]
	jne	SHORT $LN1@FindProp
; Line 201
	mov	eax, DWORD PTR _i$68197[ebp]
	jmp	SHORT $LN5@FindProp
$LN1@FindProp:
; Line 202
	jmp	SHORT $LN3@FindProp
$LN2@FindProp:
	or	eax, -1
$LN5@FindProp:
; Line 203
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FindProp@CMethodProps@@QBEHK@Z ENDP			; CMethodProps::FindProp
_TEXT	ENDS
PUBLIC	?GetLevel@CMethodProps@@QBEHXZ			; CMethodProps::GetLevel
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv131 = -16						; size = 4
_level$ = -12						; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?GetLevel@CMethodProps@@QBEHXZ PROC			; CMethodProps::GetLevel
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 207
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindProp@CMethodProps@@QBEHK@Z		; CMethodProps::FindProp
	mov	DWORD PTR _i$[ebp], eax
; Line 208
	cmp	DWORD PTR _i$[ebp], 0
	jge	SHORT $LN2@GetLevel
; Line 209
	mov	eax, 5
	jmp	SHORT $LN3@GetLevel
$LN2@GetLevel:
; Line 210
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z ; CObjectVector<CProp>::operator[]
	movzx	ecx, WORD PTR [eax+8]
	cmp	ecx, 19					; 00000013H
	je	SHORT $LN1@GetLevel
; Line 211
	mov	eax, 9
	jmp	SHORT $LN3@GetLevel
$LN1@GetLevel:
; Line 212
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z ; CObjectVector<CProp>::operator[]
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR _level$[ebp], eax
; Line 213
	cmp	DWORD PTR _level$[ebp], 9
	jbe	SHORT $LN5@GetLevel
	mov	DWORD PTR tv131[ebp], 9
	jmp	SHORT $LN6@GetLevel
$LN5@GetLevel:
	mov	ecx, DWORD PTR _level$[ebp]
	mov	DWORD PTR tv131[ebp], ecx
$LN6@GetLevel:
	mov	eax, DWORD PTR tv131[ebp]
$LN3@GetLevel:
; Line 214
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLevel@CMethodProps@@QBEHXZ ENDP			; CMethodProps::GetLevel
_TEXT	ENDS
PUBLIC	?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z	; CObjectVector<CProp>::Add
PUBLIC	?SetParam@CMethodProps@@AAEJABVUString@@0@Z	; CMethodProps::SetParam
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
xdata$x	SEGMENT
__unwindtable$?SetParam@CMethodProps@@AAEJABVUString@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetParam@CMethodProps@@AAEJABVUString@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetParam@CMethodProps@@AAEJABVUString@@0@Z$1
__ehfuncinfo$?SetParam@CMethodProps@@AAEJABVUString@@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetParam@CMethodProps@@AAEJABVUString@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68726 = -136						; size = 4
$T68725 = -132						; size = 4
$T68724 = -128						; size = 4
$T68723 = -124						; size = 4
_number$68382 = -116					; size = 4
_res$68376 = -101					; size = 1
_propValue$68372 = -92					; size = 16
___result__$68368 = -72					; size = 4
_dicSize$68367 = -64					; size = 4
_prop$ = -52						; size = 24
_nameToPropID$ = -24					; size = 4
_index$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?SetParam@CMethodProps@@AAEJABVUString@@0@Z PROC	; CMethodProps::SetParam
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetParam@CMethodProps@@AAEJABVUString@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 330
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?FindPropIdExact@@YGHABVUString@@@Z	; FindPropIdExact
	mov	DWORD PTR _index$[ebp], eax
; Line 331
	cmp	DWORD PTR _index$[ebp], 0
	jge	SHORT $LN13@SetParam
; Line 332
	mov	eax, -2147024809			; 80070057H
	jmp	$LN14@SetParam
$LN13@SetParam:
; Line 333
	mov	ecx, DWORD PTR _index$[ebp]
	lea	edx, DWORD PTR _g_NameToPropID[ecx*8]
	mov	DWORD PTR _nameToPropID$[ebp], edx
; Line 334
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??0CProp@@QAE@XZ			; CProp::CProp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 335
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _prop$[ebp], eax
; Line 337
	mov	ecx, DWORD PTR _prop$[ebp]
	push	ecx
	call	?IsLogSizeProp@@YG_NK@Z			; IsLogSizeProp
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@SetParam
; Line 340
	lea	eax, DWORD PTR _dicSize$68367[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?StringToDictSize@@YGJABVUString@@AAI@Z	; StringToDictSize
	mov	DWORD PTR ___result__$68368[ebp], eax
	cmp	DWORD PTR ___result__$68368[ebp], 0
	je	SHORT $LN11@SetParam
	mov	edx, DWORD PTR ___result__$68368[ebp]
	mov	DWORD PTR $T68723[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CProp@@QAE@XZ
	mov	eax, DWORD PTR $T68723[ebp]
	jmp	$LN14@SetParam
$LN11@SetParam:
; Line 341
	mov	eax, DWORD PTR _dicSize$68367[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$[ebp+8]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 343
	jmp	$LN10@SetParam
$LN12@SetParam:
; Line 345
	lea	ecx, DWORD PTR _propValue$68372[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 346
	mov	ecx, DWORD PTR _nameToPropID$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 8
	jne	SHORT $LN9@SetParam
; Line 347
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	lea	ecx, DWORD PTR _propValue$68372[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	$LN8@SetParam
$LN9@SetParam:
; Line 348
	mov	ecx, DWORD PTR _nameToPropID$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 11					; 0000000bH
	jne	SHORT $LN7@SetParam
; Line 351
	lea	eax, DWORD PTR _res$68376[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?StringToBool@@YG_NABVUString@@AA_N@Z	; StringToBool
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN6@SetParam
; Line 352
	mov	DWORD PTR $T68724[ebp], -2147024809	; 80070057H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _propValue$68372[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CProp@@QAE@XZ
	mov	eax, DWORD PTR $T68724[ebp]
	jmp	$LN14@SetParam
$LN6@SetParam:
; Line 353
	movzx	eax, BYTE PTR _res$68376[ebp]
	push	eax
	lea	ecx, DWORD PTR _propValue$68372[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN8@SetParam
$LN7@SetParam:
; Line 355
	mov	ecx, DWORD PTR _value$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@SetParam
; Line 358
	lea	edx, DWORD PTR _number$68382[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?ParseStringToUInt32@@YGIABVUString@@AAI@Z ; ParseStringToUInt32
	mov	esi, eax
	mov	ecx, DWORD PTR _value$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	esi, eax
	jne	SHORT $LN3@SetParam
; Line 359
	mov	ecx, DWORD PTR _number$68382[ebp]
	push	ecx
	lea	ecx, DWORD PTR _propValue$68372[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 360
	jmp	SHORT $LN8@SetParam
$LN3@SetParam:
; Line 361
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	lea	ecx, DWORD PTR _propValue$68372[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
$LN8@SetParam:
; Line 363
	lea	eax, DWORD PTR _prop$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _nameToPropID$[ebp]
	movzx	edx, WORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR _propValue$68372[ebp]
	push	eax
	call	?ConvertProperty@@YG_NABUtagPROPVARIANT@@GAAVCPropVariant@NCOM@NWindows@@@Z ; ConvertProperty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@SetParam
; Line 364
	mov	DWORD PTR $T68725[ebp], -2147024809	; 80070057H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _propValue$68372[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CProp@@QAE@XZ
	mov	eax, DWORD PTR $T68725[ebp]
	jmp	SHORT $LN14@SetParam
$LN1@SetParam:
; Line 365
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _propValue$68372[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
$LN10@SetParam:
; Line 366
	lea	edx, DWORD PTR _prop$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z ; CObjectVector<CProp>::Add
; Line 367
	mov	DWORD PTR $T68726[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CProp@@QAE@XZ
	mov	eax, DWORD PTR $T68726[ebp]
$LN14@SetParam:
; Line 368
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@SetParam
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN25@SetParam:
	DD	5
	DD	$LN24@SetParam
$LN24@SetParam:
	DD	-52					; ffffffccH
	DD	24					; 00000018H
	DD	$LN18@SetParam
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN19@SetParam
	DD	-92					; ffffffa4H
	DD	16					; 00000010H
	DD	$LN20@SetParam
	DD	-101					; ffffff9bH
	DD	1
	DD	$LN21@SetParam
	DD	-116					; ffffff8cH
	DD	4
	DD	$LN22@SetParam
$LN22@SetParam:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN21@SetParam:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN20@SetParam:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN19@SetParam:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN18@SetParam:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetParam@CMethodProps@@AAEJABVUString@@0@Z$0:
	lea	ecx, DWORD PTR _prop$[ebp]
	jmp	??1CProp@@QAE@XZ
__unwindfunclet$?SetParam@CMethodProps@@AAEJABVUString@@0@Z$1:
	lea	ecx, DWORD PTR _propValue$68372[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__ehhandler$?SetParam@CMethodProps@@AAEJABVUString@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-136]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetParam@CMethodProps@@AAEJABVUString@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetParam@CMethodProps@@AAEJABVUString@@0@Z ENDP	; CMethodProps::SetParam
PUBLIC	?MyCharLower_Ascii@@YG_W_W@Z			; MyCharLower_Ascii
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv90 = -32						; size = 4
_numBits$ = -28						; size = 4
_kLogDictSizeLimit$ = -24				; size = 4
_numDigits$ = -20					; size = 4
_number$ = -16						; size = 4
_end$ = -8						; size = 4
_s$ = 8							; size = 4
_dicSize$ = 12						; size = 4
?StringToDictSize@@YGJABVUString@@AAI@Z PROC		; StringToDictSize
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 96
	lea	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?ConvertStringToUInt32@@YGIPB_WPAPB_W@Z	; ConvertStringToUInt32
	mov	DWORD PTR _number$[ebp], eax
; Line 97
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	ecx, DWORD PTR _end$[ebp]
	sub	ecx, eax
	sar	ecx, 1
	mov	DWORD PTR _numDigits$[ebp], ecx
; Line 98
	je	SHORT $LN11@StringToDi
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	edx, DWORD PTR _numDigits$[ebp]
	add	edx, 1
	cmp	eax, edx
	jbe	SHORT $LN12@StringToDi
$LN11@StringToDi:
; Line 99
	mov	eax, -2147024809			; 80070057H
	jmp	$LN13@StringToDi
$LN12@StringToDi:
; Line 100
	mov	DWORD PTR _kLogDictSizeLimit$[ebp], 32	; 00000020H
; Line 101
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	eax, DWORD PTR _numDigits$[ebp]
	jne	SHORT $LN10@StringToDi
; Line 103
	cmp	DWORD PTR _number$[ebp], 32		; 00000020H
	jb	SHORT $LN9@StringToDi
; Line 104
	mov	eax, -2147024809			; 80070057H
	jmp	$LN13@StringToDi
$LN9@StringToDi:
; Line 105
	mov	eax, 1
	mov	ecx, DWORD PTR _number$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _dicSize$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 106
	xor	eax, eax
	jmp	$LN13@StringToDi
$LN10@StringToDi:
; Line 109
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	edx, DWORD PTR _numDigits$[ebp]
	movzx	eax, WORD PTR [eax+edx*2]
	push	eax
	call	?MyCharLower_Ascii@@YG_W_W@Z		; MyCharLower_Ascii
	movzx	ecx, ax
	mov	DWORD PTR tv90[ebp], ecx
	mov	edx, DWORD PTR tv90[ebp]
	sub	edx, 98					; 00000062H
	mov	DWORD PTR tv90[ebp], edx
	cmp	DWORD PTR tv90[ebp], 11			; 0000000bH
	ja	SHORT $LN2@StringToDi
	mov	eax, DWORD PTR tv90[ebp]
	movzx	ecx, BYTE PTR $LN15@StringToDi[eax]
	jmp	DWORD PTR $LN19@StringToDi[ecx*4]
$LN6@StringToDi:
; Line 111
	mov	edx, DWORD PTR _dicSize$[ebp]
	mov	eax, DWORD PTR _number$[ebp]
	mov	DWORD PTR [edx], eax
	xor	eax, eax
	jmp	SHORT $LN13@StringToDi
$LN5@StringToDi:
; Line 112
	mov	DWORD PTR _numBits$[ebp], 10		; 0000000aH
	jmp	SHORT $LN7@StringToDi
$LN4@StringToDi:
; Line 113
	mov	DWORD PTR _numBits$[ebp], 20		; 00000014H
	jmp	SHORT $LN7@StringToDi
$LN3@StringToDi:
; Line 114
	mov	DWORD PTR _numBits$[ebp], 30		; 0000001eH
	jmp	SHORT $LN7@StringToDi
$LN2@StringToDi:
; Line 115
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN13@StringToDi
$LN7@StringToDi:
; Line 117
	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, 1
	shl	edx, cl
	cmp	DWORD PTR _number$[ebp], edx
	jb	SHORT $LN1@StringToDi
; Line 118
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN13@StringToDi
$LN1@StringToDi:
; Line 119
	mov	eax, DWORD PTR _number$[ebp]
	mov	ecx, DWORD PTR _numBits$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _dicSize$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 120
	xor	eax, eax
$LN13@StringToDi:
; Line 121
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@StringToDi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN18@StringToDi:
	DD	1
	DD	$LN17@StringToDi
$LN17@StringToDi:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN16@StringToDi
$LN16@StringToDi:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN19@StringToDi:
	DD	$LN6@StringToDi
	DD	$LN3@StringToDi
	DD	$LN5@StringToDi
	DD	$LN4@StringToDi
	DD	$LN2@StringToDi
$LN15@StringToDi:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	3
?StringToDictSize@@YGJABVUString@@AAI@Z ENDP		; StringToDictSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MyCharLower_Ascii@@YG_W_W@Z
_TEXT	SEGMENT
_c$ = 8							; size = 2
?MyCharLower_Ascii@@YG_W_W@Z PROC			; MyCharLower_Ascii, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 113
	push	ebp
	mov	ebp, esp
; Line 114
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN1@MyCharLowe
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 90					; 0000005aH
	jg	SHORT $LN1@MyCharLowe
; Line 115
	movzx	eax, WORD PTR _c$[ebp]
	add	eax, 32					; 00000020H
	jmp	SHORT $LN2@MyCharLowe
$LN1@MyCharLowe:
; Line 116
	mov	ax, WORD PTR _c$[ebp]
$LN2@MyCharLowe:
; Line 117
	pop	ebp
	ret	4
?MyCharLower_Ascii@@YG_W_W@Z ENDP			; MyCharLower_Ascii
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_i$68240 = -4						; size = 4
_name$ = 8						; size = 4
?FindPropIdExact@@YGHABVUString@@@Z PROC		; FindPropIdExact
; File c:\workspace\7z1505-src\cpp\7zip\common\methodprops.cpp
; Line 244
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 245
	mov	DWORD PTR _i$68240[ebp], 0
	jmp	SHORT $LN4@FindPropId
$LN3@FindPropId:
	mov	eax, DWORD PTR _i$68240[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68240[ebp], eax
$LN4@FindPropId:
	cmp	DWORD PTR _i$68240[ebp], 17		; 00000011H
	jae	SHORT $LN2@FindPropId
; Line 246
	mov	ecx, DWORD PTR _i$68240[ebp]
	mov	edx, DWORD PTR _g_NameToPropID[ecx*8+4]
	push	edx
	mov	ecx, DWORD PTR _name$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z ; StringsAreEqualNoCase_Ascii
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@FindPropId
; Line 247
	mov	eax, DWORD PTR _i$68240[ebp]
	jmp	SHORT $LN5@FindPropId
$LN1@FindPropId:
; Line 248
	jmp	SHORT $LN3@FindPropId
$LN2@FindPropId:
	or	eax, -1
$LN5@FindPropId:
; Line 249
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FindPropIdExact@@YGHABVUString@@@Z ENDP		; FindPropIdExact
_TEXT	ENDS
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABUtagPROPVARIANT@@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$68252 = -5						; size = 1
_srcProp$ = 8						; size = 4
_varType$ = 12						; size = 2
_destProp$ = 16						; size = 4
?ConvertProperty@@YG_NABUtagPROPVARIANT@@GAAVCPropVariant@NCOM@NWindows@@@Z PROC ; ConvertProperty
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 253
	movzx	eax, WORD PTR _varType$[ebp]
	mov	ecx, DWORD PTR _srcProp$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	eax, edx
	jne	SHORT $LN4@ConvertPro
; Line 255
	mov	eax, DWORD PTR _srcProp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destProp$[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 256
	mov	al, 1
	jmp	SHORT $LN5@ConvertPro
$LN4@ConvertPro:
; Line 258
	movzx	ecx, WORD PTR _varType$[ebp]
	cmp	ecx, 11					; 0000000bH
	jne	SHORT $LN3@ConvertPro
; Line 261
	lea	edx, DWORD PTR _res$68252[ebp]
	push	edx
	mov	eax, DWORD PTR _srcProp$[ebp]
	push	eax
	call	?PROPVARIANT_to_bool@@YGJABUtagPROPVARIANT@@AA_N@Z ; PROPVARIANT_to_bool
	test	eax, eax
	je	SHORT $LN2@ConvertPro
; Line 262
	xor	al, al
	jmp	SHORT $LN5@ConvertPro
$LN2@ConvertPro:
; Line 263
	movzx	ecx, BYTE PTR _res$68252[ebp]
	push	ecx
	mov	ecx, DWORD PTR _destProp$[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 264
	mov	al, 1
	jmp	SHORT $LN5@ConvertPro
$LN3@ConvertPro:
; Line 266
	mov	edx, DWORD PTR _srcProp$[ebp]
	movzx	eax, WORD PTR [edx]
	test	eax, eax
	jne	SHORT $LN1@ConvertPro
; Line 268
	mov	ecx, DWORD PTR _srcProp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _destProp$[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 269
	mov	al, 1
	jmp	SHORT $LN5@ConvertPro
$LN1@ConvertPro:
; Line 271
	xor	al, al
$LN5@ConvertPro:
; Line 272
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@ConvertPro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN9@ConvertPro:
	DD	1
	DD	$LN8@ConvertPro
$LN8@ConvertPro:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN7@ConvertPro
$LN7@ConvertPro:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?ConvertProperty@@YG_NABUtagPROPVARIANT@@GAAVCPropVariant@NCOM@NWindows@@@Z ENDP ; ConvertProperty
; Function compile flags: /Odtp /RTCsu
tv64 = -4						; size = 4
_propid$ = 8						; size = 4
?IsLogSizeProp@@YG_NK@Z PROC				; IsLogSizeProp
; Line 316
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 317
	mov	eax, DWORD PTR _propid$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	ja	SHORT $LN2@IsLogSizeP
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN6@IsLogSizeP[edx]
	jmp	DWORD PTR $LN7@IsLogSizeP[eax*4]
$LN1@IsLogSizeP:
; Line 323
	mov	al, 1
	jmp	SHORT $LN4@IsLogSizeP
$LN2@IsLogSizeP:
; Line 325
	xor	al, al
$LN4@IsLogSizeP:
; Line 326
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN7@IsLogSizeP:
	DD	$LN1@IsLogSizeP
	DD	$LN2@IsLogSizeP
$LN6@IsLogSizeP:
	DB	0
	DB	0
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
?IsLogSizeProp@@YG_NK@Z ENDP				; IsLogSizeProp
_TEXT	ENDS
PUBLIC	??1?$CObjectVector@VUString@@@@QAE@XZ		; CObjectVector<UString>::~CObjectVector<UString>
PUBLIC	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
PUBLIC	?Size@?$CObjectVector@VUString@@@@QBEIXZ	; CObjectVector<UString>::Size
PUBLIC	??0?$CObjectVector@VUString@@@@QAE@XZ		; CObjectVector<UString>::CObjectVector<UString>
PUBLIC	?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z ; CMethodProps::ParseParamsFromString
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
xdata$x	SEGMENT
__unwindtable$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z$2
__ehfuncinfo$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68758 = -96						; size = 4
$T68757 = -92						; size = 4
___result__$68402 = -88					; size = 4
_value$68401 = -80					; size = 12
_name$68400 = -60					; size = 12
_param$68399 = -44					; size = 4
_i$68395 = -40						; size = 4
_params$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_srcString$ = 8						; size = 4
?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z PROC ; CMethodProps::ParseParamsFromString
; _this$ = ecx
; Line 371
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-96]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 372
	lea	ecx, DWORD PTR _params$[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 373
	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcString$[ebp]
	push	ecx
	call	?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z ; SplitParams
; Line 374
	mov	DWORD PTR _i$68395[ebp], 0
	jmp	SHORT $LN4@ParseParam
$LN3@ParseParam:
	mov	edx, DWORD PTR _i$68395[ebp]
	add	edx, 1
	mov	DWORD PTR _i$68395[ebp], edx
$LN4@ParseParam:
	lea	ecx, DWORD PTR _params$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	DWORD PTR _i$68395[ebp], eax
	jae	$LN2@ParseParam
; Line 376
	mov	eax, DWORD PTR _i$68395[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$[ebp]
	call	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
	mov	DWORD PTR _param$68399[ebp], eax
; Line 377
	lea	ecx, DWORD PTR _name$68400[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _value$68401[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 378
	lea	ecx, DWORD PTR _value$68401[ebp]
	push	ecx
	lea	edx, DWORD PTR _name$68400[ebp]
	push	edx
	mov	eax, DWORD PTR _param$68399[ebp]
	push	eax
	call	?SplitParam@@YGXABVUString@@AAV1@1@Z	; SplitParam
; Line 379
	lea	ecx, DWORD PTR _value$68401[ebp]
	push	ecx
	lea	edx, DWORD PTR _name$68400[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetParam@CMethodProps@@AAEJABVUString@@0@Z ; CMethodProps::SetParam
	mov	DWORD PTR ___result__$68402[ebp], eax
	cmp	DWORD PTR ___result__$68402[ebp], 0
	je	SHORT $LN1@ParseParam
	mov	eax, DWORD PTR ___result__$68402[ebp]
	mov	DWORD PTR $T68757[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _value$68401[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _name$68400[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _params$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	eax, DWORD PTR $T68757[ebp]
	jmp	SHORT $LN5@ParseParam
$LN1@ParseParam:
; Line 380
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _value$68401[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _name$68400[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN3@ParseParam
$LN2@ParseParam:
; Line 381
	mov	DWORD PTR $T68758[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _params$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	eax, DWORD PTR $T68758[ebp]
$LN5@ParseParam:
; Line 382
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@ParseParam
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 96					; 00000060H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN15@ParseParam:
	DD	3
	DD	$LN14@ParseParam
$LN14@ParseParam:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN10@ParseParam
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN11@ParseParam
	DD	-80					; ffffffb0H
	DD	12					; 0000000cH
	DD	$LN12@ParseParam
$LN12@ParseParam:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN11@ParseParam:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN10@ParseParam:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z$0:
	lea	ecx, DWORD PTR _params$[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z$1:
	lea	ecx, DWORD PTR _name$68400[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z$2:
	lea	ecx, DWORD PTR _value$68401[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z ENDP ; CMethodProps::ParseParamsFromString
PUBLIC	??YUString@@QAEAAV0@_W@Z			; UString::operator+=
PUBLIC	?Empty@UString@@QAEXXZ				; UString::Empty
PUBLIC	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
PUBLIC	?Clear@?$CObjectVector@VUString@@@@QAEXXZ	; CObjectVector<UString>::Clear
xdata$x	SEGMENT
__unwindtable$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z$0
__ehfuncinfo$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_c$68331 = -44						; size = 2
_i$68327 = -40						; size = 4
_len$ = -36						; size = 4
_s$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
_srcString$ = 8						; size = 4
_subStrings$ = 12					; size = 4
?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z PROC ; SplitParams
; Line 275
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 276
	mov	ecx, DWORD PTR _subStrings$[ebp]
	call	?Clear@?$CObjectVector@VUString@@@@QAEXXZ ; CObjectVector<UString>::Clear
; Line 277
	lea	ecx, DWORD PTR _s$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 278
	mov	ecx, DWORD PTR _srcString$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	DWORD PTR _len$[ebp], eax
; Line 279
	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LN6@SplitParam
; Line 280
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	SHORT $LN7@SplitParam
$LN6@SplitParam:
; Line 281
	mov	DWORD PTR _i$68327[ebp], 0
	jmp	SHORT $LN5@SplitParam
$LN4@SplitParam:
	mov	eax, DWORD PTR _i$68327[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68327[ebp], eax
$LN5@SplitParam:
	mov	ecx, DWORD PTR _i$68327[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jge	SHORT $LN3@SplitParam
; Line 283
	mov	ecx, DWORD PTR _srcString$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	edx, DWORD PTR _i$68327[ebp]
	mov	ax, WORD PTR [eax+edx*2]
	mov	WORD PTR _c$68331[ebp], ax
; Line 284
	movzx	ecx, WORD PTR _c$68331[ebp]
	cmp	ecx, 58					; 0000003aH
	jne	SHORT $LN2@SplitParam
; Line 286
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR _subStrings$[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
; Line 287
	lea	ecx, DWORD PTR _s$[ebp]
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 289
	jmp	SHORT $LN1@SplitParam
$LN2@SplitParam:
; Line 290
	movzx	eax, WORD PTR _c$68331[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	??YUString@@QAEAAV0@_W@Z		; UString::operator+=
$LN1@SplitParam:
; Line 291
	jmp	SHORT $LN4@SplitParam
$LN3@SplitParam:
; Line 292
	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _subStrings$[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
; Line 293
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN7@SplitParam:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@SplitParam
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN13@SplitParam:
	DD	1
	DD	$LN12@SplitParam
$LN12@SplitParam:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN10@SplitParam
$LN10@SplitParam:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z$0:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SplitParams@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z ENDP ; SplitParams
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Empty@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@UString@@QAEXXZ PROC				; UString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	WORD PTR [edx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@UString@@QAEXXZ ENDP				; UString::Empty
_TEXT	ENDS
EXTRN	?Grow_1@UString@@AAEXXZ:PROC			; UString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YUString@@QAEAAV0@_W@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 2
??YUString@@QAEAAV0@_W@Z PROC				; UString::operator+=, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 517
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@UString@@AAEXXZ			; UString::Grow_1
$LN1@operator:
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 519
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 520
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _chars$[ebp]
	mov	ax, WORD PTR _c$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
; Line 521
	xor	edx, edx
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _chars$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 522
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 523
	mov	eax, DWORD PTR _this$[ebp]
; Line 524
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUString@@QAEAAV0@_W@Z ENDP				; UString::operator+=
_TEXT	ENDS
PUBLIC	?Ptr@UString@@QBEPB_WI@Z			; UString::Ptr
PUBLIC	?Find@UString@@QBEH_W@Z				; UString::Find
EXTRN	??4UString@@QAEAAV0@PB_W@Z:PROC			; UString::operator=
EXTRN	?SetFrom@UString@@QAEXPB_WI@Z:PROC		; UString::SetFrom
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c$68345 = -12						; size = 2
_i$ = -8						; size = 4
_eqPos$ = -4						; size = 4
_param$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
?SplitParam@@YGXABVUString@@AAV1@1@Z PROC		; SplitParam
; File c:\workspace\7z1505-src\cpp\7zip\common\methodprops.cpp
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 297
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _param$[ebp]
	call	?Find@UString@@QBEH_W@Z			; UString::Find
	mov	DWORD PTR _eqPos$[ebp], eax
; Line 298
	cmp	DWORD PTR _eqPos$[ebp], 0
	jl	SHORT $LN5@SplitParam@2
; Line 300
	mov	eax, DWORD PTR _eqPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _param$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	call	?SetFrom@UString@@QAEXPB_WI@Z		; UString::SetFrom
; Line 301
	mov	ecx, DWORD PTR _eqPos$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _param$[ebp]
	call	?Ptr@UString@@QBEPB_WI@Z		; UString::Ptr
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 302
	jmp	SHORT $LN6@SplitParam@2
$LN5@SplitParam@2:
; Line 305
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@SplitParam@2
$LN3@SplitParam@2:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN4@SplitParam@2:
	mov	ecx, DWORD PTR _param$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN2@SplitParam@2
; Line 307
	mov	ecx, DWORD PTR _param$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	ecx, DWORD PTR _i$[ebp]
	mov	dx, WORD PTR [eax+ecx*2]
	mov	WORD PTR _c$68345[ebp], dx
; Line 308
	movzx	eax, WORD PTR _c$68345[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN1@SplitParam@2
	movzx	ecx, WORD PTR _c$68345[ebp]
	cmp	ecx, 57					; 00000039H
	jg	SHORT $LN1@SplitParam@2
; Line 309
	jmp	SHORT $LN2@SplitParam@2
$LN1@SplitParam@2:
; Line 310
	jmp	SHORT $LN3@SplitParam@2
$LN2@SplitParam@2:
; Line 311
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _param$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	call	?SetFrom@UString@@QAEXPB_WI@Z		; UString::SetFrom
; Line 312
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _param$[ebp]
	call	?Ptr@UString@@QBEPB_WI@Z		; UString::Ptr
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
$LN6@SplitParam@2:
; Line 313
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SplitParam@@YGXABVUString@@AAV1@1@Z ENDP		; SplitParam
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Ptr@UString@@QBEPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?Ptr@UString@@QBEPB_WI@Z PROC				; UString::Ptr, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 478
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	esp, ebp
	pop	ebp
	ret	4
?Ptr@UString@@QBEPB_WI@Z ENDP				; UString::Ptr
_TEXT	ENDS
EXTRN	?FindCharPosInString@@YGHPB_W_W@Z:PROC		; FindCharPosInString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Find@UString@@QBEH_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_c$ = 8							; size = 2
?Find@UString@@QBEH_W@Z PROC				; UString::Find, COMDAT
; _this$ = ecx
; Line 567
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?FindCharPosInString@@YGHPB_W_W@Z	; FindCharPosInString
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Find@UString@@QBEH_W@Z ENDP				; UString::Find
_TEXT	ENDS
PUBLIC	?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z ; CMethodProps::ParseParamsFromPROPVARIANT
xdata$x	SEGMENT
__unwindtable$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$2
__ehfuncinfo$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68793 = -128						; size = 4
$T68792 = -124						; size = 4
$T68791 = -120						; size = 4
$T68790 = -116						; size = 4
___result__$68426 = -112				; size = 4
_dicSize$68425 = -104					; size = 4
_prop$ = -92						; size = 24
_nameToPropID$ = -64					; size = 4
_index$ = -60						; size = 4
_value$68416 = -52					; size = 12
_name$68415 = -32					; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_realName$ = 8						; size = 4
_value$ = 12						; size = 4
?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z PROC ; CMethodProps::ParseParamsFromPROPVARIANT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\methodprops.cpp
; Line 385
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 116				; 00000074H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-128]
	mov	ecx, 29					; 0000001dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 386
	mov	ecx, DWORD PTR _realName$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	test	eax, eax
	jne	SHORT $LN7@ParseParam@2
; Line 389
	mov	eax, -2147024809			; 80070057H
	jmp	$LN8@ParseParam@2
$LN7@ParseParam@2:
; Line 391
	mov	eax, DWORD PTR _value$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN6@ParseParam@2
; Line 394
	lea	ecx, DWORD PTR _name$68415[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _value$68416[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 395
	lea	edx, DWORD PTR _value$68416[ebp]
	push	edx
	lea	eax, DWORD PTR _name$68415[ebp]
	push	eax
	mov	ecx, DWORD PTR _realName$[ebp]
	push	ecx
	call	?SplitParam@@YGXABVUString@@AAV1@1@Z	; SplitParam
; Line 396
	lea	edx, DWORD PTR _value$68416[ebp]
	push	edx
	lea	eax, DWORD PTR _name$68415[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetParam@CMethodProps@@AAEJABVUString@@0@Z ; CMethodProps::SetParam
	mov	DWORD PTR $T68790[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _value$68416[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$68415[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T68790[ebp]
	jmp	$LN8@ParseParam@2
$LN6@ParseParam@2:
; Line 400
	mov	ecx, DWORD PTR _realName$[ebp]
	push	ecx
	call	?FindPropIdExact@@YGHABVUString@@@Z	; FindPropIdExact
	mov	DWORD PTR _index$[ebp], eax
; Line 401
	cmp	DWORD PTR _index$[ebp], 0
	jge	SHORT $LN5@ParseParam@2
; Line 402
	mov	eax, -2147024809			; 80070057H
	jmp	$LN8@ParseParam@2
$LN5@ParseParam@2:
; Line 403
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR _g_NameToPropID[edx*8]
	mov	DWORD PTR _nameToPropID$[ebp], eax
; Line 404
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??0CProp@@QAE@XZ			; CProp::CProp
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 405
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR _prop$[ebp], ecx
; Line 407
	mov	edx, DWORD PTR _prop$[ebp]
	push	edx
	call	?IsLogSizeProp@@YG_NK@Z			; IsLogSizeProp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@ParseParam@2
; Line 410
	lea	ecx, DWORD PTR _dicSize$68425[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z ; PROPVARIANT_to_DictSize
	mov	DWORD PTR ___result__$68426[ebp], eax
	cmp	DWORD PTR ___result__$68426[ebp], 0
	je	SHORT $LN3@ParseParam@2
	mov	eax, DWORD PTR ___result__$68426[ebp]
	mov	DWORD PTR $T68791[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CProp@@QAE@XZ
	mov	eax, DWORD PTR $T68791[ebp]
	jmp	SHORT $LN8@ParseParam@2
$LN3@ParseParam@2:
; Line 411
	mov	ecx, DWORD PTR _dicSize$68425[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$[ebp+8]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 413
	jmp	SHORT $LN2@ParseParam@2
$LN4@ParseParam@2:
; Line 415
	lea	edx, DWORD PTR _prop$[ebp+8]
	push	edx
	mov	eax, DWORD PTR _nameToPropID$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?ConvertProperty@@YG_NABUtagPROPVARIANT@@GAAVCPropVariant@NCOM@NWindows@@@Z ; ConvertProperty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@ParseParam@2
; Line 416
	mov	DWORD PTR $T68792[ebp], -2147024809	; 80070057H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CProp@@QAE@XZ
	mov	eax, DWORD PTR $T68792[ebp]
	jmp	SHORT $LN8@ParseParam@2
$LN2@ParseParam@2:
; Line 418
	lea	ecx, DWORD PTR _prop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z ; CObjectVector<CProp>::Add
; Line 419
	mov	DWORD PTR $T68793[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CProp@@QAE@XZ
	mov	eax, DWORD PTR $T68793[ebp]
$LN8@ParseParam@2:
; Line 420
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@ParseParam@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 128				; 00000080H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN19@ParseParam@2:
	DD	4
	DD	$LN18@ParseParam@2
$LN18@ParseParam@2:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN13@ParseParam@2
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN14@ParseParam@2
	DD	-92					; ffffffa4H
	DD	24					; 00000018H
	DD	$LN15@ParseParam@2
	DD	-104					; ffffff98H
	DD	4
	DD	$LN16@ParseParam@2
$LN16@ParseParam@2:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN15@ParseParam@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN14@ParseParam@2:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN13@ParseParam@2:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$0:
	lea	ecx, DWORD PTR _name$68415[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$1:
	lea	ecx, DWORD PTR _value$68416[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$2:
	lea	ecx, DWORD PTR _prop$[ebp]
	jmp	??1CProp@@QAE@XZ
__ehhandler$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z ENDP ; CMethodProps::ParseParamsFromPROPVARIANT
xdata$x	SEGMENT
__unwindtable$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z$0
__ehfuncinfo$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68809 = -32						; size = 12
$T68808 = -20						; size = 4
_v$68105 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_prop$ = 8						; size = 4
_resValue$ = 12						; size = 4
?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z PROC ; PROPVARIANT_to_DictSize
; Line 124
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 125
	mov	eax, DWORD PTR _prop$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 19					; 00000013H
	jne	SHORT $LN3@PROPVARIAN@2
; Line 127
	mov	edx, DWORD PTR _prop$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _v$68105[ebp], eax
; Line 128
	cmp	DWORD PTR _v$68105[ebp], 32		; 00000020H
	jb	SHORT $LN2@PROPVARIAN@2
; Line 129
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN4@PROPVARIAN@2
$LN2@PROPVARIAN@2:
; Line 130
	mov	edx, 1
	mov	ecx, DWORD PTR _v$68105[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _resValue$[ebp]
	mov	DWORD PTR [eax], edx
; Line 131
	xor	eax, eax
	jmp	SHORT $LN4@PROPVARIAN@2
$LN3@PROPVARIAN@2:
; Line 133
	mov	ecx, DWORD PTR _prop$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 8
	jne	SHORT $LN1@PROPVARIAN@2
; Line 134
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	ecx, DWORD PTR $T68809[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _resValue$[ebp]
	push	edx
	lea	eax, DWORD PTR $T68809[ebp]
	push	eax
	call	?StringToDictSize@@YGJABVUString@@AAI@Z	; StringToDictSize
	mov	DWORD PTR $T68808[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T68809[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T68808[ebp]
	jmp	SHORT $LN4@PROPVARIAN@2
$LN1@PROPVARIAN@2:
; Line 135
	mov	eax, -2147024809			; 80070057H
$LN4@PROPVARIAN@2:
; Line 136
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z$0:
	lea	ecx, DWORD PTR $T68809[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PROPVARIANT_to_DictSize@@YGJABUtagPROPVARIANT@@AAI@Z ENDP ; PROPVARIANT_to_DictSize
PUBLIC	?IsAscii@UString@@QBE_NXZ			; UString::IsAscii
PUBLIC	?DeleteFrom@UString@@QAEXI@Z			; UString::DeleteFrom
PUBLIC	?Empty@AString@@QAEXXZ				; AString::Empty
PUBLIC	?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z ; COneMethodInfo::ParseMethodFromString
EXTRN	?SetFromWStr_if_Ascii@AString@@QAEXPB_W@Z:PROC	; AString::SetFromWStr_if_Ascii
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
xdata$x	SEGMENT
__unwindtable$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z$0
__ehfuncinfo$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68816 = -44						; size = 4
_temp$68440 = -36					; size = 12
_splitPos$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z PROC ; COneMethodInfo::ParseMethodFromString
; _this$ = ecx
; Line 423
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 424
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 425
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Find@UString@@QBEH_W@Z			; UString::Find
	mov	DWORD PTR _splitPos$[ebp], eax
; Line 427
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$68440[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 428
	cmp	DWORD PTR _splitPos$[ebp], 0
	jl	SHORT $LN3@ParseMetho
; Line 429
	mov	ecx, DWORD PTR _splitPos$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _temp$68440[ebp]
	call	?DeleteFrom@UString@@QAEXI@Z		; UString::DeleteFrom
$LN3@ParseMetho:
; Line 430
	lea	ecx, DWORD PTR _temp$68440[ebp]
	call	?IsAscii@UString@@QBE_NXZ		; UString::IsAscii
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@ParseMetho
; Line 431
	mov	DWORD PTR $T68816[ebp], -2147024809	; 80070057H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$68440[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T68816[ebp]
	jmp	SHORT $LN4@ParseMetho
$LN2@ParseMetho:
; Line 432
	lea	ecx, DWORD PTR _temp$68440[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?SetFromWStr_if_Ascii@AString@@QAEXPB_W@Z ; AString::SetFromWStr_if_Ascii
; Line 433
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$68440[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 434
	cmp	DWORD PTR _splitPos$[ebp], 0
	jge	SHORT $LN1@ParseMetho
; Line 435
	xor	eax, eax
	jmp	SHORT $LN4@ParseMetho
$LN1@ParseMetho:
; Line 436
	mov	eax, DWORD PTR _splitPos$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Ptr@UString@@QBEPB_WI@Z		; UString::Ptr
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 437
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseParamsFromString@CMethodProps@@QAEJABVUString@@@Z ; CMethodProps::ParseParamsFromString
$LN4@ParseMetho:
; Line 438
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ParseMetho
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN10@ParseMetho:
	DD	1
	DD	$LN9@ParseMetho
$LN9@ParseMetho:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN7@ParseMetho
$LN7@ParseMetho:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z$0:
	lea	ecx, DWORD PTR _temp$68440[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z ENDP ; COneMethodInfo::ParseMethodFromString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Empty@AString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@AString@@QAEXXZ PROC				; AString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@AString@@QAEXXZ ENDP				; AString::Empty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsAscii@UString@@QBE_NXZ
_TEXT	SEGMENT
_i$66810 = -16						; size = 4
_s$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
?IsAscii@UString@@QBE_NXZ PROC				; UString::IsAscii, COMDAT
; _this$ = ecx
; Line 559
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 560
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	DWORD PTR _len$[ebp], eax
; Line 561
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _s$[ebp], ecx
; Line 562
	mov	DWORD PTR _i$66810[ebp], 0
	jmp	SHORT $LN4@IsAscii
$LN3@IsAscii:
	mov	edx, DWORD PTR _i$66810[ebp]
	add	edx, 1
	mov	DWORD PTR _i$66810[ebp], edx
$LN4@IsAscii:
	mov	eax, DWORD PTR _i$66810[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	jae	SHORT $LN2@IsAscii
; Line 563
	mov	ecx, DWORD PTR _i$66810[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	cmp	eax, 128				; 00000080H
	jl	SHORT $LN1@IsAscii
; Line 564
	xor	al, al
	jmp	SHORT $LN5@IsAscii
$LN1@IsAscii:
; Line 565
	jmp	SHORT $LN3@IsAscii
$LN2@IsAscii:
	mov	al, 1
$LN5@IsAscii:
; Line 566
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsAscii@UString@@QBE_NXZ ENDP				; UString::IsAscii
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeleteFrom@UString@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?DeleteFrom@UString@@QAEXI@Z PROC			; UString::DeleteFrom, COMDAT
; _this$ = ecx
; Line 604
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 605
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@DeleteFrom
; Line 607
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
$LN2@DeleteFrom:
; Line 610
	mov	esp, ebp
	pop	ebp
	ret	4
?DeleteFrom@UString@@QAEXI@Z ENDP			; UString::DeleteFrom
_TEXT	ENDS
PUBLIC	?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z ; COneMethodInfo::ParseMethodFromPROPVARIANT
xdata$x	SEGMENT
__unwindtable$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$0
__ehfuncinfo$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68833 = -32						; size = 12
$T68832 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_realName$ = 8						; size = 4
_value$ = 12						; size = 4
?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z PROC ; COneMethodInfo::ParseMethodFromPROPVARIANT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\methodprops.cpp
; Line 441
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 442
	mov	ecx, DWORD PTR _realName$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@ParseMetho@2
	push	OFFSET $SG68453
	mov	ecx, DWORD PTR _realName$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z ; StringsAreEqualNoCase_Ascii
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@ParseMetho@2
; Line 443
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _realName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseParamsFromPROPVARIANT@CMethodProps@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z ; CMethodProps::ParseParamsFromPROPVARIANT
	jmp	SHORT $LN3@ParseMetho@2
$LN2@ParseMetho@2:
; Line 445
	mov	ecx, DWORD PTR _value$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 8
	je	SHORT $LN1@ParseMetho@2
; Line 446
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN3@ParseMetho@2
$LN1@ParseMetho@2:
; Line 447
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	ecx, DWORD PTR $T68833[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR $T68833[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ParseMethodFromString@COneMethodInfo@@QAEJABVUString@@@Z ; COneMethodInfo::ParseMethodFromString
	mov	DWORD PTR $T68832[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T68833[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T68832[ebp]
$LN3@ParseMetho@2:
; Line 448
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z$0:
	lea	ecx, DWORD PTR $T68833[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ParseMethodFromPROPVARIANT@COneMethodInfo@@QAEJABVUString@@ABUtagPROPVARIANT@@@Z ENDP ; COneMethodInfo::ParseMethodFromPROPVARIANT
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@UCProp@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCProp@@@@QBEIXZ PROC		; CObjectVector<CProp>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCProp@@@@QBEIXZ ENDP		; CObjectVector<CProp>::Size
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QBEABQAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z PROC	; CObjectVector<CProp>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCProp@@@@QBEABUCProp@@I@Z ENDP	; CObjectVector<CProp>::operator[]
_TEXT	ENDS
PUBLIC	?Add@?$CRecordVector@PAX@@QAEIQAX@Z		; CRecordVector<void *>::Add
PUBLIC	??0CProp@@QAE@ABU0@@Z				; CProp::CProp
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z$0
__ehfuncinfo$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T68845 = -24						; size = 4
$T68844 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z PROC	; CObjectVector<CProp>::Add, COMDAT
; _this$ = ecx
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68845[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T68845[ebp], 0
	je	SHORT $LN3@Add
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T68845[ebp]
	call	??0CProp@@QAE@ABU0@@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Add
$LN3@Add:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Add:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T68844[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T68844[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z$0:
	mov	eax, DWORD PTR $T68845[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@?$CObjectVector@UCProp@@@@QAEIABUCProp@@@Z ENDP	; CObjectVector<CProp>::Add
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ$0
__ehfuncinfo$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ
_TEXT	SEGMENT
tv71 = -32						; size = 4
$T68858 = -28						; size = 4
$T68857 = -24						; size = 4
_p$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ PROC	; CObjectVector<CProp>::AddNew, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68858[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T68858[ebp], 0
	je	SHORT $LN3@AddNew
	mov	ecx, DWORD PTR $T68858[ebp]
	call	??0CProp@@QAE@XZ			; CProp::CProp
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@AddNew
$LN3@AddNew:
	mov	DWORD PTR tv71[ebp], 0
$LN4@AddNew:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T68857[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T68857[ebp]
	mov	DWORD PTR _p$[ebp], ecx
; Line 466
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
; Line 467
	mov	eax, DWORD PTR _p$[ebp]
; Line 468
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ$0:
	mov	eax, DWORD PTR $T68858[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddNew@?$CObjectVector@UCProp@@@@QAEAAUCProp@@XZ ENDP	; CObjectVector<CProp>::AddNew
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@VUString@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@VUString@@@@QBEIXZ PROC		; CObjectVector<UString>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@VUString@@@@QBEIXZ ENDP		; CObjectVector<UString>::Size
_TEXT	ENDS
PUBLIC	??0?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjectVector@VUString@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@VUString@@@@QAE@XZ PROC		; CObjectVector<UString>::CObjectVector<UString>, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@VUString@@@@QAE@XZ ENDP		; CObjectVector<UString>::CObjectVector<UString>
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z PROC	; CObjectVector<UString>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ENDP	; CObjectVector<UString>::operator[]
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0
__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T68878 = -24						; size = 4
$T68877 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z PROC ; CObjectVector<UString>::Add, COMDAT
; _this$ = ecx
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68878[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T68878[ebp], 0
	je	SHORT $LN3@Add@2
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T68878[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Add@2
$LN3@Add@2:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Add@2:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T68877[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T68877[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0:
	mov	eax, DWORD PTR $T68878[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ENDP ; CObjectVector<UString>::Add
PUBLIC	??1?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::~CRecordVector<void *>
PUBLIC	??_GUString@@QAEPAXI@Z				; UString::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@VUString@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@VUString@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@VUString@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T68891 = -28						; size = 4
$T68890 = -24						; size = 4
_i$68502 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@VUString@@@@QAE@XZ PROC		; CObjectVector<UString>::~CObjectVector<UString>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$68502[ebp], eax
$LN2@CObjectVec:
	cmp	DWORD PTR _i$68502[ebp], 0
	je	SHORT $LN3@CObjectVec
; Line 489
	mov	eax, DWORD PTR _i$68502[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$68502[ebp], eax
	mov	ecx, DWORD PTR _i$68502[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T68891[ebp], edx
	mov	eax, DWORD PTR $T68891[ebp]
	mov	DWORD PTR $T68890[ebp], eax
	cmp	DWORD PTR $T68890[ebp], 0
	je	SHORT $LN5@CObjectVec
	push	1
	mov	ecx, DWORD PTR $T68890[ebp]
	call	??_GUString@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec
$LN5@CObjectVec:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec:
	jmp	SHORT $LN2@CObjectVec
$LN3@CObjectVec:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@VUString@@@@QAE@XZ ENDP		; CObjectVector<UString>::~CObjectVector<UString>
PUBLIC	?Clear@?$CRecordVector@PAX@@QAEXXZ		; CRecordVector<void *>::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@?$CObjectVector@VUString@@@@QAEXXZ
_TEXT	SEGMENT
tv75 = -20						; size = 4
$T68904 = -16						; size = 4
$T68903 = -12						; size = 4
_i$68511 = -8						; size = 4
_this$ = -4						; size = 4
?Clear@?$CObjectVector@VUString@@@@QAEXXZ PROC		; CObjectVector<UString>::Clear, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 500
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$68511[ebp], eax
$LN2@Clear:
	cmp	DWORD PTR _i$68511[ebp], 0
	je	SHORT $LN1@Clear
; Line 501
	mov	eax, DWORD PTR _i$68511[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$68511[ebp], eax
	mov	ecx, DWORD PTR _i$68511[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T68904[ebp], edx
	mov	eax, DWORD PTR $T68904[ebp]
	mov	DWORD PTR $T68903[ebp], eax
	cmp	DWORD PTR $T68903[ebp], 0
	je	SHORT $LN5@Clear
	push	1
	mov	ecx, DWORD PTR $T68903[ebp]
	call	??_GUString@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:
	jmp	SHORT $LN2@Clear
$LN1@Clear:
; Line 502
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CRecordVector@PAX@@QAEXXZ	; CRecordVector<void *>::Clear
; Line 503
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CObjectVector@VUString@@@@QAEXXZ ENDP		; CObjectVector<UString>::Clear
_TEXT	ENDS
EXTRN	??0CPropVariant@NCOM@NWindows@@QAE@ABV012@@Z:PROC ; NWindows::NCOM::CPropVariant::CPropVariant
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CProp@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CProp@@QAE@ABU0@@Z PROC				; CProp::CProp, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CPropVariant@NCOM@NWindows@@QAE@ABV012@@Z ; NWindows::NCOM::CPropVariant::CPropVariant
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CProp@@QAE@ABU0@@Z ENDP				; CProp::CProp
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GUString@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GUString@@QAEPAXI@Z PROC				; UString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUString@@QAEPAXI@Z ENDP				; UString::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
$T68918 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::~CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68918[ebp], ecx
	mov	edx, DWORD PTR $T68918[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::~CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@PAX@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@PAX@@QAEXXZ PROC			; CRecordVector<void *>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@PAX@@QAEXXZ ENDP			; CRecordVector<void *>::Clear
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@PAX@@QAEIQAX@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z PROC		; CRecordVector<void *>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ; CRecordVector<void *>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z ENDP		; CRecordVector<void *>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QBEABQAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QBEABQAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QBEABQAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ
_TEXT	SEGMENT
$T68930 = -20						; size = 4
$T68929 = -16						; size = 4
_p$68550 = -12						; size = 4
_newCapacity$68549 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ PROC	; CRecordVector<void *>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$68549[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$68549[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68929[ebp], eax
	mov	eax, DWORD PTR $T68929[ebp]
	mov	DWORD PTR _p$68550[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$68550[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T68930[ebp], edx
	mov	eax, DWORD PTR $T68930[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$68550[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$68549[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ENDP	; CRecordVector<void *>::ReserveOnePosition
_TEXT	ENDS
END

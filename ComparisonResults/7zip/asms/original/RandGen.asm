; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Crypto\RandGen.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	__$ArrayPad$
PUBLIC	?Init@CRandomGenerator@@AAEXXZ			; CRandomGenerator::Init
EXTRN	_Sha256_Final@8:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__imp__QueryPerformanceCounter@4:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	_Sha256_Update@12:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	_Sha256_Init@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\crypto\randgen.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_j$66139 = -168						; size = 4
_tickCount$66137 = -160					; size = 4
_v$66134 = -148						; size = 8
_i$66130 = -136						; size = 4
_w$ = -128						; size = 4
_hash$ = -116						; size = 104
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?Init@CRandomGenerator@@AAEXXZ PROC			; CRandomGenerator::Init
; _this$ = ecx
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 168				; 000000a8H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-168]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 35
	lea	eax, DWORD PTR _hash$[ebp]
	push	eax
	call	_Sha256_Init@4
; Line 38
	mov	esi, esp
	call	DWORD PTR __imp__GetCurrentProcessId@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w$[ebp], eax
; Line 39
	push	4
	lea	ecx, DWORD PTR _w$[ebp]
	push	ecx
	lea	edx, DWORD PTR _hash$[ebp]
	push	edx
	call	_Sha256_Update@12
; Line 40
	mov	esi, esp
	call	DWORD PTR __imp__GetCurrentThreadId@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w$[ebp], eax
; Line 41
	push	4
	lea	eax, DWORD PTR _w$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	_Sha256_Update@12
; Line 49
	mov	DWORD PTR _i$66130[ebp], 0
; Line 51
	jmp	SHORT $LN7@Init
$LN6@Init:
; Line 55
	mov	edx, DWORD PTR _i$66130[ebp]
	add	edx, 1
	mov	DWORD PTR _i$66130[ebp], edx
$LN7@Init:
	cmp	DWORD PTR _i$66130[ebp], 2
	jae	$LN5@Init
; Line 59
	mov	esi, esp
	lea	eax, DWORD PTR _v$66134[ebp]
	push	eax
	call	DWORD PTR __imp__QueryPerformanceCounter@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@Init
; Line 60
	push	8
	lea	ecx, DWORD PTR _v$66134[ebp]
	push	ecx
	lea	edx, DWORD PTR _hash$[ebp]
	push	edx
	call	_Sha256_Update@12
$LN4@Init:
; Line 76
	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tickCount$66137[ebp], eax
; Line 77
	push	4
	lea	eax, DWORD PTR _tickCount$66137[ebp]
	push	eax
	lea	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	_Sha256_Update@12
; Line 79
	mov	DWORD PTR _j$66139[ebp], 0
	jmp	SHORT $LN3@Init
$LN2@Init:
	mov	edx, DWORD PTR _j$66139[ebp]
	add	edx, 1
	mov	DWORD PTR _j$66139[ebp], edx
$LN3@Init:
	cmp	DWORD PTR _j$66139[ebp], 100		; 00000064H
	jae	SHORT $LN1@Init
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	_Sha256_Final@8
; Line 82
	lea	edx, DWORD PTR _hash$[ebp]
	push	edx
	call	_Sha256_Init@4
; Line 83
	push	32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	_Sha256_Update@12
; Line 84
	jmp	SHORT $LN2@Init
$LN1@Init:
; Line 85
	jmp	$LN6@Init
$LN5@Init:
; Line 86
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	eax, DWORD PTR _hash$[ebp]
	push	eax
	call	_Sha256_Final@8
; Line 87
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+32], 0
; Line 88
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@Init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 168				; 000000a8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN15@Init:
	DD	4
	DD	$LN14@Init
$LN14@Init:
	DD	-116					; ffffff8cH
	DD	104					; 00000068H
	DD	$LN10@Init
	DD	-128					; ffffff80H
	DD	4
	DD	$LN11@Init
	DD	-148					; ffffff6cH
	DD	8
	DD	$LN12@Init
	DD	-160					; ffffff60H
	DD	4
	DD	$LN13@Init
$LN13@Init:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN12@Init:
	DB	118					; 00000076H
	DB	0
$LN11@Init:
	DB	119					; 00000077H
	DB	0
$LN10@Init:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	0
?Init@CRandomGenerator@@AAEXXZ ENDP			; CRandomGenerator::Init
_TEXT	ENDS
PUBLIC	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
PUBLIC	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
PUBLIC	__$ArrayPad$
PUBLIC	?Generate@CRandomGenerator@@QAEXPAEI@Z		; CRandomGenerator::Generate
EXTRN	___CxxFrameHandler3:PROC
xdata$x	SEGMENT
__unwindtable$?Generate@CRandomGenerator@@QAEXPAEI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Generate@CRandomGenerator@@QAEXPAEI@Z$0
__ehfuncinfo$?Generate@CRandomGenerator@@QAEXPAEI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Generate@CRandomGenerator@@QAEXPAEI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_i$66188 = -200						; size = 4
_buff$66187 = -192					; size = 32
_salt$66185 = -152					; size = 4
_hash$66184 = -140					; size = 104
_lock$ = -28						; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?Generate@CRandomGenerator@@QAEXPAEI@Z PROC		; CRandomGenerator::Generate
; _this$ = ecx
; Line 98
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Generate@CRandomGenerator@@QAEXPAEI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 188				; 000000bcH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 47					; 0000002fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 99
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	SHORT $LN5@Generate
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@CRandomGenerator@@AAEXXZ		; CRandomGenerator::Init
$LN5@Generate:
; Line 103
	cmp	DWORD PTR _size$[ebp], 0
	je	$LN4@Generate
; Line 107
	lea	edx, DWORD PTR _hash$66184[ebp]
	push	edx
	call	_Sha256_Init@4
; Line 108
	push	32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hash$66184[ebp]
	push	ecx
	call	_Sha256_Update@12
; Line 109
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	eax, DWORD PTR _hash$66184[ebp]
	push	eax
	call	_Sha256_Final@8
; Line 111
	lea	ecx, DWORD PTR _hash$66184[ebp]
	push	ecx
	call	_Sha256_Init@4
; Line 112
	mov	DWORD PTR _salt$66185[ebp], -160257071	; f672abd1H
; Line 113
	push	4
	lea	edx, DWORD PTR _salt$66185[ebp]
	push	edx
	lea	eax, DWORD PTR _hash$66184[ebp]
	push	eax
	call	_Sha256_Update@12
; Line 114
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR _hash$66184[ebp]
	push	edx
	call	_Sha256_Update@12
; Line 116
	lea	eax, DWORD PTR _buff$66187[ebp]
	push	eax
	lea	ecx, DWORD PTR _hash$66184[ebp]
	push	ecx
	call	_Sha256_Final@8
; Line 117
	mov	DWORD PTR _i$66188[ebp], 0
	jmp	SHORT $LN3@Generate
$LN2@Generate:
	mov	edx, DWORD PTR _i$66188[ebp]
	add	edx, 1
	mov	DWORD PTR _i$66188[ebp], edx
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, 1
	mov	DWORD PTR _size$[ebp], eax
$LN3@Generate:
	cmp	DWORD PTR _i$66188[ebp], 32		; 00000020H
	jae	SHORT $LN1@Generate
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN1@Generate
; Line 118
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR _i$66188[ebp]
	mov	al, BYTE PTR _buff$66187[ebp+edx]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 1
	mov	DWORD PTR _data$[ebp], ecx
	jmp	SHORT $LN2@Generate
$LN1@Generate:
; Line 119
	jmp	$LN5@Generate
$LN4@Generate:
; Line 120
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@Generate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN16@Generate:
	DD	4
	DD	$LN15@Generate
$LN15@Generate:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN10@Generate
	DD	-140					; ffffff74H
	DD	104					; 00000068H
	DD	$LN11@Generate
	DD	-152					; ffffff68H
	DD	4
	DD	$LN12@Generate
	DD	-192					; ffffff40H
	DD	32					; 00000020H
	DD	$LN13@Generate
$LN13@Generate:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN12@Generate:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN11@Generate:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	0
$LN10@Generate:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Generate@CRandomGenerator@@QAEXPAEI@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__ehhandler$?Generate@CRandomGenerator@@QAEXPAEI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-196]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Generate@CRandomGenerator@@QAEXPAEI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Generate@CRandomGenerator@@QAEXPAEI@Z ENDP		; CRandomGenerator::Generate
PUBLIC	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z PROC ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 158
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ENDP ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
_TEXT	ENDS
EXTRN	__imp__EnterCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Enter, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__EnterCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Enter
_TEXT	ENDS
PUBLIC	?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
_TEXT	ENDS
PUBLIC	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ PROC ; NWindows::NSynchronization::CCriticalSectionLock::Unlock, COMDAT
; _this$ = ecx
; Line 156
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
_TEXT	ENDS
EXTRN	__imp__LeaveCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Leave, COMDAT
; _this$ = ecx
; Line 150
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Leave
_TEXT	ENDS
PUBLIC	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_CriticalSection@@YAXXZ
text$yc	SEGMENT
??__Eg_CriticalSection@@YAXXZ PROC			; `dynamic initializer for 'g_CriticalSection'', COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\crypto\randgen.cpp
; Line 91
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_CriticalSection
	call	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
	push	OFFSET ??__Fg_CriticalSection@@YAXXZ	; `dynamic atexit destructor for 'g_CriticalSection''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_CriticalSection@@YAXXZ ENDP			; `dynamic initializer for 'g_CriticalSection''
text$yc	ENDS
EXTRN	_CriticalSection_Init@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::CCriticalSection, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_CriticalSection_Init@4
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
_TEXT	ENDS
PUBLIC	??0CRandomGenerator@@QAE@XZ			; CRandomGenerator::CRandomGenerator
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_RandomGenerator@@YAXXZ
text$yc	SEGMENT
??__Eg_RandomGenerator@@YAXXZ PROC			; `dynamic initializer for 'g_RandomGenerator'', COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\crypto\randgen.cpp
; Line 122
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?g_RandomGenerator@@3VCRandomGenerator@@A ; g_RandomGenerator
	call	??0CRandomGenerator@@QAE@XZ		; CRandomGenerator::CRandomGenerator
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_RandomGenerator@@YAXXZ ENDP			; `dynamic initializer for 'g_RandomGenerator''
; Function compile flags: /Odtp /RTCsu
text$yc	ENDS
;	COMDAT ??0CRandomGenerator@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRandomGenerator@@QAE@XZ PROC			; CRandomGenerator::CRandomGenerator, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\randgen.h
; Line 15
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CRandomGenerator@@QAE@XZ ENDP			; CRandomGenerator::CRandomGenerator
_TEXT	ENDS
PUBLIC	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fg_CriticalSection@@YAXXZ
text$yd	SEGMENT
??__Fg_CriticalSection@@YAXXZ PROC			; `dynamic atexit destructor for 'g_CriticalSection'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_CriticalSection
	call	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Fg_CriticalSection@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_CriticalSection''
text$yd	ENDS
EXTRN	__imp__DeleteCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
_TEXT	ENDS
PUBLIC	?g_RandomGenerator@@3VCRandomGenerator@@A	; g_RandomGenerator
_BSS	SEGMENT
?g_RandomGenerator@@3VCRandomGenerator@@A DB 021H DUP (?) ; g_RandomGenerator
	ALIGN	4

_g_CriticalSection DB 018H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_g_CriticalSection$initializer$ DD FLAT:??__Eg_CriticalSection@@YAXXZ
_g_RandomGenerator$initializer$ DD FLAT:??__Eg_RandomGenerator@@YAXXZ
CRT$XCU	ENDS
END
